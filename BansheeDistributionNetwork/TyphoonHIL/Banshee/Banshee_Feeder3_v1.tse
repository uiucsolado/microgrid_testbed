version = 4.2

//
// Saved by sw version: 2020.1 SP2
// Save timestamp: 22-Jun-2020 @ 05:33:32 PM
//

model "Banshee_Feeder3_v1" {
    configuration {
        hil_device = "HIL603"
        hil_configuration_id = 1
        simulation_method = exact
        simulation_time_step = 4e-6
        simulation_discret_scaling = 1.0
        dsp_timer_periods = 100e-6, 50e-3
        ss_calc_method = "systematic elimination"
        enb_pole_shift = True
        enb_gds_oversampling = True
        show_modes = False
        device_ao_limit_enable = True
        cpl_stb = False
        enb_dep_sw_detect = False
        code_section = "external memory"
        data_section = "internal memory"
        sys_sp_rate_1 = 5e-05
        sys_sp_rate_2 = 0.05
        sys_real_type_precision = "default"
        user_real_type_precision = "single precision"
        sys_cpu_optimization = "high"
        user_cpu_optimization = "high"
    }

    component Subsystem Root {
        component src_ground gnd2 {
        }
        [
            position = 8584, 6560
            rotation = down
            hide_name = True
        ]

        component "core/Three Phase Voltage Source" Vs1 {
        }
        [
            position = 8584, 6800
            rotation = right
            scale = -1, 1
            size = 62, 256
        ]

        component Subsystem Coupling2 {
            layout = dynamic
            component "core/Four Phase Core Coupling" "Core Coupling 1" {
                C1 = "88.42e-6"
                R1 = "1"
                fixed_snb_i = "true"
                fixed_snb_u = "true"
            }
            [
                position = 8192, 8192
            ]

            port A {
                position = left:1
                kind = pe
            }
            [
                position = 8136, 8048
            ]

            port B {
                position = left:2
                kind = pe
            }
            [
                position = 8136, 8144
            ]

            port C {
                position = left:3
                kind = pe
            }
            [
                position = 8136, 8240
            ]

            port G {
                position = left:4
                kind = pe
            }
            [
                position = 8136, 8336
            ]

            port a {
                position = right:1
                kind = pe
            }
            [
                position = 8248, 8048
                rotation = down
            ]

            port b {
                position = right:2
                kind = pe
            }
            [
                position = 8248, 8144
                rotation = down
            ]

            port c {
                position = right:3
                kind = pe
            }
            [
                position = 8248, 8240
                rotation = down
            ]

            port g {
                position = right:4
                kind = pe
            }
            [
                position = 8248, 8336
                rotation = down
            ]

            connect "Core Coupling 1.a_in" A as Connection5
            connect "Core Coupling 1.b_in" B as Connection7
            connect "Core Coupling 1.c_in" C as Connection1
            connect "Core Coupling 1.d_in" G as Connection4
            connect "Core Coupling 1.a_out" a as Connection8
            connect "Core Coupling 1.b_out" b as Connection2
            connect "Core Coupling 1.c_out" c as Connection3
            connect "Core Coupling 1.d_out" g as Connection6
        }
        [
            position = 11928, 7864
            rotation = right
            scale = -1, 1
            size = 48, 80
        ]

        component Subsystem F3_CB4 {
            layout = dynamic
            component Subsystem Brk {
                layout = dynamic
                component "core/Triple Pole Single Throw Contactor" S1 {
                    ctrl_src = "Model"
                }
                [
                    position = 8104, 8184
                    rotation = right
                ]

                port C {
                    position = left:1
                    kind = pe
                }
                [
                    position = 8200, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 8104, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port A {
                    position = left:3
                    kind = pe
                }
                [
                    position = 8008, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port c {
                    position = right:1
                    kind = pe
                }
                [
                    position = 8200, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port b {
                    position = right:2
                    kind = pe
                }
                [
                    position = 8104, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port a {
                    position = right:3
                    kind = pe
                }
                [
                    position = 8008, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port control {
                    position = bottom:auto
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8320, 8184
                    scale = -1, 1
                ]

                connect A S1.c_in as Connection6
                connect B S1.b_in as Connection5
                connect S1.a_in C as Connection4
                connect S1.c_out a as Connection1
                connect S1.b_out b as Connection2
                connect S1.a_out c as Connection3
                connect control S1.ctrl_in as Connection7
            }
            [
                position = 8144, 8200
                rotation = right
                size = 64, 64
            ]

            component Subsystem MID_Rly1 {
                layout = dynamic
                component gen_terminator Term5 {
                }
                [
                    position = 8152, 8136
                    rotation = down
                    scale = -1, 1
                ]

                component gen_bus_split "Bus Split2" {
                    outputs = "3"
                }
                [
                    position = 7704, 8000
                    rotation = right
                ]

                component gen_terminator Term4 {
                }
                [
                    position = 8152, 8200
                    rotation = down
                    scale = -1, 1
                ]

                component gen_delay Delay1 {
                    del_length = "int(3.0/60.0/Ts)"
                }
                [
                    position = 7880, 8344
                    rotation = down
                ]

                component gen_probe CB_state {
                }
                [
                    position = 7592, 8344
                    rotation = down
                ]

                component sys_signal_switch "Signal switch1" {
                    threshold = "0.5"
                }
                [
                    position = 7792, 8400
                    rotation = right
                ]

                component src_constant Constant2 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 7776, 8344
                    rotation = right
                ]

                component gen_bus_split "Bus Split1" {
                    outputs = "3"
                }
                [
                    position = 7832, 8000
                    rotation = right
                ]

                component gen_terminator Term3 {
                }
                [
                    position = 8440, 7928
                ]

                component src_constant Constant1 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 8056, 7928
                ]

                component gen_bus_split "Bus Split3" {
                    outputs = "3"
                }
                [
                    position = 7576, 8000
                    rotation = right
                ]

                component Subsystem SEL_787 {
                    layout = dynamic
                    component gen_c_function "pf bitwise" {
                        in_terminal_dimensions_str = "exp_imp inherit;lag_lead inherit;"
                        in_terminal_properties = "inherit exp_imp;inherit lag_lead;"
                        no_feed_inputs = "[u\'\']"
                        no_feed_outputs = "[u\'\']"
                        out_terminal_dimensions_str = "pf_states inherit;"
                        out_terminal_properties = "uint pf_states;"
                        output_fnc = "/*Begin code section*/
pf_states=(uint)exp_imp<<1 | (uint)lag_lead<<2;
/*End code section*/"
                    }
                    [
                        position = 9200, 8416
                    ]

                    component gen_gain Gain1 {
                        gain = "2"
                    }
                    [
                        position = 7536, 8328
                        rotation = right
                    ]

                    component src_scada_input "Control Panel Input1" {
                        execution_rate = "Ts"
                        max = "1"
                        min = "0"
                        unit = ""
                    }
                    [
                        position = 8136, 8192
                    ]

                    component tm_delay "Unit Delay5" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7840, 8392
                        rotation = left
                    ]

                    component gen_sum Sum1 {
                        signs = "5"
                    }
                    [
                        position = 7648, 8384
                    ]

                    component tm_delay "Unit Delay4" {
                    }
                    [
                        position = 9496, 8056
                    ]

                    component gen_gain Gain7 {
                        gain = "2"
                    }
                    [
                        position = 7512, 8624
                    ]

                    component gen_logic_op not {
                        operator = "NOT"
                    }
                    [
                        position = 7440, 8624
                    ]

                    component gen_gain Gain8 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8688
                    ]

                    component gen_sum Sum3 {
                        signs = "3"
                    }
                    [
                        position = 7640, 8624
                    ]

                    component gen_gain Gain5 {
                        gain = "8"
                    }
                    [
                        position = 7512, 8432
                        rotation = left
                    ]

                    component tm_delay "Unit Delay2" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7728, 8304
                        rotation = left
                    ]

                    component gen_c_function bitwise_faults {
                        in_terminal_dimensions_str = "Status inherit;R25 inherit;R27 inherit;R50 inherit;R51 inherit;R59 inherit;Reset inherit;"
                        in_terminal_properties = "inherit Status;inherit R25;inherit R27;inherit R50;inherit R51;inherit R59;inherit Reset;"
                        no_feed_inputs = "[]"
                        no_feed_outputs = "[]"
                        out_terminal_dimensions_str = "fault_status inherit;"
                        out_terminal_properties = "uint fault_status;"
                        output_fnc = "/*Begin code section*/
fault_status= (uint)Status<<1 | (uint)R25<<2 | (uint)R27<<3 | (uint)R50<<4 | (uint)R51<<5 | (uint)R59<<6 | (uint)Reset<<7;
/*End code section*/"
                    }
                    [
                        position = 9200, 8272
                    ]

                    component gen_gain Gain4 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8384
                    ]

                    component gen_bus_join "Bus Join1" {
                        inputs = "25"
                    }
                    [
                        position = 7928, 8080
                    ]

                    component gen_gain Gain6 {
                        gain = "16"
                    }
                    [
                        position = 7584, 8456
                        rotation = left
                    ]

                    component gen_logic_op "Logical operator1" {
                        inputs = "4"
                        operator = "OR"
                    }
                    [
                        position = 8720, 8128
                        rotation = left
                    ]

                    component gen_gain normalize {
                        gain = "np.sqrt(3.0)/13800.0"
                    }
                    [
                        position = 7312, 7752
                    ]

                    component gen_probe Q {
                    }
                    [
                        position = 7376, 7648
                    ]

                    component gen_probe P {
                    }
                    [
                        position = 7376, 7600
                    ]

                    component Subsystem Relay_Param {
                        layout = dynamic
                        component src_constant dV_threshold {
                            execution_rate = "Ts"
                            value = "dV_threshold"
                        }
                        [
                            position = 8088, 7648
                        ]

                        component src_constant VRMSLL {
                            execution_rate = "Ts"
                            value = "VRMSLL"
                        }
                        [
                            position = 8088, 7592
                        ]

                        component src_constant Initial_status {
                            execution_rate = "Ts"
                            value = "Initial_status"
                        }
                        [
                            position = 8088, 7992
                        ]

                        component sys_signal_switch "Signal switch1" {
                            threshold = "0.5"
                        }
                        [
                            position = 9104, 7808
                            scale = 1, -1
                        ]

                        component src_constant angle_threshold {
                            execution_rate = "Ts"
                            value = "angle_threshold"
                        }
                        [
                            position = 8088, 7704
                        ]

                        component gen_bus_join "Bus Join1" {
                            inputs = "4"
                        }
                        [
                            position = 8296, 7800
                            rotation = right
                        ]

                        component src_constant 27P_59P_tripDelay {
                            execution_rate = "Ts"
                            value = "R27P_R59P_tripDelay"
                        }
                        [
                            position = 8088, 7872
                        ]

                        component src_constant dF_threshold {
                            execution_rate = "Ts"
                            value = "dF_threshold"
                        }
                        [
                            position = 8088, 7760
                        ]

                        component src_constant CT_primary {
                            execution_rate = "Ts"
                            value = "CT_primary"
                        }
                        [
                            position = 8088, 7928
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "3"
                        }
                        [
                            position = 8104, 8192
                            rotation = down
                            scale = -1, -1
                        ]

                        component Subsystem Islanded_param {
                            layout = dynamic
                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup2"
                            }
                            [
                                position = 8120, 7888
                                rotation = right
                            ]

                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType2"
                            }
                            [
                                position = 8240, 7888
                                rotation = right
                            ]

                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup2"
                            }
                            [
                                position = 8296, 7856
                                rotation = right
                            ]

                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup2"
                            }
                            [
                                position = 8400, 7856
                                rotation = right
                            ]

                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay2"
                            }
                            [
                                position = 8352, 7888
                                rotation = right
                            ]

                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7920
                                rotation = right
                            ]

                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup2"
                            }
                            [
                                position = 8072, 7856
                                rotation = right
                            ]

                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8544, 8048
                            ]

                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial2"
                            }
                            [
                                position = 8192, 7856
                                rotation = right
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7856
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7888
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7888
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8696, 8048
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8744, 7928
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 9224, 8040
                            size = 216, 104
                        ]

                        component Subsystem Reset {
                            layout = dynamic
                            component gen_logic_op or {
                                operator = "OR"
                            }
                            [
                                position = 8152, 8192
                            ]

                            component Subsystem detect_change {
                                layout = dynamic
                                component tm_delay "Unit Delay1" {
                                }
                                [
                                    position = 8144, 8200
                                ]

                                component gen_rel_op "Relational operator1" {
                                    relational_op = "!="
                                }
                                [
                                    position = 8240, 8192
                                ]

                                port Out1 {
                                    label = "Out"
                                    position = right:1
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8304, 8192
                                ]

                                port In3 {
                                    label = "In"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8032, 8200
                                ]

                                junction Junction1 sp
                                [
                                    position = 8080, 8200
                                ]

                                connect Junction1 In3 as Connection1
                                connect "Relational operator1.in" Junction1 as Connection2
                                connect "Relational operator1.out" Out1 as Connection3
                                connect "Unit Delay1.in" Junction1 as Connection4
                                connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                            }
                            [
                                position = 8248, 8192
                                size = 48, 48
                            ]

                            port reset {
                                label = "Reset"
                                position = right:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8336, 8152
                            ]

                            port op_mode {
                                label = "Op_mode"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8344, 8240
                            ]

                            port "Reset in" {
                                label = "Reset in"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8168
                            ]

                            port "op_mode in" {
                                label = "op_mode in"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8224
                            ]

                            junction Junction1 sp
                            [
                                position = 8096, 8224
                            ]

                            connect Junction1 "op_mode in" as Connection1
                            connect detect_change.Out1 reset as Connection5
                            connect op_mode Junction1 as Connection6
                            connect or.in1 Junction1 as Connection3
                            connect or.in "Reset in" as Connection2
                            connect or.out detect_change.In3 as Connection4
                        }
                        [
                            position = 8280, 8192
                            rotation = down
                            scale = -1, -1
                            size = 104, 104
                        ]

                        component Subsystem Grid_Tied_param {
                            layout = dynamic
                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7904
                                rotation = right
                            ]

                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType1"
                            }
                            [
                                position = 8240, 7880
                                rotation = right
                            ]

                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup1"
                            }
                            [
                                position = 8080, 7840
                                rotation = right
                            ]

                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup1"
                            }
                            [
                                position = 8416, 7840
                                rotation = right
                            ]

                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8552, 8040
                            ]

                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup1"
                            }
                            [
                                position = 8120, 7880
                                rotation = right
                            ]

                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay1"
                            }
                            [
                                position = 8352, 7880
                                rotation = right
                            ]

                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup1"
                            }
                            [
                                position = 8312, 7840
                                rotation = right
                            ]

                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial1"
                            }
                            [
                                position = 8200, 7840
                                rotation = right
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7840
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7880
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7880
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8704, 8040
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8776, 7936
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 8872, 7728
                            size = 216, 104
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8160
                        ]

                        port reset {
                            label = "reset"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8224
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8360, 7856
                        ]

                        port Initial_condition {
                            label = "Initial_condition"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8192, 7992
                        ]

                        port from_Modbus {
                            label = "from_Modbus"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7992, 8192
                        ]

                        port relay_param {
                            label = "relay_param"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9200, 7808
                        ]

                        tag Goto4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8208, 7544
                        ]

                        tag Goto2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7872
                        ]

                        tag From1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7696
                        ]

                        tag From3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7760
                        ]

                        tag Goto1 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8232, 8280
                        ]

                        tag From2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8616, 7728
                        ]

                        tag From4 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 9104, 7904
                            rotation = right
                            scale = 1, -1
                        ]

                        tag Goto3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7928
                        ]

                        junction Junction1 sp
                        [
                            position = 8152, 7592
                        ]

                        junction Junction2 sp
                        [
                            position = 8736, 7696
                        ]

                        junction Junction3 sp
                        [
                            position = 8712, 7728
                        ]

                        junction Junction4 sp
                        [
                            position = 8688, 7760
                        ]

                        connect "Bus Join1.in" Junction1 as Connection54
                        connect "Bus Join1.in2" angle_threshold.out as Connection48
                        connect "Bus Join1.in3" dF_threshold.out as Connection49
                        connect "Bus Join1.in1" dV_threshold.out as Connection47
                        connect "Bus Split1.out1" "Reset.Reset in" as Connection75
                        connect "Bus Split1.in" from_Modbus as Connection42
                        connect From1 Junction2 as Connection60
                        connect From2 Junction3 as Connection63
                        connect From3 Junction4 as Connection66
                        connect From4 "Signal switch1.in2" as Connection71
                        connect Goto1 "Bus Split1.out2" as Connection45
                        connect Goto2 27P_59P_tripDelay.out as Connection51
                        connect Goto3 CT_primary.out as Connection52
                        connect Goto4 Junction1 as Connection56
                        connect Initial_condition Initial_status.out as Connection53
                        connect Islanded_param.VRMSLL Junction2 as Connection62
                        connect Islanded_param.27P_59P_tripDelay Junction3 as Connection65
                        connect Islanded_param.CT_primary Junction4 as Connection68
                        connect Junction1 VRMSLL.out as Connection55
                        connect Junction2 Grid_Tied_param.VRMSLL as Connection61
                        connect Junction3 Grid_Tied_param.27P_59P_tripDelay as Connection64
                        connect Junction4 Grid_Tied_param.CT_primary as Connection67
                        connect "Reset.op_mode in" "Bus Split1.out" as Connection76
                        connect Reset.op_mode op_mode as Connection43
                        connect Reset.reset reset as Connection44
                        connect "Signal switch1.in1" Grid_Tied_param.relay_param as Connection73
                        connect "Signal switch1.in" Islanded_param.relay_param as Connection72
                        connect relay_param "Signal switch1.out" as Connection74
                        connect relay_paramR25 "Bus Join1.out" as Connection50
                    }
                    [
                        position = 8344, 7976
                        size = 168, 160
                    ]

                    component Subsystem "State Condition Mng" {
                        layout = dynamic
                        component gen_logic_op not1 {
                            operator = "NOT"
                        }
                        [
                            position = 8032, 8264
                        ]

                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8120, 8352
                            scale = 1, -1
                        ]

                        component gen_c_function "Trip_out mng fnc" {
                            in_terminal_dimensions_str = "bool_R25 inherit;op_mode_in inherit;trip_in inherit;enable inherit;initial_condition inherit;activate_logic inherit;"
                            in_terminal_properties = "real bool_R25;inherit op_mode_in;inherit trip_in;inherit enable;inherit initial_condition;inherit activate_logic;"
                            init_fnc = "/*Begin code section*/
trip_out = initial_condition;
/*End code section*/"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "trip_out inherit;"
                            out_terminal_properties = "real trip_out;"
                            output_fnc = "/*Begin code section*/
if(enable && activate_logic){
    if(op_mode_in==0){
        trip_out = trip_in*bool_R25;
    }
    else if(op_mode_in==1){
        trip_out = 1*bool_R25;
    }
    else if(op_mode_in==2){
        trip_out=0;
    }
}
/*End code section*/"
                        }
                        [
                            position = 8424, 8208
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8200, 8336
                            scale = 1, -1
                        ]

                        component gen_logic_op not {
                            operator = "NOT"
                        }
                        [
                            position = 7840, 8200
                        ]

                        component Subsystem detect_change {
                            layout = dynamic
                            component tm_delay "Unit Delay1" {
                            }
                            [
                                position = 8144, 8200
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "!="
                            }
                            [
                                position = 8240, 8192
                            ]

                            port Out1 {
                                label = "Out"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8304, 8192
                            ]

                            port In3 {
                                label = "In"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8032, 8200
                            ]

                            junction Junction1 sp
                            [
                                position = 8080, 8200
                            ]

                            connect Junction1 In3 as Connection1
                            connect "Relational operator1.in" Junction1 as Connection2
                            connect "Relational operator1.out" Out1 as Connection3
                            connect "Unit Delay1.in" Junction1 as Connection4
                            connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                        }
                        [
                            position = 7960, 8368
                            size = 48, 48
                        ]

                        port Trip_in {
                            label = "Trip_in"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7768, 8200
                        ]

                        port R25 {
                            label = "R25"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8232, 8128
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8272, 8160
                        ]

                        port trip_out {
                            label = "trip_out"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8536, 8208
                        ]

                        port enable {
                            label = "enable"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7952, 8264
                        ]

                        port initial_condition {
                            label = "initial_condition"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8248, 8232
                        ]

                        junction Junction2 sp
                        [
                            position = 7984, 8264
                        ]

                        junction Junction3 sp
                        [
                            position = 7904, 8200
                        ]

                        connect Junction2 enable as Connection150
                        connect Junction3 not.out as Connection158
                        connect R25 "Trip_out mng fnc.bool_R25" as Connection144
                        connect "SR Flip Flop1.r_in" not1.out as Connection136
                        connect Termination1.in "SR Flip Flop1.out_n" as Connection138
                        connect "Trip_out mng fnc.enable" Junction2 as Connection151
                        connect "Trip_out mng fnc.trip_in" Junction3 as Connection157
                        connect "Trip_out mng fnc.activate_logic" "SR Flip Flop1.out" as Connection154
                        connect detect_change.In3 Junction3 as Connection159
                        connect detect_change.Out1 "SR Flip Flop1.s_in" as Connection156
                        connect initial_condition "Trip_out mng fnc.initial_condition" as Connection152
                        connect not.in Trip_in as Connection139
                        connect not1.in Junction2 as Connection149
                        connect op_mode "Trip_out mng fnc.op_mode_in" as Connection145
                        connect trip_out "Trip_out mng fnc.trip_out" as Connection167
                    }
                    [
                        position = 9336, 8056
                        size = 128, 136
                    ]

                    component Subsystem R50512761 {
                        layout = dynamic
                        component gen_bus_split "Bus Split1" {
                            outputs = "10"
                        }
                        [
                            position = 7560, 8248
                            rotation = left
                        ]

                        component src_constant Ts {
                            execution_rate = "Ts"
                            value = "Ts"
                        }
                        [
                            position = 7696, 7712
                            rotation = right
                        ]

                        component gen_c_function Relays {
                            global_variables = "real R50;real R51;real R27;real R59;real n50;real n51;real n59;real n27;real t59;real t50;real t51;real bool_27;real t27;real bool_59;uint i;real bool_51;real bool_50;real A;real B;real P;real Ipu50;real Ipu51;real CT_tap;real ratio[3];real M[3];real t51s[3];real Iinst[3];real Irms[3];real Vrms[3];"
                            in_terminal_dimensions_str = "enable inherit;Ts inherit;Reset inherit;IinstA inherit;IinstB inherit;IinstC inherit;IrmsA inherit;IrmsB inherit;IrmsC inherit;VrmsA inherit;VrmsB inherit;VrmsC inherit;VRMSLN inherit;CT_p inherit;IOC_pickup inherit;IOC_tripDelay inherit;TOC_pickup inherit;curveType inherit;timeDial inherit;UV_pickup inherit;OV_pickup inherit;UVOV_tripDelay inherit;"
                            in_terminal_properties = "real enable;inherit Ts;inherit Reset;inherit IinstA;inherit IinstB;inherit IinstC;inherit IrmsA;inherit IrmsB;inherit IrmsC;inherit VrmsA;inherit VrmsB;inherit VrmsC;inherit VRMSLN;inherit CT_p;inherit IOC_pickup;inherit IOC_tripDelay;inherit TOC_pickup;inherit curveType;inherit timeDial;inherit UV_pickup;inherit OV_pickup;inherit UVOV_tripDelay;"
                            init_fnc = "/*Begin code section*/
R50=0;
R51=0;
R27=0;
R59=0;

n50=0;
n51=0;
n59=0;
n27=0;

CT_tap = 1.0;

A = 5.67;
B = 0.0352;
P = 2.0;

t59 = 0;
t50 = 0;
t51 = 0;
t27 = 0;

bool_27 = 0;
bool_59 = 0;
bool_51 = 0;
bool_50 = 0;
/*End code section*/"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "trip50 inherit;trip51 inherit;trip27 inherit;trip59 inherit;"
                            out_terminal_properties = "real trip50;real trip51;real trip27;real trip59;"
                            output_fnc = "/*Begin code section*/
Iinst[0] = fabs(IinstA);
Iinst[1] = fabs(IinstB);
Iinst[2] = fabs(IinstC);

Irms[0] = IrmsA;
Irms[1] = IrmsB;
Irms[2] = IrmsC;

Vrms[0] = VrmsA;
Vrms[1] = VrmsB;
Vrms[2] = VrmsC;

if (Reset==1) {
    R50=0;
    R51=0;
    R59=0;
    R27=0;
    bool_50 = 0.0;
}

for(i=0; i<3; i++){
    Iinst[i] = Iinst[i]*5.0/CT_p;
    Irms[i] = Irms[i]*5.0/CT_p;
}

if(curveType==1){
    A = 0.0104;
    B = 0.0226;
    P = 0.02;
}
else if(curveType==2){
    A = 5.95;
    B = 0.180;
    P = 2.0;
}
else if(curveType==3){
    A = 3.88;
    B = 0.0923;
    P = 2.0;
}
else{
    A = 5.67;
    B = 0.0352;
    P = 2.0;
}

if (!((R50 == 1) || (R51 == 1))&&(enable==1)){
    
    if((UV_pickup>1)||(UV_pickup==0)){
        UV_pickup = 0.9;
    }
    if((OV_pickup<1)||(OV_pickup==0)){
        OV_pickup = 1.1;
    }
    
    Ipu50 = IOC_pickup*CT_tap*sqrt(2.0);
    Ipu51 = TOC_pickup*CT_tap;
    
    for(i=0; i<3; i++){
        ratio[i] = Vrms[i]/VRMSLN;
        M[i] = Irms[i]/Ipu51;
        if(M[i]<=1.0){
            t51s[i] = 1e6;
        }
        else{
            t51s[i] = timeDial*(B+(A/(pow(M[i],P)-1)));
        }
    }
    
    t27 = 0.004167 + UVOV_tripDelay;
    t50 = 0.004167 + IOC_tripDelay;
    t59 = 0.004167 + UVOV_tripDelay;
    
    if((t51s[0]<=t51s[1])&&(t51s[0]<=t51s[2])){
        t51 = t51s[0];
    }
    else if(t51s[1]<=t51s[2]){
        t51 = t51s[1];
    }
    else{
        t51 = t51s[2];
    }
    
    for(i=0; i<3; i++){
        if(ratio[i]<=UV_pickup){
            bool_27 = 1;
            break;
        }
        else{
            bool_27 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Irms[i]>Ipu51){
            bool_51 = 1;
            break;
        }
        else{
            bool_51 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Iinst[i]>Ipu50){
            bool_50 = 1;
            break;
        }
    }
    for(i=0; i<3; i++){
        if(ratio[i]>=OV_pickup){
            bool_59 = 1;
            break;
        }
        else{
            bool_59 = 0;
        }
    }
    //bool_27 = ((ratio[0]<=UV_pickup)+(ratio[1]<=UV_pickup)+(ratio[2]<=UV_pickup))>0;
    //bool_59 = ((ratio[0]>=OV_pickup)+(ratio[1]>=OV_pickup)+(ratio[2]>=OV_pickup))>0;
    //bool_50 = ((Iinst[0]>Ipu50)+(Iinst[1]>Ipu50)+(Iinst[2]>Ipu50))>0;
    //bool_51 = ((Irms[0]>Ipu51)+(Irms[1]>Ipu51)+(Irms[2]>Ipu51))>0;
    
    n50 *= bool_50;
    n51 *= bool_51;
    n27 *= bool_27;
    n59 *= bool_59;

    n50 += bool_50  * Ts;
    n51 += bool_51  * Ts;
    n27 += bool_27  * Ts;
    n59 += bool_59  * Ts;

    if(n50 > t50)
        R50 = 1;
    else
        R50 = 0;

    if(n51 > t51)
        R51 = 1;
    else
        R51 = 0;

    if(n27 > t27)
        R27 = 1;
    else
        R27 = 0;

    if(n59 > t59)
        R59 = 1;
    else
        R59 = 0;
}

trip50 = R50;
trip51 = R51;
trip27 = R27;
trip59 = R59;
/*End code section*/"
                        }
                        [
                            position = 7784, 8008
                        ]

                        port trip_50 {
                            label = "trip_50"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7848
                        ]

                        port trip_51 {
                            label = "trip_51"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7952
                        ]

                        port trip_59 {
                            label = "trip_59"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8160
                        ]

                        port trip_27 {
                            label = "trip_27"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8056
                        ]

                        port relay_param {
                            label = "Relay Param"
                            position = left:12
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7560, 8328
                            rotation = left
                        ]

                        port Irms_c {
                            label = "Irms_c"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7368, 7752
                            rotation = right
                        ]

                        port Irms_a {
                            label = "Irms_a"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7472, 7752
                            rotation = right
                        ]

                        port Enable {
                            label = "Enable"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7736, 7752
                            rotation = right
                        ]

                        port Iinst_a {
                            label = "Iinst_a"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7608, 7712
                            rotation = right
                        ]

                        port Irms_b {
                            label = "Irms_b"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7424, 7712
                            rotation = right
                        ]

                        port Iinst_b {
                            label = "Iinst_b"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7568, 7752
                            rotation = right
                        ]

                        port Reset {
                            label = "Reset"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7656, 7752
                            rotation = right
                        ]

                        port Iinst_c {
                            label = "Iinst_c"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7520, 7712
                            rotation = right
                        ]

                        port Vrms_b {
                            label = "Vrms_b"
                            position = left:10
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7256, 7752
                            rotation = right
                        ]

                        port Vrms_c {
                            label = "Vrms_c"
                            position = left:11
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7200, 7712
                            rotation = right
                        ]

                        port Vrms_a {
                            label = "Vrms_a"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7312, 7712
                            rotation = right
                        ]

                        comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus split:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                        [
                            position = 7728, 8224
                        ]

                        connect "Bus Split1.out5" Relays.curveType as Connection41
                        connect "Bus Split1.out3" Relays.IOC_tripDelay as Connection43
                        connect "Bus Split1.out4" Relays.TOC_pickup as Connection42
                        connect "Bus Split1.out7" Relays.UV_pickup as Connection39
                        connect "Bus Split1.out6" Relays.timeDial as Connection40
                        connect "Bus Split1.out" Relays.VRMSLN as Connection46
                        connect "Bus Split1.out8" Relays.OV_pickup as Connection38
                        connect "Bus Split1.out2" Relays.IOC_pickup as Connection44
                        connect "Bus Split1.out9" Relays.UVOV_tripDelay as Connection37
                        connect "Bus Split1.out1" Relays.CT_p as Connection45
                        connect "Bus Split1.in" relay_param as Connection36
                        connect Enable Relays.enable as Connection47
                        connect Iinst_a Relays.IinstA as Connection50
                        connect Iinst_b Relays.IinstB as Connection51
                        connect Iinst_c Relays.IinstC as Connection52
                        connect Irms_a Relays.IrmsA as Connection53
                        connect Irms_b Relays.IrmsB as Connection54
                        connect Irms_c Relays.IrmsC as Connection55
                        connect Reset Relays.Reset as Connection49
                        connect Ts.out Relays.Ts as Connection48
                        connect Vrms_a Relays.VrmsA as Connection56
                        connect Vrms_b Relays.VrmsB as Connection57
                        connect Vrms_c Relays.VrmsC as Connection58
                        connect trip_27 Relays.trip27 as Connection77
                        connect trip_50 Relays.trip50 as Connection76
                        connect trip_51 Relays.trip51 as Connection75
                        connect trip_59 Relays.trip59 as Connection78
                    }
                    [
                        position = 8424, 8328
                        size = 144, 304
                    ]

                    component Subsystem "Relay 25-Sync Check1" {
                        layout = dynamic
                        component gen_rel_op "Relational operator1" {
                        }
                        [
                            position = 8464, 7856
                        ]

                        component gen_logic_op "Logical operator7" {
                            operator = "OR"
                        }
                        [
                            position = 8632, 7888
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "4"
                        }
                        [
                            position = 7808, 8424
                        ]

                        component src_constant Constant2 {
                            execution_rate = "Ts"
                            value = "[2]"
                        }
                        [
                            position = 8368, 7848
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8808, 7904
                        ]

                        component gen_logic_op "Logical operator3" {
                            inputs = "3"
                        }
                        [
                            position = 8336, 8104
                        ]

                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7784, 7832
                        ]

                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8736, 7864
                        ]

                        component gen_logic_op "Logical operator5" {
                            operator = "OR"
                        }
                        [
                            position = 8544, 7848
                        ]

                        component gen_gain Gain2 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7832
                        ]

                        component gen_c_function "Deadbus fcn" {
                            global_variables = "real threshold;uint a;uint c;uint b;"
                            in_terminal_dimensions_str = "Vbus inherit;Vline inherit;VRMSLL inherit;"
                            in_terminal_properties = "real Vbus;real Vline;real VRMSLL;"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "out inherit;"
                            output_fnc = "/*Begin code section*/
if (VRMSLL > 400)
    threshold=VRMSLL*0.003;
else
    threshold = VRMSLL*0.05;

if ((Vbus > (VRMSLL*0.90)) && (Vbus < (VRMSLL*1.20)) && (Vline < threshold))
    a = 1;
else
    a = 0;

if ((Vline > (VRMSLL*0.90)) && (Vline < (VRMSLL*1.20)) && (Vbus < threshold))
    b = 1;
else
    b = 0;

if ((Vline < threshold) && (Vbus < threshold))
    c = 1;
else
    c = 0;

out = a || b || c;
/*End code section*/"
                        }
                        [
                            position = 8208, 7672
                        ]

                        component gen_gain Gain1 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7776
                        ]

                        component gen_logic_op "Logical operator4" {
                            operator = "OR"
                        }
                        [
                            position = 8888, 8096
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7784, 7776
                        ]

                        component gen_gain Gain3 {
                            gain = "1.0/10.0"
                        }
                        [
                            position = 7776, 8080
                        ]

                        component Subsystem "Voltage Comparator" {
                            layout = dynamic
                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7856, 8048
                            ]

                            component gen_product Product1 {
                            }
                            [
                                position = 7760, 8160
                            ]

                            component gen_c_function "C function1" {
                                in_terminal_dimensions_str = "Vbus inherit;Vline inherit;"
                                in_terminal_properties = "real Vbus;inherit Vline;"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
out=fabs(Vline-Vbus);
/*End code section*/"
                            }
                            [
                                position = 7736, 8040
                            ]

                            component gen_gain Gain1 {
                                gain = "0.01"
                            }
                            [
                                position = 7680, 8200
                            ]

                            port V_bus {
                                label = "V_bus"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port V_line {
                                label = "V_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7928, 8048
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8152
                            ]

                            port dV_threshold {
                                label = "dV_threshold"
                                position = left:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8200
                            ]

                            connect Gain1.in dV_threshold as Connection8
                            connect Product1.in1 Gain1.out as Connection7
                            connect Product1.out "Relational operator1.in1" as Connection9
                            connect Product1.in VRMSLL as Connection6
                            connect "Relational operator1.in" "C function1.out" as Connection2
                            connect "Relational operator1.out" Locked as Connection3
                            connect V_bus "C function1.Vbus" as Connection4
                            connect V_line "C function1.Vline" as Connection5
                        }
                        [
                            position = 8016, 7864
                            size = 112, 208
                        ]

                        component Subsystem "Phase Comparator" {
                            layout = dynamic
                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7808, 8056
                            ]

                            component gen_c_function "C function1" {
                                global_variables = "real mod_L;real wrap_out1;real wrap_out2;real mod_B;real k;real alpha;real PI2;real PI;"
                                in_terminal_dimensions_str = "phase_bus inherit;phase_line inherit;"
                                in_terminal_properties = "real phase_bus;real phase_line;"
                                init_fnc = "/*Begin code section*/
PI = 3.1415926536;
PI2 = 2*PI;
/*End code section*/"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
mod_L=fmod(phase_line, PI2);
mod_B=fmod(phase_bus, PI2);

if (fabs(mod_L - mod_B) > PI) {
    if (mod_L < mod_B)
        mod_B -= PI2;
    else
        mod_B += PI2;
}

out=fabs(mod_L-mod_B)*180.0/PI;
/*End code section*/"
                            }
                            [
                                position = 7656, 8040
                            ]

                            component gen_probe c_out {
                                addr = "17943"
                            }
                            [
                                position = 7768, 8000
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8056
                            ]

                            port wt_grid {
                                label = "wt_grid"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8008
                            ]

                            port wt_gen {
                                label = "wt_gen"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8072
                            ]

                            port angle_threshold {
                                label = "angle_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7576, 8136
                            ]

                            junction Junction1 sp
                            [
                                position = 7736, 8048
                            ]

                            connect Junction1 "C function1.out" as Connection2
                            connect Locked "Relational operator1.out" as Connection3
                            connect "Relational operator1.in" Junction1 as Connection4
                            connect angle_threshold "Relational operator1.in1" as Connection8
                            connect c_out.in Junction1 as Connection5
                            connect wt_gen "C function1.phase_line" as Connection6
                            connect wt_grid "C function1.phase_bus" as Connection7
                        }
                        [
                            position = 8016, 8272
                            size = 112, 88
                        ]

                        component Subsystem "Freq Comparator" {
                            layout = dynamic
                            component gen_c_function "C function1" {
                                in_terminal_dimensions_str = "fbus inherit;fline inherit;"
                                in_terminal_properties = "real fbus;inherit fline;"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
out=fabs(fline-fbus);
/*End code section*/"
                            }
                            [
                                position = 7736, 8040
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7832, 8048
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8048
                            ]

                            port f_bus {
                                label = "f_bus"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port f_line {
                                label = "f_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port dF_threshold {
                                label = "dF_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7728, 8112
                            ]

                            connect "Relational operator1.in" "C function1.out" as Connection6
                            connect "Relational operator1.out" Locked as Connection8
                            connect "Relational operator1.in1" dF_threshold as Connection7
                            connect f_bus "C function1.fbus" as Connection4
                            connect f_line "C function1.fline" as Connection5
                        }
                        [
                            position = 8016, 8104
                            size = 112, 88
                        ]

                        port trip_or {
                            label = "trip_or"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7792
                        ]

                        port mode_in {
                            label = "mode_in"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7896
                        ]

                        port bool_R25 {
                            label = "bool_R25"
                            position = auto:auto
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9032, 8096
                        ]

                        port Va {
                            label = "Va"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7776
                        ]

                        port Vline_a {
                            label = "Vline_A"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7832
                        ]

                        port bus_freq {
                            label = "bus_freq"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8080
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7824, 8104
                        ]

                        port bus_wt {
                            label = "bus_wt"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7776, 8248
                        ]

                        port line_wt {
                            label = "line_wt"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7832, 8272
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8424
                        ]

                        tag From3 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7944
                        ]

                        tag From4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7888
                        ]

                        tag Goto3 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7912, 8432
                        ]

                        tag Goto2 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8416
                            rotation = down
                            scale = -1, 1
                        ]

                        tag From1 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8296
                        ]

                        tag From2 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8128
                        ]

                        tag Goto4 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8448
                        ]

                        tag Goto1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8056, 8400
                            rotation = down
                            scale = -1, 1
                        ]

                        tag From5 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8112, 7688
                        ]

                        junction Junction4 sp
                        [
                            position = 7920, 7832
                        ]

                        junction Junction5 sp
                        [
                            position = 8536, 8104
                        ]

                        junction Junction23 sp
                        [
                            position = 7904, 7776
                        ]

                        connect "Bus Split1.in" relay_paramR25 as Connection69
                        connect Constant2.out "Relational operator1.in" as Connection1
                        connect "Deadbus fcn.Vbus" Junction23 as Connection103
                        connect "Deadbus fcn.out" "SR Flip Flop1.s_in" as Connection137
                        connect "Freq Comparator.Locked" "Logical operator3.in1" as Connection135
                        connect "Freq Comparator.f_line" line_freq as Connection133
                        connect From1 "Phase Comparator.angle_threshold" as Connection74
                        connect From2 "Freq Comparator.dF_threshold" as Connection79
                        connect From3 "Voltage Comparator.dV_threshold" as Connection80
                        connect From4 "Voltage Comparator.VRMSLL" as Connection81
                        connect From5 "Deadbus fcn.VRMSLL" as Connection90
                        connect Gain3.out "Freq Comparator.f_bus" as Connection132
                        connect Goto1 "Bus Split1.out" as Connection70
                        connect Goto2 "Bus Split1.out1" as Connection71
                        connect Goto3 "Bus Split1.out2" as Connection72
                        connect Goto4 "Bus Split1.out3" as Connection73
                        connect Junction23 Gain1.out as Connection16
                        connect Junction4 "Deadbus fcn.Vline" as Connection104
                        connect Junction4 Gain2.out as Connection21
                        connect Junction5 "Logical operator4.in1" as Connection22
                        connect "Logical operator3.out" Junction5 as Connection24
                        connect "Logical operator3.in2" "Phase Comparator.Locked" as Connection134
                        connect "Logical operator5.out" "Logical operator7.in" as Connection26
                        connect "Logical operator5.in1" "Relational operator1.out" as Connection27
                        connect "Logical operator5.in" trip_or as Connection28
                        connect "Logical operator7.in1" Junction5 as Connection29
                        connect "Logical operator7.out" "SR Flip Flop1.r_in" as Connection30
                        connect "Phase Comparator.wt_grid" bus_wt as Connection110
                        connect "RMS value1.out" Gain1.in as Connection93
                        connect "RMS value2.out" Gain2.in as Connection97
                        connect "Relational operator1.in1" mode_in as Connection36
                        connect "SR Flip Flop1.out" "Logical operator4.in" as Connection37
                        connect "SR Flip Flop1.out_n" Termination1.in as Connection38
                        connect Va "RMS value1.in" as Connection101
                        connect Vline_a "RMS value2.in" as Connection102
                        connect "Voltage Comparator.V_bus" Junction23 as Connection47
                        connect "Voltage Comparator.V_line" Junction4 as Connection48
                        connect "Voltage Comparator.Locked" "Logical operator3.in" as Connection136
                        connect bool_R25 "Logical operator4.out" as Connection138
                        connect bus_freq Gain3.in as Connection121
                        connect line_wt "Phase Comparator.wt_gen" as Connection111
                    }
                    [
                        position = 8888, 7800
                        size = 120, 232
                    ]

                    component Subsystem "CALC FROM MEASUREMENTS" {
                        layout = dynamic
                        component gen_gain Gain9 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7032, 9120
                        ]

                        component gen_terminator Termination12 {
                        }
                        [
                            position = 6864, 9312
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7064, 7920
                        ]

                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7064, 7984
                        ]

                        component gen_PQ_transform "PQ Power Meter1" {
                        }
                        [
                            position = 6936, 8952
                        ]

                        component gen_terminator Termination7 {
                        }
                        [
                            position = 7336, 8256
                        ]

                        component gen_terminator Termination9 {
                        }
                        [
                            position = 7336, 8368
                        ]

                        component gen_gain Gain1 {
                            gain = "10"
                        }
                        [
                            position = 7000, 7592
                        ]

                        component gen_terminator Termination13 {
                        }
                        [
                            position = 6864, 9368
                        ]

                        component gen_gain Gain11 {
                            gain = "10.0"
                        }
                        [
                            position = 7432, 8400
                        ]

                        component gen_rms_value "RMS value5" {
                        }
                        [
                            position = 7064, 8192
                        ]

                        component gen_gain Gain4 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8504
                        ]

                        component gen_gain Gain2 {
                            gain = "10"
                        }
                        [
                            position = 7048, 7696
                        ]

                        component gen_gain Gain10 {
                            gain = "100.0"
                        }
                        [
                            position = 7064, 9168
                        ]

                        component msr_phasor_3ph "Three Phase Phasor2" {
                        }
                        [
                            position = 6968, 8560
                        ]

                        component gen_gain Gain3 {
                            gain = "10"
                        }
                        [
                            position = 7064, 7792
                        ]

                        component msr_phasor_3ph "Three Phase Phasor1" {
                        }
                        [
                            position = 6904, 7752
                        ]

                        component gen_gain Gain7 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8824
                        ]

                        component gen_gain Gain8 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8976
                        ]

                        component gen_rms_value "RMS value3" {
                        }
                        [
                            position = 7064, 8048
                        ]

                        component gen_terminator Termination3 {
                        }
                        [
                            position = 7048, 9016
                        ]

                        component "core/Three phase PLL" "Three phase PLL2" {
                        }
                        [
                            position = 6760, 9408
                        ]

                        component gen_terminator Termination5 {
                        }
                        [
                            position = 7304, 8488
                        ]

                        component gen_gain Gain5 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8600
                        ]

                        component gen_rms_value "RMS value6" {
                        }
                        [
                            position = 7064, 8256
                        ]

                        component gen_gain Gain6 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8704
                        ]

                        component "core/Three phase PLL" "Three phase PLL1" {
                        }
                        [
                            position = 7224, 8392
                        ]

                        component gen_terminator Termination4 {
                        }
                        [
                            position = 7088, 9072
                        ]

                        component gen_terminator Termination8 {
                        }
                        [
                            position = 7336, 8312
                        ]

                        component gen_rms_value "RMS value4" {
                        }
                        [
                            position = 7064, 8128
                        ]

                        component gen_terminator Termination10 {
                        }
                        [
                            position = 6856, 9472
                        ]

                        component gen_terminator Termination11 {
                        }
                        [
                            position = 6864, 9256
                        ]

                        component Subsystem Subsystem1 {
                            layout = dynamic
                            component gen_abs Abs2 {
                            }
                            [
                                position = 7720, 7896
                            ]

                            component src_constant Constant2 {
                                execution_rate = "Ts"
                                value = "[0]"
                            }
                            [
                                position = 7752, 8048
                            ]

                            component gen_logic_op "Logical operator1" {
                            }
                            [
                                position = 7976, 7856
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7800
                            ]

                            component src_constant Constant1 {
                                execution_rate = "Ts"
                            }
                            [
                                position = 7768, 7856
                            ]

                            component gen_abs Abs1 {
                            }
                            [
                                position = 7720, 7792
                            ]

                            component gen_rel_op "Relational operator4" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8096
                            ]

                            component gen_rel_op "Relational operator3" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8000
                            ]

                            component gen_rel_op "Relational operator2" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7904
                            ]

                            component Subsystem Subsystem3 {
                                layout = dynamic
                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8008
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8032, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 Out1 as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect "Multiport signal switch1.ctrl" u as Connection4
                                connect "Unit Delay1.out" Junction1 as Connection5
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection6
                            }
                            [
                                position = 8152, 8104
                                size = 112, 56
                            ]

                            component Subsystem Subsystem2 {
                                layout = dynamic
                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7576, 8032
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7648, 8056
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8072, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 "Unit Delay1.out" as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect Out1 Junction1 as Connection4
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection5
                                connect u "Multiport signal switch1.ctrl" as Connection6
                            }
                            [
                                position = 8152, 8008
                                size = 112, 56
                            ]

                            port P {
                                label = "P"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 7992
                            ]

                            port Q {
                                label = "Q"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 8088
                            ]

                            port "Lagging or Leading" {
                                label = "Lag or Lead"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8104
                            ]

                            port "Exporting or Importing" {
                                label = "export or import"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8008
                            ]

                            junction Junction1 sp
                            [
                                position = 7560, 8088
                            ]

                            junction Junction4 sp
                            [
                                position = 7592, 7992
                            ]

                            junction Junction11 sp
                            [
                                position = 7808, 7856
                            ]

                            junction Junction13 sp
                            [
                                position = 7824, 8048
                            ]

                            junction Junction14 sp
                            [
                                position = 8040, 8016
                            ]

                            connect Abs1.in Junction1 as Connection1
                            connect Abs1.out "Relational operator1.in" as Connection2
                            connect Abs2.out "Relational operator2.in" as Connection3
                            connect Constant1.out Junction11 as Connection8
                            connect Constant2.out Junction13 as Connection9
                            connect "Exporting or Importing" Subsystem2.Out1 as Connection10
                            connect Junction11 "Relational operator1.in1" as Connection12
                            connect Junction13 "Relational operator3.in1" as Connection14
                            connect Junction14 Subsystem3.E as Connection45
                            connect Junction4 Abs2.in as Connection39
                            connect Junction4 P as Connection18
                            connect "Lagging or Leading" Subsystem3.Out1 as Connection22
                            connect "Logical operator1.out" Junction14 as Connection44
                            connect Q Junction1 as Connection26
                            connect "Relational operator1.out" "Logical operator1.in" as Connection27
                            connect "Relational operator2.in1" Junction11 as Connection28
                            connect "Relational operator2.out" "Logical operator1.in1" as Connection29
                            connect "Relational operator3.in" Junction4 as Connection42
                            connect "Relational operator3.out" Subsystem2.u as Connection31
                            connect "Relational operator4.in" Junction1 as Connection40
                            connect "Relational operator4.in1" Junction13 as Connection32
                            connect "Relational operator4.out" Subsystem3.u as Connection34
                            connect Subsystem2.E Junction14 as Connection46
                        }
                        [
                            position = 7248, 8912
                            size = 112, 80
                        ]

                        port Ia {
                            label = "Ia"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7920
                        ]

                        port Ia_rms {
                            label = "Ia_rms"
                            position = right:7
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7920
                        ]

                        port Ib {
                            label = "Ib"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7984
                        ]

                        port Ib_rms {
                            label = "Ib_rms"
                            position = right:8
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7984
                        ]

                        port Ic {
                            label = "Ic"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8048
                        ]

                        port Ic_rms {
                            label = "Ic_rms"
                            position = right:9
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8048
                        ]

                        port Va {
                            label = "Va"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8128
                        ]

                        port Va_rms {
                            label = "Va_rms"
                            position = right:10
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8128
                        ]

                        port Vb {
                            label = "Vb"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8192
                        ]

                        port Vc {
                            label = "Vc"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8256
                        ]

                        port Vb_rms {
                            label = "Vb_rms"
                            position = right:11
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8192
                        ]

                        port Vc_rms {
                            label = "Vc_rms"
                            position = right:12
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8256
                        ]

                        port P {
                            label = "P"
                            position = right:19
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7160, 8824
                        ]

                        port Q {
                            label = "Q"
                            position = right:20
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7168, 8976
                        ]

                        port S {
                            label = "S"
                            position = right:21
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7112, 9120
                        ]

                        port pf {
                            label = "pf"
                            position = right:22
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7144, 9168
                        ]

                        port Ia_mag {
                            label = "Ia_mag"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7536
                        ]

                        port Ia_phase {
                            label = "Ia_phase"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7592
                        ]

                        port Ib_mag {
                            label = "Ib_mag"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7640
                        ]

                        port Ib_phase {
                            label = "Ib_phase"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7696
                        ]

                        port Ic_mag {
                            label = "Ic_mag"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7744
                        ]

                        port Ic_phase {
                            label = "Ic_phase"
                            position = right:6
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7792
                        ]

                        port Va_mag {
                            label = "Va_mag"
                            position = right:13
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8456
                        ]

                        port Va_phase {
                            label = "Va_phase"
                            position = right:14
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8504
                        ]

                        port Vb_mag {
                            label = "Vb_mag"
                            position = right:15
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8552
                        ]

                        port Vb_phase {
                            label = "Vb_phase"
                            position = right:16
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8600
                        ]

                        port Vc_mag {
                            label = "Vc_mag"
                            position = right:17
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8648
                        ]

                        port Vc_phase {
                            label = "Vc_phase"
                            position = right:18
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8704
                        ]

                        port "Export Import" {
                            label = "Export Import"
                            position = right:28
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7360, 8928
                        ]

                        port "Lag Lead" {
                            label = "Lag Lead"
                            position = right:27
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7408, 8888
                        ]

                        port bus_freq {
                            label = "Bus_freq"
                            position = right:23
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7512, 8400
                        ]

                        port bus_wt {
                            label = "Bus_wt"
                            position = right:24
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7440, 8456
                        ]

                        port Vline_a {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9352
                        ]

                        port Vline_b {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9408
                        ]

                        port Vline_c {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9464
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = right:25
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9416
                        ]

                        port line_wt {
                            label = "Line_wt"
                            position = right:26
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9464
                        ]

                        junction Junction23 sp
                        [
                            position = 6752, 8128
                        ]

                        junction Junction24 sp
                        [
                            position = 6768, 8192
                        ]

                        junction Junction25 sp
                        [
                            position = 6784, 8256
                        ]

                        junction Junction34 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction35 sp
                        [
                            position = 6656, 7920
                        ]

                        junction Junction37 sp
                        [
                            position = 6672, 7984
                        ]

                        junction Junction39 sp
                        [
                            position = 6752, 8360
                        ]

                        junction Junction41 sp
                        [
                            position = 6768, 8392
                        ]

                        junction Junction42 sp
                        [
                            position = 6784, 8424
                        ]

                        junction Junction44 sp
                        [
                            position = 6768, 8568
                        ]

                        junction Junction45 sp
                        [
                            position = 6784, 8584
                        ]

                        junction Junction46 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction48 sp
                        [
                            position = 6752, 8536
                        ]

                        junction Junction49 sp
                        [
                            position = 6928, 8536
                        ]

                        junction Junction50 sp
                        [
                            position = 7056, 8928
                        ]

                        junction Junction51 sp
                        [
                            position = 7056, 8888
                        ]

                        junction Junction52 sp
                        [
                            position = 6752, 8128
                        ]

                        junction Junction53 sp
                        [
                            position = 6656, 7920
                        ]

                        connect "Export Import" "Subsystem1.Exporting or Importing" as Connection116
                        connect Gain1.out Ia_phase as Connection87
                        connect Gain10.in "PQ Power Meter1.k_factor" as Connection105
                        connect Gain11.in "Three phase PLL1.freq" as Connection107
                        connect Gain2.out Ib_phase as Connection89
                        connect Gain3.in "Three Phase Phasor1.phase3" as Connection91
                        connect Gain4.in "Three Phase Phasor2.phase1" as Connection92
                        connect Gain4.out Va_phase as Connection93
                        connect Gain5.out Vb_phase as Connection95
                        connect Gain6.in "Three Phase Phasor2.phase3" as Connection97
                        connect Gain8.in Junction50 as Connection110
                        connect Gain8.out Q as Connection101
                        connect Gain9.in "PQ Power Meter1.apparent" as Connection103
                        connect Ia Junction35 as Connection2
                        connect Ia_mag "Three Phase Phasor1.out1" as Connection3
                        connect Ia_rms "RMS value1.out" as Connection4
                        connect Ib Junction37 as Connection5
                        connect Ib_rms "RMS value2.out" as Connection6
                        connect Ic Junction34 as Connection7
                        connect Ic_phase Gain3.out as Connection90
                        connect Ic_rms "RMS value3.out" as Connection9
                        connect Junction23 Junction39 as Connection10
                        connect Junction23 Va as Connection11
                        connect Junction24 Junction41 as Connection12
                        connect Junction24 "RMS value5.in" as Connection13
                        connect Junction24 Vb as Connection14
                        connect Junction25 Junction42 as Connection15
                        connect Junction25 "RMS value6.in" as Connection16
                        connect Junction37 "RMS value2.in" as Connection18
                        connect Junction39 "Three phase PLL1.va" as Connection20
                        connect Junction41 "Three phase PLL1.vb" as Connection21
                        connect Junction42 "Three phase PLL1.vc" as Connection22
                        connect Junction44 Junction41 as Connection23
                        connect Junction45 Junction42 as Connection24
                        connect Junction46 Junction34 as Connection25
                        connect Junction48 Junction39 as Connection27
                        connect Junction49 Junction48 as Connection28
                        connect Junction50 "PQ Power Meter1.Qdc" as Connection111
                        [
                            breakpoints = 7056, 8928
                        ]
                        connect Junction51 Gain7.in as Connection114
                        [
                            breakpoints = 7056, 8888
                        ]
                        connect Junction52 Junction23 as Connection119
                        connect Junction53 Junction35 as Connection122
                        connect P Gain7.out as Connection98
                        connect "PQ Power Meter1.ia" Junction35 as Connection30
                        connect "PQ Power Meter1.ib" Junction37 as Connection31
                        connect "PQ Power Meter1.vb" Junction44 as Connection33
                        connect "PQ Power Meter1.vc" Junction45 as Connection34
                        connect "PQ Power Meter1.ic" Junction46 as Connection35
                        connect "PQ Power Meter1.va" Junction48 as Connection36
                        connect "PQ Power Meter1.Pdc" Junction51 as Connection113
                        connect "RMS value1.in" Junction53 as Connection121
                        connect "RMS value3.in" Junction34 as Connection38
                        connect "RMS value4.in" Junction52 as Connection118
                        connect S Gain9.out as Connection102
                        connect Subsystem1.Q Junction50 as Connection112
                        connect Subsystem1.P Junction51 as Connection115
                        connect "Subsystem1.Lagging or Leading" "Lag Lead" as Connection117
                        connect Termination10.in "Three phase PLL2.sin_theta" as Connection45
                        connect Termination11.in "Three phase PLL2.d_axis" as Connection46
                        connect Termination12.in "Three phase PLL2.q_axis" as Connection47
                        connect Termination13.in "Three phase PLL2.zero_axis" as Connection48
                        connect Termination3.in "PQ Power Meter1.Pac" as Connection50
                        connect Termination4.in "PQ Power Meter1.Qac" as Connection51
                        connect Termination5.in "Three phase PLL1.sin_theta" as Connection52
                        connect Termination7.in "Three phase PLL1.d_axis" as Connection53
                        connect Termination8.in "Three phase PLL1.q_axis" as Connection54
                        connect Termination9.in "Three phase PLL1.zero_axis" as Connection55
                        connect "Three Phase Phasor1.phase1" Gain1.in as Connection86
                        connect "Three Phase Phasor1.phase2" Gain2.in as Connection88
                        connect "Three Phase Phasor1.out2" Ib_mag as Connection57
                        connect "Three Phase Phasor1.out3" Ic_mag as Connection59
                        connect "Three Phase Phasor1.in2" Junction37 as Connection60
                        connect "Three Phase Phasor1.in3" Junction46 as Connection61
                        connect "Three Phase Phasor1.in_ref" Junction52 as Connection120
                        connect "Three Phase Phasor1.in1" Junction53 as Connection123
                        connect "Three Phase Phasor2.phase2" Gain5.in as Connection94
                        connect "Three Phase Phasor2.in2" Junction44 as Connection64
                        connect "Three Phase Phasor2.in3" Junction45 as Connection65
                        connect "Three Phase Phasor2.in_ref" Junction49 as Connection66
                        connect "Three Phase Phasor2.in1" Junction49 as Connection67
                        connect "Three Phase Phasor2.out1" Va_mag as Connection68
                        connect "Three Phase Phasor2.out2" Vb_mag as Connection70
                        connect "Three Phase Phasor2.out3" Vc_mag as Connection72
                        connect "Three phase PLL2.freq" line_freq as Connection73
                        connect Va_rms "RMS value4.out" as Connection74
                        connect Vb_rms "RMS value5.out" as Connection75
                        connect Vc Junction25 as Connection76
                        connect Vc_phase Gain6.out as Connection96
                        connect Vc_rms "RMS value6.out" as Connection78
                        connect Vline_a "Three phase PLL2.va" as Connection79
                        connect Vline_b "Three phase PLL2.vb" as Connection80
                        connect Vline_c "Three phase PLL2.vc" as Connection81
                        connect bus_freq Gain11.out as Connection106
                        connect bus_wt "Three phase PLL1.theta" as Connection83
                        connect line_wt "Three phase PLL2.theta" as Connection84
                        connect pf Gain10.out as Connection104
                    }
                    [
                        position = 6992, 8104
                        size = 112, 664
                    ]

                    port OUTPUT {
                        label = "OUTPUT"
                        position = bottom:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9704, 8056
                    ]

                    port Ia {
                        label = "Ia"
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7816
                    ]

                    port Ib {
                        label = "Ib"
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7888
                    ]

                    port Ic {
                        label = "Ic"
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7960
                    ]

                    port Va {
                        label = "Va"
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8032
                    ]

                    port Vb {
                        label = "Vb"
                        position = left:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8104
                    ]

                    port Vc {
                        label = "Vc"
                        position = left:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8176
                    ]

                    port Vline_a {
                        label = "Vline_A"
                        position = left:7
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8248
                    ]

                    port faults_status {
                        label = "Fault_status"
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8272
                    ]

                    port TO_MODBUS {
                        label = "To_Modbus"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8024, 8080
                    ]

                    port Vline_b {
                        label = "Vline_B"
                        position = left:8
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8320
                    ]

                    port Vline_c {
                        label = "Vline_C"
                        position = left:9
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8392
                    ]

                    port cb_state {
                        label = "cb_state"
                        position = left:10
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7312, 8624
                    ]

                    port pf_states {
                        label = "pf_state"
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8416
                        scale = 1, -1
                    ]

                    port from_Modbus {
                        label = "From Modbus"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8144, 7976
                    ]

                    tag Goto21 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 7688
                        rotation = left
                    ]

                    tag From7 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9072, 8224
                        rotation = down
                        scale = -1, -1
                    ]

                    tag Goto26 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8296, 8152
                    ]

                    tag From22 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8288
                    ]

                    tag Goto29 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 7952
                        scale = 1, -1
                    ]

                    tag From17 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7752
                    ]

                    tag Goto17 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7104, 7760
                        rotation = left
                    ]

                    tag Goto3 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8336
                    ]

                    tag Goto20 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7232, 7760
                        rotation = left
                    ]

                    tag From30 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9024, 8408
                    ]

                    tag Goto27 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7976
                        scale = 1, -1
                    ]

                    tag From9 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8992, 8240
                        rotation = down
                        scale = -1, 1
                    ]

                    tag Goto1 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8160
                    ]

                    tag From19 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7824
                    ]

                    tag Goto6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9640, 8096
                    ]

                    tag Goto23 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 8000
                        scale = 1, -1
                    ]

                    tag From34 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7896
                    ]

                    tag From6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7584, 8560
                        rotation = right
                    ]

                    tag Goto5 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9088, 7752
                    ]

                    tag From37 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7848
                    ]

                    tag From29 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8032
                    ]

                    tag From32 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8104
                    ]

                    tag From21 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8264
                    ]

                    tag From24 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8312
                    ]

                    tag From4 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7448, 8464
                    ]

                    tag From10 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8272
                    ]

                    tag From31 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9096, 8424
                    ]

                    tag Goto22 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7248, 7832
                        rotation = left
                    ]

                    tag From13 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8320
                    ]

                    tag From5 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7520, 8504
                    ]

                    tag From1 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7600, 8280
                        rotation = right
                    ]

                    tag Goto7 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 8024
                        scale = 1, -1
                    ]

                    tag From18 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7800
                    ]

                    tag Goto9 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8000
                    ]

                    tag From23 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8336
                    ]

                    tag From20 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8240
                    ]

                    tag Goto14 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7784
                    ]

                    tag From33 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9120, 8080
                    ]

                    tag Goto18 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7088, 7688
                        rotation = left
                    ]

                    tag From35 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8456
                    ]

                    tag From8 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9104, 8304
                    ]

                    tag Goto10 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8272
                    ]

                    tag Goto4 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8424
                    ]

                    tag From28 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8384
                    ]

                    tag From3 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7392, 8384
                    ]

                    tag From2 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7480, 8288
                    ]

                    tag Goto15 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7856
                    ]

                    tag From15 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7728
                    ]

                    tag From11 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8880, 8256
                    ]

                    tag Goto24 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 8304
                    ]

                    tag Goto11 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7376, 8256
                    ]

                    tag From12 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9032, 8288
                    ]

                    tag From36 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8216
                    ]

                    tag Goto8 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8216
                    ]

                    tag Goto19 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 7832
                        rotation = left
                    ]

                    tag Goto16 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7928
                    ]

                    tag Goto28 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7928
                        scale = 1, -1
                    ]

                    tag From14 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7704
                    ]

                    tag From25 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8360
                    ]

                    tag From16 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7776
                    ]

                    tag Goto2 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8248
                    ]

                    tag Goto13 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7296, 8288
                    ]

                    tag Goto12 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7224, 8256
                    ]

                    tag From27 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8408
                    ]

                    tag Goto25 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8320
                    ]

                    tag From26 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8432
                    ]

                    tag Goto34 {
                        value = "F3_CB4_BREAKER"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7392, 7800
                        hide_name = True
                    ]

                    tag Goto32 {
                        value = "F3_CB4_VOLTAGE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7392, 7752
                        hide_name = True
                    ]

                    tag Goto30 {
                        value = "F3_CB4_P_REAL"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7392, 7704
                        hide_name = True
                    ]

                    tag Goto31 {
                        value = "F3_CB4_P_REACTIVE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7392, 7728
                        hide_name = True
                    ]

                    tag Goto33 {
                        value = "F3_CB4_FREQUENCY"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7392, 7776
                        hide_name = True
                    ]

                    junction Junction51 sp
                    [
                        position = 8720, 8056
                    ]

                    junction Junction100 sp
                    [
                        position = 8536, 8192
                    ]

                    junction Junction101 sp
                    [
                        position = 8536, 8280
                    ]

                    junction Junction104 sp
                    [
                        position = 9016, 7800
                    ]

                    junction Junction105 sp
                    [
                        position = 9584, 8056
                    ]

                    junction Junction106 sp
                    [
                        position = 7368, 8624
                    ]

                    junction Junction108 sp
                    [
                        position = 6688, 8248
                    ]

                    junction Junction109 sp
                    [
                        position = 6696, 8032
                    ]

                    junction Junction110 sp
                    [
                        position = 7304, 8240
                    ]

                    junction Junction111 sp
                    [
                        position = 6640, 7816
                    ]

                    junction Junction112 sp
                    [
                        position = 6640, 7888
                    ]

                    junction Junction113 sp
                    [
                        position = 6640, 7960
                    ]

                    junction Junction114 sp
                    [
                        position = 7088, 7984
                    ]

                    junction Junction115 sp
                    [
                        position = 7104, 8000
                    ]

                    junction Junction116 sp
                    [
                        position = 7120, 8016
                    ]

                    junction Junction117 sp
                    [
                        position = 7216, 8032
                    ]

                    junction Junction118 sp
                    [
                        position = 7232, 8048
                    ]

                    junction Junction119 sp
                    [
                        position = 7248, 8064
                    ]

                    junction Junction120 sp
                    [
                        position = 8536, 8368
                    ]

                    junction Junction121 sp
                    [
                        position = 8536, 8456
                    ]

                    junction Junction122 sp
                    [
                        position = 8216, 8192
                    ]

                    junction Junction123 sp
                    [
                        position = 7280, 8176
                    ]

                    junction Junction124 sp
                    [
                        position = 7296, 8192
                    ]

                    junction Junction125 sp
                    [
                        position = 7160, 8032
                    ]

                    junction Junction126 sp
                    [
                        position = 7328, 8240
                    ]

                    junction Junction127 sp
                    [
                        position = 7336, 8624
                    ]

                    junction Junction128 sp
                    [
                        position = 7304, 7704
                    ]

                    junction Junction129 sp
                    [
                        position = 7320, 7728
                    ]

                    comment Comment5 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">pf_states </p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8400
                    ]

                    comment Comment2 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52A</p></body></html> ENDCOMMENT 
                    [
                        position = 7400, 8568
                    ]

                    comment Comment3 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52B</p></body></html> ENDCOMMENT 
                    [
                        position = 7432, 8720
                    ]

                    comment Comment4 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Status</p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8256
                    ]

                    connect "Bus Join1.in20" "CALC FROM MEASUREMENTS.S" as Connection144
                    connect "Bus Join1.in3" "CALC FROM MEASUREMENTS.Ib_phase" as Connection132
                    connect "Bus Join1.in15" "CALC FROM MEASUREMENTS.Vb_phase" as Connection135
                    connect "Bus Join1.in17" "CALC FROM MEASUREMENTS.Vc_phase" as Connection140
                    connect "Bus Join1.in21" "CALC FROM MEASUREMENTS.pf" as Connection149
                    connect "Bus Join1.in5" "CALC FROM MEASUREMENTS.Ic_phase" as Connection133
                    connect "Bus Join1.in13" "CALC FROM MEASUREMENTS.Va_phase" as Connection134
                    connect "Bus Join1.in6" Junction114 as Connection268
                    connect "Bus Join1.in9" Junction117 as Connection283
                    connect "Bus Join1.in10" Junction118 as Connection286
                    connect "Bus Join1.in18" Junction123 as Connection382
                    connect "Bus Join1.in19" Junction124 as Connection385
                    connect "Bus Join1.in22" Junction126 as Connection391
                    connect "CALC FROM MEASUREMENTS.Ia_mag" "Bus Join1.in" as Connection5
                    connect "CALC FROM MEASUREMENTS.Vb_mag" "Bus Join1.in14" as Connection1
                    connect "CALC FROM MEASUREMENTS.Va_mag" "Bus Join1.in12" as Connection3
                    connect "CALC FROM MEASUREMENTS.Vc_mag" "Bus Join1.in16" as Connection4
                    connect "CALC FROM MEASUREMENTS.Ib_mag" "Bus Join1.in2" as Connection6
                    connect "CALC FROM MEASUREMENTS.Ia_phase" "Bus Join1.in1" as Connection131
                    connect "CALC FROM MEASUREMENTS.Ic_mag" "Bus Join1.in4" as Connection2
                    connect "CALC FROM MEASUREMENTS.line_freq" Goto10 as Connection224
                    connect "CALC FROM MEASUREMENTS.line_wt" Goto13 as Connection245
                    connect "CALC FROM MEASUREMENTS.Vline_a" Junction108 as Connection217
                    connect "CALC FROM MEASUREMENTS.Va" Junction109 as Connection218
                    connect "CALC FROM MEASUREMENTS.Ia" Junction111 as Connection257
                    connect "CALC FROM MEASUREMENTS.Ib" Junction112 as Connection256
                    connect "CALC FROM MEASUREMENTS.Ic" Junction113 as Connection258
                    connect "CALC FROM MEASUREMENTS.Ib_rms" Junction115 as Connection271
                    connect "CALC FROM MEASUREMENTS.Ic_rms" Junction116 as Connection274
                    connect "CALC FROM MEASUREMENTS.Vc_rms" Junction119 as Connection289
                    connect "Control Panel Input1.out" Junction122 as Connection381
                    connect From1 Sum1.in as Connection167
                    connect From10 bitwise_faults.R50 as Connection197
                    connect From11 bitwise_faults.R27 as Connection195
                    connect From12 bitwise_faults.R51 as Connection199
                    connect From13 bitwise_faults.Reset as Connection210
                    connect From14 "Relay 25-Sync Check1.Va" as Connection219
                    connect From15 "Relay 25-Sync Check1.Vline_a" as Connection220
                    connect From16 "Relay 25-Sync Check1.line_freq" as Connection225
                    connect From17 "Relay 25-Sync Check1.bus_freq" as Connection238
                    connect From18 "Relay 25-Sync Check1.bus_wt" as Connection244
                    connect From19 "Relay 25-Sync Check1.line_wt" as Connection246
                    connect From2 Gain1.in as Connection168
                    connect From20 R50512761.Iinst_a as Connection336
                    connect From21 R50512761.Iinst_b as Connection337
                    connect From22 R50512761.Iinst_c as Connection338
                    connect From23 R50512761.Irms_b as Connection340
                    connect From24 R50512761.Irms_a as Connection339
                    connect From25 R50512761.Irms_c as Connection341
                    connect From26 R50512761.Vrms_c as Connection344
                    connect From27 R50512761.Vrms_b as Connection343
                    connect From28 R50512761.Vrms_a as Connection342
                    connect From29 "State Condition Mng.op_mode" as Connection309
                    connect From3 Gain4.in as Connection169
                    connect From30 "pf bitwise.exp_imp" as Connection313
                    connect From31 "pf bitwise.lag_lead" as Connection312
                    connect From32 "State Condition Mng.enable" as Connection318
                    connect From33 "State Condition Mng.initial_condition" as Connection319
                    connect From34 "Relay 25-Sync Check1.relay_paramR25" as Connection320
                    connect From35 R50512761.relay_param as Connection321
                    connect From36 R50512761.Reset as Connection335
                    connect From37 "Relay 25-Sync Check1.mode_in" as Connection334
                    connect From4 Gain5.in as Connection171
                    connect From5 Gain6.in as Connection173
                    connect From7 bitwise_faults.Status as Connection203
                    connect From8 bitwise_faults.R59 as Connection201
                    connect From9 bitwise_faults.R25 as Connection193
                    connect Gain1.out Sum1.in1 as Connection21
                    connect Gain4.out Sum1.in2 as Connection170
                    connect Gain5.out Sum1.in3 as Connection172
                    connect Gain6.out Sum1.in4 as Connection174
                    connect Gain7.out Sum3.in1 as Connection180
                    connect Gain8.in Junction106 as Connection186
                    connect Gain8.out Sum3.in2 as Connection183
                    connect Goto1 Junction100 as Connection152
                    connect Goto11 Junction110 as Connection242
                    connect Goto12 "CALC FROM MEASUREMENTS.bus_wt" as Connection243
                    connect Goto14 Junction111 as Connection249
                    connect Goto15 Junction112 as Connection252
                    connect Goto16 Junction113 as Connection255
                    connect Goto17 Junction115 as Connection273
                    connect Goto19 Junction116 as Connection276
                    connect Goto2 Junction101 as Connection155
                    connect Goto22 Junction119 as Connection367
                    connect Goto23 Relay_Param.op_mode as Connection329
                    connect Goto24 "CALC FROM MEASUREMENTS.Lag Lead" as Connection310
                    connect Goto25 "CALC FROM MEASUREMENTS.Export Import" as Connection311
                    connect Goto27 Relay_Param.Initial_condition as Connection331
                    connect Goto28 Relay_Param.relay_param as Connection333
                    connect Goto29 Relay_Param.relay_paramR25 as Connection332
                    connect Goto30 Junction128 as Connection399
                    connect Goto31 Junction129 as Connection402
                    connect Goto32 normalize.out as Connection397
                    connect Goto33 Junction126 as Connection393
                    connect Goto34 Junction127 as Connection396
                    connect Goto4 Junction121 as Connection298
                    connect Goto5 Junction104 as Connection164
                    connect Goto6 Junction105 as Connection178
                    connect Goto7 Relay_Param.reset as Connection330
                    connect Goto8 Junction108 as Connection213
                    connect Goto9 Junction109 as Connection216
                    connect Ia Junction111 as Connection247
                    connect Ib Junction112 as Connection250
                    connect Ic Junction113 as Connection253
                    connect Junction100 "Logical operator1.in" as Connection196
                    connect Junction101 "Logical operator1.in1" as Connection198
                    connect Junction101 R50512761.trip_51 as Connection154
                    connect Junction104 "State Condition Mng.R25" as Connection303
                    connect Junction105 "Unit Delay4.out" as Connection202
                    connect Junction106 not.in as Connection185
                    connect Junction110 "CALC FROM MEASUREMENTS.bus_freq" as Connection241
                    connect Junction114 "CALC FROM MEASUREMENTS.Ia_rms" as Connection269
                    connect Junction114 Goto18 as Connection355
                    connect Junction115 "Bus Join1.in7" as Connection272
                    connect Junction116 "Bus Join1.in8" as Connection275
                    connect Junction117 Goto21 as Connection365
                    connect Junction117 Junction125 as Connection388
                    connect Junction118 "CALC FROM MEASUREMENTS.Vb_rms" as Connection287
                    connect Junction118 Goto20 as Connection366
                    connect Junction119 "Bus Join1.in11" as Connection290
                    connect Junction120 Goto3 as Connection296
                    connect Junction121 R50512761.trip_59 as Connection299
                    connect Junction122 Goto26 as Connection380
                    connect Junction123 "CALC FROM MEASUREMENTS.P" as Connection383
                    connect Junction124 "CALC FROM MEASUREMENTS.Q" as Connection386
                    connect Junction125 "CALC FROM MEASUREMENTS.Va_rms" as Connection389
                    connect Junction126 Junction110 as Connection392
                    connect Junction127 Junction106 as Connection395
                    connect Junction128 Junction123 as Connection400
                    connect Junction129 Junction124 as Connection403
                    connect Junction51 "State Condition Mng.Trip_in" as Connection302
                    connect "Logical operator1.in2" Junction120 as Connection297
                    connect "Logical operator1.in3" Junction121 as Connection300
                    connect "Logical operator1.out" Junction51 as Connection79
                    connect OUTPUT Junction105 as Connection176
                    connect P.in Junction128 as Connection401
                    connect Q.in Junction129 as Connection404
                    connect R50512761.trip_50 Junction100 as Connection150
                    connect R50512761.trip_27 Junction120 as Connection295
                    connect R50512761.Enable Junction122 as Connection379
                    connect "Relay 25-Sync Check1.bool_R25" Junction104 as Connection162
                    connect "Relay 25-Sync Check1.trip_or" Junction51 as Connection94
                    connect Sum3.in From6 as Connection179
                    connect Sum3.out "Unit Delay5.in" as Connection190
                    connect TO_MODBUS "Bus Join1.out" as Connection101
                    connect "Unit Delay2.out" "Bus Join1.in23" as Connection175
                    connect "Unit Delay2.in" Sum1.out as Connection104
                    connect "Unit Delay4.in" "State Condition Mng.trip_out" as Connection304
                    connect "Unit Delay5.out" "Bus Join1.in24" as Connection191
                    connect Va Junction109 as Connection214
                    connect Vb "CALC FROM MEASUREMENTS.Vb" as Connection108
                    connect Vc "CALC FROM MEASUREMENTS.Vc" as Connection109
                    connect Vline_a Junction108 as Connection211
                    connect Vline_b "CALC FROM MEASUREMENTS.Vline_b" as Connection111
                    connect Vline_c "CALC FROM MEASUREMENTS.Vline_c" as Connection112
                    connect cb_state Junction127 as Connection394
                    connect faults_status bitwise_faults.fault_status as Connection368
                    connect from_Modbus Relay_Param.from_Modbus as Connection328
                    connect normalize.in Junction125 as Connection398
                    connect not.out Gain7.in as Connection181
                    connect "pf bitwise.pf_states" pf_states as Connection369

                    CT_primary = "1200"
                    R27P_R59P_tripDelay = "2"
                    R27P_pickup1 = ".7"
                    R27P_pickup2 = ".5"
                    R50P_tripDelay2 = "0"
                    R51P_curveType2 = "1"
                    R51P_pickup1 = ".5"
                    R51P_pickup2 = ".5"
                    R51P_timeDial2 = "1"
                    R59P_pickup1 = "1.2"
                    R59P_pickup2 = "1.2"

                    mask {
                        description = "This block implements the relay SEL 787 with protective functions 25 (synchronism check), 27 (Under Voltage), 50 (Instantaneous Overcurrent), 51 (Time Overcurrent) and 59 (Overvoltage). 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
he relay outputs to Modbus are: 0 - Ia_mag; 1 - Ia_phase; 2 - Ib_mag; 3 - Ib_phase; 4 - Ic_mag; 5 - Ic_phase; 6 - Ia_rms; 7 - Ib_rms; 8 - Ic_rms; 9 - Va_rms; 10 - Vb_rms; 11 - Vc_rms; 12 - Va_mag; 13 - Va_phase; 14 - Vb_mag; 15 - Vb_phase; 16 - Vc_mag; 17 - Vc_phase; 18 - P; 19 - Q; 20 - S; 21 - pf; 22 - Bus_freq; 23 - protection functions status; 24 - Circuit Breaker status.

he relay inputs from Modbus are: 2001 - op_mode; 2002 - Reset; 2003 - protection_mode.

he trip pickups for functions 50 and 51 are defined as currents in the secondary of the current transformer. The secondary ot the CT has 5 turns."

                        VRMSLL {
                            label = "Line to Line RMS voltage"
                            widget = edit
                            type = generic
                            default_value = "13800.0"
                            unit = "V"
                            group = "Base Parameters"
                        }

                        dV_threshold {
                            label = "Voltage deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "5.0"
                            unit = "%"
                            group = "Base Parameters"
                        }

                        angle_threshold {
                            label = "Angle deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "12.0"
                            unit = "degree"
                            group = "Base Parameters"
                        }

                        dF_threshold {
                            label = "Frequency deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Hz"
                            group = "Base Parameters"
                        }

                        R27P_R59P_tripDelay {
                            label = "R27 UV and R59 OV trip delay"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Sec"
                            group = "Base Parameters"
                        }

                        CT_primary {
                            label = "CT primary turns number"
                            widget = edit
                            type = generic
                            default_value = "600"
                            group = "Base Parameters"
                        }

                        Initial_status {
                            label = "Initial relay status"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "Base Parameters"
                        }

                        R50P_pickup1 {
                            label = "R50 IOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R50P_tripDelay1 {
                            label = "R50 IOC trip delay 1"
                            widget = edit
                            type = generic
                            default_value = "0"
                            unit = "sec"
                            group = "GridTied Parameters"
                        }

                        R51P_pickup1 {
                            label = "R51 TOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.8"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R51P_curveType1 {
                            label = "R51 TOC curve type 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R51P_timeDial1 {
                            label = "R51 TOC time dial 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R27P_pickup1 {
                            label = "R27 UV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R59P_pickup1 {
                            label = "R59 OV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R50P_pickup2 {
                            label = "R50 IOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R50P_tripDelay2 {
                            label = "R50 IOC trip delay 2"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            unit = "sec"
                            group = "Islanded Parameters"
                        }

                        R51P_pickup2 {
                            label = "R51 TOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.7"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R51P_curveType2 {
                            label = "R51 TOC curve type 2"
                            widget = edit
                            type = generic
                            default_value = "2.0"
                            group = "Islanded Parameters"
                        }

                        R51P_timeDial2 {
                            label = "R51 TOC time dial 2"
                            widget = edit
                            type = generic
                            default_value = "3.0"
                            group = "Islanded Parameters"
                        }

                        R27P_pickup2 {
                            label = "R27 UV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        R59P_pickup2 {
                            label = "R59 OV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE
                    }
                }
                [
                    position = 7952, 8168
                    size = 152, 240
                ]

                component "core/ModBus Device" "ModBus Device1" {
                    configuration = "configF3_CB4"
                    execution_rate = "Ts"
                }
                [
                    position = 8272, 8000
                    size = 184, 184
                ]

                port Brk_cmd {
                    label = "Brk_cmd"
                    position = bottom:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7792, 8496
                    rotation = right
                ]

                port IABC {
                    label = "IABC"
                    position = right:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7792, 7936
                ]

                port VABC_load {
                    label = "VABC_load"
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7520, 7936
                ]

                port VABC_grid {
                    label = "VABC_grid"
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7648, 7936
                ]

                junction Junction1391 sp
                [
                    position = 8120, 7928
                ]

                junction Junction1392 sp
                [
                    position = 8120, 7976
                ]

                junction Junction1393 sp
                [
                    position = 7952, 8344
                ]

                junction Junction1396 sp
                [
                    position = 7792, 8448
                ]

                junction Junction1397 sp
                [
                    position = 7648, 8344
                ]

                comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset the relay when input is 1</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Operation Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 1 force the breaker closed</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 0 turns on logic based operation</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Protection Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 1 use islanded parameters</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 0 use grid tied parameters</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                [
                    position = 7968, 8328
                ]

                connect Brk_cmd Junction1396 as Connection899
                connect "Bus Split1.in" IABC as Connection907
                connect "Bus Split1.out1" SEL_787.Ib as Connection909
                connect "Bus Split1.out2" SEL_787.Ic as Connection910
                connect "Bus Split1.out" SEL_787.Ia as Connection908
                connect "Bus Split2.out2" SEL_787.Vc as Connection914
                connect "Bus Split2.out1" SEL_787.Vb as Connection913
                connect "Bus Split2.out" SEL_787.Va as Connection912
                connect "Bus Split3.out2" SEL_787.Vline_c as Connection930
                connect "Bus Split3.out1" SEL_787.Vline_b as Connection929
                connect "Bus Split3.out" SEL_787.Vline_a as Connection928
                connect CB_state.in Junction1397 as Connection905
                connect Constant2.out "Signal switch1.in1" as Connection880
                connect Delay1.out "Signal switch1.in" as Connection2
                connect Junction1391 Constant1.out as Connection852
                connect Junction1391 "ModBus Device1.coil_in" as Connection313
                connect Junction1392 Junction1391 as Connection314
                connect Junction1393 Delay1.in as Connection867
                connect Junction1396 "Signal switch1.out" as Connection902
                connect Junction1397 Junction1396 as Connection904
                connect "ModBus Device1.holding_in" Junction1392 as Connection466
                connect "ModBus Device1.discrete_in" Junction1392 as Connection467
                connect "ModBus Device1.holding_out" SEL_787.from_Modbus as Connection932
                connect "ModBus Device1.coil_out" Term3.in as Connection854
                connect SEL_787.OUTPUT Junction1393 as Connection868
                connect SEL_787.cb_state Junction1397 as Connection903
                connect SEL_787.TO_MODBUS "ModBus Device1.reg_in" as Connection931
                connect SEL_787.pf_states Term4.in as Connection897
                connect "Signal switch1.in2" Junction1393 as Connection866
                connect Term5.in SEL_787.faults_status as Connection870
                connect VABC_grid "Bus Split2.in" as Connection934
                connect VABC_load "Bus Split3.in" as Connection933
            }
            [
                position = 7992, 8200
                rotation = left
                size = 136, 72
            ]

            component Subsystem Meas2 {
                layout = dynamic
                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8192
                    rotation = right
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8320
                    rotation = right
                ]

                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8256
                    rotation = right
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7960, 8120
                    rotation = left
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8192
                        rotation = right
                    ]

                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8192
                        rotation = right
                    ]

                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8192
                        rotation = right
                    ]

                    port P1 {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port P2 {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port P3 {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port P4 {
                        position = bottom:1
                        kind = pe
                    }
                    [
                        position = 8136, 8272
                        rotation = left
                    ]

                    port P5 {
                        position = bottom:2
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    port P6 {
                        position = bottom:3
                        kind = pe
                    }
                    [
                        position = 8248, 8272
                        rotation = left
                    ]

                    connect R1.p_node P1 as Connection1
                    connect R1.n_node P4 as Connection3
                    connect R2.p_node P2 as Connection6
                    connect R2.n_node P5 as Connection4
                    connect R3.p_node P3 as Connection2
                    connect R3.n_node P6 as Connection5
                }
                [
                    position = 7464, 8232
                    size = 64, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7400, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7400, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7400, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7960, 8064
                    rotation = left
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1470 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1471 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1472 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1473 pe
                [
                    position = 7480, 8432
                ]

                junction Junction1474 pe
                [
                    position = 7464, 8432
                ]

                junction Junction1475 pe
                [
                    position = 7448, 7928
                ]

                junction Junction1476 pe
                [
                    position = 7464, 8024
                ]

                junction Junction1477 pe
                [
                    position = 7480, 8120
                ]

                junction Junction1478 pe
                [
                    position = 7568, 8432
                ]

                connect A Junction1475 as Connection405
                connect B Junction1476 as Connection408
                connect C Junction1477 as Connection411
                connect Junction1470 VA.p_node as Connection389
                connect Junction1471 b as Connection392
                connect Junction1472 VC.p_node as Connection395
                connect Junction1473 Junction1474 as Connection404
                connect Junction1473 Junction1478 as Connection416
                connect Junction1474 res_for_meas.P5 as Connection403
                [
                    breakpoints = 7464, 8432; 7464, 8312
                ]
                connect Junction1475 Junction1470 as Connection406
                connect Junction1476 Junction1471 as Connection409
                connect Junction1477 Junction1472 as Connection412
                connect Junction1478 Junction1421 as Connection415
                connect V "Bus Join1.out" as Connection385
                connect VA.out "Bus Join1.in" as Connection397
                connect VA.n_node Junction1421 as Connection237
                connect VB.out "Bus Join1.in1" as Connection398
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1471 as Connection391
                connect VC.out "Bus Join1.in2" as Connection399
                connect VC.n_node Junction1478 as Connection414
                [
                    breakpoints = 7648, 8432
                ]
                connect a Junction1470 as Connection388
                connect c Junction1472 as Connection394
                connect res_for_meas.P6 Junction1473 as Connection402
                connect res_for_meas.P4 Junction1474 as Connection401
                [
                    breakpoints = 7448, 8312
                ]
                connect res_for_meas.P1 Junction1475 as Connection407
                connect res_for_meas.P2 Junction1476 as Connection410
                connect res_for_meas.P3 Junction1477 as Connection413
            }
            [
                position = 8144, 8312
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            component Subsystem Meas1 {
                layout = dynamic
                component "core/Current Measurement" IC {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7496, 8120
                ]

                component gen_bus_join "Bus Join2" {
                    inputs = "3"
                }
                [
                    position = 7576, 7784
                ]

                component "core/Current Measurement" IB {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7432, 8024
                ]

                component "core/Current Measurement" IA {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7368, 7928
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7936, 8168
                    rotation = left
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8352
                    rotation = right
                ]

                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8288
                    rotation = right
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8224
                    rotation = right
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8192
                        rotation = right
                    ]

                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8192
                        rotation = right
                    ]

                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8192
                        rotation = right
                    ]

                    port P1 {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port P2 {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port P3 {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port P4 {
                        position = bottom:1
                        kind = pe
                    }
                    [
                        position = 8136, 8272
                        rotation = left
                    ]

                    port P5 {
                        position = bottom:2
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    port P6 {
                        position = bottom:3
                        kind = pe
                    }
                    [
                        position = 8248, 8272
                        rotation = left
                    ]

                    connect R1.p_node P1 as Connection1
                    connect R1.n_node P4 as Connection3
                    connect R2.p_node P2 as Connection6
                    connect R2.n_node P5 as Connection4
                    connect R3.p_node P3 as Connection2
                    connect R3.n_node P6 as Connection5
                }
                [
                    position = 7312, 8264
                    size = 64, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7208, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7208, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7208, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7936, 8112
                    rotation = left
                ]

                port I {
                    position = top:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7648, 7784
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1466 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1467 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1468 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1470 pe
                [
                    position = 7312, 8432
                ]

                junction Junction1472 pe
                [
                    position = 7296, 7928
                ]

                junction Junction1473 pe
                [
                    position = 7312, 8024
                ]

                junction Junction1474 pe
                [
                    position = 7328, 8120
                ]

                junction Junction1475 pe
                [
                    position = 7328, 8432
                ]

                junction Junction1476 pe
                [
                    position = 7568, 8432
                ]

                connect A Junction1472 as Connection401
                connect B Junction1473 as Connection404
                connect "Bus Join1.in1" VB.out as Connection387
                connect "Bus Join1.in2" VC.out as Connection388
                connect "Bus Join2.out" I as Connection393
                connect "Bus Join2.in1" IB.out as Connection391
                connect "Bus Join2.in2" IC.out as Connection392
                connect C Junction1474 as Connection407
                connect IA.out "Bus Join2.in" as Connection390
                connect IA.n_node Junction1466 as Connection377
                connect Junction1466 a as Connection299
                connect Junction1467 IB.n_node as Connection375
                connect Junction1467 b as Connection301
                connect Junction1468 IC.n_node as Connection376
                connect Junction1468 c as Connection302
                connect Junction1470 Junction1475 as Connection412
                connect Junction1470 res_for_meas.P5 as Connection396
                connect Junction1472 IA.p_node as Connection402
                connect Junction1473 IB.p_node as Connection405
                connect Junction1474 IC.p_node as Connection408
                connect Junction1475 Junction1476 as Connection416
                [
                    breakpoints = 7328, 8432; 7536, 8432
                ]
                connect Junction1475 res_for_meas.P6 as Connection413
                [
                    breakpoints = 7328, 8384
                ]
                connect Junction1476 Junction1421 as Connection415
                [
                    breakpoints = 7648, 8432
                ]
                connect V "Bus Join1.out" as Connection385
                connect V "Bus Join1.out" as Connection389
                connect VA.out "Bus Join1.in" as Connection386
                connect VA.n_node Junction1421 as Connection237
                connect VA.p_node Junction1466 as Connection240
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1467 as Connection243
                connect VC.p_node Junction1468 as Connection246
                connect VC.n_node Junction1476 as Connection414
                connect res_for_meas.P4 Junction1470 as Connection395
                [
                    breakpoints = 7296, 8384
                ]
                connect res_for_meas.P1 Junction1472 as Connection403
                connect res_for_meas.P2 Junction1473 as Connection406
                connect res_for_meas.P3 Junction1474 as Connection409
            }
            [
                position = 8144, 8088
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            port b {
                position = bottom:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 8432
                rotation = left
            ]

            port a {
                position = bottom:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 8472
                rotation = left
            ]

            port B {
                position = top:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 7976
                rotation = right
            ]

            port c {
                position = bottom:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8392
                rotation = left
            ]

            port A {
                position = top:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 7936
                rotation = right
            ]

            port C {
                position = top:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8016
                rotation = right
            ]

            connect A Meas1.A as Connection2626
            connect Brk.B Meas1.b as Connection2628
            connect Brk.c Meas2.C as Connection2630
            [
                breakpoints = 8160, 8272
            ]
            connect Brk.a Meas2.A as Connection2632
            connect MID_Rly1.Brk_cmd Brk.control as Connection2604
            connect MID_Rly1.VABC_grid Meas1.V as Connection2637
            connect Meas1.B B as Connection2625
            connect Meas1.a Brk.A as Connection2627
            connect Meas1.c Brk.C as Connection2629
            connect Meas1.C C as Connection2624
            connect Meas1.I MID_Rly1.IABC as Connection2621
            connect Meas2.B Brk.b as Connection2631
            connect Meas2.V MID_Rly1.VABC_load as Connection2636
            connect Meas2.a a as Connection2633
            connect Meas2.c c as Connection2635
            connect b Meas2.b as Connection2634
        }
        [
            position = 12816, 7936
            size = 80, 48
        ]

        component Subsystem Coupling3 {
            layout = dynamic
            component "core/Four Phase Core Coupling" "Core Coupling 1" {
                C1 = "100e-06"
                R1 = "1"
                fixed_snb_i = "true"
                fixed_snb_u = "true"
            }
            [
                position = 8192, 8192
            ]

            port A {
                position = left:1
                kind = pe
            }
            [
                position = 8136, 8048
            ]

            port B {
                position = left:2
                kind = pe
            }
            [
                position = 8136, 8144
            ]

            port C {
                position = left:3
                kind = pe
            }
            [
                position = 8136, 8240
            ]

            port G {
                position = left:4
                kind = pe
            }
            [
                position = 8136, 8336
            ]

            port a {
                position = right:1
                kind = pe
            }
            [
                position = 8248, 8048
                rotation = down
            ]

            port b {
                position = right:2
                kind = pe
            }
            [
                position = 8248, 8144
                rotation = down
            ]

            port c {
                position = right:3
                kind = pe
            }
            [
                position = 8248, 8240
                rotation = down
            ]

            port g {
                position = right:4
                kind = pe
            }
            [
                position = 8248, 8336
                rotation = down
            ]

            connect "Core Coupling 1.a_in" A as Connection5
            connect "Core Coupling 1.b_in" B as Connection7
            connect "Core Coupling 1.c_in" C as Connection1
            connect "Core Coupling 1.d_in" G as Connection4
            connect "Core Coupling 1.a_out" a as Connection8
            connect "Core Coupling 1.b_out" b as Connection2
            connect "Core Coupling 1.c_out" c as Connection3
            connect "Core Coupling 1.d_out" g as Connection6
        }
        [
            position = 12824, 7824
            rotation = right
            scale = -1, 1
            size = 48, 80
        ]

        component Subsystem F3_CB1 {
            layout = dynamic
            component Subsystem Brk {
                layout = dynamic
                component "core/Triple Pole Single Throw Contactor" S1 {
                    ctrl_src = "Model"
                }
                [
                    position = 8104, 8184
                    rotation = right
                    size = 64, 256
                ]

                port C {
                    position = left:1
                    kind = pe
                }
                [
                    position = 8200, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 8104, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port A {
                    position = left:3
                    kind = pe
                }
                [
                    position = 8008, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port c {
                    position = right:1
                    kind = pe
                }
                [
                    position = 8200, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port b {
                    position = right:2
                    kind = pe
                }
                [
                    position = 8104, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port a {
                    position = right:3
                    kind = pe
                }
                [
                    position = 8008, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port control {
                    position = bottom:auto
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8320, 8184
                    scale = -1, 1
                ]

                connect A S1.c_in as Connection6
                connect B S1.b_in as Connection5
                connect S1.a_in C as Connection4
                connect S1.c_out a as Connection1
                connect S1.b_out b as Connection2
                connect S1.a_out c as Connection3
                connect control S1.ctrl_in as Connection7
            }
            [
                position = 8144, 8200
                rotation = right
                size = 64, 64
            ]

            component Subsystem MID_Rly1 {
                layout = dynamic
                component gen_bus_split "Bus Split1" {
                    outputs = "3"
                }
                [
                    position = 7832, 8000
                    rotation = right
                ]

                component gen_terminator Term3 {
                }
                [
                    position = 8440, 7928
                ]

                component gen_bus_split "Bus Split2" {
                    outputs = "3"
                }
                [
                    position = 7704, 8000
                    rotation = right
                ]

                component gen_terminator Term5 {
                }
                [
                    position = 8152, 8136
                    rotation = down
                    scale = -1, 1
                ]

                component src_constant Constant1 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 8056, 7928
                ]

                component gen_probe CB_state {
                }
                [
                    position = 7592, 8344
                    rotation = down
                ]

                component gen_bus_split "Bus Split3" {
                    outputs = "3"
                }
                [
                    position = 7576, 8000
                    rotation = right
                ]

                component gen_terminator Term4 {
                }
                [
                    position = 8152, 8200
                    rotation = down
                    scale = -1, 1
                ]

                component gen_delay Delay1 {
                    del_length = "int(3.0/60.0/Ts)"
                }
                [
                    position = 7880, 8344
                    rotation = down
                ]

                component sys_signal_switch "Signal switch1" {
                    threshold = "0.5"
                }
                [
                    position = 7792, 8400
                    rotation = right
                ]

                component src_constant Constant2 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 7776, 8344
                    rotation = right
                ]

                component "core/ModBus Device" "ModBus Device1" {
                    configuration = "configF3_CB1"
                    execution_rate = "Ts"
                }
                [
                    position = 8272, 8000
                    size = 184, 184
                ]

                component Subsystem SEL_787 {
                    layout = dynamic
                    component gen_gain Gain7 {
                        gain = "2"
                    }
                    [
                        position = 7512, 8624
                    ]

                    component tm_delay "Unit Delay4" {
                    }
                    [
                        position = 9496, 8056
                    ]

                    component gen_gain Gain5 {
                        gain = "8"
                    }
                    [
                        position = 7512, 8432
                        rotation = left
                    ]

                    component gen_logic_op not {
                        operator = "NOT"
                    }
                    [
                        position = 7440, 8624
                    ]

                    component gen_gain Gain1 {
                        gain = "2"
                    }
                    [
                        position = 7536, 8328
                        rotation = right
                    ]

                    component gen_gain Gain8 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8688
                    ]

                    component gen_c_function "pf bitwise" {
                        in_terminal_dimensions_str = "exp_imp inherit;lag_lead inherit;"
                        in_terminal_properties = "inherit exp_imp;inherit lag_lead;"
                        no_feed_inputs = "[u\'\']"
                        no_feed_outputs = "[u\'\']"
                        out_terminal_dimensions_str = "pf_states inherit;"
                        out_terminal_properties = "uint pf_states;"
                        output_fnc = "/*Begin code section*/
pf_states=(uint)exp_imp<<1 | (uint)lag_lead<<2;
/*End code section*/"
                    }
                    [
                        position = 9200, 8416
                    ]

                    component gen_c_function bitwise_faults {
                        in_terminal_dimensions_str = "Status inherit;R25 inherit;R27 inherit;R50 inherit;R51 inherit;R59 inherit;Reset inherit;"
                        in_terminal_properties = "inherit Status;inherit R25;inherit R27;inherit R50;inherit R51;inherit R59;inherit Reset;"
                        no_feed_inputs = "[]"
                        no_feed_outputs = "[]"
                        out_terminal_dimensions_str = "fault_status inherit;"
                        out_terminal_properties = "uint fault_status;"
                        output_fnc = "/*Begin code section*/
fault_status= (uint)Status<<1 | (uint)R25<<2 | (uint)R27<<3 | (uint)R50<<4 | (uint)R51<<5 | (uint)R59<<6 | (uint)Reset<<7;
/*End code section*/"
                    }
                    [
                        position = 9200, 8272
                    ]

                    component gen_sum Sum3 {
                        signs = "3"
                    }
                    [
                        position = 7640, 8624
                    ]

                    component src_scada_input "Control Panel Input1" {
                        execution_rate = "Ts"
                        max = "1"
                        min = "0"
                        unit = ""
                    }
                    [
                        position = 8136, 8192
                    ]

                    component gen_logic_op "Logical operator1" {
                        inputs = "4"
                        operator = "OR"
                    }
                    [
                        position = 8720, 8128
                        rotation = left
                    ]

                    component gen_bus_join "Bus Join1" {
                        inputs = "25"
                    }
                    [
                        position = 7928, 8080
                    ]

                    component tm_delay "Unit Delay5" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7840, 8392
                        rotation = left
                    ]

                    component gen_sum Sum1 {
                        signs = "5"
                    }
                    [
                        position = 7648, 8384
                    ]

                    component tm_delay "Unit Delay2" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7728, 8304
                        rotation = left
                    ]

                    component gen_gain Gain4 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8384
                    ]

                    component gen_gain Gain6 {
                        gain = "16"
                    }
                    [
                        position = 7584, 8456
                        rotation = left
                    ]

                    component gen_gain normalize {
                        gain = "np.sqrt(3.0)/13800.0"
                    }
                    [
                        position = 7328, 7776
                    ]

                    component gen_probe P {
                    }
                    [
                        position = 7400, 7624
                    ]

                    component gen_probe Q {
                    }
                    [
                        position = 7400, 7672
                    ]

                    component Subsystem "CALC FROM MEASUREMENTS" {
                        layout = dynamic
                        component gen_terminator Termination11 {
                        }
                        [
                            position = 6864, 9256
                        ]

                        component gen_rms_value "RMS value6" {
                        }
                        [
                            position = 7064, 8256
                        ]

                        component gen_gain Gain4 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8504
                        ]

                        component "core/Three phase PLL" "Three phase PLL1" {
                        }
                        [
                            position = 7224, 8392
                        ]

                        component gen_rms_value "RMS value5" {
                        }
                        [
                            position = 7064, 8192
                        ]

                        component gen_terminator Termination4 {
                        }
                        [
                            position = 7088, 9072
                        ]

                        component gen_terminator Termination8 {
                        }
                        [
                            position = 7336, 8312
                        ]

                        component gen_terminator Termination9 {
                        }
                        [
                            position = 7336, 8368
                        ]

                        component gen_terminator Termination12 {
                        }
                        [
                            position = 6864, 9312
                        ]

                        component gen_rms_value "RMS value4" {
                        }
                        [
                            position = 7064, 8128
                        ]

                        component gen_PQ_transform "PQ Power Meter1" {
                        }
                        [
                            position = 6936, 8952
                        ]

                        component gen_gain Gain11 {
                            gain = "10.0"
                        }
                        [
                            position = 7432, 8400
                        ]

                        component gen_gain Gain6 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8704
                        ]

                        component gen_gain Gain3 {
                            gain = "10"
                        }
                        [
                            position = 7064, 7792
                        ]

                        component msr_phasor_3ph "Three Phase Phasor2" {
                        }
                        [
                            position = 6968, 8560
                        ]

                        component gen_rms_value "RMS value3" {
                        }
                        [
                            position = 7064, 8048
                        ]

                        component msr_phasor_3ph "Three Phase Phasor1" {
                        }
                        [
                            position = 6904, 7752
                        ]

                        component gen_terminator Termination10 {
                        }
                        [
                            position = 6856, 9472
                        ]

                        component gen_gain Gain8 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8976
                        ]

                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7064, 7984
                        ]

                        component gen_gain Gain7 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8824
                        ]

                        component "core/Three phase PLL" "Three phase PLL2" {
                        }
                        [
                            position = 6760, 9408
                        ]

                        component gen_terminator Termination3 {
                        }
                        [
                            position = 7048, 9016
                        ]

                        component gen_terminator Termination5 {
                        }
                        [
                            position = 7304, 8488
                        ]

                        component gen_gain Gain9 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7032, 9120
                        ]

                        component gen_gain Gain10 {
                            gain = "100.0"
                        }
                        [
                            position = 7064, 9168
                        ]

                        component gen_gain Gain1 {
                            gain = "10"
                        }
                        [
                            position = 7000, 7592
                        ]

                        component gen_terminator Termination13 {
                        }
                        [
                            position = 6864, 9368
                        ]

                        component gen_gain Gain2 {
                            gain = "10"
                        }
                        [
                            position = 7048, 7696
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7064, 7920
                        ]

                        component gen_terminator Termination7 {
                        }
                        [
                            position = 7336, 8256
                        ]

                        component gen_gain Gain5 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8600
                        ]

                        component Subsystem Subsystem1 {
                            layout = dynamic
                            component gen_abs Abs2 {
                            }
                            [
                                position = 7720, 7896
                            ]

                            component src_constant Constant2 {
                                execution_rate = "Ts"
                                value = "[0]"
                            }
                            [
                                position = 7752, 8048
                            ]

                            component gen_logic_op "Logical operator1" {
                            }
                            [
                                position = 7976, 7856
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7800
                            ]

                            component src_constant Constant1 {
                                execution_rate = "Ts"
                            }
                            [
                                position = 7768, 7856
                            ]

                            component gen_abs Abs1 {
                            }
                            [
                                position = 7720, 7792
                            ]

                            component gen_rel_op "Relational operator4" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8096
                            ]

                            component gen_rel_op "Relational operator3" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8000
                            ]

                            component gen_rel_op "Relational operator2" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7904
                            ]

                            component Subsystem Subsystem3 {
                                layout = dynamic
                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8008
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8032, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 Out1 as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect "Multiport signal switch1.ctrl" u as Connection4
                                connect "Unit Delay1.out" Junction1 as Connection5
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection6
                            }
                            [
                                position = 8152, 8104
                                size = 112, 56
                            ]

                            component Subsystem Subsystem2 {
                                layout = dynamic
                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7576, 8032
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7648, 8056
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8072, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 "Unit Delay1.out" as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect Out1 Junction1 as Connection4
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection5
                                connect u "Multiport signal switch1.ctrl" as Connection6
                            }
                            [
                                position = 8152, 8008
                                size = 112, 56
                            ]

                            port P {
                                label = "P"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 7992
                            ]

                            port Q {
                                label = "Q"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 8088
                            ]

                            port "Lagging or Leading" {
                                label = "Lag or Lead"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8104
                            ]

                            port "Exporting or Importing" {
                                label = "export or import"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8008
                            ]

                            junction Junction1 sp
                            [
                                position = 7560, 8088
                            ]

                            junction Junction4 sp
                            [
                                position = 7592, 7992
                            ]

                            junction Junction11 sp
                            [
                                position = 7808, 7856
                            ]

                            junction Junction13 sp
                            [
                                position = 7824, 8048
                            ]

                            junction Junction14 sp
                            [
                                position = 8040, 8016
                            ]

                            connect Abs1.in Junction1 as Connection1
                            connect Abs1.out "Relational operator1.in" as Connection2
                            connect Abs2.out "Relational operator2.in" as Connection3
                            connect Constant1.out Junction11 as Connection8
                            connect Constant2.out Junction13 as Connection9
                            connect "Exporting or Importing" Subsystem2.Out1 as Connection10
                            connect Junction11 "Relational operator1.in1" as Connection12
                            connect Junction13 "Relational operator3.in1" as Connection14
                            connect Junction14 Subsystem3.E as Connection45
                            connect Junction4 Abs2.in as Connection39
                            connect Junction4 P as Connection18
                            connect "Lagging or Leading" Subsystem3.Out1 as Connection22
                            connect "Logical operator1.out" Junction14 as Connection44
                            connect Q Junction1 as Connection26
                            connect "Relational operator1.out" "Logical operator1.in" as Connection27
                            connect "Relational operator2.in1" Junction11 as Connection28
                            connect "Relational operator2.out" "Logical operator1.in1" as Connection29
                            connect "Relational operator3.in" Junction4 as Connection42
                            connect "Relational operator3.out" Subsystem2.u as Connection31
                            connect "Relational operator4.in" Junction1 as Connection40
                            connect "Relational operator4.in1" Junction13 as Connection32
                            connect "Relational operator4.out" Subsystem3.u as Connection34
                            connect Subsystem2.E Junction14 as Connection46
                        }
                        [
                            position = 7240, 8920
                            size = 112, 80
                        ]

                        port Ia {
                            label = "Ia"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7920
                        ]

                        port Ia_rms {
                            label = "Ia_rms"
                            position = right:7
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7920
                        ]

                        port Ib {
                            label = "Ib"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7984
                        ]

                        port Ib_rms {
                            label = "Ib_rms"
                            position = right:8
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7984
                        ]

                        port Ic {
                            label = "Ic"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8048
                        ]

                        port Ic_rms {
                            label = "Ic_rms"
                            position = right:9
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8048
                        ]

                        port Va {
                            label = "Va"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8128
                        ]

                        port Va_rms {
                            label = "Va_rms"
                            position = right:10
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8128
                        ]

                        port Vb {
                            label = "Vb"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8192
                        ]

                        port Vc {
                            label = "Vc"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8256
                        ]

                        port Vb_rms {
                            label = "Vb_rms"
                            position = right:11
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8192
                        ]

                        port Vc_rms {
                            label = "Vc_rms"
                            position = right:12
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8256
                        ]

                        port P {
                            label = "P"
                            position = right:19
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7160, 8824
                        ]

                        port Q {
                            label = "Q"
                            position = right:20
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7168, 8976
                        ]

                        port S {
                            label = "S"
                            position = right:21
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7112, 9120
                        ]

                        port pf {
                            label = "pf"
                            position = right:22
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7144, 9168
                        ]

                        port Ia_mag {
                            label = "Ia_mag"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7536
                        ]

                        port Ia_phase {
                            label = "Ia_phase"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7592
                        ]

                        port Ib_mag {
                            label = "Ib_mag"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7640
                        ]

                        port Ib_phase {
                            label = "Ib_phase"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7696
                        ]

                        port Ic_mag {
                            label = "Ic_mag"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7744
                        ]

                        port Ic_phase {
                            label = "Ic_phase"
                            position = right:6
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7792
                        ]

                        port Va_mag {
                            label = "Va_mag"
                            position = right:13
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8456
                        ]

                        port Va_phase {
                            label = "Va_phase"
                            position = right:14
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8504
                        ]

                        port Vb_mag {
                            label = "Vb_mag"
                            position = right:15
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8552
                        ]

                        port Vb_phase {
                            label = "Vb_phase"
                            position = right:16
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8600
                        ]

                        port Vc_mag {
                            label = "Vc_mag"
                            position = right:17
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8648
                        ]

                        port Vc_phase {
                            label = "Vc_phase"
                            position = right:18
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8704
                        ]

                        port "Export Import" {
                            label = "Export Import"
                            position = right:28
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7344, 8936
                        ]

                        port "Lag Lead" {
                            label = "Lag Lead"
                            position = right:27
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7392, 8896
                        ]

                        port bus_freq {
                            label = "Bus_freq"
                            position = right:23
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7512, 8400
                        ]

                        port bus_wt {
                            label = "Bus_wt"
                            position = right:24
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7440, 8456
                        ]

                        port Vline_a {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9352
                        ]

                        port Vline_b {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9408
                        ]

                        port Vline_c {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9464
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = right:25
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9416
                        ]

                        port line_wt {
                            label = "Line_wt"
                            position = right:26
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9464
                        ]

                        junction Junction23 sp
                        [
                            position = 6752, 8128
                        ]

                        junction Junction24 sp
                        [
                            position = 6768, 8192
                        ]

                        junction Junction25 sp
                        [
                            position = 6784, 8256
                        ]

                        junction Junction34 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction35 sp
                        [
                            position = 6656, 7920
                        ]

                        junction Junction37 sp
                        [
                            position = 6672, 7984
                        ]

                        junction Junction39 sp
                        [
                            position = 6752, 8360
                        ]

                        junction Junction41 sp
                        [
                            position = 6768, 8392
                        ]

                        junction Junction42 sp
                        [
                            position = 6784, 8424
                        ]

                        junction Junction44 sp
                        [
                            position = 6768, 8568
                        ]

                        junction Junction45 sp
                        [
                            position = 6784, 8584
                        ]

                        junction Junction46 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction48 sp
                        [
                            position = 6752, 8536
                        ]

                        junction Junction49 sp
                        [
                            position = 6928, 8536
                        ]

                        junction Junction50 sp
                        [
                            position = 7056, 8896
                        ]

                        junction Junction51 sp
                        [
                            position = 7056, 8936
                        ]

                        junction Junction52 sp
                        [
                            position = 6752, 8128
                        ]

                        junction Junction53 sp
                        [
                            position = 6656, 7920
                        ]

                        connect "Export Import" "Subsystem1.Exporting or Importing" as Connection110
                        connect Gain1.out Ia_phase as Connection87
                        connect Gain10.in "PQ Power Meter1.k_factor" as Connection105
                        connect Gain11.in "Three phase PLL1.freq" as Connection107
                        connect Gain2.out Ib_phase as Connection89
                        connect Gain3.in "Three Phase Phasor1.phase3" as Connection91
                        connect Gain4.in "Three Phase Phasor2.phase1" as Connection92
                        connect Gain4.out Va_phase as Connection93
                        connect Gain5.out Vb_phase as Connection95
                        connect Gain6.in "Three Phase Phasor2.phase3" as Connection97
                        connect Gain7.in Junction50 as Connection112
                        [
                            breakpoints = 7056, 8888
                        ]
                        connect Gain8.in Junction51 as Connection115
                        connect Gain8.out Q as Connection101
                        connect Gain9.in "PQ Power Meter1.apparent" as Connection103
                        connect Ia Junction35 as Connection2
                        connect Ia_mag "Three Phase Phasor1.out1" as Connection3
                        connect Ia_rms "RMS value1.out" as Connection4
                        connect Ib Junction37 as Connection5
                        connect Ib_rms "RMS value2.out" as Connection6
                        connect Ic Junction34 as Connection7
                        connect Ic_phase Gain3.out as Connection90
                        connect Ic_rms "RMS value3.out" as Connection9
                        connect Junction23 Junction39 as Connection10
                        connect Junction23 Va as Connection11
                        connect Junction24 Junction41 as Connection12
                        connect Junction24 "RMS value5.in" as Connection13
                        connect Junction24 Vb as Connection14
                        connect Junction25 Junction42 as Connection15
                        connect Junction25 "RMS value6.in" as Connection16
                        connect Junction37 "RMS value2.in" as Connection18
                        connect Junction39 "Three phase PLL1.va" as Connection20
                        connect Junction41 "Three phase PLL1.vb" as Connection21
                        connect Junction42 "Three phase PLL1.vc" as Connection22
                        connect Junction44 Junction41 as Connection23
                        connect Junction45 Junction42 as Connection24
                        connect Junction46 Junction34 as Connection25
                        connect Junction48 Junction39 as Connection27
                        connect Junction49 Junction48 as Connection28
                        connect Junction50 "PQ Power Meter1.Pdc" as Connection113
                        connect Junction51 "PQ Power Meter1.Qdc" as Connection116
                        [
                            breakpoints = 7056, 8928
                        ]
                        connect Junction52 Junction23 as Connection119
                        connect Junction53 Junction35 as Connection122
                        connect "Lag Lead" "Subsystem1.Lagging or Leading" as Connection111
                        connect P Gain7.out as Connection98
                        connect "PQ Power Meter1.ia" Junction35 as Connection30
                        connect "PQ Power Meter1.ib" Junction37 as Connection31
                        connect "PQ Power Meter1.vb" Junction44 as Connection33
                        connect "PQ Power Meter1.vc" Junction45 as Connection34
                        connect "PQ Power Meter1.ic" Junction46 as Connection35
                        connect "PQ Power Meter1.va" Junction48 as Connection36
                        connect "RMS value1.in" Junction53 as Connection121
                        connect "RMS value3.in" Junction34 as Connection38
                        connect "RMS value4.in" Junction52 as Connection118
                        connect S Gain9.out as Connection102
                        connect Subsystem1.P Junction50 as Connection114
                        connect Subsystem1.Q Junction51 as Connection117
                        connect Termination10.in "Three phase PLL2.sin_theta" as Connection45
                        connect Termination11.in "Three phase PLL2.d_axis" as Connection46
                        connect Termination12.in "Three phase PLL2.q_axis" as Connection47
                        connect Termination13.in "Three phase PLL2.zero_axis" as Connection48
                        connect Termination3.in "PQ Power Meter1.Pac" as Connection50
                        connect Termination4.in "PQ Power Meter1.Qac" as Connection51
                        connect Termination5.in "Three phase PLL1.sin_theta" as Connection52
                        connect Termination7.in "Three phase PLL1.d_axis" as Connection53
                        connect Termination8.in "Three phase PLL1.q_axis" as Connection54
                        connect Termination9.in "Three phase PLL1.zero_axis" as Connection55
                        connect "Three Phase Phasor1.phase1" Gain1.in as Connection86
                        connect "Three Phase Phasor1.phase2" Gain2.in as Connection88
                        connect "Three Phase Phasor1.out2" Ib_mag as Connection57
                        connect "Three Phase Phasor1.out3" Ic_mag as Connection59
                        connect "Three Phase Phasor1.in2" Junction37 as Connection60
                        connect "Three Phase Phasor1.in3" Junction46 as Connection61
                        connect "Three Phase Phasor1.in_ref" Junction52 as Connection120
                        connect "Three Phase Phasor1.in1" Junction53 as Connection123
                        connect "Three Phase Phasor2.phase2" Gain5.in as Connection94
                        connect "Three Phase Phasor2.in2" Junction44 as Connection64
                        connect "Three Phase Phasor2.in3" Junction45 as Connection65
                        connect "Three Phase Phasor2.in_ref" Junction49 as Connection66
                        connect "Three Phase Phasor2.in1" Junction49 as Connection67
                        connect "Three Phase Phasor2.out1" Va_mag as Connection68
                        connect "Three Phase Phasor2.out2" Vb_mag as Connection70
                        connect "Three Phase Phasor2.out3" Vc_mag as Connection72
                        connect "Three phase PLL2.freq" line_freq as Connection73
                        connect Va_rms "RMS value4.out" as Connection74
                        connect Vb_rms "RMS value5.out" as Connection75
                        connect Vc Junction25 as Connection76
                        connect Vc_phase Gain6.out as Connection96
                        connect Vc_rms "RMS value6.out" as Connection78
                        connect Vline_a "Three phase PLL2.va" as Connection79
                        connect Vline_b "Three phase PLL2.vb" as Connection80
                        connect Vline_c "Three phase PLL2.vc" as Connection81
                        connect bus_freq Gain11.out as Connection106
                        connect bus_wt "Three phase PLL1.theta" as Connection83
                        connect line_wt "Three phase PLL2.theta" as Connection84
                        connect pf Gain10.out as Connection104
                    }
                    [
                        position = 6992, 8104
                        size = 112, 664
                    ]

                    component Subsystem Relay_Param {
                        layout = dynamic
                        component gen_bus_join "Bus Join1" {
                            inputs = "4"
                        }
                        [
                            position = 8296, 7800
                            rotation = right
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "3"
                        }
                        [
                            position = 8104, 8192
                            rotation = down
                            scale = -1, -1
                        ]

                        component src_constant Initial_status {
                            execution_rate = "Ts"
                            value = "Initial_status"
                        }
                        [
                            position = 8088, 7992
                        ]

                        component sys_signal_switch "Signal switch1" {
                            threshold = "0.5"
                        }
                        [
                            position = 9104, 7808
                            scale = 1, -1
                        ]

                        component src_constant dF_threshold {
                            execution_rate = "Ts"
                            value = "dF_threshold"
                        }
                        [
                            position = 8088, 7760
                        ]

                        component src_constant 27P_59P_tripDelay {
                            execution_rate = "Ts"
                            value = "R27P_R59P_tripDelay"
                        }
                        [
                            position = 8088, 7872
                        ]

                        component src_constant angle_threshold {
                            execution_rate = "Ts"
                            value = "angle_threshold"
                        }
                        [
                            position = 8088, 7704
                        ]

                        component src_constant VRMSLL {
                            execution_rate = "Ts"
                            value = "VRMSLL"
                        }
                        [
                            position = 8088, 7592
                        ]

                        component src_constant dV_threshold {
                            execution_rate = "Ts"
                            value = "dV_threshold"
                        }
                        [
                            position = 8088, 7648
                        ]

                        component src_constant CT_primary {
                            execution_rate = "Ts"
                            value = "CT_primary"
                        }
                        [
                            position = 8088, 7928
                        ]

                        component Subsystem Reset {
                            layout = dynamic
                            component gen_logic_op or {
                                operator = "OR"
                            }
                            [
                                position = 8152, 8192
                            ]

                            component Subsystem detect_change {
                                layout = dynamic
                                component tm_delay "Unit Delay1" {
                                }
                                [
                                    position = 8144, 8200
                                ]

                                component gen_rel_op "Relational operator1" {
                                    relational_op = "!="
                                }
                                [
                                    position = 8240, 8192
                                ]

                                port Out1 {
                                    label = "Out"
                                    position = right:1
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8304, 8192
                                ]

                                port In3 {
                                    label = "In"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8032, 8200
                                ]

                                junction Junction1 sp
                                [
                                    position = 8080, 8200
                                ]

                                connect Junction1 In3 as Connection1
                                connect "Relational operator1.in" Junction1 as Connection2
                                connect "Relational operator1.out" Out1 as Connection3
                                connect "Unit Delay1.in" Junction1 as Connection4
                                connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                            }
                            [
                                position = 8248, 8192
                                size = 48, 48
                            ]

                            port reset {
                                label = "Reset"
                                position = right:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8336, 8152
                            ]

                            port op_mode {
                                label = "Op_mode"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8344, 8240
                            ]

                            port "Reset in" {
                                label = "Reset in"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8168
                            ]

                            port "op_mode in" {
                                label = "op_mode in"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8224
                            ]

                            junction Junction1 sp
                            [
                                position = 8096, 8224
                            ]

                            connect Junction1 "op_mode in" as Connection1
                            connect detect_change.Out1 reset as Connection5
                            connect op_mode Junction1 as Connection6
                            connect or.in1 Junction1 as Connection3
                            connect or.in "Reset in" as Connection2
                            connect or.out detect_change.In3 as Connection4
                        }
                        [
                            position = 8280, 8192
                            rotation = down
                            scale = -1, -1
                            size = 104, 104
                        ]

                        component Subsystem Islanded_param {
                            layout = dynamic
                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay2"
                            }
                            [
                                position = 8352, 7888
                                rotation = right
                            ]

                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup2"
                            }
                            [
                                position = 8072, 7856
                                rotation = right
                            ]

                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7920
                                rotation = right
                            ]

                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8544, 8048
                            ]

                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial2"
                            }
                            [
                                position = 8192, 7856
                                rotation = right
                            ]

                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType2"
                            }
                            [
                                position = 8240, 7888
                                rotation = right
                            ]

                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup2"
                            }
                            [
                                position = 8296, 7856
                                rotation = right
                            ]

                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup2"
                            }
                            [
                                position = 8400, 7856
                                rotation = right
                            ]

                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup2"
                            }
                            [
                                position = 8120, 7888
                                rotation = right
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7856
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7888
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7888
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8696, 8048
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8744, 7928
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 9224, 8040
                            size = 216, 104
                        ]

                        component Subsystem Grid_Tied_param {
                            layout = dynamic
                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup1"
                            }
                            [
                                position = 8120, 7880
                                rotation = right
                            ]

                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup1"
                            }
                            [
                                position = 8312, 7840
                                rotation = right
                            ]

                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8552, 8040
                            ]

                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType1"
                            }
                            [
                                position = 8240, 7880
                                rotation = right
                            ]

                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7904
                                rotation = right
                            ]

                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay1"
                            }
                            [
                                position = 8352, 7880
                                rotation = right
                            ]

                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup1"
                            }
                            [
                                position = 8080, 7840
                                rotation = right
                            ]

                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial1"
                            }
                            [
                                position = 8200, 7840
                                rotation = right
                            ]

                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup1"
                            }
                            [
                                position = 8416, 7840
                                rotation = right
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7840
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7880
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7880
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8704, 8040
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8776, 7936
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 8872, 7728
                            size = 216, 104
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8160
                        ]

                        port reset {
                            label = "reset"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8224
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8360, 7856
                        ]

                        port Initial_condition {
                            label = "Initial_condition"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8192, 7992
                        ]

                        port from_Modbus {
                            label = "from_Modbus"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7992, 8192
                        ]

                        port relay_param {
                            label = "relay_param"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9200, 7808
                        ]

                        tag Goto4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8208, 7544
                        ]

                        tag Goto1 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8232, 8280
                        ]

                        tag From2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8616, 7728
                        ]

                        tag Goto2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7872
                        ]

                        tag Goto3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7928
                        ]

                        tag From4 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 9104, 7904
                            rotation = right
                            scale = 1, -1
                        ]

                        tag From1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7696
                        ]

                        tag From3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7760
                        ]

                        junction Junction1 sp
                        [
                            position = 8152, 7592
                        ]

                        junction Junction2 sp
                        [
                            position = 8736, 7696
                        ]

                        junction Junction3 sp
                        [
                            position = 8712, 7728
                        ]

                        junction Junction4 sp
                        [
                            position = 8688, 7760
                        ]

                        connect "Bus Join1.in" Junction1 as Connection54
                        connect "Bus Join1.in2" angle_threshold.out as Connection48
                        connect "Bus Join1.in3" dF_threshold.out as Connection49
                        connect "Bus Join1.in1" dV_threshold.out as Connection47
                        connect "Bus Split1.out1" "Reset.Reset in" as Connection75
                        connect "Bus Split1.in" from_Modbus as Connection42
                        connect From1 Junction2 as Connection60
                        connect From2 Junction3 as Connection63
                        connect From3 Junction4 as Connection66
                        connect From4 "Signal switch1.in2" as Connection71
                        connect Goto1 "Bus Split1.out2" as Connection45
                        connect Goto2 27P_59P_tripDelay.out as Connection51
                        connect Goto3 CT_primary.out as Connection52
                        connect Goto4 Junction1 as Connection56
                        connect Initial_condition Initial_status.out as Connection53
                        connect Islanded_param.VRMSLL Junction2 as Connection62
                        connect Islanded_param.27P_59P_tripDelay Junction3 as Connection65
                        connect Islanded_param.CT_primary Junction4 as Connection68
                        connect Junction1 VRMSLL.out as Connection55
                        connect Junction2 Grid_Tied_param.VRMSLL as Connection61
                        connect Junction3 Grid_Tied_param.27P_59P_tripDelay as Connection64
                        connect Junction4 Grid_Tied_param.CT_primary as Connection67
                        connect "Reset.op_mode in" "Bus Split1.out" as Connection76
                        connect Reset.op_mode op_mode as Connection43
                        connect Reset.reset reset as Connection44
                        connect "Signal switch1.in1" Grid_Tied_param.relay_param as Connection73
                        connect "Signal switch1.in" Islanded_param.relay_param as Connection72
                        connect relay_param "Signal switch1.out" as Connection74
                        connect relay_paramR25 "Bus Join1.out" as Connection50
                    }
                    [
                        position = 8344, 7976
                        size = 168, 160
                    ]

                    component Subsystem "Relay 25-Sync Check1" {
                        layout = dynamic
                        component gen_bus_split "Bus Split1" {
                            outputs = "4"
                        }
                        [
                            position = 7808, 8424
                        ]

                        component gen_logic_op "Logical operator3" {
                            inputs = "3"
                        }
                        [
                            position = 8336, 8104
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8808, 7904
                        ]

                        component gen_logic_op "Logical operator7" {
                            operator = "OR"
                        }
                        [
                            position = 8632, 7888
                        ]

                        component gen_gain Gain3 {
                            gain = "1.0/10.0"
                        }
                        [
                            position = 7776, 8080
                        ]

                        component gen_rel_op "Relational operator1" {
                        }
                        [
                            position = 8464, 7856
                        ]

                        component gen_logic_op "Logical operator4" {
                            operator = "OR"
                        }
                        [
                            position = 8888, 8096
                        ]

                        component gen_gain Gain2 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7832
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7784, 7776
                        ]

                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8736, 7864
                        ]

                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7784, 7832
                        ]

                        component src_constant Constant2 {
                            execution_rate = "Ts"
                            value = "[2]"
                        }
                        [
                            position = 8368, 7848
                        ]

                        component gen_c_function "Deadbus fcn" {
                            global_variables = "real threshold;uint a;uint c;uint b;"
                            in_terminal_dimensions_str = "Vbus inherit;Vline inherit;VRMSLL inherit;"
                            in_terminal_properties = "real Vbus;real Vline;real VRMSLL;"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "out inherit;"
                            output_fnc = "/*Begin code section*/
if (VRMSLL > 400)
    threshold=VRMSLL*0.003;
else
    threshold = VRMSLL*0.05;

if ((Vbus > (VRMSLL*0.90)) && (Vbus < (VRMSLL*1.20)) && (Vline < threshold))
    a = 1;
else
    a = 0;

if ((Vline > (VRMSLL*0.90)) && (Vline < (VRMSLL*1.20)) && (Vbus < threshold))
    b = 1;
else
    b = 0;

if ((Vline < threshold) && (Vbus < threshold))
    c = 1;
else
    c = 0;

out = a || b || c;
/*End code section*/"
                        }
                        [
                            position = 8208, 7672
                        ]

                        component gen_logic_op "Logical operator5" {
                            operator = "OR"
                        }
                        [
                            position = 8544, 7848
                        ]

                        component gen_gain Gain1 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7776
                        ]

                        component Subsystem "Freq Comparator" {
                            layout = dynamic
                            component gen_c_function "C function1" {
                                in_terminal_dimensions_str = "fbus inherit;fline inherit;"
                                in_terminal_properties = "real fbus;inherit fline;"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
out=fabs(fline-fbus);
/*End code section*/"
                            }
                            [
                                position = 7736, 8040
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7832, 8048
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8048
                            ]

                            port f_bus {
                                label = "f_bus"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port f_line {
                                label = "f_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port dF_threshold {
                                label = "dF_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7728, 8112
                            ]

                            connect "Relational operator1.in" "C function1.out" as Connection6
                            connect "Relational operator1.out" Locked as Connection8
                            connect "Relational operator1.in1" dF_threshold as Connection7
                            connect f_bus "C function1.fbus" as Connection4
                            connect f_line "C function1.fline" as Connection5
                        }
                        [
                            position = 8016, 8104
                            size = 112, 88
                        ]

                        component Subsystem "Voltage Comparator" {
                            layout = dynamic
                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7856, 8048
                            ]

                            component gen_c_function "C function1" {
                                in_terminal_dimensions_str = "Vbus inherit;Vline inherit;"
                                in_terminal_properties = "real Vbus;inherit Vline;"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
out=fabs(Vline-Vbus);
/*End code section*/"
                            }
                            [
                                position = 7736, 8040
                            ]

                            component gen_gain Gain1 {
                                gain = "0.01"
                            }
                            [
                                position = 7680, 8200
                            ]

                            component gen_product Product1 {
                            }
                            [
                                position = 7760, 8160
                            ]

                            port V_bus {
                                label = "V_bus"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port V_line {
                                label = "V_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7928, 8048
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8152
                            ]

                            port dV_threshold {
                                label = "dV_threshold"
                                position = left:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8200
                            ]

                            connect Gain1.in dV_threshold as Connection8
                            connect Product1.in1 Gain1.out as Connection7
                            connect Product1.out "Relational operator1.in1" as Connection9
                            connect Product1.in VRMSLL as Connection6
                            connect "Relational operator1.in" "C function1.out" as Connection2
                            connect "Relational operator1.out" Locked as Connection3
                            connect V_bus "C function1.Vbus" as Connection4
                            connect V_line "C function1.Vline" as Connection5
                        }
                        [
                            position = 8016, 7864
                            size = 112, 208
                        ]

                        component Subsystem "Phase Comparator" {
                            layout = dynamic
                            component gen_probe c_out {
                                addr = "17943"
                            }
                            [
                                position = 7768, 8000
                            ]

                            component gen_c_function "C function1" {
                                global_variables = "real mod_L;real wrap_out1;real wrap_out2;real mod_B;real k;real alpha;real PI2;real PI;"
                                in_terminal_dimensions_str = "phase_bus inherit;phase_line inherit;"
                                in_terminal_properties = "real phase_bus;real phase_line;"
                                init_fnc = "/*Begin code section*/
PI = 3.1415926536;
PI2 = 2*PI;
/*End code section*/"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
mod_L=fmod(phase_line, PI2);
mod_B=fmod(phase_bus, PI2);

if (fabs(mod_L - mod_B) > PI) {
    if (mod_L < mod_B)
        mod_B -= PI2;
    else
        mod_B += PI2;
}

out=fabs(mod_L-mod_B)*180.0/PI;
/*End code section*/"
                            }
                            [
                                position = 7656, 8040
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7808, 8056
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8056
                            ]

                            port wt_grid {
                                label = "wt_grid"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8008
                            ]

                            port wt_gen {
                                label = "wt_gen"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8072
                            ]

                            port angle_threshold {
                                label = "angle_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7576, 8136
                            ]

                            junction Junction1 sp
                            [
                                position = 7736, 8048
                            ]

                            connect Junction1 "C function1.out" as Connection2
                            connect Locked "Relational operator1.out" as Connection3
                            connect "Relational operator1.in" Junction1 as Connection4
                            connect angle_threshold "Relational operator1.in1" as Connection8
                            connect c_out.in Junction1 as Connection5
                            connect wt_gen "C function1.phase_line" as Connection6
                            connect wt_grid "C function1.phase_bus" as Connection7
                        }
                        [
                            position = 8016, 8272
                            size = 112, 88
                        ]

                        port trip_or {
                            label = "trip_or"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7792
                        ]

                        port mode_in {
                            label = "mode_in"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7896
                        ]

                        port bool_R25 {
                            label = "bool_R25"
                            position = auto:auto
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9032, 8096
                        ]

                        port Va {
                            label = "Va"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7776
                        ]

                        port Vline_a {
                            label = "Vline_A"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7832
                        ]

                        port bus_freq {
                            label = "bus_freq"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8080
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7824, 8104
                        ]

                        port bus_wt {
                            label = "bus_wt"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7776, 8248
                        ]

                        port line_wt {
                            label = "line_wt"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7832, 8272
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8424
                        ]

                        tag Goto4 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8448
                        ]

                        tag Goto1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8056, 8400
                            rotation = down
                            scale = -1, 1
                        ]

                        tag From2 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8128
                        ]

                        tag From3 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7944
                        ]

                        tag From1 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8296
                        ]

                        tag Goto2 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8416
                            rotation = down
                            scale = -1, 1
                        ]

                        tag Goto3 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7912, 8432
                        ]

                        tag From4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7888
                        ]

                        tag From5 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8112, 7688
                        ]

                        junction Junction4 sp
                        [
                            position = 7920, 7832
                        ]

                        junction Junction5 sp
                        [
                            position = 8536, 8104
                        ]

                        junction Junction23 sp
                        [
                            position = 7904, 7776
                        ]

                        connect "Bus Split1.in" relay_paramR25 as Connection69
                        connect Constant2.out "Relational operator1.in" as Connection1
                        connect "Deadbus fcn.Vbus" Junction23 as Connection103
                        connect "Deadbus fcn.out" "SR Flip Flop1.s_in" as Connection137
                        connect "Freq Comparator.Locked" "Logical operator3.in1" as Connection135
                        connect "Freq Comparator.f_line" line_freq as Connection133
                        connect From1 "Phase Comparator.angle_threshold" as Connection74
                        connect From2 "Freq Comparator.dF_threshold" as Connection79
                        connect From3 "Voltage Comparator.dV_threshold" as Connection80
                        connect From4 "Voltage Comparator.VRMSLL" as Connection81
                        connect From5 "Deadbus fcn.VRMSLL" as Connection90
                        connect Gain3.out "Freq Comparator.f_bus" as Connection132
                        connect Goto1 "Bus Split1.out" as Connection70
                        connect Goto2 "Bus Split1.out1" as Connection71
                        connect Goto3 "Bus Split1.out2" as Connection72
                        connect Goto4 "Bus Split1.out3" as Connection73
                        connect Junction23 Gain1.out as Connection16
                        connect Junction4 "Deadbus fcn.Vline" as Connection104
                        connect Junction4 Gain2.out as Connection21
                        connect Junction5 "Logical operator4.in1" as Connection22
                        connect "Logical operator3.out" Junction5 as Connection24
                        connect "Logical operator3.in2" "Phase Comparator.Locked" as Connection134
                        connect "Logical operator5.out" "Logical operator7.in" as Connection26
                        connect "Logical operator5.in1" "Relational operator1.out" as Connection27
                        connect "Logical operator5.in" trip_or as Connection28
                        connect "Logical operator7.in1" Junction5 as Connection29
                        connect "Logical operator7.out" "SR Flip Flop1.r_in" as Connection30
                        connect "Phase Comparator.wt_grid" bus_wt as Connection110
                        connect "RMS value1.out" Gain1.in as Connection93
                        connect "RMS value2.out" Gain2.in as Connection97
                        connect "Relational operator1.in1" mode_in as Connection36
                        connect "SR Flip Flop1.out" "Logical operator4.in" as Connection37
                        connect "SR Flip Flop1.out_n" Termination1.in as Connection38
                        connect Va "RMS value1.in" as Connection101
                        connect Vline_a "RMS value2.in" as Connection102
                        connect "Voltage Comparator.V_bus" Junction23 as Connection47
                        connect "Voltage Comparator.V_line" Junction4 as Connection48
                        connect "Voltage Comparator.Locked" "Logical operator3.in" as Connection136
                        connect bool_R25 "Logical operator4.out" as Connection138
                        connect bus_freq Gain3.in as Connection121
                        connect line_wt "Phase Comparator.wt_gen" as Connection111
                    }
                    [
                        position = 8888, 7800
                        size = 120, 232
                    ]

                    component Subsystem "State Condition Mng" {
                        layout = dynamic
                        component gen_logic_op not1 {
                            operator = "NOT"
                        }
                        [
                            position = 8032, 8264
                        ]

                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8120, 8352
                            scale = 1, -1
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8200, 8336
                            scale = 1, -1
                        ]

                        component gen_logic_op not {
                            operator = "NOT"
                        }
                        [
                            position = 7840, 8200
                        ]

                        component gen_c_function "Trip_out mng fnc" {
                            in_terminal_dimensions_str = "bool_R25 inherit;op_mode_in inherit;trip_in inherit;enable inherit;initial_condition inherit;activate_logic inherit;"
                            in_terminal_properties = "real bool_R25;inherit op_mode_in;inherit trip_in;inherit enable;inherit initial_condition;inherit activate_logic;"
                            init_fnc = "/*Begin code section*/
trip_out = initial_condition;
/*End code section*/"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "trip_out inherit;"
                            out_terminal_properties = "real trip_out;"
                            output_fnc = "/*Begin code section*/
if(enable && activate_logic){
    if(op_mode_in==0){
        trip_out = trip_in*bool_R25;
    }
    else if(op_mode_in==1){
        trip_out = 1*bool_R25;
    }
    else if(op_mode_in==2){
        trip_out=0;
    }
}
/*End code section*/"
                        }
                        [
                            position = 8424, 8208
                        ]

                        component Subsystem detect_change {
                            layout = dynamic
                            component tm_delay "Unit Delay1" {
                            }
                            [
                                position = 8144, 8200
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "!="
                            }
                            [
                                position = 8240, 8192
                            ]

                            port Out1 {
                                label = "Out"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8304, 8192
                            ]

                            port In3 {
                                label = "In"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8032, 8200
                            ]

                            junction Junction1 sp
                            [
                                position = 8080, 8200
                            ]

                            connect Junction1 In3 as Connection1
                            connect "Relational operator1.in" Junction1 as Connection2
                            connect "Relational operator1.out" Out1 as Connection3
                            connect "Unit Delay1.in" Junction1 as Connection4
                            connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                        }
                        [
                            position = 7960, 8368
                            size = 48, 48
                        ]

                        port Trip_in {
                            label = "Trip_in"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7768, 8200
                        ]

                        port R25 {
                            label = "R25"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8232, 8128
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8272, 8160
                        ]

                        port trip_out {
                            label = "trip_out"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8536, 8208
                        ]

                        port enable {
                            label = "enable"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7952, 8264
                        ]

                        port initial_condition {
                            label = "initial_condition"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8248, 8232
                        ]

                        junction Junction2 sp
                        [
                            position = 7984, 8264
                        ]

                        junction Junction3 sp
                        [
                            position = 7904, 8200
                        ]

                        connect Junction2 enable as Connection150
                        connect Junction3 not.out as Connection158
                        connect R25 "Trip_out mng fnc.bool_R25" as Connection144
                        connect "SR Flip Flop1.r_in" not1.out as Connection136
                        connect Termination1.in "SR Flip Flop1.out_n" as Connection138
                        connect "Trip_out mng fnc.enable" Junction2 as Connection151
                        connect "Trip_out mng fnc.trip_in" Junction3 as Connection157
                        connect "Trip_out mng fnc.activate_logic" "SR Flip Flop1.out" as Connection154
                        connect detect_change.In3 Junction3 as Connection159
                        connect detect_change.Out1 "SR Flip Flop1.s_in" as Connection156
                        connect initial_condition "Trip_out mng fnc.initial_condition" as Connection152
                        connect not.in Trip_in as Connection139
                        connect not1.in Junction2 as Connection149
                        connect op_mode "Trip_out mng fnc.op_mode_in" as Connection145
                        connect trip_out "Trip_out mng fnc.trip_out" as Connection167
                    }
                    [
                        position = 9336, 8056
                        size = 128, 136
                    ]

                    component Subsystem R50512761 {
                        layout = dynamic
                        component gen_c_function Relays {
                            global_variables = "real R50;real R51;real R27;real R59;real n50;real n51;real n59;real n27;real t59;real t50;real t51;real bool_27;real t27;real bool_59;uint i;real bool_51;real bool_50;real A;real B;real P;real Ipu50;real Ipu51;real CT_tap;real ratio[3];real M[3];real t51s[3];real Iinst[3];real Irms[3];real Vrms[3];"
                            in_terminal_dimensions_str = "enable inherit;Ts inherit;Reset inherit;IinstA inherit;IinstB inherit;IinstC inherit;IrmsA inherit;IrmsB inherit;IrmsC inherit;VrmsA inherit;VrmsB inherit;VrmsC inherit;VRMSLN inherit;CT_p inherit;IOC_pickup inherit;IOC_tripDelay inherit;TOC_pickup inherit;curveType inherit;timeDial inherit;UV_pickup inherit;OV_pickup inherit;UVOV_tripDelay inherit;"
                            in_terminal_properties = "real enable;inherit Ts;inherit Reset;inherit IinstA;inherit IinstB;inherit IinstC;inherit IrmsA;inherit IrmsB;inherit IrmsC;inherit VrmsA;inherit VrmsB;inherit VrmsC;inherit VRMSLN;inherit CT_p;inherit IOC_pickup;inherit IOC_tripDelay;inherit TOC_pickup;inherit curveType;inherit timeDial;inherit UV_pickup;inherit OV_pickup;inherit UVOV_tripDelay;"
                            init_fnc = "/*Begin code section*/
R50=0;
R51=0;
R27=0;
R59=0;

n50=0;
n51=0;
n59=0;
n27=0;

CT_tap = 1.0;

A = 5.67;
B = 0.0352;
P = 2.0;

t59 = 0;
t50 = 0;
t51 = 0;
t27 = 0;

bool_27 = 0;
bool_59 = 0;
bool_51 = 0;
bool_50 = 0;
/*End code section*/"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "trip50 inherit;trip51 inherit;trip27 inherit;trip59 inherit;"
                            out_terminal_properties = "real trip50;real trip51;real trip27;real trip59;"
                            output_fnc = "/*Begin code section*/
Iinst[0] = fabs(IinstA);
Iinst[1] = fabs(IinstB);
Iinst[2] = fabs(IinstC);

Irms[0] = IrmsA;
Irms[1] = IrmsB;
Irms[2] = IrmsC;

Vrms[0] = VrmsA;
Vrms[1] = VrmsB;
Vrms[2] = VrmsC;

if (Reset==1) {
    R50=0;
    R51=0;
    R59=0;
    R27=0;
    bool_50 = 0.0;
}

for(i=0; i<3; i++){
    Iinst[i] = Iinst[i]*5.0/CT_p;
    Irms[i] = Irms[i]*5.0/CT_p;
}

if(curveType==1){
    A = 0.0104;
    B = 0.0226;
    P = 0.02;
}
else if(curveType==2){
    A = 5.95;
    B = 0.180;
    P = 2.0;
}
else if(curveType==3){
    A = 3.88;
    B = 0.0923;
    P = 2.0;
}
else{
    A = 5.67;
    B = 0.0352;
    P = 2.0;
}

if (!((R50 == 1) || (R51 == 1))&&(enable==1)){
    
    if((UV_pickup>1)||(UV_pickup==0)){
        UV_pickup = 0.9;
    }
    if((OV_pickup<1)||(OV_pickup==0)){
        OV_pickup = 1.1;
    }
    
    Ipu50 = IOC_pickup*CT_tap*sqrt(2.0);
    Ipu51 = TOC_pickup*CT_tap;
    
    for(i=0; i<3; i++){
        ratio[i] = Vrms[i]/VRMSLN;
        M[i] = Irms[i]/Ipu51;
        if(M[i]<=1.0){
            t51s[i] = 1e6;
        }
        else{
            t51s[i] = timeDial*(B+(A/(pow(M[i],P)-1)));
        }
    }
    
    t27 = 0.004167 + UVOV_tripDelay;
    t50 = 0.004167 + IOC_tripDelay;
    t59 = 0.004167 + UVOV_tripDelay;
    
    if((t51s[0]<=t51s[1])&&(t51s[0]<=t51s[2])){
        t51 = t51s[0];
    }
    else if(t51s[1]<=t51s[2]){
        t51 = t51s[1];
    }
    else{
        t51 = t51s[2];
    }
    
    for(i=0; i<3; i++){
        if(ratio[i]<=UV_pickup){
            bool_27 = 1;
            break;
        }
        else{
            bool_27 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Irms[i]>Ipu51){
            bool_51 = 1;
            break;
        }
        else{
            bool_51 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Iinst[i]>Ipu50){
            bool_50 = 1;
            break;
        }
    }
    for(i=0; i<3; i++){
        if(ratio[i]>=OV_pickup){
            bool_59 = 1;
            break;
        }
        else{
            bool_59 = 0;
        }
    }
    //bool_27 = ((ratio[0]<=UV_pickup)+(ratio[1]<=UV_pickup)+(ratio[2]<=UV_pickup))>0;
    //bool_59 = ((ratio[0]>=OV_pickup)+(ratio[1]>=OV_pickup)+(ratio[2]>=OV_pickup))>0;
    //bool_50 = ((Iinst[0]>Ipu50)+(Iinst[1]>Ipu50)+(Iinst[2]>Ipu50))>0;
    //bool_51 = ((Irms[0]>Ipu51)+(Irms[1]>Ipu51)+(Irms[2]>Ipu51))>0;
    
    n50 *= bool_50;
    n51 *= bool_51;
    n27 *= bool_27;
    n59 *= bool_59;

    n50 += bool_50  * Ts;
    n51 += bool_51  * Ts;
    n27 += bool_27  * Ts;
    n59 += bool_59  * Ts;

    if(n50 > t50)
        R50 = 1;
    else
        R50 = 0;

    if(n51 > t51)
        R51 = 1;
    else
        R51 = 0;

    if(n27 > t27)
        R27 = 1;
    else
        R27 = 0;

    if(n59 > t59)
        R59 = 1;
    else
        R59 = 0;
}

trip50 = R50;
trip51 = R51;
trip27 = R27;
trip59 = R59;
/*End code section*/"
                        }
                        [
                            position = 7784, 8008
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "10"
                        }
                        [
                            position = 7560, 8248
                            rotation = left
                        ]

                        component src_constant Ts {
                            execution_rate = "Ts"
                            value = "Ts"
                        }
                        [
                            position = 7696, 7712
                            rotation = right
                        ]

                        port trip_50 {
                            label = "trip_50"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7848
                        ]

                        port trip_51 {
                            label = "trip_51"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7952
                        ]

                        port trip_59 {
                            label = "trip_59"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8160
                        ]

                        port trip_27 {
                            label = "trip_27"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8056
                        ]

                        port relay_param {
                            label = "Relay Param"
                            position = left:12
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7560, 8328
                            rotation = left
                        ]

                        port Irms_c {
                            label = "Irms_c"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7368, 7752
                            rotation = right
                        ]

                        port Irms_a {
                            label = "Irms_a"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7472, 7752
                            rotation = right
                        ]

                        port Enable {
                            label = "Enable"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7736, 7752
                            rotation = right
                        ]

                        port Iinst_a {
                            label = "Iinst_a"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7608, 7712
                            rotation = right
                        ]

                        port Irms_b {
                            label = "Irms_b"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7424, 7712
                            rotation = right
                        ]

                        port Iinst_b {
                            label = "Iinst_b"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7568, 7752
                            rotation = right
                        ]

                        port Reset {
                            label = "Reset"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7656, 7752
                            rotation = right
                        ]

                        port Iinst_c {
                            label = "Iinst_c"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7520, 7712
                            rotation = right
                        ]

                        port Vrms_b {
                            label = "Vrms_b"
                            position = left:10
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7256, 7752
                            rotation = right
                        ]

                        port Vrms_c {
                            label = "Vrms_c"
                            position = left:11
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7200, 7712
                            rotation = right
                        ]

                        port Vrms_a {
                            label = "Vrms_a"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7312, 7712
                            rotation = right
                        ]

                        comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus split:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                        [
                            position = 7728, 8224
                        ]

                        connect "Bus Split1.out" Relays.VRMSLN as Connection46
                        connect "Bus Split1.out2" Relays.IOC_pickup as Connection44
                        connect "Bus Split1.out7" Relays.UV_pickup as Connection39
                        connect "Bus Split1.out3" Relays.IOC_tripDelay as Connection43
                        connect "Bus Split1.out9" Relays.UVOV_tripDelay as Connection37
                        connect "Bus Split1.out1" Relays.CT_p as Connection45
                        connect "Bus Split1.out8" Relays.OV_pickup as Connection38
                        connect "Bus Split1.out6" Relays.timeDial as Connection40
                        connect "Bus Split1.out5" Relays.curveType as Connection41
                        connect "Bus Split1.out4" Relays.TOC_pickup as Connection42
                        connect "Bus Split1.in" relay_param as Connection36
                        connect Enable Relays.enable as Connection47
                        connect Iinst_a Relays.IinstA as Connection50
                        connect Iinst_b Relays.IinstB as Connection51
                        connect Iinst_c Relays.IinstC as Connection52
                        connect Irms_a Relays.IrmsA as Connection53
                        connect Irms_b Relays.IrmsB as Connection54
                        connect Irms_c Relays.IrmsC as Connection55
                        connect Reset Relays.Reset as Connection49
                        connect Ts.out Relays.Ts as Connection48
                        connect Vrms_a Relays.VrmsA as Connection56
                        connect Vrms_b Relays.VrmsB as Connection57
                        connect Vrms_c Relays.VrmsC as Connection58
                        connect trip_27 Relays.trip27 as Connection77
                        connect trip_50 Relays.trip50 as Connection76
                        connect trip_51 Relays.trip51 as Connection75
                        connect trip_59 Relays.trip59 as Connection78
                    }
                    [
                        position = 8424, 8328
                        size = 144, 304
                    ]

                    port OUTPUT {
                        label = "OUTPUT"
                        position = bottom:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9704, 8056
                    ]

                    port Ia {
                        label = "Ia"
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7816
                    ]

                    port Ib {
                        label = "Ib"
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7888
                    ]

                    port Ic {
                        label = "Ic"
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7960
                    ]

                    port Va {
                        label = "Va"
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8032
                    ]

                    port Vb {
                        label = "Vb"
                        position = left:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8104
                    ]

                    port Vc {
                        label = "Vc"
                        position = left:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8176
                    ]

                    port Vline_a {
                        label = "Vline_A"
                        position = left:7
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8248
                    ]

                    port faults_status {
                        label = "Fault_status"
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8272
                    ]

                    port TO_MODBUS {
                        label = "To_Modbus"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8024, 8080
                    ]

                    port Vline_b {
                        label = "Vline_B"
                        position = left:8
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8320
                    ]

                    port Vline_c {
                        label = "Vline_C"
                        position = left:9
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8392
                    ]

                    port cb_state {
                        label = "cb_state"
                        position = left:10
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7312, 8624
                    ]

                    port pf_states {
                        label = "pf_state"
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8416
                        scale = 1, -1
                    ]

                    port from_Modbus {
                        label = "From Modbus"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8144, 7976
                    ]

                    tag Goto22 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7248, 7832
                        rotation = left
                    ]

                    tag Goto18 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7088, 7688
                        rotation = left
                    ]

                    tag Goto14 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7784
                    ]

                    tag Goto19 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 7832
                        rotation = left
                    ]

                    tag Goto15 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7856
                    ]

                    tag Goto8 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8216
                    ]

                    tag From14 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7704
                    ]

                    tag From19 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7824
                    ]

                    tag From33 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9120, 8080
                    ]

                    tag Goto12 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7224, 8256
                    ]

                    tag Goto23 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 8000
                        scale = 1, -1
                    ]

                    tag From32 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8104
                    ]

                    tag Goto21 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 7688
                        rotation = left
                    ]

                    tag Goto17 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7104, 7760
                        rotation = left
                    ]

                    tag Goto20 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7232, 7760
                        rotation = left
                    ]

                    tag Goto11 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7376, 8256
                    ]

                    tag From36 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8216
                    ]

                    tag From8 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9104, 8304
                    ]

                    tag From31 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9096, 8424
                    ]

                    tag From30 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9024, 8408
                    ]

                    tag From37 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7848
                    ]

                    tag From2 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7480, 8288
                    ]

                    tag From7 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9072, 8224
                        rotation = down
                        scale = -1, -1
                    ]

                    tag From26 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8432
                    ]

                    tag From22 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8288
                    ]

                    tag From25 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8360
                    ]

                    tag From9 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8992, 8240
                        rotation = down
                        scale = -1, 1
                    ]

                    tag From1 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7600, 8280
                        rotation = right
                    ]

                    tag From13 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8320
                    ]

                    tag From6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7584, 8560
                        rotation = right
                    ]

                    tag From29 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8032
                    ]

                    tag From3 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7392, 8384
                    ]

                    tag Goto4 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8424
                    ]

                    tag Goto28 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7928
                        scale = 1, -1
                    ]

                    tag From27 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8408
                    ]

                    tag From15 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7728
                    ]

                    tag From17 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7752
                    ]

                    tag From28 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8384
                    ]

                    tag Goto29 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 7952
                        scale = 1, -1
                    ]

                    tag Goto25 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8320
                    ]

                    tag Goto2 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8248
                    ]

                    tag From4 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7448, 8464
                    ]

                    tag From20 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8240
                    ]

                    tag Goto5 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9088, 7752
                    ]

                    tag From5 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7520, 8504
                    ]

                    tag Goto26 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8296, 8152
                    ]

                    tag From34 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7896
                    ]

                    tag From12 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9032, 8288
                    ]

                    tag Goto24 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 8304
                    ]

                    tag From24 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8312
                    ]

                    tag Goto13 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7296, 8288
                    ]

                    tag From23 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8336
                    ]

                    tag Goto6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9640, 8096
                    ]

                    tag Goto1 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8160
                    ]

                    tag Goto9 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8000
                    ]

                    tag From16 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7776
                    ]

                    tag From11 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8880, 8256
                    ]

                    tag From35 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8456
                    ]

                    tag From21 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8264
                    ]

                    tag Goto3 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8336
                    ]

                    tag Goto16 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7928
                    ]

                    tag Goto27 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7976
                        scale = 1, -1
                    ]

                    tag Goto10 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8272
                    ]

                    tag Goto7 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 8024
                        scale = 1, -1
                    ]

                    tag From18 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7800
                    ]

                    tag From10 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8272
                    ]

                    tag Goto34 {
                        value = "F3_CB1_BREAKER"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7424, 7824
                        hide_name = True
                    ]

                    tag Goto31 {
                        value = "F3_CB1_P_REACTIVE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7424, 7752
                        hide_name = True
                    ]

                    tag Goto33 {
                        value = "F3_CB1_FREQUENCY"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7424, 7800
                        hide_name = True
                    ]

                    tag Goto32 {
                        value = "F3_CB1_VOLTAGE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7424, 7776
                        hide_name = True
                    ]

                    tag Goto30 {
                        value = "F3_CB1_P_REAL"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7424, 7728
                        hide_name = True
                    ]

                    junction Junction51 sp
                    [
                        position = 8720, 8056
                    ]

                    junction Junction100 sp
                    [
                        position = 8536, 8192
                    ]

                    junction Junction101 sp
                    [
                        position = 8536, 8280
                    ]

                    junction Junction104 sp
                    [
                        position = 9016, 7800
                    ]

                    junction Junction105 sp
                    [
                        position = 9584, 8056
                    ]

                    junction Junction106 sp
                    [
                        position = 7368, 8624
                    ]

                    junction Junction108 sp
                    [
                        position = 6688, 8248
                    ]

                    junction Junction109 sp
                    [
                        position = 6696, 8032
                    ]

                    junction Junction110 sp
                    [
                        position = 7304, 8240
                    ]

                    junction Junction111 sp
                    [
                        position = 6640, 7816
                    ]

                    junction Junction112 sp
                    [
                        position = 6640, 7888
                    ]

                    junction Junction113 sp
                    [
                        position = 6640, 7960
                    ]

                    junction Junction114 sp
                    [
                        position = 7088, 7984
                    ]

                    junction Junction115 sp
                    [
                        position = 7104, 8000
                    ]

                    junction Junction116 sp
                    [
                        position = 7120, 8016
                    ]

                    junction Junction117 sp
                    [
                        position = 7216, 8032
                    ]

                    junction Junction118 sp
                    [
                        position = 7232, 8048
                    ]

                    junction Junction119 sp
                    [
                        position = 7248, 8064
                    ]

                    junction Junction120 sp
                    [
                        position = 8536, 8368
                    ]

                    junction Junction121 sp
                    [
                        position = 8536, 8456
                    ]

                    junction Junction122 sp
                    [
                        position = 8216, 8192
                    ]

                    junction Junction123 sp
                    [
                        position = 7288, 8176
                    ]

                    junction Junction124 sp
                    [
                        position = 7304, 8192
                    ]

                    junction Junction125 sp
                    [
                        position = 7168, 8032
                    ]

                    junction Junction126 sp
                    [
                        position = 7320, 8240
                    ]

                    junction Junction127 sp
                    [
                        position = 7336, 8624
                    ]

                    junction Junction128 sp
                    [
                        position = 7320, 7728
                    ]

                    junction Junction129 sp
                    [
                        position = 7336, 7752
                    ]

                    comment Comment2 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52A</p></body></html> ENDCOMMENT 
                    [
                        position = 7400, 8568
                    ]

                    comment Comment4 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Status</p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8256
                    ]

                    comment Comment3 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52B</p></body></html> ENDCOMMENT 
                    [
                        position = 7432, 8720
                    ]

                    comment Comment5 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">pf_states </p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8400
                    ]

                    connect "Bus Join1.in13" "CALC FROM MEASUREMENTS.Va_phase" as Connection134
                    connect "Bus Join1.in15" "CALC FROM MEASUREMENTS.Vb_phase" as Connection135
                    connect "Bus Join1.in20" "CALC FROM MEASUREMENTS.S" as Connection144
                    connect "Bus Join1.in5" "CALC FROM MEASUREMENTS.Ic_phase" as Connection133
                    connect "Bus Join1.in17" "CALC FROM MEASUREMENTS.Vc_phase" as Connection140
                    connect "Bus Join1.in3" "CALC FROM MEASUREMENTS.Ib_phase" as Connection132
                    connect "Bus Join1.in21" "CALC FROM MEASUREMENTS.pf" as Connection149
                    connect "Bus Join1.in6" Junction114 as Connection268
                    connect "Bus Join1.in9" Junction117 as Connection283
                    connect "Bus Join1.in10" Junction118 as Connection286
                    connect "Bus Join1.in18" Junction123 as Connection382
                    connect "Bus Join1.in22" Junction126 as Connection392
                    connect "CALC FROM MEASUREMENTS.Ib_mag" "Bus Join1.in2" as Connection6
                    connect "CALC FROM MEASUREMENTS.Vc_mag" "Bus Join1.in16" as Connection4
                    connect "CALC FROM MEASUREMENTS.Ia_phase" "Bus Join1.in1" as Connection131
                    connect "CALC FROM MEASUREMENTS.Vb_mag" "Bus Join1.in14" as Connection1
                    connect "CALC FROM MEASUREMENTS.Va_mag" "Bus Join1.in12" as Connection3
                    connect "CALC FROM MEASUREMENTS.Ic_mag" "Bus Join1.in4" as Connection2
                    connect "CALC FROM MEASUREMENTS.Ia_mag" "Bus Join1.in" as Connection5
                    connect "CALC FROM MEASUREMENTS.line_freq" Goto10 as Connection224
                    connect "CALC FROM MEASUREMENTS.line_wt" Goto13 as Connection245
                    connect "CALC FROM MEASUREMENTS.Vline_a" Junction108 as Connection217
                    connect "CALC FROM MEASUREMENTS.Va" Junction109 as Connection218
                    connect "CALC FROM MEASUREMENTS.Ia" Junction111 as Connection257
                    connect "CALC FROM MEASUREMENTS.Ib" Junction112 as Connection256
                    connect "CALC FROM MEASUREMENTS.Ic" Junction113 as Connection258
                    connect "CALC FROM MEASUREMENTS.Ib_rms" Junction115 as Connection271
                    connect "CALC FROM MEASUREMENTS.Ic_rms" Junction116 as Connection274
                    connect "CALC FROM MEASUREMENTS.Vc_rms" Junction119 as Connection289
                    connect "CALC FROM MEASUREMENTS.Q" Junction124 as Connection386
                    connect "Control Panel Input1.out" Junction122 as Connection381
                    connect From1 Sum1.in as Connection167
                    connect From10 bitwise_faults.R50 as Connection197
                    connect From11 bitwise_faults.R27 as Connection195
                    connect From12 bitwise_faults.R51 as Connection199
                    connect From13 bitwise_faults.Reset as Connection210
                    connect From14 "Relay 25-Sync Check1.Va" as Connection219
                    connect From15 "Relay 25-Sync Check1.Vline_a" as Connection220
                    connect From16 "Relay 25-Sync Check1.line_freq" as Connection225
                    connect From17 "Relay 25-Sync Check1.bus_freq" as Connection238
                    connect From18 "Relay 25-Sync Check1.bus_wt" as Connection244
                    connect From19 "Relay 25-Sync Check1.line_wt" as Connection246
                    connect From2 Gain1.in as Connection168
                    connect From20 R50512761.Iinst_a as Connection336
                    connect From21 R50512761.Iinst_b as Connection337
                    connect From22 R50512761.Iinst_c as Connection338
                    connect From23 R50512761.Irms_b as Connection340
                    connect From24 R50512761.Irms_a as Connection339
                    connect From25 R50512761.Irms_c as Connection341
                    connect From26 R50512761.Vrms_c as Connection344
                    connect From27 R50512761.Vrms_b as Connection343
                    connect From28 R50512761.Vrms_a as Connection342
                    connect From29 "State Condition Mng.op_mode" as Connection309
                    connect From3 Gain4.in as Connection169
                    connect From30 "pf bitwise.exp_imp" as Connection313
                    connect From31 "pf bitwise.lag_lead" as Connection312
                    connect From32 "State Condition Mng.enable" as Connection318
                    connect From33 "State Condition Mng.initial_condition" as Connection319
                    connect From34 "Relay 25-Sync Check1.relay_paramR25" as Connection320
                    connect From35 R50512761.relay_param as Connection321
                    connect From36 R50512761.Reset as Connection335
                    connect From37 "Relay 25-Sync Check1.mode_in" as Connection334
                    connect From4 Gain5.in as Connection171
                    connect From5 Gain6.in as Connection173
                    connect From7 bitwise_faults.Status as Connection203
                    connect From8 bitwise_faults.R59 as Connection201
                    connect From9 bitwise_faults.R25 as Connection193
                    connect Gain1.out Sum1.in1 as Connection21
                    connect Gain4.out Sum1.in2 as Connection170
                    connect Gain5.out Sum1.in3 as Connection172
                    connect Gain6.out Sum1.in4 as Connection174
                    connect Gain7.out Sum3.in1 as Connection180
                    connect Gain8.in Junction106 as Connection186
                    connect Gain8.out Sum3.in2 as Connection183
                    connect Goto1 Junction100 as Connection152
                    connect Goto11 Junction110 as Connection242
                    connect Goto12 "CALC FROM MEASUREMENTS.bus_wt" as Connection243
                    connect Goto14 Junction111 as Connection249
                    connect Goto15 Junction112 as Connection252
                    connect Goto16 Junction113 as Connection255
                    connect Goto17 Junction115 as Connection273
                    connect Goto19 Junction116 as Connection276
                    connect Goto2 Junction101 as Connection155
                    connect Goto22 Junction119 as Connection367
                    connect Goto23 Relay_Param.op_mode as Connection329
                    connect Goto24 "CALC FROM MEASUREMENTS.Lag Lead" as Connection310
                    connect Goto25 "CALC FROM MEASUREMENTS.Export Import" as Connection311
                    connect Goto27 Relay_Param.Initial_condition as Connection331
                    connect Goto28 Relay_Param.relay_param as Connection333
                    connect Goto29 Relay_Param.relay_paramR25 as Connection332
                    connect Goto30 Junction128 as Connection400
                    connect Goto31 Junction129 as Connection403
                    connect Goto32 normalize.out as Connection398
                    connect Goto33 Junction126 as Connection394
                    connect Goto34 Junction127 as Connection397
                    connect Goto4 Junction121 as Connection298
                    connect Goto5 Junction104 as Connection164
                    connect Goto6 Junction105 as Connection178
                    connect Goto7 Relay_Param.reset as Connection330
                    connect Goto8 Junction108 as Connection213
                    connect Goto9 Junction109 as Connection216
                    connect Ia Junction111 as Connection247
                    connect Ib Junction112 as Connection250
                    connect Ic Junction113 as Connection253
                    connect Junction100 "Logical operator1.in" as Connection196
                    connect Junction101 "Logical operator1.in1" as Connection198
                    connect Junction101 R50512761.trip_51 as Connection154
                    connect Junction104 "State Condition Mng.R25" as Connection303
                    connect Junction105 "Unit Delay4.out" as Connection202
                    connect Junction106 not.in as Connection185
                    connect Junction110 "CALC FROM MEASUREMENTS.bus_freq" as Connection241
                    connect Junction114 "CALC FROM MEASUREMENTS.Ia_rms" as Connection269
                    connect Junction114 Goto18 as Connection355
                    connect Junction115 "Bus Join1.in7" as Connection272
                    connect Junction116 "Bus Join1.in8" as Connection275
                    connect Junction117 Goto21 as Connection365
                    connect Junction117 Junction125 as Connection389
                    connect Junction118 "CALC FROM MEASUREMENTS.Vb_rms" as Connection287
                    connect Junction118 Goto20 as Connection366
                    connect Junction119 "Bus Join1.in11" as Connection290
                    connect Junction120 Goto3 as Connection296
                    connect Junction121 R50512761.trip_59 as Connection299
                    connect Junction122 Goto26 as Connection380
                    connect Junction123 "CALC FROM MEASUREMENTS.P" as Connection383
                    connect Junction124 "Bus Join1.in19" as Connection387
                    connect Junction125 "CALC FROM MEASUREMENTS.Va_rms" as Connection390
                    connect Junction126 Junction110 as Connection393
                    connect Junction127 Junction106 as Connection396
                    connect Junction128 Junction123 as Connection401
                    connect Junction129 Junction124 as Connection404
                    connect Junction51 "State Condition Mng.Trip_in" as Connection302
                    connect "Logical operator1.in2" Junction120 as Connection297
                    connect "Logical operator1.in3" Junction121 as Connection300
                    connect "Logical operator1.out" Junction51 as Connection79
                    connect OUTPUT Junction105 as Connection176
                    connect P.in Junction128 as Connection402
                    connect Q.in Junction129 as Connection405
                    connect R50512761.trip_50 Junction100 as Connection150
                    connect R50512761.trip_27 Junction120 as Connection295
                    connect R50512761.Enable Junction122 as Connection379
                    connect "Relay 25-Sync Check1.bool_R25" Junction104 as Connection162
                    connect "Relay 25-Sync Check1.trip_or" Junction51 as Connection94
                    connect Sum3.in From6 as Connection179
                    connect Sum3.out "Unit Delay5.in" as Connection190
                    connect TO_MODBUS "Bus Join1.out" as Connection101
                    connect "Unit Delay2.out" "Bus Join1.in23" as Connection175
                    connect "Unit Delay2.in" Sum1.out as Connection104
                    connect "Unit Delay4.in" "State Condition Mng.trip_out" as Connection304
                    connect "Unit Delay5.out" "Bus Join1.in24" as Connection191
                    connect Va Junction109 as Connection214
                    connect Vb "CALC FROM MEASUREMENTS.Vb" as Connection108
                    connect Vc "CALC FROM MEASUREMENTS.Vc" as Connection109
                    connect Vline_a Junction108 as Connection211
                    connect Vline_b "CALC FROM MEASUREMENTS.Vline_b" as Connection111
                    connect Vline_c "CALC FROM MEASUREMENTS.Vline_c" as Connection112
                    connect cb_state Junction127 as Connection395
                    connect faults_status bitwise_faults.fault_status as Connection368
                    connect from_Modbus Relay_Param.from_Modbus as Connection328
                    connect normalize.in Junction125 as Connection399
                    connect not.out Gain7.in as Connection181
                    connect "pf bitwise.pf_states" pf_states as Connection369

                    CT_primary = "1200"
                    R27P_R59P_tripDelay = "2"
                    R27P_pickup1 = ".7"
                    R27P_pickup2 = ".5"
                    R50P_tripDelay2 = "0.0"
                    R51P_curveType2 = "1"
                    R51P_pickup2 = ".8"
                    R51P_timeDial2 = "1"
                    R59P_pickup1 = "1.2"
                    R59P_pickup2 = "1.2"

                    mask {
                        description = "This block implements the relay SEL 787 with protective functions 25 (synchronism check), 27 (Under Voltage), 50 (Instantaneous Overcurrent), 51 (Time Overcurrent) and 59 (Overvoltage). 

he relay outputs to Modbus are: 0 - Ia_mag; 1 - Ia_phase; 2 - Ib_mag; 3 - Ib_phase; 4 - Ic_mag; 5 - Ic_phase; 6 - Ia_rms; 7 - Ib_rms; 8 - Ic_rms; 9 - Va_rms; 10 - Vb_rms; 11 - Vc_rms; 12 - Va_mag; 13 - Va_phase; 14 - Vb_mag; 15 - Vb_phase; 16 - Vc_mag; 17 - Vc_phase; 18 - P; 19 - Q; 20 - S; 21 - pf; 22 - Bus_freq; 23 - protection functions status; 24 - Circuit Breaker status.

he relay inputs from Modbus are: 2001 - op_mode; 2002 - Reset; 2003 - protection_mode.

he trip pickups for functions 50 and 51 are defined as currents in the secondary of the current transformer. The secondary ot the CT has 5 turns."

                        VRMSLL {
                            label = "Line to Line RMS voltage"
                            widget = edit
                            type = generic
                            default_value = "13800.0"
                            unit = "V"
                            group = "Base Parameters"
                        }

                        dV_threshold {
                            label = "Voltage deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "5.0"
                            unit = "%"
                            group = "Base Parameters"
                        }

                        angle_threshold {
                            label = "Angle deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "12.0"
                            unit = "degree"
                            group = "Base Parameters"
                        }

                        dF_threshold {
                            label = "Frequency deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Hz"
                            group = "Base Parameters"
                        }

                        R27P_R59P_tripDelay {
                            label = "R27 UV and R59 OV trip delay"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Sec"
                            group = "Base Parameters"
                        }

                        CT_primary {
                            label = "CT primary turns number"
                            widget = edit
                            type = generic
                            default_value = "600"
                            group = "Base Parameters"
                        }

                        Initial_status {
                            label = "Initial relay status"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "Base Parameters"
                        }

                        R50P_pickup1 {
                            label = "R50 IOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R50P_tripDelay1 {
                            label = "R50 IOC trip delay 1"
                            widget = edit
                            type = generic
                            default_value = "0"
                            unit = "sec"
                            group = "GridTied Parameters"
                        }

                        R51P_pickup1 {
                            label = "R51 TOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.8"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R51P_curveType1 {
                            label = "R51 TOC curve type 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R51P_timeDial1 {
                            label = "R51 TOC time dial 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R27P_pickup1 {
                            label = "R27 UV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R59P_pickup1 {
                            label = "R59 OV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R50P_pickup2 {
                            label = "R50 IOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R50P_tripDelay2 {
                            label = "R50 IOC trip delay 2"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            unit = "sec"
                            group = "Islanded Parameters"
                        }

                        R51P_pickup2 {
                            label = "R51 TOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.7"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R51P_curveType2 {
                            label = "R51 TOC curve type 2"
                            widget = edit
                            type = generic
                            default_value = "2.0"
                            group = "Islanded Parameters"
                        }

                        R51P_timeDial2 {
                            label = "R51 TOC time dial 2"
                            widget = edit
                            type = generic
                            default_value = "3.0"
                            group = "Islanded Parameters"
                        }

                        R27P_pickup2 {
                            label = "R27 UV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        R59P_pickup2 {
                            label = "R59 OV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE
                    }
                }
                [
                    position = 7952, 8168
                    size = 152, 240
                ]

                port Brk_cmd {
                    label = "Brk_cmd"
                    position = bottom:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7792, 8496
                    rotation = right
                ]

                port IABC {
                    label = "IABC"
                    position = right:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7792, 7936
                ]

                port VABC_load {
                    label = "VABC_load"
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7528, 7928
                ]

                port VABC_grid {
                    label = "VABC_grid"
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7648, 7928
                ]

                junction Junction1391 sp
                [
                    position = 8120, 7928
                ]

                junction Junction1392 sp
                [
                    position = 8120, 7976
                ]

                junction Junction1393 sp
                [
                    position = 7952, 8344
                ]

                junction Junction1396 sp
                [
                    position = 7792, 8448
                ]

                junction Junction1397 sp
                [
                    position = 7648, 8344
                ]

                comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset the relay when input is 1</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Operation Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 1 force the breaker closed</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 0 turns on logic based operation</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Protection Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 1 use islanded parameters</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 0 use grid tied parameters</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                [
                    position = 7968, 8328
                ]

                connect Brk_cmd Junction1396 as Connection899
                connect "Bus Split1.in" IABC as Connection907
                connect "Bus Split1.out" SEL_787.Ia as Connection908
                connect "Bus Split1.out2" SEL_787.Ic as Connection910
                connect "Bus Split1.out1" SEL_787.Ib as Connection909
                connect "Bus Split2.out" SEL_787.Va as Connection912
                connect "Bus Split2.out2" SEL_787.Vc as Connection914
                connect "Bus Split2.out1" SEL_787.Vb as Connection913
                connect "Bus Split3.out" SEL_787.Vline_a as Connection928
                connect "Bus Split3.out2" SEL_787.Vline_c as Connection930
                connect "Bus Split3.out1" SEL_787.Vline_b as Connection929
                connect CB_state.in Junction1397 as Connection905
                connect Constant2.out "Signal switch1.in1" as Connection880
                connect Delay1.out "Signal switch1.in" as Connection2
                connect Junction1391 Constant1.out as Connection852
                connect Junction1391 "ModBus Device1.coil_in" as Connection313
                connect Junction1392 Junction1391 as Connection314
                connect Junction1393 Delay1.in as Connection867
                connect Junction1396 "Signal switch1.out" as Connection902
                connect Junction1397 Junction1396 as Connection904
                connect "ModBus Device1.holding_in" Junction1392 as Connection466
                connect "ModBus Device1.discrete_in" Junction1392 as Connection467
                connect "ModBus Device1.holding_out" SEL_787.from_Modbus as Connection932
                connect "ModBus Device1.coil_out" Term3.in as Connection854
                connect SEL_787.OUTPUT Junction1393 as Connection868
                connect SEL_787.cb_state Junction1397 as Connection903
                connect SEL_787.TO_MODBUS "ModBus Device1.reg_in" as Connection931
                connect SEL_787.pf_states Term4.in as Connection897
                connect "Signal switch1.in2" Junction1393 as Connection866
                connect Term5.in SEL_787.faults_status as Connection870
                connect VABC_grid "Bus Split2.in" as Connection934
                connect VABC_load "Bus Split3.in" as Connection933
                [
                    breakpoints = 7576, 7968
                ]
            }
            [
                position = 8000, 8200
                rotation = left
                size = 136, 72
            ]

            component Subsystem Meas1 {
                layout = dynamic
                component "core/Current Measurement" IB {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7432, 8024
                ]

                component "core/Current Measurement" IC {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7496, 8120
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7936, 8168
                    rotation = left
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8352
                    rotation = right
                ]

                component gen_bus_join "Bus Join2" {
                    inputs = "3"
                }
                [
                    position = 7576, 7784
                ]

                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8288
                    rotation = right
                ]

                component "core/Current Measurement" IA {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7368, 7928
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8224
                    rotation = right
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8192
                        rotation = right
                    ]

                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8192
                        rotation = right
                    ]

                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8192
                        rotation = right
                    ]

                    port P1 {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port P2 {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port P3 {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port P4 {
                        position = bottom:1
                        kind = pe
                    }
                    [
                        position = 8136, 8272
                        rotation = left
                    ]

                    port P5 {
                        position = bottom:2
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    port P6 {
                        position = bottom:3
                        kind = pe
                    }
                    [
                        position = 8248, 8272
                        rotation = left
                    ]

                    connect R1.p_node P1 as Connection1
                    connect R1.n_node P4 as Connection3
                    connect R2.p_node P2 as Connection6
                    connect R2.n_node P5 as Connection4
                    connect R3.p_node P3 as Connection2
                    connect R3.n_node P6 as Connection5
                }
                [
                    position = 7256, 8280
                    size = 64, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7104, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7104, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7104, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7936, 8112
                    rotation = left
                ]

                port I {
                    position = top:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7648, 7784
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1466 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1467 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1468 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1479 pe
                [
                    position = 7568, 8432
                ]

                junction Junction1480 pe
                [
                    position = 7568, 8432
                ]

                junction Junction1481 pe
                [
                    position = 7240, 7928
                ]

                junction Junction1482 pe
                [
                    position = 7256, 8024
                ]

                junction Junction1483 pe
                [
                    position = 7272, 8120
                ]

                junction Junction1484 pe
                [
                    position = 7568, 8432
                ]

                junction Junction1485 pe
                [
                    position = 7272, 8432
                ]

                junction Junction1486 pe
                [
                    position = 7256, 8432
                ]

                connect A Junction1481 as Connection435
                [
                    breakpoints = 7200, 7928
                ]
                connect "Bus Join1.in1" VB.out as Connection387
                connect "Bus Join1.in2" VC.out as Connection388
                connect "Bus Join2.out" I as Connection393
                connect "Bus Join2.in1" IB.out as Connection391
                connect "Bus Join2.in2" IC.out as Connection392
                connect C Junction1483 as Connection441
                connect IA.out "Bus Join2.in" as Connection390
                connect IA.n_node Junction1466 as Connection377
                connect IB.p_node Junction1482 as Connection438
                connect Junction1466 a as Connection299
                connect Junction1467 IB.n_node as Connection375
                connect Junction1467 b as Connection301
                connect Junction1468 IC.n_node as Connection376
                connect Junction1468 c as Connection302
                connect Junction1479 Junction1421 as Connection419
                connect Junction1480 Junction1479 as Connection422
                connect Junction1481 IA.p_node as Connection436
                connect Junction1482 B as Connection439
                [
                    breakpoints = 7256, 8024
                ]
                connect Junction1483 IC.p_node as Connection442
                [
                    breakpoints = 7312, 8120
                ]
                connect Junction1484 Junction1479 as Connection445
                connect Junction1485 Junction1484 as Connection448
                connect Junction1486 Junction1485 as Connection451
                connect V "Bus Join1.out" as Connection385
                connect V "Bus Join1.out" as Connection389
                connect VA.out "Bus Join1.in" as Connection386
                connect VA.n_node Junction1421 as Connection237
                connect VA.p_node Junction1466 as Connection240
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1467 as Connection243
                connect VC.p_node Junction1468 as Connection246
                connect VC.n_node Junction1484 as Connection444
                connect res_for_meas.P1 Junction1481 as Connection437
                connect res_for_meas.P2 Junction1482 as Connection440
                connect res_for_meas.P3 Junction1483 as Connection443
                connect res_for_meas.P6 Junction1485 as Connection447
                connect res_for_meas.P5 Junction1486 as Connection450
                connect res_for_meas.P4 Junction1486 as Connection452
            }
            [
                position = 8144, 8096
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            component Subsystem Meas2 {
                layout = dynamic
                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8192
                    rotation = right
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7960, 8120
                    rotation = left
                ]

                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8256
                    rotation = right
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8320
                    rotation = right
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8192
                        rotation = right
                    ]

                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8192
                        rotation = right
                    ]

                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8192
                        rotation = right
                    ]

                    port P1 {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port P2 {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port P3 {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port P4 {
                        position = bottom:1
                        kind = pe
                    }
                    [
                        position = 8136, 8272
                        rotation = left
                    ]

                    port P5 {
                        position = bottom:2
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    port P6 {
                        position = bottom:3
                        kind = pe
                    }
                    [
                        position = 8248, 8272
                        rotation = left
                    ]

                    connect R1.p_node P1 as Connection1
                    connect R1.n_node P4 as Connection3
                    connect R2.p_node P2 as Connection6
                    connect R2.n_node P5 as Connection4
                    connect R3.p_node P3 as Connection2
                    connect R3.n_node P6 as Connection5
                }
                [
                    position = 7336, 8232
                    size = 64, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7152, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7152, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7152, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7960, 8064
                    rotation = left
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1470 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1471 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1472 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1476 pe
                [
                    position = 7568, 8432
                ]

                junction Junction1478 pe
                [
                    position = 7424, 8432
                ]

                junction Junction1479 pe
                [
                    position = 7320, 7928
                ]

                junction Junction1480 pe
                [
                    position = 7336, 8024
                ]

                junction Junction1481 pe
                [
                    position = 7352, 8120
                ]

                junction Junction1482 pe
                [
                    position = 7424, 8432
                ]

                junction Junction1483 pe
                [
                    position = 7352, 8432
                ]

                junction Junction1484 pe
                [
                    position = 7336, 8432
                ]

                connect Junction1421 Junction1476 as Connection418
                connect Junction1470 Junction1479 as Connection422
                [
                    breakpoints = 7728, 7928
                ]
                connect Junction1470 VA.p_node as Connection389
                connect Junction1471 Junction1480 as Connection425
                [
                    breakpoints = 7648, 8024; 7368, 8024
                ]
                connect Junction1471 b as Connection392
                connect Junction1472 Junction1481 as Connection428
                [
                    breakpoints = 7568, 8120; 7424, 8120
                ]
                connect Junction1472 VC.p_node as Connection395
                connect Junction1476 VC.n_node as Connection410
                connect Junction1478 Junction1482 as Connection431
                connect Junction1479 A as Connection423
                [
                    breakpoints = 7312, 7928
                ]
                connect Junction1480 B as Connection426
                connect Junction1481 C as Connection429
                connect Junction1482 Junction1476 as Connection432
                connect Junction1483 Junction1482 as Connection435
                connect Junction1484 Junction1483 as Connection438
                connect V "Bus Join1.out" as Connection385
                connect VA.out "Bus Join1.in" as Connection397
                connect VA.n_node Junction1421 as Connection237
                connect VB.out "Bus Join1.in1" as Connection398
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1471 as Connection391
                connect VC.out "Bus Join1.in2" as Connection399
                connect a Junction1470 as Connection388
                connect c Junction1472 as Connection394
                connect res_for_meas.P1 Junction1479 as Connection424
                connect res_for_meas.P2 Junction1480 as Connection427
                connect res_for_meas.P3 Junction1481 as Connection430
                [
                    breakpoints = 7352, 8120; 7360, 8120
                ]
                connect res_for_meas.P6 Junction1483 as Connection434
                connect res_for_meas.P5 Junction1484 as Connection437
                connect res_for_meas.P4 Junction1484 as Connection439
            }
            [
                position = 8144, 8320
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            port c {
                label = "c"
                position = bottom:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8392
                rotation = left
            ]

            port b {
                label = "b"
                position = bottom:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 8432
                rotation = left
            ]

            port a {
                label = "a"
                position = bottom:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 8472
                rotation = left
            ]

            port A {
                label = "A"
                position = top:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 7936
                rotation = right
            ]

            port B {
                label = "B"
                position = top:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 7976
                rotation = right
            ]

            port C {
                label = "C"
                position = top:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8016
                rotation = right
            ]

            connect A Meas1.A as Connection10
            connect Brk.control MID_Rly1.Brk_cmd as Connection7
            connect Brk.B Meas1.b as Connection14
            connect Brk.b Meas2.B as Connection17
            connect Meas1.B B as Connection9
            connect Meas1.a Brk.A as Connection13
            connect Meas1.c Brk.C as Connection15
            connect Meas1.C C as Connection8
            connect Meas1.I MID_Rly1.IABC as Connection11
            connect Meas1.V MID_Rly1.VABC_grid as Connection12
            connect Meas2.A Brk.a as Connection16
            connect Meas2.C Brk.c as Connection18
            connect Meas2.V MID_Rly1.VABC_load as Connection22
            connect Meas2.a a as Connection19
            connect Meas2.c c as Connection21
            connect b Meas2.b as Connection20
        }
        [
            position = 10696, 7952
            size = 80, 48
        ]

        component Subsystem Coupling1 {
            layout = dynamic
            component "core/Four Phase Core Coupling" "Core Coupling 1" {
                C1 = "100e-6"
                R1 = "1"
                fixed_snb_u = "true"
            }
            [
                position = 8192, 8192
            ]

            port A {
                position = left:1
                kind = pe
            }
            [
                position = 8136, 8048
            ]

            port B {
                position = left:2
                kind = pe
            }
            [
                position = 8136, 8144
            ]

            port C {
                position = left:3
                kind = pe
            }
            [
                position = 8136, 8240
            ]

            port G {
                position = left:4
                kind = pe
            }
            [
                position = 8136, 8336
            ]

            port a {
                position = right:1
                kind = pe
            }
            [
                position = 8248, 8048
                rotation = down
            ]

            port b {
                position = right:2
                kind = pe
            }
            [
                position = 8248, 8144
                rotation = down
            ]

            port c {
                position = right:3
                kind = pe
            }
            [
                position = 8248, 8240
                rotation = down
            ]

            port g {
                position = right:4
                kind = pe
            }
            [
                position = 8248, 8336
                rotation = down
            ]

            connect "Core Coupling 1.a_in" A as Connection5
            connect "Core Coupling 1.b_in" B as Connection7
            connect "Core Coupling 1.c_in" C as Connection1
            connect "Core Coupling 1.d_in" G as Connection4
            connect "Core Coupling 1.a_out" a as Connection8
            connect "Core Coupling 1.b_out" b as Connection2
            connect "Core Coupling 1.c_out" c as Connection3
            connect "Core Coupling 1.d_out" g as Connection6
        }
        [
            position = 10704, 7856
            rotation = right
            scale = -1, 1
            size = 48, 80
        ]

        component Subsystem Coupling4 {
            layout = dynamic
            component "core/Four Phase Core Coupling" "Core Coupling 1" {
                C1 = "100e-6"
                R1 = "1"
                fixed_snb_i = "true"
                fixed_snb_u = "true"
            }
            [
                position = 8192, 8192
            ]

            port A {
                position = left:1
                kind = pe
            }
            [
                position = 8136, 8048
            ]

            port B {
                position = left:2
                kind = pe
            }
            [
                position = 8136, 8144
            ]

            port C {
                position = left:3
                kind = pe
            }
            [
                position = 8136, 8240
            ]

            port G {
                position = left:4
                kind = pe
            }
            [
                position = 8136, 8336
            ]

            port a {
                position = right:1
                kind = pe
            }
            [
                position = 8248, 8048
                rotation = down
            ]

            port b {
                position = right:2
                kind = pe
            }
            [
                position = 8248, 8144
                rotation = down
            ]

            port c {
                position = right:3
                kind = pe
            }
            [
                position = 8248, 8240
                rotation = down
            ]

            port g {
                position = right:4
                kind = pe
            }
            [
                position = 8248, 8336
                rotation = down
            ]

            connect "Core Coupling 1.a_in" A as Connection5
            connect "Core Coupling 1.b_in" B as Connection7
            connect "Core Coupling 1.c_in" C as Connection1
            connect "Core Coupling 1.d_in" G as Connection4
            connect "Core Coupling 1.a_out" a as Connection8
            connect "Core Coupling 1.b_out" b as Connection2
            connect "Core Coupling 1.c_out" c as Connection3
            connect "Core Coupling 1.d_out" g as Connection6
        }
        [
            position = 11528, 7872
            rotation = right
            scale = -1, 1
            size = 48, 80
        ]

        component "core/Transmission Line" F3_line {
            C_imperial = "[[0.00233, 0.00140, 0.00140], [0.00140, 0.00233, 0.00140], [0.00140, 0.00140, 0.00233]]"
            C_sequence_metric = "[[5.089e-7, 0.0, 0.0], [0.0, 5.089e-7, 0.0], [0.0, 0.0, 5.089e-7]]"
            Frequency = "sys_f"
            L_sequence_imperial = "L_cable13"
            L_sequence_metric = "[[0.0020, 0.0, 0.0], [0.0, 3.0953e-4, 0.0], [0.0, 0.0, 3.0953e-4]]"
            Length_metric = "1.6764"
            Length_miles = "l_U_L4"
            R_sequence_imperial = "R_cable13"
            R_sequence_metric = "[[1.1405, 0.0, 0.0], [0.0, 0.0749, 0.0], [0.0, 0.0, 0.0749]]"
            model_def = "Sequence"
        }
        [
            position = 11696, 7248
            rotation = left
            size = 256, 72
        ]

        component Subsystem Coupling5 {
            layout = dynamic
            component pas_inductor L1 {
                inductance = "100e-6"
            }
            [
                position = 8360, 8048
            ]

            component pas_inductor L2 {
                inductance = "100e-6"
            }
            [
                position = 8368, 8144
            ]

            component pas_resistor R3 {
                resistance = "0.1"
            }
            [
                position = 8256, 8240
            ]

            component pas_resistor R1 {
                resistance = "0.1"
            }
            [
                position = 8256, 8048
            ]

            component pas_resistor R2 {
                resistance = "0.1"
            }
            [
                position = 8256, 8144
            ]

            component pas_inductor L3 {
                inductance = "100e-6"
            }
            [
                position = 8368, 8240
            ]

            component "core/Four Phase Device Coupling" "Device Coupling 1" {
                C1 = "10e-6"
                R1 = "1"
                snb_type_i = "none"
            }
            [
                position = 8192, 8192
                size = 32, 352
            ]

            component Subsystem "RC Snubber" {
                layout = dynamic
                component pas_capacitor C2 {
                    capacitance = "C"
                }
                [
                    position = 8192, 8240
                    rotation = right
                ]

                component pas_resistor R2 {
                    resistance = "R"
                }
                [
                    position = 8192, 8144
                    rotation = right
                ]

                component pas_resistor R1 {
                    resistance = "R"
                }
                [
                    position = 8120, 8144
                    rotation = right
                ]

                component pas_capacitor C3 {
                    capacitance = "C"
                }
                [
                    position = 8264, 8240
                    rotation = right
                ]

                component pas_capacitor C1 {
                    capacitance = "C"
                }
                [
                    position = 8120, 8240
                    rotation = right
                ]

                component pas_resistor R3 {
                    resistance = "R"
                }
                [
                    position = 8264, 8144
                    rotation = right
                ]

                port A {
                    position = top:1
                    kind = pe
                }
                [
                    position = 8120, 8064
                    rotation = right
                ]

                port B {
                    position = top:2
                    kind = pe
                }
                [
                    position = 8192, 8064
                    rotation = right
                ]

                port C {
                    position = top:3
                    kind = pe
                }
                [
                    position = 8264, 8064
                    rotation = right
                ]

                port N {
                    position = bottom:2
                    kind = pe
                }
                [
                    position = 8192, 8320
                    rotation = left
                ]

                junction Junction1 pe
                [
                    position = 8192, 8288
                ]

                junction Junction2 pe
                [
                    position = 8192, 8288
                ]

                connect C1.n_node Junction2 as Connection21
                connect C1.p_node R1.n_node as Connection9
                connect C2.n_node Junction1 as Connection18
                connect C2.p_node R2.n_node as Connection10
                connect C3.n_node Junction2 as Connection23
                connect C3.p_node R3.n_node as Connection11
                connect Junction1 N as Connection19
                connect Junction2 Junction1 as Connection22
                connect R1.p_node A as Connection13
                connect R2.p_node B as Connection15
                connect R3.p_node C as Connection16

                C = "1e-6"
                R = "10"

                mask {
                    R {
                        label = "R"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "ohms"
                        group = "General"
                    }

                    C {
                        label = "C"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "F"
                        group = "General"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE
                }
            }
            [
                position = 8072, 8280
                size = 64, 48
            ]

            port A {
                position = left:1
                kind = pe
            }
            [
                position = 7920, 8048
            ]

            port B {
                position = left:2
                kind = pe
            }
            [
                position = 7920, 8144
            ]

            port C {
                position = left:3
                kind = pe
            }
            [
                position = 7920, 8240
            ]

            port G {
                position = left:4
                kind = pe
            }
            [
                position = 7920, 8336
            ]

            port a {
                position = right:1
                kind = pe
            }
            [
                position = 8464, 8048
                rotation = down
            ]

            port b {
                position = right:2
                kind = pe
            }
            [
                position = 8464, 8144
                rotation = down
            ]

            port c {
                position = right:3
                kind = pe
            }
            [
                position = 8464, 8240
                rotation = down
            ]

            port g {
                position = right:4
                kind = pe
            }
            [
                position = 8264, 8336
                rotation = down
            ]

            junction Junction1 pe
            [
                position = 8056, 8048
            ]

            junction Junction2 pe
            [
                position = 8072, 8144
            ]

            junction Junction3 pe
            [
                position = 8088, 8240
            ]

            junction Junction4 pe
            [
                position = 8072, 8336
            ]

            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">1. R1-L1 to R3-L3 are series RL snubbers to remove AO problem during fault at bus 301. </p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">R = 0.1 ohm. L = 100uH</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">2.  At nominal feeder load (3.7MW) it consumes 10kW + j3.7kVAr @60Hz</p></body></html> ENDCOMMENT 
            [
                position = 8288, 8280
            ]

            connect B Junction2 as Connection12
            connect C Junction3 as Connection15
            connect "Device Coupling 1.a_in" Junction1 as Connection9
            connect "Device Coupling 1.d_in" Junction4 as Connection18
            connect "Device Coupling 1.b_out" R2.p_node as Connection52
            connect Junction1 A as Connection10
            connect Junction2 "Device Coupling 1.b_in" as Connection13
            connect Junction3 "Device Coupling 1.c_in" as Connection16
            connect Junction4 G as Connection19
            connect L1.p_node R1.n_node as Connection51
            connect L2.n_node b as Connection54
            connect L3.p_node R3.n_node as Connection58
            connect R1.p_node "Device Coupling 1.a_out" as Connection49
            connect R2.n_node L2.p_node as Connection53
            connect R3.p_node "Device Coupling 1.c_out" as Connection56
            connect "RC Snubber.A" Junction1 as Connection11
            connect "RC Snubber.B" Junction2 as Connection14
            connect "RC Snubber.C" Junction3 as Connection17
            connect "RC Snubber.N" Junction4 as Connection20
            connect a L1.n_node as Connection50
            connect c L3.n_node as Connection57
            connect g "Device Coupling 1.d_out" as Connection4
        }
        [
            position = 11704, 7600
            rotation = left
            scale = 1, -1
            size = 48, 80
        ]

        component Subsystem F3_PCC {
            layout = dynamic
            component gen_bus_join "Bus Join1" {
                inputs = "8"
            }
            [
                position = 7248, 8040
                scale = -1, 1
            ]

            component "core/Triple Pole Single Throw Contactor" S1 {
                ctrl_src = "Model"
            }
            [
                position = 8136, 8184
                rotation = left
                size = 64, 256
            ]

            component src_digital_input "Digital Input Close2" {
                addr = "11"
                execution_rate = "Ts"
                invert = "true"
            }
            [
                position = 7784, 8272
            ]

            component gen_sr_ff "SR Flip Flop3" {
            }
            [
                position = 7880, 8288
            ]

            component src_digital_input "Digital Input Trip2" {
                addr = "12"
                execution_rate = "Ts"
                invert = "true"
            }
            [
                position = 7784, 8336
            ]

            component gen_data_type_conversion "Data Type Conversion1" {
            }
            [
                position = 7928, 8184
                hide_name = True
                scale = -1, 1
            ]

            component gen_probe P {
            }
            [
                position = 7528, 7928
                scale = -1, 1
            ]

            component gen_probe Q {
            }
            [
                position = 7528, 7872
                scale = -1, 1
            ]

            component gen_gain "W -> kW" {
                gain = ".001"
            }
            [
                position = 7728, 7976
                scale = -1, 1
            ]

            component gen_gain Gain2 {
                gain = "10"
            }
            [
                position = 7608, 8000
                hide_name = True
                scale = -1, 1
            ]

            component gen_gain Gain4 {
                gain = "100"
            }
            [
                position = 7640, 8048
                hide_name = True
                scale = -1, 1
            ]

            component gen_gain "var -> kvar" {
                gain = ".001"
            }
            [
                position = 7664, 8000
                scale = -1, 1
            ]

            component gen_gain Gain1 {
                gain = "10"
            }
            [
                position = 7624, 7976
                hide_name = True
                scale = -1, -1
            ]

            component gen_gain Gain3 {
                gain = "100"
            }
            [
                position = 7592, 8024
                hide_name = True
                scale = -1, 1
            ]

            component Subsystem Meas2 {
                layout = dynamic
                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8320
                    rotation = right
                    size = 64, 32
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7960, 8120
                    rotation = left
                ]

                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8256
                    rotation = right
                    size = 64, 32
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8192
                    rotation = right
                    size = 64, 32
                ]

                port Ground {
                    position = bottom:auto
                    kind = pe
                }
                [
                    position = 7648, 8504
                    rotation = left
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7400, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7400, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7400, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7960, 8064
                    rotation = left
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1469 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1470 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1471 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1472 pe
                [
                    position = 7568, 8120
                ]

                connect A Junction1470 as Connection390
                connect B Junction1471 as Connection393
                connect C Junction1472 as Connection396
                connect Ground Junction1469 as Connection384
                connect Junction1421 Junction1469 as Connection382
                connect Junction1469 VC.n_node as Connection383
                connect Junction1470 VA.p_node as Connection389
                connect Junction1471 b as Connection392
                connect Junction1472 VC.p_node as Connection395
                connect V "Bus Join1.out" as Connection385
                connect VA.out "Bus Join1.in" as Connection397
                connect VA.n_node Junction1421 as Connection237
                connect VB.out "Bus Join1.in1" as Connection398
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1471 as Connection391
                connect VC.out "Bus Join1.in2" as Connection399
                connect a Junction1470 as Connection388
                connect c Junction1472 as Connection394
            }
            [
                position = 8136, 8312
                rotation = right
                scale = -1, 1
                size = 112, 232
            ]

            component Subsystem Meas1 {
                layout = dynamic
                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7936, 8168
                    rotation = left
                ]

                component "core/Current Measurement" IA {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7368, 7928
                    size = 64, 32
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8352
                    rotation = right
                    size = 64, 32
                ]

                component gen_bus_join "Bus Join2" {
                    inputs = "3"
                }
                [
                    position = 7576, 7784
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8224
                    rotation = right
                    size = 64, 32
                ]

                component "core/Current Measurement" IB {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7432, 8024
                    size = 64, 32
                ]

                component "core/Current Measurement" IC {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7496, 8120
                    size = 64, 32
                ]

                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8288
                    rotation = right
                    size = 64, 32
                ]

                port Ground {
                    position = bottom:auto
                    kind = pe
                }
                [
                    position = 7648, 8504
                    rotation = left
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7288, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7288, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7288, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7936, 8112
                    rotation = left
                ]

                port I {
                    position = top:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7648, 7784
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1466 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1467 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1468 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1469 pe
                [
                    position = 7648, 8432
                ]

                connect A IA.p_node as Connection379
                connect B IB.p_node as Connection380
                connect "Bus Join1.in1" VB.out as Connection387
                connect "Bus Join1.in2" VC.out as Connection388
                connect "Bus Join2.out" I as Connection393
                connect "Bus Join2.in1" IB.out as Connection391
                connect "Bus Join2.in2" IC.out as Connection392
                connect C IC.p_node as Connection381
                connect Ground Junction1469 as Connection384
                connect IA.out "Bus Join2.in" as Connection390
                connect IA.n_node Junction1466 as Connection377
                connect Junction1421 Junction1469 as Connection382
                connect Junction1466 a as Connection299
                connect Junction1467 IB.n_node as Connection375
                connect Junction1467 b as Connection301
                connect Junction1468 IC.n_node as Connection376
                connect Junction1468 c as Connection302
                connect Junction1469 VC.n_node as Connection383
                connect V "Bus Join1.out" as Connection385
                connect V "Bus Join1.out" as Connection389
                connect VA.out "Bus Join1.in" as Connection386
                connect VA.n_node Junction1421 as Connection237
                connect VA.p_node Junction1466 as Connection240
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1467 as Connection243
                connect VC.p_node Junction1468 as Connection246
            }
            [
                position = 8136, 8048
                rotation = right
                scale = -1, 1
                size = 112, 232
            ]

            component Subsystem "PCC Measurements" {
                layout = dynamic
                component gen_bus_split "Bus Split1" {
                    outputs = "3"
                }
                [
                    position = 8416, 8256
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_terminator Termination7 {
                }
                [
                    position = 7976, 8368
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_terminator Termination5 {
                }
                [
                    position = 8008, 8136
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_comparator Comparator2 {
                }
                [
                    position = 7912, 8464
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_terminator Termination8 {
                }
                [
                    position = 8016, 8384
                    hide_name = True
                    scale = -1, 1
                ]

                component src_constant Constant2 {
                    execution_rate = "Ts"
                }
                [
                    position = 8040, 8472
                    hide_name = True
                    scale = -1, 1
                ]

                component src_constant Constant1 {
                    execution_rate = "Ts"
                }
                [
                    position = 8040, 8264
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_PQ_transform "Power Meter1" {
                }
                [
                    position = 8088, 8360
                    scale = -1, 1
                ]

                component gen_terminator Termination3 {
                }
                [
                    position = 8008, 8088
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_terminator Termination4 {
                }
                [
                    position = 7968, 8120
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_bus_split "Bus Split2" {
                    outputs = "3"
                }
                [
                    position = 8416, 8184
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_comparator Comparator1 {
                }
                [
                    position = 7912, 8272
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_terminator Termination1 {
                }
                [
                    position = 8008, 8056
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_terminator Termination6 {
                }
                [
                    position = 8016, 8352
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_rms_value "RMS value1" {
                }
                [
                    position = 8088, 8192
                    scale = -1, 1
                ]

                component gen_terminator Termination2 {
                }
                [
                    position = 7968, 8072
                    hide_name = True
                    scale = -1, 1
                ]

                component "core/Three phase PLL" "Three phase PLL1" {
                }
                [
                    position = 8088, 8096
                    scale = -1, 1
                    size = 64, 128
                ]

                port f {
                    label = "Frequency"
                    position = left:4
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7920, 8104
                    scale = -1, 1
                ]

                port P {
                    label = "Real Power"
                    position = left:2
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7976, 8320
                    scale = -1, 1
                ]

                port Q {
                    label = "Reactive Power"
                    position = left:3
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7936, 8336
                    scale = -1, 1
                ]

                port pf {
                    label = "Power Factor"
                    position = left:6
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7936, 8400
                    scale = -1, 1
                ]

                port I {
                    label = "I"
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8488, 8184
                    rotation = down
                ]

                port Vrms {
                    label = "Voltage"
                    position = left:3
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7984, 8192
                    scale = -1, 1
                ]

                port V {
                    label = "V"
                    position = right:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8488, 8256
                    rotation = down
                ]

                port "P direction" {
                    label = "P Import/Exprot"
                    position = left:9
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7848, 8272
                    scale = -1, 1
                ]

                port "pf lead lag" {
                    label = "pf lead/lag"
                    position = left:10
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7848, 8464
                    scale = -1, 1
                ]

                tag Goto5 {
                    value = "Vb"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8328, 8256
                    hide_name = True
                    scale = -1, 1
                ]

                tag Goto3 {
                    value = "Ic"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8328, 8208
                    hide_name = True
                    scale = -1, 1
                ]

                tag From8 {
                    value = "Ib"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8240, 8384
                    hide_name = True
                    scale = -1, 1
                ]

                tag From6 {
                    value = "Vb"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8176, 8336
                    hide_name = True
                    scale = -1, 1
                ]

                tag Goto1 {
                    value = "Ia"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8328, 8160
                    hide_name = True
                    scale = -1, 1
                ]

                tag From9 {
                    value = "Ic"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8176, 8400
                    hide_name = True
                    scale = -1, 1
                ]

                tag From7 {
                    value = "Ia"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8176, 8368
                    hide_name = True
                    scale = -1, 1
                ]

                tag From10 {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8192, 8192
                    hide_name = True
                    scale = -1, 1
                ]

                tag From1 {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8192, 8064
                    hide_name = True
                    scale = -1, 1
                ]

                tag From2 {
                    value = "Vb"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8192, 8096
                    hide_name = True
                    scale = -1, 1
                ]

                tag From5 {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8240, 8320
                    hide_name = True
                    scale = -1, 1
                ]

                tag From3 {
                    value = "Vc"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8192, 8128
                    hide_name = True
                    scale = -1, 1
                ]

                tag Goto2 {
                    value = "Ib"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8328, 8184
                    hide_name = True
                    scale = -1, 1
                ]

                tag Goto4 {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8328, 8232
                    hide_name = True
                    scale = -1, 1
                ]

                tag Goto6 {
                    value = "Vc"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8328, 8280
                    hide_name = True
                    scale = -1, 1
                ]

                tag From4 {
                    value = "Vc"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8240, 8352
                    hide_name = True
                    scale = -1, 1
                ]

                junction Junction1 sp
                [
                    position = 8016, 8320
                ]

                junction Junction2 sp
                [
                    position = 7976, 8400
                ]

                connect "Bus Split1.out" Goto4 as Connection27
                connect "Bus Split1.out1" Goto5 as Connection26
                connect "Bus Split1.out2" Goto6 as Connection28
                connect "Bus Split1.in" V as Connection47
                connect "Bus Split2.out" Goto1 as Connection25
                connect "Bus Split2.out2" Goto3 as Connection24
                connect "Bus Split2.in" I as Connection48
                connect Comparator1.in1 Junction1 as Connection57
                connect Comparator2.in1 Junction2 as Connection60
                connect Constant1.out Comparator1.in2 as Connection54
                connect Constant2.out Comparator2.in2 as Connection61
                connect From1 "Three phase PLL1.va" as Connection29
                connect From10 "RMS value1.in" as Connection46
                connect From2 "Three phase PLL1.vb" as Connection30
                connect From3 "Three phase PLL1.vc" as Connection31
                connect From4 "Power Meter1.vc" as Connection37
                connect From5 "Power Meter1.va" as Connection39
                connect From6 "Power Meter1.vb" as Connection38
                connect From7 "Power Meter1.ia" as Connection41
                connect From9 "Power Meter1.ic" as Connection40
                connect Goto2 "Bus Split2.out1" as Connection23
                connect Junction1 P as Connection56
                connect Junction2 pf as Connection59
                connect "P direction" Comparator1.out as Connection62
                connect "Power Meter1.ib" From8 as Connection42
                connect "Power Meter1.Pdc" Junction1 as Connection55
                connect "Power Meter1.k_factor" Junction2 as Connection58
                connect "Power Meter1.Qdc" Q as Connection53
                connect "RMS value1.out" Vrms as Connection50
                connect Termination1.in "Three phase PLL1.d_axis" as Connection32
                connect Termination2.in "Three phase PLL1.q_axis" as Connection33
                connect Termination3.in "Three phase PLL1.zero_axis" as Connection34
                connect Termination4.in "Three phase PLL1.theta" as Connection35
                connect Termination5.in "Three phase PLL1.sin_theta" as Connection36
                connect Termination6.in "Power Meter1.Pac" as Connection43
                connect Termination7.in "Power Meter1.Qac" as Connection44
                connect Termination8.in "Power Meter1.apparent" as Connection45
                connect "Three phase PLL1.freq" f as Connection52
                connect "pf lead lag" Comparator2.out as Connection63
            }
            [
                position = 7864, 8048
                size = 96, 184
            ]

            component gen_terminator Termination1 {
            }
            [
                position = 7208, 8192
            ]

            component gen_terminator Termination2 {
            }
            [
                position = 7648, 8280
            ]

            port A {
                label = "A"
                position = top:1
                kind = pe
            }
            [
                position = 8040, 7944
                rotation = right
            ]

            port B {
                label = "B"
                position = top:2
                kind = pe
            }
            [
                position = 8136, 7944
                rotation = right
            ]

            port C {
                label = "C"
                position = top:3
                kind = pe
            }
            [
                position = 8232, 7944
                rotation = right
            ]

            port a {
                label = "a"
                position = bottom:1
                kind = pe
            }
            [
                position = 8040, 8424
                rotation = left
            ]

            port b {
                label = "b"
                position = bottom:2
                kind = pe
            }
            [
                position = 8136, 8424
                rotation = left
            ]

            port c {
                label = "c"
                position = bottom:3
                kind = pe
            }
            [
                position = 8232, 8424
                rotation = left
            ]

            port G {
                label = "G"
                position = right:1
                kind = pe
            }
            [
                position = 8424, 8192
                rotation = down
            ]

            tag Goto2 {
                value = "Q"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7496, 8000
                hide_name = True
                scale = -1, 1
            ]

            tag Goto8 {
                value = "CB Status"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7832, 8184
                hide_name = True
                scale = -1, 1
            ]

            tag Goto1 {
                value = "P"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7496, 7976
                hide_name = True
                scale = -1, 1
            ]

            tag From7 {
                value = "P sign"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7400, 8080
                hide_name = True
                scale = -1, 1
            ]

            tag From5 {
                value = "CB Status"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7400, 8048
                hide_name = True
                scale = -1, 1
            ]

            tag From1 {
                value = "P"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7400, 7984
                hide_name = True
                scale = -1, 1
            ]

            tag Goto3 {
                value = "V"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7496, 8024
                hide_name = True
                scale = -1, 1
            ]

            tag Goto6 {
                value = "P sign"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7496, 8096
                hide_name = True
                scale = -1, 1
            ]

            tag From3 {
                value = "V"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7400, 8016
                hide_name = True
                scale = -1, 1
            ]

            tag Goto7 {
                value = "pf lead/lag"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7496, 8120
                hide_name = True
                scale = -1, 1
            ]

            tag From2 {
                value = "Q"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7336, 8000
                hide_name = True
                scale = -1, 1
            ]

            tag From8 {
                value = "pf lead/lag"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7336, 8096
                hide_name = True
                scale = -1, 1
            ]

            tag From6 {
                value = "pf"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7336, 8064
                hide_name = True
                scale = -1, 1
            ]

            tag Goto5 {
                value = "pf"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7496, 8072
                hide_name = True
                scale = -1, 1
            ]

            tag Goto4 {
                value = "f"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7496, 8048
                hide_name = True
                scale = -1, 1
            ]

            tag From4 {
                value = "f"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7336, 8032
                hide_name = True
                scale = -1, 1
            ]

            junction Junction1 pe
            [
                position = 8392, 8192
            ]

            junction Junction2 sp
            [
                position = 7976, 8184
            ]

            junction Junction6 sp
            [
                position = 7800, 7976
            ]

            junction Junction7 sp
            [
                position = 7776, 8000
            ]

            junction Junction8 sp
            [
                position = 7976, 8208
            ]

            connect A Meas1.A as Connection45
            connect "Bus Join1.in4" From5 as Connection35
            connect "Data Type Conversion1.in" Junction2 as Connection1137
            connect "Digital Input Close2.out" "SR Flip Flop3.s_in" as Connection1133
            [
                breakpoints = 7832, 8272
            ]
            connect "Digital Input Trip2.out" "SR Flip Flop3.r_in" as Connection1132
            connect From1 "Bus Join1.in" as Connection31
            connect From2 "Bus Join1.in1" as Connection32
            connect From3 "Bus Join1.in2" as Connection33
            connect From4 "Bus Join1.in3" as Connection34
            connect From6 "Bus Join1.in5" as Connection36
            connect From7 "Bus Join1.in6" as Connection37
            connect From8 "Bus Join1.in7" as Connection38
            connect Gain1.in "W -> kW.out" as Connection1153
            connect Gain2.in "var -> kvar.out" as Connection1158
            connect Gain3.in "PCC Measurements.Vrms" as Connection1160
            connect Gain4.out Goto4 as Connection1162
            connect Goto1 Gain1.out as Connection1163
            [
                breakpoints = 7496, 7976; 7568, 7976
            ]
            connect Goto2 Gain2.out as Connection1164
            [
                breakpoints = 7496, 8000; 7584, 8000
            ]
            connect Goto3 Gain3.out as Connection1159
            connect Goto5 "PCC Measurements.pf" as Connection27
            connect Goto6 "PCC Measurements.P direction" as Connection28
            connect Goto7 "PCC Measurements.pf lead lag" as Connection29
            connect Goto8 "Data Type Conversion1.out" as Connection1148
            [
                breakpoints = 7832, 8184; 7888, 8184
            ]
            connect Junction1 G as Connection19
            connect Junction2 S1.ctrl_in as Connection1136
            [
                breakpoints = 7976, 8184
            ]
            connect Junction6 "PCC Measurements.P" as Connection1166
            connect Junction7 "PCC Measurements.Q" as Connection1169
            connect Meas1.B B as Connection44
            connect Meas1.C C as Connection43
            connect Meas1.Ground Junction1 as Connection20
            connect Meas1.I "PCC Measurements.I" as Connection52
            connect Meas1.a S1.a_out as Connection40
            connect Meas1.b S1.b_out as Connection41
            connect Meas2.Ground Junction1 as Connection18
            connect Meas2.C S1.c_in as Connection48
            connect Meas2.b b as Connection50
            connect Meas2.c c as Connection49
            connect P.in Junction6 as Connection1167
            connect "PCC Measurements.f" Gain4.in as Connection1161
            connect "PCC Measurements.V" Meas1.V as Connection53
            connect Q.in Junction7 as Connection1170
            connect S1.c_out Meas1.c as Connection42
            connect S1.a_in Meas2.A as Connection46
            connect S1.b_in Meas2.B as Connection47
            connect "W -> kW.in" Junction6 as Connection1165
            connect a Meas2.a as Connection51
            connect "var -> kvar.in" Junction7 as Connection1168
            connect "Bus Join1.out" Termination1.in as Connection1171
            connect "SR Flip Flop3.out" Junction8 as Connection1173
            connect Junction8 Junction2 as Connection1174
            [
                breakpoints = 7976, 8216; 7976, 8216
            ]
            connect Termination2.in Junction8 as Connection1175
        }
        [
            position = 11696, 7456
            size = 80, 48
        ]

        component Subsystem NG_MCB {
            layout = dynamic
            component gen_probe VB_grid2rms {
            }
            [
                position = 8792, 7848
            ]

            component gen_rms_value "RMS value2" {
            }
            [
                position = 8696, 7848
            ]

            component "core/Current Measurement" IB_MCB {
                addr = "290"
                execution_rate = "Ts"
                frequency = "10000.0"
            }
            [
                position = 8128, 8512
                rotation = left
                size = 64, 32
            ]

            component gen_rms_value "RMS value1" {
            }
            [
                position = 8696, 7792
            ]

            component gen_probe VA_grid2rms {
            }
            [
                position = 8792, 7792
            ]

            component "core/Current Measurement" IA_MCB {
                addr = "288"
                execution_rate = "Ts"
                frequency = "10000.0"
            }
            [
                position = 8032, 8512
                rotation = left
                size = 64, 32
            ]

            component "core/Current Measurement" Ia_grid {
                addr = "533"
                execution_rate = "Ts"
            }
            [
                position = 8032, 7672
                rotation = left
                size = 64, 32
            ]

            component "core/Voltage Measurement" VC_grid_2 {
                addr = "267"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 8608, 8064
                rotation = down
                scale = -1, -1
                size = 64, 32
            ]

            component pas_capacitor C5 {
                capacitance = "0.1e-6"
            }
            [
                position = 8472, 8176
            ]

            component "core/Triple Pole Single Throw Contactor" NG_MCB {
                Sa = "8"
                ctrl_src = "Model"
            }
            [
                position = 8128, 8328
                rotation = left
                size = 64, 256
            ]

            component pas_capacitor C6 {
                capacitance = "0.1e-6"
            }
            [
                position = 8472, 8112
            ]

            component pas_capacitor C4 {
                capacitance = "0.1e-6"
            }
            [
                position = 8472, 8240
            ]

            component "core/Voltage Measurement" VA_grid_2 {
                addr = "267"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 8336, 7952
                size = 64, 32
            ]

            component pas_resistor R64 {
                resistance = "100"
            }
            [
                position = 8336, 8176
            ]

            component pas_resistor R63 {
                resistance = "100"
            }
            [
                position = 8336, 8240
            ]

            component gen_rms_value "RMS value3" {
            }
            [
                position = 8696, 7904
            ]

            component pas_resistor R59 {
                resistance = "4761.0"
            }
            [
                position = 8336, 8664
                rotation = down
            ]

            component gen_probe VC_grid2rms {
            }
            [
                position = 8792, 7904
            ]

            component pas_resistor R61 {
                resistance = "4761.0"
            }
            [
                position = 8336, 8720
                rotation = down
            ]

            component "core/Voltage Measurement" VA_busbar {
                addr = "267"
                execution_rate = "Ts"
            }
            [
                position = 8336, 8776
                rotation = down
                scale = -1, 1
                size = 64, 32
            ]

            component "core/Current Measurement" Ib_grid {
                addr = "535"
                execution_rate = "Ts"
            }
            [
                position = 8128, 7712
                rotation = left
                size = 64, 32
            ]

            component pas_resistor R62 {
                resistance = "4761.0"
            }
            [
                position = 8336, 8600
                rotation = down
            ]

            component "core/Voltage Measurement" VB_grid_2 {
                addr = "267"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 8464, 8008
                rotation = down
                scale = -1, -1
                size = 64, 32
            ]

            component "core/Current Measurement" IC_MCB {
                addr = "291"
                execution_rate = "Ts"
                frequency = "10000.0"
            }
            [
                position = 8224, 8512
                rotation = left
                size = 64, 32
            ]

            component "core/Current Measurement" Ic_grid {
                addr = "537"
                execution_rate = "Ts"
            }
            [
                position = 8224, 7752
                rotation = left
                size = 64, 32
            ]

            component pas_resistor R65 {
                resistance = "100"
            }
            [
                position = 8336, 8112
            ]

            port b {
                position = bottom:2
                kind = pe
                direction =  out
            }
            [
                position = 8128, 8864
                rotation = left
            ]

            port a {
                position = bottom:1
                kind = pe
                direction =  out
            }
            [
                position = 8032, 8864
                rotation = left
            ]

            port B {
                position = top:2
                kind = pe
                direction =  out
            }
            [
                position = 8128, 7584
                rotation = right
            ]

            port c {
                position = bottom:3
                kind = pe
                direction =  out
            }
            [
                position = 8224, 8864
                rotation = left
            ]

            port A {
                position = top:1
                kind = pe
                direction =  out
            }
            [
                position = 8032, 7584
                rotation = right
            ]

            port C {
                position = top:3
                kind = pe
                direction =  out
            }
            [
                position = 8224, 7584
                rotation = right
            ]

            port NG_MCB_Control {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7920, 8328
            ]

            junction Junction2 pe
            [
                position = 8440, 8664
            ]

            junction Junction3 pe
            [
                position = 8128, 8664
            ]

            junction Junction4 pe
            [
                position = 8032, 8720
            ]

            junction Junction5 pe
            [
                position = 8224, 8600
            ]

            junction Junction6 pe
            [
                position = 8032, 8776
            ]

            junction Junction7 pe
            [
                position = 8440, 8720
            ]

            junction Junction11 pe
            [
                position = 8128, 8008
            ]

            junction Junction12 pe
            [
                position = 8224, 8064
            ]

            junction Junction13 pe
            [
                position = 8128, 8176
            ]

            junction Junction14 pe
            [
                position = 8224, 8240
            ]

            junction Junction15 pe
            [
                position = 8032, 8112
            ]

            junction Junction16 pe
            [
                position = 8688, 8112
            ]

            junction Junction17 pe
            [
                position = 8688, 8176
            ]

            junction Junction18 pe
            [
                position = 8688, 8064
            ]

            junction Junction19 pe
            [
                position = 8032, 7952
            ]

            junction Junction20 pe
            [
                position = 8688, 8008
            ]

            connect A Ia_grid.n_node as Connection2689
            connect B Ib_grid.n_node as Connection2691
            connect C4.n_node Junction17 as Connection2679
            connect C5.n_node Junction17 as Connection2677
            connect C5.p_node R64.n_node as Connection2662
            connect C6.n_node Junction16 as Connection2674
            connect IA_MCB.n_node NG_MCB.a_in as Connection2612
            connect IB_MCB.n_node NG_MCB.b_in as Connection2614
            connect IC_MCB.n_node NG_MCB.c_in as Connection2616
            connect Ib_grid.p_node Junction11 as Connection2692
            connect Ic_grid.n_node C as Connection2694
            connect Junction11 Junction13 as Connection2664
            connect Junction12 Ic_grid.p_node as Connection2693
            connect Junction13 NG_MCB.b_out as Connection2665
            connect Junction14 Junction12 as Connection2668
            connect Junction15 Junction19 as Connection2697
            connect Junction15 NG_MCB.a_out as Connection2671
            connect Junction16 Junction18 as Connection2680
            connect Junction17 Junction16 as Connection2678
            connect Junction18 Junction20 as Connection2700
            connect Junction18 VC_grid_2.n_node as Connection2681
            connect Junction19 Ia_grid.p_node as Connection2698
            connect Junction2 R59.p_node as Connection2622
            connect Junction20 VB_grid_2.n_node as Connection2701
            connect Junction3 IB_MCB.p_node as Connection2625
            connect Junction4 IA_MCB.p_node as Connection2628
            connect Junction5 IC_MCB.p_node as Connection2631
            connect Junction6 Junction4 as Connection2639
            connect Junction7 Junction2 as Connection2642
            connect NG_MCB.c_out Junction14 as Connection2667
            connect NG_MCB_Control NG_MCB.ctrl_in as Connection2608
            connect R59.n_node Junction3 as Connection2626
            connect R61.n_node Junction4 as Connection2629
            connect R61.p_node Junction7 as Connection2641
            connect R62.p_node Junction2 as Connection2621
            connect R62.n_node Junction5 as Connection2632
            connect R63.n_node C4.p_node as Connection2661
            connect R63.p_node Junction14 as Connection2669
            connect R64.p_node Junction13 as Connection2666
            connect R65.n_node C6.p_node as Connection2663
            connect R65.p_node Junction15 as Connection2672
            connect "RMS value1.in" VA_grid_2.out as Connection2688
            connect "RMS value2.in" VB_grid_2.out as Connection2687
            connect "RMS value3.in" VC_grid_2.out as Connection2686
            connect VA_busbar.p_node Junction6 as Connection2640
            connect VA_busbar.n_node Junction7 as Connection2643
            connect VA_grid2rms.in "RMS value1.out" as Connection111
            connect VA_grid_2.p_node Junction19 as Connection2699
            connect VA_grid_2.n_node Junction20 as Connection2702
            connect VB_grid2rms.in "RMS value2.out" as Connection117
            connect VB_grid_2.p_node Junction11 as Connection2656
            connect VC_grid2rms.in "RMS value3.out" as Connection122
            connect VC_grid_2.p_node Junction12 as Connection2660
            connect a Junction6 as Connection2638
            connect b Junction3 as Connection2624
            connect c Junction5 as Connection2630
        }
        [
            position = 12256, 8576
            size = 72, 72
        ]

        component Subsystem CIL_F3_Critical5 {
            layout = dynamic
            component pas_inductor Lb {
                inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
            }
            [
                position = 8232, 8192
            ]

            component pas_resistor Rc {
                resistance = "V**2/S*pf"
            }
            [
                position = 8136, 8248
            ]

            component pas_inductor Lc {
                inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
            }
            [
                position = 8232, 8248
            ]

            component pas_resistor Rb {
                resistance = "V**2/S*pf"
            }
            [
                position = 8136, 8192
            ]

            component pas_resistor Ra {
                resistance = "V**2/S*pf"
            }
            [
                position = 8136, 8136
            ]

            component pas_inductor La {
                inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
            }
            [
                position = 8232, 8136
            ]

            port A {
                label = "A"
                position = left:1
                kind = pe
            }
            [
                position = 8056, 8136
            ]

            port B {
                label = "B"
                position = left:2
                kind = pe
            }
            [
                position = 8056, 8192
            ]

            port C {
                label = "C"
                position = left:3
                kind = pe
            }
            [
                position = 8056, 8248
            ]

            junction Junction1 pe
            [
                position = 8288, 8192
            ]

            connect Junction1 Lc.n_node as Connection17
            connect La.n_node Junction1 as Connection16
            connect Lb.n_node Junction1 as Connection18
            connect Lb.p_node Rb.n_node as Connection13
            connect Ra.p_node A as Connection8
            connect Ra.n_node La.p_node as Connection12
            connect Rb.p_node B as Connection1
            connect Rc.p_node C as Connection10
            connect Rc.n_node Lc.p_node as Connection14

            S = "1000e3"
            pf = ".9"

            mask {
                description = "Constant Impedance Load
hree-phase Y connected RL load.
and L values are calculated using the input parameters:
ated line-to-line voltage
ated three-phase power
f: Rated frequency
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    - pf: Rated power factor
one of the parameters can be set to 0."

                V {
                    label = "Voltage"
                    widget = edit
                    type = generic
                    default_value = "480"
                    unit = "V"
                    group = "General"
                }

                S {
                    label = "Power"
                    widget = edit
                    type = generic
                    default_value = "2e6"
                    unit = "VA"
                    group = "General"
                }

                f {
                    label = "Frequency"
                    widget = edit
                    type = generic
                    default_value = "60"
                    unit = "Hz"
                    group = "General"
                }

                pf {
                    label = "Power Factor"
                    widget = edit
                    type = generic
                    default_value = ".8"
                    group = "General"
                }

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 10696, 8760
            rotation = right
            scale = -1, 1
            size = 48, 80
        ]

        component "core/Transmission Line" Feeder3_line1 {
            C_imperial = "[[0.00233, 0.00140, 0.00140], [0.00140, 0.00233, 0.00140], [0.00140, 0.00140, 0.00233]]"
            C_sequence_metric = "[[5.089e-7, 0.0, 0.0], [0.0, 5.089e-7, 0.0], [0.0, 0.0, 5.089e-7]]"
            Frequency = "sys_f"
            L_sequence_imperial = "L_cable13"
            L_sequence_metric = "[[0.0020, 0.0, 0.0], [0.0, 3.0953e-4, 0.0], [0.0, 0.0, 3.0953e-4]]"
            Length_metric = "1.6764"
            Length_miles = "l_F3L1"
            R_sequence_imperial = "R_cable13"
            R_sequence_metric = "[[1.1405, 0.0, 0.0], [0.0, 0.0749, 0.0], [0.0, 0.0, 0.0749]]"
            model_def = "Sequence"
        }
        [
            position = 10696, 8136
            rotation = left
            size = 256, 72
        ]

        component Subsystem F3_CB9 {
            layout = dynamic
            component Subsystem MID_Rly1 {
                layout = dynamic
                component src_constant Constant1 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 8056, 7928
                ]

                component gen_bus_split "Bus Split1" {
                    outputs = "3"
                }
                [
                    position = 7832, 8000
                    rotation = right
                ]

                component gen_terminator Term5 {
                }
                [
                    position = 8152, 8136
                    rotation = down
                    scale = -1, 1
                ]

                component gen_bus_split "Bus Split3" {
                    outputs = "3"
                }
                [
                    position = 7576, 8000
                    rotation = right
                ]

                component gen_terminator Term3 {
                }
                [
                    position = 8440, 7928
                ]

                component sys_signal_switch "Signal switch1" {
                    threshold = "0.5"
                }
                [
                    position = 7792, 8400
                    rotation = right
                ]

                component gen_probe CB_state {
                }
                [
                    position = 7592, 8344
                    rotation = down
                ]

                component gen_delay Delay1 {
                    del_length = "int(3.0/60.0/Ts)"
                }
                [
                    position = 7880, 8344
                    rotation = down
                ]

                component gen_bus_split "Bus Split2" {
                    outputs = "3"
                }
                [
                    position = 7704, 8000
                    rotation = right
                ]

                component gen_terminator Term4 {
                }
                [
                    position = 8152, 8200
                    rotation = down
                    scale = -1, 1
                ]

                component src_constant Constant2 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 7776, 8344
                    rotation = right
                ]

                component "core/ModBus Device" "ModBus Device1" {
                    configuration = "configF3_CB9"
                    execution_rate = "Ts"
                }
                [
                    position = 8272, 8000
                    size = 184, 184
                ]

                component Subsystem SEL_787 {
                    layout = dynamic
                    component gen_sum Sum1 {
                        signs = "5"
                    }
                    [
                        position = 7648, 8384
                    ]

                    component gen_logic_op "Logical operator1" {
                        inputs = "4"
                        operator = "OR"
                    }
                    [
                        position = 8720, 8128
                        rotation = left
                    ]

                    component gen_bus_join "Bus Join1" {
                        inputs = "25"
                    }
                    [
                        position = 7928, 8080
                    ]

                    component gen_c_function bitwise_faults {
                        in_terminal_dimensions_str = "Status inherit;R25 inherit;R27 inherit;R50 inherit;R51 inherit;R59 inherit;Reset inherit;"
                        in_terminal_properties = "inherit Status;inherit R25;inherit R27;inherit R50;inherit R51;inherit R59;inherit Reset;"
                        no_feed_inputs = "[]"
                        no_feed_outputs = "[]"
                        out_terminal_dimensions_str = "fault_status inherit;"
                        out_terminal_properties = "uint fault_status;"
                        output_fnc = "/*Begin code section*/
fault_status= (uint)Status<<1 | (uint)R25<<2 | (uint)R27<<3 | (uint)R50<<4 | (uint)R51<<5 | (uint)R59<<6 | (uint)Reset<<7;
/*End code section*/"
                    }
                    [
                        position = 9200, 8272
                    ]

                    component src_scada_input "Control Panel Input1" {
                        execution_rate = "Ts"
                        max = "1"
                        min = "0"
                        unit = ""
                    }
                    [
                        position = 8136, 8192
                    ]

                    component gen_sum Sum3 {
                        signs = "3"
                    }
                    [
                        position = 7640, 8624
                    ]

                    component gen_gain Gain5 {
                        gain = "8"
                    }
                    [
                        position = 7512, 8432
                        rotation = left
                    ]

                    component tm_delay "Unit Delay4" {
                    }
                    [
                        position = 9496, 8056
                    ]

                    component gen_c_function "pf bitwise" {
                        in_terminal_dimensions_str = "exp_imp inherit;lag_lead inherit;"
                        in_terminal_properties = "inherit exp_imp;inherit lag_lead;"
                        no_feed_inputs = "[u\'\']"
                        no_feed_outputs = "[u\'\']"
                        out_terminal_dimensions_str = "pf_states inherit;"
                        out_terminal_properties = "uint pf_states;"
                        output_fnc = "/*Begin code section*/
pf_states=(uint)exp_imp<<1 | (uint)lag_lead<<2;
/*End code section*/"
                    }
                    [
                        position = 9200, 8416
                    ]

                    component tm_delay "Unit Delay2" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7728, 8304
                        rotation = left
                    ]

                    component gen_logic_op not {
                        operator = "NOT"
                    }
                    [
                        position = 7440, 8624
                    ]

                    component gen_gain Gain6 {
                        gain = "16"
                    }
                    [
                        position = 7584, 8456
                        rotation = left
                    ]

                    component gen_gain Gain4 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8384
                    ]

                    component gen_gain Gain7 {
                        gain = "2"
                    }
                    [
                        position = 7512, 8624
                    ]

                    component gen_gain Gain1 {
                        gain = "2"
                    }
                    [
                        position = 7536, 8328
                        rotation = right
                    ]

                    component gen_gain Gain8 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8688
                    ]

                    component tm_delay "Unit Delay5" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7840, 8392
                        rotation = left
                    ]

                    component gen_gain normalize {
                        gain = "np.sqrt(3.0)/480.0"
                    }
                    [
                        position = 7312, 7752
                    ]

                    component gen_probe Q {
                    }
                    [
                        position = 7360, 7648
                    ]

                    component gen_probe P {
                    }
                    [
                        position = 7360, 7600
                    ]

                    component Subsystem "State Condition Mng" {
                        layout = dynamic
                        component gen_logic_op not1 {
                            operator = "NOT"
                        }
                        [
                            position = 8032, 8264
                        ]

                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8120, 8352
                            scale = 1, -1
                        ]

                        component gen_c_function "Trip_out mng fnc" {
                            in_terminal_dimensions_str = "bool_R25 inherit;op_mode_in inherit;trip_in inherit;enable inherit;initial_condition inherit;activate_logic inherit;"
                            in_terminal_properties = "real bool_R25;inherit op_mode_in;inherit trip_in;inherit enable;inherit initial_condition;inherit activate_logic;"
                            init_fnc = "/*Begin code section*/
trip_out = initial_condition;
/*End code section*/"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "trip_out inherit;"
                            out_terminal_properties = "real trip_out;"
                            output_fnc = "/*Begin code section*/
if(enable && activate_logic){
    if(op_mode_in==0){
        trip_out = trip_in*bool_R25;
    }
    else if(op_mode_in==1){
        trip_out = 1*bool_R25;
    }
    else if(op_mode_in==2){
        trip_out=0;
    }
}
/*End code section*/"
                        }
                        [
                            position = 8424, 8208
                        ]

                        component gen_logic_op not {
                            operator = "NOT"
                        }
                        [
                            position = 7840, 8200
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8200, 8336
                            scale = 1, -1
                        ]

                        component Subsystem detect_change {
                            layout = dynamic
                            component gen_rel_op "Relational operator1" {
                                relational_op = "!="
                            }
                            [
                                position = 8240, 8192
                            ]

                            component tm_delay "Unit Delay1" {
                            }
                            [
                                position = 8144, 8200
                            ]

                            port Out1 {
                                label = "Out"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8304, 8192
                            ]

                            port In3 {
                                label = "In"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8032, 8200
                            ]

                            junction Junction1 sp
                            [
                                position = 8080, 8200
                            ]

                            connect Junction1 In3 as Connection1
                            connect "Relational operator1.in" Junction1 as Connection2
                            connect "Relational operator1.out" Out1 as Connection3
                            connect "Unit Delay1.in" Junction1 as Connection4
                            connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                        }
                        [
                            position = 7960, 8368
                            size = 48, 48
                        ]

                        port Trip_in {
                            label = "Trip_in"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7768, 8200
                        ]

                        port R25 {
                            label = "R25"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8232, 8128
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8272, 8160
                        ]

                        port trip_out {
                            label = "trip_out"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8536, 8208
                        ]

                        port enable {
                            label = "enable"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7952, 8264
                        ]

                        port initial_condition {
                            label = "initial_condition"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8248, 8232
                        ]

                        junction Junction2 sp
                        [
                            position = 7984, 8264
                        ]

                        junction Junction3 sp
                        [
                            position = 7904, 8200
                        ]

                        connect Junction2 enable as Connection150
                        connect Junction3 not.out as Connection158
                        connect R25 "Trip_out mng fnc.bool_R25" as Connection144
                        connect "SR Flip Flop1.r_in" not1.out as Connection136
                        connect Termination1.in "SR Flip Flop1.out_n" as Connection138
                        connect "Trip_out mng fnc.enable" Junction2 as Connection151
                        connect "Trip_out mng fnc.trip_in" Junction3 as Connection157
                        connect "Trip_out mng fnc.activate_logic" "SR Flip Flop1.out" as Connection154
                        connect detect_change.In3 Junction3 as Connection159
                        connect detect_change.Out1 "SR Flip Flop1.s_in" as Connection156
                        connect initial_condition "Trip_out mng fnc.initial_condition" as Connection152
                        connect not.in Trip_in as Connection139
                        connect not1.in Junction2 as Connection149
                        connect op_mode "Trip_out mng fnc.op_mode_in" as Connection145
                        connect trip_out "Trip_out mng fnc.trip_out" as Connection167
                    }
                    [
                        position = 9336, 8056
                        size = 128, 136
                    ]

                    component Subsystem Relay_Param {
                        layout = dynamic
                        component src_constant CT_primary {
                            execution_rate = "Ts"
                            value = "CT_primary"
                        }
                        [
                            position = 8088, 7928
                        ]

                        component src_constant dF_threshold {
                            execution_rate = "Ts"
                            value = "dF_threshold"
                        }
                        [
                            position = 8088, 7760
                        ]

                        component src_constant VRMSLL {
                            execution_rate = "Ts"
                            value = "VRMSLL"
                        }
                        [
                            position = 8088, 7592
                        ]

                        component src_constant Initial_status {
                            execution_rate = "Ts"
                            value = "Initial_status"
                        }
                        [
                            position = 8088, 7992
                        ]

                        component src_constant angle_threshold {
                            execution_rate = "Ts"
                            value = "angle_threshold"
                        }
                        [
                            position = 8088, 7704
                        ]

                        component src_constant dV_threshold {
                            execution_rate = "Ts"
                            value = "dV_threshold"
                        }
                        [
                            position = 8088, 7648
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "3"
                        }
                        [
                            position = 8104, 8192
                            rotation = down
                            scale = -1, -1
                        ]

                        component sys_signal_switch "Signal switch1" {
                            threshold = "0.5"
                        }
                        [
                            position = 9104, 7808
                            scale = 1, -1
                        ]

                        component src_constant 27P_59P_tripDelay {
                            execution_rate = "Ts"
                            value = "R27P_R59P_tripDelay"
                        }
                        [
                            position = 8088, 7872
                        ]

                        component gen_bus_join "Bus Join1" {
                            inputs = "4"
                        }
                        [
                            position = 8296, 7800
                            rotation = right
                        ]

                        component Subsystem Grid_Tied_param {
                            layout = dynamic
                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup1"
                            }
                            [
                                position = 8312, 7840
                                rotation = right
                            ]

                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup1"
                            }
                            [
                                position = 8080, 7840
                                rotation = right
                            ]

                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7904
                                rotation = right
                            ]

                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType1"
                            }
                            [
                                position = 8240, 7880
                                rotation = right
                            ]

                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8552, 8040
                            ]

                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup1"
                            }
                            [
                                position = 8416, 7840
                                rotation = right
                            ]

                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay1"
                            }
                            [
                                position = 8352, 7880
                                rotation = right
                            ]

                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial1"
                            }
                            [
                                position = 8200, 7840
                                rotation = right
                            ]

                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup1"
                            }
                            [
                                position = 8120, 7880
                                rotation = right
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7840
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7880
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7880
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8704, 8040
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8776, 7936
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 8872, 7728
                            size = 216, 104
                        ]

                        component Subsystem Islanded_param {
                            layout = dynamic
                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay2"
                            }
                            [
                                position = 8352, 7888
                                rotation = right
                            ]

                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup2"
                            }
                            [
                                position = 8120, 7888
                                rotation = right
                            ]

                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8544, 8048
                            ]

                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup2"
                            }
                            [
                                position = 8072, 7856
                                rotation = right
                            ]

                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup2"
                            }
                            [
                                position = 8296, 7856
                                rotation = right
                            ]

                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup2"
                            }
                            [
                                position = 8400, 7856
                                rotation = right
                            ]

                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial2"
                            }
                            [
                                position = 8192, 7856
                                rotation = right
                            ]

                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType2"
                            }
                            [
                                position = 8240, 7888
                                rotation = right
                            ]

                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7920
                                rotation = right
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7856
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7888
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7888
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8696, 8048
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8744, 7928
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 9224, 8040
                            size = 216, 104
                        ]

                        component Subsystem Reset {
                            layout = dynamic
                            component gen_logic_op or {
                                operator = "OR"
                            }
                            [
                                position = 8152, 8192
                            ]

                            component Subsystem detect_change {
                                layout = dynamic
                                component tm_delay "Unit Delay1" {
                                }
                                [
                                    position = 8144, 8200
                                ]

                                component gen_rel_op "Relational operator1" {
                                    relational_op = "!="
                                }
                                [
                                    position = 8240, 8192
                                ]

                                port Out1 {
                                    label = "Out"
                                    position = right:1
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8304, 8192
                                ]

                                port In3 {
                                    label = "In"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8032, 8200
                                ]

                                junction Junction1 sp
                                [
                                    position = 8080, 8200
                                ]

                                connect Junction1 In3 as Connection1
                                connect "Relational operator1.in" Junction1 as Connection2
                                connect "Relational operator1.out" Out1 as Connection3
                                connect "Unit Delay1.in" Junction1 as Connection4
                                connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                            }
                            [
                                position = 8248, 8192
                                size = 48, 48
                            ]

                            port reset {
                                label = "Reset"
                                position = right:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8336, 8152
                            ]

                            port op_mode {
                                label = "Op_mode"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8344, 8240
                            ]

                            port "Reset in" {
                                label = "Reset in"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8168
                            ]

                            port "op_mode in" {
                                label = "op_mode in"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8224
                            ]

                            junction Junction1 sp
                            [
                                position = 8096, 8224
                            ]

                            connect Junction1 "op_mode in" as Connection1
                            connect detect_change.Out1 reset as Connection5
                            connect op_mode Junction1 as Connection6
                            connect or.in1 Junction1 as Connection3
                            connect or.in "Reset in" as Connection2
                            connect or.out detect_change.In3 as Connection4
                        }
                        [
                            position = 8280, 8192
                            rotation = down
                            scale = -1, -1
                            size = 104, 104
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8160
                        ]

                        port reset {
                            label = "reset"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8224
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8360, 7856
                        ]

                        port Initial_condition {
                            label = "Initial_condition"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8192, 7992
                        ]

                        port from_Modbus {
                            label = "from_Modbus"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7992, 8192
                        ]

                        port relay_param {
                            label = "relay_param"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9200, 7808
                        ]

                        tag From3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7760
                        ]

                        tag Goto2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7872
                        ]

                        tag From1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7696
                        ]

                        tag From2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8616, 7728
                        ]

                        tag From4 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 9104, 7904
                            rotation = right
                            scale = 1, -1
                        ]

                        tag Goto1 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8232, 8280
                        ]

                        tag Goto4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8208, 7544
                        ]

                        tag Goto3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7928
                        ]

                        junction Junction1 sp
                        [
                            position = 8152, 7592
                        ]

                        junction Junction2 sp
                        [
                            position = 8736, 7696
                        ]

                        junction Junction3 sp
                        [
                            position = 8712, 7728
                        ]

                        junction Junction4 sp
                        [
                            position = 8688, 7760
                        ]

                        connect "Bus Join1.in" Junction1 as Connection54
                        connect "Bus Join1.in2" angle_threshold.out as Connection48
                        connect "Bus Join1.in3" dF_threshold.out as Connection49
                        connect "Bus Join1.in1" dV_threshold.out as Connection47
                        connect "Bus Split1.out1" "Reset.Reset in" as Connection75
                        connect "Bus Split1.in" from_Modbus as Connection42
                        connect From1 Junction2 as Connection60
                        connect From2 Junction3 as Connection63
                        connect From3 Junction4 as Connection66
                        connect From4 "Signal switch1.in2" as Connection71
                        connect Goto1 "Bus Split1.out2" as Connection45
                        connect Goto2 27P_59P_tripDelay.out as Connection51
                        connect Goto3 CT_primary.out as Connection52
                        connect Goto4 Junction1 as Connection56
                        connect Initial_condition Initial_status.out as Connection53
                        connect Islanded_param.VRMSLL Junction2 as Connection62
                        connect Islanded_param.27P_59P_tripDelay Junction3 as Connection65
                        connect Islanded_param.CT_primary Junction4 as Connection68
                        connect Junction1 VRMSLL.out as Connection55
                        connect Junction2 Grid_Tied_param.VRMSLL as Connection61
                        connect Junction3 Grid_Tied_param.27P_59P_tripDelay as Connection64
                        connect Junction4 Grid_Tied_param.CT_primary as Connection67
                        connect "Reset.op_mode in" "Bus Split1.out" as Connection76
                        connect Reset.op_mode op_mode as Connection43
                        connect Reset.reset reset as Connection44
                        connect "Signal switch1.in1" Grid_Tied_param.relay_param as Connection73
                        connect "Signal switch1.in" Islanded_param.relay_param as Connection72
                        connect relay_param "Signal switch1.out" as Connection74
                        connect relay_paramR25 "Bus Join1.out" as Connection50
                    }
                    [
                        position = 8344, 7976
                        size = 168, 160
                    ]

                    component Subsystem "Relay 25-Sync Check1" {
                        layout = dynamic
                        component gen_gain Gain2 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7832
                        ]

                        component gen_c_function "Deadbus fcn" {
                            global_variables = "real threshold;uint a;uint c;uint b;"
                            in_terminal_dimensions_str = "Vbus inherit;Vline inherit;VRMSLL inherit;"
                            in_terminal_properties = "real Vbus;real Vline;real VRMSLL;"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "out inherit;"
                            output_fnc = "/*Begin code section*/
if (VRMSLL > 400)
    threshold=VRMSLL*0.003;
else
    threshold = VRMSLL*0.05;

if ((Vbus > (VRMSLL*0.90)) && (Vbus < (VRMSLL*1.20)) && (Vline < threshold))
    a = 1;
else
    a = 0;

if ((Vline > (VRMSLL*0.90)) && (Vline < (VRMSLL*1.20)) && (Vbus < threshold))
    b = 1;
else
    b = 0;

if ((Vline < threshold) && (Vbus < threshold))
    c = 1;
else
    c = 0;

out = a || b || c;
/*End code section*/"
                        }
                        [
                            position = 8208, 7672
                        ]

                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7784, 7832
                        ]

                        component gen_logic_op "Logical operator5" {
                            operator = "OR"
                        }
                        [
                            position = 8544, 7848
                        ]

                        component gen_rel_op "Relational operator1" {
                        }
                        [
                            position = 8464, 7856
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8808, 7904
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7784, 7776
                        ]

                        component gen_gain Gain1 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7776
                        ]

                        component gen_gain Gain3 {
                            gain = "1.0/10.0"
                        }
                        [
                            position = 7776, 8080
                        ]

                        component gen_logic_op "Logical operator7" {
                            operator = "OR"
                        }
                        [
                            position = 8632, 7888
                        ]

                        component src_constant Constant2 {
                            execution_rate = "Ts"
                            value = "[2]"
                        }
                        [
                            position = 8368, 7848
                        ]

                        component gen_logic_op "Logical operator4" {
                            operator = "OR"
                        }
                        [
                            position = 8888, 8096
                        ]

                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8736, 7864
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "4"
                        }
                        [
                            position = 7808, 8424
                        ]

                        component gen_logic_op "Logical operator3" {
                            inputs = "3"
                        }
                        [
                            position = 8336, 8104
                        ]

                        component Subsystem "Phase Comparator" {
                            layout = dynamic
                            component gen_probe c_out {
                                addr = "17943"
                            }
                            [
                                position = 7768, 8000
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7808, 8056
                            ]

                            component gen_c_function "C function1" {
                                global_variables = "real mod_L;real wrap_out1;real wrap_out2;real mod_B;real k;real alpha;real PI2;real PI;"
                                in_terminal_dimensions_str = "phase_bus inherit;phase_line inherit;"
                                in_terminal_properties = "real phase_bus;real phase_line;"
                                init_fnc = "/*Begin code section*/
PI = 3.1415926536;
PI2 = 2*PI;
/*End code section*/"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
mod_L=fmod(phase_line, PI2);
mod_B=fmod(phase_bus, PI2);

if (fabs(mod_L - mod_B) > PI) {
    if (mod_L < mod_B)
        mod_B -= PI2;
    else
        mod_B += PI2;
}

out=fabs(mod_L-mod_B)*180.0/PI;
/*End code section*/"
                            }
                            [
                                position = 7656, 8040
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8056
                            ]

                            port wt_grid {
                                label = "wt_grid"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8008
                            ]

                            port wt_gen {
                                label = "wt_gen"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8072
                            ]

                            port angle_threshold {
                                label = "angle_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7576, 8136
                            ]

                            junction Junction1 sp
                            [
                                position = 7736, 8048
                            ]

                            connect Junction1 "C function1.out" as Connection2
                            connect Locked "Relational operator1.out" as Connection3
                            connect "Relational operator1.in" Junction1 as Connection4
                            connect angle_threshold "Relational operator1.in1" as Connection8
                            connect c_out.in Junction1 as Connection5
                            connect wt_gen "C function1.phase_line" as Connection6
                            connect wt_grid "C function1.phase_bus" as Connection7
                        }
                        [
                            position = 8016, 8272
                            size = 112, 88
                        ]

                        component Subsystem "Freq Comparator" {
                            layout = dynamic
                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7832, 8048
                            ]

                            component gen_c_function "C function1" {
                                in_terminal_dimensions_str = "fbus inherit;fline inherit;"
                                in_terminal_properties = "real fbus;inherit fline;"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
out=fabs(fline-fbus);
/*End code section*/"
                            }
                            [
                                position = 7736, 8040
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8048
                            ]

                            port f_bus {
                                label = "f_bus"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port f_line {
                                label = "f_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port dF_threshold {
                                label = "dF_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7728, 8112
                            ]

                            connect "Relational operator1.in" "C function1.out" as Connection6
                            connect "Relational operator1.out" Locked as Connection8
                            connect "Relational operator1.in1" dF_threshold as Connection7
                            connect f_bus "C function1.fbus" as Connection4
                            connect f_line "C function1.fline" as Connection5
                        }
                        [
                            position = 8016, 8104
                            size = 112, 88
                        ]

                        component Subsystem "Voltage Comparator" {
                            layout = dynamic
                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7856, 8048
                            ]

                            component gen_c_function "C function1" {
                                in_terminal_dimensions_str = "Vbus inherit;Vline inherit;"
                                in_terminal_properties = "real Vbus;inherit Vline;"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
out=fabs(Vline-Vbus);
/*End code section*/"
                            }
                            [
                                position = 7736, 8040
                            ]

                            component gen_gain Gain1 {
                                gain = "0.01"
                            }
                            [
                                position = 7680, 8200
                            ]

                            component gen_product Product1 {
                            }
                            [
                                position = 7760, 8160
                            ]

                            port V_bus {
                                label = "V_bus"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port V_line {
                                label = "V_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7928, 8048
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8152
                            ]

                            port dV_threshold {
                                label = "dV_threshold"
                                position = left:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8200
                            ]

                            connect Gain1.in dV_threshold as Connection8
                            connect Product1.in1 Gain1.out as Connection7
                            connect Product1.out "Relational operator1.in1" as Connection9
                            connect Product1.in VRMSLL as Connection6
                            connect "Relational operator1.in" "C function1.out" as Connection2
                            connect "Relational operator1.out" Locked as Connection3
                            connect V_bus "C function1.Vbus" as Connection4
                            connect V_line "C function1.Vline" as Connection5
                        }
                        [
                            position = 8016, 7864
                            size = 112, 208
                        ]

                        port trip_or {
                            label = "trip_or"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7792
                        ]

                        port mode_in {
                            label = "mode_in"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7896
                        ]

                        port bool_R25 {
                            label = "bool_R25"
                            position = auto:auto
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9032, 8096
                        ]

                        port Va {
                            label = "Va"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7776
                        ]

                        port Vline_a {
                            label = "Vline_A"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7832
                        ]

                        port bus_freq {
                            label = "bus_freq"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8080
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7824, 8104
                        ]

                        port bus_wt {
                            label = "bus_wt"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7776, 8248
                        ]

                        port line_wt {
                            label = "line_wt"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7832, 8272
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8424
                        ]

                        tag Goto3 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7912, 8432
                        ]

                        tag From3 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7944
                        ]

                        tag From2 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8128
                        ]

                        tag Goto2 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8416
                            rotation = down
                            scale = -1, 1
                        ]

                        tag Goto1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8056, 8400
                            rotation = down
                            scale = -1, 1
                        ]

                        tag From1 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8296
                        ]

                        tag From5 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8112, 7688
                        ]

                        tag Goto4 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8448
                        ]

                        tag From4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7888
                        ]

                        junction Junction4 sp
                        [
                            position = 7920, 7832
                        ]

                        junction Junction5 sp
                        [
                            position = 8536, 8104
                        ]

                        junction Junction23 sp
                        [
                            position = 7904, 7776
                        ]

                        connect "Bus Split1.in" relay_paramR25 as Connection69
                        connect Constant2.out "Relational operator1.in" as Connection1
                        connect "Deadbus fcn.Vbus" Junction23 as Connection103
                        connect "Deadbus fcn.out" "SR Flip Flop1.s_in" as Connection137
                        connect "Freq Comparator.Locked" "Logical operator3.in1" as Connection135
                        connect "Freq Comparator.f_line" line_freq as Connection133
                        connect From1 "Phase Comparator.angle_threshold" as Connection74
                        connect From2 "Freq Comparator.dF_threshold" as Connection79
                        connect From3 "Voltage Comparator.dV_threshold" as Connection80
                        connect From4 "Voltage Comparator.VRMSLL" as Connection81
                        connect From5 "Deadbus fcn.VRMSLL" as Connection90
                        connect Gain3.out "Freq Comparator.f_bus" as Connection132
                        connect Goto1 "Bus Split1.out" as Connection70
                        connect Goto2 "Bus Split1.out1" as Connection71
                        connect Goto3 "Bus Split1.out2" as Connection72
                        connect Goto4 "Bus Split1.out3" as Connection73
                        connect Junction23 Gain1.out as Connection16
                        connect Junction4 "Deadbus fcn.Vline" as Connection104
                        connect Junction4 Gain2.out as Connection21
                        connect Junction5 "Logical operator4.in1" as Connection22
                        connect "Logical operator3.out" Junction5 as Connection24
                        connect "Logical operator3.in2" "Phase Comparator.Locked" as Connection134
                        connect "Logical operator5.out" "Logical operator7.in" as Connection26
                        connect "Logical operator5.in1" "Relational operator1.out" as Connection27
                        connect "Logical operator5.in" trip_or as Connection28
                        connect "Logical operator7.in1" Junction5 as Connection29
                        connect "Logical operator7.out" "SR Flip Flop1.r_in" as Connection30
                        connect "Phase Comparator.wt_grid" bus_wt as Connection110
                        connect "RMS value1.out" Gain1.in as Connection93
                        connect "RMS value2.out" Gain2.in as Connection97
                        connect "Relational operator1.in1" mode_in as Connection36
                        connect "SR Flip Flop1.out" "Logical operator4.in" as Connection37
                        connect "SR Flip Flop1.out_n" Termination1.in as Connection38
                        connect Va "RMS value1.in" as Connection101
                        connect Vline_a "RMS value2.in" as Connection102
                        connect "Voltage Comparator.V_bus" Junction23 as Connection47
                        connect "Voltage Comparator.V_line" Junction4 as Connection48
                        connect "Voltage Comparator.Locked" "Logical operator3.in" as Connection136
                        connect bool_R25 "Logical operator4.out" as Connection138
                        connect bus_freq Gain3.in as Connection121
                        connect line_wt "Phase Comparator.wt_gen" as Connection111
                    }
                    [
                        position = 8888, 7800
                        size = 120, 232
                    ]

                    component Subsystem "CALC FROM MEASUREMENTS" {
                        layout = dynamic
                        component gen_rms_value "RMS value4" {
                        }
                        [
                            position = 7064, 8128
                        ]

                        component gen_terminator Termination9 {
                        }
                        [
                            position = 7336, 8368
                        ]

                        component gen_gain Gain3 {
                            gain = "10"
                        }
                        [
                            position = 7064, 7792
                        ]

                        component gen_gain Gain9 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7032, 9120
                        ]

                        component gen_rms_value "RMS value6" {
                        }
                        [
                            position = 7064, 8256
                        ]

                        component gen_PQ_transform "PQ Power Meter1" {
                        }
                        [
                            position = 6936, 8952
                        ]

                        component msr_phasor_3ph "Three Phase Phasor1" {
                        }
                        [
                            position = 6904, 7752
                        ]

                        component gen_rms_value "RMS value5" {
                        }
                        [
                            position = 7064, 8192
                        ]

                        component gen_gain Gain5 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8600
                        ]

                        component gen_gain Gain8 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8976
                        ]

                        component gen_terminator Termination13 {
                        }
                        [
                            position = 6864, 9368
                        ]

                        component gen_gain Gain11 {
                            gain = "10.0"
                        }
                        [
                            position = 7432, 8400
                        ]

                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7064, 7984
                        ]

                        component gen_terminator Termination10 {
                        }
                        [
                            position = 6856, 9472
                        ]

                        component "core/Three phase PLL" "Three phase PLL2" {
                        }
                        [
                            position = 6760, 9408
                        ]

                        component gen_gain Gain4 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8504
                        ]

                        component gen_rms_value "RMS value3" {
                        }
                        [
                            position = 7064, 8048
                        ]

                        component gen_terminator Termination4 {
                        }
                        [
                            position = 7088, 9072
                        ]

                        component gen_terminator Termination11 {
                        }
                        [
                            position = 6864, 9256
                        ]

                        component gen_terminator Termination7 {
                        }
                        [
                            position = 7336, 8256
                        ]

                        component gen_gain Gain1 {
                            gain = "10"
                        }
                        [
                            position = 7000, 7592
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7064, 7920
                        ]

                        component "core/Three phase PLL" "Three phase PLL1" {
                        }
                        [
                            position = 7224, 8392
                        ]

                        component gen_terminator Termination3 {
                        }
                        [
                            position = 7048, 9016
                        ]

                        component gen_terminator Termination5 {
                        }
                        [
                            position = 7304, 8488
                        ]

                        component gen_gain Gain2 {
                            gain = "10"
                        }
                        [
                            position = 7048, 7696
                        ]

                        component gen_terminator Termination12 {
                        }
                        [
                            position = 6864, 9312
                        ]

                        component gen_gain Gain6 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8704
                        ]

                        component msr_phasor_3ph "Three Phase Phasor2" {
                        }
                        [
                            position = 6968, 8560
                        ]

                        component gen_terminator Termination8 {
                        }
                        [
                            position = 7336, 8312
                        ]

                        component gen_gain Gain10 {
                            gain = "100.0"
                        }
                        [
                            position = 7064, 9168
                        ]

                        component gen_gain Gain7 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8824
                        ]

                        component Subsystem Subsystem1 {
                            layout = dynamic
                            component gen_abs Abs2 {
                            }
                            [
                                position = 7720, 7896
                            ]

                            component src_constant Constant2 {
                                execution_rate = "Ts"
                                value = "[0]"
                            }
                            [
                                position = 7752, 8048
                            ]

                            component gen_logic_op "Logical operator1" {
                            }
                            [
                                position = 7976, 7856
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7800
                            ]

                            component src_constant Constant1 {
                                execution_rate = "Ts"
                            }
                            [
                                position = 7768, 7856
                            ]

                            component gen_abs Abs1 {
                            }
                            [
                                position = 7720, 7792
                            ]

                            component gen_rel_op "Relational operator4" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8096
                            ]

                            component gen_rel_op "Relational operator3" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8000
                            ]

                            component gen_rel_op "Relational operator2" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7904
                            ]

                            component Subsystem Subsystem3 {
                                layout = dynamic
                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8008
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8032, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 Out1 as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect "Multiport signal switch1.ctrl" u as Connection4
                                connect "Unit Delay1.out" Junction1 as Connection5
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection6
                            }
                            [
                                position = 8152, 8104
                                size = 112, 56
                            ]

                            component Subsystem Subsystem2 {
                                layout = dynamic
                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7576, 8032
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7648, 8056
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8072, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 "Unit Delay1.out" as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect Out1 Junction1 as Connection4
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection5
                                connect u "Multiport signal switch1.ctrl" as Connection6
                            }
                            [
                                position = 8152, 8008
                                size = 112, 56
                            ]

                            port P {
                                label = "P"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 7992
                            ]

                            port Q {
                                label = "Q"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 8088
                            ]

                            port "Lagging or Leading" {
                                label = "Lag or Lead"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8104
                            ]

                            port "Exporting or Importing" {
                                label = "export or import"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8008
                            ]

                            junction Junction1 sp
                            [
                                position = 7560, 8088
                            ]

                            junction Junction4 sp
                            [
                                position = 7592, 7992
                            ]

                            junction Junction11 sp
                            [
                                position = 7808, 7856
                            ]

                            junction Junction13 sp
                            [
                                position = 7824, 8048
                            ]

                            junction Junction14 sp
                            [
                                position = 8040, 8016
                            ]

                            connect Abs1.in Junction1 as Connection1
                            connect Abs1.out "Relational operator1.in" as Connection2
                            connect Abs2.out "Relational operator2.in" as Connection3
                            connect Constant1.out Junction11 as Connection8
                            connect Constant2.out Junction13 as Connection9
                            connect "Exporting or Importing" Subsystem2.Out1 as Connection10
                            connect Junction11 "Relational operator1.in1" as Connection12
                            connect Junction13 "Relational operator3.in1" as Connection14
                            connect Junction14 Subsystem3.E as Connection45
                            connect Junction4 Abs2.in as Connection39
                            connect Junction4 P as Connection18
                            connect "Lagging or Leading" Subsystem3.Out1 as Connection22
                            connect "Logical operator1.out" Junction14 as Connection44
                            connect Q Junction1 as Connection26
                            connect "Relational operator1.out" "Logical operator1.in" as Connection27
                            connect "Relational operator2.in1" Junction11 as Connection28
                            connect "Relational operator2.out" "Logical operator1.in1" as Connection29
                            connect "Relational operator3.in" Junction4 as Connection42
                            connect "Relational operator3.out" Subsystem2.u as Connection31
                            connect "Relational operator4.in" Junction1 as Connection40
                            connect "Relational operator4.in1" Junction13 as Connection32
                            connect "Relational operator4.out" Subsystem3.u as Connection34
                            connect Subsystem2.E Junction14 as Connection46
                        }
                        [
                            position = 7240, 8912
                            size = 112, 80
                        ]

                        port Ia {
                            label = "Ia"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7920
                        ]

                        port Ia_rms {
                            label = "Ia_rms"
                            position = right:7
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7920
                        ]

                        port Ib {
                            label = "Ib"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7984
                        ]

                        port Ib_rms {
                            label = "Ib_rms"
                            position = right:8
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7984
                        ]

                        port Ic {
                            label = "Ic"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8048
                        ]

                        port Ic_rms {
                            label = "Ic_rms"
                            position = right:9
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8048
                        ]

                        port Va {
                            label = "Va"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8128
                        ]

                        port Va_rms {
                            label = "Va_rms"
                            position = right:10
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8128
                        ]

                        port Vb {
                            label = "Vb"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8192
                        ]

                        port Vc {
                            label = "Vc"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8256
                        ]

                        port Vb_rms {
                            label = "Vb_rms"
                            position = right:11
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8192
                        ]

                        port Vc_rms {
                            label = "Vc_rms"
                            position = right:12
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8256
                        ]

                        port P {
                            label = "P"
                            position = right:19
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7160, 8824
                        ]

                        port Q {
                            label = "Q"
                            position = right:20
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7168, 8976
                        ]

                        port S {
                            label = "S"
                            position = right:21
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7112, 9120
                        ]

                        port pf {
                            label = "pf"
                            position = right:22
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7144, 9168
                        ]

                        port Ia_mag {
                            label = "Ia_mag"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7536
                        ]

                        port Ia_phase {
                            label = "Ia_phase"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7592
                        ]

                        port Ib_mag {
                            label = "Ib_mag"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7640
                        ]

                        port Ib_phase {
                            label = "Ib_phase"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7696
                        ]

                        port Ic_mag {
                            label = "Ic_mag"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7744
                        ]

                        port Ic_phase {
                            label = "Ic_phase"
                            position = right:6
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7792
                        ]

                        port Va_mag {
                            label = "Va_mag"
                            position = right:13
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8456
                        ]

                        port Va_phase {
                            label = "Va_phase"
                            position = right:14
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8504
                        ]

                        port Vb_mag {
                            label = "Vb_mag"
                            position = right:15
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8552
                        ]

                        port Vb_phase {
                            label = "Vb_phase"
                            position = right:16
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8600
                        ]

                        port Vc_mag {
                            label = "Vc_mag"
                            position = right:17
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8648
                        ]

                        port Vc_phase {
                            label = "Vc_phase"
                            position = right:18
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8704
                        ]

                        port "Export Import" {
                            label = "Export Import"
                            position = right:28
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7344, 8928
                        ]

                        port "Lag Lead" {
                            label = "Lag Lead"
                            position = right:27
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7400, 8888
                        ]

                        port bus_freq {
                            label = "Bus_freq"
                            position = right:23
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7512, 8400
                        ]

                        port bus_wt {
                            label = "Bus_wt"
                            position = right:24
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7440, 8456
                        ]

                        port Vline_a {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9352
                        ]

                        port Vline_b {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9408
                        ]

                        port Vline_c {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9464
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = right:25
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9416
                        ]

                        port line_wt {
                            label = "Line_wt"
                            position = right:26
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9464
                        ]

                        junction Junction23 sp
                        [
                            position = 6752, 8128
                        ]

                        junction Junction24 sp
                        [
                            position = 6768, 8192
                        ]

                        junction Junction25 sp
                        [
                            position = 6784, 8256
                        ]

                        junction Junction34 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction35 sp
                        [
                            position = 6656, 7920
                        ]

                        junction Junction37 sp
                        [
                            position = 6672, 7984
                        ]

                        junction Junction39 sp
                        [
                            position = 6752, 8360
                        ]

                        junction Junction41 sp
                        [
                            position = 6768, 8392
                        ]

                        junction Junction42 sp
                        [
                            position = 6784, 8424
                        ]

                        junction Junction44 sp
                        [
                            position = 6768, 8568
                        ]

                        junction Junction45 sp
                        [
                            position = 6784, 8584
                        ]

                        junction Junction46 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction48 sp
                        [
                            position = 6752, 8536
                        ]

                        junction Junction49 sp
                        [
                            position = 6928, 8536
                        ]

                        junction Junction50 sp
                        [
                            position = 7056, 8928
                        ]

                        junction Junction51 sp
                        [
                            position = 7056, 8888
                        ]

                        junction Junction52 sp
                        [
                            position = 6752, 8128
                        ]

                        junction Junction53 sp
                        [
                            position = 6656, 7920
                        ]

                        connect "Export Import" "Subsystem1.Exporting or Importing" as Connection116
                        connect Gain1.out Ia_phase as Connection87
                        connect Gain10.in "PQ Power Meter1.k_factor" as Connection105
                        connect Gain11.in "Three phase PLL1.freq" as Connection107
                        connect Gain2.out Ib_phase as Connection89
                        connect Gain3.in "Three Phase Phasor1.phase3" as Connection91
                        connect Gain4.in "Three Phase Phasor2.phase1" as Connection92
                        connect Gain4.out Va_phase as Connection93
                        connect Gain5.out Vb_phase as Connection95
                        connect Gain6.in "Three Phase Phasor2.phase3" as Connection97
                        connect Gain7.in Junction51 as Connection113
                        connect Gain8.out Q as Connection101
                        connect Gain9.in "PQ Power Meter1.apparent" as Connection103
                        connect Ia Junction35 as Connection2
                        connect Ia_mag "Three Phase Phasor1.out1" as Connection3
                        connect Ia_rms "RMS value1.out" as Connection4
                        connect Ib Junction37 as Connection5
                        connect Ib_rms "RMS value2.out" as Connection6
                        connect Ic Junction34 as Connection7
                        connect Ic_phase Gain3.out as Connection90
                        connect Ic_rms "RMS value3.out" as Connection9
                        connect Junction23 Junction39 as Connection10
                        connect Junction23 Va as Connection11
                        connect Junction24 Junction41 as Connection12
                        connect Junction24 "RMS value5.in" as Connection13
                        connect Junction24 Vb as Connection14
                        connect Junction25 Junction42 as Connection15
                        connect Junction25 "RMS value6.in" as Connection16
                        connect Junction37 "RMS value2.in" as Connection18
                        connect Junction39 "Three phase PLL1.va" as Connection20
                        connect Junction41 "Three phase PLL1.vb" as Connection21
                        connect Junction42 "Three phase PLL1.vc" as Connection22
                        connect Junction44 Junction41 as Connection23
                        connect Junction45 Junction42 as Connection24
                        connect Junction46 Junction34 as Connection25
                        connect Junction48 Junction39 as Connection27
                        connect Junction49 Junction48 as Connection28
                        connect Junction50 Gain8.in as Connection111
                        [
                            breakpoints = 7056, 8928
                        ]
                        connect Junction51 "PQ Power Meter1.Pdc" as Connection114
                        [
                            breakpoints = 7056, 8888
                        ]
                        connect Junction52 Junction23 as Connection119
                        connect Junction53 Junction35 as Connection122
                        connect P Gain7.out as Connection98
                        connect "PQ Power Meter1.ia" Junction35 as Connection30
                        connect "PQ Power Meter1.ib" Junction37 as Connection31
                        connect "PQ Power Meter1.vb" Junction44 as Connection33
                        connect "PQ Power Meter1.vc" Junction45 as Connection34
                        connect "PQ Power Meter1.ic" Junction46 as Connection35
                        connect "PQ Power Meter1.va" Junction48 as Connection36
                        connect "PQ Power Meter1.Qdc" Junction50 as Connection110
                        connect "RMS value1.in" Junction53 as Connection121
                        connect "RMS value3.in" Junction34 as Connection38
                        connect "RMS value4.in" Junction52 as Connection118
                        connect S Gain9.out as Connection102
                        connect Subsystem1.Q Junction50 as Connection112
                        connect Subsystem1.P Junction51 as Connection115
                        connect "Subsystem1.Lagging or Leading" "Lag Lead" as Connection117
                        connect Termination10.in "Three phase PLL2.sin_theta" as Connection45
                        connect Termination11.in "Three phase PLL2.d_axis" as Connection46
                        connect Termination12.in "Three phase PLL2.q_axis" as Connection47
                        connect Termination13.in "Three phase PLL2.zero_axis" as Connection48
                        connect Termination3.in "PQ Power Meter1.Pac" as Connection50
                        connect Termination4.in "PQ Power Meter1.Qac" as Connection51
                        connect Termination5.in "Three phase PLL1.sin_theta" as Connection52
                        connect Termination7.in "Three phase PLL1.d_axis" as Connection53
                        connect Termination8.in "Three phase PLL1.q_axis" as Connection54
                        connect Termination9.in "Three phase PLL1.zero_axis" as Connection55
                        connect "Three Phase Phasor1.phase1" Gain1.in as Connection86
                        connect "Three Phase Phasor1.phase2" Gain2.in as Connection88
                        connect "Three Phase Phasor1.out2" Ib_mag as Connection57
                        connect "Three Phase Phasor1.out3" Ic_mag as Connection59
                        connect "Three Phase Phasor1.in2" Junction37 as Connection60
                        connect "Three Phase Phasor1.in3" Junction46 as Connection61
                        connect "Three Phase Phasor1.in_ref" Junction52 as Connection120
                        connect "Three Phase Phasor1.in1" Junction53 as Connection123
                        connect "Three Phase Phasor2.phase2" Gain5.in as Connection94
                        connect "Three Phase Phasor2.in2" Junction44 as Connection64
                        connect "Three Phase Phasor2.in3" Junction45 as Connection65
                        connect "Three Phase Phasor2.in1" Junction49 as Connection67
                        connect "Three Phase Phasor2.in_ref" Junction49 as Connection66
                        connect "Three Phase Phasor2.out1" Va_mag as Connection68
                        connect "Three Phase Phasor2.out2" Vb_mag as Connection70
                        connect "Three Phase Phasor2.out3" Vc_mag as Connection72
                        connect "Three phase PLL2.freq" line_freq as Connection73
                        connect Va_rms "RMS value4.out" as Connection74
                        connect Vb_rms "RMS value5.out" as Connection75
                        connect Vc Junction25 as Connection76
                        connect Vc_phase Gain6.out as Connection96
                        connect Vc_rms "RMS value6.out" as Connection78
                        connect Vline_a "Three phase PLL2.va" as Connection79
                        connect Vline_b "Three phase PLL2.vb" as Connection80
                        connect Vline_c "Three phase PLL2.vc" as Connection81
                        connect bus_freq Gain11.out as Connection106
                        connect bus_wt "Three phase PLL1.theta" as Connection83
                        connect line_wt "Three phase PLL2.theta" as Connection84
                        connect pf Gain10.out as Connection104
                    }
                    [
                        position = 6992, 8104
                        size = 112, 664
                    ]

                    component Subsystem R50512761 {
                        layout = dynamic
                        component src_constant Ts {
                            execution_rate = "Ts"
                            value = "Ts"
                        }
                        [
                            position = 7696, 7712
                            rotation = right
                        ]

                        component gen_c_function Relays {
                            global_variables = "real R50;real R51;real R27;real R59;real n50;real n51;real n59;real n27;real t59;real t50;real t51;real bool_27;real t27;real bool_59;uint i;real bool_51;real bool_50;real A;real B;real P;real Ipu50;real Ipu51;real CT_tap;real ratio[3];real M[3];real t51s[3];real Iinst[3];real Irms[3];real Vrms[3];"
                            in_terminal_dimensions_str = "enable inherit;Ts inherit;Reset inherit;IinstA inherit;IinstB inherit;IinstC inherit;IrmsA inherit;IrmsB inherit;IrmsC inherit;VrmsA inherit;VrmsB inherit;VrmsC inherit;VRMSLN inherit;CT_p inherit;IOC_pickup inherit;IOC_tripDelay inherit;TOC_pickup inherit;curveType inherit;timeDial inherit;UV_pickup inherit;OV_pickup inherit;UVOV_tripDelay inherit;"
                            in_terminal_properties = "real enable;inherit Ts;inherit Reset;inherit IinstA;inherit IinstB;inherit IinstC;inherit IrmsA;inherit IrmsB;inherit IrmsC;inherit VrmsA;inherit VrmsB;inherit VrmsC;inherit VRMSLN;inherit CT_p;inherit IOC_pickup;inherit IOC_tripDelay;inherit TOC_pickup;inherit curveType;inherit timeDial;inherit UV_pickup;inherit OV_pickup;inherit UVOV_tripDelay;"
                            init_fnc = "/*Begin code section*/
R50=0;
R51=0;
R27=0;
R59=0;

n50=0;
n51=0;
n59=0;
n27=0;

CT_tap = 1.0;

A = 5.67;
B = 0.0352;
P = 2.0;

t59 = 0;
t50 = 0;
t51 = 0;
t27 = 0;

bool_27 = 0;
bool_59 = 0;
bool_51 = 0;
bool_50 = 0;
/*End code section*/"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "trip50 inherit;trip51 inherit;trip27 inherit;trip59 inherit;"
                            out_terminal_properties = "real trip50;real trip51;real trip27;real trip59;"
                            output_fnc = "/*Begin code section*/
Iinst[0] = fabs(IinstA);
Iinst[1] = fabs(IinstB);
Iinst[2] = fabs(IinstC);

Irms[0] = IrmsA;
Irms[1] = IrmsB;
Irms[2] = IrmsC;

Vrms[0] = VrmsA;
Vrms[1] = VrmsB;
Vrms[2] = VrmsC;

if (Reset==1) {
    R50=0;
    R51=0;
    R59=0;
    R27=0;
    bool_50 = 0.0;
}

for(i=0; i<3; i++){
    Iinst[i] = Iinst[i]*5.0/CT_p;
    Irms[i] = Irms[i]*5.0/CT_p;
}

if(curveType==1){
    A = 0.0104;
    B = 0.0226;
    P = 0.02;
}
else if(curveType==2){
    A = 5.95;
    B = 0.180;
    P = 2.0;
}
else if(curveType==3){
    A = 3.88;
    B = 0.0923;
    P = 2.0;
}
else{
    A = 5.67;
    B = 0.0352;
    P = 2.0;
}

if (!((R50 == 1) || (R51 == 1))&&(enable==1)){
    
    if((UV_pickup>1)||(UV_pickup==0)){
        UV_pickup = 0.9;
    }
    if((OV_pickup<1)||(OV_pickup==0)){
        OV_pickup = 1.1;
    }
    
    Ipu50 = IOC_pickup*CT_tap*sqrt(2.0);
    Ipu51 = TOC_pickup*CT_tap;
    
    for(i=0; i<3; i++){
        ratio[i] = Vrms[i]/VRMSLN;
        M[i] = Irms[i]/Ipu51;
        if(M[i]<=1.0){
            t51s[i] = 1e6;
        }
        else{
            t51s[i] = timeDial*(B+(A/(pow(M[i],P)-1)));
        }
    }
    
    t27 = 0.004167 + UVOV_tripDelay;
    t50 = 0.004167 + IOC_tripDelay;
    t59 = 0.004167 + UVOV_tripDelay;
    
    if((t51s[0]<=t51s[1])&&(t51s[0]<=t51s[2])){
        t51 = t51s[0];
    }
    else if(t51s[1]<=t51s[2]){
        t51 = t51s[1];
    }
    else{
        t51 = t51s[2];
    }
    
    for(i=0; i<3; i++){
        if(ratio[i]<=UV_pickup){
            bool_27 = 1;
            break;
        }
        else{
            bool_27 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Irms[i]>Ipu51){
            bool_51 = 1;
            break;
        }
        else{
            bool_51 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Iinst[i]>Ipu50){
            bool_50 = 1;
            break;
        }
    }
    for(i=0; i<3; i++){
        if(ratio[i]>=OV_pickup){
            bool_59 = 1;
            break;
        }
        else{
            bool_59 = 0;
        }
    }
    //bool_27 = ((ratio[0]<=UV_pickup)+(ratio[1]<=UV_pickup)+(ratio[2]<=UV_pickup))>0;
    //bool_59 = ((ratio[0]>=OV_pickup)+(ratio[1]>=OV_pickup)+(ratio[2]>=OV_pickup))>0;
    //bool_50 = ((Iinst[0]>Ipu50)+(Iinst[1]>Ipu50)+(Iinst[2]>Ipu50))>0;
    //bool_51 = ((Irms[0]>Ipu51)+(Irms[1]>Ipu51)+(Irms[2]>Ipu51))>0;
    
    n50 *= bool_50;
    n51 *= bool_51;
    n27 *= bool_27;
    n59 *= bool_59;

    n50 += bool_50  * Ts;
    n51 += bool_51  * Ts;
    n27 += bool_27  * Ts;
    n59 += bool_59  * Ts;

    if(n50 > t50)
        R50 = 1;
    else
        R50 = 0;

    if(n51 > t51)
        R51 = 1;
    else
        R51 = 0;

    if(n27 > t27)
        R27 = 1;
    else
        R27 = 0;

    if(n59 > t59)
        R59 = 1;
    else
        R59 = 0;
}

trip50 = R50;
trip51 = R51;
trip27 = R27;
trip59 = R59;
/*End code section*/"
                        }
                        [
                            position = 7784, 8008
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "10"
                        }
                        [
                            position = 7560, 8248
                            rotation = left
                        ]

                        port trip_50 {
                            label = "trip_50"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7848
                        ]

                        port trip_51 {
                            label = "trip_51"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7952
                        ]

                        port trip_59 {
                            label = "trip_59"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8160
                        ]

                        port trip_27 {
                            label = "trip_27"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8056
                        ]

                        port relay_param {
                            label = "Relay Param"
                            position = left:12
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7560, 8328
                            rotation = left
                        ]

                        port Irms_c {
                            label = "Irms_c"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7368, 7752
                            rotation = right
                        ]

                        port Irms_a {
                            label = "Irms_a"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7472, 7752
                            rotation = right
                        ]

                        port Enable {
                            label = "Enable"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7736, 7752
                            rotation = right
                        ]

                        port Iinst_a {
                            label = "Iinst_a"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7608, 7712
                            rotation = right
                        ]

                        port Irms_b {
                            label = "Irms_b"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7424, 7712
                            rotation = right
                        ]

                        port Iinst_b {
                            label = "Iinst_b"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7568, 7752
                            rotation = right
                        ]

                        port Reset {
                            label = "Reset"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7656, 7752
                            rotation = right
                        ]

                        port Iinst_c {
                            label = "Iinst_c"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7520, 7712
                            rotation = right
                        ]

                        port Vrms_b {
                            label = "Vrms_b"
                            position = left:10
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7256, 7752
                            rotation = right
                        ]

                        port Vrms_c {
                            label = "Vrms_c"
                            position = left:11
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7200, 7712
                            rotation = right
                        ]

                        port Vrms_a {
                            label = "Vrms_a"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7312, 7712
                            rotation = right
                        ]

                        comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus split:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                        [
                            position = 7728, 8224
                        ]

                        connect "Bus Split1.out5" Relays.curveType as Connection41
                        connect "Bus Split1.out4" Relays.TOC_pickup as Connection42
                        connect "Bus Split1.out3" Relays.IOC_tripDelay as Connection43
                        connect "Bus Split1.out6" Relays.timeDial as Connection40
                        connect "Bus Split1.out2" Relays.IOC_pickup as Connection44
                        connect "Bus Split1.out9" Relays.UVOV_tripDelay as Connection37
                        connect "Bus Split1.out" Relays.VRMSLN as Connection46
                        connect "Bus Split1.out8" Relays.OV_pickup as Connection38
                        connect "Bus Split1.out1" Relays.CT_p as Connection45
                        connect "Bus Split1.out7" Relays.UV_pickup as Connection39
                        connect "Bus Split1.in" relay_param as Connection36
                        connect Enable Relays.enable as Connection47
                        connect Iinst_a Relays.IinstA as Connection50
                        connect Iinst_b Relays.IinstB as Connection51
                        connect Iinst_c Relays.IinstC as Connection52
                        connect Irms_a Relays.IrmsA as Connection53
                        connect Irms_b Relays.IrmsB as Connection54
                        connect Irms_c Relays.IrmsC as Connection55
                        connect Reset Relays.Reset as Connection49
                        connect Ts.out Relays.Ts as Connection48
                        connect Vrms_a Relays.VrmsA as Connection56
                        connect Vrms_b Relays.VrmsB as Connection57
                        connect Vrms_c Relays.VrmsC as Connection58
                        connect trip_27 Relays.trip27 as Connection77
                        connect trip_50 Relays.trip50 as Connection76
                        connect trip_51 Relays.trip51 as Connection75
                        connect trip_59 Relays.trip59 as Connection78
                    }
                    [
                        position = 8424, 8328
                        size = 144, 304
                    ]

                    port OUTPUT {
                        label = "OUTPUT"
                        position = bottom:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9704, 8056
                    ]

                    port Ia {
                        label = "Ia"
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7816
                    ]

                    port Ib {
                        label = "Ib"
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7888
                    ]

                    port Ic {
                        label = "Ic"
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7960
                    ]

                    port Va {
                        label = "Va"
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8032
                    ]

                    port Vb {
                        label = "Vb"
                        position = left:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8104
                    ]

                    port Vc {
                        label = "Vc"
                        position = left:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8176
                    ]

                    port Vline_a {
                        label = "Vline_A"
                        position = left:7
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8248
                    ]

                    port faults_status {
                        label = "Fault_status"
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8272
                    ]

                    port TO_MODBUS {
                        label = "To_Modbus"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8024, 8080
                    ]

                    port Vline_b {
                        label = "Vline_B"
                        position = left:8
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8320
                    ]

                    port Vline_c {
                        label = "Vline_C"
                        position = left:9
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8392
                    ]

                    port cb_state {
                        label = "cb_state"
                        position = left:10
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7312, 8624
                    ]

                    port pf_states {
                        label = "pf_state"
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8416
                        scale = 1, -1
                    ]

                    port from_Modbus {
                        label = "From Modbus"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8144, 7976
                    ]

                    tag Goto16 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7928
                    ]

                    tag From11 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8880, 8256
                    ]

                    tag From20 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8240
                    ]

                    tag From1 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7600, 8280
                        rotation = right
                    ]

                    tag Goto20 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7232, 7760
                        rotation = left
                    ]

                    tag From7 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9072, 8224
                        rotation = down
                        scale = -1, -1
                    ]

                    tag From17 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7752
                    ]

                    tag From29 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8032
                    ]

                    tag From31 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9096, 8424
                    ]

                    tag From10 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8272
                    ]

                    tag Goto8 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8216
                    ]

                    tag Goto5 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9088, 7752
                    ]

                    tag Goto15 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7856
                    ]

                    tag Goto17 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7104, 7760
                        rotation = left
                    ]

                    tag Goto24 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 8304
                    ]

                    tag From37 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7848
                    ]

                    tag From3 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7392, 8384
                    ]

                    tag Goto2 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8248
                    ]

                    tag From4 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7448, 8464
                    ]

                    tag From35 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8456
                    ]

                    tag From14 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7704
                    ]

                    tag From12 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9032, 8288
                    ]

                    tag Goto3 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8336
                    ]

                    tag From26 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8432
                    ]

                    tag Goto21 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 7688
                        rotation = left
                    ]

                    tag From8 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9104, 8304
                    ]

                    tag From18 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7800
                    ]

                    tag From36 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8216
                    ]

                    tag Goto18 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7088, 7688
                        rotation = left
                    ]

                    tag Goto6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9640, 8096
                    ]

                    tag Goto10 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8272
                    ]

                    tag Goto12 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7224, 8256
                    ]

                    tag From2 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7480, 8288
                    ]

                    tag From21 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8264
                    ]

                    tag Goto23 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 8000
                        scale = 1, -1
                    ]

                    tag From32 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8104
                    ]

                    tag Goto14 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7784
                    ]

                    tag Goto27 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7976
                        scale = 1, -1
                    ]

                    tag From33 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9120, 8080
                    ]

                    tag Goto25 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8320
                    ]

                    tag From15 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7728
                    ]

                    tag From25 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8360
                    ]

                    tag Goto9 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8000
                    ]

                    tag From5 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7520, 8504
                    ]

                    tag Goto19 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 7832
                        rotation = left
                    ]

                    tag From19 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7824
                    ]

                    tag From27 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8408
                    ]

                    tag From9 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8992, 8240
                        rotation = down
                        scale = -1, 1
                    ]

                    tag From34 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7896
                    ]

                    tag Goto11 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7376, 8256
                    ]

                    tag Goto29 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 7952
                        scale = 1, -1
                    ]

                    tag From13 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8320
                    ]

                    tag From24 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8312
                    ]

                    tag From30 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9024, 8408
                    ]

                    tag Goto28 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7928
                        scale = 1, -1
                    ]

                    tag Goto1 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8160
                    ]

                    tag From6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7584, 8560
                        rotation = right
                    ]

                    tag Goto22 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7248, 7832
                        rotation = left
                    ]

                    tag From16 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7776
                    ]

                    tag From22 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8288
                    ]

                    tag Goto7 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 8024
                        scale = 1, -1
                    ]

                    tag Goto4 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8424
                    ]

                    tag Goto13 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7296, 8288
                    ]

                    tag Goto26 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8296, 8152
                    ]

                    tag From28 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8384
                    ]

                    tag From23 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8336
                    ]

                    tag Goto34 {
                        value = "F3_CB9_BREAKER"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7408, 7800
                        hide_name = True
                    ]

                    tag Goto31 {
                        value = "F3_CB9_P_REACTIVE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7408, 7728
                        hide_name = True
                    ]

                    tag Goto33 {
                        value = "F3_CB9_FREQUENCY"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7408, 7776
                        hide_name = True
                    ]

                    tag Goto30 {
                        value = "F3_CB9_P_REAL"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7408, 7704
                        hide_name = True
                    ]

                    tag Goto32 {
                        value = "F3_CB9_VOLTAGE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7408, 7752
                        hide_name = True
                    ]

                    junction Junction51 sp
                    [
                        position = 8720, 8056
                    ]

                    junction Junction100 sp
                    [
                        position = 8536, 8192
                    ]

                    junction Junction101 sp
                    [
                        position = 8536, 8280
                    ]

                    junction Junction104 sp
                    [
                        position = 9016, 7800
                    ]

                    junction Junction105 sp
                    [
                        position = 9584, 8056
                    ]

                    junction Junction106 sp
                    [
                        position = 7368, 8624
                    ]

                    junction Junction108 sp
                    [
                        position = 6688, 8248
                    ]

                    junction Junction109 sp
                    [
                        position = 6696, 8032
                    ]

                    junction Junction110 sp
                    [
                        position = 7304, 8240
                    ]

                    junction Junction111 sp
                    [
                        position = 6640, 7816
                    ]

                    junction Junction112 sp
                    [
                        position = 6640, 7888
                    ]

                    junction Junction113 sp
                    [
                        position = 6640, 7960
                    ]

                    junction Junction114 sp
                    [
                        position = 7088, 7984
                    ]

                    junction Junction115 sp
                    [
                        position = 7104, 8000
                    ]

                    junction Junction116 sp
                    [
                        position = 7120, 8016
                    ]

                    junction Junction117 sp
                    [
                        position = 7216, 8032
                    ]

                    junction Junction118 sp
                    [
                        position = 7232, 8048
                    ]

                    junction Junction119 sp
                    [
                        position = 7248, 8064
                    ]

                    junction Junction120 sp
                    [
                        position = 8536, 8368
                    ]

                    junction Junction121 sp
                    [
                        position = 8536, 8456
                    ]

                    junction Junction122 sp
                    [
                        position = 8216, 8192
                    ]

                    junction Junction123 sp
                    [
                        position = 7264, 8176
                    ]

                    junction Junction124 sp
                    [
                        position = 7272, 8192
                    ]

                    junction Junction125 sp
                    [
                        position = 7160, 8032
                    ]

                    junction Junction126 sp
                    [
                        position = 7320, 8240
                    ]

                    junction Junction127 sp
                    [
                        position = 7336, 8624
                    ]

                    junction Junction128 sp
                    [
                        position = 7264, 7704
                    ]

                    junction Junction129 sp
                    [
                        position = 7272, 7728
                    ]

                    comment Comment4 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Status</p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8256
                    ]

                    comment Comment2 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52A</p></body></html> ENDCOMMENT 
                    [
                        position = 7400, 8568
                    ]

                    comment Comment5 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">pf_states </p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8400
                    ]

                    comment Comment3 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52B</p></body></html> ENDCOMMENT 
                    [
                        position = 7432, 8720
                    ]

                    connect "Bus Join1.in21" "CALC FROM MEASUREMENTS.pf" as Connection149
                    connect "Bus Join1.in20" "CALC FROM MEASUREMENTS.S" as Connection144
                    connect "Bus Join1.in3" "CALC FROM MEASUREMENTS.Ib_phase" as Connection132
                    connect "Bus Join1.in5" "CALC FROM MEASUREMENTS.Ic_phase" as Connection133
                    connect "Bus Join1.in17" "CALC FROM MEASUREMENTS.Vc_phase" as Connection140
                    connect "Bus Join1.in13" "CALC FROM MEASUREMENTS.Va_phase" as Connection134
                    connect "Bus Join1.in15" "CALC FROM MEASUREMENTS.Vb_phase" as Connection135
                    connect "Bus Join1.in6" Junction114 as Connection268
                    connect "Bus Join1.in9" Junction117 as Connection283
                    connect "Bus Join1.in10" Junction118 as Connection286
                    connect "Bus Join1.in18" Junction123 as Connection382
                    connect "Bus Join1.in19" Junction124 as Connection385
                    connect "Bus Join1.in22" Junction126 as Connection391
                    connect "CALC FROM MEASUREMENTS.Ib_mag" "Bus Join1.in2" as Connection6
                    connect "CALC FROM MEASUREMENTS.Ic_mag" "Bus Join1.in4" as Connection2
                    connect "CALC FROM MEASUREMENTS.Ia_mag" "Bus Join1.in" as Connection5
                    connect "CALC FROM MEASUREMENTS.Ia_phase" "Bus Join1.in1" as Connection131
                    connect "CALC FROM MEASUREMENTS.Vc_mag" "Bus Join1.in16" as Connection4
                    connect "CALC FROM MEASUREMENTS.Va_mag" "Bus Join1.in12" as Connection3
                    connect "CALC FROM MEASUREMENTS.Vb_mag" "Bus Join1.in14" as Connection1
                    connect "CALC FROM MEASUREMENTS.line_freq" Goto10 as Connection224
                    connect "CALC FROM MEASUREMENTS.line_wt" Goto13 as Connection245
                    connect "CALC FROM MEASUREMENTS.Vline_a" Junction108 as Connection217
                    connect "CALC FROM MEASUREMENTS.Va" Junction109 as Connection218
                    connect "CALC FROM MEASUREMENTS.Ia" Junction111 as Connection257
                    connect "CALC FROM MEASUREMENTS.Ib" Junction112 as Connection256
                    connect "CALC FROM MEASUREMENTS.Ic" Junction113 as Connection258
                    connect "CALC FROM MEASUREMENTS.Ib_rms" Junction115 as Connection271
                    connect "CALC FROM MEASUREMENTS.Ic_rms" Junction116 as Connection274
                    connect "CALC FROM MEASUREMENTS.Vc_rms" Junction119 as Connection289
                    connect "Control Panel Input1.out" Junction122 as Connection381
                    connect From1 Sum1.in as Connection167
                    connect From10 bitwise_faults.R50 as Connection197
                    connect From11 bitwise_faults.R27 as Connection195
                    connect From12 bitwise_faults.R51 as Connection199
                    connect From13 bitwise_faults.Reset as Connection210
                    connect From14 "Relay 25-Sync Check1.Va" as Connection219
                    connect From15 "Relay 25-Sync Check1.Vline_a" as Connection220
                    connect From16 "Relay 25-Sync Check1.line_freq" as Connection225
                    connect From17 "Relay 25-Sync Check1.bus_freq" as Connection238
                    connect From18 "Relay 25-Sync Check1.bus_wt" as Connection244
                    connect From19 "Relay 25-Sync Check1.line_wt" as Connection246
                    connect From2 Gain1.in as Connection168
                    connect From20 R50512761.Iinst_a as Connection336
                    connect From21 R50512761.Iinst_b as Connection337
                    connect From22 R50512761.Iinst_c as Connection338
                    connect From23 R50512761.Irms_b as Connection340
                    connect From24 R50512761.Irms_a as Connection339
                    connect From25 R50512761.Irms_c as Connection341
                    connect From26 R50512761.Vrms_c as Connection344
                    connect From27 R50512761.Vrms_b as Connection343
                    connect From28 R50512761.Vrms_a as Connection342
                    connect From29 "State Condition Mng.op_mode" as Connection309
                    connect From3 Gain4.in as Connection169
                    connect From30 "pf bitwise.exp_imp" as Connection313
                    connect From31 "pf bitwise.lag_lead" as Connection312
                    connect From32 "State Condition Mng.enable" as Connection318
                    connect From33 "State Condition Mng.initial_condition" as Connection319
                    connect From34 "Relay 25-Sync Check1.relay_paramR25" as Connection320
                    connect From35 R50512761.relay_param as Connection321
                    connect From36 R50512761.Reset as Connection335
                    connect From37 "Relay 25-Sync Check1.mode_in" as Connection334
                    connect From4 Gain5.in as Connection171
                    connect From5 Gain6.in as Connection173
                    connect From7 bitwise_faults.Status as Connection203
                    connect From8 bitwise_faults.R59 as Connection201
                    connect From9 bitwise_faults.R25 as Connection193
                    connect Gain1.out Sum1.in1 as Connection21
                    connect Gain4.out Sum1.in2 as Connection170
                    connect Gain5.out Sum1.in3 as Connection172
                    connect Gain6.out Sum1.in4 as Connection174
                    connect Gain7.out Sum3.in1 as Connection180
                    connect Gain8.in Junction106 as Connection186
                    connect Gain8.out Sum3.in2 as Connection183
                    connect Goto1 Junction100 as Connection152
                    connect Goto11 Junction110 as Connection242
                    connect Goto12 "CALC FROM MEASUREMENTS.bus_wt" as Connection243
                    connect Goto14 Junction111 as Connection249
                    connect Goto15 Junction112 as Connection252
                    connect Goto16 Junction113 as Connection255
                    connect Goto17 Junction115 as Connection273
                    connect Goto19 Junction116 as Connection276
                    connect Goto2 Junction101 as Connection155
                    connect Goto22 Junction119 as Connection367
                    connect Goto23 Relay_Param.op_mode as Connection329
                    connect Goto24 "CALC FROM MEASUREMENTS.Lag Lead" as Connection310
                    connect Goto25 "CALC FROM MEASUREMENTS.Export Import" as Connection311
                    connect Goto27 Relay_Param.Initial_condition as Connection331
                    connect Goto28 Relay_Param.relay_param as Connection333
                    connect Goto29 Relay_Param.relay_paramR25 as Connection332
                    connect Goto30 Junction128 as Connection399
                    connect Goto31 Junction129 as Connection402
                    connect Goto32 normalize.out as Connection397
                    connect Goto33 Junction126 as Connection393
                    connect Goto34 Junction127 as Connection396
                    connect Goto4 Junction121 as Connection298
                    connect Goto5 Junction104 as Connection164
                    connect Goto6 Junction105 as Connection178
                    connect Goto7 Relay_Param.reset as Connection330
                    connect Goto8 Junction108 as Connection213
                    connect Goto9 Junction109 as Connection216
                    connect Ia Junction111 as Connection247
                    connect Ib Junction112 as Connection250
                    connect Ic Junction113 as Connection253
                    connect Junction100 "Logical operator1.in" as Connection196
                    connect Junction101 "Logical operator1.in1" as Connection198
                    connect Junction101 R50512761.trip_51 as Connection154
                    connect Junction104 "State Condition Mng.R25" as Connection303
                    connect Junction105 "Unit Delay4.out" as Connection202
                    connect Junction106 not.in as Connection185
                    connect Junction110 "CALC FROM MEASUREMENTS.bus_freq" as Connection241
                    connect Junction114 "CALC FROM MEASUREMENTS.Ia_rms" as Connection269
                    connect Junction114 Goto18 as Connection355
                    connect Junction115 "Bus Join1.in7" as Connection272
                    connect Junction116 "Bus Join1.in8" as Connection275
                    connect Junction117 Goto21 as Connection365
                    connect Junction117 Junction125 as Connection388
                    connect Junction118 "CALC FROM MEASUREMENTS.Vb_rms" as Connection287
                    connect Junction118 Goto20 as Connection366
                    connect Junction119 "Bus Join1.in11" as Connection290
                    connect Junction120 Goto3 as Connection296
                    connect Junction121 R50512761.trip_59 as Connection299
                    connect Junction122 Goto26 as Connection380
                    connect Junction123 "CALC FROM MEASUREMENTS.P" as Connection383
                    connect Junction124 "CALC FROM MEASUREMENTS.Q" as Connection386
                    connect Junction125 "CALC FROM MEASUREMENTS.Va_rms" as Connection389
                    connect Junction126 Junction110 as Connection392
                    connect Junction127 Junction106 as Connection395
                    connect Junction128 Junction123 as Connection400
                    connect Junction129 Junction124 as Connection403
                    connect Junction51 "State Condition Mng.Trip_in" as Connection302
                    connect "Logical operator1.in2" Junction120 as Connection297
                    connect "Logical operator1.in3" Junction121 as Connection300
                    connect "Logical operator1.out" Junction51 as Connection79
                    connect OUTPUT Junction105 as Connection176
                    connect P.in Junction128 as Connection401
                    connect Q.in Junction129 as Connection404
                    connect R50512761.trip_50 Junction100 as Connection150
                    connect R50512761.trip_27 Junction120 as Connection295
                    connect R50512761.Enable Junction122 as Connection379
                    connect "Relay 25-Sync Check1.bool_R25" Junction104 as Connection162
                    connect "Relay 25-Sync Check1.trip_or" Junction51 as Connection94
                    connect Sum3.in From6 as Connection179
                    connect Sum3.out "Unit Delay5.in" as Connection190
                    connect TO_MODBUS "Bus Join1.out" as Connection101
                    connect "Unit Delay2.out" "Bus Join1.in23" as Connection175
                    connect "Unit Delay2.in" Sum1.out as Connection104
                    connect "Unit Delay4.in" "State Condition Mng.trip_out" as Connection304
                    connect "Unit Delay5.out" "Bus Join1.in24" as Connection191
                    connect Va Junction109 as Connection214
                    connect Vb "CALC FROM MEASUREMENTS.Vb" as Connection108
                    connect Vc "CALC FROM MEASUREMENTS.Vc" as Connection109
                    connect Vline_a Junction108 as Connection211
                    connect Vline_b "CALC FROM MEASUREMENTS.Vline_b" as Connection111
                    connect Vline_c "CALC FROM MEASUREMENTS.Vline_c" as Connection112
                    connect cb_state Junction127 as Connection394
                    connect faults_status bitwise_faults.fault_status as Connection368
                    connect from_Modbus Relay_Param.from_Modbus as Connection328
                    connect normalize.in Junction125 as Connection398
                    connect not.out Gain7.in as Connection181
                    connect "pf bitwise.pf_states" pf_states as Connection369

                    CT_primary = "3500"
                    R27P_R59P_tripDelay = "2"
                    R27P_pickup1 = "0.7"
                    R27P_pickup2 = "0.5"
                    R50P_tripDelay2 = "0"
                    R51P_curveType2 = "1"
                    R51P_pickup1 = "2.47"
                    R51P_pickup2 = "2.47"
                    R51P_timeDial2 = "1"
                    R59P_pickup1 = "1.2"
                    R59P_pickup2 = "1.2"
                    VRMSLL = "480"
                    dV_threshold = "10"

                    mask {
                        description = "This block implements the relay SEL 787 with protective functions 25 (synchronism check), 27 (Under Voltage), 50 (Instantaneous Overcurrent), 51 (Time Overcurrent) and 59 (Overvoltage). 

he relay outputs to Modbus are: 0 - Ia_mag; 1 - Ia_phase; 2 - Ib_mag; 3 - Ib_phase; 4 - Ic_mag; 5 - Ic_phase; 6 - Ia_rms; 7 - Ib_rms; 8 - Ic_rms; 9 - Va_rms; 10 - Vb_rms; 11 - Vc_rms; 12 - Va_mag; 13 - Va_phase; 14 - Vb_mag; 15 - Vb_phase; 16 - Vc_mag; 17 - Vc_phase; 18 - P; 19 - Q; 20 - S; 21 - pf; 22 - Bus_freq; 23 - protection functions status; 24 - Circuit Breaker status.

he relay inputs from Modbus are: 2001 - op_mode; 2002 - Reset; 2003 - protection_mode.

he trip pickups for functions 50 and 51 are defined as currents in the secondary of the current transformer. The secondary ot the CT has 5 turns."

                        VRMSLL {
                            label = "Line to Line RMS voltage"
                            widget = edit
                            type = generic
                            default_value = "13800.0"
                            unit = "V"
                            group = "Base Parameters"
                        }

                        dV_threshold {
                            label = "Voltage deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "5.0"
                            unit = "%"
                            group = "Base Parameters"
                        }

                        angle_threshold {
                            label = "Angle deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "12.0"
                            unit = "degree"
                            group = "Base Parameters"
                        }

                        dF_threshold {
                            label = "Frequency deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Hz"
                            group = "Base Parameters"
                        }

                        R27P_R59P_tripDelay {
                            label = "R27 UV and R59 OV trip delay"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Sec"
                            group = "Base Parameters"
                        }

                        CT_primary {
                            label = "CT primary turns number"
                            widget = edit
                            type = generic
                            default_value = "600"
                            group = "Base Parameters"
                        }

                        Initial_status {
                            label = "Initial relay status"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "Base Parameters"
                        }

                        R50P_pickup1 {
                            label = "R50 IOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R50P_tripDelay1 {
                            label = "R50 IOC trip delay 1"
                            widget = edit
                            type = generic
                            default_value = "0"
                            unit = "sec"
                            group = "GridTied Parameters"
                        }

                        R51P_pickup1 {
                            label = "R51 TOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.8"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R51P_curveType1 {
                            label = "R51 TOC curve type 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R51P_timeDial1 {
                            label = "R51 TOC time dial 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R27P_pickup1 {
                            label = "R27 UV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R59P_pickup1 {
                            label = "R59 OV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R50P_pickup2 {
                            label = "R50 IOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R50P_tripDelay2 {
                            label = "R50 IOC trip delay 2"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            unit = "sec"
                            group = "Islanded Parameters"
                        }

                        R51P_pickup2 {
                            label = "R51 TOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.7"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R51P_curveType2 {
                            label = "R51 TOC curve type 2"
                            widget = edit
                            type = generic
                            default_value = "2.0"
                            group = "Islanded Parameters"
                        }

                        R51P_timeDial2 {
                            label = "R51 TOC time dial 2"
                            widget = edit
                            type = generic
                            default_value = "3.0"
                            group = "Islanded Parameters"
                        }

                        R27P_pickup2 {
                            label = "R27 UV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        R59P_pickup2 {
                            label = "R59 OV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE
                    }
                }
                [
                    position = 7952, 8168
                    size = 152, 240
                ]

                port Brk_cmd {
                    label = "Brk_cmd"
                    position = bottom:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7792, 8496
                    rotation = right
                ]

                port IABC {
                    label = "IABC"
                    position = right:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7792, 7928
                ]

                port VABC_load {
                    label = "VABC_load"
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7536, 7928
                ]

                port VABC_grid {
                    label = "VABC_grid"
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7656, 7928
                ]

                junction Junction1391 sp
                [
                    position = 8120, 7928
                ]

                junction Junction1392 sp
                [
                    position = 8120, 7976
                ]

                junction Junction1393 sp
                [
                    position = 7952, 8344
                ]

                junction Junction1396 sp
                [
                    position = 7792, 8448
                ]

                junction Junction1397 sp
                [
                    position = 7648, 8344
                ]

                comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset the relay when input is 1</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Operation Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 1 force the breaker closed</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 0 turns on logic based operation</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Protection Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 1 use islanded parameters</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 0 use grid tied parameters</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                [
                    position = 7968, 8328
                ]

                connect Brk_cmd Junction1396 as Connection899
                connect "Bus Split1.in" IABC as Connection907
                connect "Bus Split1.out" SEL_787.Ia as Connection908
                connect "Bus Split1.out2" SEL_787.Ic as Connection910
                connect "Bus Split1.out1" SEL_787.Ib as Connection909
                connect "Bus Split2.out2" SEL_787.Vc as Connection914
                connect "Bus Split2.out" SEL_787.Va as Connection912
                connect "Bus Split2.out1" SEL_787.Vb as Connection913
                connect "Bus Split3.out1" SEL_787.Vline_b as Connection929
                connect "Bus Split3.out" SEL_787.Vline_a as Connection928
                connect "Bus Split3.out2" SEL_787.Vline_c as Connection930
                connect CB_state.in Junction1397 as Connection905
                connect Constant2.out "Signal switch1.in1" as Connection880
                connect Delay1.out "Signal switch1.in" as Connection2
                connect Junction1391 Constant1.out as Connection852
                connect Junction1391 "ModBus Device1.coil_in" as Connection313
                connect Junction1392 Junction1391 as Connection314
                connect Junction1393 Delay1.in as Connection867
                connect Junction1396 "Signal switch1.out" as Connection902
                connect Junction1397 Junction1396 as Connection904
                connect "ModBus Device1.discrete_in" Junction1392 as Connection467
                connect "ModBus Device1.holding_in" Junction1392 as Connection466
                connect "ModBus Device1.holding_out" SEL_787.from_Modbus as Connection932
                connect "ModBus Device1.coil_out" Term3.in as Connection854
                connect SEL_787.OUTPUT Junction1393 as Connection868
                connect SEL_787.cb_state Junction1397 as Connection903
                connect SEL_787.TO_MODBUS "ModBus Device1.reg_in" as Connection931
                connect SEL_787.pf_states Term4.in as Connection897
                connect "Signal switch1.in2" Junction1393 as Connection866
                connect Term5.in SEL_787.faults_status as Connection870
                connect VABC_grid "Bus Split2.in" as Connection934
                connect VABC_load "Bus Split3.in" as Connection933
            }
            [
                position = 8000, 8200
                rotation = left
                size = 136, 72
            ]

            component Subsystem Brk {
                layout = dynamic
                component "core/Triple Pole Single Throw Contactor" S1 {
                    ctrl_src = "Model"
                }
                [
                    position = 8104, 8184
                    rotation = right
                ]

                port C {
                    position = left:1
                    kind = pe
                }
                [
                    position = 8200, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 8104, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port A {
                    position = left:3
                    kind = pe
                }
                [
                    position = 8008, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port c {
                    position = right:1
                    kind = pe
                }
                [
                    position = 8200, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port b {
                    position = right:2
                    kind = pe
                }
                [
                    position = 8104, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port a {
                    position = right:3
                    kind = pe
                }
                [
                    position = 8008, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port control {
                    position = bottom:auto
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8320, 8184
                    scale = -1, 1
                ]

                connect A S1.c_in as Connection6
                connect B S1.b_in as Connection5
                connect S1.a_in C as Connection4
                connect S1.c_out a as Connection1
                connect S1.b_out b as Connection2
                connect S1.a_out c as Connection3
                connect control S1.ctrl_in as Connection7
            }
            [
                position = 8144, 8200
                rotation = right
                size = 64, 64
            ]

            component Subsystem Meas2 {
                layout = dynamic
                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7960, 8120
                    rotation = left
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8192
                    rotation = right
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8320
                    rotation = right
                ]

                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8256
                    rotation = right
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8192
                        rotation = right
                    ]

                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8192
                        rotation = right
                    ]

                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8192
                        rotation = right
                    ]

                    port P1 {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port P2 {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port P3 {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port P4 {
                        position = bottom:1
                        kind = pe
                    }
                    [
                        position = 8136, 8272
                        rotation = left
                    ]

                    port P5 {
                        position = bottom:2
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    port P6 {
                        position = bottom:3
                        kind = pe
                    }
                    [
                        position = 8248, 8272
                        rotation = left
                    ]

                    connect R1.p_node P1 as Connection1
                    connect R1.n_node P4 as Connection3
                    connect R2.p_node P2 as Connection6
                    connect R2.n_node P5 as Connection4
                    connect R3.p_node P3 as Connection2
                    connect R3.n_node P6 as Connection5
                }
                [
                    position = 7488, 8232
                    size = 64, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7400, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7400, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7400, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7960, 8064
                    rotation = left
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1470 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1471 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1472 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1473 pe
                [
                    position = 7504, 8432
                ]

                junction Junction1474 pe
                [
                    position = 7488, 8432
                ]

                junction Junction1475 pe
                [
                    position = 7568, 8432
                ]

                junction Junction1476 pe
                [
                    position = 7504, 8120
                ]

                junction Junction1477 pe
                [
                    position = 7488, 8024
                ]

                junction Junction1478 pe
                [
                    position = 7472, 7928
                ]

                connect A Junction1478 as Connection414
                connect B Junction1477 as Connection411
                connect C Junction1476 as Connection408
                connect Junction1470 VA.p_node as Connection389
                connect Junction1471 b as Connection392
                connect Junction1472 VC.p_node as Connection395
                connect Junction1473 Junction1474 as Connection404
                connect Junction1473 Junction1475 as Connection407
                connect Junction1474 res_for_meas.P5 as Connection403
                [
                    breakpoints = 7488, 8432; 7488, 8312
                ]
                connect Junction1475 Junction1421 as Connection406
                [
                    breakpoints = 7648, 8432
                ]
                connect Junction1476 Junction1472 as Connection409
                connect Junction1477 Junction1471 as Connection412
                connect Junction1478 Junction1470 as Connection415
                connect V "Bus Join1.out" as Connection385
                connect VA.out "Bus Join1.in" as Connection397
                connect VA.n_node Junction1421 as Connection237
                connect VB.out "Bus Join1.in1" as Connection398
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1471 as Connection391
                connect VC.out "Bus Join1.in2" as Connection399
                connect VC.n_node Junction1475 as Connection405
                connect a Junction1470 as Connection388
                connect c Junction1472 as Connection394
                connect res_for_meas.P6 Junction1473 as Connection402
                connect res_for_meas.P4 Junction1474 as Connection401
                [
                    breakpoints = 7472, 8312
                ]
                connect res_for_meas.P3 Junction1476 as Connection410
                connect res_for_meas.P2 Junction1477 as Connection413
                connect res_for_meas.P1 Junction1478 as Connection416
            }
            [
                position = 8144, 8304
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            component Subsystem Meas1 {
                layout = dynamic
                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8288
                    rotation = right
                ]

                component "core/Current Measurement" IB {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7432, 8024
                ]

                component "core/Current Measurement" IA {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7368, 7928
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8224
                    rotation = right
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8352
                    rotation = right
                ]

                component "core/Current Measurement" IC {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7496, 8120
                ]

                component gen_bus_join "Bus Join2" {
                    inputs = "3"
                }
                [
                    position = 7576, 7784
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7936, 8168
                    rotation = left
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8192
                        rotation = right
                    ]

                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8192
                        rotation = right
                    ]

                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8192
                        rotation = right
                    ]

                    port P1 {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port P2 {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port P3 {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port P4 {
                        position = bottom:1
                        kind = pe
                    }
                    [
                        position = 8136, 8272
                        rotation = left
                    ]

                    port P5 {
                        position = bottom:2
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    port P6 {
                        position = bottom:3
                        kind = pe
                    }
                    [
                        position = 8248, 8272
                        rotation = left
                    ]

                    connect R1.p_node P1 as Connection1
                    connect R1.n_node P4 as Connection3
                    connect R2.p_node P2 as Connection6
                    connect R2.n_node P5 as Connection4
                    connect R3.p_node P3 as Connection2
                    connect R3.n_node P6 as Connection5
                }
                [
                    position = 7328, 8232
                    size = 64, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7240, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7240, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7240, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7936, 8112
                    rotation = left
                ]

                port I {
                    position = top:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7648, 7784
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1466 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1467 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1468 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1473 pe
                [
                    position = 7344, 8432
                ]

                junction Junction1474 pe
                [
                    position = 7328, 8432
                ]

                junction Junction1475 pe
                [
                    position = 7568, 8432
                ]

                junction Junction1476 pe
                [
                    position = 7344, 8120
                ]

                junction Junction1477 pe
                [
                    position = 7328, 8024
                ]

                junction Junction1478 pe
                [
                    position = 7312, 7928
                ]

                connect A Junction1478 as Connection414
                connect B Junction1477 as Connection411
                connect "Bus Join1.in1" VB.out as Connection387
                connect "Bus Join1.in2" VC.out as Connection388
                connect "Bus Join2.out" I as Connection393
                connect "Bus Join2.in1" IB.out as Connection391
                connect "Bus Join2.in2" IC.out as Connection392
                connect C Junction1476 as Connection408
                connect IA.out "Bus Join2.in" as Connection390
                connect IA.n_node Junction1466 as Connection377
                connect Junction1466 a as Connection299
                connect Junction1467 IB.n_node as Connection375
                connect Junction1467 b as Connection301
                connect Junction1468 IC.n_node as Connection376
                connect Junction1468 c as Connection302
                connect Junction1473 Junction1474 as Connection404
                connect Junction1473 Junction1475 as Connection407
                connect Junction1474 res_for_meas.P5 as Connection403
                [
                    breakpoints = 7328, 8432; 7328, 8312
                ]
                connect Junction1475 Junction1421 as Connection417
                [
                    breakpoints = 7568, 8432; 7648, 8432
                ]
                connect Junction1475 VC.n_node as Connection406
                connect Junction1476 IC.p_node as Connection409
                connect Junction1477 IB.p_node as Connection412
                connect Junction1478 IA.p_node as Connection415
                connect V "Bus Join1.out" as Connection385
                connect V "Bus Join1.out" as Connection389
                connect VA.out "Bus Join1.in" as Connection386
                connect VA.n_node Junction1421 as Connection237
                connect VA.p_node Junction1466 as Connection240
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1467 as Connection243
                connect VC.p_node Junction1468 as Connection246
                connect res_for_meas.P6 Junction1473 as Connection402
                connect res_for_meas.P4 Junction1474 as Connection401
                [
                    breakpoints = 7312, 8312
                ]
                connect res_for_meas.P3 Junction1476 as Connection410
                connect res_for_meas.P2 Junction1477 as Connection413
                connect res_for_meas.P1 Junction1478 as Connection416
            }
            [
                position = 8144, 8096
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            port b {
                position = bottom:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 8432
                rotation = left
            ]

            port a {
                position = bottom:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 8472
                rotation = left
            ]

            port B {
                position = top:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 7976
                rotation = right
            ]

            port c {
                position = bottom:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8392
                rotation = left
            ]

            port A {
                position = top:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 7936
                rotation = right
            ]

            port C {
                position = top:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8016
                rotation = right
            ]

            connect A Meas1.A as Connection2624
            connect Brk.B Meas1.b as Connection2628
            connect Brk.c Meas2.C as Connection2630
            connect Brk.a Meas2.A as Connection2632
            connect C Meas1.C as Connection2626
            connect MID_Rly1.Brk_cmd Brk.control as Connection2604
            connect MID_Rly1.VABC_load Meas2.V as Connection2623
            connect Meas1.B B as Connection2625
            connect Meas1.a Brk.A as Connection2627
            connect Meas1.c Brk.C as Connection2629
            connect Meas1.I MID_Rly1.IABC as Connection2621
            connect Meas1.V MID_Rly1.VABC_grid as Connection2622
            connect Meas2.B Brk.b as Connection2631
            connect Meas2.a a as Connection2633
            [
                breakpoints = 8128, 8456
            ]
            connect b Meas2.b as Connection2634
            connect c Meas2.c as Connection2635
        }
        [
            position = 13096, 8760
            size = 80, 48
        ]

        component "core/Transmission Line" Feeder3_line3 {
            C_imperial = "[[0.00233, 0.00140, 0.00140], [0.00140, 0.00233, 0.00140], [0.00140, 0.00140, 0.00233]]"
            C_sequence_metric = "[[5.089e-7, 0.0, 0.0], [0.0, 5.089e-7, 0.0], [0.0, 0.0, 5.089e-7]]"
            Frequency = "sys_f"
            L_sequence_imperial = "L_cable13"
            L_sequence_metric = "[[0.0020, 0.0, 0.0], [0.0, 3.0953e-4, 0.0], [0.0, 0.0, 3.0953e-4]]"
            Length_metric = "1.6764"
            Length_miles = "l_F3L3"
            R_sequence_imperial = "R_cable13"
            R_sequence_metric = "[[1.1405, 0.0, 0.0], [0.0, 0.0749, 0.0], [0.0, 0.0, 0.0749]]"
            model_def = "Sequence"
        }
        [
            position = 12816, 8128
            rotation = left
            size = 256, 72
        ]

        component Subsystem "NG GENSET" {
            layout = dynamic
            component gen_terminator Termination1 {
            }
            [
                position = 8680, 8352
                hide_name = True
            ]

            component src_digital_input Starter {
                addr = "3"
                execution_rate = "Ts_gen"
            }
            [
                position = 8040, 8080
            ]

            component "core/Triple Pole Single Throw Contactor" NG_GCB {
                ctrl_src = "Model"
            }
            [
                position = 7928, 8504
                size = 64, 256
            ]

            component "core/Signal Controlled Voltage Source" Vfd {
                execution_rate = "Ts_gen"
            }
            [
                position = 8856, 8488
                rotation = right
                size = 64, 32
            ]

            component src_digital_input "Open GCB" {
                addr = "7"
                execution_rate = "Ts_gen"
            }
            [
                position = 7536, 8160
            ]

            component src_digital_input "Close GCB" {
                addr = "6"
                execution_rate = "Ts_gen"
            }
            [
                position = 7536, 8104
            ]

            component pas_resistor R66 {
                resistance = "1e3"
            }
            [
                position = 8824, 8712
                rotation = right
            ]

            component src_digital_input "Close MCB" {
                addr = "8"
                execution_rate = "Ts_gen"
            }
            [
                position = 7536, 8216
            ]

            component "core/Synchronous Machine with Wound Rotor" NG_Gen {
                Jm = "J_gen1"
                Llfd = "Llfd_prime_gen1"
                Llkd = "Llkd_gen1"
                Llkq = "Llkq_gen1"
                Lls = "Lls_gen1"
                Lmd = "Lmd_gen1"
                Lmq = "Lmq_gen1"
                Ns_div_Nfd = "1"
                Ns_div_Nkd = "1"
                Ns_div_Nkq = "1"
                Rf = "Rf_prime_gen1"
                Rkd = "Rkd_gen1"
                Rkq = "Rkq_gen1"
                Rs = "Rs_gen1"
                el_torque_out_addr = "8200"
                enb_sig_out = "True"
                enc_ppr = "58"
                execution_rate = "Ts_gen"
                friction_coeff = "F_gen1"
                load_src = "Model"
                me_speed_out_addr = "8202"
                pms = "pms"
                res_int_carr_f = "5000.0"
            }
            [
                position = 8560, 8504
                size = 176, 160
            ]

            component "core/Current Measurement" If {
            }
            [
                position = 8808, 8400
                scale = -1, 1
                size = 64, 32
            ]

            component "core/Voltage Measurement" Vfield {
            }
            [
                position = 8752, 8488
                rotation = right
                size = 64, 32
            ]

            component src_voltage V_noise_immunity {
                R2 = "0.1"
                param_set = ""
            }
            [
                position = 8760, 8712
                rotation = right
            ]

            component src_digital_input "Fuel signal off" {
                addr = "4"
                execution_rate = "Ts_gen"
                invert = "true"
            }
            [
                position = 8040, 8008
            ]

            component src_digital_input "Open MCB" {
                addr = "9"
                execution_rate = "Ts_gen"
            }
            [
                position = 7536, 8272
            ]

            component Subsystem Q_control_loop {
                layout = dynamic
                component gen_probe Delta_V_in {
                    addr = "17961"
                }
                [
                    position = 8264, 8136
                ]

                component sys_spc_marker "Core Marker3" {
                }
                [
                    position = 8032, 8112
                ]

                component gen_gain stability_gain {
                    gain = "0.2"
                }
                [
                    position = 8256, 8208
                ]

                component "core/Voltage Measurement" Delta_V {
                    addr = "1540"
                    bw_limit = "True"
                    execution_rate = "Ts_gen"
                    frequency = "2e3"
                    sig_output = "True"
                }
                [
                    position = 8112, 8208
                    rotation = right
                ]

                component "core/Externally Controlled Voltage Source" V_Delta_V {
                    ai_gain = "1"
                    ai_offset = "-0.342"
                    ai_pin_addr = "2"
                }
                [
                    position = 7960, 8208
                    rotation = right
                    size = 64, 48
                ]

                port Delta_V_out {
                    label = "Delta_V_out"
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8344, 8208
                ]

                junction Junction1322 pe
                [
                    position = 8032, 8168
                ]

                junction Junction1323 sp
                [
                    position = 8184, 8208
                ]

                comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Parameters for this external voltage source and gain are taken from: Mach_exc_gov......updated_starter_v2.tse</p></body></html> ENDCOMMENT 
                [
                    position = 7856, 7992
                ]

                connect "Core Marker3.node" Junction1322 as Connection1
                connect Delta_V_in.in Junction1323 as Connection11
                connect Delta_V_out stability_gain.out as Connection12
                connect Junction1322 Delta_V.p_node as Connection5
                connect Junction1323 Delta_V.out as Connection10
                connect V_Delta_V.n_node Delta_V.n_node as Connection6
                connect V_Delta_V.p_node Junction1322 as Connection7
                connect stability_gain.in Junction1323 as Connection13
            }
            [
                position = 9216, 8488
                scale = -1, 1
                size = 88, 48
            ]

            component Subsystem Exciter {
                layout = dynamic
                component src_constant Vpss {
                    execution_rate = "-1"
                    value = "[0]"
                }
                [
                    position = 8096, 8112
                ]

                component gen_gain Vt_to_Vtpu {
                    execution_rate = "-1"
                    gain = "1.0/Vb_gen2"
                }
                [
                    position = 7832, 8272
                ]

                component gen_sum Sum1 {
                }
                [
                    position = 8480, 8192
                ]

                component gen_digital_probe "Fuel off" {
                }
                [
                    position = 8144, 8392
                ]

                component src_scada_input Vref {
                    addr = "4294966780"
                    def_value = "1"
                    execution_rate = "Ts_gen"
                    max = "1000000.0"
                    min = "-1000000.0"
                    unit = "pu"
                }
                [
                    position = 7888, 8136
                ]

                component gen_gain Vfpu_to_Vf {
                    execution_rate = "-1"
                    gain = "[35.296]"
                }
                [
                    position = 8584, 8192
                ]

                component gen_DC1A_exciter "IEEE DC1A exciter1" {
                    Ka = "Ka_gen2"
                    Ke = "Ke_gen2"
                    Kf = "Kf_gen2"
                    Ta = "Ta_gen2"
                    Te = "Te_gen2"
                    Tf = "Tf_gen2"
                    Tr = "Tr_gen2"
                    VRmax = "Efmax_gen2"
                    VRmin = "Efmin_gen2"
                    initial_field_voltage = "Vf0_gen2"
                    initial_terminal_voltage = "Vt0_gen2"
                    start_time = "0"
                }
                [
                    position = 8240, 8184
                ]

                component gen_probe Vt_pu {
                    addr = "17962"
                    execution_rate = "-1"
                }
                [
                    position = 7928, 8344
                ]

                component sys_signal_switch "Signal switch1" {
                    threshold = "0.5"
                }
                [
                    position = 8120, 8248
                ]

                component gen_sum Sum5 {
                    execution_rate = "-1"
                }
                [
                    position = 7992, 8184
                ]

                component gen_probe Vf {
                    addr = "17949"
                    execution_rate = "-1"
                }
                [
                    position = 8584, 8128
                ]

                component src_scada_input Vf_stop {
                    execution_rate = "-1"
                    unit = "V"
                }
                [
                    position = 8400, 8112
                ]

                component Subsystem "PI control" {
                    layout = dynamic
                    component gen_integrator Integrator1 {
                        limit_lower = "[-5]"
                        limit_output = "True"
                        limit_upper = "[5]"
                        show_reset = "level"
                    }
                    [
                        position = 8192, 8240
                    ]

                    component gen_gain ki {
                        execution_rate = "-1"
                        gain = "[1.19]"
                    }
                    [
                        position = 8088, 8208
                    ]

                    component gen_sum Sum6 {
                        execution_rate = "-1"
                    }
                    [
                        position = 8304, 8192
                    ]

                    component gen_gain kp {
                        execution_rate = "-1"
                        gain = "[1.16]"
                    }
                    [
                        position = 8088, 8152
                    ]

                    port In {
                        label = "In"
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7968, 8152
                    ]

                    port Reset {
                        label = "Reset"
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7976, 8248
                    ]

                    port Out {
                        label = "Out"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8376, 8192
                    ]

                    junction Junction1 sp
                    [
                        position = 8016, 8152
                    ]

                    connect Integrator1.reset Reset as Connection1
                    connect Integrator1.out Sum6.in1 as Connection2
                    connect Junction1 In as Connection3
                    connect Sum6.out Out as Connection4
                    connect ki.out Integrator1.in as Connection5
                    connect ki.in Junction1 as Connection6
                    connect kp.in Junction1 as Connection7
                    connect kp.out Sum6.in as Connection8
                }
                [
                    position = 8376, 8200
                    size = 56, 64
                ]

                port Delta_V_in {
                    label = "Delta_V_in"
                    position = left:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7888, 8192
                ]

                port Vf_out {
                    label = "Vf_out"
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8672, 8192
                ]

                port Fuel_off {
                    label = "Reset"
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8048, 8328
                ]

                port Vt_in {
                    position = auto:auto
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7752, 8272
                ]

                junction Junction103 sp
                [
                    position = 7864, 8272
                ]

                junction Junction104 sp
                [
                    position = 8080, 8328
                ]

                junction Junction109 sp
                [
                    position = 8088, 8184
                ]

                junction Junction110 sp
                [
                    position = 8112, 8328
                ]

                junction Junction111 sp
                [
                    position = 8528, 8192
                ]

                connect "IEEE DC1A exciter1.field_voltage" "PI control.In" as Connection1
                connect Junction103 Vt_to_Vtpu.out as Connection2
                connect Junction104 Fuel_off as Connection3
                connect Junction104 Junction110 as Connection4
                connect Junction109 "IEEE DC1A exciter1.vref" as Connection5
                connect Junction110 "Fuel off.in" as Connection6
                connect Junction111 Sum1.out as Connection7
                connect "PI control.Reset" Junction110 as Connection8
                connect "Signal switch1.out" "IEEE DC1A exciter1.terminal_voltage" as Connection9
                connect "Signal switch1.in1" Junction103 as Connection10
                connect "Signal switch1.in2" Junction104 as Connection11
                connect "Signal switch1.in" Junction109 as Connection12
                connect Sum1.in1 "PI control.Out" as Connection13
                connect Sum1.in Vf_stop.out as Connection14
                connect Sum5.in1 Delta_V_in as Connection15
                connect Sum5.out Junction109 as Connection16
                connect Sum5.in Vref.out as Connection17
                connect Vf.in Junction111 as Connection18
                connect Vfpu_to_Vf.in Junction111 as Connection19
                connect Vfpu_to_Vf.out Vf_out as Connection20
                connect Vpss.out "IEEE DC1A exciter1.vpss" as Connection21
                connect Vt_in Vt_to_Vtpu.in as Connection23
                connect Vt_pu.in Junction103 as Connection22
            }
            [
                position = 8992, 8488
                scale = -1, 1
                size = 128, 96
            ]

            component Subsystem P_control_loop {
                layout = dynamic
                component "core/Voltage Measurement" Delta_w {
                    addr = "1538"
                    bw_limit = "True"
                    execution_rate = "Ts_gen"
                    frequency = "2e3"
                    sig_output = "True"
                }
                [
                    position = 8112, 8200
                    rotation = right
                ]

                component sys_spc_marker "Core Marker2" {
                }
                [
                    position = 8016, 8104
                ]

                component gen_probe Delta_w_in {
                    addr = "17944"
                }
                [
                    position = 8184, 8128
                ]

                component gen_gain Gain11 {
                    gain = "[0.2]"
                }
                [
                    position = 8224, 8200
                ]

                component "core/Externally Controlled Voltage Source" V_Delta_w_in {
                    ai_gain = "1"
                    ai_offset = "-0.342"
                }
                [
                    position = 7944, 8200
                    rotation = right
                    size = 64, 48
                ]

                port Delta_w_out {
                    label = "Delta_w_out"
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8304, 8200
                ]

                junction Junction1321 pe
                [
                    position = 8016, 8160
                ]

                junction Junction1324 sp
                [
                    position = 8152, 8200
                ]

                comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Parameters for this external voltage source and gain are taken from: Mach_exc_gov......updated_starter_v2.tse</p></body></html> ENDCOMMENT 
                [
                    position = 7832, 8008
                ]

                connect "Core Marker2.node" Junction1321 as Connection1
                connect Delta_w.p_node Junction1321 as Connection2
                connect Delta_w.out Junction1324 as Connection3
                connect Delta_w.n_node V_Delta_w_in.n_node as Connection4
                connect Gain11.out Delta_w_out as Connection5
                connect Gain11.in Junction1324 as Connection6
                connect Junction1321 V_Delta_w_in.p_node as Connection7
                connect Junction1324 Delta_w_in.in as Connection8
            }
            [
                position = 8168, 8168
                size = 96, 56
            ]

            component Subsystem Subsystem1 {
                layout = dynamic
                component gen_terminator Termination1 {
                }
                [
                    position = 8272, 8256
                    hide_name = True
                ]

                component gen_sr_ff "SR Flip Flop1" {
                }
                [
                    position = 8152, 8240
                ]

                component gen_logic_op "Logical operator2" {
                    operator = "NAND"
                }
                [
                    position = 8264, 8200
                    hide_name = True
                ]

                component src_constant Constant1 {
                    execution_rate = "-1"
                    value = "0"
                }
                [
                    position = 8064, 8272
                    hide_name = True
                ]

                component gen_logic_op "Logical operator1" {
                    operator = "NOT"
                }
                [
                    position = 8128, 8152
                    hide_name = True
                ]

                port "Fuel Signal OFF" {
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8000, 8152
                ]

                port Starter {
                    position = left:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7968, 8224
                ]

                port Reset {
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8368, 8200
                ]

                connect Constant1.out "SR Flip Flop1.r_in" as Connection140
                connect "Logical operator1.in" "Fuel Signal OFF" as Connection137
                connect "Logical operator1.out" "Logical operator2.in" as Connection133
                connect "Logical operator2.out" Reset as Connection135
                connect "SR Flip Flop1.out" "Logical operator2.in1" as Connection134
                connect "SR Flip Flop1.s_in" Starter as Connection136
                connect "SR Flip Flop1.out_n" Termination1.in as Connection141
            }
            [
                position = 8216, 8056
                size = 120, 64
            ]

            component Subsystem CB_control {
                layout = dynamic
                component gen_sr_ff "SR Flip Flop1" {
                }
                [
                    position = 7744, 8240
                ]

                component gen_logic_op "Logical operator1" {
                }
                [
                    position = 8136, 8240
                ]

                component gen_terminator Termination2 {
                }
                [
                    position = 7856, 8376
                ]

                component gen_terminator Termination1 {
                }
                [
                    position = 7824, 8256
                ]

                component gen_sr_ff "SR Flip Flop2" {
                }
                [
                    position = 7784, 8352
                ]

                port GCB_control {
                    label = "GCB_control"
                    position = right:2
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8000, 8264
                ]

                port MCB_control {
                    label = "MCB_control"
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8000, 8368
                ]

                port CB_status {
                    label = "CB_status"
                    position = top:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8216, 8240
                ]

                port Close_GCB {
                    label = "Close_GCB"
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7632, 8200
                ]

                port Open_GCB {
                    label = "Open_GCB"
                    position = left:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7632, 8248
                ]

                port Close_MCB {
                    label = "Close_MCB"
                    position = left:3
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7664, 8328
                ]

                port Open_MCB {
                    label = "Open_MCB"
                    position = left:4
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7664, 8376
                ]

                junction Junction1 sp
                [
                    position = 7960, 8232
                ]

                junction Junction2 sp
                [
                    position = 7960, 8344
                ]

                connect Close_GCB "SR Flip Flop1.s_in" as Connection1
                connect Close_MCB "SR Flip Flop2.s_in" as Connection2
                connect GCB_control Junction1 as Connection3
                connect Junction1 "Logical operator1.in" as Connection4
                connect Junction2 "Logical operator1.in1" as Connection5
                connect "Logical operator1.out" CB_status as Connection6
                connect MCB_control Junction2 as Connection7
                connect Open_GCB "SR Flip Flop1.r_in" as Connection8
                connect Open_MCB "SR Flip Flop2.r_in" as Connection9
                connect "SR Flip Flop1.out" Junction1 as Connection10
                connect "SR Flip Flop2.out" Junction2 as Connection11
                connect Termination1.in "SR Flip Flop1.out_n" as Connection12
                connect Termination2.in "SR Flip Flop2.out_n" as Connection13
            }
            [
                position = 7776, 8168
                size = 176, 96
            ]

            component Subsystem Governor_and_Diesel_Engine {
                layout = dynamic
                component src_scada_input Reset {
                    execution_rate = "-1"
                    unit = ""
                }
                [
                    position = 7728, 9232
                ]

                component gen_gain Gain4 {
                    gain = "0.2*0.020267"
                }
                [
                    position = 7640, 8608
                    hide_name = True
                ]

                component gen_gain Gain6 {
                    gain = "0.00473*3500.0"
                }
                [
                    position = 7640, 8656
                    hide_name = True
                ]

                component gen_product Product1 {
                }
                [
                    position = 7424, 8536
                    rotation = right
                ]

                component src_scada_input wref {
                    addr = "4294966776"
                    def_value = "1"
                    execution_rate = "Ts_gen"
                    max = "1000000.0"
                    min = "-1000000.0"
                    unit = ""
                }
                [
                    position = 7560, 8328
                ]

                component src_scada_input mfidot {
                    execution_rate = "Ts_gen"
                    unit = ""
                }
                [
                    position = 7512, 8568
                ]

                component gen_probe wmeas {
                    addr = "17960"
                    execution_rate = "-1"
                    signal_type = "angular speed"
                }
                [
                    position = 7696, 8440
                ]

                component gen_gain Gain3 {
                    gain = "2.75"
                }
                [
                    position = 7640, 8528
                    hide_name = True
                ]

                component gen_probe Boiler_heat_supply {
                }
                [
                    position = 8320, 9088
                ]

                component gen_probe Tmech_pu {
                    addr = "17963"
                }
                [
                    position = 8168, 8400
                ]

                component gen_gain "Tpu to T" {
                    gain = "[-21495]"
                }
                [
                    position = 8160, 8328
                ]

                component gen_probe CHP_heat_supply {
                }
                [
                    position = 8328, 9232
                ]

                component gen_gain "w to wpu" {
                    execution_rate = "-1"
                    gain = "1.0/wmb_gen1"
                }
                [
                    position = 7584, 8416
                    rotation = down
                    scale = -1, 1
                ]

                component gen_probe Tmech_SI {
                    addr = "17970"
                    execution_rate = "-1"
                }
                [
                    position = 8304, 8272
                ]

                component gen_sum Sum3 {
                    signs = "++-"
                }
                [
                    position = 7712, 8328
                ]

                component gen_gain Gain2 {
                    gain = "1.0/1.76"
                }
                [
                    position = 7640, 8568
                    hide_name = True
                ]

                component gen_bus_join "Bus Join3" {
                    inputs = "5"
                }
                [
                    position = 7312, 9080
                ]

                component gen_gain Gain1 {
                    gain = "1.0/0.000126"
                }
                [
                    position = 7576, 8568
                ]

                component src_scada_input SIMTempSetPoint_CHP {
                    execution_rate = "-1"
                    unit = ""
                }
                [
                    position = 7728, 9184
                ]

                component src_scada_input SIMEnable_CHP {
                    execution_rate = "-1"
                    unit = ""
                }
                [
                    position = 7728, 9136
                ]

                component gen_bus_split "Bus Split1" {
                }
                [
                    position = 7576, 9080
                ]

                component gen_bus_join "Bus Join2" {
                    inputs = "4"
                }
                [
                    position = 7768, 8592
                ]

                component src_scada_input Heat_Load {
                    execution_rate = "-1"
                    unit = ""
                }
                [
                    position = 7728, 8992
                ]

                component gen_probe Actual_Temp {
                }
                [
                    position = 8280, 8944
                ]

                component Subsystem CHP {
                    layout = dynamic
                    component gen_sum Sum2 {
                        signs = "+-"
                    }
                    [
                        position = 7984, 8368
                    ]

                    component gen_sum Sum1 {
                        signs = "+-+"
                    }
                    [
                        position = 8488, 8264
                    ]

                    component gen_transport_delay "Piping Transport Delay1" {
                        time_delay = "10"
                    }
                    [
                        position = 8032, 8176
                    ]

                    component tm_delay "Unit Delay2" {
                    }
                    [
                        position = 8192, 8368
                    ]

                    component sys_signal_switch "Signal switch1" {
                        threshold = "0.5"
                    }
                    [
                        position = 7840, 8176
                    ]

                    component sys_signal_switch "Signal switch3" {
                        threshold = "0.5"
                    }
                    [
                        position = 7856, 8360
                    ]

                    component tm_delay "Unit Delay1" {
                    }
                    [
                        position = 8384, 8176
                    ]

                    component src_constant CHP_heat_off {
                        execution_rate = "-1"
                        value = "0"
                    }
                    [
                        position = 7744, 8192
                    ]

                    component gen_integrator Integrator1 {
                        init_value = "20"
                        limit_output = "True"
                        show_reset = "level"
                    }
                    [
                        position = 8696, 8272
                    ]

                    component sys_signal_switch "Signal switch2" {
                        threshold = "0.5"
                    }
                    [
                        position = 7712, 8024
                    ]

                    component gen_gain Gain7 {
                        gain = "5.0/360.0"
                    }
                    [
                        position = 8592, 8264
                    ]

                    component src_scada_input SIMHIL {
                        execution_rate = "Ts_gen"
                        unit = ""
                    }
                    [
                        position = 7448, 7936
                    ]

                    component gen_pid_controller "PID controller1" {
                        controller_type = "PI"
                        enb_output_limit_out = "True"
                        ki = "0.01"
                        kp = "100"
                        lower_sat_lim = "0"
                        upper_sat_lim = "20"
                    }
                    [
                        position = 8080, 8368
                    ]

                    component gen_z_domain_transfer "Z Domain Transfer Function1" {
                        a_coeff = "[1.0,0.4754,0.2118]"
                        b_coeff = "[0.4218,0.8436,0.4218]"
                    }
                    [
                        position = 8264, 8176
                    ]

                    component "core/Rate Transition" "Rate Transition2" {
                        execution_rate = "Ts_gen"
                    }
                    [
                        position = 8144, 8176
                        size = 32, 32
                    ]

                    component "core/Rate Transition" "Rate Transition1" {
                        execution_rate = "Ts_gen"
                    }
                    [
                        position = 7920, 8176
                        size = 32, 32
                    ]

                    port Enable_CHP_Heat {
                        label = "Enable CHP heating"
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7544, 8008
                    ]

                    port SIM_enable_CHP {
                        label = "SIM Enable CHP"
                        position = left:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7608, 8040
                    ]

                    port Heat_recovery {
                        label = "Heat recovery"
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7608, 8160
                    ]

                    port Heat_load {
                        label = "Heat Load"
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8376, 8264
                    ]

                    port Temp_Setpoint_F {
                        label = "Tem Set Point deg F"
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7672, 8344
                    ]

                    port SIM_TempSetPoint {
                        label = "SIM Temp SetPoint"
                        position = left:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7760, 8376
                    ]

                    port CHP_reset {
                        label = "Reset"
                        position = left:7
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8608, 8320
                    ]

                    port CHP_heat_supplied {
                        label = "CHP heat supplied"
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8568, 8176
                    ]

                    port Boiler_Heat_Supplied {
                        label = "Boiler heat supplied"
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8520, 8368
                    ]

                    port "Temp Actual" {
                        label = "Temp actual"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8832, 8272
                    ]

                    tag Goto1 {
                        value = "F3_NGCHP_BOILER_Nm3/hr"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8208, 8448
                        hide_name = True
                    ]

                    tag Goto2 {
                        value = "F3_NGCHP_BOILER_CO2"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8208, 8480
                        hide_name = True
                    ]

                    junction Junction67 sp
                    [
                        position = 8752, 8272
                    ]

                    junction Junction68 sp
                    [
                        position = 8448, 8176
                    ]

                    junction Junction69 sp
                    [
                        position = 8448, 8368
                    ]

                    junction Junction70 sp
                    [
                        position = 7488, 7936
                    ]

                    junction Junction71 sp
                    [
                        position = 8144, 8368
                    ]

                    junction Junction72 sp
                    [
                        position = 8144, 8448
                    ]

                    connect Boiler_Heat_Supplied Junction69 as Connection385
                    connect CHP_heat_off.out "Signal switch1.in1" as Connection171
                    connect Gain7.in Sum1.out as Connection197
                    connect Goto1 Junction72 as Connection398
                    connect Goto2 Junction72 as Connection400
                    connect Integrator1.reset CHP_reset as Connection376
                    connect Integrator1.in Gain7.out as Connection355
                    connect Integrator1.out Junction67 as Connection363
                    connect Junction67 Sum2.in1 as Connection364
                    connect Junction67 "Temp Actual" as Connection372
                    connect Junction68 CHP_heat_supplied as Connection373
                    connect Junction68 Sum1.in as Connection367
                    connect Junction69 Sum1.in2 as Connection384
                    connect Junction70 "Signal switch2.in2" as Connection391
                    connect Junction71 "PID controller1.out" as Connection396
                    connect Junction72 Junction71 as Connection399
                    connect "PID controller1.in" Sum2.out as Connection190
                    connect "Piping Transport Delay1.in" "Rate Transition1.out" as Connection207
                    connect "Rate Transition1.in" "Signal switch1.out" as Connection208
                    connect "Rate Transition2.in" "Piping Transport Delay1.out" as Connection210
                    connect SIMHIL.out Junction70 as Connection390
                    connect "Signal switch1.in" Heat_recovery as Connection380
                    connect "Signal switch2.in" Enable_CHP_Heat as Connection371
                    connect "Signal switch2.in1" SIM_enable_CHP as Connection379
                    connect "Signal switch2.out" "Signal switch1.in2" as Connection353
                    connect "Signal switch3.in2" Junction70 as Connection392
                    connect "Signal switch3.in1" SIM_TempSetPoint as Connection378
                    connect "Signal switch3.in" Temp_Setpoint_F as Connection377
                    connect Sum1.in1 Heat_load as Connection375
                    connect Sum2.in "Signal switch3.out" as Connection189
                    connect "Unit Delay1.out" Junction68 as Connection366
                    connect "Unit Delay2.out" Junction69 as Connection383
                    connect "Unit Delay2.in" Junction71 as Connection395
                    connect "Z Domain Transfer Function1.in" "Rate Transition2.out" as Connection393
                    connect "Z Domain Transfer Function1.out" "Unit Delay1.in" as Connection394
                }
                [
                    position = 8032, 9088
                    size = 320, 336
                ]

                component Subsystem Modbus {
                    layout = dynamic
                    component src_constant Constant1 {
                        execution_rate = "Ts_gen"
                        value = "0"
                    }
                    [
                        position = 8016, 8160
                    ]

                    component gen_terminator Termination1 {
                    }
                    [
                        position = 8376, 8160
                    ]

                    component "core/ModBus Device" "ModBus Device1" {
                        configuration = "configCHP"
                        execution_rate = "Ts_gen"
                    }
                    [
                        position = 8208, 8232
                        hide_name = True
                        size = 184, 184
                    ]

                    port Reg_in {
                        label = "Reg_in"
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8000, 8304
                    ]

                    port Holding_out {
                        label = "Holding_out"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8376, 8304
                    ]

                    junction Junction67 sp
                    [
                        position = 8072, 8160
                    ]

                    junction Junction68 sp
                    [
                        position = 8072, 8208
                    ]

                    connect Constant1.out Junction67 as Connection337
                    connect Junction68 Junction67 as Connection341
                    connect "ModBus Device1.holding_out" Holding_out as Connection360
                    connect "ModBus Device1.coil_in" Junction67 as Connection358
                    connect "ModBus Device1.discrete_in" Junction68 as Connection340
                    connect "ModBus Device1.holding_in" Junction68 as Connection342
                    connect Reg_in "ModBus Device1.reg_in" as Connection361
                    connect Termination1.in "ModBus Device1.coil_out" as Connection359
                }
                [
                    position = 7448, 9080
                    size = 112, 104
                ]

                component Subsystem "Woodward DEGOV" {
                    layout = dynamic
                    component gen_logic_op "Logical operator1" {
                        operator = "NOT"
                    }
                    [
                        position = 8512, 8312
                    ]

                    component sys_signal_switch switch {
                        threshold = "0.5"
                    }
                    [
                        position = 8040, 8224
                    ]

                    component gen_transport_delay "Transport Delay1" {
                        init_value = "Pm0"
                        time_delay = "Td"
                    }
                    [
                        position = 8712, 8280
                    ]

                    component src_constant zero {
                        execution_rate = "-1"
                        value = "[0]"
                    }
                    [
                        position = 7680, 8224
                    ]

                    component gen_probe gridtied_pid_input {
                        addr = "17953"
                        signal_type = "angular speed"
                    }
                    [
                        position = 7904, 8120
                    ]

                    component gen_probe grid_contactor_on_ {
                        addr = "17941"
                        signal_type = "angular speed"
                    }
                    [
                        position = 7928, 8032
                    ]

                    component gen_pid_controller "standalone control" {
                        controller_type = "PD"
                        execution_rate = "-1"
                        kd = "0.67267/3.0"
                        kp = "0.11911/2.0"
                    }
                    [
                        position = 7856, 8344
                    ]

                    component gen_probe reset_integrator_governor {
                        addr = "17937"
                        signal_type = "angular speed"
                    }
                    [
                        position = 8496, 8392
                    ]

                    component gen_logic_op not {
                        operator = "NOT"
                    }
                    [
                        position = 7768, 8288
                    ]

                    component gen_integrator Integrator1 {
                        init_value = "Pm0"
                        limit_lower = "Tmin"
                        limit_output = "True"
                        limit_upper = "Tmax"
                        show_reset = "level"
                    }
                    [
                        position = 8504, 8232
                    ]

                    component gen_probe integrator_governor_processed_output {
                        addr = "17933"
                        signal_type = "angular speed"
                    }
                    [
                        position = 8744, 8200
                    ]

                    component gen_probe gridtied_pid_output {
                        addr = "17966"
                        signal_type = "angular speed"
                    }
                    [
                        position = 7968, 8160
                    ]

                    component gen_product Product1 {
                    }
                    [
                        position = 8608, 8280
                    ]

                    component gen_probe lead_lag_input {
                        addr = "17936"
                        signal_type = "angular speed"
                    }
                    [
                        position = 8152, 8168
                    ]

                    component gen_gain GainK {
                        gain = "K"
                    }
                    [
                        position = 8384, 8224
                    ]

                    component sys_signal_switch switch1 {
                        threshold = "0.5"
                    }
                    [
                        position = 7768, 8208
                    ]

                    component gen_z_domain_transfer T3 {
                        a_coeff = "denTF3d"
                        b_coeff = "numTF3d"
                    }
                    [
                        position = 8304, 8224
                    ]

                    component gen_z_domain_transfer T4 {
                        a_coeff = "denTF4d"
                        b_coeff = "numTF4d"
                    }
                    [
                        position = 8208, 8224
                    ]

                    component Subsystem "pid grid controller" {
                        layout = dynamic
                        component gen_sum Sum1 {
                        }
                        [
                            position = 8424, 8224
                        ]

                        component gen_integrator Integrator1 {
                            execution_rate = "-1"
                            init_value = "Pm0"
                            limit_lower = "Tmin"
                            limit_output = "True"
                            limit_upper = "Tmax"
                            show_reset = "level"
                        }
                        [
                            position = 8312, 8288
                        ]

                        component gen_pid_controller "grid-tied control" {
                            controller_type = "PD"
                            execution_rate = "-1"
                            filt_coef = "1.0/0.42"
                            kd = "-4.47"
                            ki = "134"
                            kp = "10.6"
                        }
                        [
                            position = 8296, 8192
                        ]

                        component gen_gain ki {
                            gain = "[134]"
                        }
                        [
                            position = 8232, 8280
                        ]

                        port reset_integrator {
                            label = "Reset"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8144, 8328
                        ]

                        port Out {
                            label = "Out"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8520, 8224
                        ]

                        port In {
                            label = "In"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8128, 8192
                        ]

                        junction Junction1 sp
                        [
                            position = 8200, 8192
                        ]

                        connect Integrator1.in ki.out as Connection1
                        connect Junction1 In as Connection2
                        connect Sum1.in1 Integrator1.out as Connection3
                        connect Sum1.out Out as Connection4
                        connect Sum1.in "grid-tied control.out" as Connection5
                        connect "grid-tied control.in" Junction1 as Connection6
                        connect ki.in Junction1 as Connection7
                        connect reset_integrator Integrator1.reset as Connection8
                    }
                    [
                        position = 7880, 8216
                        size = 80, 56
                    ]

                    port CB_Status {
                        label = "CB_status"
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7600, 8008
                    ]

                    port Reset {
                        label = "Reset"
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8280, 8344
                        rotation = left
                    ]

                    port Torque {
                        label = "Torque [pu]"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8808, 8280
                    ]

                    port Speed {
                        label = "Speed [pu]"
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7592, 8232
                    ]

                    junction Junction51 sp
                    [
                        position = 8464, 8312
                    ]

                    junction Junction52 sp
                    [
                        position = 7768, 8008
                    ]

                    junction Junction53 sp
                    [
                        position = 7640, 8232
                    ]

                    junction Junction55 sp
                    [
                        position = 8464, 8312
                    ]

                    junction Junction57 sp
                    [
                        position = 8656, 8280
                    ]

                    junction Junction58 sp
                    [
                        position = 7808, 8208
                    ]

                    junction Junction59 sp
                    [
                        position = 7936, 8208
                    ]

                    junction Junction60 sp
                    [
                        position = 7768, 8152
                    ]

                    junction Junction61 sp
                    [
                        position = 7872, 8008
                    ]

                    junction Junction62 sp
                    [
                        position = 8088, 8224
                    ]

                    connect GainK.out Integrator1.in as Connection1
                    connect Integrator1.reset Junction51 as Connection2
                    connect Integrator1.out Product1.in as Connection3
                    connect Junction51 Junction55 as Connection4
                    connect Junction51 Reset as Connection5
                    connect Junction52 CB_Status as Connection6
                    connect Junction52 Junction61 as Connection7
                    connect Junction53 Speed as Connection8
                    connect Junction55 "Logical operator1.in" as Connection9
                    connect Junction57 "Transport Delay1.in" as Connection10
                    connect Junction58 gridtied_pid_input.in as Connection11
                    connect Junction59 gridtied_pid_output.in as Connection12
                    connect Junction60 Junction52 as Connection13
                    connect Junction61 switch.in2 as Connection14
                    connect Junction62 switch.out as Connection54
                    [
                        breakpoints = 8088, 8224
                    ]
                    connect "Logical operator1.out" Product1.in1 as Connection16
                    connect Product1.out Junction57 as Connection17
                    connect T3.out GainK.in as Connection50
                    connect T3.in T4.out as Connection52
                    connect T4.in Junction62 as Connection55
                    connect "Transport Delay1.out" Torque as Connection20
                    connect grid_contactor_on_.in Junction61 as Connection21
                    connect integrator_governor_processed_output.in Junction57 as Connection22
                    connect lead_lag_input.in Junction62 as Connection53
                    connect not.in Junction60 as Connection24
                    connect not.out "pid grid controller.reset_integrator" as Connection25
                    connect "pid grid controller.In" Junction58 as Connection26
                    connect "pid grid controller.Out" Junction59 as Connection27
                    connect reset_integrator_governor.in Junction55 as Connection28
                    connect "standalone control.in" Junction53 as Connection29
                    connect switch.in Junction59 as Connection30
                    connect switch.in1 "standalone control.out" as Connection32
                    connect switch1.in Junction53 as Connection33
                    connect switch1.out Junction58 as Connection34
                    connect switch1.in2 Junction60 as Connection35
                    connect zero.out switch1.in1 as Connection36
                }
                [
                    position = 7976, 8328
                    size = 184, 80
                ]

                component Subsystem thermal_data {
                    layout = dynamic
                    component gen_probe Heat_rec {
                    }
                    [
                        position = 8368, 8216
                    ]

                    component gen_probe CO2 {
                    }
                    [
                        position = 8248, 8120
                    ]

                    component gen_probe NOx {
                    }
                    [
                        position = 8248, 8264
                    ]

                    component gen_bus_split "Bus Split1" {
                        outputs = "4"
                    }
                    [
                        position = 8136, 8296
                        rotation = left
                    ]

                    component gen_probe NG_fuel_use {
                    }
                    [
                        position = 8368, 8168
                    ]

                    port Thermal_Data {
                        label = "Thermal data"
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8024, 8336
                    ]

                    port Heat_rec1 {
                        label = "Heat_rec"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8352, 8272
                    ]

                    port NG_usage {
                        label = "NG_usage"
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8344, 8112
                    ]

                    port CO2out {
                        label = "CO2"
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8200, 8072
                    ]

                    junction Junction1 sp
                    [
                        position = 8288, 8216
                    ]

                    junction Junction2 sp
                    [
                        position = 8288, 8168
                    ]

                    junction Junction3 sp
                    [
                        position = 8136, 8120
                    ]

                    connect "Bus Split1.out2" Junction1 as Connection80
                    connect "Bus Split1.out1" Junction2 as Connection83
                    connect "Bus Split1.out" Junction3 as Connection86
                    connect "Bus Split1.out3" NOx.in as Connection70
                    connect "Bus Split1.in" Thermal_Data as Connection71
                    connect CO2out Junction3 as Connection88
                    connect Heat_rec1 Junction1 as Connection82
                    connect Junction1 Heat_rec.in as Connection81
                    connect Junction2 NG_fuel_use.in as Connection84
                    connect Junction3 CO2.in as Connection87
                    connect NG_usage Junction2 as Connection85
                }
                [
                    position = 6992, 9096
                    size = 168, 80
                ]

                port T_out {
                    label = "T_out"
                    position = right:2
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8240, 8352
                ]

                port Delta_w_in {
                    label = "Delta_w_in"
                    position = left:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7592, 8224
                ]

                port w_meas_in {
                    label = "w_meas_in"
                    position = left:3
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7512, 8416
                    rotation = down
                    scale = -1, 1
                ]

                port reset_integrator {
                    label = "Reset"
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7784, 8376
                ]

                port Contactor_status {
                    label = "CB_status"
                    position = top:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7784, 8280
                ]

                tag From14 {
                    value = "Thermal data"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6840, 9096
                    hide_name = True
                ]

                tag Goto1 {
                    value = "Thermal data"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7864, 8592
                    hide_name = True
                ]

                tag Goto2 {
                    value = "F3_NGCHP_HEAT_REC"
                    scope = global
                    kind = sp
                    direction = in
                }
                [
                    position = 7224, 9008
                    hide_name = True
                ]

                tag Goto3 {
                    value = "F3_NGCHP_FUEL_USE"
                    scope = global
                    kind = sp
                    direction = in
                }
                [
                    position = 7224, 9032
                    hide_name = True
                ]

                tag Goto4 {
                    value = "F3_NGCHP_CHP_CO2"
                    scope = global
                    kind = sp
                    direction = in
                }
                [
                    position = 7224, 9056
                    hide_name = True
                ]

                tag Goto5 {
                    value = "F3_NGCHP_BOILER_HEAT"
                    scope = global
                    kind = sp
                    direction = in
                }
                [
                    position = 8320, 9048
                    hide_name = True
                ]

                tag Goto6 {
                    value = "F3_NGCHP_CHP_HEAT"
                    scope = global
                    kind = sp
                    direction = in
                }
                [
                    position = 8328, 9184
                    hide_name = True
                ]

                tag Goto7 {
                    value = "F3_NGCHP_TEMP_ACT"
                    scope = global
                    kind = sp
                    direction = in
                }
                [
                    position = 8280, 8992
                    hide_name = True
                ]

                junction Junction6 sp
                [
                    position = 7608, 8568
                ]

                junction Junction7 sp
                [
                    position = 7608, 8568
                ]

                junction Junction50 sp
                [
                    position = 7616, 8416
                ]

                junction Junction63 sp
                [
                    position = 8120, 8328
                ]

                junction Junction64 sp
                [
                    position = 8200, 8328
                ]

                junction Junction65 sp
                [
                    position = 7616, 8416
                ]

                junction Junction66 sp
                [
                    position = 8120, 8328
                ]

                junction Junction69 sp
                [
                    position = 8264, 9232
                ]

                junction Junction70 sp
                [
                    position = 8224, 9088
                ]

                junction Junction71 sp
                [
                    position = 8240, 8944
                ]

                junction Junction72 sp
                [
                    position = 7128, 9080
                ]

                junction Junction73 sp
                [
                    position = 7136, 9096
                ]

                junction Junction74 sp
                [
                    position = 7144, 9112
                ]

                junction Junction75 sp
                [
                    position = 8224, 9088
                ]

                junction Junction76 sp
                [
                    position = 8264, 9232
                ]

                junction Junction77 sp
                [
                    position = 8216, 8944
                ]

                connect Boiler_heat_supply.in Junction70 as Connection448
                connect "Bus Join2.out" Goto1 as Connection304
                connect "Bus Join3.in1" Junction69 as Connection446
                connect "Bus Join3.in2" Junction70 as Connection450
                connect "Bus Join3.in" Junction71 as Connection461
                connect "Bus Join3.in4" Junction74 as Connection472
                connect "Bus Split1.out1" CHP.Enable_CHP_Heat as Connection465
                connect "Bus Split1.out" CHP.Temp_Setpoint_F as Connection464
                connect "CHP.Temp Actual" Junction77 as Connection481
                connect CHP_heat_supply.in Junction69 as Connection444
                connect Contactor_status "Woodward DEGOV.CB_Status" as Connection1
                connect Delta_w_in Sum3.in as Connection2
                connect Gain2.out "Bus Join2.in1" as Connection262
                connect Gain2.in Junction7 as Connection49
                connect Gain3.out "Bus Join2.in" as Connection260
                connect Gain3.in Junction6 as Connection46
                connect Gain4.out "Bus Join2.in2" as Connection259
                connect Gain4.in Junction7 as Connection51
                connect Gain6.out "Bus Join2.in3" as Connection313
                connect Goto2 Junction72 as Connection468
                connect Goto3 Junction73 as Connection471
                connect Goto4 Junction74 as Connection474
                connect Goto5 Junction75 as Connection477
                connect Goto6 Junction76 as Connection480
                connect Goto7 Junction77 as Connection483
                connect Heat_Load.out CHP.Heat_load as Connection353
                connect Junction50 Junction65 as Connection324
                connect Junction50 "w to wpu.out" as Connection3
                connect Junction50 wmeas.in as Connection302
                connect Junction6 Gain1.out as Connection47
                connect Junction63 "Tpu to T.in" as Connection4
                connect Junction63 "Woodward DEGOV.Torque" as Connection5
                connect Junction64 T_out as Connection6
                connect Junction64 Tmech_SI.in as Connection293
                connect Junction65 Sum3.in2 as Connection325
                connect Junction66 Junction63 as Connection328
                connect Junction69 Junction76 as Connection478
                connect Junction7 Junction6 as Connection50
                connect Junction70 Junction75 as Connection475
                connect Junction71 Actual_Temp.in as Connection460
                connect Junction72 CHP.Heat_recovery as Connection467
                connect Junction73 "Bus Join3.in3" as Connection470
                connect Junction74 thermal_data.CO2out as Connection473
                connect Junction75 CHP.Boiler_Heat_Supplied as Connection476
                connect Junction76 CHP.CHP_heat_supplied as Connection479
                connect Junction77 Junction71 as Connection482
                connect Modbus.Reg_in "Bus Join3.out" as Connection392
                connect Modbus.Holding_out "Bus Split1.in" as Connection393
                connect Product1.out Gain6.in as Connection323
                connect Product1.in Junction65 as Connection326
                connect Product1.in1 Junction66 as Connection329
                connect Reset.out CHP.CHP_reset as Connection354
                connect SIMEnable_CHP.out CHP.SIM_enable_CHP as Connection357
                connect SIMTempSetPoint_CHP.out CHP.SIM_TempSetPoint as Connection356
                connect Sum3.out "Woodward DEGOV.Speed" as Connection8
                connect Tmech_pu.in Junction66 as Connection327
                connect "Tpu to T.out" Junction64 as Connection11
                connect mfidot.out Gain1.in as Connection219
                connect reset_integrator "Woodward DEGOV.Reset" as Connection12
                connect thermal_data.Thermal_Data From14 as Connection246
                connect thermal_data.Heat_rec1 Junction72 as Connection466
                connect thermal_data.NG_usage Junction73 as Connection469
                connect w_meas_in "w to wpu.in" as Connection13
                connect wref.out Sum3.in1 as Connection15
            }
            [
                position = 8432, 8168
                size = 152, 112
            ]

            component Subsystem NG_GCB_Measurements {
                layout = dynamic
                component gen_gain Gain8 {
                    gain = "[0.25e-6]"
                }
                [
                    position = 7656, 7736
                    scale = -1, 1
                ]

                component gen_probe Q_Gen1 {
                    addr = "17938"
                }
                [
                    position = 7576, 7736
                    scale = -1, 1
                ]

                component "core/Voltage Measurement" Va {
                    addr = "3"
                    execution_rate = "Ts_gen"
                    sig_output = "True"
                }
                [
                    position = 8040, 8216
                    rotation = right
                    scale = -1, 1
                ]

                component "core/Current Measurement" Ic {
                    addr = "26"
                    execution_rate = "Ts_gen"
                    frequency = "10000.0"
                    sig_output = "True"
                }
                [
                    position = 8248, 8160
                    scale = -1, 1
                ]

                component "core/Current Measurement" Ib {
                    addr = "24"
                    execution_rate = "Ts_gen"
                    frequency = "10000.0"
                    sig_output = "True"
                }
                [
                    position = 8336, 8064
                    scale = -1, 1
                ]

                component "core/Current Measurement" Ia {
                    addr = "22"
                    execution_rate = "Ts_gen"
                    frequency = "10000.0"
                    sig_output = "True"
                }
                [
                    position = 8440, 7968
                    scale = -1, 1
                ]

                component gen_probe S_Gen1 {
                    addr = "17951"
                }
                [
                    position = 7576, 7792
                    scale = -1, 1
                ]

                component gen_gain Gain7 {
                    gain = "[0.25e-6]"
                }
                [
                    position = 7656, 7792
                    scale = -1, 1
                ]

                component gen_probe P_Gen1 {
                    addr = "17965"
                }
                [
                    position = 7576, 7680
                    scale = -1, 1
                ]

                component "core/Voltage Measurement" Vc {
                    addr = "5"
                    execution_rate = "Ts_gen"
                    sig_output = "True"
                }
                [
                    position = 8168, 8360
                    rotation = right
                    scale = -1, 1
                ]

                component gen_gain Gain9 {
                    gain = "[0.25e-6]"
                }
                [
                    position = 7656, 7680
                    scale = -1, 1
                ]

                component "core/Voltage Measurement" Vb {
                    addr = "4"
                    execution_rate = "Ts_gen"
                    sig_output = "True"
                }
                [
                    position = 8104, 8288
                    rotation = right
                    scale = -1, 1
                ]

                component gen_gain normalize {
                    gain = "np.sqrt(3.0/2.0)/13800.0"
                }
                [
                    position = 7664, 7608
                    scale = -1, 1
                ]

                component pas_resistor R17 {
                    resistance = "100"
                }
                [
                    position = 8680, 8336
                    rotation = right
                ]

                component pas_resistor R18 {
                    resistance = "100"
                }
                [
                    position = 8608, 8336
                    rotation = right
                ]

                component pas_resistor R19 {
                    resistance = "100"
                }
                [
                    position = 8752, 8336
                    rotation = right
                ]

                component pas_capacitor C4 {
                }
                [
                    position = 8608, 8224
                    rotation = right
                ]

                component pas_capacitor C5 {
                }
                [
                    position = 8752, 8224
                    rotation = right
                ]

                component pas_capacitor C6 {
                }
                [
                    position = 8680, 8224
                    rotation = right
                ]

                component pas_resistor R20 {
                    resistance = "4716"
                }
                [
                    position = 8928, 8296
                    rotation = right
                ]

                component pas_resistor R21 {
                    resistance = "4716"
                }
                [
                    position = 8856, 8296
                    rotation = right
                ]

                component pas_resistor R22 {
                    resistance = "4716"
                }
                [
                    position = 9000, 8296
                    rotation = right
                ]

                component Subsystem "PQ measure" {
                    layout = dynamic
                    component gen_terminator Termination1 {
                    }
                    [
                        position = 7936, 8184
                        scale = -1, 1
                    ]

                    component gen_terminator Termination4 {
                    }
                    [
                        position = 8104, 8248
                        scale = -1, 1
                    ]

                    component gen_terminator Termination2 {
                    }
                    [
                        position = 7992, 8208
                        scale = -1, 1
                    ]

                    component gen_PQ_transform "PQ Power Meter1" {
                        execution_rate = "-1"
                    }
                    [
                        position = 8192, 8192
                        scale = -1, 1
                    ]

                    port P_meas_out {
                        label = "P_meas_out"
                        position = left:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8128, 8136
                        rotation = down
                    ]

                    port Q_meas_out {
                        label = "Q_meas_out"
                        position = left:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8056, 8152
                        rotation = down
                    ]

                    port Va_in {
                        label = "Va_in"
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8272, 8048
                        rotation = down
                    ]

                    port Vb_in {
                        label = "Vb_in"
                        position = right:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8304, 8096
                        rotation = down
                    ]

                    port Vc_in {
                        label = "Vc_in"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8360, 8144
                        rotation = down
                    ]

                    port Ia_in {
                        label = "Ia_in"
                        position = right:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8360, 8240
                        rotation = down
                    ]

                    port Ib_in {
                        label = "Ib_in"
                        position = right:7
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8312, 8280
                        rotation = down
                    ]

                    port Ic_in {
                        label = "Ic_in"
                        position = right:10
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8280, 8328
                        rotation = down
                    ]

                    port S_meas_out {
                        label = "S_meas_out"
                        position = left:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 7944, 8272
                        rotation = down
                    ]

                    connect "PQ Power Meter1.ia" Ia_in as Connection1
                    connect "PQ Power Meter1.ib" Ib_in as Connection2
                    connect "PQ Power Meter1.ic" Ic_in as Connection3
                    connect "PQ Power Meter1.Pdc" P_meas_out as Connection4
                    connect "PQ Power Meter1.Qdc" Q_meas_out as Connection5
                    connect "PQ Power Meter1.va" Va_in as Connection6
                    connect "PQ Power Meter1.vb" Vb_in as Connection7
                    connect "PQ Power Meter1.vc" Vc_in as Connection8
                    connect S_meas_out "PQ Power Meter1.apparent" as Connection9
                    connect Termination1.in "PQ Power Meter1.Pac" as Connection10
                    connect Termination2.in "PQ Power Meter1.Qac" as Connection11
                    connect Termination4.in "PQ Power Meter1.k_factor" as Connection12
                }
                [
                    position = 7832, 7736
                    size = 88, 152
                ]

                component Subsystem "Calculate Vt" {
                    layout = dynamic
                    component gen_math_fnc squaring1 {
                        mathematical_fn = "power"
                    }
                    [
                        position = 8296, 8056
                    ]

                    component gen_terminator Termination3 {
                    }
                    [
                        position = 8040, 8192
                    ]

                    component gen_terminator Termination1 {
                    }
                    [
                        position = 8152, 8144
                    ]

                    component src_constant cte2 {
                        execution_rate = "-1"
                        value = "[2]"
                    }
                    [
                        position = 8192, 8088
                    ]

                    component gen_sum Sum2 {
                        execution_rate = "-1"
                    }
                    [
                        position = 8376, 8024
                    ]

                    component gen_math_fnc squareRoot {
                        execution_rate = "-1"
                        mathematical_fn = "sqrt"
                    }
                    [
                        position = 8456, 8024
                    ]

                    component gen_math_fnc squaring {
                        execution_rate = "-1"
                        mathematical_fn = "power"
                    }
                    [
                        position = 8296, 7992
                    ]

                    component gen_terminator Termination4 {
                    }
                    [
                        position = 8008, 8248
                    ]

                    component "core/Three phase PLL" "Voltage PLL" {
                        execution_rate = "-1"
                    }
                    [
                        position = 7912, 8152
                    ]

                    port Va_in {
                        label = "Va_in"
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7768, 8120
                    ]

                    port Vb_in {
                        label = "Vb_in"
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7808, 8152
                    ]

                    port Vc_in {
                        label = "Vc-in"
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7848, 8184
                    ]

                    port Vt_out {
                        label = "Vt_out"
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8528, 8024
                    ]

                    port f {
                        label = "f"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8096, 8160
                    ]

                    junction Junction63 sp
                    [
                        position = 8256, 8064
                    ]

                    connect Junction63 squaring.in1 as Connection1
                    connect Sum2.out squareRoot.in as Connection2
                    connect Sum2.in squaring.out as Connection3
                    connect Sum2.in1 squaring1.out as Connection4
                    connect Termination1.in "Voltage PLL.zero_axis" as Connection5
                    connect Termination3.in "Voltage PLL.theta" as Connection6
                    connect Termination4.in "Voltage PLL.sin_theta" as Connection7
                    connect "Voltage PLL.va" Va_in as Connection9
                    connect "Voltage PLL.vb" Vb_in as Connection10
                    connect "Voltage PLL.vc" Vc_in as Connection11
                    connect "Voltage PLL.freq" f as Connection17
                    connect "Voltage PLL.d_axis" squaring.in as Connection12
                    connect cte2.out Junction63 as Connection13
                    connect squareRoot.out Vt_out as Connection14
                    connect squaring1.in1 Junction63 as Connection15
                    connect squaring1.in "Voltage PLL.q_axis" as Connection16
                }
                [
                    position = 7920, 7568
                    rotation = down
                    size = 80, 64
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 9224, 7968
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 9224, 8064
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 9224, 8160
                    rotation = down
                ]

                port A {
                    label = "A"
                    position = left:1
                    kind = pe
                }
                [
                    position = 7416, 7968
                ]

                port B {
                    label = "B"
                    position = left:2
                    kind = pe
                }
                [
                    position = 7416, 8064
                ]

                port C {
                    label = "C"
                    position = left:3
                    kind = pe
                }
                [
                    position = 7416, 8160
                ]

                port Vt_meas {
                    label = "Vt_meas"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7568, 7560
                    scale = -1, 1
                ]

                tag Goto1 {
                    value = "F3_NGCHP_Vt"
                    scope = global
                    kind = sp
                    direction = in
                }
                [
                    position = 7432, 7608
                    hide_name = True
                    scale = -1, 1
                ]

                tag Goto2 {
                    value = "F3_GCB_VOLTAGE"
                    scope = global
                    kind = sp
                    direction = in
                }
                [
                    position = 7432, 7632
                    hide_name = True
                    scale = -1, 1
                ]

                tag Goto3 {
                    value = "F3_GCB_P_REAL"
                    scope = global
                    kind = sp
                    direction = in
                }
                [
                    position = 7712, 7712
                    hide_name = True
                    scale = -1, 1
                ]

                tag Goto4 {
                    value = "F3_GCB_P_REACTIVE"
                    scope = global
                    kind = sp
                    direction = in
                }
                [
                    position = 7712, 7760
                    hide_name = True
                    scale = -1, 1
                ]

                tag Goto5 {
                    value = "F3_GCB_FREQUENCY"
                    scope = global
                    kind = sp
                    direction = in
                }
                [
                    position = 7800, 7584
                    hide_name = True
                    scale = -1, 1
                ]

                junction Junction11 pe
                [
                    position = 8104, 8416
                ]

                junction Junction19 pe
                [
                    position = 8040, 7968
                ]

                junction Junction20 pe
                [
                    position = 8104, 8064
                ]

                junction Junction21 pe
                [
                    position = 8168, 8160
                ]

                junction Junction23 sp
                [
                    position = 8008, 7696
                ]

                junction Junction24 sp
                [
                    position = 8072, 7712
                ]

                junction Junction25 sp
                [
                    position = 8136, 7728
                ]

                junction Junction1482 sp
                [
                    position = 7744, 7560
                ]

                junction Junction1483 sp
                [
                    position = 7496, 7608
                ]

                junction Junction1484 sp
                [
                    position = 7760, 7680
                ]

                junction Junction1485 sp
                [
                    position = 7760, 7736
                ]

                junction Junction1490 pe
                [
                    position = 8608, 7968
                ]

                junction Junction1491 pe
                [
                    position = 8680, 8064
                ]

                junction Junction1492 pe
                [
                    position = 8752, 8160
                ]

                junction Junction1493 pe
                [
                    position = 8168, 8416
                ]

                junction Junction1494 pe
                [
                    position = 8608, 8416
                ]

                junction Junction1495 pe
                [
                    position = 8680, 8416
                ]

                junction Junction1496 pe
                [
                    position = 8752, 8416
                ]

                junction Junction1497 pe
                [
                    position = 8856, 8416
                ]

                junction Junction1498 pe
                [
                    position = 8928, 8416
                ]

                junction Junction1499 pe
                [
                    position = 8856, 7968
                ]

                junction Junction1500 pe
                [
                    position = 8928, 8064
                ]

                junction Junction1501 pe
                [
                    position = 9000, 8160
                ]

                connect A Junction19 as Connection471
                connect B Junction20 as Connection473
                connect C Junction21 as Connection472
                connect C4.p_node Junction1490 as Connection477
                connect C4.n_node R18.p_node as Connection448
                connect C5.p_node Junction1492 as Connection483
                connect C6.p_node Junction1491 as Connection480
                connect C6.n_node R17.p_node as Connection462
                connect "Calculate Vt.Va_in" Junction23 as Connection232
                connect "Calculate Vt.Vb_in" Junction24 as Connection235
                connect "Calculate Vt.Vc_in" Junction25 as Connection238
                connect Gain8.in Junction1485 as Connection434
                connect Gain9.in Junction1484 as Connection431
                connect Goto1 Junction1483 as Connection428
                connect Goto2 Junction1483 as Connection430
                connect Goto3 Junction1484 as Connection433
                connect Goto4 Junction1485 as Connection436
                connect Goto5 "Calculate Vt.f" as Connection437
                connect Ia.p_node Junction1490 as Connection475
                connect Ia.out "PQ measure.Ia_in" as Connection239
                connect Ib.p_node Junction1491 as Connection478
                connect Ib.n_node Junction20 as Connection63
                connect Ib.out "PQ measure.Ib_in" as Connection240
                connect Ic.p_node Junction1492 as Connection481
                [
                    breakpoints = 8608, 8160
                ]
                connect Ic.n_node Junction21 as Connection69
                connect Ic.out "PQ measure.Ic_in" as Connection241
                connect Junction11 Junction1493 as Connection484
                [
                    breakpoints = 8104, 8416; 8104, 8416
                ]
                connect Junction1482 "Calculate Vt.Vt_out" as Connection426
                [
                    breakpoints = 7744, 7560; 7864, 7560
                ]
                connect Junction1483 normalize.out as Connection429
                connect Junction1484 "PQ measure.P_meas_out" as Connection432
                connect Junction1485 "PQ measure.Q_meas_out" as Connection435
                connect Junction1490 Junction1499 as Connection505
                connect Junction1491 Junction1500 as Connection508
                connect Junction1492 Junction1501 as Connection511
                [
                    breakpoints = 8840, 8160
                ]
                connect Junction1493 Vc.n_node as Connection485
                connect Junction1494 Junction1493 as Connection491
                [
                    breakpoints = 8608, 8416
                ]
                connect Junction1495 Junction1494 as Connection494
                connect Junction1496 Junction1495 as Connection497
                connect Junction1497 Junction1496 as Connection500
                connect Junction1498 Junction1497 as Connection503
                connect Junction1499 a as Connection506
                connect Junction1500 b as Connection509
                connect Junction1501 c as Connection512
                connect Junction19 Ia.n_node as Connection128
                connect Junction19 Va.p_node as Connection129
                connect Junction20 Vb.p_node as Connection131
                connect Junction21 Vc.p_node as Connection132
                connect Junction23 "PQ measure.Va_in" as Connection231
                connect Junction24 "PQ measure.Vb_in" as Connection234
                connect Junction25 "PQ measure.Vc_in" as Connection237
                connect "PQ measure.S_meas_out" Gain7.in as Connection157
                connect P_Gen1.in Gain9.out as Connection158
                connect Q_Gen1.in Gain8.out as Connection161
                connect R17.n_node Junction1495 as Connection495
                connect R18.n_node Junction1494 as Connection490
                connect R19.p_node C5.n_node as Connection456
                connect R19.n_node Junction1496 as Connection496
                connect R20.n_node Junction1498 as Connection502
                connect R20.p_node Junction1500 as Connection510
                connect R21.n_node Junction1497 as Connection499
                connect R21.p_node Junction1499 as Connection507
                connect R22.n_node Junction1498 as Connection504
                connect R22.p_node Junction1501 as Connection513
                connect S_Gen1.in Gain7.out as Connection192
                connect Va.n_node Junction11 as Connection207
                connect Va.out Junction23 as Connection230
                connect Vb.n_node Junction11 as Connection209
                connect Vb.out Junction24 as Connection233
                connect Vc.out Junction25 as Connection236
                connect Vt_meas Junction1482 as Connection425
                connect normalize.in Junction1482 as Connection427
            }
            [
                position = 8232, 8504
                size = 112, 112
            ]

            port A {
                position = top:3
                kind = pe
            }
            [
                position = 7480, 8408
            ]

            port C {
                position = top:1
                kind = pe
            }
            [
                position = 7480, 8600
            ]

            port B {
                position = top:2
                kind = pe
            }
            [
                position = 7480, 8504
            ]

            port "MCB Control" {
                position = auto:auto
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 7928, 8136
            ]

            tag Goto1 {
                value = "F3_GCB_BREAKER"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 8008, 8328
                hide_name = True
            ]

            junction Junction109 pe
            [
                position = 8752, 8400
            ]

            junction Junction110 pe
            [
                position = 8752, 8568
            ]

            junction Junction112 pe
            [
                position = 8760, 8648
            ]

            junction Junction113 pe
            [
                position = 8760, 8568
            ]

            junction Junction115 sp
            [
                position = 8320, 8056
            ]

            junction Junction116 sp
            [
                position = 7928, 8328
            ]

            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">1. File name: Mach_exc_gov......updated_starter_v2.tse</p></body></html> ENDCOMMENT 
            [
                position = 7768, 7752
            ]

            connect A NG_GCB.a_in as Connection550
            connect CB_control.CB_status Governor_and_Diesel_Engine.Contactor_status as Connection2681
            connect CB_control.GCB_control Junction116 as Connection2682
            connect CB_control.MCB_control "MCB Control" as Connection557
            connect "Close GCB.out" CB_control.Close_GCB as Connection7
            connect "Close MCB.out" CB_control.Close_MCB as Connection8
            connect Exciter.Fuel_off Junction115 as Connection2678
            connect Exciter.Vf_out Vfd.in as Connection564
            connect "Fuel signal off.out" "Subsystem1.Fuel Signal OFF" as Connection133
            connect Goto1 Junction116 as Connection2684
            connect Governor_and_Diesel_Engine.reset_integrator Junction115 as Connection2680
            connect Governor_and_Diesel_Engine.T_out NG_Gen.load_in as Connection2670
            connect Governor_and_Diesel_Engine.w_meas_in NG_Gen.speed_out as Connection2689
            [
                breakpoints = 8560, 8400; 8608, 8392
            ]
            connect Junction109 If.n_node as Connection78
            connect Junction109 NG_Gen.r_1 as Connection77
            connect Junction110 NG_Gen.r_2 as Connection81
            connect Junction112 R66.p_node as Connection2639
            connect Junction113 Junction110 as Connection2641
            connect Junction113 Junction112 as Connection2645
            connect Junction115 Subsystem1.Reset as Connection2679
            connect Junction116 NG_GCB.ctrl_in as Connection2683
            connect NG_GCB.b_in B as Connection552
            connect NG_GCB.c_in C as Connection551
            connect NG_GCB.c_out NG_GCB_Measurements.C as Connection549
            connect NG_GCB.b_out NG_GCB_Measurements.B as Connection548
            connect NG_GCB.a_out NG_GCB_Measurements.A as Connection547
            connect NG_GCB_Measurements.Vt_meas Exciter.Vt_in as Connection2646
            connect NG_Gen.c_in NG_GCB_Measurements.c as Connection323
            connect NG_Gen.a_in NG_GCB_Measurements.a as Connection324
            connect NG_Gen.b_in NG_GCB_Measurements.b as Connection318
            connect "Open GCB.out" CB_control.Open_GCB as Connection555
            connect "Open MCB.out" CB_control.Open_MCB as Connection79
            connect P_control_loop.Delta_w_out Governor_and_Diesel_Engine.Delta_w_in as Connection2669
            connect Q_control_loop.Delta_V_out Exciter.Delta_V_in as Connection568
            connect Starter.out Subsystem1.Starter as Connection132
            connect Termination1.in NG_Gen.torque_out as Connection562
            connect V_noise_immunity.p_node Junction112 as Connection2638
            connect V_noise_immunity.n_node R66.n_node as Connection2636
            connect Vfd.p_node If.p_node as Connection212
            connect Vfd.n_node Junction113 as Connection2640
            connect Vfield.p_node Junction109 as Connection214
            connect Vfield.n_node Junction110 as Connection215
        }
        [
            position = 12256, 9096
            scale = -1, 1
            size = 168, 136
        ]

        component Subsystem F3_CB8 {
            layout = dynamic
            component Subsystem MID_Rly1 {
                layout = dynamic
                component src_constant Constant1 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 8056, 7928
                ]

                component gen_bus_split "Bus Split1" {
                    outputs = "3"
                }
                [
                    position = 7832, 8000
                    rotation = right
                ]

                component gen_terminator Term5 {
                }
                [
                    position = 8152, 8136
                    rotation = down
                    scale = -1, 1
                ]

                component gen_bus_split "Bus Split3" {
                    outputs = "3"
                }
                [
                    position = 7576, 8000
                    rotation = right
                ]

                component gen_terminator Term3 {
                }
                [
                    position = 8440, 7928
                ]

                component sys_signal_switch "Signal switch1" {
                    threshold = "0.5"
                }
                [
                    position = 7792, 8400
                    rotation = right
                ]

                component gen_probe CB_state {
                }
                [
                    position = 7592, 8344
                    rotation = down
                ]

                component gen_delay Delay1 {
                    del_length = "int(3.0/60.0/Ts)"
                }
                [
                    position = 7880, 8344
                    rotation = down
                ]

                component gen_bus_split "Bus Split2" {
                    outputs = "3"
                }
                [
                    position = 7704, 8000
                    rotation = right
                ]

                component gen_terminator Term4 {
                }
                [
                    position = 8152, 8200
                    rotation = down
                    scale = -1, 1
                ]

                component src_constant Constant2 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 7776, 8344
                    rotation = right
                ]

                component "core/ModBus Device" "ModBus Device1" {
                    configuration = "configF3_CB8"
                    execution_rate = "Ts"
                }
                [
                    position = 8272, 8000
                    size = 184, 184
                ]

                component Subsystem SEL_787 {
                    layout = dynamic
                    component gen_sum Sum1 {
                        signs = "5"
                    }
                    [
                        position = 7648, 8384
                    ]

                    component gen_logic_op "Logical operator1" {
                        inputs = "4"
                        operator = "OR"
                    }
                    [
                        position = 8720, 8128
                        rotation = left
                    ]

                    component gen_bus_join "Bus Join1" {
                        inputs = "25"
                    }
                    [
                        position = 7928, 8080
                    ]

                    component gen_c_function bitwise_faults {
                        in_terminal_dimensions_str = "Status inherit;R25 inherit;R27 inherit;R50 inherit;R51 inherit;R59 inherit;Reset inherit;"
                        in_terminal_properties = "inherit Status;inherit R25;inherit R27;inherit R50;inherit R51;inherit R59;inherit Reset;"
                        no_feed_inputs = "[]"
                        no_feed_outputs = "[]"
                        out_terminal_dimensions_str = "fault_status inherit;"
                        out_terminal_properties = "uint fault_status;"
                        output_fnc = "/*Begin code section*/
fault_status= (uint)Status<<1 | (uint)R25<<2 | (uint)R27<<3 | (uint)R50<<4 | (uint)R51<<5 | (uint)R59<<6 | (uint)Reset<<7;
/*End code section*/"
                    }
                    [
                        position = 9200, 8272
                    ]

                    component src_scada_input "Control Panel Input1" {
                        execution_rate = "Ts"
                        max = "1"
                        min = "0"
                        unit = ""
                    }
                    [
                        position = 8136, 8192
                    ]

                    component gen_sum Sum3 {
                        signs = "3"
                    }
                    [
                        position = 7640, 8624
                    ]

                    component gen_gain Gain5 {
                        gain = "8"
                    }
                    [
                        position = 7512, 8432
                        rotation = left
                    ]

                    component tm_delay "Unit Delay4" {
                    }
                    [
                        position = 9496, 8056
                    ]

                    component gen_c_function "pf bitwise" {
                        in_terminal_dimensions_str = "exp_imp inherit;lag_lead inherit;"
                        in_terminal_properties = "inherit exp_imp;inherit lag_lead;"
                        no_feed_inputs = "[u\'\']"
                        no_feed_outputs = "[u\'\']"
                        out_terminal_dimensions_str = "pf_states inherit;"
                        out_terminal_properties = "uint pf_states;"
                        output_fnc = "/*Begin code section*/
pf_states=(uint)exp_imp<<1 | (uint)lag_lead<<2;
/*End code section*/"
                    }
                    [
                        position = 9200, 8416
                    ]

                    component tm_delay "Unit Delay2" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7728, 8304
                        rotation = left
                    ]

                    component gen_logic_op not {
                        operator = "NOT"
                    }
                    [
                        position = 7440, 8624
                    ]

                    component gen_gain Gain6 {
                        gain = "16"
                    }
                    [
                        position = 7584, 8456
                        rotation = left
                    ]

                    component gen_gain Gain4 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8384
                    ]

                    component gen_gain Gain7 {
                        gain = "2"
                    }
                    [
                        position = 7512, 8624
                    ]

                    component gen_gain Gain1 {
                        gain = "2"
                    }
                    [
                        position = 7536, 8328
                        rotation = right
                    ]

                    component gen_gain Gain8 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8688
                    ]

                    component tm_delay "Unit Delay5" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7840, 8392
                        rotation = left
                    ]

                    component gen_gain normalize {
                        gain = "np.sqrt(3.0)/480.0"
                    }
                    [
                        position = 7336, 7784
                    ]

                    component gen_probe Q {
                    }
                    [
                        position = 7384, 7688
                    ]

                    component gen_probe P {
                    }
                    [
                        position = 7384, 7640
                    ]

                    component Subsystem "State Condition Mng" {
                        layout = dynamic
                        component gen_logic_op not1 {
                            operator = "NOT"
                        }
                        [
                            position = 8032, 8264
                        ]

                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8120, 8352
                            scale = 1, -1
                        ]

                        component gen_c_function "Trip_out mng fnc" {
                            in_terminal_dimensions_str = "bool_R25 inherit;op_mode_in inherit;trip_in inherit;enable inherit;initial_condition inherit;activate_logic inherit;"
                            in_terminal_properties = "real bool_R25;inherit op_mode_in;inherit trip_in;inherit enable;inherit initial_condition;inherit activate_logic;"
                            init_fnc = "/*Begin code section*/
trip_out = initial_condition;
/*End code section*/"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "trip_out inherit;"
                            out_terminal_properties = "real trip_out;"
                            output_fnc = "/*Begin code section*/
if(enable && activate_logic){
    if(op_mode_in==0){
        trip_out = trip_in*bool_R25;
    }
    else if(op_mode_in==1){
        trip_out = 1*bool_R25;
    }
    else if(op_mode_in==2){
        trip_out=0;
    }
}
/*End code section*/"
                        }
                        [
                            position = 8424, 8208
                        ]

                        component gen_logic_op not {
                            operator = "NOT"
                        }
                        [
                            position = 7840, 8200
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8200, 8336
                            scale = 1, -1
                        ]

                        component Subsystem detect_change {
                            layout = dynamic
                            component gen_rel_op "Relational operator1" {
                                relational_op = "!="
                            }
                            [
                                position = 8240, 8192
                            ]

                            component tm_delay "Unit Delay1" {
                            }
                            [
                                position = 8144, 8200
                            ]

                            port Out1 {
                                label = "Out"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8304, 8192
                            ]

                            port In3 {
                                label = "In"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8032, 8200
                            ]

                            junction Junction1 sp
                            [
                                position = 8080, 8200
                            ]

                            connect Junction1 In3 as Connection1
                            connect "Relational operator1.in" Junction1 as Connection2
                            connect "Relational operator1.out" Out1 as Connection3
                            connect "Unit Delay1.in" Junction1 as Connection4
                            connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                        }
                        [
                            position = 7960, 8368
                            size = 48, 48
                        ]

                        port Trip_in {
                            label = "Trip_in"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7768, 8200
                        ]

                        port R25 {
                            label = "R25"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8232, 8128
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8272, 8160
                        ]

                        port trip_out {
                            label = "trip_out"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8536, 8208
                        ]

                        port enable {
                            label = "enable"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7952, 8264
                        ]

                        port initial_condition {
                            label = "initial_condition"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8248, 8232
                        ]

                        junction Junction2 sp
                        [
                            position = 7984, 8264
                        ]

                        junction Junction3 sp
                        [
                            position = 7904, 8200
                        ]

                        connect Junction2 enable as Connection150
                        connect Junction3 not.out as Connection158
                        connect R25 "Trip_out mng fnc.bool_R25" as Connection144
                        connect "SR Flip Flop1.r_in" not1.out as Connection136
                        connect Termination1.in "SR Flip Flop1.out_n" as Connection138
                        connect "Trip_out mng fnc.enable" Junction2 as Connection151
                        connect "Trip_out mng fnc.trip_in" Junction3 as Connection157
                        connect "Trip_out mng fnc.activate_logic" "SR Flip Flop1.out" as Connection154
                        connect detect_change.In3 Junction3 as Connection159
                        connect detect_change.Out1 "SR Flip Flop1.s_in" as Connection156
                        connect initial_condition "Trip_out mng fnc.initial_condition" as Connection152
                        connect not.in Trip_in as Connection139
                        connect not1.in Junction2 as Connection149
                        connect op_mode "Trip_out mng fnc.op_mode_in" as Connection145
                        connect trip_out "Trip_out mng fnc.trip_out" as Connection167
                    }
                    [
                        position = 9336, 8056
                        size = 128, 136
                    ]

                    component Subsystem Relay_Param {
                        layout = dynamic
                        component src_constant CT_primary {
                            execution_rate = "Ts"
                            value = "CT_primary"
                        }
                        [
                            position = 8088, 7928
                        ]

                        component src_constant dF_threshold {
                            execution_rate = "Ts"
                            value = "dF_threshold"
                        }
                        [
                            position = 8088, 7760
                        ]

                        component src_constant VRMSLL {
                            execution_rate = "Ts"
                            value = "VRMSLL"
                        }
                        [
                            position = 8088, 7592
                        ]

                        component src_constant Initial_status {
                            execution_rate = "Ts"
                            value = "Initial_status"
                        }
                        [
                            position = 8088, 7992
                        ]

                        component src_constant angle_threshold {
                            execution_rate = "Ts"
                            value = "angle_threshold"
                        }
                        [
                            position = 8088, 7704
                        ]

                        component src_constant dV_threshold {
                            execution_rate = "Ts"
                            value = "dV_threshold"
                        }
                        [
                            position = 8088, 7648
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "3"
                        }
                        [
                            position = 8104, 8192
                            rotation = down
                            scale = -1, -1
                        ]

                        component sys_signal_switch "Signal switch1" {
                            threshold = "0.5"
                        }
                        [
                            position = 9104, 7808
                            scale = 1, -1
                        ]

                        component src_constant 27P_59P_tripDelay {
                            execution_rate = "Ts"
                            value = "R27P_R59P_tripDelay"
                        }
                        [
                            position = 8088, 7872
                        ]

                        component gen_bus_join "Bus Join1" {
                            inputs = "4"
                        }
                        [
                            position = 8296, 7800
                            rotation = right
                        ]

                        component Subsystem Grid_Tied_param {
                            layout = dynamic
                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup1"
                            }
                            [
                                position = 8312, 7840
                                rotation = right
                            ]

                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup1"
                            }
                            [
                                position = 8080, 7840
                                rotation = right
                            ]

                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7904
                                rotation = right
                            ]

                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType1"
                            }
                            [
                                position = 8240, 7880
                                rotation = right
                            ]

                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8552, 8040
                            ]

                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup1"
                            }
                            [
                                position = 8416, 7840
                                rotation = right
                            ]

                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay1"
                            }
                            [
                                position = 8352, 7880
                                rotation = right
                            ]

                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial1"
                            }
                            [
                                position = 8200, 7840
                                rotation = right
                            ]

                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup1"
                            }
                            [
                                position = 8120, 7880
                                rotation = right
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7840
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7880
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7880
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8704, 8040
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8776, 7936
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 8872, 7728
                            size = 216, 104
                        ]

                        component Subsystem Islanded_param {
                            layout = dynamic
                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay2"
                            }
                            [
                                position = 8352, 7888
                                rotation = right
                            ]

                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup2"
                            }
                            [
                                position = 8120, 7888
                                rotation = right
                            ]

                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8544, 8048
                            ]

                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup2"
                            }
                            [
                                position = 8072, 7856
                                rotation = right
                            ]

                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup2"
                            }
                            [
                                position = 8296, 7856
                                rotation = right
                            ]

                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup2"
                            }
                            [
                                position = 8400, 7856
                                rotation = right
                            ]

                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial2"
                            }
                            [
                                position = 8192, 7856
                                rotation = right
                            ]

                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType2"
                            }
                            [
                                position = 8240, 7888
                                rotation = right
                            ]

                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7920
                                rotation = right
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7856
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7888
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7888
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8696, 8048
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8744, 7928
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 9224, 8040
                            size = 216, 104
                        ]

                        component Subsystem Reset {
                            layout = dynamic
                            component gen_logic_op or {
                                operator = "OR"
                            }
                            [
                                position = 8152, 8192
                            ]

                            component Subsystem detect_change {
                                layout = dynamic
                                component tm_delay "Unit Delay1" {
                                }
                                [
                                    position = 8144, 8200
                                ]

                                component gen_rel_op "Relational operator1" {
                                    relational_op = "!="
                                }
                                [
                                    position = 8240, 8192
                                ]

                                port Out1 {
                                    label = "Out"
                                    position = right:1
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8304, 8192
                                ]

                                port In3 {
                                    label = "In"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8032, 8200
                                ]

                                junction Junction1 sp
                                [
                                    position = 8080, 8200
                                ]

                                connect Junction1 In3 as Connection1
                                connect "Relational operator1.in" Junction1 as Connection2
                                connect "Relational operator1.out" Out1 as Connection3
                                connect "Unit Delay1.in" Junction1 as Connection4
                                connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                            }
                            [
                                position = 8248, 8192
                                size = 48, 48
                            ]

                            port reset {
                                label = "Reset"
                                position = right:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8336, 8152
                            ]

                            port op_mode {
                                label = "Op_mode"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8344, 8240
                            ]

                            port "Reset in" {
                                label = "Reset in"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8168
                            ]

                            port "op_mode in" {
                                label = "op_mode in"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8224
                            ]

                            junction Junction1 sp
                            [
                                position = 8096, 8224
                            ]

                            connect Junction1 "op_mode in" as Connection1
                            connect detect_change.Out1 reset as Connection5
                            connect op_mode Junction1 as Connection6
                            connect or.in1 Junction1 as Connection3
                            connect or.in "Reset in" as Connection2
                            connect or.out detect_change.In3 as Connection4
                        }
                        [
                            position = 8280, 8192
                            rotation = down
                            scale = -1, -1
                            size = 104, 104
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8160
                        ]

                        port reset {
                            label = "reset"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8224
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8360, 7856
                        ]

                        port Initial_condition {
                            label = "Initial_condition"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8192, 7992
                        ]

                        port from_Modbus {
                            label = "from_Modbus"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7992, 8192
                        ]

                        port relay_param {
                            label = "relay_param"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9200, 7808
                        ]

                        tag From3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7760
                        ]

                        tag Goto2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7872
                        ]

                        tag From1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7696
                        ]

                        tag From2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8616, 7728
                        ]

                        tag From4 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 9104, 7904
                            rotation = right
                            scale = 1, -1
                        ]

                        tag Goto1 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8232, 8280
                        ]

                        tag Goto4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8208, 7544
                        ]

                        tag Goto3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7928
                        ]

                        junction Junction1 sp
                        [
                            position = 8152, 7592
                        ]

                        junction Junction2 sp
                        [
                            position = 8736, 7696
                        ]

                        junction Junction3 sp
                        [
                            position = 8712, 7728
                        ]

                        junction Junction4 sp
                        [
                            position = 8688, 7760
                        ]

                        connect "Bus Join1.in" Junction1 as Connection54
                        connect "Bus Join1.in2" angle_threshold.out as Connection48
                        connect "Bus Join1.in3" dF_threshold.out as Connection49
                        connect "Bus Join1.in1" dV_threshold.out as Connection47
                        connect "Bus Split1.out1" "Reset.Reset in" as Connection75
                        connect "Bus Split1.in" from_Modbus as Connection42
                        connect From1 Junction2 as Connection60
                        connect From2 Junction3 as Connection63
                        connect From3 Junction4 as Connection66
                        connect From4 "Signal switch1.in2" as Connection71
                        connect Goto1 "Bus Split1.out2" as Connection45
                        connect Goto2 27P_59P_tripDelay.out as Connection51
                        connect Goto3 CT_primary.out as Connection52
                        connect Goto4 Junction1 as Connection56
                        connect Initial_condition Initial_status.out as Connection53
                        connect Islanded_param.VRMSLL Junction2 as Connection62
                        connect Islanded_param.27P_59P_tripDelay Junction3 as Connection65
                        connect Islanded_param.CT_primary Junction4 as Connection68
                        connect Junction1 VRMSLL.out as Connection55
                        connect Junction2 Grid_Tied_param.VRMSLL as Connection61
                        connect Junction3 Grid_Tied_param.27P_59P_tripDelay as Connection64
                        connect Junction4 Grid_Tied_param.CT_primary as Connection67
                        connect "Reset.op_mode in" "Bus Split1.out" as Connection76
                        connect Reset.op_mode op_mode as Connection43
                        connect Reset.reset reset as Connection44
                        connect "Signal switch1.in1" Grid_Tied_param.relay_param as Connection73
                        connect "Signal switch1.in" Islanded_param.relay_param as Connection72
                        connect relay_param "Signal switch1.out" as Connection74
                        connect relay_paramR25 "Bus Join1.out" as Connection50
                    }
                    [
                        position = 8344, 7976
                        size = 168, 160
                    ]

                    component Subsystem "Relay 25-Sync Check1" {
                        layout = dynamic
                        component gen_gain Gain2 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7832
                        ]

                        component gen_c_function "Deadbus fcn" {
                            global_variables = "real threshold;uint a;uint c;uint b;"
                            in_terminal_dimensions_str = "Vbus inherit;Vline inherit;VRMSLL inherit;"
                            in_terminal_properties = "real Vbus;real Vline;real VRMSLL;"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "out inherit;"
                            output_fnc = "/*Begin code section*/
if (VRMSLL > 400)
    threshold=VRMSLL*0.003;
else
    threshold = VRMSLL*0.05;

if ((Vbus > (VRMSLL*0.90)) && (Vbus < (VRMSLL*1.20)) && (Vline < threshold))
    a = 1;
else
    a = 0;

if ((Vline > (VRMSLL*0.90)) && (Vline < (VRMSLL*1.20)) && (Vbus < threshold))
    b = 1;
else
    b = 0;

if ((Vline < threshold) && (Vbus < threshold))
    c = 1;
else
    c = 0;

out = a || b || c;
/*End code section*/"
                        }
                        [
                            position = 8208, 7672
                        ]

                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7784, 7832
                        ]

                        component gen_logic_op "Logical operator5" {
                            operator = "OR"
                        }
                        [
                            position = 8544, 7848
                        ]

                        component gen_rel_op "Relational operator1" {
                        }
                        [
                            position = 8464, 7856
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8808, 7904
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7784, 7776
                        ]

                        component gen_gain Gain1 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7776
                        ]

                        component gen_gain Gain3 {
                            gain = "1.0/10.0"
                        }
                        [
                            position = 7776, 8080
                        ]

                        component gen_logic_op "Logical operator7" {
                            operator = "OR"
                        }
                        [
                            position = 8632, 7888
                        ]

                        component src_constant Constant2 {
                            execution_rate = "Ts"
                            value = "[2]"
                        }
                        [
                            position = 8368, 7848
                        ]

                        component gen_logic_op "Logical operator4" {
                            operator = "OR"
                        }
                        [
                            position = 8888, 8096
                        ]

                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8736, 7864
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "4"
                        }
                        [
                            position = 7808, 8424
                        ]

                        component gen_logic_op "Logical operator3" {
                            inputs = "3"
                        }
                        [
                            position = 8336, 8104
                        ]

                        component Subsystem "Phase Comparator" {
                            layout = dynamic
                            component gen_probe c_out {
                                addr = "17943"
                            }
                            [
                                position = 7768, 8000
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7808, 8056
                            ]

                            component gen_c_function "C function1" {
                                global_variables = "real mod_L;real wrap_out1;real wrap_out2;real mod_B;real k;real alpha;real PI2;real PI;"
                                in_terminal_dimensions_str = "phase_bus inherit;phase_line inherit;"
                                in_terminal_properties = "real phase_bus;real phase_line;"
                                init_fnc = "/*Begin code section*/
PI = 3.1415926536;
PI2 = 2*PI;
/*End code section*/"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
mod_L=fmod(phase_line, PI2);
mod_B=fmod(phase_bus, PI2);

if (fabs(mod_L - mod_B) > PI) {
    if (mod_L < mod_B)
        mod_B -= PI2;
    else
        mod_B += PI2;
}

out=fabs(mod_L-mod_B)*180.0/PI;
/*End code section*/"
                            }
                            [
                                position = 7656, 8040
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8056
                            ]

                            port wt_grid {
                                label = "wt_grid"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8008
                            ]

                            port wt_gen {
                                label = "wt_gen"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8072
                            ]

                            port angle_threshold {
                                label = "angle_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7576, 8136
                            ]

                            junction Junction1 sp
                            [
                                position = 7736, 8048
                            ]

                            connect Junction1 "C function1.out" as Connection2
                            connect Locked "Relational operator1.out" as Connection3
                            connect "Relational operator1.in" Junction1 as Connection4
                            connect angle_threshold "Relational operator1.in1" as Connection8
                            connect c_out.in Junction1 as Connection5
                            connect wt_gen "C function1.phase_line" as Connection6
                            connect wt_grid "C function1.phase_bus" as Connection7
                        }
                        [
                            position = 8016, 8272
                            size = 112, 88
                        ]

                        component Subsystem "Freq Comparator" {
                            layout = dynamic
                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7832, 8048
                            ]

                            component gen_c_function "C function1" {
                                in_terminal_dimensions_str = "fbus inherit;fline inherit;"
                                in_terminal_properties = "real fbus;inherit fline;"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
out=fabs(fline-fbus);
/*End code section*/"
                            }
                            [
                                position = 7736, 8040
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8048
                            ]

                            port f_bus {
                                label = "f_bus"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port f_line {
                                label = "f_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port dF_threshold {
                                label = "dF_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7728, 8112
                            ]

                            connect "Relational operator1.in" "C function1.out" as Connection6
                            connect "Relational operator1.out" Locked as Connection8
                            connect "Relational operator1.in1" dF_threshold as Connection7
                            connect f_bus "C function1.fbus" as Connection4
                            connect f_line "C function1.fline" as Connection5
                        }
                        [
                            position = 8016, 8104
                            size = 112, 88
                        ]

                        component Subsystem "Voltage Comparator" {
                            layout = dynamic
                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7856, 8048
                            ]

                            component gen_c_function "C function1" {
                                in_terminal_dimensions_str = "Vbus inherit;Vline inherit;"
                                in_terminal_properties = "real Vbus;inherit Vline;"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
out=fabs(Vline-Vbus);
/*End code section*/"
                            }
                            [
                                position = 7736, 8040
                            ]

                            component gen_gain Gain1 {
                                gain = "0.01"
                            }
                            [
                                position = 7680, 8200
                            ]

                            component gen_product Product1 {
                            }
                            [
                                position = 7760, 8160
                            ]

                            port V_bus {
                                label = "V_bus"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port V_line {
                                label = "V_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7928, 8048
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8152
                            ]

                            port dV_threshold {
                                label = "dV_threshold"
                                position = left:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8200
                            ]

                            connect Gain1.in dV_threshold as Connection8
                            connect Product1.in1 Gain1.out as Connection7
                            connect Product1.out "Relational operator1.in1" as Connection9
                            connect Product1.in VRMSLL as Connection6
                            connect "Relational operator1.in" "C function1.out" as Connection2
                            connect "Relational operator1.out" Locked as Connection3
                            connect V_bus "C function1.Vbus" as Connection4
                            connect V_line "C function1.Vline" as Connection5
                        }
                        [
                            position = 8016, 7864
                            size = 112, 208
                        ]

                        port trip_or {
                            label = "trip_or"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7792
                        ]

                        port mode_in {
                            label = "mode_in"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7896
                        ]

                        port bool_R25 {
                            label = "bool_R25"
                            position = auto:auto
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9032, 8096
                        ]

                        port Va {
                            label = "Va"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7776
                        ]

                        port Vline_a {
                            label = "Vline_A"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7832
                        ]

                        port bus_freq {
                            label = "bus_freq"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8080
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7824, 8104
                        ]

                        port bus_wt {
                            label = "bus_wt"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7776, 8248
                        ]

                        port line_wt {
                            label = "line_wt"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7832, 8272
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8424
                        ]

                        tag Goto3 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7912, 8432
                        ]

                        tag From3 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7944
                        ]

                        tag From2 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8128
                        ]

                        tag Goto2 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8416
                            rotation = down
                            scale = -1, 1
                        ]

                        tag Goto1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8056, 8400
                            rotation = down
                            scale = -1, 1
                        ]

                        tag From1 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8296
                        ]

                        tag From5 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8112, 7688
                        ]

                        tag Goto4 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8448
                        ]

                        tag From4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7888
                        ]

                        junction Junction4 sp
                        [
                            position = 7920, 7832
                        ]

                        junction Junction5 sp
                        [
                            position = 8536, 8104
                        ]

                        junction Junction23 sp
                        [
                            position = 7904, 7776
                        ]

                        connect "Bus Split1.in" relay_paramR25 as Connection69
                        connect Constant2.out "Relational operator1.in" as Connection1
                        connect "Deadbus fcn.Vbus" Junction23 as Connection103
                        connect "Deadbus fcn.out" "SR Flip Flop1.s_in" as Connection137
                        connect "Freq Comparator.Locked" "Logical operator3.in1" as Connection135
                        connect "Freq Comparator.f_line" line_freq as Connection133
                        connect From1 "Phase Comparator.angle_threshold" as Connection74
                        connect From2 "Freq Comparator.dF_threshold" as Connection79
                        connect From3 "Voltage Comparator.dV_threshold" as Connection80
                        connect From4 "Voltage Comparator.VRMSLL" as Connection81
                        connect From5 "Deadbus fcn.VRMSLL" as Connection90
                        connect Gain3.out "Freq Comparator.f_bus" as Connection132
                        connect Goto1 "Bus Split1.out" as Connection70
                        connect Goto2 "Bus Split1.out1" as Connection71
                        connect Goto3 "Bus Split1.out2" as Connection72
                        connect Goto4 "Bus Split1.out3" as Connection73
                        connect Junction23 Gain1.out as Connection16
                        connect Junction4 "Deadbus fcn.Vline" as Connection104
                        connect Junction4 Gain2.out as Connection21
                        connect Junction5 "Logical operator4.in1" as Connection22
                        connect "Logical operator3.out" Junction5 as Connection24
                        connect "Logical operator3.in2" "Phase Comparator.Locked" as Connection134
                        connect "Logical operator5.out" "Logical operator7.in" as Connection26
                        connect "Logical operator5.in1" "Relational operator1.out" as Connection27
                        connect "Logical operator5.in" trip_or as Connection28
                        connect "Logical operator7.in1" Junction5 as Connection29
                        connect "Logical operator7.out" "SR Flip Flop1.r_in" as Connection30
                        connect "Phase Comparator.wt_grid" bus_wt as Connection110
                        connect "RMS value1.out" Gain1.in as Connection93
                        connect "RMS value2.out" Gain2.in as Connection97
                        connect "Relational operator1.in1" mode_in as Connection36
                        connect "SR Flip Flop1.out" "Logical operator4.in" as Connection37
                        connect "SR Flip Flop1.out_n" Termination1.in as Connection38
                        connect Va "RMS value1.in" as Connection101
                        connect Vline_a "RMS value2.in" as Connection102
                        connect "Voltage Comparator.V_bus" Junction23 as Connection47
                        connect "Voltage Comparator.V_line" Junction4 as Connection48
                        connect "Voltage Comparator.Locked" "Logical operator3.in" as Connection136
                        connect bool_R25 "Logical operator4.out" as Connection138
                        connect bus_freq Gain3.in as Connection121
                        connect line_wt "Phase Comparator.wt_gen" as Connection111
                    }
                    [
                        position = 8888, 7800
                        size = 120, 232
                    ]

                    component Subsystem "CALC FROM MEASUREMENTS" {
                        layout = dynamic
                        component gen_rms_value "RMS value4" {
                        }
                        [
                            position = 7064, 8128
                        ]

                        component gen_terminator Termination9 {
                        }
                        [
                            position = 7336, 8368
                        ]

                        component gen_gain Gain3 {
                            gain = "10"
                        }
                        [
                            position = 7064, 7792
                        ]

                        component gen_gain Gain9 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7032, 9120
                        ]

                        component gen_rms_value "RMS value6" {
                        }
                        [
                            position = 7064, 8256
                        ]

                        component gen_PQ_transform "PQ Power Meter1" {
                        }
                        [
                            position = 6936, 8952
                        ]

                        component msr_phasor_3ph "Three Phase Phasor1" {
                        }
                        [
                            position = 6904, 7752
                        ]

                        component gen_rms_value "RMS value5" {
                        }
                        [
                            position = 7064, 8192
                        ]

                        component gen_gain Gain5 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8600
                        ]

                        component gen_gain Gain8 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8976
                        ]

                        component gen_terminator Termination13 {
                        }
                        [
                            position = 6864, 9368
                        ]

                        component gen_gain Gain11 {
                            gain = "10.0"
                        }
                        [
                            position = 7432, 8400
                        ]

                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7064, 7984
                        ]

                        component gen_terminator Termination10 {
                        }
                        [
                            position = 6856, 9472
                        ]

                        component "core/Three phase PLL" "Three phase PLL2" {
                        }
                        [
                            position = 6760, 9408
                        ]

                        component gen_gain Gain4 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8504
                        ]

                        component gen_rms_value "RMS value3" {
                        }
                        [
                            position = 7064, 8048
                        ]

                        component gen_terminator Termination4 {
                        }
                        [
                            position = 7088, 9072
                        ]

                        component gen_terminator Termination11 {
                        }
                        [
                            position = 6864, 9256
                        ]

                        component gen_terminator Termination7 {
                        }
                        [
                            position = 7336, 8256
                        ]

                        component gen_gain Gain1 {
                            gain = "10"
                        }
                        [
                            position = 7000, 7592
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7064, 7920
                        ]

                        component "core/Three phase PLL" "Three phase PLL1" {
                        }
                        [
                            position = 7224, 8392
                        ]

                        component gen_terminator Termination3 {
                        }
                        [
                            position = 7048, 9016
                        ]

                        component gen_terminator Termination5 {
                        }
                        [
                            position = 7304, 8488
                        ]

                        component gen_gain Gain2 {
                            gain = "10"
                        }
                        [
                            position = 7048, 7696
                        ]

                        component gen_terminator Termination12 {
                        }
                        [
                            position = 6864, 9312
                        ]

                        component gen_gain Gain6 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8704
                        ]

                        component msr_phasor_3ph "Three Phase Phasor2" {
                        }
                        [
                            position = 6968, 8560
                        ]

                        component gen_terminator Termination8 {
                        }
                        [
                            position = 7336, 8312
                        ]

                        component gen_gain Gain10 {
                            gain = "100.0"
                        }
                        [
                            position = 7064, 9168
                        ]

                        component gen_gain Gain7 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8824
                        ]

                        component Subsystem Subsystem1 {
                            layout = dynamic
                            component gen_abs Abs2 {
                            }
                            [
                                position = 7720, 7896
                            ]

                            component src_constant Constant2 {
                                execution_rate = "Ts"
                                value = "[0]"
                            }
                            [
                                position = 7752, 8048
                            ]

                            component gen_logic_op "Logical operator1" {
                            }
                            [
                                position = 7976, 7856
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7800
                            ]

                            component src_constant Constant1 {
                                execution_rate = "Ts"
                            }
                            [
                                position = 7768, 7856
                            ]

                            component gen_abs Abs1 {
                            }
                            [
                                position = 7720, 7792
                            ]

                            component gen_rel_op "Relational operator4" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8096
                            ]

                            component gen_rel_op "Relational operator3" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8000
                            ]

                            component gen_rel_op "Relational operator2" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7904
                            ]

                            component Subsystem Subsystem3 {
                                layout = dynamic
                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8008
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8032, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 Out1 as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect "Multiport signal switch1.ctrl" u as Connection4
                                connect "Unit Delay1.out" Junction1 as Connection5
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection6
                            }
                            [
                                position = 8152, 8104
                                size = 112, 56
                            ]

                            component Subsystem Subsystem2 {
                                layout = dynamic
                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7576, 8032
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7648, 8056
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8072, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 "Unit Delay1.out" as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect Out1 Junction1 as Connection4
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection5
                                connect u "Multiport signal switch1.ctrl" as Connection6
                            }
                            [
                                position = 8152, 8008
                                size = 112, 56
                            ]

                            port P {
                                label = "P"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 7992
                            ]

                            port Q {
                                label = "Q"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 8088
                            ]

                            port "Lagging or Leading" {
                                label = "Lag or Lead"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8104
                            ]

                            port "Exporting or Importing" {
                                label = "export or import"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8008
                            ]

                            junction Junction1 sp
                            [
                                position = 7560, 8088
                            ]

                            junction Junction4 sp
                            [
                                position = 7592, 7992
                            ]

                            junction Junction11 sp
                            [
                                position = 7808, 7856
                            ]

                            junction Junction13 sp
                            [
                                position = 7824, 8048
                            ]

                            junction Junction14 sp
                            [
                                position = 8040, 8016
                            ]

                            connect Abs1.in Junction1 as Connection1
                            connect Abs1.out "Relational operator1.in" as Connection2
                            connect Abs2.out "Relational operator2.in" as Connection3
                            connect Constant1.out Junction11 as Connection8
                            connect Constant2.out Junction13 as Connection9
                            connect "Exporting or Importing" Subsystem2.Out1 as Connection10
                            connect Junction11 "Relational operator1.in1" as Connection12
                            connect Junction13 "Relational operator3.in1" as Connection14
                            connect Junction14 Subsystem3.E as Connection45
                            connect Junction4 Abs2.in as Connection39
                            connect Junction4 P as Connection18
                            connect "Lagging or Leading" Subsystem3.Out1 as Connection22
                            connect "Logical operator1.out" Junction14 as Connection44
                            connect Q Junction1 as Connection26
                            connect "Relational operator1.out" "Logical operator1.in" as Connection27
                            connect "Relational operator2.in1" Junction11 as Connection28
                            connect "Relational operator2.out" "Logical operator1.in1" as Connection29
                            connect "Relational operator3.in" Junction4 as Connection42
                            connect "Relational operator3.out" Subsystem2.u as Connection31
                            connect "Relational operator4.in" Junction1 as Connection40
                            connect "Relational operator4.in1" Junction13 as Connection32
                            connect "Relational operator4.out" Subsystem3.u as Connection34
                            connect Subsystem2.E Junction14 as Connection46
                        }
                        [
                            position = 7240, 8912
                            size = 112, 80
                        ]

                        port Ia {
                            label = "Ia"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7920
                        ]

                        port Ia_rms {
                            label = "Ia_rms"
                            position = right:7
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7920
                        ]

                        port Ib {
                            label = "Ib"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7984
                        ]

                        port Ib_rms {
                            label = "Ib_rms"
                            position = right:8
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7984
                        ]

                        port Ic {
                            label = "Ic"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8048
                        ]

                        port Ic_rms {
                            label = "Ic_rms"
                            position = right:9
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8048
                        ]

                        port Va {
                            label = "Va"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8128
                        ]

                        port Va_rms {
                            label = "Va_rms"
                            position = right:10
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8128
                        ]

                        port Vb {
                            label = "Vb"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8192
                        ]

                        port Vc {
                            label = "Vc"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8256
                        ]

                        port Vb_rms {
                            label = "Vb_rms"
                            position = right:11
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8192
                        ]

                        port Vc_rms {
                            label = "Vc_rms"
                            position = right:12
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8256
                        ]

                        port P {
                            label = "P"
                            position = right:19
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7160, 8824
                        ]

                        port Q {
                            label = "Q"
                            position = right:20
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7168, 8976
                        ]

                        port S {
                            label = "S"
                            position = right:21
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7112, 9120
                        ]

                        port pf {
                            label = "pf"
                            position = right:22
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7144, 9168
                        ]

                        port Ia_mag {
                            label = "Ia_mag"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7536
                        ]

                        port Ia_phase {
                            label = "Ia_phase"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7592
                        ]

                        port Ib_mag {
                            label = "Ib_mag"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7640
                        ]

                        port Ib_phase {
                            label = "Ib_phase"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7696
                        ]

                        port Ic_mag {
                            label = "Ic_mag"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7744
                        ]

                        port Ic_phase {
                            label = "Ic_phase"
                            position = right:6
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7792
                        ]

                        port Va_mag {
                            label = "Va_mag"
                            position = right:13
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8456
                        ]

                        port Va_phase {
                            label = "Va_phase"
                            position = right:14
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8504
                        ]

                        port Vb_mag {
                            label = "Vb_mag"
                            position = right:15
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8552
                        ]

                        port Vb_phase {
                            label = "Vb_phase"
                            position = right:16
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8600
                        ]

                        port Vc_mag {
                            label = "Vc_mag"
                            position = right:17
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8648
                        ]

                        port Vc_phase {
                            label = "Vc_phase"
                            position = right:18
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8704
                        ]

                        port "Export Import" {
                            label = "Export Import"
                            position = right:28
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7352, 8928
                        ]

                        port "Lag Lead" {
                            label = "Lag Lead"
                            position = right:27
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7416, 8888
                        ]

                        port bus_freq {
                            label = "Bus_freq"
                            position = right:23
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7512, 8400
                        ]

                        port bus_wt {
                            label = "Bus_wt"
                            position = right:24
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7440, 8456
                        ]

                        port Vline_a {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9352
                        ]

                        port Vline_b {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9408
                        ]

                        port Vline_c {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9464
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = right:25
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9416
                        ]

                        port line_wt {
                            label = "Line_wt"
                            position = right:26
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9464
                        ]

                        junction Junction23 sp
                        [
                            position = 6752, 8128
                        ]

                        junction Junction24 sp
                        [
                            position = 6768, 8192
                        ]

                        junction Junction25 sp
                        [
                            position = 6784, 8256
                        ]

                        junction Junction34 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction35 sp
                        [
                            position = 6656, 7920
                        ]

                        junction Junction37 sp
                        [
                            position = 6672, 7984
                        ]

                        junction Junction39 sp
                        [
                            position = 6752, 8360
                        ]

                        junction Junction41 sp
                        [
                            position = 6768, 8392
                        ]

                        junction Junction42 sp
                        [
                            position = 6784, 8424
                        ]

                        junction Junction44 sp
                        [
                            position = 6768, 8568
                        ]

                        junction Junction45 sp
                        [
                            position = 6784, 8584
                        ]

                        junction Junction46 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction48 sp
                        [
                            position = 6752, 8536
                        ]

                        junction Junction49 sp
                        [
                            position = 6928, 8536
                        ]

                        junction Junction50 sp
                        [
                            position = 7056, 8928
                        ]

                        junction Junction51 sp
                        [
                            position = 7056, 8888
                        ]

                        junction Junction52 sp
                        [
                            position = 6752, 8128
                        ]

                        junction Junction53 sp
                        [
                            position = 6656, 7920
                        ]

                        connect "Export Import" "Subsystem1.Exporting or Importing" as Connection116
                        connect Gain1.out Ia_phase as Connection87
                        connect Gain10.in "PQ Power Meter1.k_factor" as Connection105
                        connect Gain11.in "Three phase PLL1.freq" as Connection107
                        connect Gain2.out Ib_phase as Connection89
                        connect Gain3.in "Three Phase Phasor1.phase3" as Connection91
                        connect Gain4.in "Three Phase Phasor2.phase1" as Connection92
                        connect Gain4.out Va_phase as Connection93
                        connect Gain5.out Vb_phase as Connection95
                        connect Gain6.in "Three Phase Phasor2.phase3" as Connection97
                        connect Gain7.in Junction51 as Connection113
                        connect Gain8.in Junction50 as Connection110
                        connect Gain8.out Q as Connection101
                        connect Gain9.in "PQ Power Meter1.apparent" as Connection103
                        connect Ia Junction35 as Connection2
                        connect Ia_mag "Three Phase Phasor1.out1" as Connection3
                        connect Ia_rms "RMS value1.out" as Connection4
                        connect Ib Junction37 as Connection5
                        connect Ib_rms "RMS value2.out" as Connection6
                        connect Ic Junction34 as Connection7
                        connect Ic_phase Gain3.out as Connection90
                        connect Ic_rms "RMS value3.out" as Connection9
                        connect Junction23 Junction39 as Connection10
                        connect Junction23 Va as Connection11
                        connect Junction24 Junction41 as Connection12
                        connect Junction24 "RMS value5.in" as Connection13
                        connect Junction24 Vb as Connection14
                        connect Junction25 Junction42 as Connection15
                        connect Junction25 "RMS value6.in" as Connection16
                        connect Junction37 "RMS value2.in" as Connection18
                        connect Junction39 "Three phase PLL1.va" as Connection20
                        connect Junction41 "Three phase PLL1.vb" as Connection21
                        connect Junction42 "Three phase PLL1.vc" as Connection22
                        connect Junction44 Junction41 as Connection23
                        connect Junction45 Junction42 as Connection24
                        connect Junction46 Junction34 as Connection25
                        connect Junction48 Junction39 as Connection27
                        connect Junction49 Junction48 as Connection28
                        connect Junction50 "PQ Power Meter1.Qdc" as Connection111
                        [
                            breakpoints = 7056, 8928
                        ]
                        connect Junction51 "PQ Power Meter1.Pdc" as Connection114
                        [
                            breakpoints = 7056, 8888
                        ]
                        connect Junction52 Junction23 as Connection119
                        connect Junction53 Junction35 as Connection122
                        connect "Lag Lead" "Subsystem1.Lagging or Leading" as Connection117
                        connect P Gain7.out as Connection98
                        connect "PQ Power Meter1.ia" Junction35 as Connection30
                        connect "PQ Power Meter1.ib" Junction37 as Connection31
                        connect "PQ Power Meter1.vb" Junction44 as Connection33
                        connect "PQ Power Meter1.vc" Junction45 as Connection34
                        connect "PQ Power Meter1.ic" Junction46 as Connection35
                        connect "PQ Power Meter1.va" Junction48 as Connection36
                        connect "RMS value1.in" Junction53 as Connection121
                        connect "RMS value3.in" Junction34 as Connection38
                        connect "RMS value4.in" Junction52 as Connection118
                        connect S Gain9.out as Connection102
                        connect Subsystem1.Q Junction50 as Connection112
                        connect Subsystem1.P Junction51 as Connection115
                        connect Termination10.in "Three phase PLL2.sin_theta" as Connection45
                        connect Termination11.in "Three phase PLL2.d_axis" as Connection46
                        connect Termination12.in "Three phase PLL2.q_axis" as Connection47
                        connect Termination13.in "Three phase PLL2.zero_axis" as Connection48
                        connect Termination3.in "PQ Power Meter1.Pac" as Connection50
                        connect Termination4.in "PQ Power Meter1.Qac" as Connection51
                        connect Termination5.in "Three phase PLL1.sin_theta" as Connection52
                        connect Termination7.in "Three phase PLL1.d_axis" as Connection53
                        connect Termination8.in "Three phase PLL1.q_axis" as Connection54
                        connect Termination9.in "Three phase PLL1.zero_axis" as Connection55
                        connect "Three Phase Phasor1.phase1" Gain1.in as Connection86
                        connect "Three Phase Phasor1.phase2" Gain2.in as Connection88
                        connect "Three Phase Phasor1.out2" Ib_mag as Connection57
                        connect "Three Phase Phasor1.out3" Ic_mag as Connection59
                        connect "Three Phase Phasor1.in2" Junction37 as Connection60
                        connect "Three Phase Phasor1.in3" Junction46 as Connection61
                        connect "Three Phase Phasor1.in_ref" Junction52 as Connection120
                        connect "Three Phase Phasor1.in1" Junction53 as Connection123
                        connect "Three Phase Phasor2.phase2" Gain5.in as Connection94
                        connect "Three Phase Phasor2.in2" Junction44 as Connection64
                        connect "Three Phase Phasor2.in3" Junction45 as Connection65
                        connect "Three Phase Phasor2.in1" Junction49 as Connection67
                        connect "Three Phase Phasor2.in_ref" Junction49 as Connection66
                        connect "Three Phase Phasor2.out1" Va_mag as Connection68
                        connect "Three Phase Phasor2.out2" Vb_mag as Connection70
                        connect "Three Phase Phasor2.out3" Vc_mag as Connection72
                        connect "Three phase PLL2.freq" line_freq as Connection73
                        connect Va_rms "RMS value4.out" as Connection74
                        connect Vb_rms "RMS value5.out" as Connection75
                        connect Vc Junction25 as Connection76
                        connect Vc_phase Gain6.out as Connection96
                        connect Vc_rms "RMS value6.out" as Connection78
                        connect Vline_a "Three phase PLL2.va" as Connection79
                        connect Vline_b "Three phase PLL2.vb" as Connection80
                        connect Vline_c "Three phase PLL2.vc" as Connection81
                        connect bus_freq Gain11.out as Connection106
                        connect bus_wt "Three phase PLL1.theta" as Connection83
                        connect line_wt "Three phase PLL2.theta" as Connection84
                        connect pf Gain10.out as Connection104
                    }
                    [
                        position = 6992, 8104
                        size = 112, 664
                    ]

                    component Subsystem R50512761 {
                        layout = dynamic
                        component src_constant Ts {
                            execution_rate = "Ts"
                            value = "Ts"
                        }
                        [
                            position = 7696, 7712
                            rotation = right
                        ]

                        component gen_c_function Relays {
                            global_variables = "real R50;real R51;real R27;real R59;real n50;real n51;real n59;real n27;real t59;real t50;real t51;real bool_27;real t27;real bool_59;uint i;real bool_51;real bool_50;real A;real B;real P;real Ipu50;real Ipu51;real CT_tap;real ratio[3];real M[3];real t51s[3];real Iinst[3];real Irms[3];real Vrms[3];"
                            in_terminal_dimensions_str = "enable inherit;Ts inherit;Reset inherit;IinstA inherit;IinstB inherit;IinstC inherit;IrmsA inherit;IrmsB inherit;IrmsC inherit;VrmsA inherit;VrmsB inherit;VrmsC inherit;VRMSLN inherit;CT_p inherit;IOC_pickup inherit;IOC_tripDelay inherit;TOC_pickup inherit;curveType inherit;timeDial inherit;UV_pickup inherit;OV_pickup inherit;UVOV_tripDelay inherit;"
                            in_terminal_properties = "real enable;inherit Ts;inherit Reset;inherit IinstA;inherit IinstB;inherit IinstC;inherit IrmsA;inherit IrmsB;inherit IrmsC;inherit VrmsA;inherit VrmsB;inherit VrmsC;inherit VRMSLN;inherit CT_p;inherit IOC_pickup;inherit IOC_tripDelay;inherit TOC_pickup;inherit curveType;inherit timeDial;inherit UV_pickup;inherit OV_pickup;inherit UVOV_tripDelay;"
                            init_fnc = "/*Begin code section*/
R50=0;
R51=0;
R27=0;
R59=0;

n50=0;
n51=0;
n59=0;
n27=0;

CT_tap = 1.0;

A = 5.67;
B = 0.0352;
P = 2.0;

t59 = 0;
t50 = 0;
t51 = 0;
t27 = 0;

bool_27 = 0;
bool_59 = 0;
bool_51 = 0;
bool_50 = 0;
/*End code section*/"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "trip50 inherit;trip51 inherit;trip27 inherit;trip59 inherit;"
                            out_terminal_properties = "real trip50;real trip51;real trip27;real trip59;"
                            output_fnc = "/*Begin code section*/
Iinst[0] = fabs(IinstA);
Iinst[1] = fabs(IinstB);
Iinst[2] = fabs(IinstC);

Irms[0] = IrmsA;
Irms[1] = IrmsB;
Irms[2] = IrmsC;

Vrms[0] = VrmsA;
Vrms[1] = VrmsB;
Vrms[2] = VrmsC;

if (Reset==1) {
    R50=0;
    R51=0;
    R59=0;
    R27=0;
    bool_50 = 0.0;
}

for(i=0; i<3; i++){
    Iinst[i] = Iinst[i]*5.0/CT_p;
    Irms[i] = Irms[i]*5.0/CT_p;
}

if(curveType==1){
    A = 0.0104;
    B = 0.0226;
    P = 0.02;
}
else if(curveType==2){
    A = 5.95;
    B = 0.180;
    P = 2.0;
}
else if(curveType==3){
    A = 3.88;
    B = 0.0923;
    P = 2.0;
}
else{
    A = 5.67;
    B = 0.0352;
    P = 2.0;
}

if (!((R50 == 1) || (R51 == 1))&&(enable==1)){
    
    if((UV_pickup>1)||(UV_pickup==0)){
        UV_pickup = 0.9;
    }
    if((OV_pickup<1)||(OV_pickup==0)){
        OV_pickup = 1.1;
    }
    
    Ipu50 = IOC_pickup*CT_tap*sqrt(2.0);
    Ipu51 = TOC_pickup*CT_tap;
    
    for(i=0; i<3; i++){
        ratio[i] = Vrms[i]/VRMSLN;
        M[i] = Irms[i]/Ipu51;
        if(M[i]<=1.0){
            t51s[i] = 1e6;
        }
        else{
            t51s[i] = timeDial*(B+(A/(pow(M[i],P)-1)));
        }
    }
    
    t27 = 0.004167 + UVOV_tripDelay;
    t50 = 0.004167 + IOC_tripDelay;
    t59 = 0.004167 + UVOV_tripDelay;
    
    if((t51s[0]<=t51s[1])&&(t51s[0]<=t51s[2])){
        t51 = t51s[0];
    }
    else if(t51s[1]<=t51s[2]){
        t51 = t51s[1];
    }
    else{
        t51 = t51s[2];
    }
    
    for(i=0; i<3; i++){
        if(ratio[i]<=UV_pickup){
            bool_27 = 1;
            break;
        }
        else{
            bool_27 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Irms[i]>Ipu51){
            bool_51 = 1;
            break;
        }
        else{
            bool_51 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Iinst[i]>Ipu50){
            bool_50 = 1;
            break;
        }
    }
    for(i=0; i<3; i++){
        if(ratio[i]>=OV_pickup){
            bool_59 = 1;
            break;
        }
        else{
            bool_59 = 0;
        }
    }
    //bool_27 = ((ratio[0]<=UV_pickup)+(ratio[1]<=UV_pickup)+(ratio[2]<=UV_pickup))>0;
    //bool_59 = ((ratio[0]>=OV_pickup)+(ratio[1]>=OV_pickup)+(ratio[2]>=OV_pickup))>0;
    //bool_50 = ((Iinst[0]>Ipu50)+(Iinst[1]>Ipu50)+(Iinst[2]>Ipu50))>0;
    //bool_51 = ((Irms[0]>Ipu51)+(Irms[1]>Ipu51)+(Irms[2]>Ipu51))>0;
    
    n50 *= bool_50;
    n51 *= bool_51;
    n27 *= bool_27;
    n59 *= bool_59;

    n50 += bool_50  * Ts;
    n51 += bool_51  * Ts;
    n27 += bool_27  * Ts;
    n59 += bool_59  * Ts;

    if(n50 > t50)
        R50 = 1;
    else
        R50 = 0;

    if(n51 > t51)
        R51 = 1;
    else
        R51 = 0;

    if(n27 > t27)
        R27 = 1;
    else
        R27 = 0;

    if(n59 > t59)
        R59 = 1;
    else
        R59 = 0;
}

trip50 = R50;
trip51 = R51;
trip27 = R27;
trip59 = R59;
/*End code section*/"
                        }
                        [
                            position = 7784, 8008
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "10"
                        }
                        [
                            position = 7560, 8248
                            rotation = left
                        ]

                        port trip_50 {
                            label = "trip_50"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7848
                        ]

                        port trip_51 {
                            label = "trip_51"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7952
                        ]

                        port trip_59 {
                            label = "trip_59"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8160
                        ]

                        port trip_27 {
                            label = "trip_27"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8056
                        ]

                        port relay_param {
                            label = "Relay Param"
                            position = left:12
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7560, 8328
                            rotation = left
                        ]

                        port Irms_c {
                            label = "Irms_c"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7368, 7752
                            rotation = right
                        ]

                        port Irms_a {
                            label = "Irms_a"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7472, 7752
                            rotation = right
                        ]

                        port Enable {
                            label = "Enable"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7736, 7752
                            rotation = right
                        ]

                        port Iinst_a {
                            label = "Iinst_a"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7608, 7712
                            rotation = right
                        ]

                        port Irms_b {
                            label = "Irms_b"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7424, 7712
                            rotation = right
                        ]

                        port Iinst_b {
                            label = "Iinst_b"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7568, 7752
                            rotation = right
                        ]

                        port Reset {
                            label = "Reset"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7656, 7752
                            rotation = right
                        ]

                        port Iinst_c {
                            label = "Iinst_c"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7520, 7712
                            rotation = right
                        ]

                        port Vrms_b {
                            label = "Vrms_b"
                            position = left:10
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7256, 7752
                            rotation = right
                        ]

                        port Vrms_c {
                            label = "Vrms_c"
                            position = left:11
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7200, 7712
                            rotation = right
                        ]

                        port Vrms_a {
                            label = "Vrms_a"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7312, 7712
                            rotation = right
                        ]

                        comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus split:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                        [
                            position = 7728, 8224
                        ]

                        connect "Bus Split1.out5" Relays.curveType as Connection41
                        connect "Bus Split1.out4" Relays.TOC_pickup as Connection42
                        connect "Bus Split1.out3" Relays.IOC_tripDelay as Connection43
                        connect "Bus Split1.out6" Relays.timeDial as Connection40
                        connect "Bus Split1.out2" Relays.IOC_pickup as Connection44
                        connect "Bus Split1.out9" Relays.UVOV_tripDelay as Connection37
                        connect "Bus Split1.out" Relays.VRMSLN as Connection46
                        connect "Bus Split1.out8" Relays.OV_pickup as Connection38
                        connect "Bus Split1.out1" Relays.CT_p as Connection45
                        connect "Bus Split1.out7" Relays.UV_pickup as Connection39
                        connect "Bus Split1.in" relay_param as Connection36
                        connect Enable Relays.enable as Connection47
                        connect Iinst_a Relays.IinstA as Connection50
                        connect Iinst_b Relays.IinstB as Connection51
                        connect Iinst_c Relays.IinstC as Connection52
                        connect Irms_a Relays.IrmsA as Connection53
                        connect Irms_b Relays.IrmsB as Connection54
                        connect Irms_c Relays.IrmsC as Connection55
                        connect Reset Relays.Reset as Connection49
                        connect Ts.out Relays.Ts as Connection48
                        connect Vrms_a Relays.VrmsA as Connection56
                        connect Vrms_b Relays.VrmsB as Connection57
                        connect Vrms_c Relays.VrmsC as Connection58
                        connect trip_27 Relays.trip27 as Connection77
                        connect trip_50 Relays.trip50 as Connection76
                        connect trip_51 Relays.trip51 as Connection75
                        connect trip_59 Relays.trip59 as Connection78
                    }
                    [
                        position = 8424, 8328
                        size = 144, 304
                    ]

                    port OUTPUT {
                        label = "OUTPUT"
                        position = bottom:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9704, 8056
                    ]

                    port Ia {
                        label = "Ia"
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7816
                    ]

                    port Ib {
                        label = "Ib"
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7888
                    ]

                    port Ic {
                        label = "Ic"
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7960
                    ]

                    port Va {
                        label = "Va"
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8032
                    ]

                    port Vb {
                        label = "Vb"
                        position = left:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8104
                    ]

                    port Vc {
                        label = "Vc"
                        position = left:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8176
                    ]

                    port Vline_a {
                        label = "Vline_A"
                        position = left:7
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8248
                    ]

                    port faults_status {
                        label = "Fault_status"
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8272
                    ]

                    port TO_MODBUS {
                        label = "To_Modbus"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8024, 8080
                    ]

                    port Vline_b {
                        label = "Vline_B"
                        position = left:8
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8320
                    ]

                    port Vline_c {
                        label = "Vline_C"
                        position = left:9
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8392
                    ]

                    port cb_state {
                        label = "cb_state"
                        position = left:10
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7312, 8624
                    ]

                    port pf_states {
                        label = "pf_state"
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8416
                        scale = 1, -1
                    ]

                    port from_Modbus {
                        label = "From Modbus"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8144, 7976
                    ]

                    tag Goto16 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7928
                    ]

                    tag From11 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8880, 8256
                    ]

                    tag From20 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8240
                    ]

                    tag From1 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7600, 8280
                        rotation = right
                    ]

                    tag Goto20 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7232, 7760
                        rotation = left
                    ]

                    tag From7 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9072, 8224
                        rotation = down
                        scale = -1, -1
                    ]

                    tag From17 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7752
                    ]

                    tag From29 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8032
                    ]

                    tag From31 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9096, 8424
                    ]

                    tag From10 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8272
                    ]

                    tag Goto8 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8216
                    ]

                    tag Goto5 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9088, 7752
                    ]

                    tag Goto15 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7856
                    ]

                    tag Goto17 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7104, 7760
                        rotation = left
                    ]

                    tag Goto24 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 8304
                    ]

                    tag From37 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7848
                    ]

                    tag From3 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7392, 8384
                    ]

                    tag Goto2 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8248
                    ]

                    tag From4 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7448, 8464
                    ]

                    tag From35 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8456
                    ]

                    tag From14 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7704
                    ]

                    tag From12 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9032, 8288
                    ]

                    tag Goto3 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8336
                    ]

                    tag From26 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8432
                    ]

                    tag Goto21 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 7688
                        rotation = left
                    ]

                    tag From8 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9104, 8304
                    ]

                    tag From18 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7800
                    ]

                    tag From36 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8216
                    ]

                    tag Goto18 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7088, 7688
                        rotation = left
                    ]

                    tag Goto6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9640, 8096
                    ]

                    tag Goto10 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8272
                    ]

                    tag Goto12 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7224, 8256
                    ]

                    tag From2 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7480, 8288
                    ]

                    tag From21 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8264
                    ]

                    tag Goto23 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 8000
                        scale = 1, -1
                    ]

                    tag From32 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8104
                    ]

                    tag Goto14 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7784
                    ]

                    tag Goto27 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7976
                        scale = 1, -1
                    ]

                    tag From33 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9120, 8080
                    ]

                    tag Goto25 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8320
                    ]

                    tag From15 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7728
                    ]

                    tag From25 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8360
                    ]

                    tag Goto9 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8000
                    ]

                    tag From5 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7520, 8504
                    ]

                    tag Goto19 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 7832
                        rotation = left
                    ]

                    tag From19 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7824
                    ]

                    tag From27 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8408
                    ]

                    tag From9 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8992, 8240
                        rotation = down
                        scale = -1, 1
                    ]

                    tag From34 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7896
                    ]

                    tag Goto11 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7376, 8256
                    ]

                    tag Goto29 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 7952
                        scale = 1, -1
                    ]

                    tag From13 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8320
                    ]

                    tag From24 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8312
                    ]

                    tag From30 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9024, 8408
                    ]

                    tag Goto28 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7928
                        scale = 1, -1
                    ]

                    tag Goto1 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8160
                    ]

                    tag From6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7584, 8560
                        rotation = right
                    ]

                    tag Goto22 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7248, 7832
                        rotation = left
                    ]

                    tag From16 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7776
                    ]

                    tag From22 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8288
                    ]

                    tag Goto7 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 8024
                        scale = 1, -1
                    ]

                    tag Goto4 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8424
                    ]

                    tag Goto13 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7296, 8288
                    ]

                    tag Goto26 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8296, 8152
                    ]

                    tag From28 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8384
                    ]

                    tag From23 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8336
                    ]

                    tag Goto34 {
                        value = "F3_CB8_BREAKER"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7432, 7832
                        hide_name = True
                    ]

                    tag Goto33 {
                        value = "F3_CB8_FREQUENCY"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7432, 7808
                        hide_name = True
                    ]

                    tag Goto32 {
                        value = "F3_CB8_VOLTAGE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7432, 7784
                        hide_name = True
                    ]

                    tag Goto31 {
                        value = "F3_CB8_P_REACTIVE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7432, 7760
                        hide_name = True
                    ]

                    tag Goto30 {
                        value = "F3_CB8_P_REAL"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7432, 7736
                        hide_name = True
                    ]

                    junction Junction51 sp
                    [
                        position = 8720, 8056
                    ]

                    junction Junction100 sp
                    [
                        position = 8536, 8192
                    ]

                    junction Junction101 sp
                    [
                        position = 8536, 8280
                    ]

                    junction Junction104 sp
                    [
                        position = 9016, 7800
                    ]

                    junction Junction105 sp
                    [
                        position = 9584, 8056
                    ]

                    junction Junction106 sp
                    [
                        position = 7368, 8624
                    ]

                    junction Junction108 sp
                    [
                        position = 6688, 8248
                    ]

                    junction Junction109 sp
                    [
                        position = 6696, 8032
                    ]

                    junction Junction110 sp
                    [
                        position = 7304, 8240
                    ]

                    junction Junction111 sp
                    [
                        position = 6640, 7816
                    ]

                    junction Junction112 sp
                    [
                        position = 6640, 7888
                    ]

                    junction Junction113 sp
                    [
                        position = 6640, 7960
                    ]

                    junction Junction114 sp
                    [
                        position = 7088, 7984
                    ]

                    junction Junction115 sp
                    [
                        position = 7104, 8000
                    ]

                    junction Junction116 sp
                    [
                        position = 7120, 8016
                    ]

                    junction Junction117 sp
                    [
                        position = 7216, 8032
                    ]

                    junction Junction118 sp
                    [
                        position = 7232, 8048
                    ]

                    junction Junction119 sp
                    [
                        position = 7248, 8064
                    ]

                    junction Junction120 sp
                    [
                        position = 8536, 8368
                    ]

                    junction Junction121 sp
                    [
                        position = 8536, 8456
                    ]

                    junction Junction122 sp
                    [
                        position = 8216, 8192
                    ]

                    junction Junction123 sp
                    [
                        position = 7288, 8176
                    ]

                    junction Junction124 sp
                    [
                        position = 7296, 8192
                    ]

                    junction Junction125 sp
                    [
                        position = 7160, 8032
                    ]

                    junction Junction126 sp
                    [
                        position = 7320, 8240
                    ]

                    junction Junction127 sp
                    [
                        position = 7344, 8624
                    ]

                    junction Junction128 sp
                    [
                        position = 7288, 7736
                    ]

                    junction Junction129 sp
                    [
                        position = 7296, 7760
                    ]

                    comment Comment4 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Status</p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8256
                    ]

                    comment Comment2 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52A</p></body></html> ENDCOMMENT 
                    [
                        position = 7400, 8568
                    ]

                    comment Comment5 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">pf_states </p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8400
                    ]

                    comment Comment3 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52B</p></body></html> ENDCOMMENT 
                    [
                        position = 7432, 8720
                    ]

                    connect "Bus Join1.in21" "CALC FROM MEASUREMENTS.pf" as Connection149
                    connect "Bus Join1.in20" "CALC FROM MEASUREMENTS.S" as Connection144
                    connect "Bus Join1.in3" "CALC FROM MEASUREMENTS.Ib_phase" as Connection132
                    connect "Bus Join1.in5" "CALC FROM MEASUREMENTS.Ic_phase" as Connection133
                    connect "Bus Join1.in17" "CALC FROM MEASUREMENTS.Vc_phase" as Connection140
                    connect "Bus Join1.in13" "CALC FROM MEASUREMENTS.Va_phase" as Connection134
                    connect "Bus Join1.in15" "CALC FROM MEASUREMENTS.Vb_phase" as Connection135
                    connect "Bus Join1.in6" Junction114 as Connection268
                    connect "Bus Join1.in9" Junction117 as Connection283
                    connect "Bus Join1.in10" Junction118 as Connection286
                    connect "Bus Join1.in18" Junction123 as Connection382
                    connect "Bus Join1.in19" Junction124 as Connection385
                    connect "Bus Join1.in22" Junction126 as Connection391
                    connect "CALC FROM MEASUREMENTS.Ib_mag" "Bus Join1.in2" as Connection6
                    connect "CALC FROM MEASUREMENTS.Ic_mag" "Bus Join1.in4" as Connection2
                    connect "CALC FROM MEASUREMENTS.Ia_mag" "Bus Join1.in" as Connection5
                    connect "CALC FROM MEASUREMENTS.Ia_phase" "Bus Join1.in1" as Connection131
                    connect "CALC FROM MEASUREMENTS.Vc_mag" "Bus Join1.in16" as Connection4
                    connect "CALC FROM MEASUREMENTS.Va_mag" "Bus Join1.in12" as Connection3
                    connect "CALC FROM MEASUREMENTS.Vb_mag" "Bus Join1.in14" as Connection1
                    connect "CALC FROM MEASUREMENTS.line_freq" Goto10 as Connection224
                    connect "CALC FROM MEASUREMENTS.line_wt" Goto13 as Connection245
                    connect "CALC FROM MEASUREMENTS.Vline_a" Junction108 as Connection217
                    connect "CALC FROM MEASUREMENTS.Va" Junction109 as Connection218
                    connect "CALC FROM MEASUREMENTS.Ia" Junction111 as Connection257
                    connect "CALC FROM MEASUREMENTS.Ib" Junction112 as Connection256
                    connect "CALC FROM MEASUREMENTS.Ic" Junction113 as Connection258
                    connect "CALC FROM MEASUREMENTS.Ib_rms" Junction115 as Connection271
                    connect "CALC FROM MEASUREMENTS.Ic_rms" Junction116 as Connection274
                    connect "CALC FROM MEASUREMENTS.Vc_rms" Junction119 as Connection289
                    connect "Control Panel Input1.out" Junction122 as Connection381
                    connect From1 Sum1.in as Connection167
                    connect From10 bitwise_faults.R50 as Connection197
                    connect From11 bitwise_faults.R27 as Connection195
                    connect From12 bitwise_faults.R51 as Connection199
                    connect From13 bitwise_faults.Reset as Connection210
                    connect From14 "Relay 25-Sync Check1.Va" as Connection219
                    connect From15 "Relay 25-Sync Check1.Vline_a" as Connection220
                    connect From16 "Relay 25-Sync Check1.line_freq" as Connection225
                    connect From17 "Relay 25-Sync Check1.bus_freq" as Connection238
                    connect From18 "Relay 25-Sync Check1.bus_wt" as Connection244
                    connect From19 "Relay 25-Sync Check1.line_wt" as Connection246
                    connect From2 Gain1.in as Connection168
                    connect From20 R50512761.Iinst_a as Connection336
                    connect From21 R50512761.Iinst_b as Connection337
                    connect From22 R50512761.Iinst_c as Connection338
                    connect From23 R50512761.Irms_b as Connection340
                    connect From24 R50512761.Irms_a as Connection339
                    connect From25 R50512761.Irms_c as Connection341
                    connect From26 R50512761.Vrms_c as Connection344
                    connect From27 R50512761.Vrms_b as Connection343
                    connect From28 R50512761.Vrms_a as Connection342
                    connect From29 "State Condition Mng.op_mode" as Connection309
                    connect From3 Gain4.in as Connection169
                    connect From30 "pf bitwise.exp_imp" as Connection313
                    connect From31 "pf bitwise.lag_lead" as Connection312
                    connect From32 "State Condition Mng.enable" as Connection318
                    connect From33 "State Condition Mng.initial_condition" as Connection319
                    connect From34 "Relay 25-Sync Check1.relay_paramR25" as Connection320
                    connect From35 R50512761.relay_param as Connection321
                    connect From36 R50512761.Reset as Connection335
                    connect From37 "Relay 25-Sync Check1.mode_in" as Connection334
                    connect From4 Gain5.in as Connection171
                    connect From5 Gain6.in as Connection173
                    connect From7 bitwise_faults.Status as Connection203
                    connect From8 bitwise_faults.R59 as Connection201
                    connect From9 bitwise_faults.R25 as Connection193
                    connect Gain1.out Sum1.in1 as Connection21
                    connect Gain4.out Sum1.in2 as Connection170
                    connect Gain5.out Sum1.in3 as Connection172
                    connect Gain6.out Sum1.in4 as Connection174
                    connect Gain7.out Sum3.in1 as Connection180
                    connect Gain8.in Junction106 as Connection186
                    connect Gain8.out Sum3.in2 as Connection183
                    connect Goto1 Junction100 as Connection152
                    connect Goto11 Junction110 as Connection242
                    connect Goto12 "CALC FROM MEASUREMENTS.bus_wt" as Connection243
                    connect Goto14 Junction111 as Connection249
                    connect Goto15 Junction112 as Connection252
                    connect Goto16 Junction113 as Connection255
                    connect Goto17 Junction115 as Connection273
                    connect Goto19 Junction116 as Connection276
                    connect Goto2 Junction101 as Connection155
                    connect Goto22 Junction119 as Connection367
                    connect Goto23 Relay_Param.op_mode as Connection329
                    connect Goto24 "CALC FROM MEASUREMENTS.Lag Lead" as Connection310
                    connect Goto25 "CALC FROM MEASUREMENTS.Export Import" as Connection311
                    connect Goto27 Relay_Param.Initial_condition as Connection331
                    connect Goto28 Relay_Param.relay_param as Connection333
                    connect Goto29 Relay_Param.relay_paramR25 as Connection332
                    connect Goto30 Junction128 as Connection399
                    connect Goto31 Junction129 as Connection402
                    connect Goto32 normalize.out as Connection397
                    connect Goto33 Junction126 as Connection393
                    connect Goto34 Junction127 as Connection396
                    connect Goto4 Junction121 as Connection298
                    connect Goto5 Junction104 as Connection164
                    connect Goto6 Junction105 as Connection178
                    connect Goto7 Relay_Param.reset as Connection330
                    connect Goto8 Junction108 as Connection213
                    connect Goto9 Junction109 as Connection216
                    connect Ia Junction111 as Connection247
                    connect Ib Junction112 as Connection250
                    connect Ic Junction113 as Connection253
                    connect Junction100 "Logical operator1.in" as Connection196
                    connect Junction101 "Logical operator1.in1" as Connection198
                    connect Junction101 R50512761.trip_51 as Connection154
                    connect Junction104 "State Condition Mng.R25" as Connection303
                    connect Junction105 "Unit Delay4.out" as Connection202
                    connect Junction106 not.in as Connection185
                    connect Junction110 "CALC FROM MEASUREMENTS.bus_freq" as Connection241
                    connect Junction114 "CALC FROM MEASUREMENTS.Ia_rms" as Connection269
                    connect Junction114 Goto18 as Connection355
                    connect Junction115 "Bus Join1.in7" as Connection272
                    connect Junction116 "Bus Join1.in8" as Connection275
                    connect Junction117 Goto21 as Connection365
                    connect Junction117 Junction125 as Connection388
                    connect Junction118 "CALC FROM MEASUREMENTS.Vb_rms" as Connection287
                    connect Junction118 Goto20 as Connection366
                    connect Junction119 "Bus Join1.in11" as Connection290
                    connect Junction120 Goto3 as Connection296
                    connect Junction121 R50512761.trip_59 as Connection299
                    connect Junction122 Goto26 as Connection380
                    connect Junction123 "CALC FROM MEASUREMENTS.P" as Connection383
                    connect Junction124 "CALC FROM MEASUREMENTS.Q" as Connection386
                    connect Junction125 "CALC FROM MEASUREMENTS.Va_rms" as Connection389
                    connect Junction126 Junction110 as Connection392
                    connect Junction127 Junction106 as Connection395
                    connect Junction128 Junction123 as Connection400
                    connect Junction129 Junction124 as Connection403
                    connect Junction51 "State Condition Mng.Trip_in" as Connection302
                    connect "Logical operator1.in2" Junction120 as Connection297
                    connect "Logical operator1.in3" Junction121 as Connection300
                    connect "Logical operator1.out" Junction51 as Connection79
                    connect OUTPUT Junction105 as Connection176
                    connect P.in Junction128 as Connection401
                    connect Q.in Junction129 as Connection404
                    connect R50512761.trip_50 Junction100 as Connection150
                    connect R50512761.trip_27 Junction120 as Connection295
                    connect R50512761.Enable Junction122 as Connection379
                    connect "Relay 25-Sync Check1.bool_R25" Junction104 as Connection162
                    connect "Relay 25-Sync Check1.trip_or" Junction51 as Connection94
                    connect Sum3.in From6 as Connection179
                    connect Sum3.out "Unit Delay5.in" as Connection190
                    connect TO_MODBUS "Bus Join1.out" as Connection101
                    connect "Unit Delay2.out" "Bus Join1.in23" as Connection175
                    connect "Unit Delay2.in" Sum1.out as Connection104
                    connect "Unit Delay4.in" "State Condition Mng.trip_out" as Connection304
                    connect "Unit Delay5.out" "Bus Join1.in24" as Connection191
                    connect Va Junction109 as Connection214
                    connect Vb "CALC FROM MEASUREMENTS.Vb" as Connection108
                    connect Vc "CALC FROM MEASUREMENTS.Vc" as Connection109
                    connect Vline_a Junction108 as Connection211
                    connect Vline_b "CALC FROM MEASUREMENTS.Vline_b" as Connection111
                    connect Vline_c "CALC FROM MEASUREMENTS.Vline_c" as Connection112
                    connect cb_state Junction127 as Connection394
                    connect faults_status bitwise_faults.fault_status as Connection368
                    connect from_Modbus Relay_Param.from_Modbus as Connection328
                    connect normalize.in Junction125 as Connection398
                    connect not.out Gain7.in as Connection181
                    connect "pf bitwise.pf_states" pf_states as Connection369

                    CT_primary = "3500"
                    R27P_R59P_tripDelay = "2"
                    R27P_pickup1 = "0.7"
                    R27P_pickup2 = ".5"
                    R50P_pickup1 = "20"
                    R50P_tripDelay2 = "0"
                    R51P_curveType2 = "1"
                    R51P_pickup1 = "1.19"
                    R51P_pickup2 = "1.19"
                    R51P_timeDial2 = "1"
                    R59P_pickup2 = "1.2"
                    VRMSLL = "480"
                    dV_threshold = "10"

                    mask {
                        description = "This block implements the relay SEL 787 with protective functions 25 (synchronism check), 27 (Under Voltage), 50 (Instantaneous Overcurrent), 51 (Time Overcurrent) and 59 (Overvoltage). 

he relay outputs to Modbus are: 0 - Ia_mag; 1 - Ia_phase; 2 - Ib_mag; 3 - Ib_phase; 4 - Ic_mag; 5 - Ic_phase; 6 - Ia_rms; 7 - Ib_rms; 8 - Ic_rms; 9 - Va_rms; 10 - Vb_rms; 11 - Vc_rms; 12 - Va_mag; 13 - Va_phase; 14 - Vb_mag; 15 - Vb_phase; 16 - Vc_mag; 17 - Vc_phase; 18 - P; 19 - Q; 20 - S; 21 - pf; 22 - Bus_freq; 23 - protection functions status; 24 - Circuit Breaker status.

he relay inputs from Modbus are: 2001 - op_mode; 2002 - Reset; 2003 - protection_mode.

he trip pickups for functions 50 and 51 are defined as currents in the secondary of the current transformer. The secondary ot the CT has 5 turns."

                        VRMSLL {
                            label = "Line to Line RMS voltage"
                            widget = edit
                            type = generic
                            default_value = "13800.0"
                            unit = "V"
                            group = "Base Parameters"
                        }

                        dV_threshold {
                            label = "Voltage deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "5.0"
                            unit = "%"
                            group = "Base Parameters"
                        }

                        angle_threshold {
                            label = "Angle deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "12.0"
                            unit = "degree"
                            group = "Base Parameters"
                        }

                        dF_threshold {
                            label = "Frequency deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Hz"
                            group = "Base Parameters"
                        }

                        R27P_R59P_tripDelay {
                            label = "R27 UV and R59 OV trip delay"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Sec"
                            group = "Base Parameters"
                        }

                        CT_primary {
                            label = "CT primary turns number"
                            widget = edit
                            type = generic
                            default_value = "600"
                            group = "Base Parameters"
                        }

                        Initial_status {
                            label = "Initial relay status"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "Base Parameters"
                        }

                        R50P_pickup1 {
                            label = "R50 IOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R50P_tripDelay1 {
                            label = "R50 IOC trip delay 1"
                            widget = edit
                            type = generic
                            default_value = "0"
                            unit = "sec"
                            group = "GridTied Parameters"
                        }

                        R51P_pickup1 {
                            label = "R51 TOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.8"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R51P_curveType1 {
                            label = "R51 TOC curve type 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R51P_timeDial1 {
                            label = "R51 TOC time dial 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R27P_pickup1 {
                            label = "R27 UV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R59P_pickup1 {
                            label = "R59 OV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R50P_pickup2 {
                            label = "R50 IOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R50P_tripDelay2 {
                            label = "R50 IOC trip delay 2"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            unit = "sec"
                            group = "Islanded Parameters"
                        }

                        R51P_pickup2 {
                            label = "R51 TOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.7"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R51P_curveType2 {
                            label = "R51 TOC curve type 2"
                            widget = edit
                            type = generic
                            default_value = "2.0"
                            group = "Islanded Parameters"
                        }

                        R51P_timeDial2 {
                            label = "R51 TOC time dial 2"
                            widget = edit
                            type = generic
                            default_value = "3.0"
                            group = "Islanded Parameters"
                        }

                        R27P_pickup2 {
                            label = "R27 UV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        R59P_pickup2 {
                            label = "R59 OV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE
                    }
                }
                [
                    position = 7952, 8168
                    size = 152, 240
                ]

                port Brk_cmd {
                    label = "Brk_cmd"
                    position = bottom:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7792, 8496
                    rotation = right
                ]

                port IABC {
                    label = "IABC"
                    position = right:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7792, 7936
                ]

                port VABC_load {
                    label = "VABC_load"
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7528, 7928
                ]

                port VABC_grid {
                    label = "VABC_grid"
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7648, 7928
                ]

                junction Junction1391 sp
                [
                    position = 8120, 7928
                ]

                junction Junction1392 sp
                [
                    position = 8120, 7976
                ]

                junction Junction1393 sp
                [
                    position = 7952, 8344
                ]

                junction Junction1396 sp
                [
                    position = 7792, 8448
                ]

                junction Junction1397 sp
                [
                    position = 7648, 8344
                ]

                comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset the relay when input is 1</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Operation Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 1 force the breaker closed</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 0 turns on logic based operation</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Protection Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 1 use islanded parameters</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 0 use grid tied parameters</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                [
                    position = 7968, 8328
                ]

                connect Brk_cmd Junction1396 as Connection899
                connect "Bus Split1.in" IABC as Connection907
                connect "Bus Split1.out" SEL_787.Ia as Connection908
                connect "Bus Split1.out2" SEL_787.Ic as Connection910
                connect "Bus Split1.out1" SEL_787.Ib as Connection909
                connect "Bus Split2.out2" SEL_787.Vc as Connection914
                connect "Bus Split2.out" SEL_787.Va as Connection912
                connect "Bus Split2.out1" SEL_787.Vb as Connection913
                connect "Bus Split3.out1" SEL_787.Vline_b as Connection929
                connect "Bus Split3.out" SEL_787.Vline_a as Connection928
                connect "Bus Split3.out2" SEL_787.Vline_c as Connection930
                connect CB_state.in Junction1397 as Connection905
                connect Constant2.out "Signal switch1.in1" as Connection880
                connect Delay1.out "Signal switch1.in" as Connection2
                connect Junction1391 Constant1.out as Connection852
                connect Junction1391 "ModBus Device1.coil_in" as Connection313
                connect Junction1392 Junction1391 as Connection314
                connect Junction1393 Delay1.in as Connection867
                connect Junction1396 "Signal switch1.out" as Connection902
                connect Junction1397 Junction1396 as Connection904
                connect "ModBus Device1.discrete_in" Junction1392 as Connection467
                connect "ModBus Device1.holding_in" Junction1392 as Connection466
                connect "ModBus Device1.holding_out" SEL_787.from_Modbus as Connection932
                connect "ModBus Device1.coil_out" Term3.in as Connection854
                connect SEL_787.OUTPUT Junction1393 as Connection868
                connect SEL_787.cb_state Junction1397 as Connection903
                connect SEL_787.TO_MODBUS "ModBus Device1.reg_in" as Connection931
                connect SEL_787.pf_states Term4.in as Connection897
                connect "Signal switch1.in2" Junction1393 as Connection866
                connect Term5.in SEL_787.faults_status as Connection870
                connect VABC_grid "Bus Split2.in" as Connection934
                connect VABC_load "Bus Split3.in" as Connection933
            }
            [
                position = 8000, 8200
                rotation = left
                size = 136, 72
            ]

            component Subsystem Brk {
                layout = dynamic
                component "core/Triple Pole Single Throw Contactor" S1 {
                    ctrl_src = "Model"
                }
                [
                    position = 8104, 8184
                    rotation = right
                ]

                port C {
                    position = left:1
                    kind = pe
                }
                [
                    position = 8200, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 8104, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port A {
                    position = left:3
                    kind = pe
                }
                [
                    position = 8008, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port c {
                    position = right:1
                    kind = pe
                }
                [
                    position = 8200, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port b {
                    position = right:2
                    kind = pe
                }
                [
                    position = 8104, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port a {
                    position = right:3
                    kind = pe
                }
                [
                    position = 8008, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port control {
                    position = bottom:auto
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8320, 8184
                    scale = -1, 1
                ]

                connect A S1.c_in as Connection6
                connect B S1.b_in as Connection5
                connect S1.a_in C as Connection4
                connect S1.c_out a as Connection1
                connect S1.b_out b as Connection2
                connect S1.a_out c as Connection3
                connect control S1.ctrl_in as Connection7
            }
            [
                position = 8144, 8200
                rotation = right
                size = 64, 64
            ]

            component Subsystem Meas2 {
                layout = dynamic
                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7960, 8120
                    rotation = left
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8192
                    rotation = right
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8320
                    rotation = right
                ]

                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8256
                    rotation = right
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8192
                        rotation = right
                    ]

                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8192
                        rotation = right
                    ]

                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8192
                        rotation = right
                    ]

                    port P1 {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port P2 {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port P3 {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port P4 {
                        position = bottom:1
                        kind = pe
                    }
                    [
                        position = 8136, 8272
                        rotation = left
                    ]

                    port P5 {
                        position = bottom:2
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    port P6 {
                        position = bottom:3
                        kind = pe
                    }
                    [
                        position = 8248, 8272
                        rotation = left
                    ]

                    connect R1.p_node P1 as Connection1
                    connect R1.n_node P4 as Connection3
                    connect R2.p_node P2 as Connection6
                    connect R2.n_node P5 as Connection4
                    connect R3.p_node P3 as Connection2
                    connect R3.n_node P6 as Connection5
                }
                [
                    position = 7400, 8232
                    size = 64, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7152, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7152, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7152, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7960, 8064
                    rotation = left
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1470 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1471 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1472 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1474 pe
                [
                    position = 7400, 8432
                ]

                junction Junction1475 pe
                [
                    position = 7416, 8432
                ]

                junction Junction1476 pe
                [
                    position = 7568, 8432
                ]

                junction Junction1477 pe
                [
                    position = 7416, 8120
                ]

                junction Junction1478 pe
                [
                    position = 7400, 8024
                ]

                junction Junction1479 pe
                [
                    position = 7384, 7928
                ]

                connect A Junction1479 as Connection435
                [
                    breakpoints = 7312, 7928
                ]
                connect Junction1421 Junction1476 as Connection426
                [
                    breakpoints = 7648, 8432; 7648, 8432; 7648, 8432
                ]
                connect Junction1470 VA.p_node as Connection389
                connect Junction1471 Junction1478 as Connection432
                [
                    breakpoints = 7648, 8024
                ]
                connect Junction1471 b as Connection392
                connect Junction1472 Junction1477 as Connection429
                [
                    breakpoints = 7568, 8120; 7424, 8120
                ]
                connect Junction1472 VC.p_node as Connection395
                connect Junction1474 res_for_meas.P5 as Connection403
                [
                    breakpoints = 7400, 8432; 7400, 8312
                ]
                connect Junction1475 Junction1474 as Connection425
                [
                    breakpoints = 7416, 8432
                ]
                connect Junction1475 Junction1476 as Connection428
                connect Junction1476 VC.n_node as Connection427
                [
                    breakpoints = 7568, 8432
                ]
                connect Junction1477 C as Connection430
                connect Junction1478 B as Connection433
                [
                    breakpoints = 7368, 8024
                ]
                connect Junction1479 Junction1470 as Connection436
                connect V "Bus Join1.out" as Connection385
                connect VA.out "Bus Join1.in" as Connection397
                connect VA.n_node Junction1421 as Connection237
                connect VB.out "Bus Join1.in1" as Connection398
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1471 as Connection391
                connect VC.out "Bus Join1.in2" as Connection399
                connect a Junction1470 as Connection388
                connect c Junction1472 as Connection394
                connect res_for_meas.P4 Junction1474 as Connection401
                [
                    breakpoints = 7384, 8312
                ]
                connect res_for_meas.P6 Junction1475 as Connection424
                connect res_for_meas.P3 Junction1477 as Connection431
                connect res_for_meas.P2 Junction1478 as Connection434
                connect res_for_meas.P1 Junction1479 as Connection437
            }
            [
                position = 8144, 8312
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            component Subsystem Meas1 {
                layout = dynamic
                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8288
                    rotation = right
                ]

                component "core/Current Measurement" IB {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7432, 8024
                ]

                component "core/Current Measurement" IA {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7368, 7928
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8224
                    rotation = right
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8352
                    rotation = right
                ]

                component "core/Current Measurement" IC {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7496, 8120
                ]

                component gen_bus_join "Bus Join2" {
                    inputs = "3"
                }
                [
                    position = 7576, 7784
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7936, 8168
                    rotation = left
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8192
                        rotation = right
                    ]

                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8192
                        rotation = right
                    ]

                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8192
                        rotation = right
                    ]

                    port P1 {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port P2 {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port P3 {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port P4 {
                        position = bottom:1
                        kind = pe
                    }
                    [
                        position = 8136, 8272
                        rotation = left
                    ]

                    port P5 {
                        position = bottom:2
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    port P6 {
                        position = bottom:3
                        kind = pe
                    }
                    [
                        position = 8248, 8272
                        rotation = left
                    ]

                    connect R1.p_node P1 as Connection1
                    connect R1.n_node P4 as Connection3
                    connect R2.p_node P2 as Connection6
                    connect R2.n_node P5 as Connection4
                    connect R3.p_node P3 as Connection2
                    connect R3.n_node P6 as Connection5
                }
                [
                    position = 7264, 8232
                    size = 64, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7104, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7104, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7104, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7936, 8112
                    rotation = left
                ]

                port I {
                    position = top:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7648, 7784
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1466 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1467 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1468 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1473 pe
                [
                    position = 7280, 8432
                ]

                junction Junction1474 pe
                [
                    position = 7264, 8432
                ]

                junction Junction1475 pe
                [
                    position = 7280, 8432
                ]

                junction Junction1476 pe
                [
                    position = 7568, 8432
                ]

                junction Junction1477 pe
                [
                    position = 7280, 8120
                ]

                junction Junction1478 pe
                [
                    position = 7264, 8024
                ]

                junction Junction1479 pe
                [
                    position = 7248, 7928
                ]

                connect B Junction1478 as Connection444
                [
                    breakpoints = 7256, 8024
                ]
                connect "Bus Join1.in1" VB.out as Connection387
                connect "Bus Join1.in2" VC.out as Connection388
                connect "Bus Join2.out" I as Connection393
                connect "Bus Join2.in1" IB.out as Connection391
                connect "Bus Join2.in2" IC.out as Connection392
                connect IA.out "Bus Join2.in" as Connection390
                connect IA.n_node Junction1466 as Connection377
                connect IA.p_node Junction1479 as Connection447
                connect IC.p_node Junction1477 as Connection441
                [
                    breakpoints = 7448, 8120; 7312, 8120
                ]
                connect Junction1421 Junction1476 as Connection438
                [
                    breakpoints = 7648, 8432; 7648, 8432
                ]
                connect Junction1466 a as Connection299
                connect Junction1467 IB.n_node as Connection375
                connect Junction1467 b as Connection301
                connect Junction1468 IC.n_node as Connection376
                connect Junction1468 c as Connection302
                connect Junction1473 Junction1475 as Connection436
                connect Junction1473 Junction1476 as Connection440
                connect Junction1474 res_for_meas.P5 as Connection403
                [
                    breakpoints = 7264, 8424; 7264, 8304
                ]
                connect Junction1475 Junction1474 as Connection437
                connect Junction1476 VC.n_node as Connection439
                [
                    breakpoints = 7568, 8432
                ]
                connect Junction1477 C as Connection442
                [
                    breakpoints = 7144, 8120
                ]
                connect Junction1478 IB.p_node as Connection445
                connect Junction1479 A as Connection448
                [
                    breakpoints = 7200, 7928
                ]
                connect V "Bus Join1.out" as Connection385
                connect V "Bus Join1.out" as Connection389
                connect VA.out "Bus Join1.in" as Connection386
                connect VA.n_node Junction1421 as Connection237
                connect VA.p_node Junction1466 as Connection240
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1467 as Connection243
                connect VC.p_node Junction1468 as Connection246
                connect res_for_meas.P6 Junction1473 as Connection402
                connect res_for_meas.P4 Junction1474 as Connection401
                [
                    breakpoints = 7248, 8304
                ]
                connect res_for_meas.P3 Junction1477 as Connection443
                connect res_for_meas.P2 Junction1478 as Connection446
                connect res_for_meas.P1 Junction1479 as Connection449
            }
            [
                position = 8144, 8096
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            port b {
                position = bottom:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 8432
                rotation = left
            ]

            port a {
                position = bottom:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 8472
                rotation = left
            ]

            port B {
                position = top:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 7976
                rotation = right
            ]

            port c {
                position = bottom:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8392
                rotation = left
            ]

            port A {
                position = top:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 7936
                rotation = right
            ]

            port C {
                position = top:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8016
                rotation = right
            ]

            connect A Meas1.A as Connection2628
            connect Brk.c Meas2.C as Connection2631
            connect Brk.a Meas2.A as Connection2633
            connect C Meas1.C as Connection2630
            connect MID_Rly1.Brk_cmd Brk.control as Connection2604
            connect MID_Rly1.VABC_load Meas2.V as Connection2624
            connect Meas1.B B as Connection2629
            connect Meas1.c Brk.C as Connection2625
            connect Meas1.b Brk.B as Connection2626
            [
                breakpoints = 8144, 8160
            ]
            connect Meas1.a Brk.A as Connection2627
            connect Meas1.I MID_Rly1.IABC as Connection2622
            connect Meas1.V MID_Rly1.VABC_grid as Connection2623
            connect Meas2.B Brk.b as Connection2632
            connect Meas2.a a as Connection2634
            connect Meas2.c c as Connection2636
            connect b Meas2.b as Connection2635
        }
        [
            position = 11096, 8752
            size = 80, 48
        ]

        component Subsystem F3_CB3 {
            layout = dynamic
            component Subsystem Meas1 {
                layout = dynamic
                component "core/Current Measurement" IA {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7368, 7928
                ]

                component "core/Current Measurement" IC {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7496, 8120
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8352
                    rotation = right
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8224
                    rotation = right
                ]

                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8288
                    rotation = right
                ]

                component "core/Current Measurement" IB {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7432, 8024
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7936, 8168
                    rotation = left
                ]

                component gen_bus_join "Bus Join2" {
                    inputs = "3"
                }
                [
                    position = 7576, 7784
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8192
                        rotation = right
                    ]

                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8192
                        rotation = right
                    ]

                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8192
                        rotation = right
                    ]

                    port P1 {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port P2 {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port P3 {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port P4 {
                        position = bottom:1
                        kind = pe
                    }
                    [
                        position = 8136, 8272
                        rotation = left
                    ]

                    port P5 {
                        position = bottom:2
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    port P6 {
                        position = bottom:3
                        kind = pe
                    }
                    [
                        position = 8248, 8272
                        rotation = left
                    ]

                    connect R1.p_node P1 as Connection1
                    connect R1.n_node P4 as Connection3
                    connect R2.p_node P2 as Connection6
                    connect R2.n_node P5 as Connection4
                    connect R3.p_node P3 as Connection2
                    connect R3.n_node P6 as Connection5
                }
                [
                    position = 7296, 8264
                    size = 64, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7208, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7208, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7208, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7936, 8112
                    rotation = left
                ]

                port I {
                    position = top:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7648, 7784
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1466 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1467 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1468 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1470 pe
                [
                    position = 7296, 8432
                ]

                junction Junction1471 pe
                [
                    position = 7280, 7928
                ]

                junction Junction1472 pe
                [
                    position = 7296, 8024
                ]

                junction Junction1473 pe
                [
                    position = 7312, 8120
                ]

                junction Junction1474 pe
                [
                    position = 7312, 8432
                ]

                junction Junction1475 pe
                [
                    position = 7568, 8432
                ]

                connect A Junction1471 as Connection403
                connect B Junction1472 as Connection406
                connect "Bus Join1.in1" VB.out as Connection387
                connect "Bus Join1.in2" VC.out as Connection388
                connect "Bus Join2.out" I as Connection393
                connect "Bus Join2.in1" IB.out as Connection391
                connect "Bus Join2.in2" IC.out as Connection392
                connect C Junction1473 as Connection409
                connect IA.out "Bus Join2.in" as Connection390
                connect IA.n_node Junction1466 as Connection377
                connect Junction1421 Junction1475 as Connection414
                [
                    breakpoints = 7648, 8432; 7648, 8432
                ]
                connect Junction1466 a as Connection299
                connect Junction1467 IB.n_node as Connection375
                connect Junction1467 b as Connection301
                connect Junction1468 IC.n_node as Connection376
                connect Junction1468 c as Connection302
                connect Junction1470 Junction1474 as Connection412
                [
                    breakpoints = 7296, 8432
                ]
                connect Junction1470 res_for_meas.P5 as Connection396
                [
                    breakpoints = 7296, 8432; 7296, 8416
                ]
                connect Junction1471 IA.p_node as Connection404
                connect Junction1472 IB.p_node as Connection407
                connect Junction1473 IC.p_node as Connection410
                connect Junction1474 Junction1475 as Connection416
                [
                    breakpoints = 7312, 8432; 7568, 8432
                ]
                connect Junction1474 res_for_meas.P6 as Connection413
                [
                    breakpoints = 7312, 8416
                ]
                connect Junction1475 VC.n_node as Connection415
                connect V "Bus Join1.out" as Connection389
                connect V "Bus Join1.out" as Connection385
                connect VA.out "Bus Join1.in" as Connection386
                connect VA.n_node Junction1421 as Connection237
                connect VA.p_node Junction1466 as Connection240
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1467 as Connection243
                connect VC.p_node Junction1468 as Connection246
                connect res_for_meas.P4 Junction1470 as Connection395
                [
                    breakpoints = 7280, 8416
                ]
                connect res_for_meas.P1 Junction1471 as Connection405
                connect res_for_meas.P2 Junction1472 as Connection408
                connect res_for_meas.P3 Junction1473 as Connection411
            }
            [
                position = 8144, 8096
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            component Subsystem Meas2 {
                layout = dynamic
                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7960, 8120
                    rotation = left
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8320
                    rotation = right
                ]

                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8256
                    rotation = right
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8192
                    rotation = right
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8192
                        rotation = right
                    ]

                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8192
                        rotation = right
                    ]

                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8192
                        rotation = right
                    ]

                    port P1 {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port P2 {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port P3 {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port P4 {
                        position = bottom:1
                        kind = pe
                    }
                    [
                        position = 8136, 8272
                        rotation = left
                    ]

                    port P5 {
                        position = bottom:2
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    port P6 {
                        position = bottom:3
                        kind = pe
                    }
                    [
                        position = 8248, 8272
                        rotation = left
                    ]

                    connect R1.p_node P1 as Connection1
                    connect R1.n_node P4 as Connection3
                    connect R2.p_node P2 as Connection6
                    connect R2.n_node P5 as Connection4
                    connect R3.p_node P3 as Connection2
                    connect R3.n_node P6 as Connection5
                }
                [
                    position = 7464, 8280
                    size = 64, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7400, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7400, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7400, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7960, 8064
                    rotation = left
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1470 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1471 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1472 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1473 pe
                [
                    position = 7464, 8432
                ]

                junction Junction1474 pe
                [
                    position = 7480, 8432
                ]

                junction Junction1475 pe
                [
                    position = 7568, 8432
                ]

                junction Junction1476 pe
                [
                    position = 7448, 7928
                ]

                junction Junction1477 pe
                [
                    position = 7464, 8024
                ]

                junction Junction1478 pe
                [
                    position = 7480, 8120
                ]

                connect A Junction1476 as Connection411
                connect B Junction1477 as Connection414
                connect C Junction1478 as Connection417
                connect Junction1421 Junction1475 as Connection408
                [
                    breakpoints = 7648, 8432; 7648, 8432
                ]
                connect Junction1470 VA.p_node as Connection389
                connect Junction1471 b as Connection392
                connect Junction1472 VC.p_node as Connection395
                connect Junction1473 res_for_meas.P5 as Connection402
                [
                    breakpoints = 7464, 8432; 7464, 8360
                ]
                connect Junction1474 Junction1473 as Connection407
                [
                    breakpoints = 7480, 8432
                ]
                connect Junction1474 Junction1475 as Connection410
                [
                    breakpoints = 7480, 8432; 7568, 8432
                ]
                connect Junction1475 VC.n_node as Connection409
                connect Junction1476 Junction1470 as Connection412
                connect Junction1477 Junction1471 as Connection415
                connect Junction1478 Junction1472 as Connection418
                connect V "Bus Join1.out" as Connection385
                connect VA.out "Bus Join1.in" as Connection397
                connect VA.n_node Junction1421 as Connection237
                connect VB.out "Bus Join1.in1" as Connection398
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1471 as Connection391
                connect VC.out "Bus Join1.in2" as Connection399
                connect a Junction1470 as Connection388
                connect c Junction1472 as Connection394
                connect res_for_meas.P4 Junction1473 as Connection400
                [
                    breakpoints = 7448, 8360
                ]
                connect res_for_meas.P6 Junction1474 as Connection406
                connect res_for_meas.P1 Junction1476 as Connection413
                connect res_for_meas.P2 Junction1477 as Connection416
                connect res_for_meas.P3 Junction1478 as Connection419
            }
            [
                position = 8144, 8312
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            component Subsystem Brk {
                layout = dynamic
                component "core/Triple Pole Single Throw Contactor" S1 {
                    ctrl_src = "Model"
                }
                [
                    position = 8104, 8184
                    rotation = right
                ]

                port C {
                    position = left:1
                    kind = pe
                }
                [
                    position = 8200, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 8104, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port A {
                    position = left:3
                    kind = pe
                }
                [
                    position = 8008, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port c {
                    position = right:1
                    kind = pe
                }
                [
                    position = 8200, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port b {
                    position = right:2
                    kind = pe
                }
                [
                    position = 8104, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port a {
                    position = right:3
                    kind = pe
                }
                [
                    position = 8008, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port control {
                    position = bottom:auto
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8320, 8184
                    scale = -1, 1
                ]

                connect A S1.c_in as Connection6
                connect B S1.b_in as Connection5
                connect S1.a_in C as Connection4
                connect S1.c_out a as Connection1
                connect S1.b_out b as Connection2
                connect S1.a_out c as Connection3
                connect control S1.ctrl_in as Connection7
            }
            [
                position = 8144, 8200
                rotation = right
                size = 64, 64
            ]

            component Subsystem MID_Rly1 {
                layout = dynamic
                component gen_delay Delay1 {
                    del_length = "int(3.0/60.0/Ts)"
                }
                [
                    position = 7880, 8344
                    rotation = down
                ]

                component gen_terminator Term3 {
                }
                [
                    position = 8440, 7928
                ]

                component gen_terminator Term4 {
                }
                [
                    position = 8152, 8200
                    rotation = down
                    scale = -1, 1
                ]

                component src_constant Constant2 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 7776, 8344
                    rotation = right
                ]

                component gen_bus_split "Bus Split1" {
                    outputs = "3"
                }
                [
                    position = 7832, 8000
                    rotation = right
                ]

                component gen_bus_split "Bus Split2" {
                    outputs = "3"
                }
                [
                    position = 7704, 8000
                    rotation = right
                ]

                component sys_signal_switch "Signal switch1" {
                    threshold = "0.5"
                }
                [
                    position = 7792, 8400
                    rotation = right
                ]

                component gen_bus_split "Bus Split3" {
                    outputs = "3"
                }
                [
                    position = 7576, 8000
                    rotation = right
                ]

                component src_constant Constant1 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 8056, 7928
                ]

                component gen_probe CB_state {
                }
                [
                    position = 7592, 8344
                    rotation = down
                ]

                component gen_terminator Term5 {
                }
                [
                    position = 8152, 8136
                    rotation = down
                    scale = -1, 1
                ]

                component "core/ModBus Device" "ModBus Device1" {
                    configuration = "configF3_CB3"
                    execution_rate = "Ts"
                }
                [
                    position = 8272, 8000
                    size = 184, 184
                ]

                component Subsystem SEL_787 {
                    layout = dynamic
                    component gen_c_function bitwise_faults {
                        in_terminal_dimensions_str = "Status inherit;R25 inherit;R27 inherit;R50 inherit;R51 inherit;R59 inherit;Reset inherit;"
                        in_terminal_properties = "inherit Status;inherit R25;inherit R27;inherit R50;inherit R51;inherit R59;inherit Reset;"
                        no_feed_inputs = "[]"
                        no_feed_outputs = "[]"
                        out_terminal_dimensions_str = "fault_status inherit;"
                        out_terminal_properties = "uint fault_status;"
                        output_fnc = "/*Begin code section*/
fault_status= (uint)Status<<1 | (uint)R25<<2 | (uint)R27<<3 | (uint)R50<<4 | (uint)R51<<5 | (uint)R59<<6 | (uint)Reset<<7;
/*End code section*/"
                    }
                    [
                        position = 9200, 8272
                    ]

                    component gen_c_function "pf bitwise" {
                        in_terminal_dimensions_str = "exp_imp inherit;lag_lead inherit;"
                        in_terminal_properties = "inherit exp_imp;inherit lag_lead;"
                        no_feed_inputs = "[u\'\']"
                        no_feed_outputs = "[u\'\']"
                        out_terminal_dimensions_str = "pf_states inherit;"
                        out_terminal_properties = "uint pf_states;"
                        output_fnc = "/*Begin code section*/
pf_states=(uint)exp_imp<<1 | (uint)lag_lead<<2;
/*End code section*/"
                    }
                    [
                        position = 9200, 8416
                    ]

                    component tm_delay "Unit Delay4" {
                    }
                    [
                        position = 9496, 8056
                    ]

                    component gen_gain Gain5 {
                        gain = "8"
                    }
                    [
                        position = 7512, 8432
                        rotation = left
                    ]

                    component tm_delay "Unit Delay5" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7840, 8392
                        rotation = left
                    ]

                    component gen_logic_op not {
                        operator = "NOT"
                    }
                    [
                        position = 7440, 8624
                    ]

                    component gen_sum Sum1 {
                        signs = "5"
                    }
                    [
                        position = 7648, 8384
                    ]

                    component tm_delay "Unit Delay2" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7728, 8304
                        rotation = left
                    ]

                    component gen_gain Gain8 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8688
                    ]

                    component gen_bus_join "Bus Join1" {
                        inputs = "25"
                    }
                    [
                        position = 7928, 8080
                    ]

                    component gen_sum Sum3 {
                        signs = "3"
                    }
                    [
                        position = 7640, 8624
                    ]

                    component gen_gain Gain1 {
                        gain = "2"
                    }
                    [
                        position = 7536, 8328
                        rotation = right
                    ]

                    component gen_gain Gain7 {
                        gain = "2"
                    }
                    [
                        position = 7512, 8624
                    ]

                    component gen_gain Gain4 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8384
                    ]

                    component gen_gain Gain6 {
                        gain = "16"
                    }
                    [
                        position = 7584, 8456
                        rotation = left
                    ]

                    component gen_logic_op "Logical operator1" {
                        inputs = "4"
                        operator = "OR"
                    }
                    [
                        position = 8720, 8128
                        rotation = left
                    ]

                    component src_scada_input "Control Panel Input1" {
                        execution_rate = "Ts"
                        max = "1"
                        min = "0"
                        unit = ""
                    }
                    [
                        position = 8136, 8192
                    ]

                    component gen_gain normalize {
                        gain = "np.sqrt(3.0)/13800.0"
                    }
                    [
                        position = 7304, 7768
                    ]

                    component gen_probe trip_cmd {
                    }
                    [
                        position = 9592, 7824
                    ]

                    component gen_probe trip_in {
                    }
                    [
                        position = 8968, 8008
                    ]

                    component gen_probe Q {
                    }
                    [
                        position = 7360, 7656
                    ]

                    component gen_probe P {
                    }
                    [
                        position = 7360, 7608
                    ]

                    component Subsystem "Relay 25-Sync Check1" {
                        layout = dynamic
                        component gen_c_function "Deadbus fcn" {
                            global_variables = "real threshold;uint a;uint c;uint b;"
                            in_terminal_dimensions_str = "Vbus inherit;Vline inherit;VRMSLL inherit;"
                            in_terminal_properties = "real Vbus;real Vline;real VRMSLL;"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "out inherit;"
                            output_fnc = "/*Begin code section*/
if (VRMSLL > 400)
    threshold=VRMSLL*0.003;
else
    threshold = VRMSLL*0.05;

if ((Vbus > (VRMSLL*0.90)) && (Vbus < (VRMSLL*1.20)) && (Vline < threshold))
    a = 1;
else
    a = 0;

if ((Vline > (VRMSLL*0.90)) && (Vline < (VRMSLL*1.20)) && (Vbus < threshold))
    b = 1;
else
    b = 0;

if ((Vline < threshold) && (Vbus < threshold))
    c = 1;
else
    c = 0;

out = a || b || c;
/*End code section*/"
                        }
                        [
                            position = 8208, 7672
                        ]

                        component gen_rel_op "Relational operator1" {
                        }
                        [
                            position = 8464, 7856
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "4"
                        }
                        [
                            position = 7808, 8424
                        ]

                        component gen_gain Gain1 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7776
                        ]

                        component src_constant Constant2 {
                            execution_rate = "Ts"
                            value = "[2]"
                        }
                        [
                            position = 8368, 7848
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8808, 7904
                        ]

                        component gen_logic_op "Logical operator7" {
                            operator = "OR"
                        }
                        [
                            position = 8632, 7888
                        ]

                        component gen_logic_op "Logical operator3" {
                            inputs = "3"
                        }
                        [
                            position = 8336, 8104
                        ]

                        component gen_logic_op "Logical operator4" {
                            operator = "OR"
                        }
                        [
                            position = 8888, 8096
                        ]

                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7784, 7832
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7784, 7776
                        ]

                        component gen_logic_op "Logical operator5" {
                            operator = "OR"
                        }
                        [
                            position = 8544, 7848
                        ]

                        component gen_gain Gain3 {
                            gain = "1.0/10.0"
                        }
                        [
                            position = 7776, 8080
                        ]

                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8736, 7864
                        ]

                        component gen_gain Gain2 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7832
                        ]

                        component Subsystem "Phase Comparator" {
                            layout = dynamic
                            component gen_probe c_out {
                                addr = "17943"
                            }
                            [
                                position = 7768, 8000
                            ]

                            component gen_c_function "C function1" {
                                global_variables = "real mod_L;real wrap_out1;real wrap_out2;real mod_B;real k;real alpha;real PI2;real PI;"
                                in_terminal_dimensions_str = "phase_bus inherit;phase_line inherit;"
                                in_terminal_properties = "real phase_bus;real phase_line;"
                                init_fnc = "/*Begin code section*/
PI = 3.1415926536;
PI2 = 2*PI;
/*End code section*/"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
mod_L=fmod(phase_line, PI2);
mod_B=fmod(phase_bus, PI2);

if (fabs(mod_L - mod_B) > PI) {
    if (mod_L < mod_B)
        mod_B -= PI2;
    else
        mod_B += PI2;
}

out=fabs(mod_L-mod_B)*180.0/PI;
/*End code section*/"
                            }
                            [
                                position = 7656, 8040
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7808, 8056
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8056
                            ]

                            port wt_grid {
                                label = "wt_grid"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8008
                            ]

                            port wt_gen {
                                label = "wt_gen"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8072
                            ]

                            port angle_threshold {
                                label = "angle_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7576, 8136
                            ]

                            junction Junction1 sp
                            [
                                position = 7736, 8048
                            ]

                            connect Junction1 "C function1.out" as Connection2
                            connect Locked "Relational operator1.out" as Connection3
                            connect "Relational operator1.in" Junction1 as Connection4
                            connect angle_threshold "Relational operator1.in1" as Connection8
                            connect c_out.in Junction1 as Connection5
                            connect wt_gen "C function1.phase_line" as Connection6
                            connect wt_grid "C function1.phase_bus" as Connection7
                        }
                        [
                            position = 8016, 8272
                            size = 112, 88
                        ]

                        component Subsystem "Voltage Comparator" {
                            layout = dynamic
                            component gen_c_function "C function1" {
                                in_terminal_dimensions_str = "Vbus inherit;Vline inherit;"
                                in_terminal_properties = "real Vbus;inherit Vline;"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
out=fabs(Vline-Vbus);
/*End code section*/"
                            }
                            [
                                position = 7736, 8040
                            ]

                            component gen_product Product1 {
                            }
                            [
                                position = 7760, 8160
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7856, 8048
                            ]

                            component gen_gain Gain1 {
                                gain = "0.01"
                            }
                            [
                                position = 7680, 8200
                            ]

                            port V_bus {
                                label = "V_bus"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port V_line {
                                label = "V_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7928, 8048
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8152
                            ]

                            port dV_threshold {
                                label = "dV_threshold"
                                position = left:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8200
                            ]

                            connect Gain1.in dV_threshold as Connection8
                            connect Product1.in1 Gain1.out as Connection7
                            connect Product1.out "Relational operator1.in1" as Connection9
                            connect Product1.in VRMSLL as Connection6
                            connect "Relational operator1.in" "C function1.out" as Connection2
                            connect "Relational operator1.out" Locked as Connection3
                            connect V_bus "C function1.Vbus" as Connection4
                            connect V_line "C function1.Vline" as Connection5
                        }
                        [
                            position = 8016, 7864
                            size = 112, 208
                        ]

                        component Subsystem "Freq Comparator" {
                            layout = dynamic
                            component gen_c_function "C function1" {
                                in_terminal_dimensions_str = "fbus inherit;fline inherit;"
                                in_terminal_properties = "real fbus;inherit fline;"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
out=fabs(fline-fbus);
/*End code section*/"
                            }
                            [
                                position = 7736, 8040
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7832, 8048
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8048
                            ]

                            port f_bus {
                                label = "f_bus"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port f_line {
                                label = "f_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port dF_threshold {
                                label = "dF_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7728, 8112
                            ]

                            connect "Relational operator1.in" "C function1.out" as Connection6
                            connect "Relational operator1.out" Locked as Connection8
                            connect "Relational operator1.in1" dF_threshold as Connection7
                            connect f_bus "C function1.fbus" as Connection4
                            connect f_line "C function1.fline" as Connection5
                        }
                        [
                            position = 8016, 8104
                            size = 112, 88
                        ]

                        port trip_or {
                            label = "trip_or"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7792
                        ]

                        port mode_in {
                            label = "mode_in"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7896
                        ]

                        port bool_R25 {
                            label = "bool_R25"
                            position = auto:auto
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9032, 8096
                        ]

                        port Va {
                            label = "Va"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7776
                        ]

                        port Vline_a {
                            label = "Vline_A"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7832
                        ]

                        port bus_freq {
                            label = "bus_freq"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8080
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7824, 8104
                        ]

                        port bus_wt {
                            label = "bus_wt"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7776, 8248
                        ]

                        port line_wt {
                            label = "line_wt"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7832, 8272
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8424
                        ]

                        tag Goto4 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8448
                        ]

                        tag Goto1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8056, 8400
                            rotation = down
                            scale = -1, 1
                        ]

                        tag From2 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8128
                        ]

                        tag From3 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7944
                        ]

                        tag From1 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8296
                        ]

                        tag Goto2 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8416
                            rotation = down
                            scale = -1, 1
                        ]

                        tag Goto3 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7912, 8432
                        ]

                        tag From4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7888
                        ]

                        tag From5 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8112, 7688
                        ]

                        junction Junction4 sp
                        [
                            position = 7920, 7832
                        ]

                        junction Junction5 sp
                        [
                            position = 8536, 8104
                        ]

                        junction Junction23 sp
                        [
                            position = 7904, 7776
                        ]

                        connect "Bus Split1.in" relay_paramR25 as Connection69
                        connect Constant2.out "Relational operator1.in" as Connection1
                        connect "Deadbus fcn.Vbus" Junction23 as Connection103
                        connect "Deadbus fcn.out" "SR Flip Flop1.s_in" as Connection137
                        connect "Freq Comparator.Locked" "Logical operator3.in1" as Connection135
                        connect "Freq Comparator.f_line" line_freq as Connection133
                        connect From1 "Phase Comparator.angle_threshold" as Connection74
                        connect From2 "Freq Comparator.dF_threshold" as Connection79
                        connect From3 "Voltage Comparator.dV_threshold" as Connection80
                        connect From4 "Voltage Comparator.VRMSLL" as Connection81
                        connect From5 "Deadbus fcn.VRMSLL" as Connection90
                        connect Gain3.out "Freq Comparator.f_bus" as Connection132
                        connect Goto1 "Bus Split1.out" as Connection70
                        connect Goto2 "Bus Split1.out1" as Connection71
                        connect Goto3 "Bus Split1.out2" as Connection72
                        connect Goto4 "Bus Split1.out3" as Connection73
                        connect Junction23 Gain1.out as Connection16
                        connect Junction4 "Deadbus fcn.Vline" as Connection104
                        connect Junction4 Gain2.out as Connection21
                        connect Junction5 "Logical operator4.in1" as Connection22
                        connect "Logical operator3.out" Junction5 as Connection24
                        connect "Logical operator3.in2" "Phase Comparator.Locked" as Connection134
                        connect "Logical operator5.out" "Logical operator7.in" as Connection26
                        connect "Logical operator5.in1" "Relational operator1.out" as Connection27
                        connect "Logical operator5.in" trip_or as Connection28
                        connect "Logical operator7.in1" Junction5 as Connection29
                        connect "Logical operator7.out" "SR Flip Flop1.r_in" as Connection30
                        connect "Phase Comparator.wt_grid" bus_wt as Connection110
                        connect "RMS value1.out" Gain1.in as Connection93
                        connect "RMS value2.out" Gain2.in as Connection97
                        connect "Relational operator1.in1" mode_in as Connection36
                        connect "SR Flip Flop1.out" "Logical operator4.in" as Connection37
                        connect "SR Flip Flop1.out_n" Termination1.in as Connection38
                        connect Va "RMS value1.in" as Connection101
                        connect Vline_a "RMS value2.in" as Connection102
                        connect "Voltage Comparator.V_bus" Junction23 as Connection47
                        connect "Voltage Comparator.V_line" Junction4 as Connection48
                        connect "Voltage Comparator.Locked" "Logical operator3.in" as Connection136
                        connect bool_R25 "Logical operator4.out" as Connection138
                        connect bus_freq Gain3.in as Connection121
                        connect line_wt "Phase Comparator.wt_gen" as Connection111
                    }
                    [
                        position = 8888, 7800
                        size = 120, 232
                    ]

                    component Subsystem R50512761 {
                        layout = dynamic
                        component gen_bus_split "Bus Split1" {
                            outputs = "10"
                        }
                        [
                            position = 7560, 8248
                            rotation = left
                        ]

                        component src_constant Ts {
                            execution_rate = "Ts"
                            value = "Ts"
                        }
                        [
                            position = 7696, 7712
                            rotation = right
                        ]

                        component gen_c_function Relays {
                            global_variables = "real R50;real R51;real R27;real R59;real n50;real n51;real n59;real n27;real t59;real t50;real t51;real bool_27;real t27;real bool_59;uint i;real bool_51;real bool_50;real A;real B;real P;real Ipu50;real Ipu51;real CT_tap;real ratio[3];real M[3];real t51s[3];real Iinst[3];real Irms[3];real Vrms[3];"
                            in_terminal_dimensions_str = "enable inherit;Ts inherit;Reset inherit;IinstA inherit;IinstB inherit;IinstC inherit;IrmsA inherit;IrmsB inherit;IrmsC inherit;VrmsA inherit;VrmsB inherit;VrmsC inherit;VRMSLN inherit;CT_p inherit;IOC_pickup inherit;IOC_tripDelay inherit;TOC_pickup inherit;curveType inherit;timeDial inherit;UV_pickup inherit;OV_pickup inherit;UVOV_tripDelay inherit;"
                            in_terminal_properties = "real enable;inherit Ts;inherit Reset;inherit IinstA;inherit IinstB;inherit IinstC;inherit IrmsA;inherit IrmsB;inherit IrmsC;inherit VrmsA;inherit VrmsB;inherit VrmsC;inherit VRMSLN;inherit CT_p;inherit IOC_pickup;inherit IOC_tripDelay;inherit TOC_pickup;inherit curveType;inherit timeDial;inherit UV_pickup;inherit OV_pickup;inherit UVOV_tripDelay;"
                            init_fnc = "/*Begin code section*/
R50=0;
R51=0;
R27=0;
R59=0;

n50=0;
n51=0;
n59=0;
n27=0;

CT_tap = 1.0;

A = 5.67;
B = 0.0352;
P = 2.0;

t59 = 0;
t50 = 0;
t51 = 0;
t27 = 0;

bool_27 = 0;
bool_59 = 0;
bool_51 = 0;
bool_50 = 0;
/*End code section*/"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "trip50 inherit;trip51 inherit;trip27 inherit;trip59 inherit;"
                            out_terminal_properties = "real trip50;real trip51;real trip27;real trip59;"
                            output_fnc = "/*Begin code section*/
Iinst[0] = fabs(IinstA);
Iinst[1] = fabs(IinstB);
Iinst[2] = fabs(IinstC);

Irms[0] = IrmsA;
Irms[1] = IrmsB;
Irms[2] = IrmsC;

Vrms[0] = VrmsA;
Vrms[1] = VrmsB;
Vrms[2] = VrmsC;

if (Reset==1) {
    R50=0;
    R51=0;
    R59=0;
    R27=0;
    bool_50 = 0.0;
}

for(i=0; i<3; i++){
    Iinst[i] = Iinst[i]*5.0/CT_p;
    Irms[i] = Irms[i]*5.0/CT_p;
}

if(curveType==1){
    A = 0.0104;
    B = 0.0226;
    P = 0.02;
}
else if(curveType==2){
    A = 5.95;
    B = 0.180;
    P = 2.0;
}
else if(curveType==3){
    A = 3.88;
    B = 0.0923;
    P = 2.0;
}
else{
    A = 5.67;
    B = 0.0352;
    P = 2.0;
}

if (!((R50 == 1) || (R51 == 1))&&(enable==1)){
    
    if((UV_pickup>1)||(UV_pickup==0)){
        UV_pickup = 0.9;
    }
    if((OV_pickup<1)||(OV_pickup==0)){
        OV_pickup = 1.1;
    }
    
    Ipu50 = IOC_pickup*CT_tap*sqrt(2.0);
    Ipu51 = TOC_pickup*CT_tap;
    
    for(i=0; i<3; i++){
        ratio[i] = Vrms[i]/VRMSLN;
        M[i] = Irms[i]/Ipu51;
        if(M[i]<=1.0){
            t51s[i] = 1e6;
        }
        else{
            t51s[i] = timeDial*(B+(A/(pow(M[i],P)-1)));
        }
    }
    
    t27 = 0.004167 + UVOV_tripDelay;
    t50 = 0.004167 + IOC_tripDelay;
    t59 = 0.004167 + UVOV_tripDelay;
    
    if((t51s[0]<=t51s[1])&&(t51s[0]<=t51s[2])){
        t51 = t51s[0];
    }
    else if(t51s[1]<=t51s[2]){
        t51 = t51s[1];
    }
    else{
        t51 = t51s[2];
    }
    
    for(i=0; i<3; i++){
        if(ratio[i]<=UV_pickup){
            bool_27 = 1;
            break;
        }
        else{
            bool_27 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Irms[i]>Ipu51){
            bool_51 = 1;
            break;
        }
        else{
            bool_51 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Iinst[i]>Ipu50){
            bool_50 = 1;
            break;
        }
    }
    for(i=0; i<3; i++){
        if(ratio[i]>=OV_pickup){
            bool_59 = 1;
            break;
        }
        else{
            bool_59 = 0;
        }
    }
    //bool_27 = ((ratio[0]<=UV_pickup)+(ratio[1]<=UV_pickup)+(ratio[2]<=UV_pickup))>0;
    //bool_59 = ((ratio[0]>=OV_pickup)+(ratio[1]>=OV_pickup)+(ratio[2]>=OV_pickup))>0;
    //bool_50 = ((Iinst[0]>Ipu50)+(Iinst[1]>Ipu50)+(Iinst[2]>Ipu50))>0;
    //bool_51 = ((Irms[0]>Ipu51)+(Irms[1]>Ipu51)+(Irms[2]>Ipu51))>0;
    
    n50 *= bool_50;
    n51 *= bool_51;
    n27 *= bool_27;
    n59 *= bool_59;

    n50 += bool_50  * Ts;
    n51 += bool_51  * Ts;
    n27 += bool_27  * Ts;
    n59 += bool_59  * Ts;

    if(n50 > t50)
        R50 = 1;
    else
        R50 = 0;

    if(n51 > t51)
        R51 = 1;
    else
        R51 = 0;

    if(n27 > t27)
        R27 = 1;
    else
        R27 = 0;

    if(n59 > t59)
        R59 = 1;
    else
        R59 = 0;
}

trip50 = R50;
trip51 = R51;
trip27 = R27;
trip59 = R59;
/*End code section*/"
                        }
                        [
                            position = 7784, 8008
                        ]

                        port trip_50 {
                            label = "trip_50"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7848
                        ]

                        port trip_51 {
                            label = "trip_51"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7952
                        ]

                        port trip_59 {
                            label = "trip_59"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8160
                        ]

                        port trip_27 {
                            label = "trip_27"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8056
                        ]

                        port relay_param {
                            label = "Relay Param"
                            position = left:12
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7560, 8328
                            rotation = left
                        ]

                        port Irms_c {
                            label = "Irms_c"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7368, 7752
                            rotation = right
                        ]

                        port Irms_a {
                            label = "Irms_a"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7472, 7752
                            rotation = right
                        ]

                        port Enable {
                            label = "Enable"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7736, 7752
                            rotation = right
                        ]

                        port Iinst_a {
                            label = "Iinst_a"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7608, 7712
                            rotation = right
                        ]

                        port Irms_b {
                            label = "Irms_b"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7424, 7712
                            rotation = right
                        ]

                        port Iinst_b {
                            label = "Iinst_b"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7568, 7752
                            rotation = right
                        ]

                        port Reset {
                            label = "Reset"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7656, 7752
                            rotation = right
                        ]

                        port Iinst_c {
                            label = "Iinst_c"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7520, 7712
                            rotation = right
                        ]

                        port Vrms_b {
                            label = "Vrms_b"
                            position = left:10
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7256, 7752
                            rotation = right
                        ]

                        port Vrms_c {
                            label = "Vrms_c"
                            position = left:11
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7200, 7712
                            rotation = right
                        ]

                        port Vrms_a {
                            label = "Vrms_a"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7312, 7712
                            rotation = right
                        ]

                        comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus split:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                        [
                            position = 7728, 8224
                        ]

                        connect "Bus Split1.out9" Relays.UVOV_tripDelay as Connection37
                        connect "Bus Split1.out1" Relays.CT_p as Connection45
                        connect "Bus Split1.out2" Relays.IOC_pickup as Connection44
                        connect "Bus Split1.out5" Relays.curveType as Connection41
                        connect "Bus Split1.out4" Relays.TOC_pickup as Connection42
                        connect "Bus Split1.out3" Relays.IOC_tripDelay as Connection43
                        connect "Bus Split1.out8" Relays.OV_pickup as Connection38
                        connect "Bus Split1.out7" Relays.UV_pickup as Connection39
                        connect "Bus Split1.out" Relays.VRMSLN as Connection46
                        connect "Bus Split1.out6" Relays.timeDial as Connection40
                        connect "Bus Split1.in" relay_param as Connection36
                        connect Enable Relays.enable as Connection47
                        connect Iinst_a Relays.IinstA as Connection50
                        connect Iinst_b Relays.IinstB as Connection51
                        connect Iinst_c Relays.IinstC as Connection52
                        connect Irms_a Relays.IrmsA as Connection53
                        connect Irms_b Relays.IrmsB as Connection54
                        connect Irms_c Relays.IrmsC as Connection55
                        connect Reset Relays.Reset as Connection49
                        connect Ts.out Relays.Ts as Connection48
                        connect Vrms_a Relays.VrmsA as Connection56
                        connect Vrms_b Relays.VrmsB as Connection57
                        connect Vrms_c Relays.VrmsC as Connection58
                        connect trip_27 Relays.trip27 as Connection77
                        connect trip_50 Relays.trip50 as Connection76
                        connect trip_51 Relays.trip51 as Connection75
                        connect trip_59 Relays.trip59 as Connection78
                    }
                    [
                        position = 8424, 8328
                        size = 144, 304
                    ]

                    component Subsystem Relay_Param {
                        layout = dynamic
                        component gen_bus_join "Bus Join1" {
                            inputs = "4"
                        }
                        [
                            position = 8296, 7800
                            rotation = right
                        ]

                        component src_constant CT_primary {
                            execution_rate = "Ts"
                            value = "CT_primary"
                        }
                        [
                            position = 8088, 7928
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "3"
                        }
                        [
                            position = 8104, 8192
                            rotation = down
                            scale = -1, -1
                        ]

                        component src_constant VRMSLL {
                            execution_rate = "Ts"
                            value = "VRMSLL"
                        }
                        [
                            position = 8088, 7592
                        ]

                        component src_constant Initial_status {
                            execution_rate = "Ts"
                            value = "Initial_status"
                        }
                        [
                            position = 8088, 7992
                        ]

                        component src_constant 27P_59P_tripDelay {
                            execution_rate = "Ts"
                            value = "R27P_R59P_tripDelay"
                        }
                        [
                            position = 8088, 7872
                        ]

                        component src_constant dF_threshold {
                            execution_rate = "Ts"
                            value = "dF_threshold"
                        }
                        [
                            position = 8088, 7760
                        ]

                        component sys_signal_switch "Signal switch1" {
                            threshold = "0.5"
                        }
                        [
                            position = 9104, 7808
                            scale = 1, -1
                        ]

                        component src_constant dV_threshold {
                            execution_rate = "Ts"
                            value = "dV_threshold"
                        }
                        [
                            position = 8088, 7648
                        ]

                        component src_constant angle_threshold {
                            execution_rate = "Ts"
                            value = "angle_threshold"
                        }
                        [
                            position = 8088, 7704
                        ]

                        component Subsystem Grid_Tied_param {
                            layout = dynamic
                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay1"
                            }
                            [
                                position = 8352, 7880
                                rotation = right
                            ]

                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8552, 8040
                            ]

                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup1"
                            }
                            [
                                position = 8312, 7840
                                rotation = right
                            ]

                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7904
                                rotation = right
                            ]

                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup1"
                            }
                            [
                                position = 8120, 7880
                                rotation = right
                            ]

                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup1"
                            }
                            [
                                position = 8080, 7840
                                rotation = right
                            ]

                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup1"
                            }
                            [
                                position = 8416, 7840
                                rotation = right
                            ]

                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial1"
                            }
                            [
                                position = 8200, 7840
                                rotation = right
                            ]

                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType1"
                            }
                            [
                                position = 8240, 7880
                                rotation = right
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7840
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7880
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7880
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8704, 8040
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8776, 7936
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 8872, 7728
                            size = 216, 104
                        ]

                        component Subsystem Reset {
                            layout = dynamic
                            component gen_logic_op or {
                                operator = "OR"
                            }
                            [
                                position = 8152, 8192
                            ]

                            component Subsystem detect_change {
                                layout = dynamic
                                component gen_rel_op "Relational operator1" {
                                    relational_op = "!="
                                }
                                [
                                    position = 8240, 8192
                                ]

                                component tm_delay "Unit Delay1" {
                                }
                                [
                                    position = 8144, 8200
                                ]

                                port Out1 {
                                    label = "Out"
                                    position = right:1
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8304, 8192
                                ]

                                port In3 {
                                    label = "In"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8032, 8200
                                ]

                                junction Junction1 sp
                                [
                                    position = 8080, 8200
                                ]

                                connect Junction1 In3 as Connection1
                                connect "Relational operator1.in" Junction1 as Connection2
                                connect "Relational operator1.out" Out1 as Connection3
                                connect "Unit Delay1.in" Junction1 as Connection4
                                connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                            }
                            [
                                position = 8248, 8192
                                size = 48, 48
                            ]

                            port reset {
                                label = "Reset"
                                position = right:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8336, 8152
                            ]

                            port op_mode {
                                label = "Op_mode"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8344, 8240
                            ]

                            port "Reset in" {
                                label = "Reset in"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8168
                            ]

                            port "op_mode in" {
                                label = "op_mode in"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8224
                            ]

                            junction Junction1 sp
                            [
                                position = 8096, 8224
                            ]

                            connect Junction1 "op_mode in" as Connection1
                            connect detect_change.Out1 reset as Connection5
                            connect op_mode Junction1 as Connection6
                            connect or.in1 Junction1 as Connection3
                            connect or.in "Reset in" as Connection2
                            connect or.out detect_change.In3 as Connection4
                        }
                        [
                            position = 8280, 8192
                            rotation = down
                            scale = -1, -1
                            size = 104, 104
                        ]

                        component Subsystem Islanded_param {
                            layout = dynamic
                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup2"
                            }
                            [
                                position = 8400, 7856
                                rotation = right
                            ]

                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup2"
                            }
                            [
                                position = 8296, 7856
                                rotation = right
                            ]

                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7920
                                rotation = right
                            ]

                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8544, 8048
                            ]

                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup2"
                            }
                            [
                                position = 8072, 7856
                                rotation = right
                            ]

                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial2"
                            }
                            [
                                position = 8192, 7856
                                rotation = right
                            ]

                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType2"
                            }
                            [
                                position = 8240, 7888
                                rotation = right
                            ]

                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay2"
                            }
                            [
                                position = 8352, 7888
                                rotation = right
                            ]

                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup2"
                            }
                            [
                                position = 8120, 7888
                                rotation = right
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7856
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7888
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7888
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8696, 8048
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8744, 7928
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 9224, 8040
                            size = 216, 104
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8160
                        ]

                        port reset {
                            label = "reset"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8224
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8360, 7856
                        ]

                        port Initial_condition {
                            label = "Initial_condition"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8192, 7992
                        ]

                        port from_Modbus {
                            label = "from_Modbus"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7992, 8192
                        ]

                        port relay_param {
                            label = "relay_param"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9200, 7808
                        ]

                        tag Goto2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7872
                        ]

                        tag From1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7696
                        ]

                        tag From3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7760
                        ]

                        tag Goto1 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8232, 8280
                        ]

                        tag From2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8616, 7728
                        ]

                        tag From4 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 9104, 7904
                            rotation = right
                            scale = 1, -1
                        ]

                        tag Goto3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7928
                        ]

                        tag Goto4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8208, 7544
                        ]

                        junction Junction1 sp
                        [
                            position = 8152, 7592
                        ]

                        junction Junction2 sp
                        [
                            position = 8736, 7696
                        ]

                        junction Junction3 sp
                        [
                            position = 8712, 7728
                        ]

                        junction Junction4 sp
                        [
                            position = 8688, 7760
                        ]

                        connect "Bus Join1.in" Junction1 as Connection54
                        connect "Bus Join1.in2" angle_threshold.out as Connection48
                        connect "Bus Join1.in3" dF_threshold.out as Connection49
                        connect "Bus Join1.in1" dV_threshold.out as Connection47
                        connect "Bus Split1.out1" "Reset.Reset in" as Connection75
                        connect "Bus Split1.in" from_Modbus as Connection42
                        connect From1 Junction2 as Connection60
                        connect From2 Junction3 as Connection63
                        connect From3 Junction4 as Connection66
                        connect From4 "Signal switch1.in2" as Connection71
                        connect Goto1 "Bus Split1.out2" as Connection45
                        connect Goto2 27P_59P_tripDelay.out as Connection51
                        connect Goto3 CT_primary.out as Connection52
                        connect Goto4 Junction1 as Connection56
                        connect Initial_condition Initial_status.out as Connection53
                        connect Islanded_param.VRMSLL Junction2 as Connection62
                        connect Islanded_param.27P_59P_tripDelay Junction3 as Connection65
                        connect Islanded_param.CT_primary Junction4 as Connection68
                        connect Junction1 VRMSLL.out as Connection55
                        connect Junction2 Grid_Tied_param.VRMSLL as Connection61
                        connect Junction3 Grid_Tied_param.27P_59P_tripDelay as Connection64
                        connect Junction4 Grid_Tied_param.CT_primary as Connection67
                        connect "Reset.op_mode in" "Bus Split1.out" as Connection76
                        connect Reset.op_mode op_mode as Connection43
                        connect Reset.reset reset as Connection44
                        connect "Signal switch1.in1" Grid_Tied_param.relay_param as Connection73
                        connect "Signal switch1.in" Islanded_param.relay_param as Connection72
                        connect relay_param "Signal switch1.out" as Connection74
                        connect relay_paramR25 "Bus Join1.out" as Connection50
                    }
                    [
                        position = 8344, 7976
                        size = 168, 160
                    ]

                    component Subsystem "State Condition Mng" {
                        layout = dynamic
                        component gen_c_function "Trip_out mng fnc" {
                            in_terminal_dimensions_str = "bool_R25 inherit;op_mode_in inherit;trip_in inherit;enable inherit;initial_condition inherit;activate_logic inherit;"
                            in_terminal_properties = "real bool_R25;inherit op_mode_in;inherit trip_in;inherit enable;inherit initial_condition;inherit activate_logic;"
                            init_fnc = "/*Begin code section*/
trip_out = initial_condition;
/*End code section*/"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "trip_out inherit;"
                            out_terminal_properties = "real trip_out;"
                            output_fnc = "/*Begin code section*/
if(enable && activate_logic){
    if(op_mode_in==0){
        trip_out = trip_in*bool_R25;
    }
    else if(op_mode_in==1){
        trip_out = 1*bool_R25;
    }
    else if(op_mode_in==2){
        trip_out=0;
    }
}
/*End code section*/"
                        }
                        [
                            position = 8424, 8208
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8200, 8336
                            scale = 1, -1
                        ]

                        component gen_logic_op not {
                            operator = "NOT"
                        }
                        [
                            position = 7840, 8200
                        ]

                        component gen_logic_op not1 {
                            operator = "NOT"
                        }
                        [
                            position = 8032, 8264
                        ]

                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8120, 8352
                            scale = 1, -1
                        ]

                        component gen_probe activate_logic {
                        }
                        [
                            position = 8368, 8368
                        ]

                        component gen_probe enable_ {
                        }
                        [
                            position = 8120, 8120
                        ]

                        component gen_probe detect_change_ {
                        }
                        [
                            position = 8072, 8440
                        ]

                        component gen_probe r_25 {
                        }
                        [
                            position = 8376, 8056
                        ]

                        component gen_probe op_mode_ {
                        }
                        [
                            position = 8472, 8096
                        ]

                        component Subsystem detect_change {
                            layout = dynamic
                            component tm_delay "Unit Delay1" {
                            }
                            [
                                position = 8144, 8200
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "!="
                            }
                            [
                                position = 8240, 8192
                            ]

                            port Out1 {
                                label = "Out"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8304, 8192
                            ]

                            port In3 {
                                label = "In"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8032, 8200
                            ]

                            junction Junction1 sp
                            [
                                position = 8080, 8200
                            ]

                            connect Junction1 In3 as Connection1
                            connect "Relational operator1.in" Junction1 as Connection2
                            connect "Relational operator1.out" Out1 as Connection3
                            connect "Unit Delay1.in" Junction1 as Connection4
                            connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                        }
                        [
                            position = 7960, 8368
                            size = 48, 48
                        ]

                        port Trip_in {
                            label = "Trip_in"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7768, 8200
                        ]

                        port R25 {
                            label = "R25"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8232, 8128
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8272, 8160
                        ]

                        port trip_out {
                            label = "trip_out"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8536, 8208
                        ]

                        port enable {
                            label = "enable"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7952, 8264
                        ]

                        port initial_condition {
                            label = "initial_condition"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8248, 8232
                        ]

                        junction Junction2 sp
                        [
                            position = 7984, 8264
                        ]

                        junction Junction3 sp
                        [
                            position = 7904, 8200
                        ]

                        junction Junction4 sp
                        [
                            position = 8312, 8248
                        ]

                        junction Junction5 sp
                        [
                            position = 8072, 8216
                        ]

                        junction Junction6 sp
                        [
                            position = 8032, 8368
                        ]

                        junction Junction7 sp
                        [
                            position = 8304, 8128
                        ]

                        junction Junction8 sp
                        [
                            position = 8344, 8160
                        ]

                        connect Junction2 enable as Connection150
                        connect Junction3 not.out as Connection158
                        connect Junction4 "SR Flip Flop1.out" as Connection169
                        connect Junction5 Junction2 as Connection172
                        connect Junction6 "SR Flip Flop1.s_in" as Connection175
                        connect Junction7 "Trip_out mng fnc.bool_R25" as Connection178
                        connect Junction8 "Trip_out mng fnc.op_mode_in" as Connection181
                        connect R25 Junction7 as Connection177
                        connect "SR Flip Flop1.r_in" not1.out as Connection136
                        connect Termination1.in "SR Flip Flop1.out_n" as Connection138
                        connect "Trip_out mng fnc.trip_in" Junction3 as Connection157
                        connect "Trip_out mng fnc.activate_logic" Junction4 as Connection168
                        connect "Trip_out mng fnc.enable" Junction5 as Connection171
                        connect activate_logic.in Junction4 as Connection170
                        connect detect_change.In3 Junction3 as Connection159
                        connect detect_change.Out1 Junction6 as Connection174
                        connect detect_change_.in Junction6 as Connection176
                        connect enable_.in Junction5 as Connection173
                        connect initial_condition "Trip_out mng fnc.initial_condition" as Connection152
                        connect not.in Trip_in as Connection139
                        connect not1.in Junction2 as Connection149
                        connect op_mode Junction8 as Connection180
                        connect op_mode_.in Junction8 as Connection182
                        connect r_25.in Junction7 as Connection179
                        connect trip_out "Trip_out mng fnc.trip_out" as Connection167
                    }
                    [
                        position = 9336, 8056
                        size = 128, 136
                    ]

                    component Subsystem "CALC FROM MEASUREMENTS" {
                        layout = dynamic
                        component gen_rms_value "RMS value3" {
                        }
                        [
                            position = 7064, 8048
                        ]

                        component "core/Three phase PLL" "Three phase PLL2" {
                        }
                        [
                            position = 6760, 9408
                        ]

                        component gen_rms_value "RMS value6" {
                        }
                        [
                            position = 7064, 8256
                        ]

                        component msr_phasor_3ph "Three Phase Phasor2" {
                        }
                        [
                            position = 6968, 8560
                        ]

                        component gen_terminator Termination4 {
                        }
                        [
                            position = 7088, 9072
                        ]

                        component gen_gain Gain6 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8704
                        ]

                        component gen_gain Gain1 {
                            gain = "10"
                        }
                        [
                            position = 7000, 7592
                        ]

                        component gen_gain Gain5 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8600
                        ]

                        component gen_rms_value "RMS value4" {
                        }
                        [
                            position = 7064, 8128
                        ]

                        component gen_terminator Termination11 {
                        }
                        [
                            position = 6864, 9256
                        ]

                        component msr_phasor_3ph "Three Phase Phasor1" {
                        }
                        [
                            position = 6904, 7752
                        ]

                        component gen_terminator Termination3 {
                        }
                        [
                            position = 7048, 9016
                        ]

                        component gen_gain Gain10 {
                            gain = "100.0"
                        }
                        [
                            position = 7064, 9168
                        ]

                        component gen_terminator Termination5 {
                        }
                        [
                            position = 7304, 8488
                        ]

                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7064, 7984
                        ]

                        component gen_gain Gain3 {
                            gain = "10"
                        }
                        [
                            position = 7064, 7792
                        ]

                        component gen_gain Gain11 {
                            gain = "10.0"
                        }
                        [
                            position = 7432, 8400
                        ]

                        component gen_gain Gain8 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8976
                        ]

                        component gen_PQ_transform "PQ Power Meter1" {
                        }
                        [
                            position = 6936, 8952
                        ]

                        component gen_terminator Termination7 {
                        }
                        [
                            position = 7336, 8256
                        ]

                        component gen_terminator Termination8 {
                        }
                        [
                            position = 7336, 8312
                        ]

                        component gen_terminator Termination9 {
                        }
                        [
                            position = 7336, 8368
                        ]

                        component gen_gain Gain9 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7032, 9120
                        ]

                        component gen_terminator Termination10 {
                        }
                        [
                            position = 6856, 9472
                        ]

                        component gen_gain Gain2 {
                            gain = "10"
                        }
                        [
                            position = 7048, 7696
                        ]

                        component gen_gain Gain7 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8824
                        ]

                        component "core/Three phase PLL" "Three phase PLL1" {
                        }
                        [
                            position = 7224, 8392
                        ]

                        component gen_terminator Termination13 {
                        }
                        [
                            position = 6864, 9368
                        ]

                        component gen_rms_value "RMS value5" {
                        }
                        [
                            position = 7064, 8192
                        ]

                        component gen_gain Gain4 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8504
                        ]

                        component gen_terminator Termination12 {
                        }
                        [
                            position = 6864, 9312
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7064, 7920
                        ]

                        component Subsystem Subsystem1 {
                            layout = dynamic
                            component gen_abs Abs2 {
                            }
                            [
                                position = 7720, 7896
                            ]

                            component src_constant Constant2 {
                                execution_rate = "Ts"
                                value = "[0]"
                            }
                            [
                                position = 7752, 8048
                            ]

                            component gen_logic_op "Logical operator1" {
                            }
                            [
                                position = 7976, 7856
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7800
                            ]

                            component src_constant Constant1 {
                                execution_rate = "Ts"
                            }
                            [
                                position = 7768, 7856
                            ]

                            component gen_abs Abs1 {
                            }
                            [
                                position = 7720, 7792
                            ]

                            component gen_rel_op "Relational operator4" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8096
                            ]

                            component gen_rel_op "Relational operator3" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8000
                            ]

                            component gen_rel_op "Relational operator2" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7904
                            ]

                            component Subsystem Subsystem3 {
                                layout = dynamic
                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8008
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8032, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 Out1 as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect "Multiport signal switch1.ctrl" u as Connection4
                                connect "Unit Delay1.out" Junction1 as Connection5
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection6
                            }
                            [
                                position = 8152, 8104
                                size = 112, 56
                            ]

                            component Subsystem Subsystem2 {
                                layout = dynamic
                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7576, 8032
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7648, 8056
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8072, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 "Unit Delay1.out" as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect Out1 Junction1 as Connection4
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection5
                                connect u "Multiport signal switch1.ctrl" as Connection6
                            }
                            [
                                position = 8152, 8008
                                size = 112, 56
                            ]

                            port P {
                                label = "P"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 7992
                            ]

                            port Q {
                                label = "Q"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 8088
                            ]

                            port "Lagging or Leading" {
                                label = "Lag or Lead"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8104
                            ]

                            port "Exporting or Importing" {
                                label = "export or import"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8008
                            ]

                            junction Junction1 sp
                            [
                                position = 7560, 8088
                            ]

                            junction Junction4 sp
                            [
                                position = 7592, 7992
                            ]

                            junction Junction11 sp
                            [
                                position = 7808, 7856
                            ]

                            junction Junction13 sp
                            [
                                position = 7824, 8048
                            ]

                            junction Junction14 sp
                            [
                                position = 8040, 8016
                            ]

                            connect Abs1.in Junction1 as Connection1
                            connect Abs1.out "Relational operator1.in" as Connection2
                            connect Abs2.out "Relational operator2.in" as Connection3
                            connect Constant1.out Junction11 as Connection8
                            connect Constant2.out Junction13 as Connection9
                            connect "Exporting or Importing" Subsystem2.Out1 as Connection10
                            connect Junction11 "Relational operator1.in1" as Connection12
                            connect Junction13 "Relational operator3.in1" as Connection14
                            connect Junction14 Subsystem3.E as Connection45
                            connect Junction4 Abs2.in as Connection39
                            connect Junction4 P as Connection18
                            connect "Lagging or Leading" Subsystem3.Out1 as Connection22
                            connect "Logical operator1.out" Junction14 as Connection44
                            connect Q Junction1 as Connection26
                            connect "Relational operator1.out" "Logical operator1.in" as Connection27
                            connect "Relational operator2.in1" Junction11 as Connection28
                            connect "Relational operator2.out" "Logical operator1.in1" as Connection29
                            connect "Relational operator3.in" Junction4 as Connection42
                            connect "Relational operator3.out" Subsystem2.u as Connection31
                            connect "Relational operator4.in" Junction1 as Connection40
                            connect "Relational operator4.in1" Junction13 as Connection32
                            connect "Relational operator4.out" Subsystem3.u as Connection34
                            connect Subsystem2.E Junction14 as Connection46
                        }
                        [
                            position = 7232, 8912
                            size = 112, 80
                        ]

                        port Ia {
                            label = "Ia"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7920
                        ]

                        port Ia_rms {
                            label = "Ia_rms"
                            position = right:7
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7920
                        ]

                        port Ib {
                            label = "Ib"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7984
                        ]

                        port Ib_rms {
                            label = "Ib_rms"
                            position = right:8
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7984
                        ]

                        port Ic {
                            label = "Ic"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8048
                        ]

                        port Ic_rms {
                            label = "Ic_rms"
                            position = right:9
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8048
                        ]

                        port Va {
                            label = "Va"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8128
                        ]

                        port Va_rms {
                            label = "Va_rms"
                            position = right:10
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8128
                        ]

                        port Vb {
                            label = "Vb"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8192
                        ]

                        port Vc {
                            label = "Vc"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8256
                        ]

                        port Vb_rms {
                            label = "Vb_rms"
                            position = right:11
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8192
                        ]

                        port Vc_rms {
                            label = "Vc_rms"
                            position = right:12
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8256
                        ]

                        port P {
                            label = "P"
                            position = right:19
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7160, 8824
                        ]

                        port Q {
                            label = "Q"
                            position = right:20
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7168, 8976
                        ]

                        port S {
                            label = "S"
                            position = right:21
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7112, 9120
                        ]

                        port pf {
                            label = "pf"
                            position = right:22
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7144, 9168
                        ]

                        port Ia_mag {
                            label = "Ia_mag"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7536
                        ]

                        port Ia_phase {
                            label = "Ia_phase"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7592
                        ]

                        port Ib_mag {
                            label = "Ib_mag"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7640
                        ]

                        port Ib_phase {
                            label = "Ib_phase"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7696
                        ]

                        port Ic_mag {
                            label = "Ic_mag"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7744
                        ]

                        port Ic_phase {
                            label = "Ic_phase"
                            position = right:6
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7792
                        ]

                        port Va_mag {
                            label = "Va_mag"
                            position = right:13
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8456
                        ]

                        port Va_phase {
                            label = "Va_phase"
                            position = right:14
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8504
                        ]

                        port Vb_mag {
                            label = "Vb_mag"
                            position = right:15
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8552
                        ]

                        port Vb_phase {
                            label = "Vb_phase"
                            position = right:16
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8600
                        ]

                        port Vc_mag {
                            label = "Vc_mag"
                            position = right:17
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8648
                        ]

                        port Vc_phase {
                            label = "Vc_phase"
                            position = right:18
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8704
                        ]

                        port "Export Import" {
                            label = "Export Import"
                            position = right:28
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7344, 8928
                        ]

                        port "Lag Lead" {
                            label = "Lag Lead"
                            position = right:27
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7392, 8888
                        ]

                        port bus_freq {
                            label = "Bus_freq"
                            position = right:23
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7512, 8400
                        ]

                        port bus_wt {
                            label = "Bus_wt"
                            position = right:24
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7440, 8456
                        ]

                        port Vline_a {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9352
                        ]

                        port Vline_b {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9408
                        ]

                        port Vline_c {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9464
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = right:25
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9416
                        ]

                        port line_wt {
                            label = "Line_wt"
                            position = right:26
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9464
                        ]

                        junction Junction23 sp
                        [
                            position = 6752, 8128
                        ]

                        junction Junction24 sp
                        [
                            position = 6768, 8192
                        ]

                        junction Junction25 sp
                        [
                            position = 6784, 8256
                        ]

                        junction Junction34 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction35 sp
                        [
                            position = 6656, 7920
                        ]

                        junction Junction37 sp
                        [
                            position = 6672, 7984
                        ]

                        junction Junction39 sp
                        [
                            position = 6752, 8360
                        ]

                        junction Junction41 sp
                        [
                            position = 6768, 8392
                        ]

                        junction Junction42 sp
                        [
                            position = 6784, 8424
                        ]

                        junction Junction44 sp
                        [
                            position = 6768, 8568
                        ]

                        junction Junction45 sp
                        [
                            position = 6784, 8584
                        ]

                        junction Junction46 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction48 sp
                        [
                            position = 6752, 8536
                        ]

                        junction Junction49 sp
                        [
                            position = 6928, 8536
                        ]

                        junction Junction50 sp
                        [
                            position = 7056, 8928
                        ]

                        junction Junction51 sp
                        [
                            position = 7056, 8888
                        ]

                        junction Junction52 sp
                        [
                            position = 6656, 7920
                        ]

                        junction Junction53 sp
                        [
                            position = 6752, 8128
                        ]

                        connect "Export Import" "Subsystem1.Exporting or Importing" as Connection116
                        connect Gain1.out Ia_phase as Connection87
                        connect Gain10.in "PQ Power Meter1.k_factor" as Connection105
                        connect Gain11.in "Three phase PLL1.freq" as Connection107
                        connect Gain2.out Ib_phase as Connection89
                        connect Gain3.in "Three Phase Phasor1.phase3" as Connection91
                        connect Gain4.in "Three Phase Phasor2.phase1" as Connection92
                        connect Gain4.out Va_phase as Connection93
                        connect Gain5.out Vb_phase as Connection95
                        connect Gain6.in "Three Phase Phasor2.phase3" as Connection97
                        connect Gain7.in Junction51 as Connection113
                        connect Gain8.out Q as Connection101
                        connect Gain9.in "PQ Power Meter1.apparent" as Connection103
                        connect Ia Junction35 as Connection2
                        connect Ia_mag "Three Phase Phasor1.out1" as Connection3
                        connect Ia_rms "RMS value1.out" as Connection4
                        connect Ib Junction37 as Connection5
                        connect Ib_rms "RMS value2.out" as Connection6
                        connect Ic Junction34 as Connection7
                        connect Ic_phase Gain3.out as Connection90
                        connect Ic_rms "RMS value3.out" as Connection9
                        connect Junction23 Junction39 as Connection10
                        connect Junction23 Va as Connection11
                        connect Junction24 Junction41 as Connection12
                        connect Junction24 "RMS value5.in" as Connection13
                        connect Junction24 Vb as Connection14
                        connect Junction25 Junction42 as Connection15
                        connect Junction25 "RMS value6.in" as Connection16
                        connect Junction37 "RMS value2.in" as Connection18
                        connect Junction39 "Three phase PLL1.va" as Connection20
                        connect Junction41 "Three phase PLL1.vb" as Connection21
                        connect Junction42 "Three phase PLL1.vc" as Connection22
                        connect Junction44 Junction41 as Connection23
                        connect Junction45 Junction42 as Connection24
                        connect Junction46 Junction34 as Connection25
                        connect Junction48 Junction39 as Connection27
                        connect Junction49 Junction48 as Connection28
                        connect Junction50 Gain8.in as Connection111
                        [
                            breakpoints = 7056, 8928
                        ]
                        connect Junction51 "PQ Power Meter1.Pdc" as Connection114
                        [
                            breakpoints = 7056, 8888
                        ]
                        connect Junction52 Junction35 as Connection119
                        connect Junction53 Junction23 as Connection122
                        connect P Gain7.out as Connection98
                        connect "PQ Power Meter1.ia" Junction35 as Connection30
                        connect "PQ Power Meter1.ib" Junction37 as Connection31
                        connect "PQ Power Meter1.vb" Junction44 as Connection33
                        connect "PQ Power Meter1.vc" Junction45 as Connection34
                        connect "PQ Power Meter1.ic" Junction46 as Connection35
                        connect "PQ Power Meter1.va" Junction48 as Connection36
                        connect "PQ Power Meter1.Qdc" Junction50 as Connection110
                        connect "RMS value1.in" Junction52 as Connection118
                        connect "RMS value3.in" Junction34 as Connection38
                        connect "RMS value4.in" Junction53 as Connection121
                        connect S Gain9.out as Connection102
                        connect Subsystem1.Q Junction50 as Connection112
                        connect Subsystem1.P Junction51 as Connection115
                        connect "Subsystem1.Lagging or Leading" "Lag Lead" as Connection117
                        connect Termination10.in "Three phase PLL2.sin_theta" as Connection45
                        connect Termination11.in "Three phase PLL2.d_axis" as Connection46
                        connect Termination12.in "Three phase PLL2.q_axis" as Connection47
                        connect Termination13.in "Three phase PLL2.zero_axis" as Connection48
                        connect Termination3.in "PQ Power Meter1.Pac" as Connection50
                        connect Termination4.in "PQ Power Meter1.Qac" as Connection51
                        connect Termination5.in "Three phase PLL1.sin_theta" as Connection52
                        connect Termination7.in "Three phase PLL1.d_axis" as Connection53
                        connect Termination8.in "Three phase PLL1.q_axis" as Connection54
                        connect Termination9.in "Three phase PLL1.zero_axis" as Connection55
                        connect "Three Phase Phasor1.phase1" Gain1.in as Connection86
                        connect "Three Phase Phasor1.phase2" Gain2.in as Connection88
                        connect "Three Phase Phasor1.out2" Ib_mag as Connection57
                        connect "Three Phase Phasor1.out3" Ic_mag as Connection59
                        connect "Three Phase Phasor1.in2" Junction37 as Connection60
                        connect "Three Phase Phasor1.in3" Junction46 as Connection61
                        connect "Three Phase Phasor1.in1" Junction52 as Connection120
                        connect "Three Phase Phasor1.in_ref" Junction53 as Connection123
                        connect "Three Phase Phasor2.phase2" Gain5.in as Connection94
                        connect "Three Phase Phasor2.in2" Junction44 as Connection64
                        connect "Three Phase Phasor2.in3" Junction45 as Connection65
                        connect "Three Phase Phasor2.in1" Junction49 as Connection67
                        connect "Three Phase Phasor2.in_ref" Junction49 as Connection66
                        connect "Three Phase Phasor2.out1" Va_mag as Connection68
                        connect "Three Phase Phasor2.out2" Vb_mag as Connection70
                        connect "Three Phase Phasor2.out3" Vc_mag as Connection72
                        connect "Three phase PLL2.freq" line_freq as Connection73
                        connect Va_rms "RMS value4.out" as Connection74
                        connect Vb_rms "RMS value5.out" as Connection75
                        connect Vc Junction25 as Connection76
                        connect Vc_phase Gain6.out as Connection96
                        connect Vc_rms "RMS value6.out" as Connection78
                        connect Vline_a "Three phase PLL2.va" as Connection79
                        connect Vline_b "Three phase PLL2.vb" as Connection80
                        connect Vline_c "Three phase PLL2.vc" as Connection81
                        connect bus_freq Gain11.out as Connection106
                        connect bus_wt "Three phase PLL1.theta" as Connection83
                        connect line_wt "Three phase PLL2.theta" as Connection84
                        connect pf Gain10.out as Connection104
                    }
                    [
                        position = 6992, 8104
                        size = 112, 664
                    ]

                    port OUTPUT {
                        label = "OUTPUT"
                        position = bottom:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9704, 8056
                    ]

                    port Ia {
                        label = "Ia"
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7816
                    ]

                    port Ib {
                        label = "Ib"
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7888
                    ]

                    port Ic {
                        label = "Ic"
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7960
                    ]

                    port Va {
                        label = "Va"
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8032
                    ]

                    port Vb {
                        label = "Vb"
                        position = left:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8104
                    ]

                    port Vc {
                        label = "Vc"
                        position = left:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8176
                    ]

                    port Vline_a {
                        label = "Vline_A"
                        position = left:7
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8248
                    ]

                    port faults_status {
                        label = "Fault_status"
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8272
                    ]

                    port TO_MODBUS {
                        label = "To_Modbus"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8024, 8080
                    ]

                    port Vline_b {
                        label = "Vline_B"
                        position = left:8
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8320
                    ]

                    port Vline_c {
                        label = "Vline_C"
                        position = left:9
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8392
                    ]

                    port cb_state {
                        label = "cb_state"
                        position = left:10
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7312, 8624
                    ]

                    port pf_states {
                        label = "pf_state"
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8416
                        scale = 1, -1
                    ]

                    port from_Modbus {
                        label = "From Modbus"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8144, 7976
                    ]

                    tag Goto11 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7376, 8256
                    ]

                    tag From25 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8360
                    ]

                    tag Goto21 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 7688
                        rotation = left
                    ]

                    tag Goto22 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7248, 7832
                        rotation = left
                    ]

                    tag From12 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9032, 8288
                    ]

                    tag Goto19 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 7832
                        rotation = left
                    ]

                    tag Goto28 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7928
                        scale = 1, -1
                    ]

                    tag From24 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8312
                    ]

                    tag From27 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8408
                    ]

                    tag Goto16 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7928
                    ]

                    tag From1 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7600, 8280
                        rotation = right
                    ]

                    tag From7 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9072, 8224
                        rotation = down
                        scale = -1, -1
                    ]

                    tag Goto12 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7224, 8256
                    ]

                    tag From16 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7776
                    ]

                    tag From17 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7752
                    ]

                    tag From33 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9120, 8080
                    ]

                    tag Goto6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9640, 8096
                    ]

                    tag From3 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7392, 8384
                    ]

                    tag From32 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8104
                    ]

                    tag Goto4 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8424
                    ]

                    tag Goto5 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9088, 7752
                    ]

                    tag From18 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7800
                    ]

                    tag From20 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8240
                    ]

                    tag From15 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7728
                    ]

                    tag From5 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7520, 8504
                    ]

                    tag From26 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8432
                    ]

                    tag Goto14 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7784
                    ]

                    tag Goto26 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8296, 8152
                    ]

                    tag From19 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7824
                    ]

                    tag From34 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7896
                    ]

                    tag From6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7584, 8560
                        rotation = right
                    ]

                    tag From37 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7848
                    ]

                    tag From10 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8272
                    ]

                    tag Goto10 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8272
                    ]

                    tag Goto29 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 7952
                        scale = 1, -1
                    ]

                    tag Goto9 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8000
                    ]

                    tag From8 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9104, 8304
                    ]

                    tag From2 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7480, 8288
                    ]

                    tag From11 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8880, 8256
                    ]

                    tag Goto24 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 8304
                    ]

                    tag From28 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8384
                    ]

                    tag From14 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7704
                    ]

                    tag Goto27 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7976
                        scale = 1, -1
                    ]

                    tag Goto3 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8336
                    ]

                    tag Goto13 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7296, 8288
                    ]

                    tag Goto17 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7104, 7760
                        rotation = left
                    ]

                    tag Goto7 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 8024
                        scale = 1, -1
                    ]

                    tag Goto2 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8248
                    ]

                    tag From13 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8320
                    ]

                    tag Goto25 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8320
                    ]

                    tag From9 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8992, 8240
                        rotation = down
                        scale = -1, 1
                    ]

                    tag From4 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7448, 8464
                    ]

                    tag From21 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8264
                    ]

                    tag Goto15 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7856
                    ]

                    tag From35 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8456
                    ]

                    tag From31 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9096, 8424
                    ]

                    tag From29 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8032
                    ]

                    tag Goto8 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8216
                    ]

                    tag From30 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9024, 8408
                    ]

                    tag Goto1 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8160
                    ]

                    tag From36 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8216
                    ]

                    tag Goto23 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 8000
                        scale = 1, -1
                    ]

                    tag Goto20 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7232, 7760
                        rotation = left
                    ]

                    tag From22 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8288
                    ]

                    tag Goto18 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7088, 7688
                        rotation = left
                    ]

                    tag From23 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8336
                    ]

                    tag Goto31 {
                        value = "F3_CB3_P_REACTIVE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7384, 7744
                        hide_name = True
                    ]

                    tag Goto34 {
                        value = "F3_CB3_BREAKER"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7384, 7816
                        hide_name = True
                    ]

                    tag Goto30 {
                        value = "F3_CB3_P_REAL"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7384, 7720
                        hide_name = True
                    ]

                    tag Goto32 {
                        value = "F3_CB3_VOLTAGE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7384, 7768
                        hide_name = True
                    ]

                    tag Goto33 {
                        value = "F3_CB3_FREQUENCY"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7384, 7792
                        hide_name = True
                    ]

                    junction Junction51 sp
                    [
                        position = 8720, 8056
                    ]

                    junction Junction100 sp
                    [
                        position = 8536, 8192
                    ]

                    junction Junction101 sp
                    [
                        position = 8536, 8280
                    ]

                    junction Junction104 sp
                    [
                        position = 9016, 7800
                    ]

                    junction Junction105 sp
                    [
                        position = 9584, 8056
                    ]

                    junction Junction106 sp
                    [
                        position = 7368, 8624
                    ]

                    junction Junction108 sp
                    [
                        position = 6688, 8248
                    ]

                    junction Junction109 sp
                    [
                        position = 6696, 8032
                    ]

                    junction Junction110 sp
                    [
                        position = 7304, 8240
                    ]

                    junction Junction111 sp
                    [
                        position = 6640, 7816
                    ]

                    junction Junction112 sp
                    [
                        position = 6640, 7888
                    ]

                    junction Junction113 sp
                    [
                        position = 6640, 7960
                    ]

                    junction Junction114 sp
                    [
                        position = 7088, 7984
                    ]

                    junction Junction115 sp
                    [
                        position = 7104, 8000
                    ]

                    junction Junction116 sp
                    [
                        position = 7120, 8016
                    ]

                    junction Junction117 sp
                    [
                        position = 7216, 8032
                    ]

                    junction Junction118 sp
                    [
                        position = 7232, 8048
                    ]

                    junction Junction119 sp
                    [
                        position = 7248, 8064
                    ]

                    junction Junction120 sp
                    [
                        position = 8536, 8368
                    ]

                    junction Junction121 sp
                    [
                        position = 8536, 8456
                    ]

                    junction Junction122 sp
                    [
                        position = 8216, 8192
                    ]

                    junction Junction123 sp
                    [
                        position = 7264, 8176
                    ]

                    junction Junction124 sp
                    [
                        position = 7272, 8192
                    ]

                    junction Junction125 sp
                    [
                        position = 7160, 8032
                    ]

                    junction Junction126 sp
                    [
                        position = 7320, 8240
                    ]

                    junction Junction127 sp
                    [
                        position = 7336, 8624
                    ]

                    junction Junction128 sp
                    [
                        position = 9536, 8056
                    ]

                    junction Junction129 sp
                    [
                        position = 8896, 8056
                    ]

                    junction Junction130 sp
                    [
                        position = 7296, 7720
                    ]

                    junction Junction131 sp
                    [
                        position = 7312, 7744
                    ]

                    comment Comment4 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Status</p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8256
                    ]

                    comment Comment5 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">pf_states </p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8400
                    ]

                    comment Comment2 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52A</p></body></html> ENDCOMMENT 
                    [
                        position = 7400, 8568
                    ]

                    comment Comment3 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52B</p></body></html> ENDCOMMENT 
                    [
                        position = 7432, 8720
                    ]

                    connect "Bus Join1.in5" "CALC FROM MEASUREMENTS.Ic_phase" as Connection133
                    connect "Bus Join1.in15" "CALC FROM MEASUREMENTS.Vb_phase" as Connection135
                    connect "Bus Join1.in20" "CALC FROM MEASUREMENTS.S" as Connection144
                    connect "Bus Join1.in21" "CALC FROM MEASUREMENTS.pf" as Connection149
                    connect "Bus Join1.in3" "CALC FROM MEASUREMENTS.Ib_phase" as Connection132
                    connect "Bus Join1.in17" "CALC FROM MEASUREMENTS.Vc_phase" as Connection140
                    connect "Bus Join1.in13" "CALC FROM MEASUREMENTS.Va_phase" as Connection134
                    connect "Bus Join1.in6" Junction114 as Connection268
                    connect "Bus Join1.in9" Junction117 as Connection283
                    connect "Bus Join1.in10" Junction118 as Connection286
                    connect "Bus Join1.in19" Junction124 as Connection391
                    [
                        breakpoints = 7888, 8192; 7064, 8192
                    ]
                    connect "Bus Join1.in22" Junction126 as Connection395
                    connect "CALC FROM MEASUREMENTS.Ia_phase" "Bus Join1.in1" as Connection131
                    connect "CALC FROM MEASUREMENTS.Vc_mag" "Bus Join1.in16" as Connection4
                    connect "CALC FROM MEASUREMENTS.Vb_mag" "Bus Join1.in14" as Connection1
                    connect "CALC FROM MEASUREMENTS.Ic_mag" "Bus Join1.in4" as Connection2
                    connect "CALC FROM MEASUREMENTS.Ib_mag" "Bus Join1.in2" as Connection6
                    connect "CALC FROM MEASUREMENTS.Va_mag" "Bus Join1.in12" as Connection3
                    connect "CALC FROM MEASUREMENTS.Ia_mag" "Bus Join1.in" as Connection5
                    connect "CALC FROM MEASUREMENTS.line_freq" Goto10 as Connection224
                    connect "CALC FROM MEASUREMENTS.line_wt" Goto13 as Connection245
                    connect "CALC FROM MEASUREMENTS.Vline_a" Junction108 as Connection217
                    connect "CALC FROM MEASUREMENTS.Va" Junction109 as Connection218
                    connect "CALC FROM MEASUREMENTS.Ia" Junction111 as Connection257
                    connect "CALC FROM MEASUREMENTS.Ib" Junction112 as Connection256
                    connect "CALC FROM MEASUREMENTS.Ic" Junction113 as Connection258
                    connect "CALC FROM MEASUREMENTS.Ib_rms" Junction115 as Connection271
                    connect "CALC FROM MEASUREMENTS.Ic_rms" Junction116 as Connection274
                    connect "CALC FROM MEASUREMENTS.Vc_rms" Junction119 as Connection289
                    connect "CALC FROM MEASUREMENTS.P" Junction123 as Connection385
                    connect "Control Panel Input1.out" Junction122 as Connection381
                    connect From1 Sum1.in as Connection167
                    connect From10 bitwise_faults.R50 as Connection197
                    connect From11 bitwise_faults.R27 as Connection195
                    connect From12 bitwise_faults.R51 as Connection199
                    connect From13 bitwise_faults.Reset as Connection210
                    connect From14 "Relay 25-Sync Check1.Va" as Connection219
                    connect From15 "Relay 25-Sync Check1.Vline_a" as Connection220
                    connect From16 "Relay 25-Sync Check1.line_freq" as Connection225
                    connect From17 "Relay 25-Sync Check1.bus_freq" as Connection238
                    connect From18 "Relay 25-Sync Check1.bus_wt" as Connection244
                    connect From19 "Relay 25-Sync Check1.line_wt" as Connection246
                    connect From2 Gain1.in as Connection168
                    connect From20 R50512761.Iinst_a as Connection336
                    connect From21 R50512761.Iinst_b as Connection337
                    connect From22 R50512761.Iinst_c as Connection338
                    connect From23 R50512761.Irms_b as Connection340
                    connect From24 R50512761.Irms_a as Connection339
                    connect From25 R50512761.Irms_c as Connection341
                    connect From26 R50512761.Vrms_c as Connection344
                    connect From27 R50512761.Vrms_b as Connection343
                    connect From28 R50512761.Vrms_a as Connection342
                    connect From29 "State Condition Mng.op_mode" as Connection309
                    connect From3 Gain4.in as Connection169
                    connect From30 "pf bitwise.exp_imp" as Connection313
                    connect From31 "pf bitwise.lag_lead" as Connection312
                    connect From32 "State Condition Mng.enable" as Connection318
                    connect From33 "State Condition Mng.initial_condition" as Connection319
                    connect From34 "Relay 25-Sync Check1.relay_paramR25" as Connection320
                    connect From35 R50512761.relay_param as Connection321
                    connect From36 R50512761.Reset as Connection335
                    connect From37 "Relay 25-Sync Check1.mode_in" as Connection334
                    connect From4 Gain5.in as Connection171
                    connect From5 Gain6.in as Connection173
                    connect From7 bitwise_faults.Status as Connection203
                    connect From8 bitwise_faults.R59 as Connection201
                    connect From9 bitwise_faults.R25 as Connection193
                    connect Gain1.out Sum1.in1 as Connection21
                    connect Gain4.out Sum1.in2 as Connection170
                    connect Gain5.out Sum1.in3 as Connection172
                    connect Gain6.out Sum1.in4 as Connection174
                    connect Gain7.out Sum3.in1 as Connection180
                    connect Gain8.in Junction106 as Connection186
                    connect Gain8.out Sum3.in2 as Connection183
                    connect Goto1 Junction100 as Connection152
                    connect Goto11 Junction110 as Connection242
                    connect Goto12 "CALC FROM MEASUREMENTS.bus_wt" as Connection243
                    connect Goto14 Junction111 as Connection249
                    connect Goto15 Junction112 as Connection252
                    connect Goto16 Junction113 as Connection255
                    connect Goto17 Junction115 as Connection273
                    connect Goto19 Junction116 as Connection276
                    connect Goto2 Junction101 as Connection155
                    connect Goto22 Junction119 as Connection367
                    connect Goto23 Relay_Param.op_mode as Connection329
                    connect Goto24 "CALC FROM MEASUREMENTS.Lag Lead" as Connection310
                    connect Goto25 "CALC FROM MEASUREMENTS.Export Import" as Connection311
                    connect Goto27 Relay_Param.Initial_condition as Connection331
                    connect Goto28 Relay_Param.relay_param as Connection333
                    connect Goto29 Relay_Param.relay_paramR25 as Connection332
                    connect Goto30 Junction130 as Connection409
                    connect Goto31 Junction131 as Connection412
                    connect Goto32 normalize.out as Connection401
                    connect Goto33 Junction126 as Connection397
                    [
                        breakpoints = 7320, 7792; 7320, 8240
                    ]
                    connect Goto34 Junction127 as Connection400
                    [
                        breakpoints = 7336, 7816; 7336, 8624
                    ]
                    connect Goto4 Junction121 as Connection298
                    connect Goto5 Junction104 as Connection164
                    connect Goto6 Junction105 as Connection178
                    connect Goto7 Relay_Param.reset as Connection330
                    connect Goto8 Junction108 as Connection213
                    connect Goto9 Junction109 as Connection216
                    connect Ia Junction111 as Connection247
                    connect Ib Junction112 as Connection250
                    connect Ic Junction113 as Connection253
                    connect Junction100 "Logical operator1.in" as Connection196
                    connect Junction101 "Logical operator1.in1" as Connection198
                    connect Junction101 R50512761.trip_51 as Connection154
                    connect Junction104 "State Condition Mng.R25" as Connection303
                    connect Junction105 Junction128 as Connection403
                    connect Junction106 not.in as Connection185
                    connect Junction110 "CALC FROM MEASUREMENTS.bus_freq" as Connection241
                    connect Junction114 "CALC FROM MEASUREMENTS.Ia_rms" as Connection269
                    connect Junction114 Goto18 as Connection355
                    connect Junction115 "Bus Join1.in7" as Connection272
                    connect Junction116 "Bus Join1.in8" as Connection275
                    connect Junction117 Goto21 as Connection365
                    connect Junction117 Junction125 as Connection392
                    connect Junction118 "CALC FROM MEASUREMENTS.Vb_rms" as Connection287
                    connect Junction118 Goto20 as Connection366
                    connect Junction119 "Bus Join1.in11" as Connection290
                    connect Junction120 Goto3 as Connection296
                    connect Junction121 R50512761.trip_59 as Connection299
                    connect Junction122 Goto26 as Connection380
                    connect Junction123 "Bus Join1.in18" as Connection386
                    [
                        breakpoints = 7288, 8176
                    ]
                    connect Junction124 "CALC FROM MEASUREMENTS.Q" as Connection390
                    connect Junction125 "CALC FROM MEASUREMENTS.Va_rms" as Connection393
                    connect Junction126 Junction110 as Connection396
                    connect Junction127 Junction106 as Connection399
                    connect Junction128 "Unit Delay4.out" as Connection404
                    connect Junction129 "State Condition Mng.Trip_in" as Connection407
                    connect Junction130 Junction123 as Connection410
                    connect Junction131 Junction124 as Connection413
                    connect Junction51 Junction129 as Connection406
                    connect "Logical operator1.in2" Junction120 as Connection297
                    connect "Logical operator1.in3" Junction121 as Connection300
                    connect "Logical operator1.out" Junction51 as Connection79
                    connect OUTPUT Junction105 as Connection176
                    connect P.in Junction130 as Connection411
                    connect Q.in Junction131 as Connection414
                    connect R50512761.trip_50 Junction100 as Connection150
                    connect R50512761.trip_27 Junction120 as Connection295
                    connect R50512761.Enable Junction122 as Connection379
                    connect "Relay 25-Sync Check1.bool_R25" Junction104 as Connection162
                    connect "Relay 25-Sync Check1.trip_or" Junction51 as Connection94
                    connect Sum3.in From6 as Connection179
                    connect Sum3.out "Unit Delay5.in" as Connection190
                    connect TO_MODBUS "Bus Join1.out" as Connection101
                    connect "Unit Delay2.out" "Bus Join1.in23" as Connection175
                    connect "Unit Delay2.in" Sum1.out as Connection104
                    connect "Unit Delay4.in" "State Condition Mng.trip_out" as Connection304
                    connect "Unit Delay5.out" "Bus Join1.in24" as Connection191
                    connect Va Junction109 as Connection214
                    connect Vb "CALC FROM MEASUREMENTS.Vb" as Connection108
                    connect Vc "CALC FROM MEASUREMENTS.Vc" as Connection109
                    connect Vline_a Junction108 as Connection211
                    connect Vline_b "CALC FROM MEASUREMENTS.Vline_b" as Connection111
                    connect Vline_c "CALC FROM MEASUREMENTS.Vline_c" as Connection112
                    connect cb_state Junction127 as Connection398
                    connect faults_status bitwise_faults.fault_status as Connection368
                    connect from_Modbus Relay_Param.from_Modbus as Connection328
                    connect normalize.in Junction125 as Connection402
                    connect not.out Gain7.in as Connection181
                    connect "pf bitwise.pf_states" pf_states as Connection369
                    connect trip_cmd.in Junction128 as Connection405
                    connect trip_in.in Junction129 as Connection408

                    CT_primary = "1200"
                    R27P_R59P_tripDelay = "2"
                    R27P_pickup1 = ".7"
                    R27P_pickup2 = ".5"
                    R50P_tripDelay2 = "0"
                    R51P_curveType2 = "1"
                    R51P_pickup1 = ".9"
                    R51P_pickup2 = ".9"
                    R51P_timeDial2 = "1"
                    R59P_pickup1 = "1.2"
                    R59P_pickup2 = "1.2"

                    mask {
                        description = "This block implements the relay SEL 787 with protective functions 25 (synchronism check), 27 (Under Voltage), 50 (Instantaneous Overcurrent), 51 (Time Overcurrent) and 59 (Overvoltage). 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            The relay outputs to Modbus are: 0 - Ia_mag; 1 - Ia_phase; 2 - Ib_mag; 3 - Ib_phase; 4 - Ic_mag; 5 - Ic_phase; 6 - Ia_rms; 7 - Ib_rms; 8 - Ic_rms; 9 - Va_rms; 10 - Vb_rms; 11 - Vc_rms; 12 - Va_mag; 13 - Va_phase; 14 - Vb_mag; 15 - Vb_phase; 16 - Vc_mag; 17 - Vc_phase; 18 - P; 19 - Q; 20 - S; 21 - pf; 22 - Bus_freq; 23 - protection functions status; 24 - Circuit Breaker status.

he relay inputs from Modbus are: 2001 - op_mode; 2002 - Reset; 2003 - protection_mode.

he trip pickups for functions 50 and 51 are defined as currents in the secondary of the current transformer. The secondary ot the CT has 5 turns."

                        VRMSLL {
                            label = "Line to Line RMS voltage"
                            widget = edit
                            type = generic
                            default_value = "13800.0"
                            unit = "V"
                            group = "Base Parameters"
                        }

                        dV_threshold {
                            label = "Voltage deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "5.0"
                            unit = "%"
                            group = "Base Parameters"
                        }

                        angle_threshold {
                            label = "Angle deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "12.0"
                            unit = "degree"
                            group = "Base Parameters"
                        }

                        dF_threshold {
                            label = "Frequency deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Hz"
                            group = "Base Parameters"
                        }

                        R27P_R59P_tripDelay {
                            label = "R27 UV and R59 OV trip delay"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Sec"
                            group = "Base Parameters"
                        }

                        CT_primary {
                            label = "CT primary turns number"
                            widget = edit
                            type = generic
                            default_value = "600"
                            group = "Base Parameters"
                        }

                        Initial_status {
                            label = "Initial relay status"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "Base Parameters"
                        }

                        R50P_pickup1 {
                            label = "R50 IOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R50P_tripDelay1 {
                            label = "R50 IOC trip delay 1"
                            widget = edit
                            type = generic
                            default_value = "0"
                            unit = "sec"
                            group = "GridTied Parameters"
                        }

                        R51P_pickup1 {
                            label = "R51 TOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.8"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R51P_curveType1 {
                            label = "R51 TOC curve type 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R51P_timeDial1 {
                            label = "R51 TOC time dial 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R27P_pickup1 {
                            label = "R27 UV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R59P_pickup1 {
                            label = "R59 OV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R50P_pickup2 {
                            label = "R50 IOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R50P_tripDelay2 {
                            label = "R50 IOC trip delay 2"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            unit = "sec"
                            group = "Islanded Parameters"
                        }

                        R51P_pickup2 {
                            label = "R51 TOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.7"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R51P_curveType2 {
                            label = "R51 TOC curve type 2"
                            widget = edit
                            type = generic
                            default_value = "2.0"
                            group = "Islanded Parameters"
                        }

                        R51P_timeDial2 {
                            label = "R51 TOC time dial 2"
                            widget = edit
                            type = generic
                            default_value = "3.0"
                            group = "Islanded Parameters"
                        }

                        R27P_pickup2 {
                            label = "R27 UV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        R59P_pickup2 {
                            label = "R59 OV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE
                    }
                }
                [
                    position = 7952, 8168
                    size = 152, 240
                ]

                port Brk_cmd {
                    label = "Brk_cmd"
                    position = bottom:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7792, 8496
                    rotation = right
                ]

                port IABC {
                    label = "IABC"
                    position = right:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7792, 7936
                ]

                port VABC_grid {
                    label = "VABC_grid"
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7648, 7936
                ]

                port VABC_load {
                    label = "VABC_load"
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7520, 7936
                ]

                junction Junction1391 sp
                [
                    position = 8120, 7928
                ]

                junction Junction1392 sp
                [
                    position = 8120, 7976
                ]

                junction Junction1393 sp
                [
                    position = 7952, 8344
                ]

                junction Junction1396 sp
                [
                    position = 7792, 8448
                ]

                junction Junction1397 sp
                [
                    position = 7648, 8344
                ]

                comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset the relay when input is 1</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Operation Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 1 force the breaker closed</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 0 turns on logic based operation</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Protection Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 1 use islanded parameters</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 0 use grid tied parameters</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                [
                    position = 7968, 8328
                ]

                connect Brk_cmd Junction1396 as Connection899
                connect "Bus Split1.in" IABC as Connection907
                connect "Bus Split1.out2" SEL_787.Ic as Connection910
                connect "Bus Split1.out" SEL_787.Ia as Connection908
                connect "Bus Split1.out1" SEL_787.Ib as Connection909
                connect "Bus Split2.out1" SEL_787.Vb as Connection913
                connect "Bus Split2.out" SEL_787.Va as Connection912
                connect "Bus Split2.out2" SEL_787.Vc as Connection914
                connect "Bus Split3.out1" SEL_787.Vline_b as Connection929
                connect "Bus Split3.out" SEL_787.Vline_a as Connection928
                connect "Bus Split3.out2" SEL_787.Vline_c as Connection930
                connect CB_state.in Junction1397 as Connection905
                connect Constant2.out "Signal switch1.in1" as Connection880
                connect Delay1.out "Signal switch1.in" as Connection2
                connect Junction1391 Constant1.out as Connection852
                connect Junction1391 "ModBus Device1.coil_in" as Connection313
                connect Junction1392 Junction1391 as Connection314
                connect Junction1393 Delay1.in as Connection867
                connect Junction1396 "Signal switch1.out" as Connection902
                connect Junction1397 Junction1396 as Connection904
                connect "ModBus Device1.holding_in" Junction1392 as Connection466
                connect "ModBus Device1.discrete_in" Junction1392 as Connection467
                connect "ModBus Device1.holding_out" SEL_787.from_Modbus as Connection932
                connect "ModBus Device1.coil_out" Term3.in as Connection854
                connect SEL_787.OUTPUT Junction1393 as Connection868
                connect SEL_787.cb_state Junction1397 as Connection903
                connect SEL_787.TO_MODBUS "ModBus Device1.reg_in" as Connection931
                connect SEL_787.pf_states Term4.in as Connection897
                connect "Signal switch1.in2" Junction1393 as Connection866
                connect Term5.in SEL_787.faults_status as Connection870
                connect VABC_grid "Bus Split2.in" as Connection934
                connect VABC_load "Bus Split3.in" as Connection933
            }
            [
                position = 8000, 8200
                rotation = left
                size = 136, 72
            ]

            port b {
                position = bottom:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 8432
                rotation = left
            ]

            port a {
                position = bottom:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 8472
                rotation = left
            ]

            port B {
                position = top:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 7976
                rotation = right
            ]

            port c {
                position = bottom:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8392
                rotation = left
            ]

            port A {
                position = top:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 7936
                rotation = right
            ]

            port C {
                position = top:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8016
                rotation = right
            ]

            connect A Meas1.A as Connection2626
            connect Brk.B Meas1.b as Connection2628
            connect Brk.c Meas2.C as Connection2630
            connect Brk.a Meas2.A as Connection2632
            connect C Meas1.C as Connection2624
            connect MID_Rly1.Brk_cmd Brk.control as Connection2604
            connect MID_Rly1.VABC_grid Meas1.V as Connection2636
            connect MID_Rly1.VABC_load Meas2.V as Connection2637
            connect Meas1.B B as Connection2625
            connect Meas1.a Brk.A as Connection2627
            connect Meas1.c Brk.C as Connection2629
            connect Meas1.I MID_Rly1.IABC as Connection2621
            connect Meas2.B Brk.b as Connection2631
            connect Meas2.a a as Connection2633
            connect Meas2.c c as Connection2635
            connect b Meas2.b as Connection2634
        }
        [
            position = 11920, 7992
            size = 80, 48
        ]

        component Subsystem CIL_F3_Priority4 {
            layout = dynamic
            component pas_resistor Ra {
                resistance = "V**2/S*pf"
            }
            [
                position = 8136, 8136
            ]

            component pas_inductor La {
                inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
            }
            [
                position = 8232, 8136
            ]

            component pas_resistor Rc {
                resistance = "V**2/S*pf"
            }
            [
                position = 8136, 8248
            ]

            component pas_inductor Lb {
                inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
            }
            [
                position = 8232, 8192
            ]

            component pas_resistor Rb {
                resistance = "V**2/S*pf"
            }
            [
                position = 8136, 8192
            ]

            component pas_inductor Lc {
                inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
            }
            [
                position = 8232, 8248
            ]

            port A {
                label = "A"
                position = left:1
                kind = pe
            }
            [
                position = 8056, 8136
            ]

            port B {
                label = "B"
                position = left:2
                kind = pe
            }
            [
                position = 8056, 8192
            ]

            port C {
                label = "C"
                position = left:3
                kind = pe
            }
            [
                position = 8056, 8248
            ]

            junction Junction1 pe
            [
                position = 8288, 8192
            ]

            connect Junction1 Lc.n_node as Connection17
            connect La.n_node Junction1 as Connection16
            connect Lb.n_node Junction1 as Connection18
            connect Lb.p_node Rb.n_node as Connection13
            connect Ra.p_node A as Connection8
            connect Ra.n_node La.p_node as Connection12
            connect Rb.p_node B as Connection1
            connect Rc.p_node C as Connection10
            connect Rc.n_node Lc.p_node as Connection14

            S = "600e3"
            pf = ".9"

            mask {
                description = "Constant Impedance Load
hree-phase Y connected RL load.
and L values are calculated using the input parameters:
ated line-to-line voltage
ated three-phase power
f: Rated frequency
pf: Rated power factor
one of the parameters can be set to 0."

                V {
                    label = "Voltage"
                    widget = edit
                    type = generic
                    default_value = "480"
                    unit = "V"
                    group = "General"
                }

                S {
                    label = "Power"
                    widget = edit
                    type = generic
                    default_value = "2e6"
                    unit = "VA"
                    group = "General"
                }

                f {
                    label = "Frequency"
                    widget = edit
                    type = generic
                    default_value = "60"
                    unit = "Hz"
                    group = "General"
                }

                pf {
                    label = "Power Factor"
                    widget = edit
                    type = generic
                    default_value = ".8"
                    group = "General"
                }

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 11520, 8752
            rotation = right
            scale = -1, 1
            size = 48, 80
        ]

        component Subsystem Feeder3_trafo2 {
            layout = dynamic
            component "core/Three Phase Two Winding Transformer" Tr1 {
                L1 = "L1_2MVA_2"
                L2 = "L2_2MVA_2"
                Lm = "20"
                Poc1 = "5713.2"
                Psc1 = "13247.9599806"
                R1 = "R1_2MVA_2"
                R2 = "R2_2MVA_2"
                Rm = "1e5"
                Sn = "Sn_2MVA_2"
                V1 = "V1_2MVA_2"
                V2 = "V2_2MVA_2"
                clock_number = "1"
                current_vals_SI = "[0.03135346870762468, 13.063945294843618]"
                current_vals_pu = "[0.0004589241819730884, 0.19121840915496557]"
                f = "sys_f"
                flux_vals_SI = "[31.18787204934705, 39.50463792917293]"
                flux_vals_pu = "[0.6024524548056571, 0.7631064427555065]"
                input = "SI"
                ioc1 = "3.79943728661"
                l1 = "0.00471958574309"
                l2 = "0.0141587572293"
                lm = "26.3943932249"
                r1 = "0.00165599499758"
                r2 = "0.00496798499273"
                rm = "350.066512637"
                usc1 = "2.00067224776"
                winding_1_connection = "D"
            }
            [
                position = 8192, 8192
                size = 126, 256
            ]

            port A1 {
                position = left:1
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8096
            ]

            port B1 {
                position = left:2
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8192
            ]

            port C1 {
                position = left:3
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8288
            ]

            port a2 {
                position = right:1
                kind = pe
                direction =  out
            }
            [
                position = 8304, 8096
                rotation = down
            ]

            port b2 {
                position = right:2
                kind = pe
                direction =  out
            }
            [
                position = 8304, 8192
                rotation = down
            ]

            port c2 {
                position = right:3
                kind = pe
                direction =  out
            }
            [
                position = 8304, 8288
                rotation = down
            ]

            port Ground {
                position = bottom:3
                kind = pe
                direction =  out
            }
            [
                position = 8304, 8368
                rotation = down
            ]

            connect Ground Tr1.n2 as Connection9
            connect Tr1.prm_1 A1 as Connection6
            connect Tr1.prm_2 B1 as Connection8
            connect Tr1.prm_3 C1 as Connection2
            connect Tr1.sec_1 a2 as Connection3
            connect Tr1.sec_2 b2 as Connection4
            connect Tr1.sec_3 c2 as Connection1
        }
        [
            position = 11096, 8528
            rotation = right
            scale = -1, 1
            size = 72, 64
        ]

        component Subsystem CIL_F3_Priority6 {
            layout = dynamic
            component pas_resistor Rc {
                resistance = "V**2/S*pf"
            }
            [
                position = 8136, 8248
            ]

            component pas_inductor La {
                inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
            }
            [
                position = 8232, 8136
            ]

            component pas_inductor Lb {
                inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
            }
            [
                position = 8232, 8192
            ]

            component pas_resistor Ra {
                resistance = "V**2/S*pf"
            }
            [
                position = 8136, 8136
            ]

            component pas_resistor Rb {
                resistance = "V**2/S*pf"
            }
            [
                position = 8136, 8192
            ]

            component pas_inductor Lc {
                inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
            }
            [
                position = 8232, 8248
            ]

            port A {
                label = "A"
                position = left:1
                kind = pe
            }
            [
                position = 8056, 8136
            ]

            port B {
                label = "B"
                position = left:2
                kind = pe
            }
            [
                position = 8056, 8192
            ]

            port C {
                label = "C"
                position = left:3
                kind = pe
            }
            [
                position = 8056, 8248
            ]

            junction Junction1 pe
            [
                position = 8288, 8192
            ]

            connect Junction1 Lc.n_node as Connection17
            connect La.n_node Junction1 as Connection16
            connect Lb.n_node Junction1 as Connection18
            connect Lb.p_node Rb.n_node as Connection13
            connect Ra.p_node A as Connection8
            connect Ra.n_node La.p_node as Connection12
            connect Rb.p_node B as Connection1
            connect Rc.p_node C as Connection10
            connect Rc.n_node Lc.p_node as Connection14

            S = "1000e3"
            pf = ".9"

            mask {
                description = "Constant Impedance Load
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Three-phase Y connected RL load.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                R and L values are calculated using the input parameters:
ated line-to-line voltage
ated three-phase power
f: Rated frequency
pf: Rated power factor
one of the parameters can be set to 0."

                V {
                    label = "Voltage"
                    widget = edit
                    type = generic
                    default_value = "480"
                    unit = "V"
                    group = "General"
                }

                S {
                    label = "Power"
                    widget = edit
                    type = generic
                    default_value = "2e6"
                    unit = "VA"
                    group = "General"
                }

                f {
                    label = "Frequency"
                    widget = edit
                    type = generic
                    default_value = "60"
                    unit = "Hz"
                    group = "General"
                }

                pf {
                    label = "Power Factor"
                    widget = edit
                    type = generic
                    default_value = ".8"
                    group = "General"
                }

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 13096, 8864
            rotation = right
            scale = -1, 1
            size = 48, 80
        ]

        component Subsystem F3_CB7 {
            layout = dynamic
            component Subsystem MID_Rly1 {
                layout = dynamic
                component src_constant Constant1 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 8056, 7928
                ]

                component gen_bus_split "Bus Split1" {
                    outputs = "3"
                }
                [
                    position = 7832, 8000
                    rotation = right
                ]

                component gen_terminator Term5 {
                }
                [
                    position = 8152, 8136
                    rotation = down
                    scale = -1, 1
                ]

                component gen_bus_split "Bus Split3" {
                    outputs = "3"
                }
                [
                    position = 7576, 8000
                    rotation = right
                ]

                component gen_terminator Term3 {
                }
                [
                    position = 8440, 7928
                ]

                component sys_signal_switch "Signal switch1" {
                    threshold = "0.5"
                }
                [
                    position = 7792, 8400
                    rotation = right
                ]

                component gen_probe CB_state {
                }
                [
                    position = 7592, 8344
                    rotation = down
                ]

                component gen_delay Delay1 {
                    del_length = "int(3.0/60.0/Ts)"
                }
                [
                    position = 7880, 8344
                    rotation = down
                ]

                component gen_bus_split "Bus Split2" {
                    outputs = "3"
                }
                [
                    position = 7704, 8000
                    rotation = right
                ]

                component gen_terminator Term4 {
                }
                [
                    position = 8152, 8200
                    rotation = down
                    scale = -1, 1
                ]

                component src_constant Constant2 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 7776, 8344
                    rotation = right
                ]

                component "core/ModBus Device" "ModBus Device1" {
                    configuration = "configF3_CB7"
                    execution_rate = "Ts"
                }
                [
                    position = 8272, 8000
                    size = 184, 184
                ]

                component Subsystem SEL_787 {
                    layout = dynamic
                    component gen_sum Sum1 {
                        signs = "5"
                    }
                    [
                        position = 7648, 8384
                    ]

                    component gen_logic_op "Logical operator1" {
                        inputs = "4"
                        operator = "OR"
                    }
                    [
                        position = 8720, 8128
                        rotation = left
                    ]

                    component gen_bus_join "Bus Join1" {
                        inputs = "25"
                    }
                    [
                        position = 7928, 8080
                    ]

                    component gen_c_function bitwise_faults {
                        in_terminal_dimensions_str = "Status inherit;R25 inherit;R27 inherit;R50 inherit;R51 inherit;R59 inherit;Reset inherit;"
                        in_terminal_properties = "inherit Status;inherit R25;inherit R27;inherit R50;inherit R51;inherit R59;inherit Reset;"
                        no_feed_inputs = "[]"
                        no_feed_outputs = "[]"
                        out_terminal_dimensions_str = "fault_status inherit;"
                        out_terminal_properties = "uint fault_status;"
                        output_fnc = "/*Begin code section*/
fault_status= (uint)Status<<1 | (uint)R25<<2 | (uint)R27<<3 | (uint)R50<<4 | (uint)R51<<5 | (uint)R59<<6 | (uint)Reset<<7;
/*End code section*/"
                    }
                    [
                        position = 9200, 8272
                    ]

                    component src_scada_input "Control Panel Input1" {
                        execution_rate = "Ts"
                        max = "1"
                        min = "0"
                        unit = ""
                    }
                    [
                        position = 8136, 8192
                    ]

                    component gen_sum Sum3 {
                        signs = "3"
                    }
                    [
                        position = 7640, 8624
                    ]

                    component gen_gain Gain5 {
                        gain = "8"
                    }
                    [
                        position = 7512, 8432
                        rotation = left
                    ]

                    component tm_delay "Unit Delay4" {
                    }
                    [
                        position = 9496, 8056
                    ]

                    component gen_c_function "pf bitwise" {
                        in_terminal_dimensions_str = "exp_imp inherit;lag_lead inherit;"
                        in_terminal_properties = "inherit exp_imp;inherit lag_lead;"
                        no_feed_inputs = "[u\'\']"
                        no_feed_outputs = "[u\'\']"
                        out_terminal_dimensions_str = "pf_states inherit;"
                        out_terminal_properties = "uint pf_states;"
                        output_fnc = "/*Begin code section*/
pf_states=(uint)exp_imp<<1 | (uint)lag_lead<<2;
/*End code section*/"
                    }
                    [
                        position = 9200, 8416
                    ]

                    component tm_delay "Unit Delay2" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7728, 8304
                        rotation = left
                    ]

                    component gen_logic_op not {
                        operator = "NOT"
                    }
                    [
                        position = 7440, 8624
                    ]

                    component gen_gain Gain6 {
                        gain = "16"
                    }
                    [
                        position = 7584, 8456
                        rotation = left
                    ]

                    component gen_gain Gain4 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8384
                    ]

                    component gen_gain Gain7 {
                        gain = "2"
                    }
                    [
                        position = 7512, 8624
                    ]

                    component gen_gain Gain1 {
                        gain = "2"
                    }
                    [
                        position = 7536, 8328
                        rotation = right
                    ]

                    component gen_gain Gain8 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8688
                    ]

                    component tm_delay "Unit Delay5" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7840, 8392
                        rotation = left
                    ]

                    component gen_gain normalize {
                        gain = "np.sqrt(3.0)/480.0"
                    }
                    [
                        position = 7304, 7720
                    ]

                    component gen_probe P {
                    }
                    [
                        position = 7336, 7568
                    ]

                    component gen_probe Q {
                    }
                    [
                        position = 7336, 7616
                    ]

                    component Subsystem "State Condition Mng" {
                        layout = dynamic
                        component gen_logic_op not1 {
                            operator = "NOT"
                        }
                        [
                            position = 8032, 8264
                        ]

                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8120, 8352
                            scale = 1, -1
                        ]

                        component gen_c_function "Trip_out mng fnc" {
                            in_terminal_dimensions_str = "bool_R25 inherit;op_mode_in inherit;trip_in inherit;enable inherit;initial_condition inherit;activate_logic inherit;"
                            in_terminal_properties = "real bool_R25;inherit op_mode_in;inherit trip_in;inherit enable;inherit initial_condition;inherit activate_logic;"
                            init_fnc = "/*Begin code section*/
trip_out = initial_condition;
/*End code section*/"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "trip_out inherit;"
                            out_terminal_properties = "real trip_out;"
                            output_fnc = "/*Begin code section*/
if(enable && activate_logic){
    if(op_mode_in==0){
        trip_out = trip_in*bool_R25;
    }
    else if(op_mode_in==1){
        trip_out = 1*bool_R25;
    }
    else if(op_mode_in==2){
        trip_out=0;
    }
}
/*End code section*/"
                        }
                        [
                            position = 8424, 8208
                        ]

                        component gen_logic_op not {
                            operator = "NOT"
                        }
                        [
                            position = 7840, 8200
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8200, 8336
                            scale = 1, -1
                        ]

                        component Subsystem detect_change {
                            layout = dynamic
                            component gen_rel_op "Relational operator1" {
                                relational_op = "!="
                            }
                            [
                                position = 8240, 8192
                            ]

                            component tm_delay "Unit Delay1" {
                            }
                            [
                                position = 8144, 8200
                            ]

                            port Out1 {
                                label = "Out"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8304, 8192
                            ]

                            port In3 {
                                label = "In"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8032, 8200
                            ]

                            junction Junction1 sp
                            [
                                position = 8080, 8200
                            ]

                            connect Junction1 In3 as Connection1
                            connect "Relational operator1.in" Junction1 as Connection2
                            connect "Relational operator1.out" Out1 as Connection3
                            connect "Unit Delay1.in" Junction1 as Connection4
                            connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                        }
                        [
                            position = 7960, 8368
                            size = 48, 48
                        ]

                        port Trip_in {
                            label = "Trip_in"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7768, 8200
                        ]

                        port R25 {
                            label = "R25"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8232, 8128
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8272, 8160
                        ]

                        port trip_out {
                            label = "trip_out"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8536, 8208
                        ]

                        port enable {
                            label = "enable"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7952, 8264
                        ]

                        port initial_condition {
                            label = "initial_condition"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8248, 8232
                        ]

                        junction Junction2 sp
                        [
                            position = 7984, 8264
                        ]

                        junction Junction3 sp
                        [
                            position = 7904, 8200
                        ]

                        connect Junction2 enable as Connection150
                        connect Junction3 not.out as Connection158
                        connect R25 "Trip_out mng fnc.bool_R25" as Connection144
                        connect "SR Flip Flop1.r_in" not1.out as Connection136
                        connect Termination1.in "SR Flip Flop1.out_n" as Connection138
                        connect "Trip_out mng fnc.enable" Junction2 as Connection151
                        connect "Trip_out mng fnc.trip_in" Junction3 as Connection157
                        connect "Trip_out mng fnc.activate_logic" "SR Flip Flop1.out" as Connection154
                        connect detect_change.In3 Junction3 as Connection159
                        connect detect_change.Out1 "SR Flip Flop1.s_in" as Connection156
                        connect initial_condition "Trip_out mng fnc.initial_condition" as Connection152
                        connect not.in Trip_in as Connection139
                        connect not1.in Junction2 as Connection149
                        connect op_mode "Trip_out mng fnc.op_mode_in" as Connection145
                        connect trip_out "Trip_out mng fnc.trip_out" as Connection167
                    }
                    [
                        position = 9336, 8056
                        size = 128, 136
                    ]

                    component Subsystem Relay_Param {
                        layout = dynamic
                        component src_constant CT_primary {
                            execution_rate = "Ts"
                            value = "CT_primary"
                        }
                        [
                            position = 8088, 7928
                        ]

                        component src_constant dF_threshold {
                            execution_rate = "Ts"
                            value = "dF_threshold"
                        }
                        [
                            position = 8088, 7760
                        ]

                        component src_constant VRMSLL {
                            execution_rate = "Ts"
                            value = "VRMSLL"
                        }
                        [
                            position = 8088, 7592
                        ]

                        component src_constant Initial_status {
                            execution_rate = "Ts"
                            value = "Initial_status"
                        }
                        [
                            position = 8088, 7992
                        ]

                        component src_constant angle_threshold {
                            execution_rate = "Ts"
                            value = "angle_threshold"
                        }
                        [
                            position = 8088, 7704
                        ]

                        component src_constant dV_threshold {
                            execution_rate = "Ts"
                            value = "dV_threshold"
                        }
                        [
                            position = 8088, 7648
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "3"
                        }
                        [
                            position = 8104, 8192
                            rotation = down
                            scale = -1, -1
                        ]

                        component sys_signal_switch "Signal switch1" {
                            threshold = "0.5"
                        }
                        [
                            position = 9104, 7808
                            scale = 1, -1
                        ]

                        component src_constant 27P_59P_tripDelay {
                            execution_rate = "Ts"
                            value = "R27P_R59P_tripDelay"
                        }
                        [
                            position = 8088, 7872
                        ]

                        component gen_bus_join "Bus Join1" {
                            inputs = "4"
                        }
                        [
                            position = 8296, 7800
                            rotation = right
                        ]

                        component Subsystem Grid_Tied_param {
                            layout = dynamic
                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup1"
                            }
                            [
                                position = 8312, 7840
                                rotation = right
                            ]

                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup1"
                            }
                            [
                                position = 8080, 7840
                                rotation = right
                            ]

                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7904
                                rotation = right
                            ]

                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType1"
                            }
                            [
                                position = 8240, 7880
                                rotation = right
                            ]

                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8552, 8040
                            ]

                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup1"
                            }
                            [
                                position = 8416, 7840
                                rotation = right
                            ]

                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay1"
                            }
                            [
                                position = 8352, 7880
                                rotation = right
                            ]

                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial1"
                            }
                            [
                                position = 8200, 7840
                                rotation = right
                            ]

                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup1"
                            }
                            [
                                position = 8120, 7880
                                rotation = right
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7840
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7880
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7880
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8704, 8040
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8776, 7936
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 8872, 7728
                            size = 216, 104
                        ]

                        component Subsystem Islanded_param {
                            layout = dynamic
                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay2"
                            }
                            [
                                position = 8352, 7888
                                rotation = right
                            ]

                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup2"
                            }
                            [
                                position = 8120, 7888
                                rotation = right
                            ]

                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8544, 8048
                            ]

                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup2"
                            }
                            [
                                position = 8072, 7856
                                rotation = right
                            ]

                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup2"
                            }
                            [
                                position = 8296, 7856
                                rotation = right
                            ]

                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup2"
                            }
                            [
                                position = 8400, 7856
                                rotation = right
                            ]

                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial2"
                            }
                            [
                                position = 8192, 7856
                                rotation = right
                            ]

                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType2"
                            }
                            [
                                position = 8240, 7888
                                rotation = right
                            ]

                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7920
                                rotation = right
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7856
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7888
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7888
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8696, 8048
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8744, 7928
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 9224, 8040
                            size = 216, 104
                        ]

                        component Subsystem Reset {
                            layout = dynamic
                            component gen_logic_op or {
                                operator = "OR"
                            }
                            [
                                position = 8152, 8192
                            ]

                            component Subsystem detect_change {
                                layout = dynamic
                                component tm_delay "Unit Delay1" {
                                }
                                [
                                    position = 8144, 8200
                                ]

                                component gen_rel_op "Relational operator1" {
                                    relational_op = "!="
                                }
                                [
                                    position = 8240, 8192
                                ]

                                port Out1 {
                                    label = "Out"
                                    position = right:1
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8304, 8192
                                ]

                                port In3 {
                                    label = "In"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8032, 8200
                                ]

                                junction Junction1 sp
                                [
                                    position = 8080, 8200
                                ]

                                connect Junction1 In3 as Connection1
                                connect "Relational operator1.in" Junction1 as Connection2
                                connect "Relational operator1.out" Out1 as Connection3
                                connect "Unit Delay1.in" Junction1 as Connection4
                                connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                            }
                            [
                                position = 8248, 8192
                                size = 48, 48
                            ]

                            port reset {
                                label = "Reset"
                                position = right:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8336, 8152
                            ]

                            port op_mode {
                                label = "Op_mode"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8344, 8240
                            ]

                            port "Reset in" {
                                label = "Reset in"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8168
                            ]

                            port "op_mode in" {
                                label = "op_mode in"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8224
                            ]

                            junction Junction1 sp
                            [
                                position = 8096, 8224
                            ]

                            connect Junction1 "op_mode in" as Connection1
                            connect detect_change.Out1 reset as Connection5
                            connect op_mode Junction1 as Connection6
                            connect or.in1 Junction1 as Connection3
                            connect or.in "Reset in" as Connection2
                            connect or.out detect_change.In3 as Connection4
                        }
                        [
                            position = 8280, 8192
                            rotation = down
                            scale = -1, -1
                            size = 104, 104
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8160
                        ]

                        port reset {
                            label = "reset"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8224
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8360, 7856
                        ]

                        port Initial_condition {
                            label = "Initial_condition"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8192, 7992
                        ]

                        port from_Modbus {
                            label = "from_Modbus"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7992, 8192
                        ]

                        port relay_param {
                            label = "relay_param"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9200, 7808
                        ]

                        tag From3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7760
                        ]

                        tag Goto2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7872
                        ]

                        tag From1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7696
                        ]

                        tag From2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8616, 7728
                        ]

                        tag From4 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 9104, 7904
                            rotation = right
                            scale = 1, -1
                        ]

                        tag Goto1 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8232, 8280
                        ]

                        tag Goto4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8208, 7544
                        ]

                        tag Goto3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7928
                        ]

                        junction Junction1 sp
                        [
                            position = 8152, 7592
                        ]

                        junction Junction2 sp
                        [
                            position = 8736, 7696
                        ]

                        junction Junction3 sp
                        [
                            position = 8712, 7728
                        ]

                        junction Junction4 sp
                        [
                            position = 8688, 7760
                        ]

                        connect "Bus Join1.in" Junction1 as Connection54
                        connect "Bus Join1.in2" angle_threshold.out as Connection48
                        connect "Bus Join1.in3" dF_threshold.out as Connection49
                        connect "Bus Join1.in1" dV_threshold.out as Connection47
                        connect "Bus Split1.out1" "Reset.Reset in" as Connection75
                        connect "Bus Split1.in" from_Modbus as Connection42
                        connect From1 Junction2 as Connection60
                        connect From2 Junction3 as Connection63
                        connect From3 Junction4 as Connection66
                        connect From4 "Signal switch1.in2" as Connection71
                        connect Goto1 "Bus Split1.out2" as Connection45
                        connect Goto2 27P_59P_tripDelay.out as Connection51
                        connect Goto3 CT_primary.out as Connection52
                        connect Goto4 Junction1 as Connection56
                        connect Initial_condition Initial_status.out as Connection53
                        connect Islanded_param.VRMSLL Junction2 as Connection62
                        connect Islanded_param.27P_59P_tripDelay Junction3 as Connection65
                        connect Islanded_param.CT_primary Junction4 as Connection68
                        connect Junction1 VRMSLL.out as Connection55
                        connect Junction2 Grid_Tied_param.VRMSLL as Connection61
                        connect Junction3 Grid_Tied_param.27P_59P_tripDelay as Connection64
                        connect Junction4 Grid_Tied_param.CT_primary as Connection67
                        connect "Reset.op_mode in" "Bus Split1.out" as Connection76
                        connect Reset.op_mode op_mode as Connection43
                        connect Reset.reset reset as Connection44
                        connect "Signal switch1.in1" Grid_Tied_param.relay_param as Connection73
                        connect "Signal switch1.in" Islanded_param.relay_param as Connection72
                        connect relay_param "Signal switch1.out" as Connection74
                        connect relay_paramR25 "Bus Join1.out" as Connection50
                    }
                    [
                        position = 8344, 7976
                        size = 168, 160
                    ]

                    component Subsystem "Relay 25-Sync Check1" {
                        layout = dynamic
                        component gen_gain Gain2 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7832
                        ]

                        component gen_c_function "Deadbus fcn" {
                            global_variables = "real threshold;uint a;uint c;uint b;"
                            in_terminal_dimensions_str = "Vbus inherit;Vline inherit;VRMSLL inherit;"
                            in_terminal_properties = "real Vbus;real Vline;real VRMSLL;"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "out inherit;"
                            output_fnc = "/*Begin code section*/
if (VRMSLL > 400)
    threshold=VRMSLL*0.003;
else
    threshold = VRMSLL*0.05;

if ((Vbus > (VRMSLL*0.90)) && (Vbus < (VRMSLL*1.20)) && (Vline < threshold))
    a = 1;
else
    a = 0;

if ((Vline > (VRMSLL*0.90)) && (Vline < (VRMSLL*1.20)) && (Vbus < threshold))
    b = 1;
else
    b = 0;

if ((Vline < threshold) && (Vbus < threshold))
    c = 1;
else
    c = 0;

out = a || b || c;
/*End code section*/"
                        }
                        [
                            position = 8208, 7672
                        ]

                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7784, 7832
                        ]

                        component gen_logic_op "Logical operator5" {
                            operator = "OR"
                        }
                        [
                            position = 8544, 7848
                        ]

                        component gen_rel_op "Relational operator1" {
                        }
                        [
                            position = 8464, 7856
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8808, 7904
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7784, 7776
                        ]

                        component gen_gain Gain1 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7776
                        ]

                        component gen_gain Gain3 {
                            gain = "1.0/10.0"
                        }
                        [
                            position = 7776, 8080
                        ]

                        component gen_logic_op "Logical operator7" {
                            operator = "OR"
                        }
                        [
                            position = 8632, 7888
                        ]

                        component src_constant Constant2 {
                            execution_rate = "Ts"
                            value = "[2]"
                        }
                        [
                            position = 8368, 7848
                        ]

                        component gen_logic_op "Logical operator4" {
                            operator = "OR"
                        }
                        [
                            position = 8888, 8096
                        ]

                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8736, 7864
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "4"
                        }
                        [
                            position = 7808, 8424
                        ]

                        component gen_logic_op "Logical operator3" {
                            inputs = "3"
                        }
                        [
                            position = 8336, 8104
                        ]

                        component Subsystem "Phase Comparator" {
                            layout = dynamic
                            component gen_probe c_out {
                                addr = "17943"
                            }
                            [
                                position = 7768, 8000
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7808, 8056
                            ]

                            component gen_c_function "C function1" {
                                global_variables = "real mod_L;real wrap_out1;real wrap_out2;real mod_B;real k;real alpha;real PI2;real PI;"
                                in_terminal_dimensions_str = "phase_bus inherit;phase_line inherit;"
                                in_terminal_properties = "real phase_bus;real phase_line;"
                                init_fnc = "/*Begin code section*/
PI = 3.1415926536;
PI2 = 2*PI;
/*End code section*/"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
mod_L=fmod(phase_line, PI2);
mod_B=fmod(phase_bus, PI2);

if (fabs(mod_L - mod_B) > PI) {
    if (mod_L < mod_B)
        mod_B -= PI2;
    else
        mod_B += PI2;
}

out=fabs(mod_L-mod_B)*180.0/PI;
/*End code section*/"
                            }
                            [
                                position = 7656, 8040
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8056
                            ]

                            port wt_grid {
                                label = "wt_grid"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8008
                            ]

                            port wt_gen {
                                label = "wt_gen"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8072
                            ]

                            port angle_threshold {
                                label = "angle_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7576, 8136
                            ]

                            junction Junction1 sp
                            [
                                position = 7736, 8048
                            ]

                            connect Junction1 "C function1.out" as Connection2
                            connect Locked "Relational operator1.out" as Connection3
                            connect "Relational operator1.in" Junction1 as Connection4
                            connect angle_threshold "Relational operator1.in1" as Connection8
                            connect c_out.in Junction1 as Connection5
                            connect wt_gen "C function1.phase_line" as Connection6
                            connect wt_grid "C function1.phase_bus" as Connection7
                        }
                        [
                            position = 8016, 8272
                            size = 112, 88
                        ]

                        component Subsystem "Freq Comparator" {
                            layout = dynamic
                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7832, 8048
                            ]

                            component gen_c_function "C function1" {
                                in_terminal_dimensions_str = "fbus inherit;fline inherit;"
                                in_terminal_properties = "real fbus;inherit fline;"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
out=fabs(fline-fbus);
/*End code section*/"
                            }
                            [
                                position = 7736, 8040
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8048
                            ]

                            port f_bus {
                                label = "f_bus"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port f_line {
                                label = "f_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port dF_threshold {
                                label = "dF_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7728, 8112
                            ]

                            connect "Relational operator1.in" "C function1.out" as Connection6
                            connect "Relational operator1.out" Locked as Connection8
                            connect "Relational operator1.in1" dF_threshold as Connection7
                            connect f_bus "C function1.fbus" as Connection4
                            connect f_line "C function1.fline" as Connection5
                        }
                        [
                            position = 8016, 8104
                            size = 112, 88
                        ]

                        component Subsystem "Voltage Comparator" {
                            layout = dynamic
                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7856, 8048
                            ]

                            component gen_c_function "C function1" {
                                in_terminal_dimensions_str = "Vbus inherit;Vline inherit;"
                                in_terminal_properties = "real Vbus;inherit Vline;"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
out=fabs(Vline-Vbus);
/*End code section*/"
                            }
                            [
                                position = 7736, 8040
                            ]

                            component gen_gain Gain1 {
                                gain = "0.01"
                            }
                            [
                                position = 7680, 8200
                            ]

                            component gen_product Product1 {
                            }
                            [
                                position = 7760, 8160
                            ]

                            port V_bus {
                                label = "V_bus"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port V_line {
                                label = "V_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7928, 8048
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8152
                            ]

                            port dV_threshold {
                                label = "dV_threshold"
                                position = left:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8200
                            ]

                            connect Gain1.in dV_threshold as Connection8
                            connect Product1.in1 Gain1.out as Connection7
                            connect Product1.out "Relational operator1.in1" as Connection9
                            connect Product1.in VRMSLL as Connection6
                            connect "Relational operator1.in" "C function1.out" as Connection2
                            connect "Relational operator1.out" Locked as Connection3
                            connect V_bus "C function1.Vbus" as Connection4
                            connect V_line "C function1.Vline" as Connection5
                        }
                        [
                            position = 8016, 7864
                            size = 112, 208
                        ]

                        port trip_or {
                            label = "trip_or"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7792
                        ]

                        port mode_in {
                            label = "mode_in"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7896
                        ]

                        port bool_R25 {
                            label = "bool_R25"
                            position = auto:auto
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9032, 8096
                        ]

                        port Va {
                            label = "Va"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7776
                        ]

                        port Vline_a {
                            label = "Vline_A"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7832
                        ]

                        port bus_freq {
                            label = "bus_freq"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8080
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7824, 8104
                        ]

                        port bus_wt {
                            label = "bus_wt"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7776, 8248
                        ]

                        port line_wt {
                            label = "line_wt"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7832, 8272
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8424
                        ]

                        tag Goto3 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7912, 8432
                        ]

                        tag From3 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7944
                        ]

                        tag From2 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8128
                        ]

                        tag Goto2 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8416
                            rotation = down
                            scale = -1, 1
                        ]

                        tag Goto1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8056, 8400
                            rotation = down
                            scale = -1, 1
                        ]

                        tag From1 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8296
                        ]

                        tag From5 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8112, 7688
                        ]

                        tag Goto4 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8448
                        ]

                        tag From4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7888
                        ]

                        junction Junction4 sp
                        [
                            position = 7920, 7832
                        ]

                        junction Junction5 sp
                        [
                            position = 8536, 8104
                        ]

                        junction Junction23 sp
                        [
                            position = 7904, 7776
                        ]

                        connect "Bus Split1.in" relay_paramR25 as Connection69
                        connect Constant2.out "Relational operator1.in" as Connection1
                        connect "Deadbus fcn.Vbus" Junction23 as Connection103
                        connect "Deadbus fcn.out" "SR Flip Flop1.s_in" as Connection137
                        connect "Freq Comparator.Locked" "Logical operator3.in1" as Connection135
                        connect "Freq Comparator.f_line" line_freq as Connection133
                        connect From1 "Phase Comparator.angle_threshold" as Connection74
                        connect From2 "Freq Comparator.dF_threshold" as Connection79
                        connect From3 "Voltage Comparator.dV_threshold" as Connection80
                        connect From4 "Voltage Comparator.VRMSLL" as Connection81
                        connect From5 "Deadbus fcn.VRMSLL" as Connection90
                        connect Gain3.out "Freq Comparator.f_bus" as Connection132
                        connect Goto1 "Bus Split1.out" as Connection70
                        connect Goto2 "Bus Split1.out1" as Connection71
                        connect Goto3 "Bus Split1.out2" as Connection72
                        connect Goto4 "Bus Split1.out3" as Connection73
                        connect Junction23 Gain1.out as Connection16
                        connect Junction4 "Deadbus fcn.Vline" as Connection104
                        connect Junction4 Gain2.out as Connection21
                        connect Junction5 "Logical operator4.in1" as Connection22
                        connect "Logical operator3.out" Junction5 as Connection24
                        connect "Logical operator3.in2" "Phase Comparator.Locked" as Connection134
                        connect "Logical operator5.out" "Logical operator7.in" as Connection26
                        connect "Logical operator5.in1" "Relational operator1.out" as Connection27
                        connect "Logical operator5.in" trip_or as Connection28
                        connect "Logical operator7.in1" Junction5 as Connection29
                        connect "Logical operator7.out" "SR Flip Flop1.r_in" as Connection30
                        connect "Phase Comparator.wt_grid" bus_wt as Connection110
                        connect "RMS value1.out" Gain1.in as Connection93
                        connect "RMS value2.out" Gain2.in as Connection97
                        connect "Relational operator1.in1" mode_in as Connection36
                        connect "SR Flip Flop1.out" "Logical operator4.in" as Connection37
                        connect "SR Flip Flop1.out_n" Termination1.in as Connection38
                        connect Va "RMS value1.in" as Connection101
                        connect Vline_a "RMS value2.in" as Connection102
                        connect "Voltage Comparator.V_bus" Junction23 as Connection47
                        connect "Voltage Comparator.V_line" Junction4 as Connection48
                        connect "Voltage Comparator.Locked" "Logical operator3.in" as Connection136
                        connect bool_R25 "Logical operator4.out" as Connection138
                        connect bus_freq Gain3.in as Connection121
                        connect line_wt "Phase Comparator.wt_gen" as Connection111
                    }
                    [
                        position = 8888, 7800
                        size = 120, 232
                    ]

                    component Subsystem "CALC FROM MEASUREMENTS" {
                        layout = dynamic
                        component gen_rms_value "RMS value4" {
                        }
                        [
                            position = 7064, 8128
                        ]

                        component gen_terminator Termination9 {
                        }
                        [
                            position = 7336, 8368
                        ]

                        component gen_gain Gain3 {
                            gain = "10"
                        }
                        [
                            position = 7064, 7792
                        ]

                        component gen_gain Gain9 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7032, 9120
                        ]

                        component gen_rms_value "RMS value6" {
                        }
                        [
                            position = 7064, 8256
                        ]

                        component gen_PQ_transform "PQ Power Meter1" {
                        }
                        [
                            position = 6936, 8952
                        ]

                        component msr_phasor_3ph "Three Phase Phasor1" {
                        }
                        [
                            position = 6904, 7752
                        ]

                        component gen_rms_value "RMS value5" {
                        }
                        [
                            position = 7064, 8192
                        ]

                        component gen_gain Gain5 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8600
                        ]

                        component gen_gain Gain8 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8976
                        ]

                        component gen_terminator Termination13 {
                        }
                        [
                            position = 6864, 9368
                        ]

                        component gen_gain Gain11 {
                            gain = "10.0"
                        }
                        [
                            position = 7432, 8400
                        ]

                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7064, 7984
                        ]

                        component gen_terminator Termination10 {
                        }
                        [
                            position = 6856, 9472
                        ]

                        component "core/Three phase PLL" "Three phase PLL2" {
                        }
                        [
                            position = 6760, 9408
                        ]

                        component gen_gain Gain4 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8504
                        ]

                        component gen_rms_value "RMS value3" {
                        }
                        [
                            position = 7064, 8048
                        ]

                        component gen_terminator Termination4 {
                        }
                        [
                            position = 7088, 9072
                        ]

                        component gen_terminator Termination11 {
                        }
                        [
                            position = 6864, 9256
                        ]

                        component gen_terminator Termination7 {
                        }
                        [
                            position = 7336, 8256
                        ]

                        component gen_gain Gain1 {
                            gain = "10"
                        }
                        [
                            position = 7000, 7592
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7064, 7920
                        ]

                        component "core/Three phase PLL" "Three phase PLL1" {
                        }
                        [
                            position = 7224, 8392
                        ]

                        component gen_terminator Termination3 {
                        }
                        [
                            position = 7048, 9016
                        ]

                        component gen_terminator Termination5 {
                        }
                        [
                            position = 7304, 8488
                        ]

                        component gen_gain Gain2 {
                            gain = "10"
                        }
                        [
                            position = 7048, 7696
                        ]

                        component gen_terminator Termination12 {
                        }
                        [
                            position = 6864, 9312
                        ]

                        component gen_gain Gain6 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8704
                        ]

                        component msr_phasor_3ph "Three Phase Phasor2" {
                        }
                        [
                            position = 6968, 8560
                        ]

                        component gen_terminator Termination8 {
                        }
                        [
                            position = 7336, 8312
                        ]

                        component gen_gain Gain10 {
                            gain = "100.0"
                        }
                        [
                            position = 7064, 9168
                        ]

                        component gen_gain Gain7 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8824
                        ]

                        component Subsystem Subsystem1 {
                            layout = dynamic
                            component gen_abs Abs2 {
                            }
                            [
                                position = 7720, 7896
                            ]

                            component src_constant Constant2 {
                                execution_rate = "Ts"
                                value = "[0]"
                            }
                            [
                                position = 7752, 8048
                            ]

                            component gen_logic_op "Logical operator1" {
                            }
                            [
                                position = 7976, 7856
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7800
                            ]

                            component src_constant Constant1 {
                                execution_rate = "Ts"
                            }
                            [
                                position = 7768, 7856
                            ]

                            component gen_abs Abs1 {
                            }
                            [
                                position = 7720, 7792
                            ]

                            component gen_rel_op "Relational operator4" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8096
                            ]

                            component gen_rel_op "Relational operator3" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8000
                            ]

                            component gen_rel_op "Relational operator2" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7904
                            ]

                            component Subsystem Subsystem3 {
                                layout = dynamic
                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8008
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8032, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 Out1 as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect "Multiport signal switch1.ctrl" u as Connection4
                                connect "Unit Delay1.out" Junction1 as Connection5
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection6
                            }
                            [
                                position = 8152, 8104
                                size = 112, 56
                            ]

                            component Subsystem Subsystem2 {
                                layout = dynamic
                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7576, 8032
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7648, 8056
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8072, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 "Unit Delay1.out" as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect Out1 Junction1 as Connection4
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection5
                                connect u "Multiport signal switch1.ctrl" as Connection6
                            }
                            [
                                position = 8152, 8008
                                size = 112, 56
                            ]

                            port P {
                                label = "P"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 7992
                            ]

                            port Q {
                                label = "Q"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 8088
                            ]

                            port "Lagging or Leading" {
                                label = "Lag or Lead"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8104
                            ]

                            port "Exporting or Importing" {
                                label = "export or import"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8008
                            ]

                            junction Junction1 sp
                            [
                                position = 7560, 8088
                            ]

                            junction Junction4 sp
                            [
                                position = 7592, 7992
                            ]

                            junction Junction11 sp
                            [
                                position = 7808, 7856
                            ]

                            junction Junction13 sp
                            [
                                position = 7824, 8048
                            ]

                            junction Junction14 sp
                            [
                                position = 8040, 8016
                            ]

                            connect Abs1.in Junction1 as Connection1
                            connect Abs1.out "Relational operator1.in" as Connection2
                            connect Abs2.out "Relational operator2.in" as Connection3
                            connect Constant1.out Junction11 as Connection8
                            connect Constant2.out Junction13 as Connection9
                            connect "Exporting or Importing" Subsystem2.Out1 as Connection10
                            connect Junction11 "Relational operator1.in1" as Connection12
                            connect Junction13 "Relational operator3.in1" as Connection14
                            connect Junction14 Subsystem3.E as Connection45
                            connect Junction4 Abs2.in as Connection39
                            connect Junction4 P as Connection18
                            connect "Lagging or Leading" Subsystem3.Out1 as Connection22
                            connect "Logical operator1.out" Junction14 as Connection44
                            connect Q Junction1 as Connection26
                            connect "Relational operator1.out" "Logical operator1.in" as Connection27
                            connect "Relational operator2.in1" Junction11 as Connection28
                            connect "Relational operator2.out" "Logical operator1.in1" as Connection29
                            connect "Relational operator3.in" Junction4 as Connection42
                            connect "Relational operator3.out" Subsystem2.u as Connection31
                            connect "Relational operator4.in" Junction1 as Connection40
                            connect "Relational operator4.in1" Junction13 as Connection32
                            connect "Relational operator4.out" Subsystem3.u as Connection34
                            connect Subsystem2.E Junction14 as Connection46
                        }
                        [
                            position = 7256, 8912
                            size = 112, 80
                        ]

                        port Ia {
                            label = "Ia"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7920
                        ]

                        port Ia_rms {
                            label = "Ia_rms"
                            position = right:7
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7920
                        ]

                        port Ib {
                            label = "Ib"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7984
                        ]

                        port Ib_rms {
                            label = "Ib_rms"
                            position = right:8
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7984
                        ]

                        port Ic {
                            label = "Ic"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8048
                        ]

                        port Ic_rms {
                            label = "Ic_rms"
                            position = right:9
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8048
                        ]

                        port Va {
                            label = "Va"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8128
                        ]

                        port Va_rms {
                            label = "Va_rms"
                            position = right:10
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8128
                        ]

                        port Vb {
                            label = "Vb"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8192
                        ]

                        port Vc {
                            label = "Vc"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8256
                        ]

                        port Vb_rms {
                            label = "Vb_rms"
                            position = right:11
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8192
                        ]

                        port Vc_rms {
                            label = "Vc_rms"
                            position = right:12
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8256
                        ]

                        port P {
                            label = "P"
                            position = right:19
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7160, 8824
                        ]

                        port Q {
                            label = "Q"
                            position = right:20
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7168, 8976
                        ]

                        port S {
                            label = "S"
                            position = right:21
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7112, 9120
                        ]

                        port pf {
                            label = "pf"
                            position = right:22
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7144, 9168
                        ]

                        port Ia_mag {
                            label = "Ia_mag"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7536
                        ]

                        port Ia_phase {
                            label = "Ia_phase"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7592
                        ]

                        port Ib_mag {
                            label = "Ib_mag"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7640
                        ]

                        port Ib_phase {
                            label = "Ib_phase"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7696
                        ]

                        port Ic_mag {
                            label = "Ic_mag"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7744
                        ]

                        port Ic_phase {
                            label = "Ic_phase"
                            position = right:6
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7792
                        ]

                        port Va_mag {
                            label = "Va_mag"
                            position = right:13
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8456
                        ]

                        port Va_phase {
                            label = "Va_phase"
                            position = right:14
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8504
                        ]

                        port Vb_mag {
                            label = "Vb_mag"
                            position = right:15
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8552
                        ]

                        port Vb_phase {
                            label = "Vb_phase"
                            position = right:16
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8600
                        ]

                        port Vc_mag {
                            label = "Vc_mag"
                            position = right:17
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8648
                        ]

                        port Vc_phase {
                            label = "Vc_phase"
                            position = right:18
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8704
                        ]

                        port "Export Import" {
                            label = "Export Import"
                            position = right:28
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7360, 8928
                        ]

                        port "Lag Lead" {
                            label = "Lag Lead"
                            position = right:27
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7416, 8888
                        ]

                        port bus_freq {
                            label = "Bus_freq"
                            position = right:23
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7512, 8400
                        ]

                        port bus_wt {
                            label = "Bus_wt"
                            position = right:24
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7440, 8456
                        ]

                        port Vline_a {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9352
                        ]

                        port Vline_b {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9408
                        ]

                        port Vline_c {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9464
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = right:25
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9416
                        ]

                        port line_wt {
                            label = "Line_wt"
                            position = right:26
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9464
                        ]

                        junction Junction23 sp
                        [
                            position = 6752, 8128
                        ]

                        junction Junction24 sp
                        [
                            position = 6768, 8192
                        ]

                        junction Junction25 sp
                        [
                            position = 6784, 8256
                        ]

                        junction Junction34 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction35 sp
                        [
                            position = 6656, 7920
                        ]

                        junction Junction37 sp
                        [
                            position = 6672, 7984
                        ]

                        junction Junction39 sp
                        [
                            position = 6752, 8360
                        ]

                        junction Junction41 sp
                        [
                            position = 6768, 8392
                        ]

                        junction Junction42 sp
                        [
                            position = 6784, 8424
                        ]

                        junction Junction44 sp
                        [
                            position = 6768, 8568
                        ]

                        junction Junction45 sp
                        [
                            position = 6784, 8584
                        ]

                        junction Junction46 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction48 sp
                        [
                            position = 6752, 8536
                        ]

                        junction Junction49 sp
                        [
                            position = 6928, 8536
                        ]

                        junction Junction50 sp
                        [
                            position = 7056, 8928
                        ]

                        junction Junction51 sp
                        [
                            position = 7056, 8888
                        ]

                        junction Junction52 sp
                        [
                            position = 6752, 8128
                        ]

                        junction Junction53 sp
                        [
                            position = 6656, 7920
                        ]

                        connect Gain1.out Ia_phase as Connection87
                        connect Gain10.in "PQ Power Meter1.k_factor" as Connection105
                        connect Gain11.in "Three phase PLL1.freq" as Connection107
                        connect Gain2.out Ib_phase as Connection89
                        connect Gain3.in "Three Phase Phasor1.phase3" as Connection91
                        connect Gain4.in "Three Phase Phasor2.phase1" as Connection92
                        connect Gain4.out Va_phase as Connection93
                        connect Gain5.out Vb_phase as Connection95
                        connect Gain6.in "Three Phase Phasor2.phase3" as Connection97
                        connect Gain7.in Junction51 as Connection113
                        connect Gain8.in Junction50 as Connection110
                        connect Gain8.out Q as Connection101
                        connect Gain9.in "PQ Power Meter1.apparent" as Connection103
                        connect Ia Junction35 as Connection2
                        connect Ia_mag "Three Phase Phasor1.out1" as Connection3
                        connect Ia_rms "RMS value1.out" as Connection4
                        connect Ib Junction37 as Connection5
                        connect Ib_rms "RMS value2.out" as Connection6
                        connect Ic Junction34 as Connection7
                        connect Ic_phase Gain3.out as Connection90
                        connect Ic_rms "RMS value3.out" as Connection9
                        connect Junction23 Junction39 as Connection10
                        connect Junction23 Va as Connection11
                        connect Junction24 Junction41 as Connection12
                        connect Junction24 "RMS value5.in" as Connection13
                        connect Junction24 Vb as Connection14
                        connect Junction25 Junction42 as Connection15
                        connect Junction25 "RMS value6.in" as Connection16
                        connect Junction37 "RMS value2.in" as Connection18
                        connect Junction39 "Three phase PLL1.va" as Connection20
                        connect Junction41 "Three phase PLL1.vb" as Connection21
                        connect Junction42 "Three phase PLL1.vc" as Connection22
                        connect Junction44 Junction41 as Connection23
                        connect Junction45 Junction42 as Connection24
                        connect Junction46 Junction34 as Connection25
                        connect Junction48 Junction39 as Connection27
                        connect Junction49 Junction48 as Connection28
                        connect Junction50 "PQ Power Meter1.Qdc" as Connection111
                        [
                            breakpoints = 7056, 8928
                        ]
                        connect Junction51 "PQ Power Meter1.Pdc" as Connection114
                        [
                            breakpoints = 7056, 8888
                        ]
                        connect Junction52 Junction23 as Connection119
                        connect Junction53 Junction35 as Connection122
                        connect "Lag Lead" "Subsystem1.Lagging or Leading" as Connection117
                        connect P Gain7.out as Connection98
                        connect "PQ Power Meter1.ia" Junction35 as Connection30
                        connect "PQ Power Meter1.ib" Junction37 as Connection31
                        connect "PQ Power Meter1.vb" Junction44 as Connection33
                        connect "PQ Power Meter1.vc" Junction45 as Connection34
                        connect "PQ Power Meter1.ic" Junction46 as Connection35
                        connect "PQ Power Meter1.va" Junction48 as Connection36
                        connect "RMS value1.in" Junction53 as Connection121
                        connect "RMS value3.in" Junction34 as Connection38
                        connect "RMS value4.in" Junction52 as Connection118
                        connect S Gain9.out as Connection102
                        connect "Subsystem1.Exporting or Importing" "Export Import" as Connection116
                        connect Subsystem1.Q Junction50 as Connection112
                        connect Subsystem1.P Junction51 as Connection115
                        connect Termination10.in "Three phase PLL2.sin_theta" as Connection45
                        connect Termination11.in "Three phase PLL2.d_axis" as Connection46
                        connect Termination12.in "Three phase PLL2.q_axis" as Connection47
                        connect Termination13.in "Three phase PLL2.zero_axis" as Connection48
                        connect Termination3.in "PQ Power Meter1.Pac" as Connection50
                        connect Termination4.in "PQ Power Meter1.Qac" as Connection51
                        connect Termination5.in "Three phase PLL1.sin_theta" as Connection52
                        connect Termination7.in "Three phase PLL1.d_axis" as Connection53
                        connect Termination8.in "Three phase PLL1.q_axis" as Connection54
                        connect Termination9.in "Three phase PLL1.zero_axis" as Connection55
                        connect "Three Phase Phasor1.phase1" Gain1.in as Connection86
                        connect "Three Phase Phasor1.phase2" Gain2.in as Connection88
                        connect "Three Phase Phasor1.out2" Ib_mag as Connection57
                        connect "Three Phase Phasor1.out3" Ic_mag as Connection59
                        connect "Three Phase Phasor1.in2" Junction37 as Connection60
                        connect "Three Phase Phasor1.in3" Junction46 as Connection61
                        connect "Three Phase Phasor1.in_ref" Junction52 as Connection120
                        connect "Three Phase Phasor1.in1" Junction53 as Connection123
                        connect "Three Phase Phasor2.phase2" Gain5.in as Connection94
                        connect "Three Phase Phasor2.in2" Junction44 as Connection64
                        connect "Three Phase Phasor2.in3" Junction45 as Connection65
                        connect "Three Phase Phasor2.in1" Junction49 as Connection67
                        connect "Three Phase Phasor2.in_ref" Junction49 as Connection66
                        connect "Three Phase Phasor2.out1" Va_mag as Connection68
                        connect "Three Phase Phasor2.out2" Vb_mag as Connection70
                        connect "Three Phase Phasor2.out3" Vc_mag as Connection72
                        connect "Three phase PLL2.freq" line_freq as Connection73
                        connect Va_rms "RMS value4.out" as Connection74
                        connect Vb_rms "RMS value5.out" as Connection75
                        connect Vc Junction25 as Connection76
                        connect Vc_phase Gain6.out as Connection96
                        connect Vc_rms "RMS value6.out" as Connection78
                        connect Vline_a "Three phase PLL2.va" as Connection79
                        connect Vline_b "Three phase PLL2.vb" as Connection80
                        connect Vline_c "Three phase PLL2.vc" as Connection81
                        connect bus_freq Gain11.out as Connection106
                        connect bus_wt "Three phase PLL1.theta" as Connection83
                        connect line_wt "Three phase PLL2.theta" as Connection84
                        connect pf Gain10.out as Connection104
                    }
                    [
                        position = 6992, 8104
                        size = 112, 664
                    ]

                    component Subsystem R50512761 {
                        layout = dynamic
                        component src_constant Ts {
                            execution_rate = "Ts"
                            value = "Ts"
                        }
                        [
                            position = 7696, 7712
                            rotation = right
                        ]

                        component gen_c_function Relays {
                            global_variables = "real R50;real R51;real R27;real R59;real n50;real n51;real n59;real n27;real t59;real t50;real t51;real bool_27;real t27;real bool_59;uint i;real bool_51;real bool_50;real A;real B;real P;real Ipu50;real Ipu51;real CT_tap;real ratio[3];real M[3];real t51s[3];real Iinst[3];real Irms[3];real Vrms[3];"
                            in_terminal_dimensions_str = "enable inherit;Ts inherit;Reset inherit;IinstA inherit;IinstB inherit;IinstC inherit;IrmsA inherit;IrmsB inherit;IrmsC inherit;VrmsA inherit;VrmsB inherit;VrmsC inherit;VRMSLN inherit;CT_p inherit;IOC_pickup inherit;IOC_tripDelay inherit;TOC_pickup inherit;curveType inherit;timeDial inherit;UV_pickup inherit;OV_pickup inherit;UVOV_tripDelay inherit;"
                            in_terminal_properties = "real enable;inherit Ts;inherit Reset;inherit IinstA;inherit IinstB;inherit IinstC;inherit IrmsA;inherit IrmsB;inherit IrmsC;inherit VrmsA;inherit VrmsB;inherit VrmsC;inherit VRMSLN;inherit CT_p;inherit IOC_pickup;inherit IOC_tripDelay;inherit TOC_pickup;inherit curveType;inherit timeDial;inherit UV_pickup;inherit OV_pickup;inherit UVOV_tripDelay;"
                            init_fnc = "/*Begin code section*/
R50=0;
R51=0;
R27=0;
R59=0;

n50=0;
n51=0;
n59=0;
n27=0;

CT_tap = 1.0;

A = 5.67;
B = 0.0352;
P = 2.0;

t59 = 0;
t50 = 0;
t51 = 0;
t27 = 0;

bool_27 = 0;
bool_59 = 0;
bool_51 = 0;
bool_50 = 0;
/*End code section*/"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "trip50 inherit;trip51 inherit;trip27 inherit;trip59 inherit;"
                            out_terminal_properties = "real trip50;real trip51;real trip27;real trip59;"
                            output_fnc = "/*Begin code section*/
Iinst[0] = fabs(IinstA);
Iinst[1] = fabs(IinstB);
Iinst[2] = fabs(IinstC);

Irms[0] = IrmsA;
Irms[1] = IrmsB;
Irms[2] = IrmsC;

Vrms[0] = VrmsA;
Vrms[1] = VrmsB;
Vrms[2] = VrmsC;

if (Reset==1) {
    R50=0;
    R51=0;
    R59=0;
    R27=0;
    bool_50 = 0.0;
}

for(i=0; i<3; i++){
    Iinst[i] = Iinst[i]*5.0/CT_p;
    Irms[i] = Irms[i]*5.0/CT_p;
}

if(curveType==1){
    A = 0.0104;
    B = 0.0226;
    P = 0.02;
}
else if(curveType==2){
    A = 5.95;
    B = 0.180;
    P = 2.0;
}
else if(curveType==3){
    A = 3.88;
    B = 0.0923;
    P = 2.0;
}
else{
    A = 5.67;
    B = 0.0352;
    P = 2.0;
}

if (!((R50 == 1) || (R51 == 1))&&(enable==1)){
    
    if((UV_pickup>1)||(UV_pickup==0)){
        UV_pickup = 0.9;
    }
    if((OV_pickup<1)||(OV_pickup==0)){
        OV_pickup = 1.1;
    }
    
    Ipu50 = IOC_pickup*CT_tap*sqrt(2.0);
    Ipu51 = TOC_pickup*CT_tap;
    
    for(i=0; i<3; i++){
        ratio[i] = Vrms[i]/VRMSLN;
        M[i] = Irms[i]/Ipu51;
        if(M[i]<=1.0){
            t51s[i] = 1e6;
        }
        else{
            t51s[i] = timeDial*(B+(A/(pow(M[i],P)-1)));
        }
    }
    
    t27 = 0.004167 + UVOV_tripDelay;
    t50 = 0.004167 + IOC_tripDelay;
    t59 = 0.004167 + UVOV_tripDelay;
    
    if((t51s[0]<=t51s[1])&&(t51s[0]<=t51s[2])){
        t51 = t51s[0];
    }
    else if(t51s[1]<=t51s[2]){
        t51 = t51s[1];
    }
    else{
        t51 = t51s[2];
    }
    
    for(i=0; i<3; i++){
        if(ratio[i]<=UV_pickup){
            bool_27 = 1;
            break;
        }
        else{
            bool_27 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Irms[i]>Ipu51){
            bool_51 = 1;
            break;
        }
        else{
            bool_51 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Iinst[i]>Ipu50){
            bool_50 = 1;
            break;
        }
    }
    for(i=0; i<3; i++){
        if(ratio[i]>=OV_pickup){
            bool_59 = 1;
            break;
        }
        else{
            bool_59 = 0;
        }
    }
    //bool_27 = ((ratio[0]<=UV_pickup)+(ratio[1]<=UV_pickup)+(ratio[2]<=UV_pickup))>0;
    //bool_59 = ((ratio[0]>=OV_pickup)+(ratio[1]>=OV_pickup)+(ratio[2]>=OV_pickup))>0;
    //bool_50 = ((Iinst[0]>Ipu50)+(Iinst[1]>Ipu50)+(Iinst[2]>Ipu50))>0;
    //bool_51 = ((Irms[0]>Ipu51)+(Irms[1]>Ipu51)+(Irms[2]>Ipu51))>0;
    
    n50 *= bool_50;
    n51 *= bool_51;
    n27 *= bool_27;
    n59 *= bool_59;

    n50 += bool_50  * Ts;
    n51 += bool_51  * Ts;
    n27 += bool_27  * Ts;
    n59 += bool_59  * Ts;

    if(n50 > t50)
        R50 = 1;
    else
        R50 = 0;

    if(n51 > t51)
        R51 = 1;
    else
        R51 = 0;

    if(n27 > t27)
        R27 = 1;
    else
        R27 = 0;

    if(n59 > t59)
        R59 = 1;
    else
        R59 = 0;
}

trip50 = R50;
trip51 = R51;
trip27 = R27;
trip59 = R59;
/*End code section*/"
                        }
                        [
                            position = 7784, 8008
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "10"
                        }
                        [
                            position = 7560, 8248
                            rotation = left
                        ]

                        port trip_50 {
                            label = "trip_50"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7848
                        ]

                        port trip_51 {
                            label = "trip_51"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7952
                        ]

                        port trip_59 {
                            label = "trip_59"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8160
                        ]

                        port trip_27 {
                            label = "trip_27"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8056
                        ]

                        port relay_param {
                            label = "Relay Param"
                            position = left:12
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7560, 8328
                            rotation = left
                        ]

                        port Irms_c {
                            label = "Irms_c"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7368, 7752
                            rotation = right
                        ]

                        port Irms_a {
                            label = "Irms_a"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7472, 7752
                            rotation = right
                        ]

                        port Enable {
                            label = "Enable"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7736, 7752
                            rotation = right
                        ]

                        port Iinst_a {
                            label = "Iinst_a"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7608, 7712
                            rotation = right
                        ]

                        port Irms_b {
                            label = "Irms_b"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7424, 7712
                            rotation = right
                        ]

                        port Iinst_b {
                            label = "Iinst_b"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7568, 7752
                            rotation = right
                        ]

                        port Reset {
                            label = "Reset"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7656, 7752
                            rotation = right
                        ]

                        port Iinst_c {
                            label = "Iinst_c"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7520, 7712
                            rotation = right
                        ]

                        port Vrms_b {
                            label = "Vrms_b"
                            position = left:10
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7256, 7752
                            rotation = right
                        ]

                        port Vrms_c {
                            label = "Vrms_c"
                            position = left:11
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7200, 7712
                            rotation = right
                        ]

                        port Vrms_a {
                            label = "Vrms_a"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7312, 7712
                            rotation = right
                        ]

                        comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus split:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                        [
                            position = 7728, 8224
                        ]

                        connect "Bus Split1.out5" Relays.curveType as Connection41
                        connect "Bus Split1.out4" Relays.TOC_pickup as Connection42
                        connect "Bus Split1.out3" Relays.IOC_tripDelay as Connection43
                        connect "Bus Split1.out6" Relays.timeDial as Connection40
                        connect "Bus Split1.out2" Relays.IOC_pickup as Connection44
                        connect "Bus Split1.out9" Relays.UVOV_tripDelay as Connection37
                        connect "Bus Split1.out" Relays.VRMSLN as Connection46
                        connect "Bus Split1.out8" Relays.OV_pickup as Connection38
                        connect "Bus Split1.out1" Relays.CT_p as Connection45
                        connect "Bus Split1.out7" Relays.UV_pickup as Connection39
                        connect "Bus Split1.in" relay_param as Connection36
                        connect Enable Relays.enable as Connection47
                        connect Iinst_a Relays.IinstA as Connection50
                        connect Iinst_b Relays.IinstB as Connection51
                        connect Iinst_c Relays.IinstC as Connection52
                        connect Irms_a Relays.IrmsA as Connection53
                        connect Irms_b Relays.IrmsB as Connection54
                        connect Irms_c Relays.IrmsC as Connection55
                        connect Reset Relays.Reset as Connection49
                        connect Ts.out Relays.Ts as Connection48
                        connect Vrms_a Relays.VrmsA as Connection56
                        connect Vrms_b Relays.VrmsB as Connection57
                        connect Vrms_c Relays.VrmsC as Connection58
                        connect trip_27 Relays.trip27 as Connection77
                        connect trip_50 Relays.trip50 as Connection76
                        connect trip_51 Relays.trip51 as Connection75
                        connect trip_59 Relays.trip59 as Connection78
                    }
                    [
                        position = 8424, 8328
                        size = 144, 304
                    ]

                    port OUTPUT {
                        label = "OUTPUT"
                        position = bottom:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9704, 8056
                    ]

                    port Ia {
                        label = "Ia"
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7816
                    ]

                    port Ib {
                        label = "Ib"
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7888
                    ]

                    port Ic {
                        label = "Ic"
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7960
                    ]

                    port Va {
                        label = "Va"
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8032
                    ]

                    port Vb {
                        label = "Vb"
                        position = left:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8104
                    ]

                    port Vc {
                        label = "Vc"
                        position = left:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8176
                    ]

                    port Vline_a {
                        label = "Vline_A"
                        position = left:7
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8248
                    ]

                    port faults_status {
                        label = "Fault_status"
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8272
                    ]

                    port TO_MODBUS {
                        label = "To_Modbus"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8024, 8080
                    ]

                    port Vline_b {
                        label = "Vline_B"
                        position = left:8
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8320
                    ]

                    port Vline_c {
                        label = "Vline_C"
                        position = left:9
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8392
                    ]

                    port cb_state {
                        label = "cb_state"
                        position = left:10
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7312, 8624
                    ]

                    port pf_states {
                        label = "pf_state"
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8416
                        scale = 1, -1
                    ]

                    port from_Modbus {
                        label = "From Modbus"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8144, 7976
                    ]

                    tag Goto16 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7928
                    ]

                    tag From11 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8880, 8256
                    ]

                    tag From20 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8240
                    ]

                    tag From1 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7600, 8280
                        rotation = right
                    ]

                    tag Goto20 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7232, 7760
                        rotation = left
                    ]

                    tag From7 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9072, 8224
                        rotation = down
                        scale = -1, -1
                    ]

                    tag From17 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7752
                    ]

                    tag From29 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8032
                    ]

                    tag From31 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9096, 8424
                    ]

                    tag From10 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8272
                    ]

                    tag Goto8 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8216
                    ]

                    tag Goto5 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9088, 7752
                    ]

                    tag Goto15 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7856
                    ]

                    tag Goto17 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7104, 7760
                        rotation = left
                    ]

                    tag Goto24 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 8304
                    ]

                    tag From37 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7848
                    ]

                    tag From3 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7392, 8384
                    ]

                    tag Goto2 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8248
                    ]

                    tag From4 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7448, 8464
                    ]

                    tag From35 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8456
                    ]

                    tag From14 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7704
                    ]

                    tag From12 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9032, 8288
                    ]

                    tag Goto3 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8336
                    ]

                    tag From26 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8432
                    ]

                    tag Goto21 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 7688
                        rotation = left
                    ]

                    tag From8 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9104, 8304
                    ]

                    tag From18 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7800
                    ]

                    tag From36 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8216
                    ]

                    tag Goto18 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7088, 7688
                        rotation = left
                    ]

                    tag Goto6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9640, 8096
                    ]

                    tag Goto10 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8272
                    ]

                    tag Goto12 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7224, 8256
                    ]

                    tag From2 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7480, 8288
                    ]

                    tag From21 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8264
                    ]

                    tag Goto23 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 8000
                        scale = 1, -1
                    ]

                    tag From32 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8104
                    ]

                    tag Goto14 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7784
                    ]

                    tag Goto27 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7976
                        scale = 1, -1
                    ]

                    tag From33 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9120, 8080
                    ]

                    tag Goto25 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8320
                    ]

                    tag From15 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7728
                    ]

                    tag From25 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8360
                    ]

                    tag Goto9 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8000
                    ]

                    tag From5 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7520, 8504
                    ]

                    tag Goto19 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 7832
                        rotation = left
                    ]

                    tag From19 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7824
                    ]

                    tag From27 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8408
                    ]

                    tag From9 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8992, 8240
                        rotation = down
                        scale = -1, 1
                    ]

                    tag From34 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7896
                    ]

                    tag Goto11 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7376, 8256
                    ]

                    tag Goto29 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 7952
                        scale = 1, -1
                    ]

                    tag From13 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8320
                    ]

                    tag From24 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8312
                    ]

                    tag From30 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9024, 8408
                    ]

                    tag Goto28 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7928
                        scale = 1, -1
                    ]

                    tag Goto1 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8160
                    ]

                    tag From6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7584, 8560
                        rotation = right
                    ]

                    tag Goto22 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7248, 7832
                        rotation = left
                    ]

                    tag From16 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7776
                    ]

                    tag From22 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8288
                    ]

                    tag Goto7 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 8024
                        scale = 1, -1
                    ]

                    tag Goto4 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8424
                    ]

                    tag Goto13 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7296, 8288
                    ]

                    tag Goto26 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8296, 8152
                    ]

                    tag From28 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8384
                    ]

                    tag From23 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8336
                    ]

                    tag Goto31 {
                        value = "F3_CB7_P_REACTIVE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7392, 7696
                        hide_name = True
                    ]

                    tag Goto34 {
                        value = "F3_CB7_BREAKER"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7392, 7768
                        hide_name = True
                    ]

                    tag Goto30 {
                        value = "F3_CB7_P_REAL"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7392, 7672
                        hide_name = True
                    ]

                    tag Goto32 {
                        value = "F3_CB7_VOLTAGE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7392, 7720
                        hide_name = True
                    ]

                    tag Goto33 {
                        value = "F3_CB7_FREQUENCY"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7392, 7744
                        hide_name = True
                    ]

                    junction Junction51 sp
                    [
                        position = 8720, 8056
                    ]

                    junction Junction100 sp
                    [
                        position = 8536, 8192
                    ]

                    junction Junction101 sp
                    [
                        position = 8536, 8280
                    ]

                    junction Junction104 sp
                    [
                        position = 9016, 7800
                    ]

                    junction Junction105 sp
                    [
                        position = 9584, 8056
                    ]

                    junction Junction106 sp
                    [
                        position = 7368, 8624
                    ]

                    junction Junction108 sp
                    [
                        position = 6688, 8248
                    ]

                    junction Junction109 sp
                    [
                        position = 6696, 8032
                    ]

                    junction Junction110 sp
                    [
                        position = 7304, 8240
                    ]

                    junction Junction111 sp
                    [
                        position = 6640, 7816
                    ]

                    junction Junction112 sp
                    [
                        position = 6640, 7888
                    ]

                    junction Junction113 sp
                    [
                        position = 6640, 7960
                    ]

                    junction Junction114 sp
                    [
                        position = 7088, 7984
                    ]

                    junction Junction115 sp
                    [
                        position = 7104, 8000
                    ]

                    junction Junction116 sp
                    [
                        position = 7120, 8016
                    ]

                    junction Junction117 sp
                    [
                        position = 7216, 8032
                    ]

                    junction Junction118 sp
                    [
                        position = 7232, 8048
                    ]

                    junction Junction119 sp
                    [
                        position = 7248, 8064
                    ]

                    junction Junction120 sp
                    [
                        position = 8536, 8368
                    ]

                    junction Junction121 sp
                    [
                        position = 8536, 8456
                    ]

                    junction Junction122 sp
                    [
                        position = 8216, 8192
                    ]

                    junction Junction123 sp
                    [
                        position = 7256, 8176
                    ]

                    junction Junction124 sp
                    [
                        position = 7264, 8192
                    ]

                    junction Junction125 sp
                    [
                        position = 7160, 8032
                    ]

                    junction Junction126 sp
                    [
                        position = 7312, 8240
                    ]

                    junction Junction127 sp
                    [
                        position = 7336, 8624
                    ]

                    junction Junction128 sp
                    [
                        position = 7256, 7672
                    ]

                    junction Junction129 sp
                    [
                        position = 7272, 7696
                    ]

                    comment Comment4 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Status</p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8256
                    ]

                    comment Comment2 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52A</p></body></html> ENDCOMMENT 
                    [
                        position = 7400, 8568
                    ]

                    comment Comment5 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">pf_states </p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8400
                    ]

                    comment Comment3 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52B</p></body></html> ENDCOMMENT 
                    [
                        position = 7432, 8720
                    ]

                    connect "Bus Join1.in21" "CALC FROM MEASUREMENTS.pf" as Connection149
                    connect "Bus Join1.in20" "CALC FROM MEASUREMENTS.S" as Connection144
                    connect "Bus Join1.in3" "CALC FROM MEASUREMENTS.Ib_phase" as Connection132
                    connect "Bus Join1.in5" "CALC FROM MEASUREMENTS.Ic_phase" as Connection133
                    connect "Bus Join1.in17" "CALC FROM MEASUREMENTS.Vc_phase" as Connection140
                    connect "Bus Join1.in13" "CALC FROM MEASUREMENTS.Va_phase" as Connection134
                    connect "Bus Join1.in15" "CALC FROM MEASUREMENTS.Vb_phase" as Connection135
                    connect "Bus Join1.in22" Junction110 as Connection240
                    connect "Bus Join1.in6" Junction114 as Connection268
                    connect "Bus Join1.in9" Junction117 as Connection283
                    connect "Bus Join1.in10" Junction118 as Connection286
                    connect "Bus Join1.in18" Junction123 as Connection382
                    connect "Bus Join1.in19" Junction124 as Connection385
                    connect "CALC FROM MEASUREMENTS.Ib_mag" "Bus Join1.in2" as Connection6
                    connect "CALC FROM MEASUREMENTS.Ic_mag" "Bus Join1.in4" as Connection2
                    connect "CALC FROM MEASUREMENTS.Ia_mag" "Bus Join1.in" as Connection5
                    connect "CALC FROM MEASUREMENTS.Ia_phase" "Bus Join1.in1" as Connection131
                    connect "CALC FROM MEASUREMENTS.Vc_mag" "Bus Join1.in16" as Connection4
                    connect "CALC FROM MEASUREMENTS.Va_mag" "Bus Join1.in12" as Connection3
                    connect "CALC FROM MEASUREMENTS.Vb_mag" "Bus Join1.in14" as Connection1
                    connect "CALC FROM MEASUREMENTS.line_freq" Goto10 as Connection224
                    connect "CALC FROM MEASUREMENTS.line_wt" Goto13 as Connection245
                    connect "CALC FROM MEASUREMENTS.Vline_a" Junction108 as Connection217
                    connect "CALC FROM MEASUREMENTS.Va" Junction109 as Connection218
                    connect "CALC FROM MEASUREMENTS.Ia" Junction111 as Connection257
                    connect "CALC FROM MEASUREMENTS.Ib" Junction112 as Connection256
                    connect "CALC FROM MEASUREMENTS.Ic" Junction113 as Connection258
                    connect "CALC FROM MEASUREMENTS.Ib_rms" Junction115 as Connection271
                    connect "CALC FROM MEASUREMENTS.Ic_rms" Junction116 as Connection274
                    connect "CALC FROM MEASUREMENTS.Vc_rms" Junction119 as Connection289
                    connect "Control Panel Input1.out" Junction122 as Connection381
                    connect From1 Sum1.in as Connection167
                    connect From10 bitwise_faults.R50 as Connection197
                    connect From11 bitwise_faults.R27 as Connection195
                    connect From12 bitwise_faults.R51 as Connection199
                    connect From13 bitwise_faults.Reset as Connection210
                    connect From14 "Relay 25-Sync Check1.Va" as Connection219
                    connect From15 "Relay 25-Sync Check1.Vline_a" as Connection220
                    connect From16 "Relay 25-Sync Check1.line_freq" as Connection225
                    connect From17 "Relay 25-Sync Check1.bus_freq" as Connection238
                    connect From18 "Relay 25-Sync Check1.bus_wt" as Connection244
                    connect From19 "Relay 25-Sync Check1.line_wt" as Connection246
                    connect From2 Gain1.in as Connection168
                    connect From20 R50512761.Iinst_a as Connection336
                    connect From21 R50512761.Iinst_b as Connection337
                    connect From22 R50512761.Iinst_c as Connection338
                    connect From23 R50512761.Irms_b as Connection340
                    connect From24 R50512761.Irms_a as Connection339
                    connect From25 R50512761.Irms_c as Connection341
                    connect From26 R50512761.Vrms_c as Connection344
                    connect From27 R50512761.Vrms_b as Connection343
                    connect From28 R50512761.Vrms_a as Connection342
                    connect From29 "State Condition Mng.op_mode" as Connection309
                    connect From3 Gain4.in as Connection169
                    connect From30 "pf bitwise.exp_imp" as Connection313
                    connect From31 "pf bitwise.lag_lead" as Connection312
                    connect From32 "State Condition Mng.enable" as Connection318
                    connect From33 "State Condition Mng.initial_condition" as Connection319
                    connect From34 "Relay 25-Sync Check1.relay_paramR25" as Connection320
                    connect From35 R50512761.relay_param as Connection321
                    connect From36 R50512761.Reset as Connection335
                    connect From37 "Relay 25-Sync Check1.mode_in" as Connection334
                    connect From4 Gain5.in as Connection171
                    connect From5 Gain6.in as Connection173
                    connect From7 bitwise_faults.Status as Connection203
                    connect From8 bitwise_faults.R59 as Connection201
                    connect From9 bitwise_faults.R25 as Connection193
                    connect Gain1.out Sum1.in1 as Connection21
                    connect Gain4.out Sum1.in2 as Connection170
                    connect Gain5.out Sum1.in3 as Connection172
                    connect Gain6.out Sum1.in4 as Connection174
                    connect Gain7.out Sum3.in1 as Connection180
                    connect Gain8.in Junction106 as Connection186
                    connect Gain8.out Sum3.in2 as Connection183
                    connect Goto1 Junction100 as Connection152
                    connect Goto11 Junction110 as Connection242
                    connect Goto12 "CALC FROM MEASUREMENTS.bus_wt" as Connection243
                    connect Goto14 Junction111 as Connection249
                    connect Goto15 Junction112 as Connection252
                    connect Goto16 Junction113 as Connection255
                    connect Goto17 Junction115 as Connection273
                    connect Goto19 Junction116 as Connection276
                    connect Goto2 Junction101 as Connection155
                    connect Goto22 Junction119 as Connection367
                    connect Goto23 Relay_Param.op_mode as Connection329
                    connect Goto24 "CALC FROM MEASUREMENTS.Lag Lead" as Connection310
                    connect Goto25 "CALC FROM MEASUREMENTS.Export Import" as Connection311
                    connect Goto27 Relay_Param.Initial_condition as Connection331
                    connect Goto28 Relay_Param.relay_param as Connection333
                    connect Goto29 Relay_Param.relay_paramR25 as Connection332
                    connect Goto30 Junction128 as Connection399
                    connect Goto31 Junction129 as Connection402
                    connect Goto32 normalize.out as Connection397
                    connect Goto33 Junction126 as Connection393
                    connect Goto34 Junction127 as Connection396
                    [
                        breakpoints = 7336, 7768; 7336, 8624
                    ]
                    connect Goto4 Junction121 as Connection298
                    connect Goto5 Junction104 as Connection164
                    connect Goto6 Junction105 as Connection178
                    connect Goto7 Relay_Param.reset as Connection330
                    connect Goto8 Junction108 as Connection213
                    connect Goto9 Junction109 as Connection216
                    connect Ia Junction111 as Connection247
                    connect Ib Junction112 as Connection250
                    connect Ic Junction113 as Connection253
                    connect Junction100 "Logical operator1.in" as Connection196
                    connect Junction101 "Logical operator1.in1" as Connection198
                    connect Junction101 R50512761.trip_51 as Connection154
                    connect Junction104 "State Condition Mng.R25" as Connection303
                    connect Junction105 "Unit Delay4.out" as Connection202
                    connect Junction106 not.in as Connection185
                    connect Junction110 Junction126 as Connection391
                    connect Junction114 "CALC FROM MEASUREMENTS.Ia_rms" as Connection269
                    connect Junction114 Goto18 as Connection355
                    connect Junction115 "Bus Join1.in7" as Connection272
                    connect Junction116 "Bus Join1.in8" as Connection275
                    connect Junction117 Goto21 as Connection365
                    connect Junction117 Junction125 as Connection388
                    connect Junction118 "CALC FROM MEASUREMENTS.Vb_rms" as Connection287
                    connect Junction118 Goto20 as Connection366
                    connect Junction119 "Bus Join1.in11" as Connection290
                    connect Junction120 Goto3 as Connection296
                    connect Junction121 R50512761.trip_59 as Connection299
                    connect Junction122 Goto26 as Connection380
                    connect Junction123 "CALC FROM MEASUREMENTS.P" as Connection383
                    connect Junction124 "CALC FROM MEASUREMENTS.Q" as Connection386
                    connect Junction125 "CALC FROM MEASUREMENTS.Va_rms" as Connection389
                    connect Junction126 "CALC FROM MEASUREMENTS.bus_freq" as Connection392
                    connect Junction127 Junction106 as Connection395
                    connect Junction128 Junction123 as Connection400
                    connect Junction129 Junction124 as Connection403
                    connect Junction51 "State Condition Mng.Trip_in" as Connection302
                    connect "Logical operator1.in2" Junction120 as Connection297
                    connect "Logical operator1.in3" Junction121 as Connection300
                    connect "Logical operator1.out" Junction51 as Connection79
                    connect OUTPUT Junction105 as Connection176
                    connect P.in Junction128 as Connection401
                    connect Q.in Junction129 as Connection404
                    connect R50512761.trip_50 Junction100 as Connection150
                    connect R50512761.trip_27 Junction120 as Connection295
                    connect R50512761.Enable Junction122 as Connection379
                    connect "Relay 25-Sync Check1.bool_R25" Junction104 as Connection162
                    connect "Relay 25-Sync Check1.trip_or" Junction51 as Connection94
                    connect Sum3.in From6 as Connection179
                    connect Sum3.out "Unit Delay5.in" as Connection190
                    connect TO_MODBUS "Bus Join1.out" as Connection101
                    connect "Unit Delay2.out" "Bus Join1.in23" as Connection175
                    connect "Unit Delay2.in" Sum1.out as Connection104
                    connect "Unit Delay4.in" "State Condition Mng.trip_out" as Connection304
                    connect "Unit Delay5.out" "Bus Join1.in24" as Connection191
                    connect Va Junction109 as Connection214
                    connect Vb "CALC FROM MEASUREMENTS.Vb" as Connection108
                    connect Vc "CALC FROM MEASUREMENTS.Vc" as Connection109
                    connect Vline_a Junction108 as Connection211
                    connect Vline_b "CALC FROM MEASUREMENTS.Vline_b" as Connection111
                    connect Vline_c "CALC FROM MEASUREMENTS.Vline_c" as Connection112
                    connect cb_state Junction127 as Connection394
                    connect faults_status bitwise_faults.fault_status as Connection368
                    connect from_Modbus Relay_Param.from_Modbus as Connection328
                    connect normalize.in Junction125 as Connection398
                    connect not.out Gain7.in as Connection181
                    connect "pf bitwise.pf_states" pf_states as Connection369

                    CT_primary = "3500"
                    R27P_R59P_tripDelay = "2"
                    R27P_pickup1 = "0.7"
                    R27P_pickup2 = "0.5"
                    R50P_tripDelay2 = "0"
                    R51P_curveType2 = "1"
                    R51P_pickup1 = "1.19"
                    R51P_pickup2 = "1.19"
                    R51P_timeDial2 = "1"
                    R59P_pickup1 = "1.2"
                    R59P_pickup2 = "1.2"
                    VRMSLL = "480"
                    dV_threshold = "10"

                    mask {
                        description = "This block implements the relay SEL 787 with protective functions 25 (synchronism check), 27 (Under Voltage), 50 (Instantaneous Overcurrent), 51 (Time Overcurrent) and 59 (Overvoltage). 

he relay outputs to Modbus are: 0 - Ia_mag; 1 - Ia_phase; 2 - Ib_mag; 3 - Ib_phase; 4 - Ic_mag; 5 - Ic_phase; 6 - Ia_rms; 7 - Ib_rms; 8 - Ic_rms; 9 - Va_rms; 10 - Vb_rms; 11 - Vc_rms; 12 - Va_mag; 13 - Va_phase; 14 - Vb_mag; 15 - Vb_phase; 16 - Vc_mag; 17 - Vc_phase; 18 - P; 19 - Q; 20 - S; 21 - pf; 22 - Bus_freq; 23 - protection functions status; 24 - Circuit Breaker status.

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            The relay inputs from Modbus are: 2001 - op_mode; 2002 - Reset; 2003 - protection_mode.

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            The trip pickups for functions 50 and 51 are defined as currents in the secondary of the current transformer. The secondary ot the CT has 5 turns."

                        VRMSLL {
                            label = "Line to Line RMS voltage"
                            widget = edit
                            type = generic
                            default_value = "13800.0"
                            unit = "V"
                            group = "Base Parameters"
                        }

                        dV_threshold {
                            label = "Voltage deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "5.0"
                            unit = "%"
                            group = "Base Parameters"
                        }

                        angle_threshold {
                            label = "Angle deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "12.0"
                            unit = "degree"
                            group = "Base Parameters"
                        }

                        dF_threshold {
                            label = "Frequency deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Hz"
                            group = "Base Parameters"
                        }

                        R27P_R59P_tripDelay {
                            label = "R27 UV and R59 OV trip delay"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Sec"
                            group = "Base Parameters"
                        }

                        CT_primary {
                            label = "CT primary turns number"
                            widget = edit
                            type = generic
                            default_value = "600"
                            group = "Base Parameters"
                        }

                        Initial_status {
                            label = "Initial relay status"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "Base Parameters"
                        }

                        R50P_pickup1 {
                            label = "R50 IOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R50P_tripDelay1 {
                            label = "R50 IOC trip delay 1"
                            widget = edit
                            type = generic
                            default_value = "0"
                            unit = "sec"
                            group = "GridTied Parameters"
                        }

                        R51P_pickup1 {
                            label = "R51 TOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.8"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R51P_curveType1 {
                            label = "R51 TOC curve type 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R51P_timeDial1 {
                            label = "R51 TOC time dial 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R27P_pickup1 {
                            label = "R27 UV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R59P_pickup1 {
                            label = "R59 OV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R50P_pickup2 {
                            label = "R50 IOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R50P_tripDelay2 {
                            label = "R50 IOC trip delay 2"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            unit = "sec"
                            group = "Islanded Parameters"
                        }

                        R51P_pickup2 {
                            label = "R51 TOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.7"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R51P_curveType2 {
                            label = "R51 TOC curve type 2"
                            widget = edit
                            type = generic
                            default_value = "2.0"
                            group = "Islanded Parameters"
                        }

                        R51P_timeDial2 {
                            label = "R51 TOC time dial 2"
                            widget = edit
                            type = generic
                            default_value = "3.0"
                            group = "Islanded Parameters"
                        }

                        R27P_pickup2 {
                            label = "R27 UV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        R59P_pickup2 {
                            label = "R59 OV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE
                    }
                }
                [
                    position = 7952, 8168
                    size = 152, 240
                ]

                port Brk_cmd {
                    label = "Brk_cmd"
                    position = bottom:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7792, 8496
                    rotation = right
                ]

                port IABC {
                    label = "IABC"
                    position = right:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7792, 7936
                ]

                port VABC_load {
                    label = "VABC_load"
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7536, 7936
                ]

                port VABC_grid {
                    label = "VABC_grid"
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7648, 7936
                ]

                junction Junction1391 sp
                [
                    position = 8120, 7928
                ]

                junction Junction1392 sp
                [
                    position = 8120, 7976
                ]

                junction Junction1393 sp
                [
                    position = 7952, 8344
                ]

                junction Junction1396 sp
                [
                    position = 7792, 8448
                ]

                junction Junction1397 sp
                [
                    position = 7648, 8344
                ]

                comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset the relay when input is 1</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Operation Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 1 force the breaker closed</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 0 turns on logic based operation</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Protection Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 1 use islanded parameters</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 0 use grid tied parameters</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                [
                    position = 7968, 8328
                ]

                connect Brk_cmd Junction1396 as Connection899
                connect "Bus Split1.in" IABC as Connection907
                connect "Bus Split1.out" SEL_787.Ia as Connection908
                connect "Bus Split1.out2" SEL_787.Ic as Connection910
                connect "Bus Split1.out1" SEL_787.Ib as Connection909
                connect "Bus Split2.out2" SEL_787.Vc as Connection914
                connect "Bus Split2.out" SEL_787.Va as Connection912
                connect "Bus Split2.out1" SEL_787.Vb as Connection913
                connect "Bus Split3.out1" SEL_787.Vline_b as Connection929
                connect "Bus Split3.out" SEL_787.Vline_a as Connection928
                connect "Bus Split3.out2" SEL_787.Vline_c as Connection930
                connect CB_state.in Junction1397 as Connection905
                connect Constant2.out "Signal switch1.in1" as Connection880
                connect Delay1.out "Signal switch1.in" as Connection2
                connect Junction1391 Constant1.out as Connection852
                connect Junction1391 "ModBus Device1.coil_in" as Connection313
                connect Junction1392 Junction1391 as Connection314
                connect Junction1393 Delay1.in as Connection867
                connect Junction1396 "Signal switch1.out" as Connection902
                connect Junction1397 Junction1396 as Connection904
                connect "ModBus Device1.discrete_in" Junction1392 as Connection467
                connect "ModBus Device1.holding_in" Junction1392 as Connection466
                connect "ModBus Device1.holding_out" SEL_787.from_Modbus as Connection932
                connect "ModBus Device1.coil_out" Term3.in as Connection854
                connect SEL_787.OUTPUT Junction1393 as Connection868
                connect SEL_787.cb_state Junction1397 as Connection903
                connect SEL_787.TO_MODBUS "ModBus Device1.reg_in" as Connection931
                connect SEL_787.pf_states Term4.in as Connection897
                connect "Signal switch1.in2" Junction1393 as Connection866
                connect Term5.in SEL_787.faults_status as Connection870
                connect VABC_grid "Bus Split2.in" as Connection934
                connect VABC_load "Bus Split3.in" as Connection933
            }
            [
                position = 8000, 8200
                rotation = left
                size = 136, 72
            ]

            component Subsystem Brk {
                layout = dynamic
                component "core/Triple Pole Single Throw Contactor" S1 {
                    ctrl_src = "Model"
                }
                [
                    position = 8104, 8184
                    rotation = right
                ]

                port C {
                    position = left:1
                    kind = pe
                }
                [
                    position = 8200, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 8104, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port A {
                    position = left:3
                    kind = pe
                }
                [
                    position = 8008, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port c {
                    position = right:1
                    kind = pe
                }
                [
                    position = 8200, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port b {
                    position = right:2
                    kind = pe
                }
                [
                    position = 8104, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port a {
                    position = right:3
                    kind = pe
                }
                [
                    position = 8008, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port control {
                    position = bottom:auto
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8320, 8184
                    scale = -1, 1
                ]

                connect A S1.c_in as Connection6
                connect B S1.b_in as Connection5
                connect S1.a_in C as Connection4
                connect S1.c_out a as Connection1
                connect S1.b_out b as Connection2
                connect S1.a_out c as Connection3
                connect control S1.ctrl_in as Connection7
            }
            [
                position = 8144, 8200
                rotation = right
                size = 64, 64
            ]

            component Subsystem Meas2 {
                layout = dynamic
                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7960, 8120
                    rotation = left
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8192
                    rotation = right
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8320
                    rotation = right
                ]

                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8256
                    rotation = right
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8192
                        rotation = right
                    ]

                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8192
                        rotation = right
                    ]

                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8192
                        rotation = right
                    ]

                    port P1 {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port P2 {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port P3 {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port P4 {
                        position = bottom:1
                        kind = pe
                    }
                    [
                        position = 8136, 8272
                        rotation = left
                    ]

                    port P5 {
                        position = bottom:2
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    port P6 {
                        position = bottom:3
                        kind = pe
                    }
                    [
                        position = 8248, 8272
                        rotation = left
                    ]

                    connect R1.p_node P1 as Connection1
                    connect R1.n_node P4 as Connection3
                    connect R2.p_node P2 as Connection6
                    connect R2.n_node P5 as Connection4
                    connect R3.p_node P3 as Connection2
                    connect R3.n_node P6 as Connection5
                }
                [
                    position = 7472, 8232
                    size = 64, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7400, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7400, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7400, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7960, 8064
                    rotation = left
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1470 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1471 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1472 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1473 pe
                [
                    position = 7488, 8432
                ]

                junction Junction1474 pe
                [
                    position = 7472, 8432
                ]

                junction Junction1475 pe
                [
                    position = 7568, 8432
                ]

                junction Junction1476 pe
                [
                    position = 7488, 8120
                ]

                junction Junction1477 pe
                [
                    position = 7472, 8024
                ]

                junction Junction1478 pe
                [
                    position = 7456, 7928
                ]

                connect A Junction1478 as Connection414
                connect B Junction1477 as Connection411
                connect C Junction1476 as Connection408
                connect Junction1470 VA.p_node as Connection389
                connect Junction1471 b as Connection392
                connect Junction1472 VC.p_node as Connection395
                connect Junction1473 Junction1474 as Connection404
                connect Junction1473 Junction1475 as Connection407
                connect Junction1474 res_for_meas.P5 as Connection403
                [
                    breakpoints = 7472, 8432; 7472, 8312
                ]
                connect Junction1475 Junction1421 as Connection406
                [
                    breakpoints = 7648, 8432
                ]
                connect Junction1476 Junction1472 as Connection409
                connect Junction1477 Junction1471 as Connection412
                connect Junction1478 Junction1470 as Connection415
                connect V "Bus Join1.out" as Connection385
                connect VA.out "Bus Join1.in" as Connection397
                connect VA.n_node Junction1421 as Connection237
                connect VB.out "Bus Join1.in1" as Connection398
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1471 as Connection391
                connect VC.out "Bus Join1.in2" as Connection399
                connect VC.n_node Junction1475 as Connection405
                connect a Junction1470 as Connection388
                connect c Junction1472 as Connection394
                connect res_for_meas.P6 Junction1473 as Connection402
                connect res_for_meas.P4 Junction1474 as Connection401
                [
                    breakpoints = 7456, 8312
                ]
                connect res_for_meas.P3 Junction1476 as Connection410
                connect res_for_meas.P2 Junction1477 as Connection413
                connect res_for_meas.P1 Junction1478 as Connection416
            }
            [
                position = 8144, 8304
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            component Subsystem Meas1 {
                layout = dynamic
                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8288
                    rotation = right
                ]

                component "core/Current Measurement" IB {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7432, 8024
                ]

                component "core/Current Measurement" IA {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7368, 7928
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8224
                    rotation = right
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8352
                    rotation = right
                ]

                component "core/Current Measurement" IC {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7496, 8120
                ]

                component gen_bus_join "Bus Join2" {
                    inputs = "3"
                }
                [
                    position = 7576, 7784
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7936, 8168
                    rotation = left
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8192
                        rotation = right
                    ]

                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8192
                        rotation = right
                    ]

                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8192
                        rotation = right
                    ]

                    port P1 {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port P2 {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port P3 {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port P4 {
                        position = bottom:1
                        kind = pe
                    }
                    [
                        position = 8136, 8272
                        rotation = left
                    ]

                    port P5 {
                        position = bottom:2
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    port P6 {
                        position = bottom:3
                        kind = pe
                    }
                    [
                        position = 8248, 8272
                        rotation = left
                    ]

                    connect R1.p_node P1 as Connection1
                    connect R1.n_node P4 as Connection3
                    connect R2.p_node P2 as Connection6
                    connect R2.n_node P5 as Connection4
                    connect R3.p_node P3 as Connection2
                    connect R3.n_node P6 as Connection5
                }
                [
                    position = 7328, 8224
                    size = 64, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7232, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7232, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7232, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7936, 8112
                    rotation = left
                ]

                port I {
                    position = top:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7648, 7784
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1466 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1467 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1468 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1473 pe
                [
                    position = 7344, 8432
                ]

                junction Junction1474 pe
                [
                    position = 7328, 8432
                ]

                junction Junction1475 pe
                [
                    position = 7304, 7928
                ]

                junction Junction1476 pe
                [
                    position = 7328, 8024
                ]

                junction Junction1477 pe
                [
                    position = 7344, 8120
                ]

                junction Junction1478 pe
                [
                    position = 7568, 8432
                ]

                connect A Junction1475 as Connection405
                connect B Junction1476 as Connection408
                connect "Bus Join1.in1" VB.out as Connection387
                connect "Bus Join1.in2" VC.out as Connection388
                connect "Bus Join2.out" I as Connection393
                connect "Bus Join2.in1" IB.out as Connection391
                connect "Bus Join2.in2" IC.out as Connection392
                connect C Junction1477 as Connection411
                connect IA.out "Bus Join2.in" as Connection390
                connect IA.n_node Junction1466 as Connection377
                connect Junction1421 Junction1478 as Connection417
                [
                    breakpoints = 7648, 8432; 7648, 8432
                ]
                connect Junction1466 a as Connection299
                connect Junction1467 IB.n_node as Connection375
                connect Junction1467 b as Connection301
                connect Junction1468 IC.n_node as Connection376
                connect Junction1468 c as Connection302
                connect Junction1473 Junction1474 as Connection404
                connect Junction1473 Junction1478 as Connection416
                [
                    breakpoints = 7344, 8432; 7568, 8432
                ]
                connect Junction1474 res_for_meas.P5 as Connection403
                [
                    breakpoints = 7328, 8424; 7328, 8304
                ]
                connect Junction1475 IA.p_node as Connection406
                connect Junction1476 IB.p_node as Connection409
                connect Junction1477 IC.p_node as Connection412
                connect Junction1478 VC.n_node as Connection415
                connect V "Bus Join1.out" as Connection385
                connect V "Bus Join1.out" as Connection389
                connect VA.out "Bus Join1.in" as Connection386
                connect VA.n_node Junction1421 as Connection237
                connect VA.p_node Junction1466 as Connection240
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1467 as Connection243
                connect VC.p_node Junction1468 as Connection246
                connect res_for_meas.P6 Junction1473 as Connection402
                connect res_for_meas.P4 Junction1474 as Connection401
                [
                    breakpoints = 7312, 8304
                ]
                connect res_for_meas.P1 Junction1475 as Connection407
                connect res_for_meas.P2 Junction1476 as Connection410
                connect res_for_meas.P3 Junction1477 as Connection413
            }
            [
                position = 8144, 8096
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            port b {
                position = bottom:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 8432
                rotation = left
            ]

            port a {
                position = bottom:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 8472
                rotation = left
            ]

            port B {
                position = top:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 7976
                rotation = right
            ]

            port c {
                position = bottom:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8392
                rotation = left
            ]

            port A {
                position = top:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 7936
                rotation = right
            ]

            port C {
                position = top:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8016
                rotation = right
            ]

            connect Brk.A Meas1.a as Connection2627
            connect Brk.C Meas1.c as Connection2629
            connect Brk.c Meas2.C as Connection2630
            connect Brk.a Meas2.A as Connection2632
            connect C Meas1.C as Connection2624
            connect MID_Rly1.Brk_cmd Brk.control as Connection2604
            connect Meas1.A A as Connection2626
            connect Meas1.B B as Connection2625
            connect Meas1.b Brk.B as Connection2628
            connect Meas1.I MID_Rly1.IABC as Connection2621
            connect Meas1.V MID_Rly1.VABC_grid as Connection2623
            connect Meas2.B Brk.b as Connection2631
            connect Meas2.V MID_Rly1.VABC_load as Connection2622
            [
                breakpoints = 8000, 8280
            ]
            connect Meas2.a a as Connection2633
            connect Meas2.c c as Connection2635
            connect b Meas2.b as Connection2634
        }
        [
            position = 11520, 8616
            size = 80, 48
        ]

        component Subsystem Feeder3_trafo1 {
            layout = dynamic
            component "core/Three Phase Two Winding Transformer" Tr1 {
                L1 = "L1_2MVA_2"
                L2 = "L2_2MVA_2"
                Lm = "20"
                Poc1 = "5713.2"
                Psc1 = "13247.9599806"
                R1 = "R1_2MVA_2"
                R2 = "R2_2MVA_2"
                Rm = "1e5"
                Sn = "Sn_2MVA_2"
                V1 = "V1_2MVA_2"
                V2 = "V2_2MVA_2"
                clock_number = "1"
                current_vals_SI = "[0.03135346870762468, 13.063945294843618]"
                current_vals_pu = "[0.0004589241819730884, 0.19121840915496557]"
                f = "sys_f"
                flux_vals_SI = "[31.18787204934705, 39.50463792917293]"
                flux_vals_pu = "[0.6024524548056571, 0.7631064427555065]"
                input = "SI"
                ioc1 = "3.79943728661"
                l1 = "0.00471958574309"
                l2 = "0.0141587572293"
                lm = "26.3943932249"
                r1 = "0.00165599499758"
                r2 = "0.00496798499273"
                rm = "350.066512637"
                usc1 = "2.00067224776"
                winding_1_connection = "D"
            }
            [
                position = 8192, 8192
                size = 126, 256
            ]

            port A1 {
                position = left:1
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8096
            ]

            port B1 {
                position = left:2
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8192
            ]

            port C1 {
                position = left:3
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8288
            ]

            port a2 {
                position = right:1
                kind = pe
                direction =  out
            }
            [
                position = 8304, 8096
                rotation = down
            ]

            port b2 {
                position = right:2
                kind = pe
                direction =  out
            }
            [
                position = 8304, 8192
                rotation = down
            ]

            port c2 {
                position = right:3
                kind = pe
                direction =  out
            }
            [
                position = 8304, 8288
                rotation = down
            ]

            port Ground {
                position = bottom:3
                kind = pe
                direction =  out
            }
            [
                position = 8304, 8368
                rotation = down
            ]

            connect Ground Tr1.n2 as Connection9
            connect Tr1.prm_1 A1 as Connection6
            connect Tr1.prm_2 B1 as Connection8
            connect Tr1.prm_3 C1 as Connection2
            connect Tr1.sec_1 a2 as Connection3
            connect Tr1.sec_2 b2 as Connection4
            connect Tr1.sec_3 c2 as Connection1
        }
        [
            position = 10696, 8520
            rotation = right
            scale = -1, 1
            size = 72, 64
        ]

        component Subsystem Feeder3_trafo3 {
            layout = dynamic
            component "core/Three Phase Two Winding Transformer" Tr1 {
                L1 = "L1_1MVA"
                L2 = "L2_1MVA"
                Lm = "20"
                Poc1 = "5713.2"
                Psc1 = "6642.37715237"
                R1 = "R1_1MVA"
                R2 = "R2_1MVA"
                Rm = "1e5"
                Sn = "Sn_1MVA"
                V1 = "V1_1MVA"
                V2 = "V2_1MVA"
                clock_number = "1"
                current_vals_SI = "[0.03135346870762468, 13.063945294843618]"
                current_vals_pu = "[0.0009178483639461768, 0.38243681830993115]"
                f = "sys_f"
                flux_vals_SI = "[31.18787204934705, 39.50463792917293]"
                flux_vals_pu = "[0.6024524548056571, 0.7631064427555065]"
                input = "SI"
                ioc1 = "7.59887457322"
                l1 = "0.00455833132082"
                l2 = "0.0136749939625"
                lm = "13.1971966124"
                r1 = "0.00166059428809"
                r2 = "0.00498178286428"
                rm = "175.033256319"
                usc1 = "1.9405548823"
                winding_1_connection = "D"
            }
            [
                position = 8192, 8192
                size = 126, 256
            ]

            port A1 {
                position = left:1
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8096
            ]

            port B1 {
                position = left:2
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8192
            ]

            port C1 {
                position = left:3
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8288
            ]

            port a2 {
                position = right:1
                kind = pe
                direction =  out
            }
            [
                position = 8304, 8096
                rotation = down
            ]

            port b2 {
                position = right:2
                kind = pe
                direction =  out
            }
            [
                position = 8304, 8192
                rotation = down
            ]

            port c2 {
                position = right:3
                kind = pe
                direction =  out
            }
            [
                position = 8304, 8288
                rotation = down
            ]

            port Ground {
                position = bottom:3
                kind = pe
                direction =  out
            }
            [
                position = 8304, 8376
                rotation = down
            ]

            connect Ground Tr1.n2 as Connection9
            connect Tr1.prm_1 A1 as Connection6
            connect Tr1.prm_2 B1 as Connection8
            connect Tr1.prm_3 C1 as Connection2
            connect Tr1.sec_1 a2 as Connection3
            connect Tr1.sec_2 b2 as Connection4
            connect Tr1.sec_3 c2 as Connection1
        }
        [
            position = 11520, 8408
            rotation = right
            scale = -1, 1
            size = 72, 64
        ]

        component Subsystem F3_CB6 {
            layout = dynamic
            component Subsystem MID_Rly1 {
                layout = dynamic
                component src_constant Constant2 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 7776, 8344
                    rotation = right
                ]

                component gen_bus_split "Bus Split1" {
                    outputs = "3"
                }
                [
                    position = 7832, 8000
                    rotation = right
                ]

                component gen_probe CB_state {
                }
                [
                    position = 7592, 8344
                    rotation = down
                ]

                component sys_signal_switch "Signal switch1" {
                    threshold = "0.5"
                }
                [
                    position = 7792, 8400
                    rotation = right
                ]

                component gen_bus_split "Bus Split2" {
                    outputs = "3"
                }
                [
                    position = 7704, 8000
                    rotation = right
                ]

                component gen_delay Delay1 {
                    del_length = "int(3.0/60.0/Ts)"
                }
                [
                    position = 7880, 8344
                    rotation = down
                ]

                component src_constant Constant1 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 8056, 7928
                ]

                component gen_terminator Term3 {
                }
                [
                    position = 8440, 7928
                ]

                component gen_terminator Term5 {
                }
                [
                    position = 8152, 8136
                    rotation = down
                    scale = -1, 1
                ]

                component gen_bus_split "Bus Split3" {
                    outputs = "3"
                }
                [
                    position = 7576, 8000
                    rotation = right
                ]

                component gen_terminator Term4 {
                }
                [
                    position = 8152, 8200
                    rotation = down
                    scale = -1, 1
                ]

                component "core/ModBus Device" "ModBus Device1" {
                    configuration = "configF3_CB6"
                    execution_rate = "Ts"
                }
                [
                    position = 8272, 8000
                    size = 184, 184
                ]

                component Subsystem SEL_787 {
                    layout = dynamic
                    component gen_logic_op not {
                        operator = "NOT"
                    }
                    [
                        position = 7440, 8624
                    ]

                    component gen_sum Sum3 {
                        signs = "3"
                    }
                    [
                        position = 7640, 8624
                    ]

                    component gen_logic_op "Logical operator1" {
                        inputs = "4"
                        operator = "OR"
                    }
                    [
                        position = 8720, 8128
                        rotation = left
                    ]

                    component gen_c_function "pf bitwise" {
                        in_terminal_dimensions_str = "exp_imp inherit;lag_lead inherit;"
                        in_terminal_properties = "inherit exp_imp;inherit lag_lead;"
                        no_feed_inputs = "[u\'\']"
                        no_feed_outputs = "[u\'\']"
                        out_terminal_dimensions_str = "pf_states inherit;"
                        out_terminal_properties = "uint pf_states;"
                        output_fnc = "/*Begin code section*/
pf_states=(uint)exp_imp<<1 | (uint)lag_lead<<2;
/*End code section*/"
                    }
                    [
                        position = 9200, 8416
                    ]

                    component tm_delay "Unit Delay2" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7728, 8304
                        rotation = left
                    ]

                    component src_scada_input "Control Panel Input1" {
                        execution_rate = "Ts"
                        max = "1"
                        min = "0"
                        unit = ""
                    }
                    [
                        position = 8136, 8192
                    ]

                    component tm_delay "Unit Delay4" {
                    }
                    [
                        position = 9496, 8056
                    ]

                    component gen_gain Gain8 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8688
                    ]

                    component gen_gain Gain1 {
                        gain = "2"
                    }
                    [
                        position = 7536, 8328
                        rotation = right
                    ]

                    component gen_gain Gain7 {
                        gain = "2"
                    }
                    [
                        position = 7512, 8624
                    ]

                    component gen_bus_join "Bus Join1" {
                        inputs = "25"
                    }
                    [
                        position = 7928, 8080
                    ]

                    component gen_sum Sum1 {
                        signs = "5"
                    }
                    [
                        position = 7648, 8384
                    ]

                    component gen_c_function bitwise_faults {
                        in_terminal_dimensions_str = "Status inherit;R25 inherit;R27 inherit;R50 inherit;R51 inherit;R59 inherit;Reset inherit;"
                        in_terminal_properties = "inherit Status;inherit R25;inherit R27;inherit R50;inherit R51;inherit R59;inherit Reset;"
                        no_feed_inputs = "[]"
                        no_feed_outputs = "[]"
                        out_terminal_dimensions_str = "fault_status inherit;"
                        out_terminal_properties = "uint fault_status;"
                        output_fnc = "/*Begin code section*/
fault_status= (uint)Status<<1 | (uint)R25<<2 | (uint)R27<<3 | (uint)R50<<4 | (uint)R51<<5 | (uint)R59<<6 | (uint)Reset<<7;
/*End code section*/"
                    }
                    [
                        position = 9200, 8272
                    ]

                    component gen_gain Gain5 {
                        gain = "8"
                    }
                    [
                        position = 7512, 8432
                        rotation = left
                    ]

                    component gen_gain Gain4 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8384
                    ]

                    component tm_delay "Unit Delay5" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7840, 8392
                        rotation = left
                    ]

                    component gen_gain Gain6 {
                        gain = "16"
                    }
                    [
                        position = 7584, 8456
                        rotation = left
                    ]

                    component gen_gain normalize {
                        gain = "np.sqrt(3.0)/13800.0"
                    }
                    [
                        position = 7312, 7728
                    ]

                    component gen_probe P {
                    }
                    [
                        position = 7344, 7576
                    ]

                    component gen_probe Q {
                    }
                    [
                        position = 7344, 7624
                    ]

                    component Subsystem Relay_Param {
                        layout = dynamic
                        component src_constant 27P_59P_tripDelay {
                            execution_rate = "Ts"
                            value = "R27P_R59P_tripDelay"
                        }
                        [
                            position = 8088, 7872
                        ]

                        component src_constant dF_threshold {
                            execution_rate = "Ts"
                            value = "dF_threshold"
                        }
                        [
                            position = 8088, 7760
                        ]

                        component src_constant Initial_status {
                            execution_rate = "Ts"
                            value = "Initial_status"
                        }
                        [
                            position = 8088, 7992
                        ]

                        component src_constant CT_primary {
                            execution_rate = "Ts"
                            value = "CT_primary"
                        }
                        [
                            position = 8088, 7928
                        ]

                        component gen_bus_join "Bus Join1" {
                            inputs = "4"
                        }
                        [
                            position = 8296, 7800
                            rotation = right
                        ]

                        component src_constant VRMSLL {
                            execution_rate = "Ts"
                            value = "VRMSLL"
                        }
                        [
                            position = 8088, 7592
                        ]

                        component src_constant dV_threshold {
                            execution_rate = "Ts"
                            value = "dV_threshold"
                        }
                        [
                            position = 8088, 7648
                        ]

                        component sys_signal_switch "Signal switch1" {
                            threshold = "0.5"
                        }
                        [
                            position = 9104, 7808
                            scale = 1, -1
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "3"
                        }
                        [
                            position = 8104, 8192
                            rotation = down
                            scale = -1, -1
                        ]

                        component src_constant angle_threshold {
                            execution_rate = "Ts"
                            value = "angle_threshold"
                        }
                        [
                            position = 8088, 7704
                        ]

                        component Subsystem Reset {
                            layout = dynamic
                            component gen_logic_op or {
                                operator = "OR"
                            }
                            [
                                position = 8152, 8192
                            ]

                            component Subsystem detect_change {
                                layout = dynamic
                                component gen_rel_op "Relational operator1" {
                                    relational_op = "!="
                                }
                                [
                                    position = 8240, 8192
                                ]

                                component tm_delay "Unit Delay1" {
                                }
                                [
                                    position = 8144, 8200
                                ]

                                port Out1 {
                                    label = "Out"
                                    position = right:1
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8304, 8192
                                ]

                                port In3 {
                                    label = "In"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8032, 8200
                                ]

                                junction Junction1 sp
                                [
                                    position = 8080, 8200
                                ]

                                connect Junction1 In3 as Connection1
                                connect "Relational operator1.in" Junction1 as Connection2
                                connect "Relational operator1.out" Out1 as Connection3
                                connect "Unit Delay1.in" Junction1 as Connection4
                                connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                            }
                            [
                                position = 8248, 8192
                                size = 48, 48
                            ]

                            port reset {
                                label = "Reset"
                                position = right:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8336, 8152
                            ]

                            port op_mode {
                                label = "Op_mode"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8344, 8240
                            ]

                            port "Reset in" {
                                label = "Reset in"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8168
                            ]

                            port "op_mode in" {
                                label = "op_mode in"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8224
                            ]

                            junction Junction1 sp
                            [
                                position = 8096, 8224
                            ]

                            connect Junction1 "op_mode in" as Connection1
                            connect detect_change.Out1 reset as Connection5
                            connect op_mode Junction1 as Connection6
                            connect or.in1 Junction1 as Connection3
                            connect or.in "Reset in" as Connection2
                            connect or.out detect_change.In3 as Connection4
                        }
                        [
                            position = 8280, 8192
                            rotation = down
                            scale = -1, -1
                            size = 104, 104
                        ]

                        component Subsystem Grid_Tied_param {
                            layout = dynamic
                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8552, 8040
                            ]

                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup1"
                            }
                            [
                                position = 8416, 7840
                                rotation = right
                            ]

                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay1"
                            }
                            [
                                position = 8352, 7880
                                rotation = right
                            ]

                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup1"
                            }
                            [
                                position = 8080, 7840
                                rotation = right
                            ]

                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType1"
                            }
                            [
                                position = 8240, 7880
                                rotation = right
                            ]

                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup1"
                            }
                            [
                                position = 8312, 7840
                                rotation = right
                            ]

                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7904
                                rotation = right
                            ]

                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial1"
                            }
                            [
                                position = 8200, 7840
                                rotation = right
                            ]

                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup1"
                            }
                            [
                                position = 8120, 7880
                                rotation = right
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7840
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7880
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7880
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8704, 8040
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8776, 7936
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 8872, 7728
                            size = 216, 104
                        ]

                        component Subsystem Islanded_param {
                            layout = dynamic
                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType2"
                            }
                            [
                                position = 8240, 7888
                                rotation = right
                            ]

                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7920
                                rotation = right
                            ]

                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup2"
                            }
                            [
                                position = 8296, 7856
                                rotation = right
                            ]

                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup2"
                            }
                            [
                                position = 8120, 7888
                                rotation = right
                            ]

                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup2"
                            }
                            [
                                position = 8072, 7856
                                rotation = right
                            ]

                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup2"
                            }
                            [
                                position = 8400, 7856
                                rotation = right
                            ]

                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay2"
                            }
                            [
                                position = 8352, 7888
                                rotation = right
                            ]

                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial2"
                            }
                            [
                                position = 8192, 7856
                                rotation = right
                            ]

                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8544, 8048
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7856
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7888
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7888
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8696, 8048
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8744, 7928
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 9224, 8040
                            size = 216, 104
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8160
                        ]

                        port reset {
                            label = "reset"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8224
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8360, 7856
                        ]

                        port Initial_condition {
                            label = "Initial_condition"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8192, 7992
                        ]

                        port from_Modbus {
                            label = "from_Modbus"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7992, 8192
                        ]

                        port relay_param {
                            label = "relay_param"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9200, 7808
                        ]

                        tag Goto1 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8232, 8280
                        ]

                        tag From2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8616, 7728
                        ]

                        tag Goto4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8208, 7544
                        ]

                        tag Goto3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7928
                        ]

                        tag From4 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 9104, 7904
                            rotation = right
                            scale = 1, -1
                        ]

                        tag From3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7760
                        ]

                        tag Goto2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7872
                        ]

                        tag From1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7696
                        ]

                        junction Junction1 sp
                        [
                            position = 8152, 7592
                        ]

                        junction Junction2 sp
                        [
                            position = 8736, 7696
                        ]

                        junction Junction3 sp
                        [
                            position = 8712, 7728
                        ]

                        junction Junction4 sp
                        [
                            position = 8688, 7760
                        ]

                        connect "Bus Join1.in" Junction1 as Connection54
                        connect "Bus Join1.in2" angle_threshold.out as Connection48
                        connect "Bus Join1.in3" dF_threshold.out as Connection49
                        connect "Bus Join1.in1" dV_threshold.out as Connection47
                        connect "Bus Split1.out1" "Reset.Reset in" as Connection75
                        connect "Bus Split1.in" from_Modbus as Connection42
                        connect From1 Junction2 as Connection60
                        connect From2 Junction3 as Connection63
                        connect From3 Junction4 as Connection66
                        connect From4 "Signal switch1.in2" as Connection71
                        connect Goto1 "Bus Split1.out2" as Connection45
                        connect Goto2 27P_59P_tripDelay.out as Connection51
                        connect Goto3 CT_primary.out as Connection52
                        connect Goto4 Junction1 as Connection56
                        connect Initial_condition Initial_status.out as Connection53
                        connect Islanded_param.VRMSLL Junction2 as Connection62
                        connect Islanded_param.27P_59P_tripDelay Junction3 as Connection65
                        connect Islanded_param.CT_primary Junction4 as Connection68
                        connect Junction1 VRMSLL.out as Connection55
                        connect Junction2 Grid_Tied_param.VRMSLL as Connection61
                        connect Junction3 Grid_Tied_param.27P_59P_tripDelay as Connection64
                        connect Junction4 Grid_Tied_param.CT_primary as Connection67
                        connect "Reset.op_mode in" "Bus Split1.out" as Connection76
                        connect Reset.op_mode op_mode as Connection43
                        connect Reset.reset reset as Connection44
                        connect "Signal switch1.in1" Grid_Tied_param.relay_param as Connection73
                        connect "Signal switch1.in" Islanded_param.relay_param as Connection72
                        connect relay_param "Signal switch1.out" as Connection74
                        connect relay_paramR25 "Bus Join1.out" as Connection50
                    }
                    [
                        position = 8344, 7976
                        size = 168, 160
                    ]

                    component Subsystem "CALC FROM MEASUREMENTS" {
                        layout = dynamic
                        component gen_terminator Termination9 {
                        }
                        [
                            position = 7336, 8368
                        ]

                        component gen_gain Gain9 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7032, 9120
                        ]

                        component gen_terminator Termination13 {
                        }
                        [
                            position = 6864, 9368
                        ]

                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7064, 7984
                        ]

                        component gen_gain Gain7 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8824
                        ]

                        component gen_rms_value "RMS value4" {
                        }
                        [
                            position = 7064, 8128
                        ]

                        component gen_gain Gain5 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8600
                        ]

                        component gen_gain Gain3 {
                            gain = "10"
                        }
                        [
                            position = 7064, 7792
                        ]

                        component gen_terminator Termination4 {
                        }
                        [
                            position = 7088, 9072
                        ]

                        component gen_terminator Termination3 {
                        }
                        [
                            position = 7048, 9016
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7064, 7920
                        ]

                        component gen_terminator Termination11 {
                        }
                        [
                            position = 6864, 9256
                        ]

                        component "core/Three phase PLL" "Three phase PLL2" {
                        }
                        [
                            position = 6760, 9408
                        ]

                        component gen_rms_value "RMS value5" {
                        }
                        [
                            position = 7064, 8192
                        ]

                        component gen_gain Gain4 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8504
                        ]

                        component "core/Three phase PLL" "Three phase PLL1" {
                        }
                        [
                            position = 7224, 8392
                        ]

                        component gen_terminator Termination5 {
                        }
                        [
                            position = 7304, 8488
                        ]

                        component gen_gain Gain2 {
                            gain = "10"
                        }
                        [
                            position = 7048, 7696
                        ]

                        component msr_phasor_3ph "Three Phase Phasor2" {
                        }
                        [
                            position = 6968, 8560
                        ]

                        component gen_rms_value "RMS value6" {
                        }
                        [
                            position = 7064, 8256
                        ]

                        component gen_terminator Termination8 {
                        }
                        [
                            position = 7336, 8312
                        ]

                        component gen_rms_value "RMS value3" {
                        }
                        [
                            position = 7064, 8048
                        ]

                        component gen_terminator Termination12 {
                        }
                        [
                            position = 6864, 9312
                        ]

                        component gen_gain Gain11 {
                            gain = "10.0"
                        }
                        [
                            position = 7432, 8400
                        ]

                        component gen_gain Gain8 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8976
                        ]

                        component gen_PQ_transform "PQ Power Meter1" {
                        }
                        [
                            position = 6936, 8952
                        ]

                        component gen_gain Gain6 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8704
                        ]

                        component gen_gain Gain1 {
                            gain = "10"
                        }
                        [
                            position = 7000, 7592
                        ]

                        component gen_terminator Termination10 {
                        }
                        [
                            position = 6856, 9472
                        ]

                        component gen_gain Gain10 {
                            gain = "100.0"
                        }
                        [
                            position = 7064, 9168
                        ]

                        component msr_phasor_3ph "Three Phase Phasor1" {
                        }
                        [
                            position = 6904, 7752
                        ]

                        component gen_terminator Termination7 {
                        }
                        [
                            position = 7336, 8256
                        ]

                        component Subsystem Subsystem1 {
                            layout = dynamic
                            component gen_abs Abs2 {
                            }
                            [
                                position = 7720, 7896
                            ]

                            component src_constant Constant2 {
                                execution_rate = "Ts"
                                value = "[0]"
                            }
                            [
                                position = 7752, 8048
                            ]

                            component gen_logic_op "Logical operator1" {
                            }
                            [
                                position = 7976, 7856
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7800
                            ]

                            component src_constant Constant1 {
                                execution_rate = "Ts"
                            }
                            [
                                position = 7768, 7856
                            ]

                            component gen_abs Abs1 {
                            }
                            [
                                position = 7720, 7792
                            ]

                            component gen_rel_op "Relational operator4" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8096
                            ]

                            component gen_rel_op "Relational operator3" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8000
                            ]

                            component gen_rel_op "Relational operator2" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7904
                            ]

                            component Subsystem Subsystem3 {
                                layout = dynamic
                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8008
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8032, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 Out1 as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect "Multiport signal switch1.ctrl" u as Connection4
                                connect "Unit Delay1.out" Junction1 as Connection5
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection6
                            }
                            [
                                position = 8152, 8104
                                size = 112, 56
                            ]

                            component Subsystem Subsystem2 {
                                layout = dynamic
                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7576, 8032
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7648, 8056
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8072, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 "Unit Delay1.out" as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect Out1 Junction1 as Connection4
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection5
                                connect u "Multiport signal switch1.ctrl" as Connection6
                            }
                            [
                                position = 8152, 8008
                                size = 112, 56
                            ]

                            port P {
                                label = "P"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 7992
                            ]

                            port Q {
                                label = "Q"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 8088
                            ]

                            port "Lagging or Leading" {
                                label = "Lag or Lead"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8104
                            ]

                            port "Exporting or Importing" {
                                label = "export or import"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8008
                            ]

                            junction Junction1 sp
                            [
                                position = 7560, 8088
                            ]

                            junction Junction4 sp
                            [
                                position = 7592, 7992
                            ]

                            junction Junction11 sp
                            [
                                position = 7808, 7856
                            ]

                            junction Junction13 sp
                            [
                                position = 7824, 8048
                            ]

                            junction Junction14 sp
                            [
                                position = 8040, 8016
                            ]

                            connect Abs1.in Junction1 as Connection1
                            connect Abs1.out "Relational operator1.in" as Connection2
                            connect Abs2.out "Relational operator2.in" as Connection3
                            connect Constant1.out Junction11 as Connection8
                            connect Constant2.out Junction13 as Connection9
                            connect "Exporting or Importing" Subsystem2.Out1 as Connection10
                            connect Junction11 "Relational operator1.in1" as Connection12
                            connect Junction13 "Relational operator3.in1" as Connection14
                            connect Junction14 Subsystem3.E as Connection45
                            connect Junction4 Abs2.in as Connection39
                            connect Junction4 P as Connection18
                            connect "Lagging or Leading" Subsystem3.Out1 as Connection22
                            connect "Logical operator1.out" Junction14 as Connection44
                            connect Q Junction1 as Connection26
                            connect "Relational operator1.out" "Logical operator1.in" as Connection27
                            connect "Relational operator2.in1" Junction11 as Connection28
                            connect "Relational operator2.out" "Logical operator1.in1" as Connection29
                            connect "Relational operator3.in" Junction4 as Connection42
                            connect "Relational operator3.out" Subsystem2.u as Connection31
                            connect "Relational operator4.in" Junction1 as Connection40
                            connect "Relational operator4.in1" Junction13 as Connection32
                            connect "Relational operator4.out" Subsystem3.u as Connection34
                            connect Subsystem2.E Junction14 as Connection46
                        }
                        [
                            position = 7248, 8912
                            size = 112, 80
                        ]

                        port Ia {
                            label = "Ia"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7920
                        ]

                        port Ia_rms {
                            label = "Ia_rms"
                            position = right:7
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7920
                        ]

                        port Ib {
                            label = "Ib"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7984
                        ]

                        port Ib_rms {
                            label = "Ib_rms"
                            position = right:8
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7984
                        ]

                        port Ic {
                            label = "Ic"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8048
                        ]

                        port Ic_rms {
                            label = "Ic_rms"
                            position = right:9
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8048
                        ]

                        port Va {
                            label = "Va"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8128
                        ]

                        port Va_rms {
                            label = "Va_rms"
                            position = right:10
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8128
                        ]

                        port Vb {
                            label = "Vb"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8192
                        ]

                        port Vc {
                            label = "Vc"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8256
                        ]

                        port Vb_rms {
                            label = "Vb_rms"
                            position = right:11
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8192
                        ]

                        port Vc_rms {
                            label = "Vc_rms"
                            position = right:12
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8256
                        ]

                        port P {
                            label = "P"
                            position = right:19
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7160, 8824
                        ]

                        port Q {
                            label = "Q"
                            position = right:20
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7168, 8976
                        ]

                        port S {
                            label = "S"
                            position = right:21
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7112, 9120
                        ]

                        port pf {
                            label = "pf"
                            position = right:22
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7144, 9168
                        ]

                        port Ia_mag {
                            label = "Ia_mag"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7536
                        ]

                        port Ia_phase {
                            label = "Ia_phase"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7592
                        ]

                        port Ib_mag {
                            label = "Ib_mag"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7640
                        ]

                        port Ib_phase {
                            label = "Ib_phase"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7696
                        ]

                        port Ic_mag {
                            label = "Ic_mag"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7744
                        ]

                        port Ic_phase {
                            label = "Ic_phase"
                            position = right:6
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7792
                        ]

                        port Va_mag {
                            label = "Va_mag"
                            position = right:13
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8456
                        ]

                        port Va_phase {
                            label = "Va_phase"
                            position = right:14
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8504
                        ]

                        port Vb_mag {
                            label = "Vb_mag"
                            position = right:15
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8552
                        ]

                        port Vb_phase {
                            label = "Vb_phase"
                            position = right:16
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8600
                        ]

                        port Vc_mag {
                            label = "Vc_mag"
                            position = right:17
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8648
                        ]

                        port Vc_phase {
                            label = "Vc_phase"
                            position = right:18
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8704
                        ]

                        port "Export Import" {
                            label = "Export Import"
                            position = right:28
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7360, 8928
                        ]

                        port "Lag Lead" {
                            label = "Lag Lead"
                            position = right:27
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7408, 8888
                        ]

                        port bus_freq {
                            label = "Bus_freq"
                            position = right:23
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7512, 8400
                        ]

                        port bus_wt {
                            label = "Bus_wt"
                            position = right:24
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7440, 8456
                        ]

                        port Vline_a {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9352
                        ]

                        port Vline_b {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9408
                        ]

                        port Vline_c {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9464
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = right:25
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9416
                        ]

                        port line_wt {
                            label = "Line_wt"
                            position = right:26
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9464
                        ]

                        junction Junction23 sp
                        [
                            position = 6752, 8128
                        ]

                        junction Junction24 sp
                        [
                            position = 6768, 8192
                        ]

                        junction Junction25 sp
                        [
                            position = 6784, 8256
                        ]

                        junction Junction34 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction35 sp
                        [
                            position = 6656, 7920
                        ]

                        junction Junction37 sp
                        [
                            position = 6672, 7984
                        ]

                        junction Junction39 sp
                        [
                            position = 6752, 8360
                        ]

                        junction Junction41 sp
                        [
                            position = 6768, 8392
                        ]

                        junction Junction42 sp
                        [
                            position = 6784, 8424
                        ]

                        junction Junction44 sp
                        [
                            position = 6768, 8568
                        ]

                        junction Junction45 sp
                        [
                            position = 6784, 8584
                        ]

                        junction Junction46 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction48 sp
                        [
                            position = 6752, 8536
                        ]

                        junction Junction49 sp
                        [
                            position = 6928, 8536
                        ]

                        junction Junction50 sp
                        [
                            position = 7056, 8928
                        ]

                        junction Junction51 sp
                        [
                            position = 7056, 8888
                        ]

                        junction Junction52 sp
                        [
                            position = 6656, 7920
                        ]

                        junction Junction53 sp
                        [
                            position = 6752, 8128
                        ]

                        connect "Export Import" "Subsystem1.Exporting or Importing" as Connection116
                        connect Gain1.out Ia_phase as Connection87
                        connect Gain10.in "PQ Power Meter1.k_factor" as Connection105
                        connect Gain11.in "Three phase PLL1.freq" as Connection107
                        connect Gain2.out Ib_phase as Connection89
                        connect Gain3.in "Three Phase Phasor1.phase3" as Connection91
                        connect Gain4.in "Three Phase Phasor2.phase1" as Connection92
                        connect Gain4.out Va_phase as Connection93
                        connect Gain5.out Vb_phase as Connection95
                        connect Gain6.in "Three Phase Phasor2.phase3" as Connection97
                        connect Gain7.in Junction51 as Connection113
                        connect Gain8.out Q as Connection101
                        connect Gain9.in "PQ Power Meter1.apparent" as Connection103
                        connect Ia Junction35 as Connection2
                        connect Ia_mag "Three Phase Phasor1.out1" as Connection3
                        connect Ia_rms "RMS value1.out" as Connection4
                        connect Ib Junction37 as Connection5
                        connect Ib_rms "RMS value2.out" as Connection6
                        connect Ic Junction34 as Connection7
                        connect Ic_phase Gain3.out as Connection90
                        connect Ic_rms "RMS value3.out" as Connection9
                        connect Junction23 Junction39 as Connection10
                        connect Junction23 Va as Connection11
                        connect Junction24 Junction41 as Connection12
                        connect Junction24 "RMS value5.in" as Connection13
                        connect Junction24 Vb as Connection14
                        connect Junction25 Junction42 as Connection15
                        connect Junction25 "RMS value6.in" as Connection16
                        connect Junction37 "RMS value2.in" as Connection18
                        connect Junction39 "Three phase PLL1.va" as Connection20
                        connect Junction41 "Three phase PLL1.vb" as Connection21
                        connect Junction42 "Three phase PLL1.vc" as Connection22
                        connect Junction44 Junction41 as Connection23
                        connect Junction45 Junction42 as Connection24
                        connect Junction46 Junction34 as Connection25
                        connect Junction48 Junction39 as Connection27
                        connect Junction49 Junction48 as Connection28
                        connect Junction50 Gain8.in as Connection111
                        [
                            breakpoints = 7056, 8928
                        ]
                        connect Junction51 "PQ Power Meter1.Pdc" as Connection114
                        [
                            breakpoints = 7056, 8888
                        ]
                        connect Junction52 Junction35 as Connection119
                        connect Junction53 Junction23 as Connection122
                        connect "Lag Lead" "Subsystem1.Lagging or Leading" as Connection117
                        connect P Gain7.out as Connection98
                        connect "PQ Power Meter1.ia" Junction35 as Connection30
                        connect "PQ Power Meter1.ib" Junction37 as Connection31
                        connect "PQ Power Meter1.vb" Junction44 as Connection33
                        connect "PQ Power Meter1.vc" Junction45 as Connection34
                        connect "PQ Power Meter1.ic" Junction46 as Connection35
                        connect "PQ Power Meter1.va" Junction48 as Connection36
                        connect "PQ Power Meter1.Qdc" Junction50 as Connection110
                        connect "RMS value1.in" Junction52 as Connection118
                        connect "RMS value3.in" Junction34 as Connection38
                        connect "RMS value4.in" Junction53 as Connection121
                        connect S Gain9.out as Connection102
                        connect Subsystem1.Q Junction50 as Connection112
                        connect Subsystem1.P Junction51 as Connection115
                        connect Termination10.in "Three phase PLL2.sin_theta" as Connection45
                        connect Termination11.in "Three phase PLL2.d_axis" as Connection46
                        connect Termination12.in "Three phase PLL2.q_axis" as Connection47
                        connect Termination13.in "Three phase PLL2.zero_axis" as Connection48
                        connect Termination3.in "PQ Power Meter1.Pac" as Connection50
                        connect Termination4.in "PQ Power Meter1.Qac" as Connection51
                        connect Termination5.in "Three phase PLL1.sin_theta" as Connection52
                        connect Termination7.in "Three phase PLL1.d_axis" as Connection53
                        connect Termination8.in "Three phase PLL1.q_axis" as Connection54
                        connect Termination9.in "Three phase PLL1.zero_axis" as Connection55
                        connect "Three Phase Phasor1.phase1" Gain1.in as Connection86
                        connect "Three Phase Phasor1.phase2" Gain2.in as Connection88
                        connect "Three Phase Phasor1.out2" Ib_mag as Connection57
                        connect "Three Phase Phasor1.out3" Ic_mag as Connection59
                        connect "Three Phase Phasor1.in2" Junction37 as Connection60
                        connect "Three Phase Phasor1.in3" Junction46 as Connection61
                        connect "Three Phase Phasor1.in1" Junction52 as Connection120
                        connect "Three Phase Phasor1.in_ref" Junction53 as Connection123
                        connect "Three Phase Phasor2.phase2" Gain5.in as Connection94
                        connect "Three Phase Phasor2.in2" Junction44 as Connection64
                        connect "Three Phase Phasor2.in3" Junction45 as Connection65
                        connect "Three Phase Phasor2.in_ref" Junction49 as Connection66
                        connect "Three Phase Phasor2.in1" Junction49 as Connection67
                        connect "Three Phase Phasor2.out1" Va_mag as Connection68
                        connect "Three Phase Phasor2.out2" Vb_mag as Connection70
                        connect "Three Phase Phasor2.out3" Vc_mag as Connection72
                        connect "Three phase PLL2.freq" line_freq as Connection73
                        connect Va_rms "RMS value4.out" as Connection74
                        connect Vb_rms "RMS value5.out" as Connection75
                        connect Vc Junction25 as Connection76
                        connect Vc_phase Gain6.out as Connection96
                        connect Vc_rms "RMS value6.out" as Connection78
                        connect Vline_a "Three phase PLL2.va" as Connection79
                        connect Vline_b "Three phase PLL2.vb" as Connection80
                        connect Vline_c "Three phase PLL2.vc" as Connection81
                        connect bus_freq Gain11.out as Connection106
                        connect bus_wt "Three phase PLL1.theta" as Connection83
                        connect line_wt "Three phase PLL2.theta" as Connection84
                        connect pf Gain10.out as Connection104
                    }
                    [
                        position = 6992, 8104
                        size = 112, 664
                    ]

                    component Subsystem "Relay 25-Sync Check1" {
                        layout = dynamic
                        component gen_gain Gain2 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7832
                        ]

                        component gen_gain Gain1 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7776
                        ]

                        component gen_rel_op "Relational operator1" {
                        }
                        [
                            position = 8464, 7856
                        ]

                        component gen_gain Gain3 {
                            gain = "1.0/10.0"
                        }
                        [
                            position = 7776, 8080
                        ]

                        component gen_logic_op "Logical operator3" {
                            inputs = "3"
                        }
                        [
                            position = 8336, 8104
                        ]

                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7784, 7832
                        ]

                        component src_constant Constant2 {
                            execution_rate = "Ts"
                            value = "[2]"
                        }
                        [
                            position = 8368, 7848
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8808, 7904
                        ]

                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8736, 7864
                        ]

                        component gen_logic_op "Logical operator7" {
                            operator = "OR"
                        }
                        [
                            position = 8632, 7888
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7784, 7776
                        ]

                        component gen_logic_op "Logical operator4" {
                            operator = "OR"
                        }
                        [
                            position = 8888, 8096
                        ]

                        component gen_c_function "Deadbus fcn" {
                            global_variables = "real threshold;uint a;uint c;uint b;"
                            in_terminal_dimensions_str = "Vbus inherit;Vline inherit;VRMSLL inherit;"
                            in_terminal_properties = "real Vbus;real Vline;real VRMSLL;"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "out inherit;"
                            output_fnc = "/*Begin code section*/
if (VRMSLL > 400)
    threshold=VRMSLL*0.003;
else
    threshold = VRMSLL*0.05;

if ((Vbus > (VRMSLL*0.90)) && (Vbus < (VRMSLL*1.20)) && (Vline < threshold))
    a = 1;
else
    a = 0;

if ((Vline > (VRMSLL*0.90)) && (Vline < (VRMSLL*1.20)) && (Vbus < threshold))
    b = 1;
else
    b = 0;

if ((Vline < threshold) && (Vbus < threshold))
    c = 1;
else
    c = 0;

out = a || b || c;
/*End code section*/"
                        }
                        [
                            position = 8208, 7672
                        ]

                        component gen_logic_op "Logical operator5" {
                            operator = "OR"
                        }
                        [
                            position = 8544, 7848
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "4"
                        }
                        [
                            position = 7808, 8424
                        ]

                        component Subsystem "Freq Comparator" {
                            layout = dynamic
                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7832, 8048
                            ]

                            component gen_c_function "C function1" {
                                in_terminal_dimensions_str = "fbus inherit;fline inherit;"
                                in_terminal_properties = "real fbus;inherit fline;"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
out=fabs(fline-fbus);
/*End code section*/"
                            }
                            [
                                position = 7736, 8040
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8048
                            ]

                            port f_bus {
                                label = "f_bus"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port f_line {
                                label = "f_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port dF_threshold {
                                label = "dF_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7728, 8112
                            ]

                            connect "Relational operator1.in" "C function1.out" as Connection6
                            connect "Relational operator1.out" Locked as Connection8
                            connect "Relational operator1.in1" dF_threshold as Connection7
                            connect f_bus "C function1.fbus" as Connection4
                            connect f_line "C function1.fline" as Connection5
                        }
                        [
                            position = 8016, 8104
                            size = 112, 88
                        ]

                        component Subsystem "Voltage Comparator" {
                            layout = dynamic
                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7856, 8048
                            ]

                            component gen_gain Gain1 {
                                gain = "0.01"
                            }
                            [
                                position = 7680, 8200
                            ]

                            component gen_c_function "C function1" {
                                in_terminal_dimensions_str = "Vbus inherit;Vline inherit;"
                                in_terminal_properties = "real Vbus;inherit Vline;"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
out=fabs(Vline-Vbus);
/*End code section*/"
                            }
                            [
                                position = 7736, 8040
                            ]

                            component gen_product Product1 {
                            }
                            [
                                position = 7760, 8160
                            ]

                            port V_bus {
                                label = "V_bus"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port V_line {
                                label = "V_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7928, 8048
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8152
                            ]

                            port dV_threshold {
                                label = "dV_threshold"
                                position = left:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8200
                            ]

                            connect Gain1.in dV_threshold as Connection8
                            connect Product1.in1 Gain1.out as Connection7
                            connect Product1.out "Relational operator1.in1" as Connection9
                            connect Product1.in VRMSLL as Connection6
                            connect "Relational operator1.in" "C function1.out" as Connection2
                            connect "Relational operator1.out" Locked as Connection3
                            connect V_bus "C function1.Vbus" as Connection4
                            connect V_line "C function1.Vline" as Connection5
                        }
                        [
                            position = 8016, 7864
                            size = 112, 208
                        ]

                        component Subsystem "Phase Comparator" {
                            layout = dynamic
                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7808, 8056
                            ]

                            component gen_probe c_out {
                                addr = "17943"
                            }
                            [
                                position = 7768, 8000
                            ]

                            component gen_c_function "C function1" {
                                global_variables = "real mod_L;real wrap_out1;real wrap_out2;real mod_B;real k;real alpha;real PI2;real PI;"
                                in_terminal_dimensions_str = "phase_bus inherit;phase_line inherit;"
                                in_terminal_properties = "real phase_bus;real phase_line;"
                                init_fnc = "/*Begin code section*/
PI = 3.1415926536;
PI2 = 2*PI;
/*End code section*/"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
mod_L=fmod(phase_line, PI2);
mod_B=fmod(phase_bus, PI2);

if (fabs(mod_L - mod_B) > PI) {
    if (mod_L < mod_B)
        mod_B -= PI2;
    else
        mod_B += PI2;
}

out=fabs(mod_L-mod_B)*180.0/PI;
/*End code section*/"
                            }
                            [
                                position = 7656, 8040
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8056
                            ]

                            port wt_grid {
                                label = "wt_grid"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8008
                            ]

                            port wt_gen {
                                label = "wt_gen"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8072
                            ]

                            port angle_threshold {
                                label = "angle_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7576, 8136
                            ]

                            junction Junction1 sp
                            [
                                position = 7736, 8048
                            ]

                            connect Junction1 "C function1.out" as Connection2
                            connect Locked "Relational operator1.out" as Connection3
                            connect "Relational operator1.in" Junction1 as Connection4
                            connect angle_threshold "Relational operator1.in1" as Connection8
                            connect c_out.in Junction1 as Connection5
                            connect wt_gen "C function1.phase_line" as Connection6
                            connect wt_grid "C function1.phase_bus" as Connection7
                        }
                        [
                            position = 8016, 8272
                            size = 112, 88
                        ]

                        port trip_or {
                            label = "trip_or"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7792
                        ]

                        port mode_in {
                            label = "mode_in"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7896
                        ]

                        port bool_R25 {
                            label = "bool_R25"
                            position = auto:auto
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9032, 8096
                        ]

                        port Va {
                            label = "Va"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7776
                        ]

                        port Vline_a {
                            label = "Vline_A"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7832
                        ]

                        port bus_freq {
                            label = "bus_freq"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8080
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7824, 8104
                        ]

                        port bus_wt {
                            label = "bus_wt"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7776, 8248
                        ]

                        port line_wt {
                            label = "line_wt"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7832, 8272
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8424
                        ]

                        tag From3 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7944
                        ]

                        tag From2 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8128
                        ]

                        tag Goto2 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8416
                            rotation = down
                            scale = -1, 1
                        ]

                        tag Goto1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8056, 8400
                            rotation = down
                            scale = -1, 1
                        ]

                        tag From1 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8296
                        ]

                        tag From5 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8112, 7688
                        ]

                        tag Goto4 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8448
                        ]

                        tag From4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7888
                        ]

                        tag Goto3 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7912, 8432
                        ]

                        junction Junction4 sp
                        [
                            position = 7920, 7832
                        ]

                        junction Junction5 sp
                        [
                            position = 8536, 8104
                        ]

                        junction Junction23 sp
                        [
                            position = 7904, 7776
                        ]

                        connect "Bus Split1.in" relay_paramR25 as Connection69
                        connect Constant2.out "Relational operator1.in" as Connection1
                        connect "Deadbus fcn.Vbus" Junction23 as Connection103
                        connect "Deadbus fcn.out" "SR Flip Flop1.s_in" as Connection137
                        connect "Freq Comparator.Locked" "Logical operator3.in1" as Connection135
                        connect "Freq Comparator.f_line" line_freq as Connection133
                        connect From1 "Phase Comparator.angle_threshold" as Connection74
                        connect From2 "Freq Comparator.dF_threshold" as Connection79
                        connect From3 "Voltage Comparator.dV_threshold" as Connection80
                        connect From4 "Voltage Comparator.VRMSLL" as Connection81
                        connect From5 "Deadbus fcn.VRMSLL" as Connection90
                        connect Gain3.out "Freq Comparator.f_bus" as Connection132
                        connect Goto1 "Bus Split1.out" as Connection70
                        connect Goto2 "Bus Split1.out1" as Connection71
                        connect Goto3 "Bus Split1.out2" as Connection72
                        connect Goto4 "Bus Split1.out3" as Connection73
                        connect Junction23 Gain1.out as Connection16
                        connect Junction4 "Deadbus fcn.Vline" as Connection104
                        connect Junction4 Gain2.out as Connection21
                        connect Junction5 "Logical operator4.in1" as Connection22
                        connect "Logical operator3.out" Junction5 as Connection24
                        connect "Logical operator3.in2" "Phase Comparator.Locked" as Connection134
                        connect "Logical operator5.out" "Logical operator7.in" as Connection26
                        connect "Logical operator5.in1" "Relational operator1.out" as Connection27
                        connect "Logical operator5.in" trip_or as Connection28
                        connect "Logical operator7.in1" Junction5 as Connection29
                        connect "Logical operator7.out" "SR Flip Flop1.r_in" as Connection30
                        connect "Phase Comparator.wt_grid" bus_wt as Connection110
                        connect "RMS value1.out" Gain1.in as Connection93
                        connect "RMS value2.out" Gain2.in as Connection97
                        connect "Relational operator1.in1" mode_in as Connection36
                        connect "SR Flip Flop1.out" "Logical operator4.in" as Connection37
                        connect "SR Flip Flop1.out_n" Termination1.in as Connection38
                        connect Va "RMS value1.in" as Connection101
                        connect Vline_a "RMS value2.in" as Connection102
                        connect "Voltage Comparator.V_bus" Junction23 as Connection47
                        connect "Voltage Comparator.V_line" Junction4 as Connection48
                        connect "Voltage Comparator.Locked" "Logical operator3.in" as Connection136
                        connect bool_R25 "Logical operator4.out" as Connection138
                        connect bus_freq Gain3.in as Connection121
                        connect line_wt "Phase Comparator.wt_gen" as Connection111
                    }
                    [
                        position = 8888, 7800
                        size = 120, 232
                    ]

                    component Subsystem R50512761 {
                        layout = dynamic
                        component src_constant Ts {
                            execution_rate = "Ts"
                            value = "Ts"
                        }
                        [
                            position = 7696, 7712
                            rotation = right
                        ]

                        component gen_c_function Relays {
                            global_variables = "real R50;real R51;real R27;real R59;real n50;real n51;real n59;real n27;real t59;real t50;real t51;real bool_27;real t27;real bool_59;uint i;real bool_51;real bool_50;real A;real B;real P;real Ipu50;real Ipu51;real CT_tap;real ratio[3];real M[3];real t51s[3];real Iinst[3];real Irms[3];real Vrms[3];"
                            in_terminal_dimensions_str = "enable inherit;Ts inherit;Reset inherit;IinstA inherit;IinstB inherit;IinstC inherit;IrmsA inherit;IrmsB inherit;IrmsC inherit;VrmsA inherit;VrmsB inherit;VrmsC inherit;VRMSLN inherit;CT_p inherit;IOC_pickup inherit;IOC_tripDelay inherit;TOC_pickup inherit;curveType inherit;timeDial inherit;UV_pickup inherit;OV_pickup inherit;UVOV_tripDelay inherit;"
                            in_terminal_properties = "real enable;inherit Ts;inherit Reset;inherit IinstA;inherit IinstB;inherit IinstC;inherit IrmsA;inherit IrmsB;inherit IrmsC;inherit VrmsA;inherit VrmsB;inherit VrmsC;inherit VRMSLN;inherit CT_p;inherit IOC_pickup;inherit IOC_tripDelay;inherit TOC_pickup;inherit curveType;inherit timeDial;inherit UV_pickup;inherit OV_pickup;inherit UVOV_tripDelay;"
                            init_fnc = "/*Begin code section*/
R50=0;
R51=0;
R27=0;
R59=0;

n50=0;
n51=0;
n59=0;
n27=0;

CT_tap = 1.0;

A = 5.67;
B = 0.0352;
P = 2.0;

t59 = 0;
t50 = 0;
t51 = 0;
t27 = 0;

bool_27 = 0;
bool_59 = 0;
bool_51 = 0;
bool_50 = 0;
/*End code section*/"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "trip50 inherit;trip51 inherit;trip27 inherit;trip59 inherit;"
                            out_terminal_properties = "real trip50;real trip51;real trip27;real trip59;"
                            output_fnc = "/*Begin code section*/
Iinst[0] = fabs(IinstA);
Iinst[1] = fabs(IinstB);
Iinst[2] = fabs(IinstC);

Irms[0] = IrmsA;
Irms[1] = IrmsB;
Irms[2] = IrmsC;

Vrms[0] = VrmsA;
Vrms[1] = VrmsB;
Vrms[2] = VrmsC;

if (Reset==1) {
    R50=0;
    R51=0;
    R59=0;
    R27=0;
    bool_50 = 0.0;
}

for(i=0; i<3; i++){
    Iinst[i] = Iinst[i]*5.0/CT_p;
    Irms[i] = Irms[i]*5.0/CT_p;
}

if(curveType==1){
    A = 0.0104;
    B = 0.0226;
    P = 0.02;
}
else if(curveType==2){
    A = 5.95;
    B = 0.180;
    P = 2.0;
}
else if(curveType==3){
    A = 3.88;
    B = 0.0923;
    P = 2.0;
}
else{
    A = 5.67;
    B = 0.0352;
    P = 2.0;
}

if (!((R50 == 1) || (R51 == 1))&&(enable==1)){
    
    if((UV_pickup>1)||(UV_pickup==0)){
        UV_pickup = 0.9;
    }
    if((OV_pickup<1)||(OV_pickup==0)){
        OV_pickup = 1.1;
    }
    
    Ipu50 = IOC_pickup*CT_tap*sqrt(2.0);
    Ipu51 = TOC_pickup*CT_tap;
    
    for(i=0; i<3; i++){
        ratio[i] = Vrms[i]/VRMSLN;
        M[i] = Irms[i]/Ipu51;
        if(M[i]<=1.0){
            t51s[i] = 1e6;
        }
        else{
            t51s[i] = timeDial*(B+(A/(pow(M[i],P)-1)));
        }
    }
    
    t27 = 0.004167 + UVOV_tripDelay;
    t50 = 0.004167 + IOC_tripDelay;
    t59 = 0.004167 + UVOV_tripDelay;
    
    if((t51s[0]<=t51s[1])&&(t51s[0]<=t51s[2])){
        t51 = t51s[0];
    }
    else if(t51s[1]<=t51s[2]){
        t51 = t51s[1];
    }
    else{
        t51 = t51s[2];
    }
    
    for(i=0; i<3; i++){
        if(ratio[i]<=UV_pickup){
            bool_27 = 1;
            break;
        }
        else{
            bool_27 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Irms[i]>Ipu51){
            bool_51 = 1;
            break;
        }
        else{
            bool_51 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Iinst[i]>Ipu50){
            bool_50 = 1;
            break;
        }
    }
    for(i=0; i<3; i++){
        if(ratio[i]>=OV_pickup){
            bool_59 = 1;
            break;
        }
        else{
            bool_59 = 0;
        }
    }
    //bool_27 = ((ratio[0]<=UV_pickup)+(ratio[1]<=UV_pickup)+(ratio[2]<=UV_pickup))>0;
    //bool_59 = ((ratio[0]>=OV_pickup)+(ratio[1]>=OV_pickup)+(ratio[2]>=OV_pickup))>0;
    //bool_50 = ((Iinst[0]>Ipu50)+(Iinst[1]>Ipu50)+(Iinst[2]>Ipu50))>0;
    //bool_51 = ((Irms[0]>Ipu51)+(Irms[1]>Ipu51)+(Irms[2]>Ipu51))>0;
    
    n50 *= bool_50;
    n51 *= bool_51;
    n27 *= bool_27;
    n59 *= bool_59;

    n50 += bool_50  * Ts;
    n51 += bool_51  * Ts;
    n27 += bool_27  * Ts;
    n59 += bool_59  * Ts;

    if(n50 > t50)
        R50 = 1;
    else
        R50 = 0;

    if(n51 > t51)
        R51 = 1;
    else
        R51 = 0;

    if(n27 > t27)
        R27 = 1;
    else
        R27 = 0;

    if(n59 > t59)
        R59 = 1;
    else
        R59 = 0;
}

trip50 = R50;
trip51 = R51;
trip27 = R27;
trip59 = R59;
/*End code section*/"
                        }
                        [
                            position = 7784, 8008
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "10"
                        }
                        [
                            position = 7560, 8248
                            rotation = left
                        ]

                        port trip_50 {
                            label = "trip_50"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7848
                        ]

                        port trip_51 {
                            label = "trip_51"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7952
                        ]

                        port trip_59 {
                            label = "trip_59"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8160
                        ]

                        port trip_27 {
                            label = "trip_27"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8056
                        ]

                        port relay_param {
                            label = "Relay Param"
                            position = left:12
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7560, 8328
                            rotation = left
                        ]

                        port Irms_c {
                            label = "Irms_c"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7368, 7752
                            rotation = right
                        ]

                        port Irms_a {
                            label = "Irms_a"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7472, 7752
                            rotation = right
                        ]

                        port Enable {
                            label = "Enable"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7736, 7752
                            rotation = right
                        ]

                        port Iinst_a {
                            label = "Iinst_a"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7608, 7712
                            rotation = right
                        ]

                        port Irms_b {
                            label = "Irms_b"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7424, 7712
                            rotation = right
                        ]

                        port Iinst_b {
                            label = "Iinst_b"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7568, 7752
                            rotation = right
                        ]

                        port Reset {
                            label = "Reset"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7656, 7752
                            rotation = right
                        ]

                        port Iinst_c {
                            label = "Iinst_c"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7520, 7712
                            rotation = right
                        ]

                        port Vrms_b {
                            label = "Vrms_b"
                            position = left:10
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7256, 7752
                            rotation = right
                        ]

                        port Vrms_c {
                            label = "Vrms_c"
                            position = left:11
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7200, 7712
                            rotation = right
                        ]

                        port Vrms_a {
                            label = "Vrms_a"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7312, 7712
                            rotation = right
                        ]

                        comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus split:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                        [
                            position = 7728, 8224
                        ]

                        connect "Bus Split1.out4" Relays.TOC_pickup as Connection42
                        connect "Bus Split1.out9" Relays.UVOV_tripDelay as Connection37
                        connect "Bus Split1.out2" Relays.IOC_pickup as Connection44
                        connect "Bus Split1.out6" Relays.timeDial as Connection40
                        connect "Bus Split1.out7" Relays.UV_pickup as Connection39
                        connect "Bus Split1.out3" Relays.IOC_tripDelay as Connection43
                        connect "Bus Split1.out5" Relays.curveType as Connection41
                        connect "Bus Split1.out1" Relays.CT_p as Connection45
                        connect "Bus Split1.out8" Relays.OV_pickup as Connection38
                        connect "Bus Split1.out" Relays.VRMSLN as Connection46
                        connect "Bus Split1.in" relay_param as Connection36
                        connect Enable Relays.enable as Connection47
                        connect Iinst_a Relays.IinstA as Connection50
                        connect Iinst_b Relays.IinstB as Connection51
                        connect Iinst_c Relays.IinstC as Connection52
                        connect Irms_a Relays.IrmsA as Connection53
                        connect Irms_b Relays.IrmsB as Connection54
                        connect Irms_c Relays.IrmsC as Connection55
                        connect Reset Relays.Reset as Connection49
                        connect Ts.out Relays.Ts as Connection48
                        connect Vrms_a Relays.VrmsA as Connection56
                        connect Vrms_b Relays.VrmsB as Connection57
                        connect Vrms_c Relays.VrmsC as Connection58
                        connect trip_27 Relays.trip27 as Connection77
                        connect trip_50 Relays.trip50 as Connection76
                        connect trip_51 Relays.trip51 as Connection75
                        connect trip_59 Relays.trip59 as Connection78
                    }
                    [
                        position = 8424, 8328
                        size = 144, 304
                    ]

                    component Subsystem "State Condition Mng" {
                        layout = dynamic
                        component gen_c_function "Trip_out mng fnc" {
                            in_terminal_dimensions_str = "bool_R25 inherit;op_mode_in inherit;trip_in inherit;enable inherit;initial_condition inherit;activate_logic inherit;"
                            in_terminal_properties = "real bool_R25;inherit op_mode_in;inherit trip_in;inherit enable;inherit initial_condition;inherit activate_logic;"
                            init_fnc = "/*Begin code section*/
trip_out = initial_condition;
/*End code section*/"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "trip_out inherit;"
                            out_terminal_properties = "real trip_out;"
                            output_fnc = "/*Begin code section*/
if(enable && activate_logic){
    if(op_mode_in==0){
        trip_out = trip_in*bool_R25;
    }
    else if(op_mode_in==1){
        trip_out = 1*bool_R25;
    }
    else if(op_mode_in==2){
        trip_out=0;
    }
}
/*End code section*/"
                        }
                        [
                            position = 8424, 8208
                        ]

                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8120, 8352
                            scale = 1, -1
                        ]

                        component gen_logic_op not1 {
                            operator = "NOT"
                        }
                        [
                            position = 8032, 8264
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8200, 8336
                            scale = 1, -1
                        ]

                        component gen_logic_op not {
                            operator = "NOT"
                        }
                        [
                            position = 7840, 8200
                        ]

                        component Subsystem detect_change {
                            layout = dynamic
                            component tm_delay "Unit Delay1" {
                            }
                            [
                                position = 8144, 8200
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "!="
                            }
                            [
                                position = 8240, 8192
                            ]

                            port Out1 {
                                label = "Out"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8304, 8192
                            ]

                            port In3 {
                                label = "In"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8032, 8200
                            ]

                            junction Junction1 sp
                            [
                                position = 8080, 8200
                            ]

                            connect Junction1 In3 as Connection1
                            connect "Relational operator1.in" Junction1 as Connection2
                            connect "Relational operator1.out" Out1 as Connection3
                            connect "Unit Delay1.in" Junction1 as Connection4
                            connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                        }
                        [
                            position = 7960, 8368
                            size = 48, 48
                        ]

                        port Trip_in {
                            label = "Trip_in"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7768, 8200
                        ]

                        port R25 {
                            label = "R25"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8232, 8128
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8272, 8160
                        ]

                        port trip_out {
                            label = "trip_out"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8536, 8208
                        ]

                        port enable {
                            label = "enable"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7952, 8264
                        ]

                        port initial_condition {
                            label = "initial_condition"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8248, 8232
                        ]

                        junction Junction2 sp
                        [
                            position = 7984, 8264
                        ]

                        junction Junction3 sp
                        [
                            position = 7904, 8200
                        ]

                        connect Junction2 enable as Connection150
                        connect Junction3 not.out as Connection158
                        connect R25 "Trip_out mng fnc.bool_R25" as Connection144
                        connect "SR Flip Flop1.r_in" not1.out as Connection136
                        connect Termination1.in "SR Flip Flop1.out_n" as Connection138
                        connect "Trip_out mng fnc.enable" Junction2 as Connection151
                        connect "Trip_out mng fnc.trip_in" Junction3 as Connection157
                        connect "Trip_out mng fnc.activate_logic" "SR Flip Flop1.out" as Connection154
                        connect detect_change.In3 Junction3 as Connection159
                        connect detect_change.Out1 "SR Flip Flop1.s_in" as Connection156
                        connect initial_condition "Trip_out mng fnc.initial_condition" as Connection152
                        connect not.in Trip_in as Connection139
                        connect not1.in Junction2 as Connection149
                        connect op_mode "Trip_out mng fnc.op_mode_in" as Connection145
                        connect trip_out "Trip_out mng fnc.trip_out" as Connection167
                    }
                    [
                        position = 9336, 8056
                        size = 128, 136
                    ]

                    port OUTPUT {
                        label = "OUTPUT"
                        position = bottom:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9704, 8056
                    ]

                    port Ia {
                        label = "Ia"
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7816
                    ]

                    port Ib {
                        label = "Ib"
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7888
                    ]

                    port Ic {
                        label = "Ic"
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7960
                    ]

                    port Va {
                        label = "Va"
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8032
                    ]

                    port Vb {
                        label = "Vb"
                        position = left:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8104
                    ]

                    port Vc {
                        label = "Vc"
                        position = left:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8176
                    ]

                    port Vline_a {
                        label = "Vline_A"
                        position = left:7
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8248
                    ]

                    port faults_status {
                        label = "Fault_status"
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8272
                    ]

                    port TO_MODBUS {
                        label = "To_Modbus"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8024, 8080
                    ]

                    port Vline_b {
                        label = "Vline_B"
                        position = left:8
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8320
                    ]

                    port Vline_c {
                        label = "Vline_C"
                        position = left:9
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8392
                    ]

                    port cb_state {
                        label = "cb_state"
                        position = left:10
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7312, 8624
                    ]

                    port pf_states {
                        label = "pf_state"
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8416
                        scale = 1, -1
                    ]

                    port from_Modbus {
                        label = "From Modbus"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8144, 7976
                    ]

                    tag From32 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8104
                    ]

                    tag Goto11 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7376, 8256
                    ]

                    tag Goto29 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 7952
                        scale = 1, -1
                    ]

                    tag From31 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9096, 8424
                    ]

                    tag Goto15 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7856
                    ]

                    tag Goto21 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 7688
                        rotation = left
                    ]

                    tag Goto22 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7248, 7832
                        rotation = left
                    ]

                    tag Goto25 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8320
                    ]

                    tag Goto16 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7928
                    ]

                    tag From35 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8456
                    ]

                    tag From17 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7752
                    ]

                    tag From16 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7776
                    ]

                    tag From36 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8216
                    ]

                    tag Goto3 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8336
                    ]

                    tag Goto18 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7088, 7688
                        rotation = left
                    ]

                    tag From21 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8264
                    ]

                    tag Goto27 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7976
                        scale = 1, -1
                    ]

                    tag Goto19 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 7832
                        rotation = left
                    ]

                    tag From9 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8992, 8240
                        rotation = down
                        scale = -1, 1
                    ]

                    tag From24 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8312
                    ]

                    tag Goto28 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7928
                        scale = 1, -1
                    ]

                    tag Goto23 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 8000
                        scale = 1, -1
                    ]

                    tag Goto13 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7296, 8288
                    ]

                    tag From28 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8384
                    ]

                    tag From5 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7520, 8504
                    ]

                    tag From23 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8336
                    ]

                    tag Goto17 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7104, 7760
                        rotation = left
                    ]

                    tag Goto24 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 8304
                    ]

                    tag From30 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9024, 8408
                    ]

                    tag From37 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7848
                    ]

                    tag Goto9 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8000
                    ]

                    tag From7 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9072, 8224
                        rotation = down
                        scale = -1, -1
                    ]

                    tag Goto10 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8272
                    ]

                    tag From15 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7728
                    ]

                    tag From6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7584, 8560
                        rotation = right
                    ]

                    tag From1 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7600, 8280
                        rotation = right
                    ]

                    tag Goto8 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8216
                    ]

                    tag From27 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8408
                    ]

                    tag From26 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8432
                    ]

                    tag Goto7 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 8024
                        scale = 1, -1
                    ]

                    tag From29 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8032
                    ]

                    tag From13 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8320
                    ]

                    tag From18 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7800
                    ]

                    tag Goto6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9640, 8096
                    ]

                    tag From20 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8240
                    ]

                    tag Goto1 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8160
                    ]

                    tag Goto26 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8296, 8152
                    ]

                    tag From11 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8880, 8256
                    ]

                    tag Goto4 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8424
                    ]

                    tag From10 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8272
                    ]

                    tag From3 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7392, 8384
                    ]

                    tag From22 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8288
                    ]

                    tag From34 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7896
                    ]

                    tag From19 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7824
                    ]

                    tag From25 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8360
                    ]

                    tag From33 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9120, 8080
                    ]

                    tag Goto12 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7224, 8256
                    ]

                    tag From8 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9104, 8304
                    ]

                    tag From12 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9032, 8288
                    ]

                    tag From14 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7704
                    ]

                    tag Goto5 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9088, 7752
                    ]

                    tag Goto20 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7232, 7760
                        rotation = left
                    ]

                    tag Goto2 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8248
                    ]

                    tag Goto14 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7784
                    ]

                    tag From4 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7448, 8464
                    ]

                    tag From2 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7480, 8288
                    ]

                    tag Goto34 {
                        value = "F3_CB6_BREAKER"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7392, 7776
                        hide_name = True
                    ]

                    tag Goto33 {
                        value = "F3_CB6_FREQUENCY"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7392, 7752
                        hide_name = True
                    ]

                    tag Goto30 {
                        value = "F3_CB6_P_REAL"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7392, 7680
                        hide_name = True
                    ]

                    tag Goto31 {
                        value = "F3_CB6_P_REACTIVE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7392, 7704
                        hide_name = True
                    ]

                    tag Goto32 {
                        value = "F3_CB6_VOLTAGE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7392, 7728
                        hide_name = True
                    ]

                    junction Junction51 sp
                    [
                        position = 8720, 8056
                    ]

                    junction Junction100 sp
                    [
                        position = 8536, 8192
                    ]

                    junction Junction101 sp
                    [
                        position = 8536, 8280
                    ]

                    junction Junction104 sp
                    [
                        position = 9016, 7800
                    ]

                    junction Junction105 sp
                    [
                        position = 9584, 8056
                    ]

                    junction Junction106 sp
                    [
                        position = 7368, 8624
                    ]

                    junction Junction108 sp
                    [
                        position = 6688, 8248
                    ]

                    junction Junction109 sp
                    [
                        position = 6696, 8032
                    ]

                    junction Junction110 sp
                    [
                        position = 7304, 8240
                    ]

                    junction Junction111 sp
                    [
                        position = 6640, 7816
                    ]

                    junction Junction112 sp
                    [
                        position = 6640, 7888
                    ]

                    junction Junction113 sp
                    [
                        position = 6640, 7960
                    ]

                    junction Junction114 sp
                    [
                        position = 7088, 7984
                    ]

                    junction Junction115 sp
                    [
                        position = 7104, 8000
                    ]

                    junction Junction116 sp
                    [
                        position = 7120, 8016
                    ]

                    junction Junction117 sp
                    [
                        position = 7216, 8032
                    ]

                    junction Junction118 sp
                    [
                        position = 7232, 8048
                    ]

                    junction Junction119 sp
                    [
                        position = 7248, 8064
                    ]

                    junction Junction120 sp
                    [
                        position = 8536, 8368
                    ]

                    junction Junction121 sp
                    [
                        position = 8536, 8456
                    ]

                    junction Junction122 sp
                    [
                        position = 8216, 8192
                    ]

                    junction Junction123 sp
                    [
                        position = 7256, 8176
                    ]

                    junction Junction124 sp
                    [
                        position = 7272, 8192
                    ]

                    junction Junction125 sp
                    [
                        position = 7152, 8032
                    ]

                    junction Junction126 sp
                    [
                        position = 7320, 8240
                    ]

                    junction Junction127 sp
                    [
                        position = 7336, 8624
                    ]

                    junction Junction128 sp
                    [
                        position = 7264, 7680
                    ]

                    junction Junction129 sp
                    [
                        position = 7280, 7704
                    ]

                    comment Comment2 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52A</p></body></html> ENDCOMMENT 
                    [
                        position = 7400, 8568
                    ]

                    comment Comment4 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Status</p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8256
                    ]

                    comment Comment3 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52B</p></body></html> ENDCOMMENT 
                    [
                        position = 7432, 8720
                    ]

                    comment Comment5 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">pf_states </p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8400
                    ]

                    connect "Bus Join1.in13" "CALC FROM MEASUREMENTS.Va_phase" as Connection134
                    connect "Bus Join1.in17" "CALC FROM MEASUREMENTS.Vc_phase" as Connection140
                    connect "Bus Join1.in15" "CALC FROM MEASUREMENTS.Vb_phase" as Connection135
                    connect "Bus Join1.in3" "CALC FROM MEASUREMENTS.Ib_phase" as Connection132
                    connect "Bus Join1.in20" "CALC FROM MEASUREMENTS.S" as Connection144
                    connect "Bus Join1.in5" "CALC FROM MEASUREMENTS.Ic_phase" as Connection133
                    connect "Bus Join1.in21" "CALC FROM MEASUREMENTS.pf" as Connection149
                    connect "Bus Join1.in22" Junction110 as Connection240
                    connect "Bus Join1.in6" Junction114 as Connection268
                    connect "Bus Join1.in9" Junction117 as Connection283
                    connect "Bus Join1.in10" Junction118 as Connection286
                    connect "Bus Join1.in18" Junction123 as Connection382
                    connect "Bus Join1.in19" Junction124 as Connection385
                    connect "CALC FROM MEASUREMENTS.Ia_mag" "Bus Join1.in" as Connection5
                    connect "CALC FROM MEASUREMENTS.Vc_mag" "Bus Join1.in16" as Connection4
                    connect "CALC FROM MEASUREMENTS.Ic_mag" "Bus Join1.in4" as Connection2
                    connect "CALC FROM MEASUREMENTS.Vb_mag" "Bus Join1.in14" as Connection1
                    connect "CALC FROM MEASUREMENTS.Ib_mag" "Bus Join1.in2" as Connection6
                    connect "CALC FROM MEASUREMENTS.Va_mag" "Bus Join1.in12" as Connection3
                    connect "CALC FROM MEASUREMENTS.Ia_phase" "Bus Join1.in1" as Connection131
                    connect "CALC FROM MEASUREMENTS.line_freq" Goto10 as Connection224
                    connect "CALC FROM MEASUREMENTS.line_wt" Goto13 as Connection245
                    connect "CALC FROM MEASUREMENTS.Vline_a" Junction108 as Connection217
                    connect "CALC FROM MEASUREMENTS.Va" Junction109 as Connection218
                    connect "CALC FROM MEASUREMENTS.Ia" Junction111 as Connection257
                    connect "CALC FROM MEASUREMENTS.Ib" Junction112 as Connection256
                    connect "CALC FROM MEASUREMENTS.Ic" Junction113 as Connection258
                    connect "CALC FROM MEASUREMENTS.Ib_rms" Junction115 as Connection271
                    connect "CALC FROM MEASUREMENTS.Ic_rms" Junction116 as Connection274
                    connect "CALC FROM MEASUREMENTS.Vc_rms" Junction119 as Connection289
                    connect "Control Panel Input1.out" Junction122 as Connection381
                    connect From1 Sum1.in as Connection167
                    connect From10 bitwise_faults.R50 as Connection197
                    connect From11 bitwise_faults.R27 as Connection195
                    connect From12 bitwise_faults.R51 as Connection199
                    connect From13 bitwise_faults.Reset as Connection210
                    connect From14 "Relay 25-Sync Check1.Va" as Connection219
                    connect From15 "Relay 25-Sync Check1.Vline_a" as Connection220
                    connect From16 "Relay 25-Sync Check1.line_freq" as Connection225
                    connect From17 "Relay 25-Sync Check1.bus_freq" as Connection238
                    connect From18 "Relay 25-Sync Check1.bus_wt" as Connection244
                    connect From19 "Relay 25-Sync Check1.line_wt" as Connection246
                    connect From2 Gain1.in as Connection168
                    connect From20 R50512761.Iinst_a as Connection336
                    connect From21 R50512761.Iinst_b as Connection337
                    connect From22 R50512761.Iinst_c as Connection338
                    connect From23 R50512761.Irms_b as Connection340
                    connect From24 R50512761.Irms_a as Connection339
                    connect From25 R50512761.Irms_c as Connection341
                    connect From26 R50512761.Vrms_c as Connection344
                    connect From27 R50512761.Vrms_b as Connection343
                    connect From28 R50512761.Vrms_a as Connection342
                    connect From29 "State Condition Mng.op_mode" as Connection309
                    connect From3 Gain4.in as Connection169
                    connect From30 "pf bitwise.exp_imp" as Connection313
                    connect From31 "pf bitwise.lag_lead" as Connection312
                    connect From32 "State Condition Mng.enable" as Connection318
                    connect From33 "State Condition Mng.initial_condition" as Connection319
                    connect From34 "Relay 25-Sync Check1.relay_paramR25" as Connection320
                    connect From35 R50512761.relay_param as Connection321
                    connect From36 R50512761.Reset as Connection335
                    connect From37 "Relay 25-Sync Check1.mode_in" as Connection334
                    connect From4 Gain5.in as Connection171
                    connect From5 Gain6.in as Connection173
                    connect From7 bitwise_faults.Status as Connection203
                    connect From8 bitwise_faults.R59 as Connection201
                    connect From9 bitwise_faults.R25 as Connection193
                    connect Gain1.out Sum1.in1 as Connection21
                    connect Gain4.out Sum1.in2 as Connection170
                    connect Gain5.out Sum1.in3 as Connection172
                    connect Gain6.out Sum1.in4 as Connection174
                    connect Gain7.out Sum3.in1 as Connection180
                    connect Gain8.in Junction106 as Connection186
                    connect Gain8.out Sum3.in2 as Connection183
                    connect Goto1 Junction100 as Connection152
                    connect Goto11 Junction110 as Connection242
                    connect Goto12 "CALC FROM MEASUREMENTS.bus_wt" as Connection243
                    connect Goto14 Junction111 as Connection249
                    connect Goto15 Junction112 as Connection252
                    connect Goto16 Junction113 as Connection255
                    connect Goto17 Junction115 as Connection273
                    connect Goto19 Junction116 as Connection276
                    connect Goto2 Junction101 as Connection155
                    connect Goto22 Junction119 as Connection367
                    connect Goto23 Relay_Param.op_mode as Connection329
                    connect Goto24 "CALC FROM MEASUREMENTS.Lag Lead" as Connection310
                    connect Goto25 "CALC FROM MEASUREMENTS.Export Import" as Connection311
                    connect Goto27 Relay_Param.Initial_condition as Connection331
                    connect Goto28 Relay_Param.relay_param as Connection333
                    connect Goto29 Relay_Param.relay_paramR25 as Connection332
                    connect Goto30 Junction128 as Connection399
                    connect Goto31 Junction129 as Connection402
                    connect Goto32 normalize.out as Connection397
                    connect Goto33 Junction126 as Connection393
                    connect Goto34 Junction127 as Connection396
                    connect Goto4 Junction121 as Connection298
                    connect Goto5 Junction104 as Connection164
                    connect Goto6 Junction105 as Connection178
                    connect Goto7 Relay_Param.reset as Connection330
                    connect Goto8 Junction108 as Connection213
                    connect Goto9 Junction109 as Connection216
                    connect Ia Junction111 as Connection247
                    connect Ib Junction112 as Connection250
                    connect Ic Junction113 as Connection253
                    connect Junction100 "Logical operator1.in" as Connection196
                    connect Junction101 "Logical operator1.in1" as Connection198
                    connect Junction101 R50512761.trip_51 as Connection154
                    connect Junction104 "State Condition Mng.R25" as Connection303
                    connect Junction105 "Unit Delay4.out" as Connection202
                    connect Junction106 not.in as Connection185
                    connect Junction110 Junction126 as Connection391
                    connect Junction114 "CALC FROM MEASUREMENTS.Ia_rms" as Connection269
                    connect Junction114 Goto18 as Connection355
                    connect Junction115 "Bus Join1.in7" as Connection272
                    connect Junction116 "Bus Join1.in8" as Connection275
                    connect Junction117 Goto21 as Connection365
                    connect Junction117 Junction125 as Connection388
                    connect Junction118 "CALC FROM MEASUREMENTS.Vb_rms" as Connection287
                    connect Junction118 Goto20 as Connection366
                    connect Junction119 "Bus Join1.in11" as Connection290
                    connect Junction120 Goto3 as Connection296
                    connect Junction121 R50512761.trip_59 as Connection299
                    connect Junction122 Goto26 as Connection380
                    connect Junction123 "CALC FROM MEASUREMENTS.P" as Connection383
                    connect Junction124 "CALC FROM MEASUREMENTS.Q" as Connection386
                    connect Junction125 "CALC FROM MEASUREMENTS.Va_rms" as Connection389
                    connect Junction126 "CALC FROM MEASUREMENTS.bus_freq" as Connection392
                    connect Junction127 Junction106 as Connection395
                    connect Junction128 Junction123 as Connection400
                    connect Junction129 Junction124 as Connection403
                    connect Junction51 "State Condition Mng.Trip_in" as Connection302
                    connect "Logical operator1.in2" Junction120 as Connection297
                    connect "Logical operator1.in3" Junction121 as Connection300
                    connect "Logical operator1.out" Junction51 as Connection79
                    connect OUTPUT Junction105 as Connection176
                    connect P.in Junction128 as Connection401
                    connect Q.in Junction129 as Connection404
                    connect R50512761.trip_50 Junction100 as Connection150
                    connect R50512761.trip_27 Junction120 as Connection295
                    connect R50512761.Enable Junction122 as Connection379
                    connect "Relay 25-Sync Check1.bool_R25" Junction104 as Connection162
                    connect "Relay 25-Sync Check1.trip_or" Junction51 as Connection94
                    connect Sum3.in From6 as Connection179
                    connect Sum3.out "Unit Delay5.in" as Connection190
                    connect TO_MODBUS "Bus Join1.out" as Connection101
                    connect "Unit Delay2.out" "Bus Join1.in23" as Connection175
                    connect "Unit Delay2.in" Sum1.out as Connection104
                    connect "Unit Delay4.in" "State Condition Mng.trip_out" as Connection304
                    connect "Unit Delay5.out" "Bus Join1.in24" as Connection191
                    connect Va Junction109 as Connection214
                    connect Vb "CALC FROM MEASUREMENTS.Vb" as Connection108
                    connect Vc "CALC FROM MEASUREMENTS.Vc" as Connection109
                    connect Vline_a Junction108 as Connection211
                    connect Vline_b "CALC FROM MEASUREMENTS.Vline_b" as Connection111
                    connect Vline_c "CALC FROM MEASUREMENTS.Vline_c" as Connection112
                    connect cb_state Junction127 as Connection394
                    connect faults_status bitwise_faults.fault_status as Connection368
                    connect from_Modbus Relay_Param.from_Modbus as Connection328
                    connect normalize.in Junction125 as Connection398
                    connect not.out Gain7.in as Connection181
                    connect "pf bitwise.pf_states" pf_states as Connection369

                    CT_primary = "1200"
                    R27P_R59P_tripDelay = "2"
                    R27P_pickup1 = "0.7"
                    R27P_pickup2 = ".5"
                    R50P_tripDelay2 = "0"
                    R51P_curveType2 = "1"
                    R51P_pickup1 = "0.4"
                    R51P_pickup2 = ".4"
                    R51P_timeDial2 = "1"
                    R59P_pickup1 = "1.2"
                    R59P_pickup2 = "1.2"

                    mask {
                        description = "This block implements the relay SEL 787 with protective functions 25 (synchronism check), 27 (Under Voltage), 50 (Instantaneous Overcurrent), 51 (Time Overcurrent) and 59 (Overvoltage). 

he relay outputs to Modbus are: 0 - Ia_mag; 1 - Ia_phase; 2 - Ib_mag; 3 - Ib_phase; 4 - Ic_mag; 5 - Ic_phase; 6 - Ia_rms; 7 - Ib_rms; 8 - Ic_rms; 9 - Va_rms; 10 - Vb_rms; 11 - Vc_rms; 12 - Va_mag; 13 - Va_phase; 14 - Vb_mag; 15 - Vb_phase; 16 - Vc_mag; 17 - Vc_phase; 18 - P; 19 - Q; 20 - S; 21 - pf; 22 - Bus_freq; 23 - protection functions status; 24 - Circuit Breaker status.

he relay inputs from Modbus are: 2001 - op_mode; 2002 - Reset; 2003 - protection_mode.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
he trip pickups for functions 50 and 51 are defined as currents in the secondary of the current transformer. The secondary ot the CT has 5 turns."

                        VRMSLL {
                            label = "Line to Line RMS voltage"
                            widget = edit
                            type = generic
                            default_value = "13800.0"
                            unit = "V"
                            group = "Base Parameters"
                        }

                        dV_threshold {
                            label = "Voltage deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "5.0"
                            unit = "%"
                            group = "Base Parameters"
                        }

                        angle_threshold {
                            label = "Angle deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "12.0"
                            unit = "degree"
                            group = "Base Parameters"
                        }

                        dF_threshold {
                            label = "Frequency deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Hz"
                            group = "Base Parameters"
                        }

                        R27P_R59P_tripDelay {
                            label = "R27 UV and R59 OV trip delay"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Sec"
                            group = "Base Parameters"
                        }

                        CT_primary {
                            label = "CT primary turns number"
                            widget = edit
                            type = generic
                            default_value = "600"
                            group = "Base Parameters"
                        }

                        Initial_status {
                            label = "Initial relay status"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "Base Parameters"
                        }

                        R50P_pickup1 {
                            label = "R50 IOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R50P_tripDelay1 {
                            label = "R50 IOC trip delay 1"
                            widget = edit
                            type = generic
                            default_value = "0"
                            unit = "sec"
                            group = "GridTied Parameters"
                        }

                        R51P_pickup1 {
                            label = "R51 TOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.8"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R51P_curveType1 {
                            label = "R51 TOC curve type 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R51P_timeDial1 {
                            label = "R51 TOC time dial 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R27P_pickup1 {
                            label = "R27 UV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R59P_pickup1 {
                            label = "R59 OV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R50P_pickup2 {
                            label = "R50 IOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R50P_tripDelay2 {
                            label = "R50 IOC trip delay 2"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            unit = "sec"
                            group = "Islanded Parameters"
                        }

                        R51P_pickup2 {
                            label = "R51 TOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.7"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R51P_curveType2 {
                            label = "R51 TOC curve type 2"
                            widget = edit
                            type = generic
                            default_value = "2.0"
                            group = "Islanded Parameters"
                        }

                        R51P_timeDial2 {
                            label = "R51 TOC time dial 2"
                            widget = edit
                            type = generic
                            default_value = "3.0"
                            group = "Islanded Parameters"
                        }

                        R27P_pickup2 {
                            label = "R27 UV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        R59P_pickup2 {
                            label = "R59 OV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE
                    }
                }
                [
                    position = 7952, 8168
                    size = 152, 240
                ]

                port Brk_cmd {
                    label = "Brk_cmd"
                    position = bottom:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7792, 8496
                    rotation = right
                ]

                port IABC {
                    label = "IABC"
                    position = right:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7792, 7936
                ]

                port VABC_grid {
                    label = "VABC_grid"
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7640, 7936
                ]

                port VABC_load {
                    label = "VABC_load"
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7520, 7936
                ]

                junction Junction1391 sp
                [
                    position = 8120, 7928
                ]

                junction Junction1392 sp
                [
                    position = 8120, 7976
                ]

                junction Junction1393 sp
                [
                    position = 7952, 8344
                ]

                junction Junction1396 sp
                [
                    position = 7792, 8448
                ]

                junction Junction1397 sp
                [
                    position = 7648, 8344
                ]

                comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset the relay when input is 1</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Operation Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 1 force the breaker closed</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 0 turns on logic based operation</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Protection Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 1 use islanded parameters</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 0 use grid tied parameters</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                [
                    position = 7968, 8328
                ]

                connect Brk_cmd Junction1396 as Connection899
                connect "Bus Split1.in" IABC as Connection907
                connect "Bus Split1.out2" SEL_787.Ic as Connection910
                connect "Bus Split1.out" SEL_787.Ia as Connection908
                connect "Bus Split1.out1" SEL_787.Ib as Connection909
                connect "Bus Split2.out1" SEL_787.Vb as Connection913
                connect "Bus Split2.out2" SEL_787.Vc as Connection914
                connect "Bus Split2.out" SEL_787.Va as Connection912
                connect "Bus Split3.out1" SEL_787.Vline_b as Connection929
                connect "Bus Split3.out" SEL_787.Vline_a as Connection928
                connect "Bus Split3.out2" SEL_787.Vline_c as Connection930
                connect CB_state.in Junction1397 as Connection905
                connect Constant2.out "Signal switch1.in1" as Connection880
                connect Delay1.out "Signal switch1.in" as Connection2
                connect Junction1391 Constant1.out as Connection852
                connect Junction1391 "ModBus Device1.coil_in" as Connection313
                connect Junction1392 Junction1391 as Connection314
                connect Junction1393 Delay1.in as Connection867
                connect Junction1396 "Signal switch1.out" as Connection902
                connect Junction1397 Junction1396 as Connection904
                connect "ModBus Device1.holding_in" Junction1392 as Connection466
                connect "ModBus Device1.discrete_in" Junction1392 as Connection467
                connect "ModBus Device1.holding_out" SEL_787.from_Modbus as Connection932
                connect "ModBus Device1.coil_out" Term3.in as Connection854
                connect SEL_787.OUTPUT Junction1393 as Connection868
                connect SEL_787.cb_state Junction1397 as Connection903
                connect SEL_787.TO_MODBUS "ModBus Device1.reg_in" as Connection931
                connect SEL_787.pf_states Term4.in as Connection897
                connect "Signal switch1.in2" Junction1393 as Connection866
                connect Term5.in SEL_787.faults_status as Connection870
                connect VABC_grid "Bus Split2.in" as Connection934
                connect VABC_load "Bus Split3.in" as Connection933
            }
            [
                position = 8000, 8200
                rotation = left
                size = 136, 72
            ]

            component Subsystem Meas2 {
                layout = dynamic
                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7960, 8120
                    rotation = left
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8192
                    rotation = right
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8320
                    rotation = right
                ]

                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8256
                    rotation = right
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8192
                        rotation = right
                    ]

                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8192
                        rotation = right
                    ]

                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8192
                        rotation = right
                    ]

                    port P1 {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port P2 {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port P3 {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port P4 {
                        position = bottom:1
                        kind = pe
                    }
                    [
                        position = 8136, 8272
                        rotation = left
                    ]

                    port P5 {
                        position = bottom:2
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    port P6 {
                        position = bottom:3
                        kind = pe
                    }
                    [
                        position = 8248, 8272
                        rotation = left
                    ]

                    connect R1.p_node P1 as Connection1
                    connect R1.n_node P4 as Connection3
                    connect R2.p_node P2 as Connection6
                    connect R2.n_node P5 as Connection4
                    connect R3.p_node P3 as Connection2
                    connect R3.n_node P6 as Connection5
                }
                [
                    position = 7472, 8232
                    size = 64, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7400, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7400, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7400, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7960, 8064
                    rotation = left
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1470 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1471 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1472 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1473 pe
                [
                    position = 7488, 8432
                ]

                junction Junction1474 pe
                [
                    position = 7472, 8432
                ]

                junction Junction1475 pe
                [
                    position = 7568, 8432
                ]

                junction Junction1476 pe
                [
                    position = 7488, 8120
                ]

                junction Junction1477 pe
                [
                    position = 7472, 8024
                ]

                junction Junction1478 pe
                [
                    position = 7456, 7928
                ]

                connect A Junction1478 as Connection414
                connect B Junction1477 as Connection411
                connect C Junction1476 as Connection408
                connect Junction1470 VA.p_node as Connection389
                connect Junction1471 b as Connection392
                connect Junction1472 VC.p_node as Connection395
                connect Junction1473 Junction1474 as Connection404
                connect Junction1473 Junction1475 as Connection407
                connect Junction1474 res_for_meas.P5 as Connection403
                [
                    breakpoints = 7472, 8432; 7472, 8312
                ]
                connect Junction1475 Junction1421 as Connection406
                connect Junction1476 Junction1472 as Connection409
                connect Junction1477 Junction1471 as Connection412
                connect Junction1478 Junction1470 as Connection415
                connect V "Bus Join1.out" as Connection385
                connect VA.out "Bus Join1.in" as Connection397
                connect VA.n_node Junction1421 as Connection237
                connect VB.out "Bus Join1.in1" as Connection398
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1471 as Connection391
                connect VC.out "Bus Join1.in2" as Connection399
                connect VC.n_node Junction1475 as Connection405
                [
                    breakpoints = 7648, 8432
                ]
                connect a Junction1470 as Connection388
                connect c Junction1472 as Connection394
                connect res_for_meas.P6 Junction1473 as Connection402
                connect res_for_meas.P4 Junction1474 as Connection401
                [
                    breakpoints = 7456, 8312
                ]
                connect res_for_meas.P3 Junction1476 as Connection410
                connect res_for_meas.P2 Junction1477 as Connection413
                connect res_for_meas.P1 Junction1478 as Connection416
            }
            [
                position = 8144, 8312
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            component Subsystem Brk {
                layout = dynamic
                component "core/Triple Pole Single Throw Contactor" S1 {
                    ctrl_src = "Model"
                }
                [
                    position = 8104, 8184
                    rotation = right
                ]

                port C {
                    position = left:1
                    kind = pe
                }
                [
                    position = 8200, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 8104, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port A {
                    position = left:3
                    kind = pe
                }
                [
                    position = 8008, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port c {
                    position = right:1
                    kind = pe
                }
                [
                    position = 8200, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port b {
                    position = right:2
                    kind = pe
                }
                [
                    position = 8104, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port a {
                    position = right:3
                    kind = pe
                }
                [
                    position = 8008, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port control {
                    position = bottom:auto
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8320, 8184
                    scale = -1, 1
                ]

                connect A S1.c_in as Connection6
                connect B S1.b_in as Connection5
                connect S1.a_in C as Connection4
                connect S1.c_out a as Connection1
                connect S1.b_out b as Connection2
                connect S1.a_out c as Connection3
                connect control S1.ctrl_in as Connection7
            }
            [
                position = 8144, 8200
                rotation = right
                size = 64, 64
            ]

            component Subsystem Meas1 {
                layout = dynamic
                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8224
                    rotation = right
                ]

                component "core/Current Measurement" IB {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7432, 8024
                ]

                component "core/Current Measurement" IC {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7496, 8120
                ]

                component gen_bus_join "Bus Join2" {
                    inputs = "3"
                }
                [
                    position = 7576, 7784
                ]

                component "core/Current Measurement" IA {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7368, 7928
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8352
                    rotation = right
                ]

                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8288
                    rotation = right
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7936, 8168
                    rotation = left
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8192
                        rotation = right
                    ]

                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8192
                        rotation = right
                    ]

                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8192
                        rotation = right
                    ]

                    port P1 {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port P2 {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port P3 {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port P4 {
                        position = bottom:1
                        kind = pe
                    }
                    [
                        position = 8136, 8272
                        rotation = left
                    ]

                    port P5 {
                        position = bottom:2
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    port P6 {
                        position = bottom:3
                        kind = pe
                    }
                    [
                        position = 8248, 8272
                        rotation = left
                    ]

                    connect R1.p_node P1 as Connection1
                    connect R1.n_node P4 as Connection3
                    connect R2.p_node P2 as Connection6
                    connect R2.n_node P5 as Connection4
                    connect R3.p_node P3 as Connection2
                    connect R3.n_node P6 as Connection5
                }
                [
                    position = 7336, 8232
                    size = 64, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7248, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7248, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7248, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7936, 8112
                    rotation = left
                ]

                port I {
                    position = top:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7648, 7784
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1466 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1467 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1468 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1473 pe
                [
                    position = 7352, 8432
                ]

                junction Junction1474 pe
                [
                    position = 7336, 8432
                ]

                junction Junction1475 pe
                [
                    position = 7568, 8432
                ]

                junction Junction1476 pe
                [
                    position = 7352, 8120
                ]

                junction Junction1477 pe
                [
                    position = 7336, 8024
                ]

                junction Junction1478 pe
                [
                    position = 7320, 7928
                ]

                connect A Junction1478 as Connection414
                connect B Junction1477 as Connection411
                connect "Bus Join1.in1" VB.out as Connection387
                connect "Bus Join1.in2" VC.out as Connection388
                connect "Bus Join2.out" I as Connection393
                connect "Bus Join2.in1" IB.out as Connection391
                connect "Bus Join2.in2" IC.out as Connection392
                connect C Junction1476 as Connection408
                connect IA.out "Bus Join2.in" as Connection390
                connect IA.n_node Junction1466 as Connection377
                connect Junction1466 a as Connection299
                connect Junction1467 IB.n_node as Connection375
                connect Junction1467 b as Connection301
                connect Junction1468 IC.n_node as Connection376
                connect Junction1468 c as Connection302
                connect Junction1473 Junction1474 as Connection404
                connect Junction1473 Junction1475 as Connection407
                connect Junction1474 res_for_meas.P5 as Connection403
                [
                    breakpoints = 7336, 8432; 7336, 8312
                ]
                connect Junction1475 Junction1421 as Connection417
                [
                    breakpoints = 7568, 8432; 7648, 8432
                ]
                connect Junction1475 VC.n_node as Connection406
                connect Junction1476 IC.p_node as Connection409
                connect Junction1477 IB.p_node as Connection412
                connect Junction1478 IA.p_node as Connection415
                connect V "Bus Join1.out" as Connection389
                connect V "Bus Join1.out" as Connection385
                connect VA.out "Bus Join1.in" as Connection386
                connect VA.n_node Junction1421 as Connection237
                connect VA.p_node Junction1466 as Connection240
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1467 as Connection243
                connect VC.p_node Junction1468 as Connection246
                connect res_for_meas.P6 Junction1473 as Connection402
                connect res_for_meas.P4 Junction1474 as Connection401
                [
                    breakpoints = 7320, 8312
                ]
                connect res_for_meas.P3 Junction1476 as Connection410
                connect res_for_meas.P2 Junction1477 as Connection413
                connect res_for_meas.P1 Junction1478 as Connection416
            }
            [
                position = 8144, 8104
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            port b {
                position = bottom:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 8432
                rotation = left
            ]

            port a {
                position = bottom:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 8472
                rotation = left
            ]

            port B {
                position = top:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 7976
                rotation = right
            ]

            port c {
                position = bottom:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8392
                rotation = left
            ]

            port A {
                position = top:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 7936
                rotation = right
            ]

            port C {
                position = top:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8016
                rotation = right
            ]

            connect A Meas1.A as Connection2624
            [
                breakpoints = 8128, 8064
            ]
            connect Brk.B Meas1.b as Connection2628
            connect Brk.c Meas2.C as Connection2630
            connect Brk.a Meas2.A as Connection2632
            connect C Meas1.C as Connection2626
            connect MID_Rly1.Brk_cmd Brk.control as Connection2604
            connect MID_Rly1.VABC_grid Meas1.V as Connection2637
            connect Meas1.B B as Connection2625
            connect Meas1.a Brk.A as Connection2627
            connect Meas1.c Brk.C as Connection2629
            connect Meas1.I MID_Rly1.IABC as Connection2621
            connect Meas2.B Brk.b as Connection2631
            connect Meas2.V MID_Rly1.VABC_load as Connection2636
            connect Meas2.a a as Connection2633
            connect Meas2.c c as Connection2635
            connect b Meas2.b as Connection2634
        }
        [
            position = 11096, 8408
            size = 80, 48
        ]

        component Subsystem F3_CB5 {
            layout = dynamic
            component Subsystem MID_Rly1 {
                layout = dynamic
                component src_constant Constant1 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 8056, 7928
                ]

                component gen_terminator Term3 {
                }
                [
                    position = 8440, 7928
                ]

                component gen_probe CB_state {
                }
                [
                    position = 7592, 8344
                    rotation = down
                ]

                component gen_delay Delay1 {
                    del_length = "int(3.0/60.0/Ts)"
                }
                [
                    position = 7880, 8344
                    rotation = down
                ]

                component src_constant Constant2 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 7776, 8344
                    rotation = right
                ]

                component gen_bus_split "Bus Split2" {
                    outputs = "3"
                }
                [
                    position = 7704, 8000
                    rotation = right
                ]

                component gen_terminator Term5 {
                }
                [
                    position = 8152, 8136
                    rotation = down
                    scale = -1, 1
                ]

                component gen_bus_split "Bus Split1" {
                    outputs = "3"
                }
                [
                    position = 7832, 8000
                    rotation = right
                ]

                component gen_bus_split "Bus Split3" {
                    outputs = "3"
                }
                [
                    position = 7576, 8000
                    rotation = right
                ]

                component gen_terminator Term4 {
                }
                [
                    position = 8152, 8200
                    rotation = down
                    scale = -1, 1
                ]

                component sys_signal_switch "Signal switch1" {
                    threshold = "0.5"
                }
                [
                    position = 7792, 8400
                    rotation = right
                ]

                component "core/ModBus Device" "ModBus Device1" {
                    configuration = "configF3_CB5"
                    execution_rate = "Ts"
                }
                [
                    position = 8272, 8000
                    size = 184, 184
                ]

                component Subsystem SEL_787 {
                    layout = dynamic
                    component src_scada_input "Control Panel Input1" {
                        execution_rate = "Ts"
                        max = "1"
                        min = "0"
                        unit = ""
                    }
                    [
                        position = 8136, 8192
                    ]

                    component gen_gain Gain4 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8384
                    ]

                    component tm_delay "Unit Delay4" {
                    }
                    [
                        position = 9496, 8056
                    ]

                    component gen_gain Gain6 {
                        gain = "16"
                    }
                    [
                        position = 7584, 8456
                        rotation = left
                    ]

                    component tm_delay "Unit Delay2" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7728, 8304
                        rotation = left
                    ]

                    component gen_sum Sum3 {
                        signs = "3"
                    }
                    [
                        position = 7640, 8624
                    ]

                    component gen_c_function "pf bitwise" {
                        in_terminal_dimensions_str = "exp_imp inherit;lag_lead inherit;"
                        in_terminal_properties = "inherit exp_imp;inherit lag_lead;"
                        no_feed_inputs = "[u\'\']"
                        no_feed_outputs = "[u\'\']"
                        out_terminal_dimensions_str = "pf_states inherit;"
                        out_terminal_properties = "uint pf_states;"
                        output_fnc = "/*Begin code section*/
pf_states=(uint)exp_imp<<1 | (uint)lag_lead<<2;
/*End code section*/"
                    }
                    [
                        position = 9200, 8416
                    ]

                    component gen_gain Gain1 {
                        gain = "2"
                    }
                    [
                        position = 7536, 8328
                        rotation = right
                    ]

                    component gen_sum Sum1 {
                        signs = "5"
                    }
                    [
                        position = 7648, 8384
                    ]

                    component gen_logic_op "Logical operator1" {
                        inputs = "4"
                        operator = "OR"
                    }
                    [
                        position = 8720, 8128
                        rotation = left
                    ]

                    component gen_gain Gain5 {
                        gain = "8"
                    }
                    [
                        position = 7512, 8432
                        rotation = left
                    ]

                    component gen_gain Gain7 {
                        gain = "2"
                    }
                    [
                        position = 7512, 8624
                    ]

                    component gen_c_function bitwise_faults {
                        in_terminal_dimensions_str = "Status inherit;R25 inherit;R27 inherit;R50 inherit;R51 inherit;R59 inherit;Reset inherit;"
                        in_terminal_properties = "inherit Status;inherit R25;inherit R27;inherit R50;inherit R51;inherit R59;inherit Reset;"
                        no_feed_inputs = "[]"
                        no_feed_outputs = "[]"
                        out_terminal_dimensions_str = "fault_status inherit;"
                        out_terminal_properties = "uint fault_status;"
                        output_fnc = "/*Begin code section*/
fault_status= (uint)Status<<1 | (uint)R25<<2 | (uint)R27<<3 | (uint)R50<<4 | (uint)R51<<5 | (uint)R59<<6 | (uint)Reset<<7;
/*End code section*/"
                    }
                    [
                        position = 9200, 8272
                    ]

                    component gen_logic_op not {
                        operator = "NOT"
                    }
                    [
                        position = 7440, 8624
                    ]

                    component gen_bus_join "Bus Join1" {
                        inputs = "25"
                    }
                    [
                        position = 7928, 8080
                    ]

                    component tm_delay "Unit Delay5" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7840, 8392
                        rotation = left
                    ]

                    component gen_gain Gain8 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8688
                    ]

                    component gen_gain normalize {
                        gain = "np.sqrt(3.0)/13800.0"
                    }
                    [
                        position = 7312, 7744
                    ]

                    component gen_probe P {
                    }
                    [
                        position = 7344, 7584
                    ]

                    component gen_probe Q {
                    }
                    [
                        position = 7344, 7632
                    ]

                    component Subsystem R50512761 {
                        layout = dynamic
                        component src_constant Ts {
                            execution_rate = "Ts"
                            value = "Ts"
                        }
                        [
                            position = 7696, 7712
                            rotation = right
                        ]

                        component gen_c_function Relays {
                            global_variables = "real R50;real R51;real R27;real R59;real n50;real n51;real n59;real n27;real t59;real t50;real t51;real bool_27;real t27;real bool_59;uint i;real bool_51;real bool_50;real A;real B;real P;real Ipu50;real Ipu51;real CT_tap;real ratio[3];real M[3];real t51s[3];real Iinst[3];real Irms[3];real Vrms[3];"
                            in_terminal_dimensions_str = "enable inherit;Ts inherit;Reset inherit;IinstA inherit;IinstB inherit;IinstC inherit;IrmsA inherit;IrmsB inherit;IrmsC inherit;VrmsA inherit;VrmsB inherit;VrmsC inherit;VRMSLN inherit;CT_p inherit;IOC_pickup inherit;IOC_tripDelay inherit;TOC_pickup inherit;curveType inherit;timeDial inherit;UV_pickup inherit;OV_pickup inherit;UVOV_tripDelay inherit;"
                            in_terminal_properties = "real enable;inherit Ts;inherit Reset;inherit IinstA;inherit IinstB;inherit IinstC;inherit IrmsA;inherit IrmsB;inherit IrmsC;inherit VrmsA;inherit VrmsB;inherit VrmsC;inherit VRMSLN;inherit CT_p;inherit IOC_pickup;inherit IOC_tripDelay;inherit TOC_pickup;inherit curveType;inherit timeDial;inherit UV_pickup;inherit OV_pickup;inherit UVOV_tripDelay;"
                            init_fnc = "/*Begin code section*/
R50=0;
R51=0;
R27=0;
R59=0;

n50=0;
n51=0;
n59=0;
n27=0;

CT_tap = 1.0;

A = 5.67;
B = 0.0352;
P = 2.0;

t59 = 0;
t50 = 0;
t51 = 0;
t27 = 0;

bool_27 = 0;
bool_59 = 0;
bool_51 = 0;
bool_50 = 0;
/*End code section*/"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "trip50 inherit;trip51 inherit;trip27 inherit;trip59 inherit;"
                            out_terminal_properties = "real trip50;real trip51;real trip27;real trip59;"
                            output_fnc = "/*Begin code section*/
Iinst[0] = fabs(IinstA);
Iinst[1] = fabs(IinstB);
Iinst[2] = fabs(IinstC);

Irms[0] = IrmsA;
Irms[1] = IrmsB;
Irms[2] = IrmsC;

Vrms[0] = VrmsA;
Vrms[1] = VrmsB;
Vrms[2] = VrmsC;

if (Reset==1) {
    R50=0;
    R51=0;
    R59=0;
    R27=0;
    bool_50 = 0.0;
}

for(i=0; i<3; i++){
    Iinst[i] = Iinst[i]*5.0/CT_p;
    Irms[i] = Irms[i]*5.0/CT_p;
}

if(curveType==1){
    A = 0.0104;
    B = 0.0226;
    P = 0.02;
}
else if(curveType==2){
    A = 5.95;
    B = 0.180;
    P = 2.0;
}
else if(curveType==3){
    A = 3.88;
    B = 0.0923;
    P = 2.0;
}
else{
    A = 5.67;
    B = 0.0352;
    P = 2.0;
}

if (!((R50 == 1) || (R51 == 1))&&(enable==1)){
    
    if((UV_pickup>1)||(UV_pickup==0)){
        UV_pickup = 0.9;
    }
    if((OV_pickup<1)||(OV_pickup==0)){
        OV_pickup = 1.1;
    }
    
    Ipu50 = IOC_pickup*CT_tap*sqrt(2.0);
    Ipu51 = TOC_pickup*CT_tap;
    
    for(i=0; i<3; i++){
        ratio[i] = Vrms[i]/VRMSLN;
        M[i] = Irms[i]/Ipu51;
        if(M[i]<=1.0){
            t51s[i] = 1e6;
        }
        else{
            t51s[i] = timeDial*(B+(A/(pow(M[i],P)-1)));
        }
    }
    
    t27 = 0.004167 + UVOV_tripDelay;
    t50 = 0.004167 + IOC_tripDelay;
    t59 = 0.004167 + UVOV_tripDelay;
    
    if((t51s[0]<=t51s[1])&&(t51s[0]<=t51s[2])){
        t51 = t51s[0];
    }
    else if(t51s[1]<=t51s[2]){
        t51 = t51s[1];
    }
    else{
        t51 = t51s[2];
    }
    
    for(i=0; i<3; i++){
        if(ratio[i]<=UV_pickup){
            bool_27 = 1;
            break;
        }
        else{
            bool_27 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Irms[i]>Ipu51){
            bool_51 = 1;
            break;
        }
        else{
            bool_51 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Iinst[i]>Ipu50){
            bool_50 = 1;
            break;
        }
    }
    for(i=0; i<3; i++){
        if(ratio[i]>=OV_pickup){
            bool_59 = 1;
            break;
        }
        else{
            bool_59 = 0;
        }
    }
    //bool_27 = ((ratio[0]<=UV_pickup)+(ratio[1]<=UV_pickup)+(ratio[2]<=UV_pickup))>0;
    //bool_59 = ((ratio[0]>=OV_pickup)+(ratio[1]>=OV_pickup)+(ratio[2]>=OV_pickup))>0;
    //bool_50 = ((Iinst[0]>Ipu50)+(Iinst[1]>Ipu50)+(Iinst[2]>Ipu50))>0;
    //bool_51 = ((Irms[0]>Ipu51)+(Irms[1]>Ipu51)+(Irms[2]>Ipu51))>0;
    
    n50 *= bool_50;
    n51 *= bool_51;
    n27 *= bool_27;
    n59 *= bool_59;

    n50 += bool_50  * Ts;
    n51 += bool_51  * Ts;
    n27 += bool_27  * Ts;
    n59 += bool_59  * Ts;

    if(n50 > t50)
        R50 = 1;
    else
        R50 = 0;

    if(n51 > t51)
        R51 = 1;
    else
        R51 = 0;

    if(n27 > t27)
        R27 = 1;
    else
        R27 = 0;

    if(n59 > t59)
        R59 = 1;
    else
        R59 = 0;
}

trip50 = R50;
trip51 = R51;
trip27 = R27;
trip59 = R59;
/*End code section*/"
                        }
                        [
                            position = 7784, 8008
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "10"
                        }
                        [
                            position = 7560, 8248
                            rotation = left
                        ]

                        port trip_50 {
                            label = "trip_50"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7848
                        ]

                        port trip_51 {
                            label = "trip_51"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7952
                        ]

                        port trip_59 {
                            label = "trip_59"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8160
                        ]

                        port trip_27 {
                            label = "trip_27"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8056
                        ]

                        port relay_param {
                            label = "Relay Param"
                            position = left:12
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7560, 8328
                            rotation = left
                        ]

                        port Irms_c {
                            label = "Irms_c"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7368, 7752
                            rotation = right
                        ]

                        port Irms_a {
                            label = "Irms_a"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7472, 7752
                            rotation = right
                        ]

                        port Enable {
                            label = "Enable"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7736, 7752
                            rotation = right
                        ]

                        port Iinst_a {
                            label = "Iinst_a"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7608, 7712
                            rotation = right
                        ]

                        port Irms_b {
                            label = "Irms_b"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7424, 7712
                            rotation = right
                        ]

                        port Iinst_b {
                            label = "Iinst_b"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7568, 7752
                            rotation = right
                        ]

                        port Reset {
                            label = "Reset"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7656, 7752
                            rotation = right
                        ]

                        port Iinst_c {
                            label = "Iinst_c"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7520, 7712
                            rotation = right
                        ]

                        port Vrms_b {
                            label = "Vrms_b"
                            position = left:10
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7256, 7752
                            rotation = right
                        ]

                        port Vrms_c {
                            label = "Vrms_c"
                            position = left:11
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7200, 7712
                            rotation = right
                        ]

                        port Vrms_a {
                            label = "Vrms_a"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7312, 7712
                            rotation = right
                        ]

                        comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus split:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                        [
                            position = 7728, 8224
                        ]

                        connect "Bus Split1.out" Relays.VRMSLN as Connection46
                        connect "Bus Split1.out2" Relays.IOC_pickup as Connection44
                        connect "Bus Split1.out1" Relays.CT_p as Connection45
                        connect "Bus Split1.out5" Relays.curveType as Connection41
                        connect "Bus Split1.out3" Relays.IOC_tripDelay as Connection43
                        connect "Bus Split1.out8" Relays.OV_pickup as Connection38
                        connect "Bus Split1.out7" Relays.UV_pickup as Connection39
                        connect "Bus Split1.out6" Relays.timeDial as Connection40
                        connect "Bus Split1.out4" Relays.TOC_pickup as Connection42
                        connect "Bus Split1.out9" Relays.UVOV_tripDelay as Connection37
                        connect "Bus Split1.in" relay_param as Connection36
                        connect Enable Relays.enable as Connection47
                        connect Iinst_a Relays.IinstA as Connection50
                        connect Iinst_b Relays.IinstB as Connection51
                        connect Iinst_c Relays.IinstC as Connection52
                        connect Irms_a Relays.IrmsA as Connection53
                        connect Irms_b Relays.IrmsB as Connection54
                        connect Irms_c Relays.IrmsC as Connection55
                        connect Reset Relays.Reset as Connection49
                        connect Ts.out Relays.Ts as Connection48
                        connect Vrms_a Relays.VrmsA as Connection56
                        connect Vrms_b Relays.VrmsB as Connection57
                        connect Vrms_c Relays.VrmsC as Connection58
                        connect trip_27 Relays.trip27 as Connection77
                        connect trip_50 Relays.trip50 as Connection76
                        connect trip_51 Relays.trip51 as Connection75
                        connect trip_59 Relays.trip59 as Connection78
                    }
                    [
                        position = 8424, 8328
                        size = 144, 304
                    ]

                    component Subsystem "CALC FROM MEASUREMENTS" {
                        layout = dynamic
                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7064, 7984
                        ]

                        component gen_terminator Termination4 {
                        }
                        [
                            position = 7088, 9072
                        ]

                        component gen_terminator Termination11 {
                        }
                        [
                            position = 6864, 9256
                        ]

                        component gen_terminator Termination5 {
                        }
                        [
                            position = 7304, 8488
                        ]

                        component gen_gain Gain3 {
                            gain = "10"
                        }
                        [
                            position = 7064, 7792
                        ]

                        component gen_gain Gain9 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7032, 9120
                        ]

                        component "core/Three phase PLL" "Three phase PLL1" {
                        }
                        [
                            position = 7224, 8392
                        ]

                        component "core/Three phase PLL" "Three phase PLL2" {
                        }
                        [
                            position = 6760, 9408
                        ]

                        component gen_terminator Termination8 {
                        }
                        [
                            position = 7336, 8312
                        ]

                        component msr_phasor_3ph "Three Phase Phasor2" {
                        }
                        [
                            position = 6968, 8560
                        ]

                        component gen_terminator Termination7 {
                        }
                        [
                            position = 7336, 8256
                        ]

                        component gen_gain Gain1 {
                            gain = "10"
                        }
                        [
                            position = 7000, 7592
                        ]

                        component msr_phasor_3ph "Three Phase Phasor1" {
                        }
                        [
                            position = 6904, 7752
                        ]

                        component gen_gain Gain5 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8600
                        ]

                        component gen_gain Gain10 {
                            gain = "100.0"
                        }
                        [
                            position = 7064, 9168
                        ]

                        component gen_terminator Termination13 {
                        }
                        [
                            position = 6864, 9368
                        ]

                        component gen_gain Gain7 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8824
                        ]

                        component gen_gain Gain11 {
                            gain = "10.0"
                        }
                        [
                            position = 7432, 8400
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7064, 7920
                        ]

                        component gen_gain Gain4 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8504
                        ]

                        component gen_terminator Termination9 {
                        }
                        [
                            position = 7336, 8368
                        ]

                        component gen_rms_value "RMS value3" {
                        }
                        [
                            position = 7064, 8048
                        ]

                        component gen_gain Gain6 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8704
                        ]

                        component gen_gain Gain2 {
                            gain = "10"
                        }
                        [
                            position = 7048, 7696
                        ]

                        component gen_terminator Termination12 {
                        }
                        [
                            position = 6864, 9312
                        ]

                        component gen_rms_value "RMS value5" {
                        }
                        [
                            position = 7064, 8192
                        ]

                        component gen_terminator Termination10 {
                        }
                        [
                            position = 6856, 9472
                        ]

                        component gen_PQ_transform "PQ Power Meter1" {
                        }
                        [
                            position = 6936, 8952
                        ]

                        component gen_gain Gain8 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8976
                        ]

                        component gen_terminator Termination3 {
                        }
                        [
                            position = 7048, 9016
                        ]

                        component gen_rms_value "RMS value4" {
                        }
                        [
                            position = 7064, 8128
                        ]

                        component gen_rms_value "RMS value6" {
                        }
                        [
                            position = 7064, 8256
                        ]

                        component Subsystem Subsystem1 {
                            layout = dynamic
                            component gen_abs Abs2 {
                            }
                            [
                                position = 7720, 7896
                            ]

                            component src_constant Constant2 {
                                execution_rate = "Ts"
                                value = "[0]"
                            }
                            [
                                position = 7752, 8048
                            ]

                            component gen_logic_op "Logical operator1" {
                            }
                            [
                                position = 7976, 7856
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7800
                            ]

                            component src_constant Constant1 {
                                execution_rate = "Ts"
                            }
                            [
                                position = 7768, 7856
                            ]

                            component gen_abs Abs1 {
                            }
                            [
                                position = 7720, 7792
                            ]

                            component gen_rel_op "Relational operator4" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8096
                            ]

                            component gen_rel_op "Relational operator3" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8000
                            ]

                            component gen_rel_op "Relational operator2" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7904
                            ]

                            component Subsystem Subsystem3 {
                                layout = dynamic
                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8008
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8032, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 Out1 as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect "Multiport signal switch1.ctrl" u as Connection4
                                connect "Unit Delay1.out" Junction1 as Connection5
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection6
                            }
                            [
                                position = 8152, 8104
                                size = 112, 56
                            ]

                            component Subsystem Subsystem2 {
                                layout = dynamic
                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7576, 8032
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7648, 8056
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8072, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 "Unit Delay1.out" as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect Out1 Junction1 as Connection4
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection5
                                connect u "Multiport signal switch1.ctrl" as Connection6
                            }
                            [
                                position = 8152, 8008
                                size = 112, 56
                            ]

                            port P {
                                label = "P"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 7992
                            ]

                            port Q {
                                label = "Q"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 8088
                            ]

                            port "Lagging or Leading" {
                                label = "Lag or Lead"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8104
                            ]

                            port "Exporting or Importing" {
                                label = "export or import"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8008
                            ]

                            junction Junction1 sp
                            [
                                position = 7560, 8088
                            ]

                            junction Junction4 sp
                            [
                                position = 7592, 7992
                            ]

                            junction Junction11 sp
                            [
                                position = 7808, 7856
                            ]

                            junction Junction13 sp
                            [
                                position = 7824, 8048
                            ]

                            junction Junction14 sp
                            [
                                position = 8040, 8016
                            ]

                            connect Abs1.in Junction1 as Connection1
                            connect Abs1.out "Relational operator1.in" as Connection2
                            connect Abs2.out "Relational operator2.in" as Connection3
                            connect Constant1.out Junction11 as Connection8
                            connect Constant2.out Junction13 as Connection9
                            connect "Exporting or Importing" Subsystem2.Out1 as Connection10
                            connect Junction11 "Relational operator1.in1" as Connection12
                            connect Junction13 "Relational operator3.in1" as Connection14
                            connect Junction14 Subsystem3.E as Connection45
                            connect Junction4 Abs2.in as Connection39
                            connect Junction4 P as Connection18
                            connect "Lagging or Leading" Subsystem3.Out1 as Connection22
                            connect "Logical operator1.out" Junction14 as Connection44
                            connect Q Junction1 as Connection26
                            connect "Relational operator1.out" "Logical operator1.in" as Connection27
                            connect "Relational operator2.in1" Junction11 as Connection28
                            connect "Relational operator2.out" "Logical operator1.in1" as Connection29
                            connect "Relational operator3.in" Junction4 as Connection42
                            connect "Relational operator3.out" Subsystem2.u as Connection31
                            connect "Relational operator4.in" Junction1 as Connection40
                            connect "Relational operator4.in1" Junction13 as Connection32
                            connect "Relational operator4.out" Subsystem3.u as Connection34
                            connect Subsystem2.E Junction14 as Connection46
                        }
                        [
                            position = 7240, 8912
                            size = 112, 80
                        ]

                        port Ia {
                            label = "Ia"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7920
                        ]

                        port Ia_rms {
                            label = "Ia_rms"
                            position = right:7
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7920
                        ]

                        port Ib {
                            label = "Ib"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7984
                        ]

                        port Ib_rms {
                            label = "Ib_rms"
                            position = right:8
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7984
                        ]

                        port Ic {
                            label = "Ic"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8048
                        ]

                        port Ic_rms {
                            label = "Ic_rms"
                            position = right:9
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8048
                        ]

                        port Va {
                            label = "Va"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8128
                        ]

                        port Va_rms {
                            label = "Va_rms"
                            position = right:10
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8128
                        ]

                        port Vb {
                            label = "Vb"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8192
                        ]

                        port Vc {
                            label = "Vc"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8256
                        ]

                        port Vb_rms {
                            label = "Vb_rms"
                            position = right:11
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8192
                        ]

                        port Vc_rms {
                            label = "Vc_rms"
                            position = right:12
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8256
                        ]

                        port P {
                            label = "P"
                            position = right:19
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7160, 8824
                        ]

                        port Q {
                            label = "Q"
                            position = right:20
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7168, 8976
                        ]

                        port S {
                            label = "S"
                            position = right:21
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7112, 9120
                        ]

                        port pf {
                            label = "pf"
                            position = right:22
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7144, 9168
                        ]

                        port Ia_mag {
                            label = "Ia_mag"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7536
                        ]

                        port Ia_phase {
                            label = "Ia_phase"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7592
                        ]

                        port Ib_mag {
                            label = "Ib_mag"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7640
                        ]

                        port Ib_phase {
                            label = "Ib_phase"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7696
                        ]

                        port Ic_mag {
                            label = "Ic_mag"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7744
                        ]

                        port Ic_phase {
                            label = "Ic_phase"
                            position = right:6
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7792
                        ]

                        port Va_mag {
                            label = "Va_mag"
                            position = right:13
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8456
                        ]

                        port Va_phase {
                            label = "Va_phase"
                            position = right:14
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8504
                        ]

                        port Vb_mag {
                            label = "Vb_mag"
                            position = right:15
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8552
                        ]

                        port Vb_phase {
                            label = "Vb_phase"
                            position = right:16
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8600
                        ]

                        port Vc_mag {
                            label = "Vc_mag"
                            position = right:17
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8648
                        ]

                        port Vc_phase {
                            label = "Vc_phase"
                            position = right:18
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8704
                        ]

                        port "Export Import" {
                            label = "Export Import"
                            position = right:28
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7352, 8928
                        ]

                        port "Lag Lead" {
                            label = "Lag Lead"
                            position = right:27
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7416, 8888
                        ]

                        port bus_freq {
                            label = "Bus_freq"
                            position = right:23
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7512, 8400
                        ]

                        port bus_wt {
                            label = "Bus_wt"
                            position = right:24
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7440, 8456
                        ]

                        port Vline_a {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9352
                        ]

                        port Vline_b {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9408
                        ]

                        port Vline_c {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9464
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = right:25
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9416
                        ]

                        port line_wt {
                            label = "Line_wt"
                            position = right:26
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9464
                        ]

                        junction Junction23 sp
                        [
                            position = 6752, 8128
                        ]

                        junction Junction24 sp
                        [
                            position = 6768, 8192
                        ]

                        junction Junction25 sp
                        [
                            position = 6784, 8256
                        ]

                        junction Junction34 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction35 sp
                        [
                            position = 6656, 7920
                        ]

                        junction Junction37 sp
                        [
                            position = 6672, 7984
                        ]

                        junction Junction39 sp
                        [
                            position = 6752, 8360
                        ]

                        junction Junction41 sp
                        [
                            position = 6768, 8392
                        ]

                        junction Junction42 sp
                        [
                            position = 6784, 8424
                        ]

                        junction Junction44 sp
                        [
                            position = 6768, 8568
                        ]

                        junction Junction45 sp
                        [
                            position = 6784, 8584
                        ]

                        junction Junction46 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction48 sp
                        [
                            position = 6752, 8536
                        ]

                        junction Junction49 sp
                        [
                            position = 6928, 8536
                        ]

                        junction Junction50 sp
                        [
                            position = 7056, 8928
                        ]

                        junction Junction51 sp
                        [
                            position = 7056, 8888
                        ]

                        junction Junction52 sp
                        [
                            position = 6752, 8128
                        ]

                        junction Junction53 sp
                        [
                            position = 6656, 7920
                        ]

                        connect "Export Import" "Subsystem1.Exporting or Importing" as Connection116
                        connect Gain1.out Ia_phase as Connection87
                        connect Gain10.in "PQ Power Meter1.k_factor" as Connection105
                        connect Gain11.in "Three phase PLL1.freq" as Connection107
                        connect Gain2.out Ib_phase as Connection89
                        connect Gain3.in "Three Phase Phasor1.phase3" as Connection91
                        connect Gain4.in "Three Phase Phasor2.phase1" as Connection92
                        connect Gain4.out Va_phase as Connection93
                        connect Gain5.out Vb_phase as Connection95
                        connect Gain6.in "Three Phase Phasor2.phase3" as Connection97
                        connect Gain8.out Q as Connection101
                        connect Gain9.in "PQ Power Meter1.apparent" as Connection103
                        connect Ia Junction35 as Connection2
                        connect Ia_mag "Three Phase Phasor1.out1" as Connection3
                        connect Ia_rms "RMS value1.out" as Connection4
                        connect Ib Junction37 as Connection5
                        connect Ib_rms "RMS value2.out" as Connection6
                        connect Ic Junction34 as Connection7
                        connect Ic_phase Gain3.out as Connection90
                        connect Ic_rms "RMS value3.out" as Connection9
                        connect Junction23 Junction39 as Connection10
                        connect Junction23 Va as Connection11
                        connect Junction24 Junction41 as Connection12
                        connect Junction24 "RMS value5.in" as Connection13
                        connect Junction24 Vb as Connection14
                        connect Junction25 Junction42 as Connection15
                        connect Junction25 "RMS value6.in" as Connection16
                        connect Junction37 "RMS value2.in" as Connection18
                        connect Junction39 "Three phase PLL1.va" as Connection20
                        connect Junction41 "Three phase PLL1.vb" as Connection21
                        connect Junction42 "Three phase PLL1.vc" as Connection22
                        connect Junction44 Junction41 as Connection23
                        connect Junction45 Junction42 as Connection24
                        connect Junction46 Junction34 as Connection25
                        connect Junction48 Junction39 as Connection27
                        connect Junction49 Junction48 as Connection28
                        connect Junction50 Gain8.in as Connection111
                        [
                            breakpoints = 7056, 8928
                        ]
                        connect Junction51 Gain7.in as Connection114
                        [
                            breakpoints = 7056, 8888
                        ]
                        connect Junction52 Junction23 as Connection119
                        connect Junction53 Junction35 as Connection122
                        connect P Gain7.out as Connection98
                        connect "PQ Power Meter1.ia" Junction35 as Connection30
                        connect "PQ Power Meter1.ib" Junction37 as Connection31
                        connect "PQ Power Meter1.vb" Junction44 as Connection33
                        connect "PQ Power Meter1.vc" Junction45 as Connection34
                        connect "PQ Power Meter1.ic" Junction46 as Connection35
                        connect "PQ Power Meter1.va" Junction48 as Connection36
                        connect "PQ Power Meter1.Qdc" Junction50 as Connection110
                        connect "PQ Power Meter1.Pdc" Junction51 as Connection113
                        connect "RMS value1.in" Junction53 as Connection121
                        connect "RMS value3.in" Junction34 as Connection38
                        connect "RMS value4.in" Junction52 as Connection118
                        connect S Gain9.out as Connection102
                        connect Subsystem1.Q Junction50 as Connection112
                        connect Subsystem1.P Junction51 as Connection115
                        connect "Subsystem1.Lagging or Leading" "Lag Lead" as Connection117
                        connect Termination10.in "Three phase PLL2.sin_theta" as Connection45
                        connect Termination11.in "Three phase PLL2.d_axis" as Connection46
                        connect Termination12.in "Three phase PLL2.q_axis" as Connection47
                        connect Termination13.in "Three phase PLL2.zero_axis" as Connection48
                        connect Termination3.in "PQ Power Meter1.Pac" as Connection50
                        connect Termination4.in "PQ Power Meter1.Qac" as Connection51
                        connect Termination5.in "Three phase PLL1.sin_theta" as Connection52
                        connect Termination7.in "Three phase PLL1.d_axis" as Connection53
                        connect Termination8.in "Three phase PLL1.q_axis" as Connection54
                        connect Termination9.in "Three phase PLL1.zero_axis" as Connection55
                        connect "Three Phase Phasor1.phase1" Gain1.in as Connection86
                        connect "Three Phase Phasor1.phase2" Gain2.in as Connection88
                        connect "Three Phase Phasor1.out2" Ib_mag as Connection57
                        connect "Three Phase Phasor1.out3" Ic_mag as Connection59
                        connect "Three Phase Phasor1.in2" Junction37 as Connection60
                        connect "Three Phase Phasor1.in3" Junction46 as Connection61
                        connect "Three Phase Phasor1.in_ref" Junction52 as Connection120
                        connect "Three Phase Phasor1.in1" Junction53 as Connection123
                        connect "Three Phase Phasor2.phase2" Gain5.in as Connection94
                        connect "Three Phase Phasor2.in2" Junction44 as Connection64
                        connect "Three Phase Phasor2.in3" Junction45 as Connection65
                        connect "Three Phase Phasor2.in_ref" Junction49 as Connection66
                        connect "Three Phase Phasor2.in1" Junction49 as Connection67
                        connect "Three Phase Phasor2.out1" Va_mag as Connection68
                        connect "Three Phase Phasor2.out2" Vb_mag as Connection70
                        connect "Three Phase Phasor2.out3" Vc_mag as Connection72
                        connect "Three phase PLL2.freq" line_freq as Connection73
                        connect Va_rms "RMS value4.out" as Connection74
                        connect Vb_rms "RMS value5.out" as Connection75
                        connect Vc Junction25 as Connection76
                        connect Vc_phase Gain6.out as Connection96
                        connect Vc_rms "RMS value6.out" as Connection78
                        connect Vline_a "Three phase PLL2.va" as Connection79
                        connect Vline_b "Three phase PLL2.vb" as Connection80
                        connect Vline_c "Three phase PLL2.vc" as Connection81
                        connect bus_freq Gain11.out as Connection106
                        connect bus_wt "Three phase PLL1.theta" as Connection83
                        connect line_wt "Three phase PLL2.theta" as Connection84
                        connect pf Gain10.out as Connection104
                    }
                    [
                        position = 6992, 8104
                        size = 112, 664
                    ]

                    component Subsystem Relay_Param {
                        layout = dynamic
                        component src_constant VRMSLL {
                            execution_rate = "Ts"
                            value = "VRMSLL"
                        }
                        [
                            position = 8088, 7592
                        ]

                        component src_constant dF_threshold {
                            execution_rate = "Ts"
                            value = "dF_threshold"
                        }
                        [
                            position = 8088, 7760
                        ]

                        component src_constant 27P_59P_tripDelay {
                            execution_rate = "Ts"
                            value = "R27P_R59P_tripDelay"
                        }
                        [
                            position = 8088, 7872
                        ]

                        component src_constant dV_threshold {
                            execution_rate = "Ts"
                            value = "dV_threshold"
                        }
                        [
                            position = 8088, 7648
                        ]

                        component src_constant Initial_status {
                            execution_rate = "Ts"
                            value = "Initial_status"
                        }
                        [
                            position = 8088, 7992
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "3"
                        }
                        [
                            position = 8104, 8192
                            rotation = down
                            scale = -1, -1
                        ]

                        component gen_bus_join "Bus Join1" {
                            inputs = "4"
                        }
                        [
                            position = 8296, 7800
                            rotation = right
                        ]

                        component src_constant angle_threshold {
                            execution_rate = "Ts"
                            value = "angle_threshold"
                        }
                        [
                            position = 8088, 7704
                        ]

                        component src_constant CT_primary {
                            execution_rate = "Ts"
                            value = "CT_primary"
                        }
                        [
                            position = 8088, 7928
                        ]

                        component sys_signal_switch "Signal switch1" {
                            threshold = "0.5"
                        }
                        [
                            position = 9104, 7808
                            scale = 1, -1
                        ]

                        component Subsystem Reset {
                            layout = dynamic
                            component gen_logic_op or {
                                operator = "OR"
                            }
                            [
                                position = 8152, 8192
                            ]

                            component Subsystem detect_change {
                                layout = dynamic
                                component gen_rel_op "Relational operator1" {
                                    relational_op = "!="
                                }
                                [
                                    position = 8240, 8192
                                ]

                                component tm_delay "Unit Delay1" {
                                }
                                [
                                    position = 8144, 8200
                                ]

                                port Out1 {
                                    label = "Out"
                                    position = right:1
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8304, 8192
                                ]

                                port In3 {
                                    label = "In"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8032, 8200
                                ]

                                junction Junction1 sp
                                [
                                    position = 8080, 8200
                                ]

                                connect Junction1 In3 as Connection1
                                connect "Relational operator1.in" Junction1 as Connection2
                                connect "Relational operator1.out" Out1 as Connection3
                                connect "Unit Delay1.in" Junction1 as Connection4
                                connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                            }
                            [
                                position = 8248, 8192
                                size = 48, 48
                            ]

                            port reset {
                                label = "Reset"
                                position = right:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8336, 8152
                            ]

                            port op_mode {
                                label = "Op_mode"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8344, 8240
                            ]

                            port "Reset in" {
                                label = "Reset in"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8168
                            ]

                            port "op_mode in" {
                                label = "op_mode in"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8224
                            ]

                            junction Junction1 sp
                            [
                                position = 8096, 8224
                            ]

                            connect Junction1 "op_mode in" as Connection1
                            connect detect_change.Out1 reset as Connection5
                            connect op_mode Junction1 as Connection6
                            connect or.in1 Junction1 as Connection3
                            connect or.in "Reset in" as Connection2
                            connect or.out detect_change.In3 as Connection4
                        }
                        [
                            position = 8280, 8192
                            rotation = down
                            scale = -1, -1
                            size = 104, 104
                        ]

                        component Subsystem Grid_Tied_param {
                            layout = dynamic
                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup1"
                            }
                            [
                                position = 8416, 7840
                                rotation = right
                            ]

                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7904
                                rotation = right
                            ]

                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial1"
                            }
                            [
                                position = 8200, 7840
                                rotation = right
                            ]

                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup1"
                            }
                            [
                                position = 8312, 7840
                                rotation = right
                            ]

                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay1"
                            }
                            [
                                position = 8352, 7880
                                rotation = right
                            ]

                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType1"
                            }
                            [
                                position = 8240, 7880
                                rotation = right
                            ]

                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup1"
                            }
                            [
                                position = 8120, 7880
                                rotation = right
                            ]

                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8552, 8040
                            ]

                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup1"
                            }
                            [
                                position = 8080, 7840
                                rotation = right
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7840
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7880
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7880
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8704, 8040
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8776, 7936
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 8872, 7728
                            size = 216, 104
                        ]

                        component Subsystem Islanded_param {
                            layout = dynamic
                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup2"
                            }
                            [
                                position = 8400, 7856
                                rotation = right
                            ]

                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType2"
                            }
                            [
                                position = 8240, 7888
                                rotation = right
                            ]

                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay2"
                            }
                            [
                                position = 8352, 7888
                                rotation = right
                            ]

                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup2"
                            }
                            [
                                position = 8296, 7856
                                rotation = right
                            ]

                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup2"
                            }
                            [
                                position = 8120, 7888
                                rotation = right
                            ]

                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial2"
                            }
                            [
                                position = 8192, 7856
                                rotation = right
                            ]

                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup2"
                            }
                            [
                                position = 8072, 7856
                                rotation = right
                            ]

                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8544, 8048
                            ]

                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7920
                                rotation = right
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7856
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7888
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7888
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8696, 8048
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8744, 7928
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 9224, 8040
                            size = 216, 104
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8160
                        ]

                        port reset {
                            label = "reset"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8224
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8360, 7856
                        ]

                        port Initial_condition {
                            label = "Initial_condition"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8192, 7992
                        ]

                        port from_Modbus {
                            label = "from_Modbus"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7992, 8192
                        ]

                        port relay_param {
                            label = "relay_param"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9200, 7808
                        ]

                        tag From1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7696
                        ]

                        tag From3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7760
                        ]

                        tag Goto1 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8232, 8280
                        ]

                        tag From2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8616, 7728
                        ]

                        tag Goto4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8208, 7544
                        ]

                        tag Goto2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7872
                        ]

                        tag Goto3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7928
                        ]

                        tag From4 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 9104, 7904
                            rotation = right
                            scale = 1, -1
                        ]

                        junction Junction1 sp
                        [
                            position = 8152, 7592
                        ]

                        junction Junction2 sp
                        [
                            position = 8736, 7696
                        ]

                        junction Junction3 sp
                        [
                            position = 8712, 7728
                        ]

                        junction Junction4 sp
                        [
                            position = 8688, 7760
                        ]

                        connect "Bus Join1.in" Junction1 as Connection54
                        connect "Bus Join1.in2" angle_threshold.out as Connection48
                        connect "Bus Join1.in3" dF_threshold.out as Connection49
                        connect "Bus Join1.in1" dV_threshold.out as Connection47
                        connect "Bus Split1.out1" "Reset.Reset in" as Connection75
                        connect "Bus Split1.in" from_Modbus as Connection42
                        connect From1 Junction2 as Connection60
                        connect From2 Junction3 as Connection63
                        connect From3 Junction4 as Connection66
                        connect From4 "Signal switch1.in2" as Connection71
                        connect Goto1 "Bus Split1.out2" as Connection45
                        connect Goto2 27P_59P_tripDelay.out as Connection51
                        connect Goto3 CT_primary.out as Connection52
                        connect Goto4 Junction1 as Connection56
                        connect Initial_condition Initial_status.out as Connection53
                        connect Islanded_param.VRMSLL Junction2 as Connection62
                        connect Islanded_param.27P_59P_tripDelay Junction3 as Connection65
                        connect Islanded_param.CT_primary Junction4 as Connection68
                        connect Junction1 VRMSLL.out as Connection55
                        connect Junction2 Grid_Tied_param.VRMSLL as Connection61
                        connect Junction3 Grid_Tied_param.27P_59P_tripDelay as Connection64
                        connect Junction4 Grid_Tied_param.CT_primary as Connection67
                        connect "Reset.op_mode in" "Bus Split1.out" as Connection76
                        connect Reset.op_mode op_mode as Connection43
                        connect Reset.reset reset as Connection44
                        connect "Signal switch1.in1" Grid_Tied_param.relay_param as Connection73
                        connect "Signal switch1.in" Islanded_param.relay_param as Connection72
                        connect relay_param "Signal switch1.out" as Connection74
                        connect relay_paramR25 "Bus Join1.out" as Connection50
                    }
                    [
                        position = 8344, 7976
                        size = 168, 160
                    ]

                    component Subsystem "State Condition Mng" {
                        layout = dynamic
                        component gen_logic_op not1 {
                            operator = "NOT"
                        }
                        [
                            position = 8032, 8264
                        ]

                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8120, 8352
                            scale = 1, -1
                        ]

                        component gen_logic_op not {
                            operator = "NOT"
                        }
                        [
                            position = 7840, 8200
                        ]

                        component gen_c_function "Trip_out mng fnc" {
                            in_terminal_dimensions_str = "bool_R25 inherit;op_mode_in inherit;trip_in inherit;enable inherit;initial_condition inherit;activate_logic inherit;"
                            in_terminal_properties = "real bool_R25;inherit op_mode_in;inherit trip_in;inherit enable;inherit initial_condition;inherit activate_logic;"
                            init_fnc = "/*Begin code section*/
trip_out = initial_condition;
/*End code section*/"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "trip_out inherit;"
                            out_terminal_properties = "real trip_out;"
                            output_fnc = "/*Begin code section*/
if(enable && activate_logic){
    if(op_mode_in==0){
        trip_out = trip_in*bool_R25;
    }
    else if(op_mode_in==1){
        trip_out = 1*bool_R25;
    }
    else if(op_mode_in==2){
        trip_out=0;
    }
}
/*End code section*/"
                        }
                        [
                            position = 8424, 8208
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8200, 8336
                            scale = 1, -1
                        ]

                        component Subsystem detect_change {
                            layout = dynamic
                            component tm_delay "Unit Delay1" {
                            }
                            [
                                position = 8144, 8200
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "!="
                            }
                            [
                                position = 8240, 8192
                            ]

                            port Out1 {
                                label = "Out"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8304, 8192
                            ]

                            port In3 {
                                label = "In"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8032, 8200
                            ]

                            junction Junction1 sp
                            [
                                position = 8080, 8200
                            ]

                            connect Junction1 In3 as Connection1
                            connect "Relational operator1.in" Junction1 as Connection2
                            connect "Relational operator1.out" Out1 as Connection3
                            connect "Unit Delay1.in" Junction1 as Connection4
                            connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                        }
                        [
                            position = 7960, 8368
                            size = 48, 48
                        ]

                        port Trip_in {
                            label = "Trip_in"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7768, 8200
                        ]

                        port R25 {
                            label = "R25"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8232, 8128
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8272, 8160
                        ]

                        port trip_out {
                            label = "trip_out"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8536, 8208
                        ]

                        port enable {
                            label = "enable"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7952, 8264
                        ]

                        port initial_condition {
                            label = "initial_condition"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8248, 8232
                        ]

                        junction Junction2 sp
                        [
                            position = 7984, 8264
                        ]

                        junction Junction3 sp
                        [
                            position = 7904, 8200
                        ]

                        connect Junction2 enable as Connection150
                        connect Junction3 not.out as Connection158
                        connect R25 "Trip_out mng fnc.bool_R25" as Connection144
                        connect "SR Flip Flop1.r_in" not1.out as Connection136
                        connect Termination1.in "SR Flip Flop1.out_n" as Connection138
                        connect "Trip_out mng fnc.enable" Junction2 as Connection151
                        connect "Trip_out mng fnc.trip_in" Junction3 as Connection157
                        connect "Trip_out mng fnc.activate_logic" "SR Flip Flop1.out" as Connection154
                        connect detect_change.In3 Junction3 as Connection159
                        connect detect_change.Out1 "SR Flip Flop1.s_in" as Connection156
                        connect initial_condition "Trip_out mng fnc.initial_condition" as Connection152
                        connect not.in Trip_in as Connection139
                        connect not1.in Junction2 as Connection149
                        connect op_mode "Trip_out mng fnc.op_mode_in" as Connection145
                        connect trip_out "Trip_out mng fnc.trip_out" as Connection167
                    }
                    [
                        position = 9336, 8056
                        size = 128, 136
                    ]

                    component Subsystem "Relay 25-Sync Check1" {
                        layout = dynamic
                        component gen_c_function "Deadbus fcn" {
                            global_variables = "real threshold;uint a;uint c;uint b;"
                            in_terminal_dimensions_str = "Vbus inherit;Vline inherit;VRMSLL inherit;"
                            in_terminal_properties = "real Vbus;real Vline;real VRMSLL;"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "out inherit;"
                            output_fnc = "/*Begin code section*/
if (VRMSLL > 400)
    threshold=VRMSLL*0.003;
else
    threshold = VRMSLL*0.05;

if ((Vbus > (VRMSLL*0.90)) && (Vbus < (VRMSLL*1.20)) && (Vline < threshold))
    a = 1;
else
    a = 0;

if ((Vline > (VRMSLL*0.90)) && (Vline < (VRMSLL*1.20)) && (Vbus < threshold))
    b = 1;
else
    b = 0;

if ((Vline < threshold) && (Vbus < threshold))
    c = 1;
else
    c = 0;

out = a || b || c;
/*End code section*/"
                        }
                        [
                            position = 8208, 7672
                        ]

                        component gen_logic_op "Logical operator3" {
                            inputs = "3"
                        }
                        [
                            position = 8336, 8104
                        ]

                        component gen_rel_op "Relational operator1" {
                        }
                        [
                            position = 8464, 7856
                        ]

                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8736, 7864
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8808, 7904
                        ]

                        component src_constant Constant2 {
                            execution_rate = "Ts"
                            value = "[2]"
                        }
                        [
                            position = 8368, 7848
                        ]

                        component gen_gain Gain2 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7832
                        ]

                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7784, 7832
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7784, 7776
                        ]

                        component gen_gain Gain3 {
                            gain = "1.0/10.0"
                        }
                        [
                            position = 7776, 8080
                        ]

                        component gen_logic_op "Logical operator5" {
                            operator = "OR"
                        }
                        [
                            position = 8544, 7848
                        ]

                        component gen_logic_op "Logical operator7" {
                            operator = "OR"
                        }
                        [
                            position = 8632, 7888
                        ]

                        component gen_logic_op "Logical operator4" {
                            operator = "OR"
                        }
                        [
                            position = 8888, 8096
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "4"
                        }
                        [
                            position = 7808, 8424
                        ]

                        component gen_gain Gain1 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7776
                        ]

                        component Subsystem "Phase Comparator" {
                            layout = dynamic
                            component gen_probe c_out {
                                addr = "17943"
                            }
                            [
                                position = 7768, 8000
                            ]

                            component gen_c_function "C function1" {
                                global_variables = "real mod_L;real wrap_out1;real wrap_out2;real mod_B;real k;real alpha;real PI2;real PI;"
                                in_terminal_dimensions_str = "phase_bus inherit;phase_line inherit;"
                                in_terminal_properties = "real phase_bus;real phase_line;"
                                init_fnc = "/*Begin code section*/
PI = 3.1415926536;
PI2 = 2*PI;
/*End code section*/"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
mod_L=fmod(phase_line, PI2);
mod_B=fmod(phase_bus, PI2);

if (fabs(mod_L - mod_B) > PI) {
    if (mod_L < mod_B)
        mod_B -= PI2;
    else
        mod_B += PI2;
}

out=fabs(mod_L-mod_B)*180.0/PI;
/*End code section*/"
                            }
                            [
                                position = 7656, 8040
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7808, 8056
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8056
                            ]

                            port wt_grid {
                                label = "wt_grid"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8008
                            ]

                            port wt_gen {
                                label = "wt_gen"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8072
                            ]

                            port angle_threshold {
                                label = "angle_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7576, 8136
                            ]

                            junction Junction1 sp
                            [
                                position = 7736, 8048
                            ]

                            connect Junction1 "C function1.out" as Connection2
                            connect Locked "Relational operator1.out" as Connection3
                            connect "Relational operator1.in" Junction1 as Connection4
                            connect angle_threshold "Relational operator1.in1" as Connection8
                            connect c_out.in Junction1 as Connection5
                            connect wt_gen "C function1.phase_line" as Connection6
                            connect wt_grid "C function1.phase_bus" as Connection7
                        }
                        [
                            position = 8016, 8272
                            size = 112, 88
                        ]

                        component Subsystem "Voltage Comparator" {
                            layout = dynamic
                            component gen_product Product1 {
                            }
                            [
                                position = 7760, 8160
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7856, 8048
                            ]

                            component gen_c_function "C function1" {
                                in_terminal_dimensions_str = "Vbus inherit;Vline inherit;"
                                in_terminal_properties = "real Vbus;inherit Vline;"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
out=fabs(Vline-Vbus);
/*End code section*/"
                            }
                            [
                                position = 7736, 8040
                            ]

                            component gen_gain Gain1 {
                                gain = "0.01"
                            }
                            [
                                position = 7680, 8200
                            ]

                            port V_bus {
                                label = "V_bus"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port V_line {
                                label = "V_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7928, 8048
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8152
                            ]

                            port dV_threshold {
                                label = "dV_threshold"
                                position = left:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8200
                            ]

                            connect Gain1.in dV_threshold as Connection8
                            connect Product1.in1 Gain1.out as Connection7
                            connect Product1.out "Relational operator1.in1" as Connection9
                            connect Product1.in VRMSLL as Connection6
                            connect "Relational operator1.in" "C function1.out" as Connection2
                            connect "Relational operator1.out" Locked as Connection3
                            connect V_bus "C function1.Vbus" as Connection4
                            connect V_line "C function1.Vline" as Connection5
                        }
                        [
                            position = 8016, 7864
                            size = 112, 208
                        ]

                        component Subsystem "Freq Comparator" {
                            layout = dynamic
                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7832, 8048
                            ]

                            component gen_c_function "C function1" {
                                in_terminal_dimensions_str = "fbus inherit;fline inherit;"
                                in_terminal_properties = "real fbus;inherit fline;"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
out=fabs(fline-fbus);
/*End code section*/"
                            }
                            [
                                position = 7736, 8040
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8048
                            ]

                            port f_bus {
                                label = "f_bus"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port f_line {
                                label = "f_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port dF_threshold {
                                label = "dF_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7728, 8112
                            ]

                            connect "Relational operator1.in" "C function1.out" as Connection6
                            connect "Relational operator1.out" Locked as Connection8
                            connect "Relational operator1.in1" dF_threshold as Connection7
                            connect f_bus "C function1.fbus" as Connection4
                            connect f_line "C function1.fline" as Connection5
                        }
                        [
                            position = 8016, 8104
                            size = 112, 88
                        ]

                        port trip_or {
                            label = "trip_or"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7792
                        ]

                        port mode_in {
                            label = "mode_in"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7896
                        ]

                        port bool_R25 {
                            label = "bool_R25"
                            position = auto:auto
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9032, 8096
                        ]

                        port Va {
                            label = "Va"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7776
                        ]

                        port Vline_a {
                            label = "Vline_A"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7832
                        ]

                        port bus_freq {
                            label = "bus_freq"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8080
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7824, 8104
                        ]

                        port bus_wt {
                            label = "bus_wt"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7776, 8248
                        ]

                        port line_wt {
                            label = "line_wt"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7832, 8272
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8424
                        ]

                        tag From5 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8112, 7688
                        ]

                        tag Goto4 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8448
                        ]

                        tag Goto1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8056, 8400
                            rotation = down
                            scale = -1, 1
                        ]

                        tag From2 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8128
                        ]

                        tag From3 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7944
                        ]

                        tag From1 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8296
                        ]

                        tag Goto2 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8416
                            rotation = down
                            scale = -1, 1
                        ]

                        tag Goto3 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7912, 8432
                        ]

                        tag From4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7888
                        ]

                        junction Junction4 sp
                        [
                            position = 7920, 7832
                        ]

                        junction Junction5 sp
                        [
                            position = 8536, 8104
                        ]

                        junction Junction23 sp
                        [
                            position = 7904, 7776
                        ]

                        connect "Bus Split1.in" relay_paramR25 as Connection69
                        connect Constant2.out "Relational operator1.in" as Connection1
                        connect "Deadbus fcn.Vbus" Junction23 as Connection103
                        connect "Deadbus fcn.out" "SR Flip Flop1.s_in" as Connection137
                        connect "Freq Comparator.Locked" "Logical operator3.in1" as Connection135
                        connect "Freq Comparator.f_line" line_freq as Connection133
                        connect From1 "Phase Comparator.angle_threshold" as Connection74
                        connect From2 "Freq Comparator.dF_threshold" as Connection79
                        connect From3 "Voltage Comparator.dV_threshold" as Connection80
                        connect From4 "Voltage Comparator.VRMSLL" as Connection81
                        connect From5 "Deadbus fcn.VRMSLL" as Connection90
                        connect Gain3.out "Freq Comparator.f_bus" as Connection132
                        connect Goto1 "Bus Split1.out" as Connection70
                        connect Goto2 "Bus Split1.out1" as Connection71
                        connect Goto3 "Bus Split1.out2" as Connection72
                        connect Goto4 "Bus Split1.out3" as Connection73
                        connect Junction23 Gain1.out as Connection16
                        connect Junction4 "Deadbus fcn.Vline" as Connection104
                        connect Junction4 Gain2.out as Connection21
                        connect Junction5 "Logical operator4.in1" as Connection22
                        connect "Logical operator3.out" Junction5 as Connection24
                        connect "Logical operator3.in2" "Phase Comparator.Locked" as Connection134
                        connect "Logical operator5.out" "Logical operator7.in" as Connection26
                        connect "Logical operator5.in1" "Relational operator1.out" as Connection27
                        connect "Logical operator5.in" trip_or as Connection28
                        connect "Logical operator7.in1" Junction5 as Connection29
                        connect "Logical operator7.out" "SR Flip Flop1.r_in" as Connection30
                        connect "Phase Comparator.wt_grid" bus_wt as Connection110
                        connect "RMS value1.out" Gain1.in as Connection93
                        connect "RMS value2.out" Gain2.in as Connection97
                        connect "Relational operator1.in1" mode_in as Connection36
                        connect "SR Flip Flop1.out" "Logical operator4.in" as Connection37
                        connect "SR Flip Flop1.out_n" Termination1.in as Connection38
                        connect Va "RMS value1.in" as Connection101
                        connect Vline_a "RMS value2.in" as Connection102
                        connect "Voltage Comparator.V_bus" Junction23 as Connection47
                        connect "Voltage Comparator.V_line" Junction4 as Connection48
                        connect "Voltage Comparator.Locked" "Logical operator3.in" as Connection136
                        connect bool_R25 "Logical operator4.out" as Connection138
                        connect bus_freq Gain3.in as Connection121
                        connect line_wt "Phase Comparator.wt_gen" as Connection111
                    }
                    [
                        position = 8888, 7800
                        size = 120, 232
                    ]

                    port OUTPUT {
                        label = "OUTPUT"
                        position = bottom:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9704, 8056
                    ]

                    port Ia {
                        label = "Ia"
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7816
                    ]

                    port Ib {
                        label = "Ib"
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7888
                    ]

                    port Ic {
                        label = "Ic"
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7960
                    ]

                    port Va {
                        label = "Va"
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8032
                    ]

                    port Vb {
                        label = "Vb"
                        position = left:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8104
                    ]

                    port Vc {
                        label = "Vc"
                        position = left:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8176
                    ]

                    port Vline_a {
                        label = "Vline_A"
                        position = left:7
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8248
                    ]

                    port faults_status {
                        label = "Fault_status"
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8272
                    ]

                    port TO_MODBUS {
                        label = "To_Modbus"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8024, 8080
                    ]

                    port Vline_b {
                        label = "Vline_B"
                        position = left:8
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8320
                    ]

                    port Vline_c {
                        label = "Vline_C"
                        position = left:9
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8392
                    ]

                    port cb_state {
                        label = "cb_state"
                        position = left:10
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7312, 8624
                    ]

                    port pf_states {
                        label = "pf_state"
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8416
                        scale = 1, -1
                    ]

                    port from_Modbus {
                        label = "From Modbus"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8144, 7976
                    ]

                    tag Goto13 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7296, 8288
                    ]

                    tag From23 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8336
                    ]

                    tag Goto21 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 7688
                        rotation = left
                    ]

                    tag Goto9 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8000
                    ]

                    tag From27 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8408
                    ]

                    tag From34 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7896
                    ]

                    tag Goto17 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7104, 7760
                        rotation = left
                    ]

                    tag From36 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8216
                    ]

                    tag From5 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7520, 8504
                    ]

                    tag From22 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8288
                    ]

                    tag From29 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8032
                    ]

                    tag Goto1 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8160
                    ]

                    tag Goto24 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 8304
                    ]

                    tag Goto29 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 7952
                        scale = 1, -1
                    ]

                    tag Goto25 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8320
                    ]

                    tag From28 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8384
                    ]

                    tag Goto7 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 8024
                        scale = 1, -1
                    ]

                    tag From37 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7848
                    ]

                    tag From11 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8880, 8256
                    ]

                    tag From32 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8104
                    ]

                    tag From31 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9096, 8424
                    ]

                    tag From18 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7800
                    ]

                    tag From21 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8264
                    ]

                    tag From25 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8360
                    ]

                    tag From30 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9024, 8408
                    ]

                    tag From9 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8992, 8240
                        rotation = down
                        scale = -1, 1
                    ]

                    tag Goto22 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7248, 7832
                        rotation = left
                    ]

                    tag Goto18 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7088, 7688
                        rotation = left
                    ]

                    tag From10 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8272
                    ]

                    tag Goto4 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8424
                    ]

                    tag Goto3 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8336
                    ]

                    tag Goto19 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 7832
                        rotation = left
                    ]

                    tag Goto6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9640, 8096
                    ]

                    tag Goto26 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8296, 8152
                    ]

                    tag Goto8 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8216
                    ]

                    tag Goto14 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7784
                    ]

                    tag Goto27 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7976
                        scale = 1, -1
                    ]

                    tag From14 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7704
                    ]

                    tag From2 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7480, 8288
                    ]

                    tag Goto10 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8272
                    ]

                    tag From20 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8240
                    ]

                    tag Goto28 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7928
                        scale = 1, -1
                    ]

                    tag From7 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9072, 8224
                        rotation = down
                        scale = -1, -1
                    ]

                    tag From19 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7824
                    ]

                    tag From12 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9032, 8288
                    ]

                    tag Goto12 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7224, 8256
                    ]

                    tag From8 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9104, 8304
                    ]

                    tag From33 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9120, 8080
                    ]

                    tag From13 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8320
                    ]

                    tag From35 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8456
                    ]

                    tag From4 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7448, 8464
                    ]

                    tag Goto16 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7928
                    ]

                    tag Goto20 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7232, 7760
                        rotation = left
                    ]

                    tag Goto15 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7856
                    ]

                    tag Goto11 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7376, 8256
                    ]

                    tag Goto23 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 8000
                        scale = 1, -1
                    ]

                    tag Goto2 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8248
                    ]

                    tag From16 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7776
                    ]

                    tag Goto5 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9088, 7752
                    ]

                    tag From26 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8432
                    ]

                    tag From24 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8312
                    ]

                    tag From15 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7728
                    ]

                    tag From1 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7600, 8280
                        rotation = right
                    ]

                    tag From17 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7752
                    ]

                    tag From6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7584, 8560
                        rotation = right
                    ]

                    tag From3 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7392, 8384
                    ]

                    tag Goto34 {
                        value = "F3_CB5_BREAKER"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7392, 7792
                        hide_name = True
                    ]

                    tag Goto33 {
                        value = "F3_CB5_FREQUENCY"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7392, 7768
                        hide_name = True
                    ]

                    tag Goto31 {
                        value = "F3_CB5_P_REACTIVE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7392, 7720
                        hide_name = True
                    ]

                    tag Goto30 {
                        value = "F3_CB5_P_REAL"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7392, 7696
                        hide_name = True
                    ]

                    tag Goto32 {
                        value = "F3_CB5_VOLTAGE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7392, 7744
                        hide_name = True
                    ]

                    junction Junction51 sp
                    [
                        position = 8720, 8056
                    ]

                    junction Junction100 sp
                    [
                        position = 8536, 8192
                    ]

                    junction Junction101 sp
                    [
                        position = 8536, 8280
                    ]

                    junction Junction104 sp
                    [
                        position = 9016, 7800
                    ]

                    junction Junction105 sp
                    [
                        position = 9584, 8056
                    ]

                    junction Junction106 sp
                    [
                        position = 7368, 8624
                    ]

                    junction Junction108 sp
                    [
                        position = 6688, 8248
                    ]

                    junction Junction109 sp
                    [
                        position = 6696, 8032
                    ]

                    junction Junction110 sp
                    [
                        position = 7304, 8240
                    ]

                    junction Junction111 sp
                    [
                        position = 6640, 7816
                    ]

                    junction Junction112 sp
                    [
                        position = 6640, 7888
                    ]

                    junction Junction113 sp
                    [
                        position = 6640, 7960
                    ]

                    junction Junction114 sp
                    [
                        position = 7088, 7984
                    ]

                    junction Junction115 sp
                    [
                        position = 7104, 8000
                    ]

                    junction Junction116 sp
                    [
                        position = 7120, 8016
                    ]

                    junction Junction117 sp
                    [
                        position = 7216, 8032
                    ]

                    junction Junction118 sp
                    [
                        position = 7232, 8048
                    ]

                    junction Junction119 sp
                    [
                        position = 7248, 8064
                    ]

                    junction Junction120 sp
                    [
                        position = 8536, 8368
                    ]

                    junction Junction121 sp
                    [
                        position = 8536, 8456
                    ]

                    junction Junction122 sp
                    [
                        position = 8216, 8192
                    ]

                    junction Junction123 sp
                    [
                        position = 7264, 8176
                    ]

                    junction Junction124 sp
                    [
                        position = 7280, 8192
                    ]

                    junction Junction125 sp
                    [
                        position = 7168, 8032
                    ]

                    junction Junction126 sp
                    [
                        position = 7320, 8240
                    ]

                    junction Junction127 sp
                    [
                        position = 7336, 8624
                    ]

                    junction Junction128 sp
                    [
                        position = 7264, 7696
                    ]

                    junction Junction129 sp
                    [
                        position = 7288, 7720
                    ]

                    comment Comment3 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52B</p></body></html> ENDCOMMENT 
                    [
                        position = 7432, 8720
                    ]

                    comment Comment2 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52A</p></body></html> ENDCOMMENT 
                    [
                        position = 7400, 8568
                    ]

                    comment Comment4 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Status</p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8256
                    ]

                    comment Comment5 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">pf_states </p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8400
                    ]

                    connect "Bus Join1.in20" "CALC FROM MEASUREMENTS.S" as Connection144
                    connect "Bus Join1.in13" "CALC FROM MEASUREMENTS.Va_phase" as Connection134
                    connect "Bus Join1.in15" "CALC FROM MEASUREMENTS.Vb_phase" as Connection135
                    connect "Bus Join1.in17" "CALC FROM MEASUREMENTS.Vc_phase" as Connection140
                    connect "Bus Join1.in5" "CALC FROM MEASUREMENTS.Ic_phase" as Connection133
                    connect "Bus Join1.in3" "CALC FROM MEASUREMENTS.Ib_phase" as Connection132
                    connect "Bus Join1.in21" "CALC FROM MEASUREMENTS.pf" as Connection149
                    connect "Bus Join1.in22" Junction110 as Connection240
                    connect "Bus Join1.in6" Junction114 as Connection268
                    connect "Bus Join1.in9" Junction117 as Connection283
                    connect "Bus Join1.in10" Junction118 as Connection286
                    connect "Bus Join1.in18" Junction123 as Connection382
                    connect "Bus Join1.in19" Junction124 as Connection385
                    connect "CALC FROM MEASUREMENTS.Ic_mag" "Bus Join1.in4" as Connection2
                    connect "CALC FROM MEASUREMENTS.Va_mag" "Bus Join1.in12" as Connection3
                    connect "CALC FROM MEASUREMENTS.Vb_mag" "Bus Join1.in14" as Connection1
                    connect "CALC FROM MEASUREMENTS.Ia_mag" "Bus Join1.in" as Connection5
                    connect "CALC FROM MEASUREMENTS.Ia_phase" "Bus Join1.in1" as Connection131
                    connect "CALC FROM MEASUREMENTS.Vc_mag" "Bus Join1.in16" as Connection4
                    connect "CALC FROM MEASUREMENTS.Ib_mag" "Bus Join1.in2" as Connection6
                    connect "CALC FROM MEASUREMENTS.line_freq" Goto10 as Connection224
                    connect "CALC FROM MEASUREMENTS.line_wt" Goto13 as Connection245
                    connect "CALC FROM MEASUREMENTS.Vline_a" Junction108 as Connection217
                    connect "CALC FROM MEASUREMENTS.Va" Junction109 as Connection218
                    connect "CALC FROM MEASUREMENTS.Ia" Junction111 as Connection257
                    connect "CALC FROM MEASUREMENTS.Ib" Junction112 as Connection256
                    connect "CALC FROM MEASUREMENTS.Ic" Junction113 as Connection258
                    connect "CALC FROM MEASUREMENTS.Ib_rms" Junction115 as Connection271
                    connect "CALC FROM MEASUREMENTS.Ic_rms" Junction116 as Connection274
                    connect "CALC FROM MEASUREMENTS.Vc_rms" Junction119 as Connection289
                    connect "Control Panel Input1.out" Junction122 as Connection381
                    connect From1 Sum1.in as Connection167
                    connect From10 bitwise_faults.R50 as Connection197
                    connect From11 bitwise_faults.R27 as Connection195
                    connect From12 bitwise_faults.R51 as Connection199
                    connect From13 bitwise_faults.Reset as Connection210
                    connect From14 "Relay 25-Sync Check1.Va" as Connection219
                    connect From15 "Relay 25-Sync Check1.Vline_a" as Connection220
                    connect From16 "Relay 25-Sync Check1.line_freq" as Connection225
                    connect From17 "Relay 25-Sync Check1.bus_freq" as Connection238
                    connect From18 "Relay 25-Sync Check1.bus_wt" as Connection244
                    connect From19 "Relay 25-Sync Check1.line_wt" as Connection246
                    connect From2 Gain1.in as Connection168
                    connect From20 R50512761.Iinst_a as Connection336
                    connect From21 R50512761.Iinst_b as Connection337
                    connect From22 R50512761.Iinst_c as Connection338
                    connect From23 R50512761.Irms_b as Connection340
                    connect From24 R50512761.Irms_a as Connection339
                    connect From25 R50512761.Irms_c as Connection341
                    connect From26 R50512761.Vrms_c as Connection344
                    connect From27 R50512761.Vrms_b as Connection343
                    connect From28 R50512761.Vrms_a as Connection342
                    connect From29 "State Condition Mng.op_mode" as Connection309
                    connect From3 Gain4.in as Connection169
                    connect From30 "pf bitwise.exp_imp" as Connection313
                    connect From31 "pf bitwise.lag_lead" as Connection312
                    connect From32 "State Condition Mng.enable" as Connection318
                    connect From33 "State Condition Mng.initial_condition" as Connection319
                    connect From34 "Relay 25-Sync Check1.relay_paramR25" as Connection320
                    connect From35 R50512761.relay_param as Connection321
                    connect From36 R50512761.Reset as Connection335
                    connect From37 "Relay 25-Sync Check1.mode_in" as Connection334
                    connect From4 Gain5.in as Connection171
                    connect From5 Gain6.in as Connection173
                    connect From7 bitwise_faults.Status as Connection203
                    connect From8 bitwise_faults.R59 as Connection201
                    connect From9 bitwise_faults.R25 as Connection193
                    connect Gain1.out Sum1.in1 as Connection21
                    connect Gain4.out Sum1.in2 as Connection170
                    connect Gain5.out Sum1.in3 as Connection172
                    connect Gain6.out Sum1.in4 as Connection174
                    connect Gain7.out Sum3.in1 as Connection180
                    connect Gain8.in Junction106 as Connection186
                    connect Gain8.out Sum3.in2 as Connection183
                    connect Goto1 Junction100 as Connection152
                    connect Goto11 Junction110 as Connection242
                    connect Goto12 "CALC FROM MEASUREMENTS.bus_wt" as Connection243
                    connect Goto14 Junction111 as Connection249
                    connect Goto15 Junction112 as Connection252
                    connect Goto16 Junction113 as Connection255
                    connect Goto17 Junction115 as Connection273
                    connect Goto19 Junction116 as Connection276
                    connect Goto2 Junction101 as Connection155
                    connect Goto22 Junction119 as Connection367
                    connect Goto23 Relay_Param.op_mode as Connection329
                    connect Goto24 "CALC FROM MEASUREMENTS.Lag Lead" as Connection310
                    connect Goto25 "CALC FROM MEASUREMENTS.Export Import" as Connection311
                    connect Goto27 Relay_Param.Initial_condition as Connection331
                    connect Goto28 Relay_Param.relay_param as Connection333
                    connect Goto29 Relay_Param.relay_paramR25 as Connection332
                    connect Goto30 Junction128 as Connection402
                    connect Goto31 Junction129 as Connection405
                    connect Goto33 Junction126 as Connection393
                    connect Goto34 Junction127 as Connection396
                    [
                        breakpoints = 7336, 7792; 7336, 8624
                    ]
                    connect Goto4 Junction121 as Connection298
                    connect Goto5 Junction104 as Connection164
                    connect Goto6 Junction105 as Connection178
                    connect Goto7 Relay_Param.reset as Connection330
                    connect Goto8 Junction108 as Connection213
                    connect Goto9 Junction109 as Connection216
                    connect Ia Junction111 as Connection247
                    connect Ib Junction112 as Connection250
                    connect Ic Junction113 as Connection253
                    connect Junction100 "Logical operator1.in" as Connection196
                    connect Junction101 "Logical operator1.in1" as Connection198
                    connect Junction101 R50512761.trip_51 as Connection154
                    connect Junction104 "State Condition Mng.R25" as Connection303
                    connect Junction105 "Unit Delay4.out" as Connection202
                    connect Junction106 not.in as Connection185
                    connect Junction110 Junction126 as Connection391
                    connect Junction114 "CALC FROM MEASUREMENTS.Ia_rms" as Connection269
                    connect Junction114 Goto18 as Connection355
                    connect Junction115 "Bus Join1.in7" as Connection272
                    connect Junction116 "Bus Join1.in8" as Connection275
                    connect Junction117 Goto21 as Connection365
                    connect Junction117 Junction125 as Connection388
                    connect Junction118 "CALC FROM MEASUREMENTS.Vb_rms" as Connection287
                    connect Junction118 Goto20 as Connection366
                    connect Junction119 "Bus Join1.in11" as Connection290
                    connect Junction120 Goto3 as Connection296
                    connect Junction121 R50512761.trip_59 as Connection299
                    connect Junction122 Goto26 as Connection380
                    connect Junction123 "CALC FROM MEASUREMENTS.P" as Connection383
                    connect Junction124 "CALC FROM MEASUREMENTS.Q" as Connection386
                    connect Junction125 "CALC FROM MEASUREMENTS.Va_rms" as Connection389
                    connect Junction126 "CALC FROM MEASUREMENTS.bus_freq" as Connection392
                    connect Junction127 Junction106 as Connection395
                    connect Junction128 Junction123 as Connection403
                    connect Junction129 Junction124 as Connection406
                    connect Junction51 "State Condition Mng.Trip_in" as Connection302
                    connect "Logical operator1.in2" Junction120 as Connection297
                    connect "Logical operator1.in3" Junction121 as Connection300
                    connect "Logical operator1.out" Junction51 as Connection79
                    connect OUTPUT Junction105 as Connection176
                    connect P.in Junction128 as Connection404
                    connect Q.in Junction129 as Connection407
                    connect R50512761.trip_50 Junction100 as Connection150
                    connect R50512761.trip_27 Junction120 as Connection295
                    connect R50512761.Enable Junction122 as Connection379
                    connect "Relay 25-Sync Check1.bool_R25" Junction104 as Connection162
                    connect "Relay 25-Sync Check1.trip_or" Junction51 as Connection94
                    connect Sum3.in From6 as Connection179
                    connect Sum3.out "Unit Delay5.in" as Connection190
                    connect TO_MODBUS "Bus Join1.out" as Connection101
                    connect "Unit Delay2.out" "Bus Join1.in23" as Connection175
                    connect "Unit Delay2.in" Sum1.out as Connection104
                    connect "Unit Delay4.in" "State Condition Mng.trip_out" as Connection304
                    connect "Unit Delay5.out" "Bus Join1.in24" as Connection191
                    connect Va Junction109 as Connection214
                    connect Vb "CALC FROM MEASUREMENTS.Vb" as Connection108
                    connect Vc "CALC FROM MEASUREMENTS.Vc" as Connection109
                    connect Vline_a Junction108 as Connection211
                    connect Vline_b "CALC FROM MEASUREMENTS.Vline_b" as Connection111
                    connect Vline_c "CALC FROM MEASUREMENTS.Vline_c" as Connection112
                    connect cb_state Junction127 as Connection394
                    connect faults_status bitwise_faults.fault_status as Connection368
                    connect from_Modbus Relay_Param.from_Modbus as Connection328
                    connect normalize.out Goto32 as Connection401
                    connect normalize.in Junction125 as Connection400
                    [
                        breakpoints = 7272, 7744
                    ]
                    connect not.out Gain7.in as Connection181
                    connect "pf bitwise.pf_states" pf_states as Connection369

                    CT_primary = "1200"
                    R27P_R59P_tripDelay = "2"
                    R27P_pickup1 = ".7"
                    R27P_pickup2 = ".5"
                    R50P_tripDelay2 = "0"
                    R51P_curveType2 = "1"
                    R51P_pickup1 = ".4"
                    R51P_pickup2 = ".4"
                    R51P_timeDial2 = "1"
                    R59P_pickup1 = "1.2"
                    R59P_pickup2 = "1.2"

                    mask {
                        description = "This block implements the relay SEL 787 with protective functions 25 (synchronism check), 27 (Under Voltage), 50 (Instantaneous Overcurrent), 51 (Time Overcurrent) and 59 (Overvoltage). 

he relay outputs to Modbus are: 0 - Ia_mag; 1 - Ia_phase; 2 - Ib_mag; 3 - Ib_phase; 4 - Ic_mag; 5 - Ic_phase; 6 - Ia_rms; 7 - Ib_rms; 8 - Ic_rms; 9 - Va_rms; 10 - Vb_rms; 11 - Vc_rms; 12 - Va_mag; 13 - Va_phase; 14 - Vb_mag; 15 - Vb_phase; 16 - Vc_mag; 17 - Vc_phase; 18 - P; 19 - Q; 20 - S; 21 - pf; 22 - Bus_freq; 23 - protection functions status; 24 - Circuit Breaker status.

he relay inputs from Modbus are: 2001 - op_mode; 2002 - Reset; 2003 - protection_mode.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
he trip pickups for functions 50 and 51 are defined as currents in the secondary of the current transformer. The secondary ot the CT has 5 turns."

                        VRMSLL {
                            label = "Line to Line RMS voltage"
                            widget = edit
                            type = generic
                            default_value = "13800.0"
                            unit = "V"
                            group = "Base Parameters"
                        }

                        dV_threshold {
                            label = "Voltage deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "5.0"
                            unit = "%"
                            group = "Base Parameters"
                        }

                        angle_threshold {
                            label = "Angle deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "12.0"
                            unit = "degree"
                            group = "Base Parameters"
                        }

                        dF_threshold {
                            label = "Frequency deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Hz"
                            group = "Base Parameters"
                        }

                        R27P_R59P_tripDelay {
                            label = "R27 UV and R59 OV trip delay"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Sec"
                            group = "Base Parameters"
                        }

                        CT_primary {
                            label = "CT primary turns number"
                            widget = edit
                            type = generic
                            default_value = "600"
                            group = "Base Parameters"
                        }

                        Initial_status {
                            label = "Initial relay status"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "Base Parameters"
                        }

                        R50P_pickup1 {
                            label = "R50 IOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R50P_tripDelay1 {
                            label = "R50 IOC trip delay 1"
                            widget = edit
                            type = generic
                            default_value = "0"
                            unit = "sec"
                            group = "GridTied Parameters"
                        }

                        R51P_pickup1 {
                            label = "R51 TOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.8"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R51P_curveType1 {
                            label = "R51 TOC curve type 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R51P_timeDial1 {
                            label = "R51 TOC time dial 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R27P_pickup1 {
                            label = "R27 UV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R59P_pickup1 {
                            label = "R59 OV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R50P_pickup2 {
                            label = "R50 IOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R50P_tripDelay2 {
                            label = "R50 IOC trip delay 2"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            unit = "sec"
                            group = "Islanded Parameters"
                        }

                        R51P_pickup2 {
                            label = "R51 TOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.7"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R51P_curveType2 {
                            label = "R51 TOC curve type 2"
                            widget = edit
                            type = generic
                            default_value = "2.0"
                            group = "Islanded Parameters"
                        }

                        R51P_timeDial2 {
                            label = "R51 TOC time dial 2"
                            widget = edit
                            type = generic
                            default_value = "3.0"
                            group = "Islanded Parameters"
                        }

                        R27P_pickup2 {
                            label = "R27 UV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        R59P_pickup2 {
                            label = "R59 OV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE
                    }
                }
                [
                    position = 7952, 8168
                    size = 152, 240
                ]

                port Brk_cmd {
                    label = "Brk_cmd"
                    position = bottom:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7792, 8496
                    rotation = right
                ]

                port IABC {
                    label = "IABC"
                    position = right:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7792, 7936
                ]

                port VABC_load {
                    label = "VABC_load"
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7544, 7920
                ]

                port VABC_grid {
                    label = "VABC_grid"
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7656, 7928
                ]

                junction Junction1391 sp
                [
                    position = 8120, 7928
                ]

                junction Junction1392 sp
                [
                    position = 8120, 7976
                ]

                junction Junction1393 sp
                [
                    position = 7952, 8344
                ]

                junction Junction1396 sp
                [
                    position = 7792, 8448
                ]

                junction Junction1397 sp
                [
                    position = 7648, 8344
                ]

                comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset the relay when input is 1</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Operation Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 1 force the breaker closed</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 0 turns on logic based operation</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Protection Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 1 use islanded parameters</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 0 use grid tied parameters</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                [
                    position = 7968, 8328
                ]

                connect Brk_cmd Junction1396 as Connection899
                connect "Bus Split1.in" IABC as Connection907
                connect "Bus Split1.out1" SEL_787.Ib as Connection909
                connect "Bus Split1.out2" SEL_787.Ic as Connection910
                connect "Bus Split1.out" SEL_787.Ia as Connection908
                connect "Bus Split2.out1" SEL_787.Vb as Connection913
                connect "Bus Split2.out2" SEL_787.Vc as Connection914
                connect "Bus Split2.out" SEL_787.Va as Connection912
                connect "Bus Split3.out" SEL_787.Vline_a as Connection928
                connect "Bus Split3.out2" SEL_787.Vline_c as Connection930
                connect "Bus Split3.out1" SEL_787.Vline_b as Connection929
                connect CB_state.in Junction1397 as Connection905
                connect Constant2.out "Signal switch1.in1" as Connection880
                connect Delay1.out "Signal switch1.in" as Connection2
                connect Junction1391 Constant1.out as Connection852
                connect Junction1391 "ModBus Device1.coil_in" as Connection313
                connect Junction1392 Junction1391 as Connection314
                connect Junction1393 Delay1.in as Connection867
                connect Junction1396 "Signal switch1.out" as Connection902
                connect Junction1397 Junction1396 as Connection904
                connect "ModBus Device1.holding_in" Junction1392 as Connection466
                connect "ModBus Device1.discrete_in" Junction1392 as Connection467
                connect "ModBus Device1.holding_out" SEL_787.from_Modbus as Connection932
                connect "ModBus Device1.coil_out" Term3.in as Connection854
                connect SEL_787.OUTPUT Junction1393 as Connection868
                connect SEL_787.cb_state Junction1397 as Connection903
                connect SEL_787.TO_MODBUS "ModBus Device1.reg_in" as Connection931
                connect SEL_787.pf_states Term4.in as Connection897
                connect "Signal switch1.in2" Junction1393 as Connection866
                connect Term5.in SEL_787.faults_status as Connection870
                connect VABC_grid "Bus Split2.in" as Connection934
                [
                    breakpoints = 7704, 7968
                ]
                connect VABC_load "Bus Split3.in" as Connection933
            }
            [
                position = 8000, 8200
                rotation = left
                size = 136, 72
            ]

            component Subsystem Brk {
                layout = dynamic
                component "core/Triple Pole Single Throw Contactor" S1 {
                    ctrl_src = "Model"
                }
                [
                    position = 8104, 8184
                    rotation = right
                ]

                port C {
                    position = left:1
                    kind = pe
                }
                [
                    position = 8200, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 8104, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port A {
                    position = left:3
                    kind = pe
                }
                [
                    position = 8008, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port c {
                    position = right:1
                    kind = pe
                }
                [
                    position = 8200, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port b {
                    position = right:2
                    kind = pe
                }
                [
                    position = 8104, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port a {
                    position = right:3
                    kind = pe
                }
                [
                    position = 8008, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port control {
                    position = bottom:auto
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8320, 8184
                    scale = -1, 1
                ]

                connect A S1.c_in as Connection6
                connect B S1.b_in as Connection5
                connect S1.a_in C as Connection4
                connect S1.c_out a as Connection1
                connect S1.b_out b as Connection2
                connect S1.a_out c as Connection3
                connect control S1.ctrl_in as Connection7
            }
            [
                position = 8144, 8200
                rotation = right
                size = 64, 64
            ]

            component Subsystem Meas1 {
                layout = dynamic
                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7936, 8168
                    rotation = left
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8352
                    rotation = right
                ]

                component "core/Current Measurement" IC {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7496, 8120
                ]

                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8288
                    rotation = right
                ]

                component gen_bus_join "Bus Join2" {
                    inputs = "3"
                }
                [
                    position = 7576, 7784
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8224
                    rotation = right
                ]

                component "core/Current Measurement" IA {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7368, 7928
                ]

                component "core/Current Measurement" IB {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7432, 8024
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8192
                        rotation = right
                    ]

                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8192
                        rotation = right
                    ]

                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8192
                        rotation = right
                    ]

                    port P1 {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port P2 {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port P3 {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port P4 {
                        position = bottom:1
                        kind = pe
                    }
                    [
                        position = 8136, 8272
                        rotation = left
                    ]

                    port P5 {
                        position = bottom:2
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    port P6 {
                        position = bottom:3
                        kind = pe
                    }
                    [
                        position = 8248, 8272
                        rotation = left
                    ]

                    connect R1.p_node P1 as Connection1
                    connect R1.n_node P4 as Connection3
                    connect R2.p_node P2 as Connection6
                    connect R2.n_node P5 as Connection4
                    connect R3.p_node P3 as Connection2
                    connect R3.n_node P6 as Connection5
                }
                [
                    position = 7320, 8232
                    size = 64, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7232, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7232, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7232, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7936, 8112
                    rotation = left
                ]

                port I {
                    position = top:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7648, 7784
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1466 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1467 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1468 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1473 pe
                [
                    position = 7336, 8432
                ]

                junction Junction1474 pe
                [
                    position = 7320, 8432
                ]

                junction Junction1475 pe
                [
                    position = 7304, 7928
                ]

                junction Junction1476 pe
                [
                    position = 7320, 8024
                ]

                junction Junction1477 pe
                [
                    position = 7336, 8120
                ]

                junction Junction1478 pe
                [
                    position = 7568, 8432
                ]

                connect A Junction1475 as Connection405
                connect B Junction1476 as Connection408
                connect "Bus Join1.in1" VB.out as Connection387
                connect "Bus Join1.in2" VC.out as Connection388
                connect "Bus Join2.out" I as Connection393
                connect "Bus Join2.in1" IB.out as Connection391
                connect "Bus Join2.in2" IC.out as Connection392
                connect C Junction1477 as Connection411
                connect IA.out "Bus Join2.in" as Connection390
                connect IA.n_node Junction1466 as Connection377
                connect Junction1466 a as Connection299
                connect Junction1467 IB.n_node as Connection375
                connect Junction1467 b as Connection301
                connect Junction1468 IC.n_node as Connection376
                connect Junction1468 c as Connection302
                connect Junction1473 Junction1474 as Connection404
                connect Junction1473 Junction1478 as Connection416
                connect Junction1474 res_for_meas.P5 as Connection403
                [
                    breakpoints = 7320, 8432; 7320, 8312
                ]
                connect Junction1475 IA.p_node as Connection406
                connect Junction1476 IB.p_node as Connection409
                connect Junction1477 IC.p_node as Connection412
                connect Junction1478 Junction1421 as Connection417
                [
                    breakpoints = 7568, 8432; 7648, 8432
                ]
                connect Junction1478 VC.n_node as Connection415
                connect V "Bus Join1.out" as Connection385
                connect V "Bus Join1.out" as Connection389
                connect VA.out "Bus Join1.in" as Connection386
                connect VA.n_node Junction1421 as Connection237
                connect VA.p_node Junction1466 as Connection240
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1467 as Connection243
                connect VC.p_node Junction1468 as Connection246
                connect res_for_meas.P6 Junction1473 as Connection402
                connect res_for_meas.P4 Junction1474 as Connection401
                [
                    breakpoints = 7304, 8312
                ]
                connect res_for_meas.P1 Junction1475 as Connection407
                connect res_for_meas.P2 Junction1476 as Connection410
                connect res_for_meas.P3 Junction1477 as Connection413
            }
            [
                position = 8144, 8096
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            component Subsystem Meas2 {
                layout = dynamic
                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8256
                    rotation = right
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8192
                    rotation = right
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7960, 8120
                    rotation = left
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8320
                    rotation = right
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8192
                        rotation = right
                    ]

                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8192
                        rotation = right
                    ]

                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8192
                        rotation = right
                    ]

                    port P1 {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port P2 {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port P3 {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port P4 {
                        position = bottom:1
                        kind = pe
                    }
                    [
                        position = 8136, 8272
                        rotation = left
                    ]

                    port P5 {
                        position = bottom:2
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    port P6 {
                        position = bottom:3
                        kind = pe
                    }
                    [
                        position = 8248, 8272
                        rotation = left
                    ]

                    connect R1.p_node P1 as Connection1
                    connect R1.n_node P4 as Connection3
                    connect R2.p_node P2 as Connection6
                    connect R2.n_node P5 as Connection4
                    connect R3.p_node P3 as Connection2
                    connect R3.n_node P6 as Connection5
                }
                [
                    position = 7472, 8232
                    size = 64, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7400, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7400, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7400, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7960, 8064
                    rotation = left
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1470 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1471 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1472 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1473 pe
                [
                    position = 7488, 8432
                ]

                junction Junction1474 pe
                [
                    position = 7472, 8432
                ]

                junction Junction1475 pe
                [
                    position = 7456, 7928
                ]

                junction Junction1476 pe
                [
                    position = 7472, 8024
                ]

                junction Junction1477 pe
                [
                    position = 7488, 8120
                ]

                junction Junction1478 pe
                [
                    position = 7568, 8432
                ]

                connect A Junction1475 as Connection405
                connect B Junction1476 as Connection408
                connect C Junction1477 as Connection411
                connect Junction1470 VA.p_node as Connection389
                connect Junction1471 b as Connection392
                connect Junction1472 VC.p_node as Connection395
                connect Junction1473 Junction1474 as Connection404
                connect Junction1473 Junction1478 as Connection416
                connect Junction1474 res_for_meas.P5 as Connection403
                [
                    breakpoints = 7472, 8432; 7472, 8312
                ]
                connect Junction1475 Junction1470 as Connection406
                connect Junction1476 Junction1471 as Connection409
                connect Junction1477 Junction1472 as Connection412
                connect Junction1478 Junction1421 as Connection415
                [
                    breakpoints = 7648, 8432
                ]
                connect V "Bus Join1.out" as Connection385
                connect VA.out "Bus Join1.in" as Connection397
                connect VA.n_node Junction1421 as Connection237
                connect VB.out "Bus Join1.in1" as Connection398
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1471 as Connection391
                connect VC.out "Bus Join1.in2" as Connection399
                connect VC.n_node Junction1478 as Connection414
                connect a Junction1470 as Connection388
                connect c Junction1472 as Connection394
                connect res_for_meas.P6 Junction1473 as Connection402
                connect res_for_meas.P4 Junction1474 as Connection401
                [
                    breakpoints = 7456, 8312
                ]
                connect res_for_meas.P1 Junction1475 as Connection407
                connect res_for_meas.P2 Junction1476 as Connection410
                connect res_for_meas.P3 Junction1477 as Connection413
            }
            [
                position = 8144, 8312
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            port b {
                position = bottom:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 8432
                rotation = left
            ]

            port a {
                position = bottom:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 8472
                rotation = left
            ]

            port B {
                position = top:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 7976
                rotation = right
            ]

            port c {
                position = bottom:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8392
                rotation = left
            ]

            port A {
                position = top:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 7936
                rotation = right
            ]

            port C {
                position = top:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8016
                rotation = right
            ]

            connect A Meas1.A as Connection2626
            connect Brk.B Meas1.b as Connection2628
            connect Brk.a Meas2.A as Connection2630
            connect Brk.b Meas2.B as Connection2631
            connect Brk.c Meas2.C as Connection2632
            connect MID_Rly1.Brk_cmd Brk.control as Connection2604
            connect Meas1.B B as Connection2625
            connect Meas1.c Brk.C as Connection2627
            connect Meas1.a Brk.A as Connection2629
            connect Meas1.C C as Connection2624
            connect Meas1.I MID_Rly1.IABC as Connection2622
            connect Meas1.V MID_Rly1.VABC_grid as Connection2637
            connect Meas2.V MID_Rly1.VABC_load as Connection2636
            connect Meas2.a a as Connection2635
            connect Meas2.b b as Connection2634
            connect Meas2.c c as Connection2633
        }
        [
            position = 10696, 8400
            size = 80, 48
        ]

        component Subsystem Feeder3_trafo5 {
            layout = dynamic
            component "core/Three Phase Two Winding Transformer" Tr1 {
                L1 = "L1_2500kVA_2"
                L2 = "L2_2500kVA_2"
                Lm = "20"
                Poc1 = "5713.2"
                Psc1 = "14356.3488618"
                R1 = "R1_2500kVA_2"
                R2 = "R2_2500kVA_2"
                Rm = "1e5"
                Sn = "Sn_2500kVA_2"
                V1 = "V1_2500kVA_2"
                V2 = "V2_2500kVA_2"
                clock_number = "1"
                current_vals_SI = "[0.03135346870762468, 13.063945294843618]"
                current_vals_pu = "[0.0003671393455784708, 0.1529747273239725]"
                f = "sys_f"
                flux_vals_SI = "[31.18787204934705, 39.50463792917293]"
                flux_vals_pu = "[0.6024524548056571, 0.7631064427555065]"
                input = "SI"
                ioc1 = "3.03954982929"
                l1 = "0.0047375951244"
                l2 = "0.0142127853732"
                lm = "32.9929915311"
                r1 = "0.00143563488618"
                r2 = "0.00430690465855"
                rm = "437.583140797"
                usc1 = "1.98013555452"
                winding_1_connection = "D"
            }
            [
                position = 8192, 8192
                size = 126, 256
            ]

            port A1 {
                position = left:1
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8096
            ]

            port B1 {
                position = left:2
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8192
            ]

            port C1 {
                position = left:3
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8288
            ]

            port a2 {
                position = right:1
                kind = pe
                direction =  out
            }
            [
                position = 8304, 8096
                rotation = down
            ]

            port b2 {
                position = right:2
                kind = pe
                direction =  out
            }
            [
                position = 8304, 8192
                rotation = down
            ]

            port c2 {
                position = right:3
                kind = pe
                direction =  out
            }
            [
                position = 8304, 8288
                rotation = down
            ]

            port Ground {
                position = bottom:3
                kind = pe
                direction =  out
            }
            [
                position = 8304, 8376
                rotation = down
            ]

            connect Ground Tr1.n2 as Connection9
            connect Tr1.prm_1 A1 as Connection6
            connect Tr1.prm_2 B1 as Connection8
            connect Tr1.prm_3 C1 as Connection2
            connect Tr1.sec_1 a2 as Connection3
            connect Tr1.sec_2 b2 as Connection4
            connect Tr1.sec_3 c2 as Connection1
        }
        [
            position = 12816, 8352
            rotation = right
            scale = -1, 1
            size = 72, 64
        ]

        component "core/Transmission Line" Feeder3_line4 {
            C_imperial = "[[0.00233, 0.00140, 0.00140], [0.00140, 0.00233, 0.00140], [0.00140, 0.00140, 0.00233]]"
            C_sequence_metric = "[[5.089e-7, 0.0, 0.0], [0.0, 5.089e-7, 0.0], [0.0, 0.0, 5.089e-7]]"
            Frequency = "sys_f"
            L_sequence_imperial = "L_cable11"
            L_sequence_metric = "[[0.0020, 0.0, 0.0], [0.0, 3.0953e-4, 0.0], [0.0, 0.0, 3.0953e-4]]"
            Length_metric = "1.6764"
            Length_miles = "l_F3L4"
            R_sequence_imperial = "R_cable11"
            R_sequence_metric = "[[1.1405, 0.0, 0.0], [0.0, 0.0749, 0.0], [0.0, 0.0, 0.0749]]"
            model_def = "Sequence"
        }
        [
            position = 11520, 8184
            rotation = left
            size = 256, 72
        ]

        component Subsystem CIL_F3_Critical6 {
            layout = dynamic
            component pas_inductor La {
                inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
            }
            [
                position = 8232, 8136
            ]

            component pas_resistor Ra {
                resistance = "V**2/S*pf"
            }
            [
                position = 8136, 8136
            ]

            component pas_inductor Lb {
                inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
            }
            [
                position = 8232, 8192
            ]

            component pas_resistor Rb {
                resistance = "V**2/S*pf"
            }
            [
                position = 8136, 8192
            ]

            component pas_inductor Lc {
                inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
            }
            [
                position = 8232, 8248
            ]

            component pas_resistor Rc {
                resistance = "V**2/S*pf"
            }
            [
                position = 8136, 8248
            ]

            port A {
                label = "A"
                position = left:1
                kind = pe
            }
            [
                position = 8056, 8136
            ]

            port B {
                label = "B"
                position = left:2
                kind = pe
            }
            [
                position = 8056, 8192
            ]

            port C {
                label = "C"
                position = left:3
                kind = pe
            }
            [
                position = 8056, 8248
            ]

            junction Junction1 pe
            [
                position = 8288, 8192
            ]

            connect Junction1 Lc.n_node as Connection17
            connect La.n_node Junction1 as Connection16
            connect Lb.n_node Junction1 as Connection18
            connect Lb.p_node Rb.n_node as Connection13
            connect Ra.p_node A as Connection8
            connect Ra.n_node La.p_node as Connection12
            connect Rb.p_node B as Connection1
            connect Rc.p_node C as Connection10
            connect Rc.n_node Lc.p_node as Connection14

            S = "800e3"
            pf = ".9"

            mask {
                description = "Constant Impedance Load
hree-phase Y connected RL load.
and L values are calculated using the input parameters:
ated line-to-line voltage
ated three-phase power
f: Rated frequency
pf: Rated power factor
one of the parameters can be set to 0."

                V {
                    label = "Voltage"
                    widget = edit
                    type = generic
                    default_value = "480"
                    unit = "V"
                    group = "General"
                }

                S {
                    label = "Power"
                    widget = edit
                    type = generic
                    default_value = "2e6"
                    unit = "VA"
                    group = "General"
                }

                f {
                    label = "Frequency"
                    widget = edit
                    type = generic
                    default_value = "60"
                    unit = "Hz"
                    group = "General"
                }

                pf {
                    label = "Power Factor"
                    widget = edit
                    type = generic
                    default_value = ".8"
                    group = "General"
                }

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 11920, 8712
            rotation = right
            scale = -1, 1
            size = 48, 80
        ]

        component "core/Transmission Line" Feeder3_lineNGG {
            C_imperial = "[[0.00233, 0.00140, 0.00140], [0.00140, 0.00233, 0.00140], [0.00140, 0.00140, 0.00233]]"
            C_sequence_imperial = "C_cable11"
            C_sequence_metric = "[[5.089e-7, 0.0, 0.0], [0.0, 5.089e-7, 0.0], [0.0, 0.0, 5.089e-7]]"
            Frequency = "sys_f"
            L_sequence_imperial = "L_cable11"
            L_sequence_metric = "[[0.0020, 0.0, 0.0], [0.0, 3.0953e-4, 0.0], [0.0, 0.0, 3.0953e-4]]"
            Length_metric = "1.6764"
            Length_miles = "l_F1DG"
            R_sequence_imperial = "R_cable11"
            R_sequence_metric = "[[1.1405, 0.0, 0.0], [0.0, 0.0749, 0.0], [0.0, 0.0, 0.0749]]"
            model_def = "Sequence"
        }
        [
            position = 12256, 8792
            rotation = left
            size = 256, 72
        ]

        component Subsystem CIL_F3_Interruptible6 {
            layout = dynamic
            component pas_resistor Ra {
                resistance = "V**2/S*pf"
            }
            [
                position = 8136, 8136
            ]

            component pas_resistor Rb {
                resistance = "V**2/S*pf"
            }
            [
                position = 8136, 8192
            ]

            component pas_inductor Lb {
                inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
            }
            [
                position = 8232, 8192
            ]

            component pas_inductor Lc {
                inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
            }
            [
                position = 8232, 8248
            ]

            component pas_inductor La {
                inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
            }
            [
                position = 8232, 8136
            ]

            component pas_resistor Rc {
                resistance = "V**2/S*pf"
            }
            [
                position = 8136, 8248
            ]

            port A {
                label = "A"
                position = left:1
                kind = pe
            }
            [
                position = 8056, 8136
            ]

            port B {
                label = "B"
                position = left:2
                kind = pe
            }
            [
                position = 8056, 8192
            ]

            port C {
                label = "C"
                position = left:3
                kind = pe
            }
            [
                position = 8056, 8248
            ]

            junction Junction1 pe
            [
                position = 8288, 8192
            ]

            connect Junction1 Lc.n_node as Connection17
            connect La.n_node Junction1 as Connection16
            connect Lb.n_node Junction1 as Connection18
            connect Lb.p_node Rb.n_node as Connection13
            connect Ra.p_node A as Connection8
            connect Ra.n_node La.p_node as Connection12
            connect Rb.p_node B as Connection1
            connect Rc.p_node C as Connection10
            connect Rc.n_node Lc.p_node as Connection14

            S = "600e3"
            pf = ".9"

            mask {
                description = "Constant Impedance Load
hree-phase Y connected RL load.
and L values are calculated using the input parameters:
ated line-to-line voltage
ated three-phase power
f: Rated frequency
pf: Rated power factor
one of the parameters can be set to 0."

                V {
                    label = "Voltage"
                    widget = edit
                    type = generic
                    default_value = "480"
                    unit = "V"
                    group = "General"
                }

                S {
                    label = "Power"
                    widget = edit
                    type = generic
                    default_value = "2e6"
                    unit = "VA"
                    group = "General"
                }

                f {
                    label = "Frequency"
                    widget = edit
                    type = generic
                    default_value = "60"
                    unit = "Hz"
                    group = "General"
                }

                pf {
                    label = "Power Factor"
                    widget = edit
                    type = generic
                    default_value = ".8"
                    group = "General"
                }

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 11096, 8888
            rotation = right
            scale = -1, 1
            size = 48, 80
        ]

        component Subsystem F3_CB2 {
            layout = dynamic
            component Subsystem Brk {
                layout = dynamic
                component "core/Triple Pole Single Throw Contactor" S1 {
                    ctrl_src = "Model"
                }
                [
                    position = 8104, 8184
                    rotation = right
                ]

                port C {
                    position = left:1
                    kind = pe
                }
                [
                    position = 8200, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 8104, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port A {
                    position = left:3
                    kind = pe
                }
                [
                    position = 8008, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port c {
                    position = right:1
                    kind = pe
                }
                [
                    position = 8200, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port b {
                    position = right:2
                    kind = pe
                }
                [
                    position = 8104, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port a {
                    position = right:3
                    kind = pe
                }
                [
                    position = 8008, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port control {
                    position = bottom:auto
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8320, 8184
                    scale = -1, 1
                ]

                connect A S1.c_in as Connection6
                connect B S1.b_in as Connection5
                connect S1.a_in C as Connection4
                connect S1.c_out a as Connection1
                connect S1.b_out b as Connection2
                connect S1.a_out c as Connection3
                connect control S1.ctrl_in as Connection7
            }
            [
                position = 8144, 8200
                rotation = right
                size = 64, 64
            ]

            component Subsystem Meas1 {
                layout = dynamic
                component "core/Current Measurement" IB {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7432, 8024
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8352
                    rotation = right
                ]

                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8288
                    rotation = right
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7936, 8168
                    rotation = left
                ]

                component gen_bus_join "Bus Join2" {
                    inputs = "3"
                }
                [
                    position = 7576, 7784
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8224
                    rotation = right
                ]

                component "core/Current Measurement" IA {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7368, 7928
                ]

                component "core/Current Measurement" IC {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7496, 8120
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8192
                        rotation = right
                    ]

                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8192
                        rotation = right
                    ]

                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8192
                        rotation = right
                    ]

                    port P1 {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port P2 {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port P3 {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port P4 {
                        position = bottom:1
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    junction Junction1 pe
                    [
                        position = 8192, 8248
                    ]

                    junction Junction2 pe
                    [
                        position = 8192, 8248
                    ]

                    connect Junction1 P4 as Connection8
                    connect Junction2 Junction1 as Connection11
                    connect R1.n_node Junction1 as Connection7
                    connect R1.p_node P1 as Connection1
                    connect R2.n_node Junction2 as Connection10
                    connect R2.p_node P2 as Connection6
                    connect R3.n_node Junction2 as Connection12
                    connect R3.p_node P3 as Connection2
                }
                [
                    position = 7304, 8272
                    size = 64, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7224, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7224, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7224, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7936, 8112
                    rotation = left
                ]

                port I {
                    position = top:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7648, 7784
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1466 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1467 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1468 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1473 pe
                [
                    position = 7288, 7928
                ]

                junction Junction1474 pe
                [
                    position = 7304, 8024
                ]

                junction Junction1475 pe
                [
                    position = 7320, 8120
                ]

                junction Junction1476 pe
                [
                    position = 7568, 8432
                ]

                connect A Junction1473 as Connection404
                connect B Junction1474 as Connection407
                connect "Bus Join1.in1" VB.out as Connection387
                connect "Bus Join1.in2" VC.out as Connection388
                connect "Bus Join2.out" I as Connection393
                connect "Bus Join2.in1" IB.out as Connection391
                connect "Bus Join2.in2" IC.out as Connection392
                connect C Junction1475 as Connection410
                connect IA.out "Bus Join2.in" as Connection390
                connect IA.n_node Junction1466 as Connection377
                connect Junction1466 a as Connection299
                connect Junction1467 IB.n_node as Connection375
                connect Junction1467 b as Connection301
                connect Junction1468 IC.n_node as Connection376
                connect Junction1468 c as Connection302
                connect Junction1473 IA.p_node as Connection405
                connect Junction1474 IB.p_node as Connection408
                connect Junction1475 IC.p_node as Connection411
                connect Junction1476 Junction1421 as Connection415
                [
                    breakpoints = 7568, 8432; 7648, 8432; 7648, 8432
                ]
                connect V "Bus Join1.out" as Connection385
                connect V "Bus Join1.out" as Connection389
                connect VA.out "Bus Join1.in" as Connection386
                connect VA.n_node Junction1421 as Connection237
                connect VA.p_node Junction1466 as Connection240
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1467 as Connection243
                connect VC.p_node Junction1468 as Connection246
                connect VC.n_node Junction1476 as Connection414
                connect res_for_meas.P1 Junction1473 as Connection406
                connect res_for_meas.P2 Junction1474 as Connection409
                connect res_for_meas.P3 Junction1475 as Connection412
                connect res_for_meas.P4 Junction1476 as Connection416
            }
            [
                position = 8144, 8096
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            component Subsystem Meas2 {
                layout = dynamic
                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8256
                    rotation = right
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8192
                    rotation = right
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7960, 8120
                    rotation = left
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8320
                    rotation = right
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8192
                        rotation = right
                    ]

                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8192
                        rotation = right
                    ]

                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8192
                        rotation = right
                    ]

                    port P1 {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port P2 {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port P3 {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port P4 {
                        position = bottom:1
                        kind = pe
                    }
                    [
                        position = 8136, 8272
                        rotation = left
                    ]

                    port P5 {
                        position = bottom:2
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    port P6 {
                        position = bottom:3
                        kind = pe
                    }
                    [
                        position = 8248, 8272
                        rotation = left
                    ]

                    connect R1.p_node P1 as Connection1
                    connect R1.n_node P4 as Connection3
                    connect R2.p_node P2 as Connection6
                    connect R2.n_node P5 as Connection4
                    connect R3.p_node P3 as Connection2
                    connect R3.n_node P6 as Connection5
                }
                [
                    position = 7472, 8240
                    size = 64, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7400, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7400, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7400, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7960, 8064
                    rotation = left
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1470 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1471 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1472 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1474 pe
                [
                    position = 7472, 8432
                ]

                junction Junction1475 pe
                [
                    position = 7488, 8432
                ]

                junction Junction1476 pe
                [
                    position = 7568, 8432
                ]

                junction Junction1477 pe
                [
                    position = 7456, 7928
                ]

                junction Junction1478 pe
                [
                    position = 7472, 8024
                ]

                junction Junction1479 pe
                [
                    position = 7488, 8120
                ]

                connect A Junction1477 as Connection411
                connect B Junction1478 as Connection414
                connect C Junction1479 as Connection417
                connect Junction1470 VA.p_node as Connection389
                connect Junction1471 b as Connection392
                connect Junction1472 VC.p_node as Connection395
                connect Junction1474 res_for_meas.P5 as Connection401
                [
                    breakpoints = 7472, 8432; 7472, 8320
                ]
                connect Junction1475 Junction1474 as Connection407
                [
                    breakpoints = 7488, 8432
                ]
                connect Junction1475 Junction1476 as Connection410
                connect Junction1476 Junction1421 as Connection409
                [
                    breakpoints = 7648, 8432
                ]
                connect Junction1477 Junction1470 as Connection412
                connect Junction1478 Junction1471 as Connection415
                connect Junction1479 Junction1472 as Connection418
                connect V "Bus Join1.out" as Connection385
                connect VA.out "Bus Join1.in" as Connection397
                connect VA.n_node Junction1421 as Connection237
                connect VB.out "Bus Join1.in1" as Connection398
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1471 as Connection391
                connect VC.out "Bus Join1.in2" as Connection399
                connect VC.n_node Junction1476 as Connection408
                connect a Junction1470 as Connection388
                connect c Junction1472 as Connection394
                connect res_for_meas.P4 Junction1474 as Connection403
                [
                    breakpoints = 7456, 8320
                ]
                connect res_for_meas.P6 Junction1475 as Connection406
                connect res_for_meas.P1 Junction1477 as Connection413
                connect res_for_meas.P2 Junction1478 as Connection416
                connect res_for_meas.P3 Junction1479 as Connection419
            }
            [
                position = 8144, 8312
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            component Subsystem MID_Rly1 {
                layout = dynamic
                component gen_terminator Term4 {
                }
                [
                    position = 8152, 8200
                    rotation = down
                    scale = -1, 1
                ]

                component src_constant Constant1 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 8056, 7928
                ]

                component gen_terminator Term3 {
                }
                [
                    position = 8440, 7928
                ]

                component gen_bus_split "Bus Split3" {
                    outputs = "3"
                }
                [
                    position = 7576, 8000
                    rotation = right
                ]

                component gen_probe CB_state {
                }
                [
                    position = 7592, 8344
                    rotation = down
                ]

                component gen_delay Delay1 {
                    del_length = "int(3.0/60.0/Ts)"
                }
                [
                    position = 7880, 8344
                    rotation = down
                ]

                component gen_bus_split "Bus Split2" {
                    outputs = "3"
                }
                [
                    position = 7704, 8000
                    rotation = right
                ]

                component src_constant Constant2 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 7776, 8344
                    rotation = right
                ]

                component sys_signal_switch "Signal switch1" {
                    threshold = "0.5"
                }
                [
                    position = 7792, 8400
                    rotation = right
                ]

                component gen_terminator Term5 {
                }
                [
                    position = 8152, 8136
                    rotation = down
                    scale = -1, 1
                ]

                component gen_bus_split "Bus Split1" {
                    outputs = "3"
                }
                [
                    position = 7824, 8000
                    rotation = right
                ]

                component Subsystem SEL_787 {
                    layout = dynamic
                    component gen_gain Gain8 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8688
                    ]

                    component gen_c_function "pf bitwise" {
                        in_terminal_dimensions_str = "exp_imp inherit;lag_lead inherit;"
                        in_terminal_properties = "inherit exp_imp;inherit lag_lead;"
                        no_feed_inputs = "[u\'\']"
                        no_feed_outputs = "[u\'\']"
                        out_terminal_dimensions_str = "pf_states inherit;"
                        out_terminal_properties = "uint pf_states;"
                        output_fnc = "/*Begin code section*/
pf_states=(uint)exp_imp<<1 | (uint)lag_lead<<2;
/*End code section*/"
                    }
                    [
                        position = 9200, 8416
                    ]

                    component src_scada_input "Control Panel Input1" {
                        execution_rate = "Ts"
                        max = "1"
                        min = "0"
                        unit = ""
                    }
                    [
                        position = 8136, 8192
                    ]

                    component tm_delay "Unit Delay4" {
                    }
                    [
                        position = 9496, 8056
                    ]

                    component tm_delay "Unit Delay2" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7728, 8304
                        rotation = left
                    ]

                    component gen_logic_op "Logical operator1" {
                        inputs = "4"
                        operator = "OR"
                    }
                    [
                        position = 8720, 8128
                        rotation = left
                    ]

                    component gen_sum Sum3 {
                        signs = "3"
                    }
                    [
                        position = 7640, 8624
                    ]

                    component gen_bus_join "Bus Join1" {
                        inputs = "25"
                    }
                    [
                        position = 7928, 8080
                    ]

                    component tm_delay "Unit Delay5" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7840, 8392
                        rotation = left
                    ]

                    component gen_gain Gain1 {
                        gain = "2"
                    }
                    [
                        position = 7536, 8328
                        rotation = right
                    ]

                    component gen_gain Gain7 {
                        gain = "2"
                    }
                    [
                        position = 7512, 8624
                    ]

                    component gen_sum Sum1 {
                        signs = "5"
                    }
                    [
                        position = 7648, 8384
                    ]

                    component gen_gain Gain5 {
                        gain = "8"
                    }
                    [
                        position = 7512, 8432
                        rotation = left
                    ]

                    component gen_gain Gain6 {
                        gain = "16"
                    }
                    [
                        position = 7584, 8456
                        rotation = left
                    ]

                    component gen_c_function bitwise_faults {
                        in_terminal_dimensions_str = "Status inherit;R25 inherit;R27 inherit;R50 inherit;R51 inherit;R59 inherit;Reset inherit;"
                        in_terminal_properties = "inherit Status;inherit R25;inherit R27;inherit R50;inherit R51;inherit R59;inherit Reset;"
                        no_feed_inputs = "[]"
                        no_feed_outputs = "[]"
                        out_terminal_dimensions_str = "fault_status inherit;"
                        out_terminal_properties = "uint fault_status;"
                        output_fnc = "/*Begin code section*/
fault_status= (uint)Status<<1 | (uint)R25<<2 | (uint)R27<<3 | (uint)R50<<4 | (uint)R51<<5 | (uint)R59<<6 | (uint)Reset<<7;
/*End code section*/"
                    }
                    [
                        position = 9200, 8272
                    ]

                    component gen_logic_op not {
                        operator = "NOT"
                    }
                    [
                        position = 7440, 8624
                    ]

                    component gen_gain Gain4 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8384
                    ]

                    component gen_gain normalize {
                        gain = "np.sqrt(3.0)/13800.0"
                    }
                    [
                        position = 7320, 7720
                    ]

                    component gen_probe P {
                    }
                    [
                        position = 7384, 7560
                    ]

                    component gen_probe Q {
                    }
                    [
                        position = 7384, 7608
                    ]

                    component Subsystem "State Condition Mng" {
                        layout = dynamic
                        component gen_logic_op not1 {
                            operator = "NOT"
                        }
                        [
                            position = 8032, 8264
                        ]

                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8120, 8352
                            scale = 1, -1
                        ]

                        component gen_c_function "Trip_out mng fnc" {
                            in_terminal_dimensions_str = "bool_R25 inherit;op_mode_in inherit;trip_in inherit;enable inherit;initial_condition inherit;activate_logic inherit;"
                            in_terminal_properties = "real bool_R25;inherit op_mode_in;inherit trip_in;inherit enable;inherit initial_condition;inherit activate_logic;"
                            init_fnc = "/*Begin code section*/
trip_out = initial_condition;
/*End code section*/"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "trip_out inherit;"
                            out_terminal_properties = "real trip_out;"
                            output_fnc = "/*Begin code section*/
if(enable && activate_logic){
    if(op_mode_in==0){
        trip_out = trip_in*bool_R25;
    }
    else if(op_mode_in==1){
        trip_out = 1*bool_R25;
    }
    else if(op_mode_in==2){
        trip_out=0;
    }
}
/*End code section*/"
                        }
                        [
                            position = 8424, 8208
                        ]

                        component gen_logic_op not {
                            operator = "NOT"
                        }
                        [
                            position = 7840, 8200
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8200, 8336
                            scale = 1, -1
                        ]

                        component Subsystem detect_change {
                            layout = dynamic
                            component tm_delay "Unit Delay1" {
                            }
                            [
                                position = 8144, 8200
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "!="
                            }
                            [
                                position = 8240, 8192
                            ]

                            port Out1 {
                                label = "Out"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8304, 8192
                            ]

                            port In3 {
                                label = "In"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8032, 8200
                            ]

                            junction Junction1 sp
                            [
                                position = 8080, 8200
                            ]

                            connect Junction1 In3 as Connection1
                            connect "Relational operator1.in" Junction1 as Connection2
                            connect "Relational operator1.out" Out1 as Connection3
                            connect "Unit Delay1.in" Junction1 as Connection4
                            connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                        }
                        [
                            position = 7960, 8368
                            size = 48, 48
                        ]

                        port Trip_in {
                            label = "Trip_in"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7768, 8200
                        ]

                        port R25 {
                            label = "R25"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8232, 8128
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8272, 8160
                        ]

                        port trip_out {
                            label = "trip_out"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8536, 8208
                        ]

                        port enable {
                            label = "enable"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7952, 8264
                        ]

                        port initial_condition {
                            label = "initial_condition"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8248, 8232
                        ]

                        junction Junction2 sp
                        [
                            position = 7984, 8264
                        ]

                        junction Junction3 sp
                        [
                            position = 7904, 8200
                        ]

                        connect Junction2 enable as Connection150
                        connect Junction3 not.out as Connection158
                        connect R25 "Trip_out mng fnc.bool_R25" as Connection144
                        connect "SR Flip Flop1.r_in" not1.out as Connection136
                        connect Termination1.in "SR Flip Flop1.out_n" as Connection138
                        connect "Trip_out mng fnc.enable" Junction2 as Connection151
                        connect "Trip_out mng fnc.trip_in" Junction3 as Connection157
                        connect "Trip_out mng fnc.activate_logic" "SR Flip Flop1.out" as Connection154
                        connect detect_change.In3 Junction3 as Connection159
                        connect detect_change.Out1 "SR Flip Flop1.s_in" as Connection156
                        connect initial_condition "Trip_out mng fnc.initial_condition" as Connection152
                        connect not.in Trip_in as Connection139
                        connect not1.in Junction2 as Connection149
                        connect op_mode "Trip_out mng fnc.op_mode_in" as Connection145
                        connect trip_out "Trip_out mng fnc.trip_out" as Connection167
                    }
                    [
                        position = 9336, 8056
                        size = 128, 136
                    ]

                    component Subsystem Relay_Param {
                        layout = dynamic
                        component src_constant dF_threshold {
                            execution_rate = "Ts"
                            value = "dF_threshold"
                        }
                        [
                            position = 8088, 7760
                        ]

                        component sys_signal_switch "Signal switch1" {
                            threshold = "0.5"
                        }
                        [
                            position = 9104, 7808
                            scale = 1, -1
                        ]

                        component src_constant 27P_59P_tripDelay {
                            execution_rate = "Ts"
                            value = "R27P_R59P_tripDelay"
                        }
                        [
                            position = 8088, 7872
                        ]

                        component src_constant dV_threshold {
                            execution_rate = "Ts"
                            value = "dV_threshold"
                        }
                        [
                            position = 8088, 7648
                        ]

                        component src_constant Initial_status {
                            execution_rate = "Ts"
                            value = "Initial_status"
                        }
                        [
                            position = 8088, 7992
                        ]

                        component src_constant VRMSLL {
                            execution_rate = "Ts"
                            value = "VRMSLL"
                        }
                        [
                            position = 8088, 7592
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "3"
                        }
                        [
                            position = 8104, 8192
                            rotation = down
                            scale = -1, -1
                        ]

                        component gen_bus_join "Bus Join1" {
                            inputs = "4"
                        }
                        [
                            position = 8296, 7800
                            rotation = right
                        ]

                        component src_constant angle_threshold {
                            execution_rate = "Ts"
                            value = "angle_threshold"
                        }
                        [
                            position = 8088, 7704
                        ]

                        component src_constant CT_primary {
                            execution_rate = "Ts"
                            value = "CT_primary"
                        }
                        [
                            position = 8088, 7928
                        ]

                        component Subsystem Reset {
                            layout = dynamic
                            component gen_logic_op or {
                                operator = "OR"
                            }
                            [
                                position = 8152, 8192
                            ]

                            component Subsystem detect_change {
                                layout = dynamic
                                component tm_delay "Unit Delay1" {
                                }
                                [
                                    position = 8144, 8200
                                ]

                                component gen_rel_op "Relational operator1" {
                                    relational_op = "!="
                                }
                                [
                                    position = 8240, 8192
                                ]

                                port Out1 {
                                    label = "Out"
                                    position = right:1
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8304, 8192
                                ]

                                port In3 {
                                    label = "In"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8032, 8200
                                ]

                                junction Junction1 sp
                                [
                                    position = 8080, 8200
                                ]

                                connect Junction1 In3 as Connection1
                                connect "Relational operator1.in" Junction1 as Connection2
                                connect "Relational operator1.out" Out1 as Connection3
                                connect "Unit Delay1.in" Junction1 as Connection4
                                connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                            }
                            [
                                position = 8248, 8192
                                size = 48, 48
                            ]

                            port reset {
                                label = "Reset"
                                position = right:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8336, 8152
                            ]

                            port op_mode {
                                label = "Op_mode"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8344, 8240
                            ]

                            port "Reset in" {
                                label = "Reset in"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8168
                            ]

                            port "op_mode in" {
                                label = "op_mode in"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8224
                            ]

                            junction Junction1 sp
                            [
                                position = 8096, 8224
                            ]

                            connect Junction1 "op_mode in" as Connection1
                            connect detect_change.Out1 reset as Connection5
                            connect op_mode Junction1 as Connection6
                            connect or.in1 Junction1 as Connection3
                            connect or.in "Reset in" as Connection2
                            connect or.out detect_change.In3 as Connection4
                        }
                        [
                            position = 8280, 8192
                            rotation = down
                            scale = -1, -1
                            size = 104, 104
                        ]

                        component Subsystem Grid_Tied_param {
                            layout = dynamic
                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup1"
                            }
                            [
                                position = 8080, 7840
                                rotation = right
                            ]

                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup1"
                            }
                            [
                                position = 8416, 7840
                                rotation = right
                            ]

                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7904
                                rotation = right
                            ]

                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial1"
                            }
                            [
                                position = 8200, 7840
                                rotation = right
                            ]

                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup1"
                            }
                            [
                                position = 8312, 7840
                                rotation = right
                            ]

                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay1"
                            }
                            [
                                position = 8352, 7880
                                rotation = right
                            ]

                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType1"
                            }
                            [
                                position = 8240, 7880
                                rotation = right
                            ]

                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup1"
                            }
                            [
                                position = 8120, 7880
                                rotation = right
                            ]

                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8552, 8040
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7840
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7880
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7880
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8704, 8040
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8776, 7936
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 8872, 7728
                            size = 216, 104
                        ]

                        component Subsystem Islanded_param {
                            layout = dynamic
                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7920
                                rotation = right
                            ]

                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType2"
                            }
                            [
                                position = 8240, 7888
                                rotation = right
                            ]

                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup2"
                            }
                            [
                                position = 8400, 7856
                                rotation = right
                            ]

                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay2"
                            }
                            [
                                position = 8352, 7888
                                rotation = right
                            ]

                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup2"
                            }
                            [
                                position = 8120, 7888
                                rotation = right
                            ]

                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup2"
                            }
                            [
                                position = 8296, 7856
                                rotation = right
                            ]

                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8544, 8048
                            ]

                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup2"
                            }
                            [
                                position = 8072, 7856
                                rotation = right
                            ]

                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial2"
                            }
                            [
                                position = 8192, 7856
                                rotation = right
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7856
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7888
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7888
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8696, 8048
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8744, 7928
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 9224, 8040
                            size = 216, 104
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8160
                        ]

                        port reset {
                            label = "reset"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8224
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8360, 7856
                        ]

                        port Initial_condition {
                            label = "Initial_condition"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8192, 7992
                        ]

                        port from_Modbus {
                            label = "from_Modbus"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7992, 8192
                        ]

                        port relay_param {
                            label = "relay_param"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9200, 7808
                        ]

                        tag From4 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 9104, 7904
                            rotation = right
                            scale = 1, -1
                        ]

                        tag From1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7696
                        ]

                        tag From3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7760
                        ]

                        tag Goto1 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8232, 8280
                        ]

                        tag From2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8616, 7728
                        ]

                        tag Goto4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8208, 7544
                        ]

                        tag Goto2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7872
                        ]

                        tag Goto3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7928
                        ]

                        junction Junction1 sp
                        [
                            position = 8152, 7592
                        ]

                        junction Junction2 sp
                        [
                            position = 8736, 7696
                        ]

                        junction Junction3 sp
                        [
                            position = 8712, 7728
                        ]

                        junction Junction4 sp
                        [
                            position = 8688, 7760
                        ]

                        connect "Bus Join1.in" Junction1 as Connection54
                        connect "Bus Join1.in2" angle_threshold.out as Connection48
                        connect "Bus Join1.in3" dF_threshold.out as Connection49
                        connect "Bus Join1.in1" dV_threshold.out as Connection47
                        connect "Bus Split1.out1" "Reset.Reset in" as Connection75
                        connect "Bus Split1.in" from_Modbus as Connection42
                        connect From1 Junction2 as Connection60
                        connect From2 Junction3 as Connection63
                        connect From3 Junction4 as Connection66
                        connect From4 "Signal switch1.in2" as Connection71
                        connect Goto1 "Bus Split1.out2" as Connection45
                        connect Goto2 27P_59P_tripDelay.out as Connection51
                        connect Goto3 CT_primary.out as Connection52
                        connect Goto4 Junction1 as Connection56
                        connect Initial_condition Initial_status.out as Connection53
                        connect Islanded_param.VRMSLL Junction2 as Connection62
                        connect Islanded_param.27P_59P_tripDelay Junction3 as Connection65
                        connect Islanded_param.CT_primary Junction4 as Connection68
                        connect Junction1 VRMSLL.out as Connection55
                        connect Junction2 Grid_Tied_param.VRMSLL as Connection61
                        connect Junction3 Grid_Tied_param.27P_59P_tripDelay as Connection64
                        connect Junction4 Grid_Tied_param.CT_primary as Connection67
                        connect "Reset.op_mode in" "Bus Split1.out" as Connection76
                        connect Reset.op_mode op_mode as Connection43
                        connect Reset.reset reset as Connection44
                        connect "Signal switch1.in1" Grid_Tied_param.relay_param as Connection73
                        connect "Signal switch1.in" Islanded_param.relay_param as Connection72
                        connect relay_param "Signal switch1.out" as Connection74
                        connect relay_paramR25 "Bus Join1.out" as Connection50
                    }
                    [
                        position = 8344, 7976
                        size = 168, 160
                    ]

                    component Subsystem "Relay 25-Sync Check1" {
                        layout = dynamic
                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7784, 7832
                        ]

                        component gen_logic_op "Logical operator3" {
                            inputs = "3"
                        }
                        [
                            position = 8336, 8104
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8808, 7904
                        ]

                        component gen_c_function "Deadbus fcn" {
                            global_variables = "real threshold;uint a;uint c;uint b;"
                            in_terminal_dimensions_str = "Vbus inherit;Vline inherit;VRMSLL inherit;"
                            in_terminal_properties = "real Vbus;real Vline;real VRMSLL;"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "out inherit;"
                            output_fnc = "/*Begin code section*/
if (VRMSLL > 400)
    threshold=VRMSLL*0.003;
else
    threshold = VRMSLL*0.05;

if ((Vbus > (VRMSLL*0.90)) && (Vbus < (VRMSLL*1.20)) && (Vline < threshold))
    a = 1;
else
    a = 0;

if ((Vline > (VRMSLL*0.90)) && (Vline < (VRMSLL*1.20)) && (Vbus < threshold))
    b = 1;
else
    b = 0;

if ((Vline < threshold) && (Vbus < threshold))
    c = 1;
else
    c = 0;

out = a || b || c;
/*End code section*/"
                        }
                        [
                            position = 8208, 7672
                        ]

                        component gen_logic_op "Logical operator7" {
                            operator = "OR"
                        }
                        [
                            position = 8632, 7888
                        ]

                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8736, 7864
                        ]

                        component gen_rel_op "Relational operator1" {
                        }
                        [
                            position = 8464, 7856
                        ]

                        component gen_gain Gain3 {
                            gain = "1.0/10.0"
                        }
                        [
                            position = 7776, 8080
                        ]

                        component src_constant Constant2 {
                            execution_rate = "Ts"
                            value = "[2]"
                        }
                        [
                            position = 8368, 7848
                        ]

                        component gen_logic_op "Logical operator5" {
                            operator = "OR"
                        }
                        [
                            position = 8544, 7848
                        ]

                        component gen_gain Gain2 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7832
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "4"
                        }
                        [
                            position = 7808, 8424
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7784, 7776
                        ]

                        component gen_gain Gain1 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7776
                        ]

                        component gen_logic_op "Logical operator4" {
                            operator = "OR"
                        }
                        [
                            position = 8888, 8096
                        ]

                        component Subsystem "Voltage Comparator" {
                            layout = dynamic
                            component gen_gain Gain1 {
                                gain = "0.01"
                            }
                            [
                                position = 7680, 8200
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7856, 8048
                            ]

                            component gen_c_function "C function1" {
                                in_terminal_dimensions_str = "Vbus inherit;Vline inherit;"
                                in_terminal_properties = "real Vbus;inherit Vline;"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
out=fabs(Vline-Vbus);
/*End code section*/"
                            }
                            [
                                position = 7736, 8040
                            ]

                            component gen_product Product1 {
                            }
                            [
                                position = 7760, 8160
                            ]

                            port V_bus {
                                label = "V_bus"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port V_line {
                                label = "V_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7928, 8048
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8152
                            ]

                            port dV_threshold {
                                label = "dV_threshold"
                                position = left:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8200
                            ]

                            connect Gain1.in dV_threshold as Connection8
                            connect Product1.in1 Gain1.out as Connection7
                            connect Product1.out "Relational operator1.in1" as Connection9
                            connect Product1.in VRMSLL as Connection6
                            connect "Relational operator1.in" "C function1.out" as Connection2
                            connect "Relational operator1.out" Locked as Connection3
                            connect V_bus "C function1.Vbus" as Connection4
                            connect V_line "C function1.Vline" as Connection5
                        }
                        [
                            position = 8016, 7864
                            size = 112, 208
                        ]

                        component Subsystem "Phase Comparator" {
                            layout = dynamic
                            component gen_probe c_out {
                                addr = "17943"
                            }
                            [
                                position = 7768, 8000
                            ]

                            component gen_c_function "C function1" {
                                global_variables = "real mod_L;real wrap_out1;real wrap_out2;real mod_B;real k;real alpha;real PI2;real PI;"
                                in_terminal_dimensions_str = "phase_bus inherit;phase_line inherit;"
                                in_terminal_properties = "real phase_bus;real phase_line;"
                                init_fnc = "/*Begin code section*/
PI = 3.1415926536;
PI2 = 2*PI;
/*End code section*/"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
mod_L=fmod(phase_line, PI2);
mod_B=fmod(phase_bus, PI2);

if (fabs(mod_L - mod_B) > PI) {
    if (mod_L < mod_B)
        mod_B -= PI2;
    else
        mod_B += PI2;
}

out=fabs(mod_L-mod_B)*180.0/PI;
/*End code section*/"
                            }
                            [
                                position = 7656, 8040
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7808, 8056
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8056
                            ]

                            port wt_grid {
                                label = "wt_grid"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8008
                            ]

                            port wt_gen {
                                label = "wt_gen"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8072
                            ]

                            port angle_threshold {
                                label = "angle_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7576, 8136
                            ]

                            junction Junction1 sp
                            [
                                position = 7736, 8048
                            ]

                            connect Junction1 "C function1.out" as Connection2
                            connect Locked "Relational operator1.out" as Connection3
                            connect "Relational operator1.in" Junction1 as Connection4
                            connect angle_threshold "Relational operator1.in1" as Connection8
                            connect c_out.in Junction1 as Connection5
                            connect wt_gen "C function1.phase_line" as Connection6
                            connect wt_grid "C function1.phase_bus" as Connection7
                        }
                        [
                            position = 8016, 8272
                            size = 112, 88
                        ]

                        component Subsystem "Freq Comparator" {
                            layout = dynamic
                            component gen_c_function "C function1" {
                                in_terminal_dimensions_str = "fbus inherit;fline inherit;"
                                in_terminal_properties = "real fbus;inherit fline;"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
out=fabs(fline-fbus);
/*End code section*/"
                            }
                            [
                                position = 7736, 8040
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7832, 8048
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8048
                            ]

                            port f_bus {
                                label = "f_bus"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port f_line {
                                label = "f_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port dF_threshold {
                                label = "dF_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7728, 8112
                            ]

                            connect "Relational operator1.in" "C function1.out" as Connection6
                            connect "Relational operator1.out" Locked as Connection8
                            connect "Relational operator1.in1" dF_threshold as Connection7
                            connect f_bus "C function1.fbus" as Connection4
                            connect f_line "C function1.fline" as Connection5
                        }
                        [
                            position = 8016, 8104
                            size = 112, 88
                        ]

                        port trip_or {
                            label = "trip_or"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7792
                        ]

                        port mode_in {
                            label = "mode_in"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7896
                        ]

                        port bool_R25 {
                            label = "bool_R25"
                            position = auto:auto
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9032, 8096
                        ]

                        port Va {
                            label = "Va"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7776
                        ]

                        port Vline_a {
                            label = "Vline_A"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7832
                        ]

                        port bus_freq {
                            label = "bus_freq"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8080
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7824, 8104
                        ]

                        port bus_wt {
                            label = "bus_wt"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7776, 8248
                        ]

                        port line_wt {
                            label = "line_wt"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7832, 8272
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8424
                        ]

                        tag From4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7888
                        ]

                        tag From5 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8112, 7688
                        ]

                        tag Goto4 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8448
                        ]

                        tag Goto1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8056, 8400
                            rotation = down
                            scale = -1, 1
                        ]

                        tag From2 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8128
                        ]

                        tag From3 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7944
                        ]

                        tag From1 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8296
                        ]

                        tag Goto2 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8416
                            rotation = down
                            scale = -1, 1
                        ]

                        tag Goto3 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7912, 8432
                        ]

                        junction Junction4 sp
                        [
                            position = 7920, 7832
                        ]

                        junction Junction5 sp
                        [
                            position = 8536, 8104
                        ]

                        junction Junction23 sp
                        [
                            position = 7904, 7776
                        ]

                        connect "Bus Split1.in" relay_paramR25 as Connection69
                        connect Constant2.out "Relational operator1.in" as Connection1
                        connect "Deadbus fcn.Vbus" Junction23 as Connection103
                        connect "Deadbus fcn.out" "SR Flip Flop1.s_in" as Connection137
                        connect "Freq Comparator.Locked" "Logical operator3.in1" as Connection135
                        connect "Freq Comparator.f_line" line_freq as Connection133
                        connect From1 "Phase Comparator.angle_threshold" as Connection74
                        connect From2 "Freq Comparator.dF_threshold" as Connection79
                        connect From3 "Voltage Comparator.dV_threshold" as Connection80
                        connect From4 "Voltage Comparator.VRMSLL" as Connection81
                        connect From5 "Deadbus fcn.VRMSLL" as Connection90
                        connect Gain3.out "Freq Comparator.f_bus" as Connection132
                        connect Goto1 "Bus Split1.out" as Connection70
                        connect Goto2 "Bus Split1.out1" as Connection71
                        connect Goto3 "Bus Split1.out2" as Connection72
                        connect Goto4 "Bus Split1.out3" as Connection73
                        connect Junction23 Gain1.out as Connection16
                        connect Junction4 "Deadbus fcn.Vline" as Connection104
                        connect Junction4 Gain2.out as Connection21
                        connect Junction5 "Logical operator4.in1" as Connection22
                        connect "Logical operator3.out" Junction5 as Connection24
                        connect "Logical operator3.in2" "Phase Comparator.Locked" as Connection134
                        connect "Logical operator5.out" "Logical operator7.in" as Connection26
                        connect "Logical operator5.in1" "Relational operator1.out" as Connection27
                        connect "Logical operator5.in" trip_or as Connection28
                        connect "Logical operator7.in1" Junction5 as Connection29
                        connect "Logical operator7.out" "SR Flip Flop1.r_in" as Connection30
                        connect "Phase Comparator.wt_grid" bus_wt as Connection110
                        connect "RMS value1.out" Gain1.in as Connection93
                        connect "RMS value2.out" Gain2.in as Connection97
                        connect "Relational operator1.in1" mode_in as Connection36
                        connect "SR Flip Flop1.out" "Logical operator4.in" as Connection37
                        connect "SR Flip Flop1.out_n" Termination1.in as Connection38
                        connect Va "RMS value1.in" as Connection101
                        connect Vline_a "RMS value2.in" as Connection102
                        connect "Voltage Comparator.V_bus" Junction23 as Connection47
                        connect "Voltage Comparator.V_line" Junction4 as Connection48
                        connect "Voltage Comparator.Locked" "Logical operator3.in" as Connection136
                        connect bool_R25 "Logical operator4.out" as Connection138
                        connect bus_freq Gain3.in as Connection121
                        connect line_wt "Phase Comparator.wt_gen" as Connection111
                    }
                    [
                        position = 8888, 7800
                        size = 120, 232
                    ]

                    component Subsystem R50512761 {
                        layout = dynamic
                        component src_constant Ts {
                            execution_rate = "Ts"
                            value = "Ts"
                        }
                        [
                            position = 7696, 7712
                            rotation = right
                        ]

                        component gen_c_function Relays {
                            global_variables = "real R50;real R51;real R27;real R59;real n50;real n51;real n59;real n27;real t59;real t50;real t51;real bool_27;real t27;real bool_59;uint i;real bool_51;real bool_50;real A;real B;real P;real Ipu50;real Ipu51;real CT_tap;real ratio[3];real M[3];real t51s[3];real Iinst[3];real Irms[3];real Vrms[3];"
                            in_terminal_dimensions_str = "enable inherit;Ts inherit;Reset inherit;IinstA inherit;IinstB inherit;IinstC inherit;IrmsA inherit;IrmsB inherit;IrmsC inherit;VrmsA inherit;VrmsB inherit;VrmsC inherit;VRMSLN inherit;CT_p inherit;IOC_pickup inherit;IOC_tripDelay inherit;TOC_pickup inherit;curveType inherit;timeDial inherit;UV_pickup inherit;OV_pickup inherit;UVOV_tripDelay inherit;"
                            in_terminal_properties = "real enable;inherit Ts;inherit Reset;inherit IinstA;inherit IinstB;inherit IinstC;inherit IrmsA;inherit IrmsB;inherit IrmsC;inherit VrmsA;inherit VrmsB;inherit VrmsC;inherit VRMSLN;inherit CT_p;inherit IOC_pickup;inherit IOC_tripDelay;inherit TOC_pickup;inherit curveType;inherit timeDial;inherit UV_pickup;inherit OV_pickup;inherit UVOV_tripDelay;"
                            init_fnc = "/*Begin code section*/
R50=0;
R51=0;
R27=0;
R59=0;

n50=0;
n51=0;
n59=0;
n27=0;

CT_tap = 1.0;

A = 5.67;
B = 0.0352;
P = 2.0;

t59 = 0;
t50 = 0;
t51 = 0;
t27 = 0;

bool_27 = 0;
bool_59 = 0;
bool_51 = 0;
bool_50 = 0;
/*End code section*/"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "trip50 inherit;trip51 inherit;trip27 inherit;trip59 inherit;"
                            out_terminal_properties = "real trip50;real trip51;real trip27;real trip59;"
                            output_fnc = "/*Begin code section*/
Iinst[0] = fabs(IinstA);
Iinst[1] = fabs(IinstB);
Iinst[2] = fabs(IinstC);

Irms[0] = IrmsA;
Irms[1] = IrmsB;
Irms[2] = IrmsC;

Vrms[0] = VrmsA;
Vrms[1] = VrmsB;
Vrms[2] = VrmsC;

if (Reset==1) {
    R50=0;
    R51=0;
    R59=0;
    R27=0;
    bool_50 = 0.0;
}

for(i=0; i<3; i++){
    Iinst[i] = Iinst[i]*5.0/CT_p;
    Irms[i] = Irms[i]*5.0/CT_p;
}

if(curveType==1){
    A = 0.0104;
    B = 0.0226;
    P = 0.02;
}
else if(curveType==2){
    A = 5.95;
    B = 0.180;
    P = 2.0;
}
else if(curveType==3){
    A = 3.88;
    B = 0.0923;
    P = 2.0;
}
else{
    A = 5.67;
    B = 0.0352;
    P = 2.0;
}

if (!((R50 == 1) || (R51 == 1))&&(enable==1)){
    
    if((UV_pickup>1)||(UV_pickup==0)){
        UV_pickup = 0.9;
    }
    if((OV_pickup<1)||(OV_pickup==0)){
        OV_pickup = 1.1;
    }
    
    Ipu50 = IOC_pickup*CT_tap*sqrt(2.0);
    Ipu51 = TOC_pickup*CT_tap;
    
    for(i=0; i<3; i++){
        ratio[i] = Vrms[i]/VRMSLN;
        M[i] = Irms[i]/Ipu51;
        if(M[i]<=1.0){
            t51s[i] = 1e6;
        }
        else{
            t51s[i] = timeDial*(B+(A/(pow(M[i],P)-1)));
        }
    }
    
    t27 = 0.004167 + UVOV_tripDelay;
    t50 = 0.004167 + IOC_tripDelay;
    t59 = 0.004167 + UVOV_tripDelay;
    
    if((t51s[0]<=t51s[1])&&(t51s[0]<=t51s[2])){
        t51 = t51s[0];
    }
    else if(t51s[1]<=t51s[2]){
        t51 = t51s[1];
    }
    else{
        t51 = t51s[2];
    }
    
    for(i=0; i<3; i++){
        if(ratio[i]<=UV_pickup){
            bool_27 = 1;
            break;
        }
        else{
            bool_27 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Irms[i]>Ipu51){
            bool_51 = 1;
            break;
        }
        else{
            bool_51 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Iinst[i]>Ipu50){
            bool_50 = 1;
            break;
        }
    }
    for(i=0; i<3; i++){
        if(ratio[i]>=OV_pickup){
            bool_59 = 1;
            break;
        }
        else{
            bool_59 = 0;
        }
    }
    //bool_27 = ((ratio[0]<=UV_pickup)+(ratio[1]<=UV_pickup)+(ratio[2]<=UV_pickup))>0;
    //bool_59 = ((ratio[0]>=OV_pickup)+(ratio[1]>=OV_pickup)+(ratio[2]>=OV_pickup))>0;
    //bool_50 = ((Iinst[0]>Ipu50)+(Iinst[1]>Ipu50)+(Iinst[2]>Ipu50))>0;
    //bool_51 = ((Irms[0]>Ipu51)+(Irms[1]>Ipu51)+(Irms[2]>Ipu51))>0;
    
    n50 *= bool_50;
    n51 *= bool_51;
    n27 *= bool_27;
    n59 *= bool_59;

    n50 += bool_50  * Ts;
    n51 += bool_51  * Ts;
    n27 += bool_27  * Ts;
    n59 += bool_59  * Ts;

    if(n50 > t50)
        R50 = 1;
    else
        R50 = 0;

    if(n51 > t51)
        R51 = 1;
    else
        R51 = 0;

    if(n27 > t27)
        R27 = 1;
    else
        R27 = 0;

    if(n59 > t59)
        R59 = 1;
    else
        R59 = 0;
}

trip50 = R50;
trip51 = R51;
trip27 = R27;
trip59 = R59;
/*End code section*/"
                        }
                        [
                            position = 7784, 8008
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "10"
                        }
                        [
                            position = 7560, 8248
                            rotation = left
                        ]

                        port trip_50 {
                            label = "trip_50"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7848
                        ]

                        port trip_51 {
                            label = "trip_51"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7952
                        ]

                        port trip_59 {
                            label = "trip_59"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8160
                        ]

                        port trip_27 {
                            label = "trip_27"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8056
                        ]

                        port relay_param {
                            label = "Relay Param"
                            position = left:12
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7560, 8328
                            rotation = left
                        ]

                        port Irms_c {
                            label = "Irms_c"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7368, 7752
                            rotation = right
                        ]

                        port Irms_a {
                            label = "Irms_a"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7472, 7752
                            rotation = right
                        ]

                        port Enable {
                            label = "Enable"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7736, 7752
                            rotation = right
                        ]

                        port Iinst_a {
                            label = "Iinst_a"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7608, 7712
                            rotation = right
                        ]

                        port Irms_b {
                            label = "Irms_b"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7424, 7712
                            rotation = right
                        ]

                        port Iinst_b {
                            label = "Iinst_b"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7568, 7752
                            rotation = right
                        ]

                        port Reset {
                            label = "Reset"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7656, 7752
                            rotation = right
                        ]

                        port Iinst_c {
                            label = "Iinst_c"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7520, 7712
                            rotation = right
                        ]

                        port Vrms_b {
                            label = "Vrms_b"
                            position = left:10
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7256, 7752
                            rotation = right
                        ]

                        port Vrms_c {
                            label = "Vrms_c"
                            position = left:11
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7200, 7712
                            rotation = right
                        ]

                        port Vrms_a {
                            label = "Vrms_a"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7312, 7712
                            rotation = right
                        ]

                        comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus split:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                        [
                            position = 7728, 8224
                        ]

                        connect "Bus Split1.out3" Relays.IOC_tripDelay as Connection43
                        connect "Bus Split1.out5" Relays.curveType as Connection41
                        connect "Bus Split1.out6" Relays.timeDial as Connection40
                        connect "Bus Split1.out4" Relays.TOC_pickup as Connection42
                        connect "Bus Split1.out9" Relays.UVOV_tripDelay as Connection37
                        connect "Bus Split1.out2" Relays.IOC_pickup as Connection44
                        connect "Bus Split1.out1" Relays.CT_p as Connection45
                        connect "Bus Split1.out" Relays.VRMSLN as Connection46
                        connect "Bus Split1.out7" Relays.UV_pickup as Connection39
                        connect "Bus Split1.out8" Relays.OV_pickup as Connection38
                        connect "Bus Split1.in" relay_param as Connection36
                        connect Enable Relays.enable as Connection47
                        connect Iinst_a Relays.IinstA as Connection50
                        connect Iinst_b Relays.IinstB as Connection51
                        connect Iinst_c Relays.IinstC as Connection52
                        connect Irms_a Relays.IrmsA as Connection53
                        connect Irms_b Relays.IrmsB as Connection54
                        connect Irms_c Relays.IrmsC as Connection55
                        connect Reset Relays.Reset as Connection49
                        connect Ts.out Relays.Ts as Connection48
                        connect Vrms_a Relays.VrmsA as Connection56
                        connect Vrms_b Relays.VrmsB as Connection57
                        connect Vrms_c Relays.VrmsC as Connection58
                        connect trip_27 Relays.trip27 as Connection77
                        connect trip_50 Relays.trip50 as Connection76
                        connect trip_51 Relays.trip51 as Connection75
                        connect trip_59 Relays.trip59 as Connection78
                    }
                    [
                        position = 8424, 8328
                        size = 144, 304
                    ]

                    component Subsystem "CALC FROM MEASUREMENTS" {
                        layout = dynamic
                        component gen_rms_value "RMS value6" {
                        }
                        [
                            position = 7064, 8256
                        ]

                        component gen_terminator Termination13 {
                        }
                        [
                            position = 6864, 9368
                        ]

                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7064, 7984
                        ]

                        component gen_terminator Termination4 {
                        }
                        [
                            position = 7088, 9072
                        ]

                        component gen_gain Gain4 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8504
                        ]

                        component gen_gain Gain11 {
                            gain = "10.0"
                        }
                        [
                            position = 7432, 8400
                        ]

                        component gen_terminator Termination5 {
                        }
                        [
                            position = 7304, 8488
                        ]

                        component gen_gain Gain3 {
                            gain = "10"
                        }
                        [
                            position = 7064, 7792
                        ]

                        component gen_terminator Termination9 {
                        }
                        [
                            position = 7336, 8368
                        ]

                        component gen_rms_value "RMS value3" {
                        }
                        [
                            position = 7064, 8048
                        ]

                        component "core/Three phase PLL" "Three phase PLL1" {
                        }
                        [
                            position = 7224, 8392
                        ]

                        component gen_gain Gain7 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8824
                        ]

                        component gen_gain Gain6 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8704
                        ]

                        component gen_terminator Termination11 {
                        }
                        [
                            position = 6864, 9256
                        ]

                        component gen_gain Gain8 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8976
                        ]

                        component gen_gain Gain2 {
                            gain = "10"
                        }
                        [
                            position = 7048, 7696
                        ]

                        component gen_rms_value "RMS value5" {
                        }
                        [
                            position = 7064, 8192
                        ]

                        component gen_terminator Termination12 {
                        }
                        [
                            position = 6864, 9312
                        ]

                        component "core/Three phase PLL" "Three phase PLL2" {
                        }
                        [
                            position = 6760, 9408
                        ]

                        component gen_terminator Termination8 {
                        }
                        [
                            position = 7336, 8312
                        ]

                        component msr_phasor_3ph "Three Phase Phasor2" {
                        }
                        [
                            position = 6968, 8560
                        ]

                        component msr_phasor_3ph "Three Phase Phasor1" {
                        }
                        [
                            position = 6904, 7752
                        ]

                        component gen_PQ_transform "PQ Power Meter1" {
                        }
                        [
                            position = 6936, 8952
                        ]

                        component gen_gain Gain10 {
                            gain = "100.0"
                        }
                        [
                            position = 7064, 9168
                        ]

                        component gen_terminator Termination10 {
                        }
                        [
                            position = 6856, 9472
                        ]

                        component gen_gain Gain9 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7032, 9120
                        ]

                        component gen_rms_value "RMS value4" {
                        }
                        [
                            position = 7064, 8128
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7064, 7920
                        ]

                        component gen_terminator Termination7 {
                        }
                        [
                            position = 7336, 8256
                        ]

                        component gen_gain Gain1 {
                            gain = "10"
                        }
                        [
                            position = 7000, 7592
                        ]

                        component gen_terminator Termination3 {
                        }
                        [
                            position = 7048, 9016
                        ]

                        component gen_gain Gain5 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8600
                        ]

                        component Subsystem Subsystem1 {
                            layout = dynamic
                            component gen_abs Abs2 {
                            }
                            [
                                position = 7720, 7896
                            ]

                            component src_constant Constant2 {
                                execution_rate = "Ts"
                                value = "[0]"
                            }
                            [
                                position = 7752, 8048
                            ]

                            component gen_logic_op "Logical operator1" {
                            }
                            [
                                position = 7976, 7856
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7800
                            ]

                            component src_constant Constant1 {
                                execution_rate = "Ts"
                            }
                            [
                                position = 7768, 7856
                            ]

                            component gen_abs Abs1 {
                            }
                            [
                                position = 7720, 7792
                            ]

                            component gen_rel_op "Relational operator4" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8096
                            ]

                            component gen_rel_op "Relational operator3" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8000
                            ]

                            component gen_rel_op "Relational operator2" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7904
                            ]

                            component Subsystem Subsystem3 {
                                layout = dynamic
                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8008
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8032, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 Out1 as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect "Multiport signal switch1.ctrl" u as Connection4
                                connect "Unit Delay1.out" Junction1 as Connection5
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection6
                            }
                            [
                                position = 8152, 8104
                                size = 112, 56
                            ]

                            component Subsystem Subsystem2 {
                                layout = dynamic
                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7576, 8032
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7648, 8056
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8072, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 "Unit Delay1.out" as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect Out1 Junction1 as Connection4
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection5
                                connect u "Multiport signal switch1.ctrl" as Connection6
                            }
                            [
                                position = 8152, 8008
                                size = 112, 56
                            ]

                            port P {
                                label = "P"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 7992
                            ]

                            port Q {
                                label = "Q"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 8088
                            ]

                            port "Lagging or Leading" {
                                label = "Lag or Lead"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8104
                            ]

                            port "Exporting or Importing" {
                                label = "export or import"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8008
                            ]

                            junction Junction1 sp
                            [
                                position = 7560, 8088
                            ]

                            junction Junction4 sp
                            [
                                position = 7592, 7992
                            ]

                            junction Junction11 sp
                            [
                                position = 7808, 7856
                            ]

                            junction Junction13 sp
                            [
                                position = 7824, 8048
                            ]

                            junction Junction14 sp
                            [
                                position = 8040, 8016
                            ]

                            connect Abs1.in Junction1 as Connection1
                            connect Abs1.out "Relational operator1.in" as Connection2
                            connect Abs2.out "Relational operator2.in" as Connection3
                            connect Constant1.out Junction11 as Connection8
                            connect Constant2.out Junction13 as Connection9
                            connect "Exporting or Importing" Subsystem2.Out1 as Connection10
                            connect Junction11 "Relational operator1.in1" as Connection12
                            connect Junction13 "Relational operator3.in1" as Connection14
                            connect Junction14 Subsystem3.E as Connection45
                            connect Junction4 Abs2.in as Connection39
                            connect Junction4 P as Connection18
                            connect "Lagging or Leading" Subsystem3.Out1 as Connection22
                            connect "Logical operator1.out" Junction14 as Connection44
                            connect Q Junction1 as Connection26
                            connect "Relational operator1.out" "Logical operator1.in" as Connection27
                            connect "Relational operator2.in1" Junction11 as Connection28
                            connect "Relational operator2.out" "Logical operator1.in1" as Connection29
                            connect "Relational operator3.in" Junction4 as Connection42
                            connect "Relational operator3.out" Subsystem2.u as Connection31
                            connect "Relational operator4.in" Junction1 as Connection40
                            connect "Relational operator4.in1" Junction13 as Connection32
                            connect "Relational operator4.out" Subsystem3.u as Connection34
                            connect Subsystem2.E Junction14 as Connection46
                        }
                        [
                            position = 7240, 8912
                            size = 112, 80
                        ]

                        port Ia {
                            label = "Ia"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7920
                        ]

                        port Ia_rms {
                            label = "Ia_rms"
                            position = right:7
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7920
                        ]

                        port Ib {
                            label = "Ib"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7984
                        ]

                        port Ib_rms {
                            label = "Ib_rms"
                            position = right:8
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7984
                        ]

                        port Ic {
                            label = "Ic"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8048
                        ]

                        port Ic_rms {
                            label = "Ic_rms"
                            position = right:9
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8048
                        ]

                        port Va {
                            label = "Va"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8128
                        ]

                        port Va_rms {
                            label = "Va_rms"
                            position = right:10
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8128
                        ]

                        port Vb {
                            label = "Vb"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8192
                        ]

                        port Vc {
                            label = "Vc"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8256
                        ]

                        port Vb_rms {
                            label = "Vb_rms"
                            position = right:11
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8192
                        ]

                        port Vc_rms {
                            label = "Vc_rms"
                            position = right:12
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8256
                        ]

                        port P {
                            label = "P"
                            position = right:19
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7160, 8824
                        ]

                        port Q {
                            label = "Q"
                            position = right:20
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7168, 8976
                        ]

                        port S {
                            label = "S"
                            position = right:21
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7112, 9120
                        ]

                        port pf {
                            label = "pf"
                            position = right:22
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7144, 9168
                        ]

                        port Ia_mag {
                            label = "Ia_mag"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7536
                        ]

                        port Ia_phase {
                            label = "Ia_phase"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7592
                        ]

                        port Ib_mag {
                            label = "Ib_mag"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7640
                        ]

                        port Ib_phase {
                            label = "Ib_phase"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7696
                        ]

                        port Ic_mag {
                            label = "Ic_mag"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7744
                        ]

                        port Ic_phase {
                            label = "Ic_phase"
                            position = right:6
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7792
                        ]

                        port Va_mag {
                            label = "Va_mag"
                            position = right:13
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8456
                        ]

                        port Va_phase {
                            label = "Va_phase"
                            position = right:14
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8504
                        ]

                        port Vb_mag {
                            label = "Vb_mag"
                            position = right:15
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8552
                        ]

                        port Vb_phase {
                            label = "Vb_phase"
                            position = right:16
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8600
                        ]

                        port Vc_mag {
                            label = "Vc_mag"
                            position = right:17
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8648
                        ]

                        port Vc_phase {
                            label = "Vc_phase"
                            position = right:18
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8704
                        ]

                        port "Export Import" {
                            label = "Export Import"
                            position = right:28
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7344, 8928
                        ]

                        port "Lag Lead" {
                            label = "Lag Lead"
                            position = right:27
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7392, 8888
                        ]

                        port bus_freq {
                            label = "Bus_freq"
                            position = right:23
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7512, 8400
                        ]

                        port bus_wt {
                            label = "Bus_wt"
                            position = right:24
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7440, 8456
                        ]

                        port Vline_a {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9352
                        ]

                        port Vline_b {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9408
                        ]

                        port Vline_c {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9464
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = right:25
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9416
                        ]

                        port line_wt {
                            label = "Line_wt"
                            position = right:26
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9464
                        ]

                        junction Junction23 sp
                        [
                            position = 6752, 8128
                        ]

                        junction Junction24 sp
                        [
                            position = 6768, 8192
                        ]

                        junction Junction25 sp
                        [
                            position = 6784, 8256
                        ]

                        junction Junction34 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction35 sp
                        [
                            position = 6656, 7920
                        ]

                        junction Junction37 sp
                        [
                            position = 6672, 7984
                        ]

                        junction Junction39 sp
                        [
                            position = 6752, 8360
                        ]

                        junction Junction41 sp
                        [
                            position = 6768, 8392
                        ]

                        junction Junction42 sp
                        [
                            position = 6784, 8424
                        ]

                        junction Junction44 sp
                        [
                            position = 6768, 8568
                        ]

                        junction Junction45 sp
                        [
                            position = 6784, 8584
                        ]

                        junction Junction46 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction48 sp
                        [
                            position = 6752, 8536
                        ]

                        junction Junction49 sp
                        [
                            position = 6928, 8536
                        ]

                        junction Junction50 sp
                        [
                            position = 7056, 8888
                        ]

                        junction Junction51 sp
                        [
                            position = 7056, 8928
                        ]

                        junction Junction52 sp
                        [
                            position = 6752, 8128
                        ]

                        junction Junction53 sp
                        [
                            position = 6656, 7920
                        ]

                        connect "Export Import" "Subsystem1.Exporting or Importing" as Connection110
                        connect Gain1.out Ia_phase as Connection87
                        connect Gain10.in "PQ Power Meter1.k_factor" as Connection105
                        connect Gain11.in "Three phase PLL1.freq" as Connection107
                        connect Gain2.out Ib_phase as Connection89
                        connect Gain3.in "Three Phase Phasor1.phase3" as Connection91
                        connect Gain4.in "Three Phase Phasor2.phase1" as Connection92
                        connect Gain4.out Va_phase as Connection93
                        connect Gain5.out Vb_phase as Connection95
                        connect Gain6.in "Three Phase Phasor2.phase3" as Connection97
                        connect Gain7.in Junction50 as Connection112
                        connect Gain8.in Junction51 as Connection115
                        connect Gain8.out Q as Connection101
                        connect Gain9.in "PQ Power Meter1.apparent" as Connection103
                        connect Ia Junction35 as Connection2
                        connect Ia_mag "Three Phase Phasor1.out1" as Connection3
                        connect Ia_rms "RMS value1.out" as Connection4
                        connect Ib Junction37 as Connection5
                        connect Ib_rms "RMS value2.out" as Connection6
                        connect Ic Junction34 as Connection7
                        connect Ic_phase Gain3.out as Connection90
                        connect Ic_rms "RMS value3.out" as Connection9
                        connect Junction23 Junction39 as Connection10
                        connect Junction23 Va as Connection11
                        connect Junction24 Junction41 as Connection12
                        connect Junction24 "RMS value5.in" as Connection13
                        connect Junction24 Vb as Connection14
                        connect Junction25 Junction42 as Connection15
                        connect Junction25 "RMS value6.in" as Connection16
                        connect Junction37 "RMS value2.in" as Connection18
                        connect Junction39 "Three phase PLL1.va" as Connection20
                        connect Junction41 "Three phase PLL1.vb" as Connection21
                        connect Junction42 "Three phase PLL1.vc" as Connection22
                        connect Junction44 Junction41 as Connection23
                        connect Junction45 Junction42 as Connection24
                        connect Junction46 Junction34 as Connection25
                        connect Junction48 Junction39 as Connection27
                        connect Junction49 Junction48 as Connection28
                        connect Junction50 "PQ Power Meter1.Pdc" as Connection113
                        [
                            breakpoints = 7056, 8888
                        ]
                        connect Junction51 "PQ Power Meter1.Qdc" as Connection116
                        [
                            breakpoints = 7056, 8928
                        ]
                        connect Junction52 Junction23 as Connection119
                        connect Junction53 Junction35 as Connection122
                        connect P Gain7.out as Connection98
                        connect "PQ Power Meter1.ia" Junction35 as Connection30
                        connect "PQ Power Meter1.ib" Junction37 as Connection31
                        connect "PQ Power Meter1.vb" Junction44 as Connection33
                        connect "PQ Power Meter1.vc" Junction45 as Connection34
                        connect "PQ Power Meter1.ic" Junction46 as Connection35
                        connect "PQ Power Meter1.va" Junction48 as Connection36
                        connect "RMS value1.in" Junction53 as Connection121
                        connect "RMS value3.in" Junction34 as Connection38
                        connect "RMS value4.in" Junction52 as Connection118
                        connect S Gain9.out as Connection102
                        connect Subsystem1.P Junction50 as Connection114
                        connect Subsystem1.Q Junction51 as Connection117
                        connect "Subsystem1.Lagging or Leading" "Lag Lead" as Connection111
                        connect Termination10.in "Three phase PLL2.sin_theta" as Connection45
                        connect Termination11.in "Three phase PLL2.d_axis" as Connection46
                        connect Termination12.in "Three phase PLL2.q_axis" as Connection47
                        connect Termination13.in "Three phase PLL2.zero_axis" as Connection48
                        connect Termination3.in "PQ Power Meter1.Pac" as Connection50
                        connect Termination4.in "PQ Power Meter1.Qac" as Connection51
                        connect Termination5.in "Three phase PLL1.sin_theta" as Connection52
                        connect Termination7.in "Three phase PLL1.d_axis" as Connection53
                        connect Termination8.in "Three phase PLL1.q_axis" as Connection54
                        connect Termination9.in "Three phase PLL1.zero_axis" as Connection55
                        connect "Three Phase Phasor1.phase1" Gain1.in as Connection86
                        connect "Three Phase Phasor1.phase2" Gain2.in as Connection88
                        connect "Three Phase Phasor1.out2" Ib_mag as Connection57
                        connect "Three Phase Phasor1.out3" Ic_mag as Connection59
                        connect "Three Phase Phasor1.in2" Junction37 as Connection60
                        connect "Three Phase Phasor1.in3" Junction46 as Connection61
                        connect "Three Phase Phasor1.in_ref" Junction52 as Connection120
                        connect "Three Phase Phasor1.in1" Junction53 as Connection123
                        connect "Three Phase Phasor2.phase2" Gain5.in as Connection94
                        connect "Three Phase Phasor2.in2" Junction44 as Connection64
                        connect "Three Phase Phasor2.in3" Junction45 as Connection65
                        connect "Three Phase Phasor2.in1" Junction49 as Connection67
                        connect "Three Phase Phasor2.in_ref" Junction49 as Connection66
                        connect "Three Phase Phasor2.out1" Va_mag as Connection68
                        connect "Three Phase Phasor2.out2" Vb_mag as Connection70
                        connect "Three Phase Phasor2.out3" Vc_mag as Connection72
                        connect "Three phase PLL2.freq" line_freq as Connection73
                        connect Va_rms "RMS value4.out" as Connection74
                        connect Vb_rms "RMS value5.out" as Connection75
                        connect Vc Junction25 as Connection76
                        connect Vc_phase Gain6.out as Connection96
                        connect Vc_rms "RMS value6.out" as Connection78
                        connect Vline_a "Three phase PLL2.va" as Connection79
                        connect Vline_b "Three phase PLL2.vb" as Connection80
                        connect Vline_c "Three phase PLL2.vc" as Connection81
                        connect bus_freq Gain11.out as Connection106
                        connect bus_wt "Three phase PLL1.theta" as Connection83
                        connect line_wt "Three phase PLL2.theta" as Connection84
                        connect pf Gain10.out as Connection104
                    }
                    [
                        position = 6992, 8104
                        size = 112, 664
                    ]

                    port OUTPUT {
                        label = "OUTPUT"
                        position = bottom:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9704, 8056
                    ]

                    port Ia {
                        label = "Ia"
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7816
                    ]

                    port Ib {
                        label = "Ib"
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7888
                    ]

                    port Ic {
                        label = "Ic"
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7960
                    ]

                    port Va {
                        label = "Va"
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8032
                    ]

                    port Vb {
                        label = "Vb"
                        position = left:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8104
                    ]

                    port Vc {
                        label = "Vc"
                        position = left:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8176
                    ]

                    port Vline_a {
                        label = "Vline_A"
                        position = left:7
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8248
                    ]

                    port faults_status {
                        label = "Fault_status"
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8272
                    ]

                    port TO_MODBUS {
                        label = "To_Modbus"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8024, 8080
                    ]

                    port Vline_b {
                        label = "Vline_B"
                        position = left:8
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8320
                    ]

                    port Vline_c {
                        label = "Vline_C"
                        position = left:9
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8392
                    ]

                    port cb_state {
                        label = "cb_state"
                        position = left:10
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7312, 8624
                    ]

                    port pf_states {
                        label = "pf_state"
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8416
                        scale = 1, -1
                    ]

                    port from_Modbus {
                        label = "From Modbus"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8144, 7976
                    ]

                    tag Goto7 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 8024
                        scale = 1, -1
                    ]

                    tag From5 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7520, 8504
                    ]

                    tag From6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7584, 8560
                        rotation = right
                    ]

                    tag From29 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8032
                    ]

                    tag From10 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8272
                    ]

                    tag From34 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7896
                    ]

                    tag Goto22 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7248, 7832
                        rotation = left
                    ]

                    tag Goto5 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9088, 7752
                    ]

                    tag Goto9 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8000
                    ]

                    tag Goto24 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 8304
                    ]

                    tag Goto15 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7856
                    ]

                    tag From27 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8408
                    ]

                    tag Goto4 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8424
                    ]

                    tag From25 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8360
                    ]

                    tag From35 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8456
                    ]

                    tag From2 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7480, 8288
                    ]

                    tag From14 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7704
                    ]

                    tag Goto21 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 7688
                        rotation = left
                    ]

                    tag From3 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7392, 8384
                    ]

                    tag Goto11 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7376, 8256
                    ]

                    tag Goto2 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8248
                    ]

                    tag Goto10 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8272
                    ]

                    tag From16 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7776
                    ]

                    tag From24 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8312
                    ]

                    tag From18 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7800
                    ]

                    tag From4 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7448, 8464
                    ]

                    tag From30 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9024, 8408
                    ]

                    tag From31 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9096, 8424
                    ]

                    tag From37 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7848
                    ]

                    tag Goto19 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 7832
                        rotation = left
                    ]

                    tag From15 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7728
                    ]

                    tag From32 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8104
                    ]

                    tag From28 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8384
                    ]

                    tag Goto29 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 7952
                        scale = 1, -1
                    ]

                    tag Goto18 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7088, 7688
                        rotation = left
                    ]

                    tag From11 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8880, 8256
                    ]

                    tag Goto8 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8216
                    ]

                    tag Goto13 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7296, 8288
                    ]

                    tag Goto17 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7104, 7760
                        rotation = left
                    ]

                    tag Goto6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9640, 8096
                    ]

                    tag From9 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8992, 8240
                        rotation = down
                        scale = -1, 1
                    ]

                    tag From22 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8288
                    ]

                    tag From33 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9120, 8080
                    ]

                    tag From36 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8216
                    ]

                    tag From13 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8320
                    ]

                    tag Goto23 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 8000
                        scale = 1, -1
                    ]

                    tag From12 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9032, 8288
                    ]

                    tag Goto16 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7928
                    ]

                    tag From1 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7600, 8280
                        rotation = right
                    ]

                    tag Goto12 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7224, 8256
                    ]

                    tag From17 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7752
                    ]

                    tag From20 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8240
                    ]

                    tag From26 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8432
                    ]

                    tag Goto26 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8296, 8152
                    ]

                    tag From7 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9072, 8224
                        rotation = down
                        scale = -1, -1
                    ]

                    tag Goto3 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8336
                    ]

                    tag From23 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8336
                    ]

                    tag Goto1 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8160
                    ]

                    tag From19 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7824
                    ]

                    tag From8 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9104, 8304
                    ]

                    tag Goto28 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7928
                        scale = 1, -1
                    ]

                    tag Goto20 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7232, 7760
                        rotation = left
                    ]

                    tag Goto25 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8320
                    ]

                    tag Goto14 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7784
                    ]

                    tag From21 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8264
                    ]

                    tag Goto27 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7976
                        scale = 1, -1
                    ]

                    tag Goto34 {
                        value = "F3_CB2_BREAKER"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7424, 7768
                        hide_name = True
                    ]

                    tag Goto31 {
                        value = "F3_CB2_P_REACTIVE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7424, 7696
                        hide_name = True
                    ]

                    tag Goto30 {
                        value = "F3_CB2_P_REAL"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7424, 7672
                        hide_name = True
                    ]

                    tag Goto33 {
                        value = "F3_CB2_FREQUENCY"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7424, 7744
                        hide_name = True
                    ]

                    tag Goto32 {
                        value = "F3_CB2_VOLTAGE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7424, 7720
                        hide_name = True
                    ]

                    junction Junction51 sp
                    [
                        position = 8720, 8056
                    ]

                    junction Junction100 sp
                    [
                        position = 8536, 8192
                    ]

                    junction Junction101 sp
                    [
                        position = 8536, 8280
                    ]

                    junction Junction104 sp
                    [
                        position = 9016, 7800
                    ]

                    junction Junction105 sp
                    [
                        position = 9584, 8056
                    ]

                    junction Junction106 sp
                    [
                        position = 7368, 8624
                    ]

                    junction Junction108 sp
                    [
                        position = 6688, 8248
                    ]

                    junction Junction109 sp
                    [
                        position = 6696, 8032
                    ]

                    junction Junction110 sp
                    [
                        position = 7304, 8240
                    ]

                    junction Junction111 sp
                    [
                        position = 6640, 7816
                    ]

                    junction Junction112 sp
                    [
                        position = 6640, 7888
                    ]

                    junction Junction113 sp
                    [
                        position = 6640, 7960
                    ]

                    junction Junction114 sp
                    [
                        position = 7088, 7984
                    ]

                    junction Junction115 sp
                    [
                        position = 7104, 8000
                    ]

                    junction Junction116 sp
                    [
                        position = 7120, 8016
                    ]

                    junction Junction117 sp
                    [
                        position = 7216, 8032
                    ]

                    junction Junction118 sp
                    [
                        position = 7232, 8048
                    ]

                    junction Junction119 sp
                    [
                        position = 7248, 8064
                    ]

                    junction Junction120 sp
                    [
                        position = 8536, 8368
                    ]

                    junction Junction121 sp
                    [
                        position = 8536, 8456
                    ]

                    junction Junction122 sp
                    [
                        position = 8216, 8192
                    ]

                    junction Junction123 sp
                    [
                        position = 7272, 8176
                    ]

                    junction Junction124 sp
                    [
                        position = 7280, 8192
                    ]

                    junction Junction125 sp
                    [
                        position = 7160, 8032
                    ]

                    junction Junction126 sp
                    [
                        position = 7320, 8240
                    ]

                    junction Junction127 sp
                    [
                        position = 7336, 8624
                    ]

                    junction Junction128 sp
                    [
                        position = 7320, 7672
                    ]

                    junction Junction129 sp
                    [
                        position = 7344, 7696
                    ]

                    comment Comment4 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Status</p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8256
                    ]

                    comment Comment3 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52B</p></body></html> ENDCOMMENT 
                    [
                        position = 7432, 8720
                    ]

                    comment Comment5 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">pf_states </p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8400
                    ]

                    comment Comment2 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52A</p></body></html> ENDCOMMENT 
                    [
                        position = 7400, 8568
                    ]

                    connect "Bus Join1.in21" "CALC FROM MEASUREMENTS.pf" as Connection149
                    connect "Bus Join1.in17" "CALC FROM MEASUREMENTS.Vc_phase" as Connection140
                    connect "Bus Join1.in3" "CALC FROM MEASUREMENTS.Ib_phase" as Connection132
                    connect "Bus Join1.in20" "CALC FROM MEASUREMENTS.S" as Connection144
                    connect "Bus Join1.in15" "CALC FROM MEASUREMENTS.Vb_phase" as Connection135
                    connect "Bus Join1.in5" "CALC FROM MEASUREMENTS.Ic_phase" as Connection133
                    connect "Bus Join1.in13" "CALC FROM MEASUREMENTS.Va_phase" as Connection134
                    connect "Bus Join1.in6" Junction114 as Connection268
                    connect "Bus Join1.in9" Junction117 as Connection283
                    connect "Bus Join1.in10" Junction118 as Connection286
                    connect "Bus Join1.in18" Junction123 as Connection382
                    connect "Bus Join1.in19" Junction124 as Connection385
                    connect "Bus Join1.in22" Junction126 as Connection391
                    connect "CALC FROM MEASUREMENTS.Ib_mag" "Bus Join1.in2" as Connection6
                    connect "CALC FROM MEASUREMENTS.Ia_phase" "Bus Join1.in1" as Connection131
                    connect "CALC FROM MEASUREMENTS.Ic_mag" "Bus Join1.in4" as Connection2
                    connect "CALC FROM MEASUREMENTS.Vb_mag" "Bus Join1.in14" as Connection1
                    connect "CALC FROM MEASUREMENTS.Vc_mag" "Bus Join1.in16" as Connection4
                    connect "CALC FROM MEASUREMENTS.Va_mag" "Bus Join1.in12" as Connection3
                    connect "CALC FROM MEASUREMENTS.Ia_mag" "Bus Join1.in" as Connection5
                    connect "CALC FROM MEASUREMENTS.line_freq" Goto10 as Connection224
                    connect "CALC FROM MEASUREMENTS.line_wt" Goto13 as Connection245
                    connect "CALC FROM MEASUREMENTS.Vline_a" Junction108 as Connection217
                    connect "CALC FROM MEASUREMENTS.Va" Junction109 as Connection218
                    connect "CALC FROM MEASUREMENTS.Ia" Junction111 as Connection257
                    connect "CALC FROM MEASUREMENTS.Ib" Junction112 as Connection256
                    connect "CALC FROM MEASUREMENTS.Ic" Junction113 as Connection258
                    connect "CALC FROM MEASUREMENTS.Ib_rms" Junction115 as Connection271
                    connect "CALC FROM MEASUREMENTS.Ic_rms" Junction116 as Connection274
                    connect "CALC FROM MEASUREMENTS.Vc_rms" Junction119 as Connection289
                    connect "Control Panel Input1.out" Junction122 as Connection381
                    connect From1 Sum1.in as Connection167
                    connect From10 bitwise_faults.R50 as Connection197
                    connect From11 bitwise_faults.R27 as Connection195
                    connect From12 bitwise_faults.R51 as Connection199
                    connect From13 bitwise_faults.Reset as Connection210
                    connect From14 "Relay 25-Sync Check1.Va" as Connection219
                    connect From15 "Relay 25-Sync Check1.Vline_a" as Connection220
                    connect From16 "Relay 25-Sync Check1.line_freq" as Connection225
                    connect From17 "Relay 25-Sync Check1.bus_freq" as Connection238
                    connect From18 "Relay 25-Sync Check1.bus_wt" as Connection244
                    connect From19 "Relay 25-Sync Check1.line_wt" as Connection246
                    connect From2 Gain1.in as Connection168
                    connect From20 R50512761.Iinst_a as Connection336
                    connect From21 R50512761.Iinst_b as Connection337
                    connect From22 R50512761.Iinst_c as Connection338
                    connect From23 R50512761.Irms_b as Connection340
                    connect From24 R50512761.Irms_a as Connection339
                    connect From25 R50512761.Irms_c as Connection341
                    connect From26 R50512761.Vrms_c as Connection344
                    connect From27 R50512761.Vrms_b as Connection343
                    connect From28 R50512761.Vrms_a as Connection342
                    connect From29 "State Condition Mng.op_mode" as Connection309
                    connect From3 Gain4.in as Connection169
                    connect From30 "pf bitwise.exp_imp" as Connection313
                    connect From31 "pf bitwise.lag_lead" as Connection312
                    connect From32 "State Condition Mng.enable" as Connection318
                    connect From33 "State Condition Mng.initial_condition" as Connection319
                    connect From34 "Relay 25-Sync Check1.relay_paramR25" as Connection320
                    connect From35 R50512761.relay_param as Connection321
                    connect From36 R50512761.Reset as Connection335
                    connect From37 "Relay 25-Sync Check1.mode_in" as Connection334
                    connect From4 Gain5.in as Connection171
                    connect From5 Gain6.in as Connection173
                    connect From7 bitwise_faults.Status as Connection203
                    connect From8 bitwise_faults.R59 as Connection201
                    connect From9 bitwise_faults.R25 as Connection193
                    connect Gain1.out Sum1.in1 as Connection21
                    connect Gain4.out Sum1.in2 as Connection170
                    connect Gain5.out Sum1.in3 as Connection172
                    connect Gain6.out Sum1.in4 as Connection174
                    connect Gain7.out Sum3.in1 as Connection180
                    connect Gain8.in Junction106 as Connection186
                    connect Gain8.out Sum3.in2 as Connection183
                    connect Goto1 Junction100 as Connection152
                    connect Goto11 Junction110 as Connection242
                    connect Goto12 "CALC FROM MEASUREMENTS.bus_wt" as Connection243
                    connect Goto14 Junction111 as Connection249
                    connect Goto15 Junction112 as Connection252
                    connect Goto16 Junction113 as Connection255
                    connect Goto17 Junction115 as Connection273
                    connect Goto19 Junction116 as Connection276
                    connect Goto2 Junction101 as Connection155
                    connect Goto22 Junction119 as Connection367
                    connect Goto23 Relay_Param.op_mode as Connection329
                    connect Goto24 "CALC FROM MEASUREMENTS.Lag Lead" as Connection310
                    connect Goto25 "CALC FROM MEASUREMENTS.Export Import" as Connection311
                    connect Goto27 Relay_Param.Initial_condition as Connection331
                    connect Goto28 Relay_Param.relay_param as Connection333
                    connect Goto29 Relay_Param.relay_paramR25 as Connection332
                    connect Goto30 Junction128 as Connection399
                    connect Goto31 Junction129 as Connection402
                    connect Goto32 normalize.out as Connection397
                    connect Goto33 Junction126 as Connection393
                    connect Goto34 Junction127 as Connection396
                    connect Goto4 Junction121 as Connection298
                    connect Goto5 Junction104 as Connection164
                    connect Goto6 Junction105 as Connection178
                    connect Goto7 Relay_Param.reset as Connection330
                    connect Goto8 Junction108 as Connection213
                    connect Goto9 Junction109 as Connection216
                    connect Ia Junction111 as Connection247
                    connect Ib Junction112 as Connection250
                    connect Ic Junction113 as Connection253
                    connect Junction100 "Logical operator1.in" as Connection196
                    connect Junction101 "Logical operator1.in1" as Connection198
                    connect Junction101 R50512761.trip_51 as Connection154
                    connect Junction104 "State Condition Mng.R25" as Connection303
                    connect Junction105 "Unit Delay4.out" as Connection202
                    connect Junction106 not.in as Connection185
                    connect Junction110 "CALC FROM MEASUREMENTS.bus_freq" as Connection241
                    connect Junction114 "CALC FROM MEASUREMENTS.Ia_rms" as Connection269
                    connect Junction114 Goto18 as Connection355
                    connect Junction115 "Bus Join1.in7" as Connection272
                    connect Junction116 "Bus Join1.in8" as Connection275
                    connect Junction117 Goto21 as Connection365
                    connect Junction117 Junction125 as Connection388
                    connect Junction118 "CALC FROM MEASUREMENTS.Vb_rms" as Connection287
                    connect Junction118 Goto20 as Connection366
                    connect Junction119 "Bus Join1.in11" as Connection290
                    connect Junction120 Goto3 as Connection296
                    connect Junction121 R50512761.trip_59 as Connection299
                    connect Junction122 Goto26 as Connection380
                    connect Junction123 "CALC FROM MEASUREMENTS.P" as Connection383
                    connect Junction124 "CALC FROM MEASUREMENTS.Q" as Connection386
                    connect Junction125 "CALC FROM MEASUREMENTS.Va_rms" as Connection389
                    connect Junction126 Junction110 as Connection392
                    connect Junction127 Junction106 as Connection395
                    connect Junction128 Junction123 as Connection400
                    connect Junction129 Junction124 as Connection403
                    connect Junction51 "State Condition Mng.Trip_in" as Connection302
                    connect "Logical operator1.in2" Junction120 as Connection297
                    connect "Logical operator1.in3" Junction121 as Connection300
                    connect "Logical operator1.out" Junction51 as Connection79
                    connect OUTPUT Junction105 as Connection176
                    connect P.in Junction128 as Connection401
                    connect Q.in Junction129 as Connection404
                    connect R50512761.trip_50 Junction100 as Connection150
                    connect R50512761.trip_27 Junction120 as Connection295
                    connect R50512761.Enable Junction122 as Connection379
                    connect "Relay 25-Sync Check1.bool_R25" Junction104 as Connection162
                    connect "Relay 25-Sync Check1.trip_or" Junction51 as Connection94
                    connect Sum3.in From6 as Connection179
                    connect Sum3.out "Unit Delay5.in" as Connection190
                    connect TO_MODBUS "Bus Join1.out" as Connection101
                    connect "Unit Delay2.out" "Bus Join1.in23" as Connection175
                    connect "Unit Delay2.in" Sum1.out as Connection104
                    connect "Unit Delay4.in" "State Condition Mng.trip_out" as Connection304
                    connect "Unit Delay5.out" "Bus Join1.in24" as Connection191
                    connect Va Junction109 as Connection214
                    connect Vb "CALC FROM MEASUREMENTS.Vb" as Connection108
                    connect Vc "CALC FROM MEASUREMENTS.Vc" as Connection109
                    connect Vline_a Junction108 as Connection211
                    connect Vline_b "CALC FROM MEASUREMENTS.Vline_b" as Connection111
                    connect Vline_c "CALC FROM MEASUREMENTS.Vline_c" as Connection112
                    connect cb_state Junction127 as Connection394
                    connect faults_status bitwise_faults.fault_status as Connection368
                    connect from_Modbus Relay_Param.from_Modbus as Connection328
                    connect normalize.in Junction125 as Connection398
                    connect not.out Gain7.in as Connection181
                    connect "pf bitwise.pf_states" pf_states as Connection369

                    CT_primary = "1200"
                    R27P_R59P_tripDelay = "2"
                    R27P_pickup1 = ".7"
                    R27P_pickup2 = ".5"
                    R50P_tripDelay2 = "0.0"
                    R51P_curveType2 = "1"
                    R51P_pickup1 = ".2"
                    R51P_pickup2 = ".2"
                    R51P_timeDial2 = "1"
                    R59P_pickup1 = "1.2"
                    R59P_pickup2 = "1.2"

                    mask {
                        description = "This block implements the relay SEL 787 with protective functions 25 (synchronism check), 27 (Under Voltage), 50 (Instantaneous Overcurrent), 51 (Time Overcurrent) and 59 (Overvoltage). 

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            The relay outputs to Modbus are: 0 - Ia_mag; 1 - Ia_phase; 2 - Ib_mag; 3 - Ib_phase; 4 - Ic_mag; 5 - Ic_phase; 6 - Ia_rms; 7 - Ib_rms; 8 - Ic_rms; 9 - Va_rms; 10 - Vb_rms; 11 - Vc_rms; 12 - Va_mag; 13 - Va_phase; 14 - Vb_mag; 15 - Vb_phase; 16 - Vc_mag; 17 - Vc_phase; 18 - P; 19 - Q; 20 - S; 21 - pf; 22 - Bus_freq; 23 - protection functions status; 24 - Circuit Breaker status.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
he relay inputs from Modbus are: 2001 - op_mode; 2002 - Reset; 2003 - protection_mode.

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            The trip pickups for functions 50 and 51 are defined as currents in the secondary of the current transformer. The secondary ot the CT has 5 turns."

                        VRMSLL {
                            label = "Line to Line RMS voltage"
                            widget = edit
                            type = generic
                            default_value = "13800.0"
                            unit = "V"
                            group = "Base Parameters"
                        }

                        dV_threshold {
                            label = "Voltage deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "5.0"
                            unit = "%"
                            group = "Base Parameters"
                        }

                        angle_threshold {
                            label = "Angle deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "12.0"
                            unit = "degree"
                            group = "Base Parameters"
                        }

                        dF_threshold {
                            label = "Frequency deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Hz"
                            group = "Base Parameters"
                        }

                        R27P_R59P_tripDelay {
                            label = "R27 UV and R59 OV trip delay"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Sec"
                            group = "Base Parameters"
                        }

                        CT_primary {
                            label = "CT primary turns number"
                            widget = edit
                            type = generic
                            default_value = "600"
                            group = "Base Parameters"
                        }

                        Initial_status {
                            label = "Initial relay status"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "Base Parameters"
                        }

                        R50P_pickup1 {
                            label = "R50 IOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R50P_tripDelay1 {
                            label = "R50 IOC trip delay 1"
                            widget = edit
                            type = generic
                            default_value = "0"
                            unit = "sec"
                            group = "GridTied Parameters"
                        }

                        R51P_pickup1 {
                            label = "R51 TOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.8"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R51P_curveType1 {
                            label = "R51 TOC curve type 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R51P_timeDial1 {
                            label = "R51 TOC time dial 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R27P_pickup1 {
                            label = "R27 UV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R59P_pickup1 {
                            label = "R59 OV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R50P_pickup2 {
                            label = "R50 IOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R50P_tripDelay2 {
                            label = "R50 IOC trip delay 2"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            unit = "sec"
                            group = "Islanded Parameters"
                        }

                        R51P_pickup2 {
                            label = "R51 TOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.7"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R51P_curveType2 {
                            label = "R51 TOC curve type 2"
                            widget = edit
                            type = generic
                            default_value = "2.0"
                            group = "Islanded Parameters"
                        }

                        R51P_timeDial2 {
                            label = "R51 TOC time dial 2"
                            widget = edit
                            type = generic
                            default_value = "3.0"
                            group = "Islanded Parameters"
                        }

                        R27P_pickup2 {
                            label = "R27 UV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        R59P_pickup2 {
                            label = "R59 OV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE
                    }
                }
                [
                    position = 7952, 8168
                    size = 152, 240
                ]

                component "core/ModBus Device" "ModBus Device1" {
                    configuration = "configF3_CB2"
                    execution_rate = "Ts"
                }
                [
                    position = 8272, 8000
                    size = 184, 184
                ]

                port Brk_cmd {
                    label = "Brk_cmd"
                    position = bottom:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7792, 8496
                    rotation = right
                ]

                port IABC {
                    label = "IABC"
                    position = right:3
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7792, 7936
                ]

                port VABC_grid {
                    label = "VABC_grid"
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7640, 7936
                ]

                port VABC_load {
                    label = "VABC_load"
                    position = left:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7528, 7936
                ]

                junction Junction1391 sp
                [
                    position = 8120, 7928
                ]

                junction Junction1392 sp
                [
                    position = 8120, 7976
                ]

                junction Junction1393 sp
                [
                    position = 7952, 8344
                ]

                junction Junction1396 sp
                [
                    position = 7792, 8448
                ]

                junction Junction1397 sp
                [
                    position = 7648, 8344
                ]

                comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset the relay when input is 1</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Operation Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 1 force the breaker closed</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 0 turns on logic based operation</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Protection Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 1 use islanded parameters</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 0 use grid tied parameters</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                [
                    position = 7968, 8328
                ]

                connect Brk_cmd Junction1396 as Connection899
                connect "Bus Split1.out" SEL_787.Ia as Connection934
                connect "Bus Split2.out2" SEL_787.Vc as Connection914
                connect "Bus Split2.out" SEL_787.Va as Connection912
                connect "Bus Split2.out1" SEL_787.Vb as Connection913
                connect "Bus Split3.out1" SEL_787.Vline_b as Connection929
                connect "Bus Split3.out2" SEL_787.Vline_c as Connection930
                connect "Bus Split3.out" SEL_787.Vline_a as Connection928
                connect CB_state.in Junction1397 as Connection905
                connect Constant2.out "Signal switch1.in1" as Connection880
                connect Delay1.out "Signal switch1.in" as Connection2
                connect IABC "Bus Split1.in" as Connection933
                connect Junction1391 Constant1.out as Connection852
                connect Junction1391 "ModBus Device1.coil_in" as Connection313
                connect Junction1392 Junction1391 as Connection314
                connect Junction1393 Delay1.in as Connection867
                connect Junction1396 "Signal switch1.out" as Connection902
                connect Junction1397 Junction1396 as Connection904
                connect "ModBus Device1.discrete_in" Junction1392 as Connection467
                connect "ModBus Device1.holding_in" Junction1392 as Connection466
                connect "ModBus Device1.holding_out" SEL_787.from_Modbus as Connection932
                connect "ModBus Device1.coil_out" Term3.in as Connection854
                connect SEL_787.Ib "Bus Split1.out1" as Connection935
                connect SEL_787.Ic "Bus Split1.out2" as Connection936
                connect SEL_787.OUTPUT Junction1393 as Connection868
                connect SEL_787.cb_state Junction1397 as Connection903
                connect SEL_787.TO_MODBUS "ModBus Device1.reg_in" as Connection931
                connect SEL_787.pf_states Term4.in as Connection897
                connect "Signal switch1.in2" Junction1393 as Connection866
                connect Term5.in SEL_787.faults_status as Connection870
                connect VABC_grid "Bus Split2.in" as Connection938
                [
                    breakpoints = 7704, 7968
                ]
                connect VABC_load "Bus Split3.in" as Connection937
                [
                    breakpoints = 7576, 7968
                ]
            }
            [
                position = 8000, 8200
                rotation = left
                size = 136, 72
            ]

            port b {
                position = bottom:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 8432
                rotation = left
            ]

            port a {
                position = bottom:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 8472
                rotation = left
            ]

            port B {
                position = top:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 7976
                rotation = right
            ]

            port c {
                position = bottom:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8392
                rotation = left
            ]

            port A {
                position = top:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 7936
                rotation = right
            ]

            port C {
                position = top:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8016
                rotation = right
            ]

            connect A Meas1.A as Connection23
            connect Brk.B Meas1.b as Connection25
            connect Brk.c Meas2.C as Connection27
            connect Brk.a Meas2.A as Connection29
            connect C Meas1.C as Connection21
            connect MID_Rly1.Brk_cmd Brk.control as Connection20
            connect MID_Rly1.VABC_grid Meas1.V as Connection34
            connect Meas1.B B as Connection22
            connect Meas1.a Brk.A as Connection24
            connect Meas1.c Brk.C as Connection26
            [
                breakpoints = 8160, 8160
            ]
            connect Meas1.I MID_Rly1.IABC as Connection9
            connect Meas2.B Brk.b as Connection28
            connect Meas2.V MID_Rly1.VABC_load as Connection33
            connect Meas2.a a as Connection30
            connect Meas2.c c as Connection32
            connect b Meas2.b as Connection31
        }
        [
            position = 11520, 7968
            size = 80, 48
        ]

        component Subsystem Feeder3_trafo4 {
            layout = dynamic
            component "core/Three Phase Two Winding Transformer" Tr1 {
                L1 = "L1_1MVA"
                L2 = "L2_1MVA"
                Lm = "20"
                Poc1 = "5713.2"
                Psc1 = "6642.37715237"
                R1 = "R1_1MVA"
                R2 = "R2_1MVA"
                Rm = "1e5"
                Sn = "Sn_1MVA"
                V1 = "V1_1MVA"
                V2 = "V2_1MVA"
                clock_number = "1"
                current_vals_SI = "[0.03135346870762468, 13.063945294843618]"
                current_vals_pu = "[0.0009178483639461768, 0.38243681830993115]"
                f = "sys_f"
                flux_vals_SI = "[31.18787204934705, 39.50463792917293]"
                flux_vals_pu = "[0.6024524548056571, 0.7631064427555065]"
                input = "SI"
                ioc1 = "7.59887457322"
                l1 = "0.00455833132082"
                l2 = "0.0136749939625"
                lm = "13.1971966124"
                r1 = "0.00166059428809"
                r2 = "0.00498178286428"
                rm = "175.033256319"
                usc1 = "1.9405548823"
                winding_1_connection = "D"
            }
            [
                position = 8192, 8192
                size = 126, 256
            ]

            port A1 {
                position = left:1
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8096
            ]

            port B1 {
                position = left:2
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8192
            ]

            port C1 {
                position = left:3
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8288
            ]

            port a2 {
                position = right:1
                kind = pe
                direction =  out
            }
            [
                position = 8304, 8096
                rotation = down
            ]

            port b2 {
                position = right:2
                kind = pe
                direction =  out
            }
            [
                position = 8304, 8192
                rotation = down
            ]

            port c2 {
                position = right:3
                kind = pe
                direction =  out
            }
            [
                position = 8304, 8288
                rotation = down
            ]

            port Ground {
                position = bottom:3
                kind = pe
                direction =  out
            }
            [
                position = 8304, 8368
                rotation = down
            ]

            connect Ground Tr1.n2 as Connection9
            connect Tr1.prm_1 A1 as Connection6
            connect Tr1.prm_2 B1 as Connection8
            connect Tr1.prm_3 C1 as Connection2
            connect Tr1.sec_1 a2 as Connection3
            connect Tr1.sec_2 b2 as Connection4
            connect Tr1.sec_3 c2 as Connection1
        }
        [
            position = 11920, 8552
            rotation = right
            scale = -1, 1
            size = 72, 64
        ]

        component "core/Transmission Line" Feeder3_line2 {
            C_imperial = "[[0.00233, 0.00140, 0.00140], [0.00140, 0.00233, 0.00140], [0.00140, 0.00140, 0.00233]]"
            C_sequence_metric = "[[5.089e-7, 0.0, 0.0], [0.0, 5.089e-7, 0.0], [0.0, 0.0, 5.089e-7]]"
            Frequency = "sys_f"
            L_sequence_imperial = "L_cable11"
            L_sequence_metric = "[[0.0020, 0.0, 0.0], [0.0, 3.0953e-4, 0.0], [0.0, 0.0, 3.0953e-4]]"
            Length_metric = "1.6764"
            Length_miles = "l_F3L2"
            R_sequence_imperial = "R_cable11"
            R_sequence_metric = "[[1.1405, 0.0, 0.0], [0.0, 0.0749, 0.0], [0.0, 0.0, 0.0749]]"
            model_def = "Sequence"
        }
        [
            position = 11920, 8192
            rotation = left
            size = 256, 72
        ]

        component Subsystem F3_Motor {
            layout = dynamic
            component "core/Induction Machine with Squirrel Cage" IM {
                Jm = "63.87"
                Llr = "3.9965e-4"
                Lls = "3.9965e-4"
                Lm = "0.0346"
                Rr = "0.066"
                Rs = "0.029"
                Rsnb_stator = "795.498829621"
                enb_sig_out = "True"
                execution_rate = "Ts"
                load_ai_pin_addr = "8"
                load_src = "Model"
            }
            [
                position = 8192, 8256
                rotation = right
                scale = -1, 1
            ]

            component gen_terminator Termination1 {
            }
            [
                position = 8056, 8352
                scale = -1, 1
            ]

            component src_scada_input "Control Panel Input1" {
                execution_rate = "Ts"
                format = "int"
                max = "1"
                min = "0"
                signal_type = "int"
                unit = ""
            }
            [
                position = 7960, 8032
                hide_name = True
                scale = -1, 1
            ]

            component Subsystem CB {
                layout = dynamic
                component pas_capacitor C3 {
                    capacitance = "1e-3"
                }
                [
                    position = 7856, 8360
                ]

                component pas_resistor R1 {
                    resistance = "100"
                }
                [
                    position = 7952, 8264
                ]

                component pas_capacitor C1 {
                    capacitance = "1e-3"
                }
                [
                    position = 7856, 8264
                ]

                component pas_capacitor C2 {
                    capacitance = "1e-3"
                }
                [
                    position = 7856, 8312
                ]

                component pas_resistor R2 {
                    resistance = "100"
                }
                [
                    position = 7952, 8312
                ]

                component pas_resistor R3 {
                    resistance = "100"
                }
                [
                    position = 7952, 8360
                ]

                component "core/Triple Pole Single Throw Contactor" S1 {
                }
                [
                    position = 8192, 8192
                    rotation = right
                ]

                port A {
                    position = top:1
                    kind = pe
                }
                [
                    position = 8096, 8112
                    rotation = right
                ]

                port B {
                    position = top:2
                    kind = pe
                }
                [
                    position = 8192, 8112
                    rotation = right
                ]

                port C {
                    position = top:3
                    kind = pe
                }
                [
                    position = 8288, 8112
                    rotation = right
                ]

                port a {
                    position = bottom:1
                    kind = pe
                }
                [
                    position = 8096, 8624
                    rotation = left
                ]

                port b {
                    position = bottom:2
                    kind = pe
                }
                [
                    position = 8192, 8624
                    rotation = left
                ]

                port c {
                    position = bottom:3
                    kind = pe
                }
                [
                    position = 8288, 8624
                    rotation = left
                ]

                port g {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7680, 8312
                ]

                junction Junction1 pe
                [
                    position = 8096, 8264
                ]

                junction Junction2 pe
                [
                    position = 8192, 8312
                ]

                junction Junction3 pe
                [
                    position = 8288, 8360
                ]

                junction Junction5 pe
                [
                    position = 7728, 8312
                ]

                junction Junction6 pe
                [
                    position = 7728, 8312
                ]

                connect C1.p_node Junction5 as Connection46
                connect C2.p_node Junction5 as Connection48
                connect C3.p_node Junction6 as Connection52
                connect C3.n_node R3.p_node as Connection49
                connect Junction1 a as Connection44
                connect Junction3 c as Connection42
                connect Junction6 Junction5 as Connection51
                connect R1.p_node C1.n_node as Connection45
                connect R1.n_node Junction1 as Connection9
                connect R2.p_node C2.n_node as Connection47
                connect R2.n_node Junction2 as Connection12
                connect R3.n_node Junction3 as Connection15
                connect S1.c_in A as Connection6
                connect S1.b_in B as Connection2
                connect S1.a_in C as Connection4
                connect S1.c_out Junction1 as Connection7
                connect S1.b_out Junction2 as Connection10
                connect S1.a_out Junction3 as Connection13
                connect b Junction2 as Connection43
                connect g Junction6 as Connection50
            }
            [
                position = 8192, 8024
                size = 104, 48
            ]

            component Subsystem Meas {
                layout = dynamic
                component "core/Current Measurement" Ic {
                    execution_rate = "Ts"
                }
                [
                    position = 8296, 8128
                    rotation = right
                ]

                component "core/Voltage Measurement" Vca {
                }
                [
                    position = 8152, 8272
                    scale = -1, 1
                ]

                component "core/Current Measurement" Ia {
                    execution_rate = "Ts"
                }
                [
                    position = 8096, 8048
                    rotation = right
                ]

                component "core/Current Measurement" Ib {
                    execution_rate = "Ts"
                }
                [
                    position = 8200, 8088
                    rotation = right
                ]

                component "core/Voltage Measurement" Vbc {
                }
                [
                    position = 8248, 8216
                ]

                component "core/Voltage Measurement" Vab {
                }
                [
                    position = 8152, 8216
                ]

                port A {
                    position = top:1
                    kind = pe
                }
                [
                    position = 8096, 7976
                    rotation = right
                ]

                port B {
                    position = top:2
                    kind = pe
                }
                [
                    position = 8200, 7976
                    rotation = right
                ]

                port C {
                    position = top:3
                    kind = pe
                }
                [
                    position = 8296, 7976
                    rotation = right
                ]

                port a {
                    position = bottom:1
                    kind = pe
                }
                [
                    position = 8096, 8368
                    rotation = left
                ]

                port b {
                    position = bottom:2
                    kind = pe
                }
                [
                    position = 8200, 8368
                    rotation = left
                ]

                port c {
                    position = bottom:3
                    kind = pe
                }
                [
                    position = 8296, 8368
                    rotation = left
                ]

                junction Junction1 pe
                [
                    position = 8096, 8216
                ]

                junction Junction2 pe
                [
                    position = 8200, 8216
                ]

                junction Junction3 pe
                [
                    position = 8200, 8216
                ]

                junction Junction4 pe
                [
                    position = 8296, 8216
                ]

                junction Junction5 pe
                [
                    position = 8296, 8272
                ]

                junction Junction6 pe
                [
                    position = 8096, 8272
                ]

                connect Ia.p_node A as Connection33
                connect Ib.p_node B as Connection32
                connect Ic.p_node C as Connection35
                connect Junction1 Ia.n_node as Connection26
                connect Junction2 Ib.n_node as Connection28
                connect Junction2 b as Connection31
                connect Junction3 Junction2 as Connection15
                connect Junction4 Ic.n_node as Connection30
                connect Junction5 Junction4 as Connection21
                connect Junction5 c as Connection36
                connect Junction6 Junction1 as Connection24
                connect Junction6 a as Connection34
                connect Vab.p_node Junction1 as Connection10
                connect Vab.n_node Junction3 as Connection14
                connect Vbc.p_node Junction3 as Connection16
                connect Vbc.n_node Junction4 as Connection19
                connect Vca.p_node Junction5 as Connection22
                connect Vca.n_node Junction6 as Connection25
            }
            [
                position = 8192, 8112
                size = 112, 64
            ]

            component Subsystem Chiller_compressor {
                layout = dynamic
                component tm_delay "Unit Delay1" {
                }
                [
                    position = 8272, 8192
                ]

                component gen_gain Gain1 {
                    gain = "9.5493"
                }
                [
                    position = 8120, 8192
                ]

                component gen_c_function "C function1" {
                    in_terminal_dimensions_str = "w inherit;"
                    in_terminal_labels = "False;"
                    in_terminal_properties = "real w;"
                    init_fnc = "/*Begin code section*/
T = 0;
w = 0;
/*End code section*/"
                    no_feed_inputs = "[u\'\']"
                    no_feed_outputs = "[u\'\']"
                    out_terminal_dimensions_str = "T inherit;"
                    out_terminal_labels = "False;"
                    out_terminal_properties = "real T;"
                    output_fnc = "/*Begin code section*/
T = 0.1118*w+0.000861*powf(w,2)-3.371e-7*powf(w,3);
/*End code section*/"
                }
                [
                    position = 8192, 8192
                ]

                port w_meas {
                    label = "w meas"
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8056, 8192
                ]

                port torque {
                    label = "Torque"
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8344, 8192
                ]

                connect "C function1.w" Gain1.out as Connection5
                connect "C function1.T" "Unit Delay1.in" as Connection3
                connect torque "Unit Delay1.out" as Connection19
                connect w_meas Gain1.in as Connection20
            }
            [
                position = 7936, 8312
                scale = -1, 1
                size = 80, 48
            ]

            port A {
                position = top:1
                kind = pe
                direction =  out
            }
            [
                position = 8088, 7888
                rotation = right
            ]

            port B {
                position = top:2
                kind = pe
                direction =  out
            }
            [
                position = 8192, 7888
                rotation = right
            ]

            port C {
                position = top:3
                kind = pe
                direction =  out
            }
            [
                position = 8288, 7888
                rotation = right
            ]

            port g {
                position = left:2
                kind = pe
            }
            [
                position = 8072, 8024
            ]

            port "Motor Status" {
                label = "Motor Status"
                position = left:1
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 7872, 8032
                scale = -1, 1
            ]

            connect B CB.B as Connection12
            connect C CB.C as Connection10
            connect CB.A A as Connection9
            connect CB.b Meas.B as Connection15
            connect CB.c Meas.C as Connection17
            connect Chiller_compressor.torque IM.load_in as Connection21
            connect Chiller_compressor.w_meas IM.speed_out as Connection42
            [
                breakpoints = 8040, 8312; 8040, 8312
            ]
            connect "Control Panel Input1.out" "Motor Status" as Connection43
            connect IM.a_in Meas.a as Connection19
            connect Meas.A CB.a as Connection20
            connect Meas.b IM.b_in as Connection16
            connect Meas.c IM.c_in as Connection18
            connect Termination1.in IM.torque_out as Connection6
            connect g CB.g as Connection14
        }
        [
            position = 12816, 8752
            size = 64, 104
        ]

        component "core/Voltage RMS" Vrms_grid {
            frequency = "sys_f"
            op_mode = "Fixed frequency"
        }
        [
            position = 8240, 7048
            rotation = right
            size = 64, 32
        ]

        component "core/Voltage RMS" Vrms_bus301 {
            frequency = "sys_f"
            op_mode = "Fixed frequency"
        }
        [
            position = 11128, 7808
            rotation = right
            size = 64, 32
        ]

        component "core/Voltage RMS" Vrms_bus302 {
            frequency = "sys_f"
            op_mode = "Fixed frequency"
        }
        [
            position = 10848, 8376
            rotation = right
            size = 64, 32
        ]

        component "core/Voltage RMS" Vrms_bus303 {
            frequency = "sys_f"
            op_mode = "Fixed frequency"
        }
        [
            position = 10600, 8696
            rotation = right
            size = 64, 32
        ]

        component "core/Voltage RMS" Vrms_bus304 {
            frequency = "sys_f"
            op_mode = "Fixed frequency"
        }
        [
            position = 10992, 8720
            rotation = right
            size = 64, 32
        ]

        component "core/Voltage RMS" Vrms_bus305 {
            frequency = "sys_f"
            op_mode = "Fixed frequency"
        }
        [
            position = 11624, 8528
            rotation = right
            size = 64, 32
        ]

        component "core/Voltage RMS" Vrms_bus306 {
            frequency = "sys_f"
            op_mode = "Fixed frequency"
        }
        [
            position = 12088, 8504
            rotation = right
            size = 64, 32
        ]

        component "core/Voltage RMS" Vrms_bus307 {
            frequency = "sys_f"
            op_mode = "Fixed frequency"
        }
        [
            position = 12920, 8624
            rotation = right
            size = 64, 32
        ]

        component Subsystem "3ph Fault 301" {
            layout = dynamic
            component "core/Triple Pole Single Throw Contactor" S1 {
                ctrl_src = "Model"
            }
            [
                position = 8192, 8120
                rotation = right
            ]

            component pas_resistor Ra {
                resistance = "R"
            }
            [
                position = 8096, 8232
                rotation = right
            ]

            component pas_resistor Rb {
                resistance = "R"
            }
            [
                position = 8192, 8232
                rotation = right
            ]

            component pas_resistor Rc {
                resistance = "R"
            }
            [
                position = 8288, 8232
                rotation = right
            ]

            component src_scada_input ctrl {
                execution_rate = "Ts"
                format = "int"
                max = "1"
                min = "0"
                signal_type = "int"
                unit = ""
            }
            [
                position = 8400, 8120
                scale = -1, 1
            ]

            port A {
                position = top:1
                kind = pe
            }
            [
                position = 8096, 8024
                rotation = right
            ]

            port B {
                position = top:2
                kind = pe
            }
            [
                position = 8192, 8024
                rotation = right
            ]

            port C {
                position = top:3
                kind = pe
            }
            [
                position = 8288, 8024
                rotation = right
            ]

            junction Junction1 pe
            [
                position = 8192, 8304
            ]

            connect B S1.b_in as Connection2
            connect Junction1 Rc.n_node as Connection9
            connect Ra.n_node Junction1 as Connection8
            [
                breakpoints = 8096, 8304
            ]
            connect Ra.p_node S1.c_out as Connection6
            connect Rb.n_node Junction1 as Connection10
            connect Rc.p_node S1.a_out as Connection4
            connect S1.c_in A as Connection1
            connect S1.a_in C as Connection3
            connect S1.b_out Rb.p_node as Connection5
            connect ctrl.out S1.ctrl_in as Connection11

            R = "0.1"

            mask {
                description = "Three-Phase Fault - Ideal Contactor"

                R {
                    label = "Fault resistance"
                    widget = edit
                    type = generic
                    default_value = "100"
                    unit = "ohms"
                    group = "General"
                }

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 11696, 7824
            size = 64, 48
        ]

        component Subsystem Coupling26 {
            layout = dynamic
            component "core/Four Phase Core Coupling" "Core Coupling 3" {
                C1 = "10e-6"
                R1 = "1"
                fixed_snb_i = "true"
            }
            [
                position = 8192, 8192
                size = 12, 352
            ]

            component Subsystem "RC Snubber" {
                layout = dynamic
                component pas_capacitor C1 {
                    capacitance = "C"
                }
                [
                    position = 8120, 8240
                    rotation = right
                ]

                component pas_resistor R2 {
                    resistance = "R"
                }
                [
                    position = 8192, 8144
                    rotation = right
                ]

                component pas_resistor R1 {
                    resistance = "R"
                }
                [
                    position = 8120, 8144
                    rotation = right
                ]

                component pas_resistor R3 {
                    resistance = "R"
                }
                [
                    position = 8264, 8144
                    rotation = right
                ]

                component pas_capacitor C3 {
                    capacitance = "C"
                }
                [
                    position = 8264, 8240
                    rotation = right
                ]

                component pas_capacitor C2 {
                    capacitance = "C"
                }
                [
                    position = 8192, 8240
                    rotation = right
                ]

                port A {
                    position = top:1
                    kind = pe
                }
                [
                    position = 8120, 8064
                    rotation = right
                ]

                port B {
                    position = top:2
                    kind = pe
                }
                [
                    position = 8192, 8064
                    rotation = right
                ]

                port C {
                    position = top:3
                    kind = pe
                }
                [
                    position = 8264, 8064
                    rotation = right
                ]

                port N {
                    position = bottom:2
                    kind = pe
                }
                [
                    position = 8192, 8320
                    rotation = left
                ]

                junction Junction1 pe
                [
                    position = 8192, 8288
                ]

                junction Junction2 pe
                [
                    position = 8192, 8288
                ]

                connect C1.n_node Junction2 as Connection21
                connect C1.p_node R1.n_node as Connection11
                connect C1.p_node R1.n_node as Connection10
                connect C1.p_node R1.n_node as Connection9
                connect C2.n_node Junction1 as Connection18
                connect C3.n_node Junction2 as Connection23
                connect Junction1 N as Connection19
                connect Junction2 Junction1 as Connection22
                connect R1.p_node A as Connection13
                connect R2.p_node B as Connection15
                connect R3.p_node C as Connection16
                connect C2.p_node R2.n_node as Connection24
                connect C3.p_node R3.n_node as Connection25

                C = "10e-6"
                R = "1"

                mask {
                    R {
                        label = "R"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "ohms"
                        group = "General"
                    }

                    C {
                        label = "C"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "F"
                        group = "General"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE
                }
            }
            [
                position = 8088, 8288
                size = 64, 48
            ]

            port A {
                position = left:1
                kind = pe
            }
            [
                position = 7960, 8048
            ]

            port B {
                position = left:2
                kind = pe
            }
            [
                position = 7960, 8144
            ]

            port C {
                position = left:3
                kind = pe
            }
            [
                position = 7960, 8240
            ]

            port a {
                position = right:1
                kind = pe
            }
            [
                position = 8248, 8048
                rotation = down
            ]

            port b {
                position = right:2
                kind = pe
            }
            [
                position = 8248, 8144
                rotation = down
            ]

            port c {
                position = right:3
                kind = pe
            }
            [
                position = 8248, 8240
                rotation = down
            ]

            port G {
                position = left:4
                kind = pe
            }
            [
                position = 7960, 8336
            ]

            port g {
                position = right:4
                kind = pe
            }
            [
                position = 8248, 8336
                rotation = down
            ]

            junction Junction1 pe
            [
                position = 8072, 8048
            ]

            junction Junction2 pe
            [
                position = 8088, 8144
            ]

            junction Junction3 pe
            [
                position = 8104, 8240
            ]

            junction Junction4 pe
            [
                position = 8088, 8336
            ]

            connect "Core Coupling 3.a_in" Junction1 as Connection9
            connect "Core Coupling 3.b_in" Junction2 as Connection12
            connect "Core Coupling 3.c_in" Junction3 as Connection15
            connect "Core Coupling 3.a_out" a as Connection8
            connect "Core Coupling 3.b_out" b as Connection7
            connect "Core Coupling 3.c_out" c as Connection6
            connect "Core Coupling 3.d_out" g as Connection2
            connect G Junction4 as Connection18
            connect Junction1 A as Connection10
            connect Junction2 B as Connection13
            connect Junction3 C as Connection16
            connect Junction4 "Core Coupling 3.d_in" as Connection19
            connect "RC Snubber.A" Junction1 as Connection11
            connect "RC Snubber.B" Junction2 as Connection14
            connect "RC Snubber.C" Junction3 as Connection17
            connect "RC Snubber.N" Junction4 as Connection20
        }
        [
            position = 11704, 7056
            rotation = right
            scale = -1, 1
            size = 48, 80
        ]

        tag Tag26 {
            value = "GroundF3"
            scope = global
            kind = pe
        }
        [
            position = 12016, 7816
            rotation = down
            hide_name = True
        ]

        tag Tag27 {
            value = "GroundF3_3"
            scope = global
            kind = pe
        }
        [
            position = 12016, 7912
            rotation = down
            hide_name = True
        ]

        tag Tag28 {
            value = "GroundF3_4"
            scope = global
            kind = pe
        }
        [
            position = 12936, 7872
            rotation = down
            hide_name = True
        ]

        tag Tag29 {
            value = "GroundF3"
            scope = global
            kind = pe
        }
        [
            position = 12936, 7784
            rotation = down
            hide_name = True
        ]

        tag Tag22 {
            value = "GroundF3"
            scope = global
            kind = pe
        }
        [
            position = 10800, 7808
            rotation = down
            hide_name = True
        ]

        tag Tag23 {
            value = "GroundF3_1"
            scope = global
            kind = pe
        }
        [
            position = 10800, 7904
            rotation = down
            hide_name = True
        ]

        tag Tag52 {
            value = "GroundF3_2"
            scope = global
            kind = pe
        }
        [
            position = 11624, 7920
            rotation = down
            hide_name = True
        ]

        tag Tag51 {
            value = "GroundF3"
            scope = global
            kind = pe
        }
        [
            position = 11624, 7824
            rotation = down
            hide_name = True
        ]

        tag Tag36 {
            value = "Ground"
            scope = global
            kind = pe
        }
        [
            position = 8680, 6600
            hide_name = True
            scale = -1, 1
        ]

        tag Tag35 {
            value = "Ground3"
            scope = global
            kind = pe
        }
        [
            position = 11800, 7456
            hide_name = True
            scale = -1, 1
        ]

        tag Tag54 {
            value = "GroundF3"
            scope = global
            kind = pe
        }
        [
            position = 11784, 7640
            rotation = down
            hide_name = True
        ]

        tag Tag55 {
            value = "Ground3"
            scope = global
            kind = pe
        }
        [
            position = 11784, 7560
            rotation = down
            hide_name = True
        ]

        tag Tag53 {
            value = "GroundF3_4"
            scope = global
            kind = pe
        }
        [
            position = 12720, 8832
            rotation = left
            hide_name = True
            scale = -1, 1
        ]

        tag Goto2 {
            value = "F3_MOTOR_STATUS"
            scope = global
            kind = sp
            direction = in
        }
        [
            position = 12712, 8720
            hide_name = True
            scale = -1, 1
        ]

        tag Tag24 {
            value = "GroundF3_1"
            scope = global
            kind = pe
        }
        [
            position = 10768, 8576
            rotation = left
            hide_name = True
        ]

        tag Tag31 {
            value = "GroundF3_3"
            scope = global
            kind = pe
        }
        [
            position = 12016, 8640
            rotation = left
            hide_name = True
        ]

        tag Tag25 {
            value = "GroundF3_1"
            scope = global
            kind = pe
        }
        [
            position = 11168, 8600
            rotation = left
            hide_name = True
        ]

        tag Tag32 {
            value = "GroundF3_4"
            scope = global
            kind = pe
        }
        [
            position = 12904, 8432
            rotation = left
            hide_name = True
        ]

        tag Tag30 {
            value = "GroundF3_2"
            scope = global
            kind = pe
        }
        [
            position = 11592, 8448
            rotation = left
            hide_name = True
        ]

        tag Tag81 {
            value = "Ground"
            scope = global
            kind = pe
        }
        [
            position = 11792, 7008
            hide_name = True
            scale = -1, 1
        ]

        tag Tag80 {
            value = "Ground3"
            scope = global
            kind = pe
        }
        [
            position = 11800, 7096
            hide_name = True
            scale = -1, 1
        ]

        junction Junction9 pe
        [
            position = 8584, 6968
        ]

        junction Junction287 pe
        [
            position = 10680, 8328
        ]

        junction Junction288 pe
        [
            position = 10696, 8312
        ]

        junction Junction289 pe
        [
            position = 10712, 8296
        ]

        junction Junction305 pe
        [
            position = 12832, 8568
        ]

        junction Junction306 pe
        [
            position = 12816, 8552
        ]

        junction Junction329 pe
        [
            position = 11504, 7720
        ]

        junction Junction349 pe
        [
            position = 12800, 8536
        ]

        junction Junction356 pe
        [
            position = 11904, 7720
        ]

        junction Junction357 pe
        [
            position = 11920, 7736
        ]

        junction Junction358 pe
        [
            position = 11536, 7752
        ]

        junction Junction359 pe
        [
            position = 11936, 7752
        ]

        junction Junction383 pe
        [
            position = 11904, 8448
        ]

        junction Junction384 pe
        [
            position = 11920, 8432
        ]

        junction Junction385 pe
        [
            position = 11936, 8416
        ]

        junction Junction465 pe
        [
            position = 11080, 8640
        ]

        junction Junction466 pe
        [
            position = 11096, 8656
        ]

        junction Junction468 pe
        [
            position = 10680, 8616
        ]

        junction Junction469 pe
        [
            position = 10696, 8632
        ]

        junction Junction484 pe
        [
            position = 11712, 7752
        ]

        junction Junction486 pe
        [
            position = 11680, 7720
        ]

        junction Junction493 pe
        [
            position = 8488, 6952
        ]

        junction Junction495 pe
        [
            position = 8584, 6600
        ]

        junction Junction539 pe
        [
            position = 11128, 7720
        ]

        junction Junction540 pe
        [
            position = 11160, 7736
        ]

        junction Junction542 pe
        [
            position = 10880, 8312
        ]

        junction Junction543 pe
        [
            position = 10848, 8328
        ]

        junction Junction548 pe
        [
            position = 11504, 8488
        ]

        junction Junction549 pe
        [
            position = 11520, 8568
        ]

        junction Junction550 pe
        [
            position = 12088, 8448
        ]

        junction Junction551 pe
        [
            position = 12120, 8432
        ]

        junction Junction552 pe
        [
            position = 12920, 8536
        ]

        junction Junction553 pe
        [
            position = 12952, 8552
        ]

        junction Junction555 pe
        [
            position = 11520, 7736
        ]

        junction Junction556 pe
        [
            position = 11696, 7736
        ]

        comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:28pt;">UDP Variables added.</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:28pt;">Edwin be careful when </span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:28pt;">adding blocks for NG </span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:28pt;">Genset</span></p></body></html> ENDCOMMENT 
        [
            position = 11632, 9000
        ]

        comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">NG GENSET should </p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">be used instead</p></body></html> ENDCOMMENT 
        [
            position = 12104, 9200
        ]

        connect CIL_F3_Critical6.C Feeder3_trafo4.c2 as Connection3455
        connect CIL_F3_Critical6.A Feeder3_trafo4.a2 as Connection3453
        connect CIL_F3_Interruptible6.A F3_CB8.a as Connection3459
        connect CIL_F3_Interruptible6.C F3_CB8.c as Connection3461
        connect CIL_F3_Priority4.A F3_CB7.a as Connection3456
        connect CIL_F3_Priority4.C F3_CB7.c as Connection3458
        connect CIL_F3_Priority6.B F3_CB9.b as Connection3451
        connect Coupling2.a F3_CB3.A as Connection3347
        connect Coupling2.c F3_CB3.C as Connection3349
        connect Coupling2.B Junction357 as Connection3544
        connect Coupling2.C Junction359 as Connection3552
        connect Coupling26.B Junction9 as Connection3978
        connect Coupling3.b F3_CB4.B as Connection3327
        connect Coupling3.a F3_CB4.A as Connection3326
        connect Coupling3.A Junction356 as Connection3539
        connect Coupling3.B Junction357 as Connection3542
        [
            breakpoints = 12168, 7736; 12168, 7736
        ]
        connect Coupling4.b F3_CB2.B as Connection3294
        connect Coupling4.A Junction329 as Connection3367
        connect Coupling4.C Junction358 as Connection3550
        connect Coupling5.A F3_PCC.a as Connection4080
        connect Coupling5.C F3_PCC.c as Connection4082
        connect Coupling5.c Junction484 as Connection4087
        connect Coupling5.a Junction486 as Connection4093
        connect Coupling5.b Junction556 as Connection4385
        connect Coupling5.G Tag55 as Connection4083
        connect F3_CB1.A Coupling1.a as Connection3417
        connect F3_CB1.B Coupling1.b as Connection3418
        connect F3_CB1.C Coupling1.c as Connection3419
        connect F3_CB1.c Feeder3_line1.c_out as Connection3421
        connect F3_CB1.a Feeder3_line1.a_out as Connection3423
        connect F3_CB2.C Coupling4.c as Connection3295
        connect F3_CB2.A Coupling4.a as Connection3293
        connect F3_CB2.b Feeder3_line4.b_out as Connection3153
        connect F3_CB2.a Feeder3_line4.a_out as Connection3152
        connect F3_CB2.c Feeder3_line4.c_out as Connection3154
        connect F3_CB3.B Coupling2.b as Connection3348
        connect F3_CB3.b Feeder3_line2.b_out as Connection3345
        connect F3_CB3.a Feeder3_line2.a_out as Connection3344
        connect F3_CB3.c Feeder3_line2.c_out as Connection3346
        connect F3_CB4.C Coupling3.c as Connection3328
        connect F3_CB4.a Feeder3_line3.a_out as Connection3329
        connect F3_CB4.c Feeder3_line3.c_out as Connection3331
        connect F3_CB5.a Feeder3_trafo1.A1 as Connection3131
        connect F3_CB5.c Feeder3_trafo1.C1 as Connection3129
        connect F3_CB5.b Feeder3_trafo1.B1 as Connection3130
        connect F3_CB6.a Feeder3_trafo2.A1 as Connection3136
        connect F3_CB6.b Feeder3_trafo2.B1 as Connection3137
        connect F3_CB6.c Feeder3_trafo2.C1 as Connection3138
        connect F3_CB6.C Junction289 as Connection4326
        [
            breakpoints = 10848, 8296
        ]
        connect F3_CB6.B Junction542 as Connection4323
        connect F3_CB6.A Junction543 as Connection4327
        connect F3_CB7.b CIL_F3_Priority4.B as Connection3457
        connect F3_CB7.B Junction549 as Connection4345
        connect F3_CB8.b CIL_F3_Interruptible6.B as Connection3460
        connect F3_CB8.A Junction465 as Connection3946
        [
            breakpoints = 11080, 8672
        ]
        connect F3_CB9.a CIL_F3_Priority6.A as Connection3450
        connect F3_CB9.c CIL_F3_Priority6.C as Connection3452
        connect F3_CB9.C Junction305 as Connection3238
        connect F3_CB9.A Junction552 as Connection4354
        connect F3_CB9.B Junction553 as Connection4357
        connect F3_Motor.A Junction349 as Connection3479
        connect F3_PCC.b Coupling5.B as Connection4081
        connect F3_PCC.B F3_line.b_in as Connection3494
        connect F3_PCC.G Tag35 as Connection3375
        connect F3_line.a_out Coupling26.a as Connection3979
        connect F3_line.c_out Coupling26.c as Connection3981
        connect F3_line.b_out Coupling26.b as Connection3977
        connect F3_line.a_in F3_PCC.A as Connection3489
        connect F3_line.c_in F3_PCC.C as Connection3382
        connect Feeder3_line1.b_out F3_CB1.b as Connection3422
        connect Feeder3_line1.a_in Junction287 as Connection3139
        [
            breakpoints = 10680, 8304; 10680, 8304
        ]
        connect Feeder3_line1.b_in Junction288 as Connection3142
        connect Feeder3_line1.c_in Junction289 as Connection3145
        connect Feeder3_line2.b_in Junction384 as Connection3653
        [
            breakpoints = 11920, 8376; 11920, 8392
        ]
        connect Feeder3_line3.b_out F3_CB4.b as Connection3330
        connect Feeder3_line3.c_in Feeder3_trafo5.C1 as Connection1661
        connect Feeder3_line3.b_in Feeder3_trafo5.B1 as Connection1666
        connect Feeder3_line4.b_in Feeder3_trafo3.B1 as Connection1599
        connect Feeder3_line4.c_in Feeder3_trafo3.C1 as Connection1600
        connect Feeder3_lineNGG.c_in "NG GENSET.C" as Connection3642
        connect Feeder3_lineNGG.a_in "NG GENSET.A" as Connection3643
        connect Feeder3_lineNGG.b_out NG_MCB.b as Connection3648
        connect Feeder3_trafo1.a2 Junction468 as Connection3968
        connect Feeder3_trafo1.b2 Junction469 as Connection3971
        connect Feeder3_trafo2.b2 Junction466 as Connection3949
        [
            breakpoints = 11096, 8624; 11096, 8624
        ]
        connect Feeder3_trafo3.A1 Feeder3_line4.a_in as Connection1598
        connect Feeder3_trafo3.a2 Junction548 as Connection4342
        connect Feeder3_trafo4.b2 CIL_F3_Critical6.B as Connection3454
        connect Feeder3_trafo4.A1 Junction383 as Connection3650
        connect Feeder3_trafo4.C1 Junction385 as Connection3656
        connect Feeder3_trafo5.A1 Feeder3_line3.a_in as Connection1663
        connect Feeder3_trafo5.c2 Junction305 as Connection3236
        connect Feeder3_trafo5.b2 Junction306 as Connection3239
        connect Goto2 "F3_Motor.Motor Status" as Connection3488
        connect Junction287 F3_CB5.A as Connection3140
        connect Junction288 F3_CB5.B as Connection3143
        [
            breakpoints = 10696, 8320; 10696, 8320
        ]
        connect Junction289 F3_CB5.C as Connection3146
        [
            breakpoints = 10712, 8336
        ]
        connect Junction329 Junction539 as Connection4314
        [
            breakpoints = 11504, 7720; 11504, 7720; 11504, 7720; 11280, 7720; 11280, 7720; 11280, 7720; 11280, 7720; 11280, 7720
        ]
        connect Junction356 Junction486 as Connection4091
        [
            breakpoints = 11904, 7720
        ]
        connect Junction358 Coupling1.C as Connection3551
        [
            breakpoints = 11536, 7752; 11536, 7752; 11312, 7752; 11312, 7752; 11312, 7752; 11312, 7752
        ]
        connect Junction358 Junction484 as Connection4085
        [
            breakpoints = 11536, 7752
        ]
        connect Junction359 Coupling3.C as Connection3553
        [
            breakpoints = 11936, 7752; 11936, 7752; 12184, 7752; 12184, 7752; 12184, 7752; 12184, 7752; 12184, 7752
        ]
        connect Junction383 Feeder3_line2.a_in as Connection3651
        [
            breakpoints = 11904, 8392; 11904, 8376
        ]
        connect Junction384 Feeder3_trafo4.B1 as Connection3654
        connect Junction385 Feeder3_line2.c_in as Connection3657
        [
            breakpoints = 11936, 8408; 11936, 8360
        ]
        connect Junction465 Feeder3_trafo2.a2 as Connection3947
        [
            breakpoints = 11080, 8608; 11080, 8608
        ]
        connect Junction466 F3_CB8.B as Connection3950
        [
            breakpoints = 11096, 8656
        ]
        connect Junction468 CIL_F3_Critical5.A as Connection3969
        [
            breakpoints = 10680, 8608; 10680, 8648
        ]
        connect Junction469 CIL_F3_Critical5.B as Connection3972
        [
            breakpoints = 10696, 8624; 10696, 8624; 10696, 8632
        ]
        connect Junction484 "3ph Fault 301.C" as Connection4390
        connect Junction484 Junction359 as Connection4086
        [
            breakpoints = 11712, 7752; 11936, 7776; 11936, 7776
        ]
        connect Junction486 "3ph Fault 301.A" as Connection4388
        connect Junction486 Junction329 as Connection4092
        [
            breakpoints = 11680, 7720; 11504, 7720; 11504, 7720
        ]
        connect Junction495 Tag36 as Connection4156
        [
            breakpoints = 8584, 6600
        ]
        connect Junction539 Coupling1.A as Connection4315
        [
            breakpoints = 10680, 7720
        ]
        connect Junction540 Coupling1.B as Connection4318
        connect Junction540 Junction555 as Connection4383
        [
            breakpoints = 11160, 7736; 11296, 7736
        ]
        connect Junction542 Junction288 as Connection4324
        connect Junction543 Junction287 as Connection4328
        connect Junction550 Junction383 as Connection4349
        connect Junction551 Junction384 as Connection4352
        connect Junction552 Junction349 as Connection4355
        connect Junction553 Junction306 as Connection4358
        connect Junction555 Coupling4.B as Connection4384
        [
            breakpoints = 11520, 7736; 11520, 7736
        ]
        connect Junction555 Junction556 as Connection4387
        connect Junction556 "3ph Fault 301.B" as Connection4389
        connect Junction556 Junction357 as Connection4386
        [
            breakpoints = 11696, 7736; 11920, 7736; 11920, 7736
        ]
        connect "NG GENSET.B" Feeder3_lineNGG.b_in as Connection3641
        connect "NG GENSET.MCB Control" NG_MCB.NG_MCB_Control as Connection3659
        [
            breakpoints = 12136, 9096; 12136, 8576
        ]
        connect NG_MCB.a Feeder3_lineNGG.a_out as Connection3647
        connect NG_MCB.c Feeder3_lineNGG.c_out as Connection3649
        connect NG_MCB.C Junction385 as Connection3658
        connect NG_MCB.A Junction550 as Connection4348
        connect NG_MCB.B Junction551 as Connection4351
        connect Tag22 Coupling1.G as Connection1993
        connect Tag23 Coupling1.g as Connection1994
        connect Tag24 Feeder3_trafo1.Ground as Connection1995
        connect Tag25 Feeder3_trafo2.Ground as Connection1996
        connect Tag26 Coupling2.G as Connection2004
        connect Tag27 Coupling2.g as Connection2005
        connect Tag28 Coupling3.g as Connection2013
        connect Tag29 Coupling3.G as Connection2012
        connect Tag30 Feeder3_trafo3.Ground as Connection2014
        connect Tag31 Feeder3_trafo4.Ground as Connection2015
        connect Tag32 Feeder3_trafo5.Ground as Connection2016
        connect Tag51 Coupling4.G as Connection3289
        connect Tag52 Coupling4.g as Connection3288
        connect Tag53 F3_Motor.g as Connection3366
        connect Tag54 Coupling5.g as Connection4084
        connect Tag80 Coupling26.g as Connection3984
        connect Tag81 Coupling26.G as Connection3983
        connect Vrms_bus301.p_node Junction539 as Connection4316
        connect Vrms_bus301.n_node Junction540 as Connection4319
        connect Vrms_bus302.n_node Junction542 as Connection4325
        connect Vrms_bus302.p_node Junction543 as Connection4329
        connect Vrms_bus305.p_node Junction548 as Connection4344
        connect Vrms_bus305.n_node Junction549 as Connection4347
        connect Vrms_bus306.p_node Junction550 as Connection4350
        connect Vrms_bus306.n_node Junction551 as Connection4353
        connect Vrms_bus307.p_node Junction552 as Connection4356
        connect Vrms_bus307.n_node Junction553 as Connection4359
        connect Vs1.a_node Junction493 as Connection4150
        connect Vs1.n_node Junction495 as Connection4157
        connect gnd2.node Junction495 as Connection4155
        connect F3_Motor.C Junction305 as Connection4539
        [
            breakpoints = 12832, 8568; 12832, 8568
        ]
        connect Feeder3_trafo5.a2 Junction349 as Connection4541
        [
            breakpoints = 12800, 8536; 12800, 8536
        ]
        connect Vrms_grid.n_node Junction9 as Connection4540
        [
            breakpoints = 8272, 6968; 8272, 6968
        ]
        connect Vrms_grid.p_node Junction493 as Connection4542
        [
            breakpoints = 8240, 6952; 8240, 6952
        ]
        connect F3_Motor.B Junction306 as Connection4537
        [
            breakpoints = 12816, 8552
        ]
        connect Coupling26.C Vs1.c_node as Connection4549
        [
            breakpoints = 8680, 6984
        ]
        connect CIL_F3_Critical5.C Feeder3_trafo1.c2 as Connection4551
        [
            breakpoints = 10712, 8648; 10712, 8640; 10712, 8616; 10712, 8616
        ]
        connect Junction466 Vrms_bus304.n_node as Connection4555
        [
            breakpoints = 11096, 8656; 11024, 8656
        ]
        connect Feeder3_trafo3.b2 Junction549 as Connection4550
        [
            breakpoints = 11520, 8512; 11520, 8536
        ]
        connect F3_CB7.A Junction548 as Connection4556
        [
            breakpoints = 11504, 8552; 11504, 8520; 11504, 8496
        ]
        connect Vrms_bus303.n_node Junction469 as Connection4557
        [
            breakpoints = 10632, 8632
        ]
        connect F3_CB7.C Feeder3_trafo3.c2 as Connection4546
        [
            breakpoints = 11536, 8552; 11536, 8528; 11536, 8520
        ]
        connect Vrms_bus304.p_node Junction465 as Connection4548
        [
            breakpoints = 10992, 8640
        ]
        connect Vrms_bus303.p_node Junction468 as Connection4554
        [
            breakpoints = 10600, 8616
        ]
        connect Vs1.b_node Junction9 as Connection4553
        [
            breakpoints = 8584, 6968
        ]
        connect Feeder3_trafo2.c2 F3_CB8.C as Connection4552
        [
            breakpoints = 11112, 8640; 11112, 8640; 11112, 8672; 11112, 8672
        ]
        connect Coupling26.A Junction493 as Connection4558
        [
            breakpoints = 8736, 6952; 8736, 6952; 8736, 6952; 8568, 6952; 8568, 6952; 8568, 6952; 8568, 6952
        ]
        connect Junction356 Coupling2.A as Connection4559
        [
            breakpoints = 11904, 7720; 11904, 7720
        ]
    }

    default {
        gen_DC1A_exciter {
            Tr = "0.020"
            Tb = "0"
            Tc = "0"
            Ka = "300"
            Ta = "0.001"
            VRmax = "11.5"
            VRmin = "-11.5"
            Te = "0.1"
            Ke = "1"
            Kf = "0.001"
            Tf = "0.1"
            initial_terminal_voltage = "0"
            initial_field_voltage = "0"
            disable_Vt_transducer = "True"
            disable_fdbck_stab = "True"
            start_time = "10"
            execution_rate = "inherit"
        }

        gen_PQ_transform {
            filter_order = "first order"
            filter_cutoff_Hz = "30"
            initial_filter_input = "0"
            initial_filter_output = "0"
            enable_inst_ports = "True"
            enable_zero_ports = "False"
            execution_rate = "inherit"
        }

        gen_abs {
            execution_rate = "inherit"
        }

        gen_bus_join {
            inputs = "2"
            execution_rate = "inherit"
        }

        gen_bus_split {
            outputs = "2"
            execution_rate = "inherit"
        }

        gen_c_function {
            in_terminal_properties = "real in;"
            in_terminal_labels = ""
            out_terminal_properties = "real out;"
            out_terminal_labels = ""
            no_feed_inputs = ""
            no_feed_outputs = ""
            in_terminal_dimensions = ""
            in_terminal_dimensions_str = ""
            out_terminal_dimensions = ""
            out_terminal_dimensions_str = ""
            output_fnc = ""
            update_fnc = ""
            init_fnc = ""
            global_variables = ""
            parameters = ""
            execution_rate = "inherit"
        }

        gen_comparator {
            execution_rate = "inherit"
        }

        gen_data_type_conversion {
            output_type = "real"
            execution_rate = "inherit"
        }

        gen_delay {
            delay_type = "Fixed delay"
            del_length = "2"
            max_delay_length = "20"
            init_value = "0"
            signal_out_type = "inherit"
            execution_rate = "inherit"
        }

        gen_digital_probe {
            override_signal_name = "False"
            signal_name = ""
            streaming_en = "False"
            addr = "0"
            streaming_er_idx = "0"
            execution_rate = "inherit"
        }

        gen_gain {
            gain = "1"
            multiplication = "Element-wise(K.*u)"
            execution_rate = "inherit"
        }

        gen_integrator {
            show_reset = "none"
            reset_type = "asynchronous"
            show_init_condition = "internal"
            init_value = "0"
            limit_output = "False"
            limit_upper = "inf"
            limit_lower = "-inf"
            show_state = "False"
            state_port_type = "inherit"
            execution_rate = "inherit"
        }

        gen_logic_op {
            operator = "AND"
            inputs = "2"
            execution_rate = "inherit"
        }

        gen_math_fnc {
            mathematical_fn = "exponential"
            execution_rate = "inherit"
        }

        gen_pid_controller {
            controller_type = "PID"
            kp = "1"
            kp_source = "internal"
            ki = "1"
            ki_source = "internal"
            kd = "0"
            kd_source = "internal"
            filt_coef = "100"
            int_init_value = "0"
            filt_init_value = "0"
            enb_output_limit_out = "False"
            upper_sat_lim = "1"
            lower_sat_lim = "-1"
            enb_anti_windup_out = "False"
            signal_out_type = "inherit"
            execution_rate = "inherit"
        }

        gen_probe {
            addr = "0"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "generic"
            streaming_en = "False"
            streaming_er_idx = "0"
            execution_rate = "inherit"
        }

        gen_product {
            signs = "2"
            execution_rate = "inherit"
        }

        gen_rel_op {
            relational_op = "=="
            execution_rate = "inherit"
        }

        gen_rms_value {
            op_mode = "PLL based"
            frequency = "50"
            period_timeout = "0.5"
            execution_rate = "inherit"
        }

        gen_sr_ff {
            init_value = "0"
            execution_rate = "inherit"
        }

        gen_sum {
            signs = "2"
            execution_rate = "inherit"
        }

        gen_terminator {
            execution_rate = "inherit"
        }

        gen_terminator {
            execution_rate = "inherit"
        }

        gen_transport_delay {
            time_delay = "0.1"
            init_value = "0"
            signal_out_type = "inherit"
            execution_rate = "inherit"
        }

        gen_z_domain_transfer {
            domain = "Z-domain"
            method = "Zero-order hold"
            b_coeff = "[1]"
            a_coeff = "[1,-1]"
            init_states = "0"
            signal_out_type = "inherit"
            execution_rate = "inherit"
        }

        msr_phasor_3ph {
            period_timeout = "0.5"
            execution_rate = "inherit"
        }

        pas_capacitor {
            capacitance = "1e-6"
            initial_voltage = "0"
            pole_shift_ignore = "False"
            visible = "True"
        }

        pas_inductor {
            inductance = "1e-3"
            initial_current = "0.0"
            pole_shift_ignore = "False"
            visible = "True"
        }

        pas_resistor {
            resistance = "1"
        }

        src_constant {
            value = "1"
            signal_type = "real"
            execution_rate = "100e-6"
        }

        src_digital_input {
            addr = "1"
            invert = "false"
            signal_type = "uint"
            execution_rate = "100e-6"
        }

        src_scada_input {
            addr = "0"
            format = "real"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "real"
            min = "-1e6"
            max = "1e6"
            def_value = "0"
            unit = " "
            execution_rate = "100e-6"
        }

        src_voltage {
            sig_input = "False"
            type = "signal generator"
            param_set = "1phase"
            parent_label = ""
            addr = "0"
            spc_nb = "0"
            execution_rate = "100e-6"
            cpd_visible = "True"
            enable_snb = "False"
            snb_type = "R2"
            R2 = "0.0"
            L1 = "0.1"
            override_signal_name = "False"
            signal_name = ""
            init_source_nature = "Constant"
            init_const_value = "0.0"
            init_rms_value = "0.0"
            init_frequency = "50.0"
            init_phase = "0.0"
        }

        sys_mp_signal_switch {
            number_of_input_terminals = "2"
            execution_rate = "inherit"
        }

        sys_signal_switch {
            criterion = "ctrl >= threshold"
            threshold = "0"
            execution_rate = "inherit"
        }

        sys_spc_marker {
            marker_id = "id0"
        }

        tm_delay {
            init_value = "0"
            signal_out_type = "inherit"
            execution_rate = "inherit"
        }

        "core/Current Measurement" {
            bw_limit = "False"
            frequency = "10e3"
            comparator_enable = "False"
            operator = "greater"
            threshold = "0"
            cmp_abs_value = "False"
            feed_forward = "false"
            sig_output = "False"
            execution_rate = "100e-6"
            addr = "0"
            nd_msr_estimation = "false"
            dev_cpl_msr = "false"
            host_device = "0"
            output_to_device = "0"
            dev_cpl_index = "0"
            dev_cpl_var_nb = "0"
            visible = "True"
            override_signal_name = "False"
            signal_name = ""
        }

        "core/Externally Controlled Voltage Source" {
            ai_pin_addr = "1"
            ai_offset = "0.0"
            ai_gain = "1.0"
            visible = "True"
        }

        "core/Four Phase Core Coupling" {
            snb_type_i = "none"
            R1 = "100e3"
            C1 = "1e-06"
            C2 = "1e-06"
            fixed_snb_i = "false"
            snb_type_u = "none"
            R2 = "0.1"
            L1 = "0.1"
            L2 = "0.1"
            fixed_snb_u = "false"
            cpl_connection = "star"
        }

        "core/Four Phase Device Coupling" {
            snb_type_i = "R1"
            R1 = "inf"
            C1 = "1e-06"
            C2 = "1e-06"
            fixed_snb_i = "True"
            snb_type_u = "R2"
            R2 = "0.0"
            L1 = "0.1"
            L2 = "0.1"
            fixed_snb_u = "True"
        }

        "core/Induction Machine with Squirrel Cage" {
            model_type = "linear"
            Rs = "13.12"
            Rr = "11.202"
            Lls = "0.0276"
            Llr = "0.0194"
            Lm = "0.3482"
            curve_type = "flux vs current"
            im_vector = "[0.0, 0.0]"
            psim_vector = "[0.0, 0.0]"
            Lm_vector = "[0.0, 0.0]"
            pms = "2"
            Jm = "10e-6"
            friction_coeff = "0"
            unconstrained_angle = "disabled"
            load_src = "SCADA / external"
            ext_mdl_load_type = "torque"
            load_ai_pin_addr = "1"
            load_ai_offset = "0"
            load_ai_gain = "1"
            enc_ppr = "1024"
            res_pole_pairs = "1"
            res_carr_source = "internal"
            res_int_carr_f = "5e+3"
            res_ai_pin_addr = "1"
            res_ai_offset = "0"
            res_ai_gain = "1"
            absenc_type = "None"
            endat_clock_di_addr = "1"
            endat_clock_di_logic = "active high"
            endat_data_di_addr = "2"
            endat_data_di_logic = "active high"
            biss_clock_di_addr = "1"
            biss_clock_di_logic = "active high"
            biss_data_di_addr = "2"
            ssi_clock_di_addr = "1"
            ssi_clock_di_logic = "active high"
            ssi_data_di_addr = "2"
            Rsnb_stator = "20e3"
            calculate_max_snubber = "Calculate"
            enb_sig_out = "False"
            execution_rate = "100e-6"
        }

        "core/ModBus Device" {
            hil_id = "0"
            configuration = "config1"
            preview = "Configuration preview"
            ip_address_port = "False"
            request_counter_port = "None"
            network_settings_src = "Configuration dictionary"
            ip_addr = "192.168.0.210"
            netmask = "255.255.255.0"
            port = "502"
            gateway = "192.168.0.210"
            gateway_enable = "False"
            defines = ""
            modbus_sunspec = "False"
            logging = "False"
            execution_rate = "100e-6"
        }

        "core/Rate Transition" {
            init_value = "0.0"
            execution_rate = "100e-6"
        }

        "core/Signal Controlled Voltage Source" {
            execution_rate = "inherit"
        }

        "core/Synchronous Machine with Wound Rotor" {
            model_type = "linear"
            rated_speed = "1.0"
            Rs = "1.62"
            Lls = "0.004527"
            Lmd = "0.1086"
            Lmq = "0.1086"
            curve_type = "no load curve"
            if_vector = "[0.0, 0.0]"
            vs_vector = "[0.0, 0.0]"
            imd_vector = "[0.0, 0.0]"
            imq_vector = "[0.0, 0.0]"
            psimd_table = "[[0.0, 0.0], [0.0, 0.0]]"
            psimq_table = "[[0.0, 0.0], [0.0, 0.0]]"
            Rf = "1.208"
            Llfd = "0.01132"
            Rkd = "3.142"
            Rkq = "4.772"
            Llkd = "0.007334"
            Llkq = "0.01015"
            Ns_div_Nfd = "1.0"
            Ns_div_Nkd = "1.0"
            Ns_div_Nkq = "1.0"
            pms = "2"
            star_delta = "star"
            Jm = "0.0923"
            friction_coeff = "0"
            unconstrained_angle = "disabled"
            load_src = "SCADA / external"
            ext_mdl_load_type = "torque"
            load_ai_pin_addr = "1"
            load_ai_offset = "0"
            load_ai_gain = "1"
            enc_ppr = "1024"
            res_pole_pairs = "1"
            res_carr_source = "internal"
            res_int_carr_f = "5e+3"
            res_ai_pin_addr = "1"
            res_ai_offset = "0"
            res_ai_gain = "1"
            absenc_type = "None"
            endat_clock_di_addr = "1"
            endat_clock_di_logic = "active high"
            endat_data_di_addr = "2"
            endat_data_di_logic = "active high"
            biss_clock_di_addr = "1"
            biss_clock_di_logic = "active high"
            biss_data_di_addr = "2"
            ssi_clock_di_addr = "1"
            ssi_clock_di_logic = "active high"
            ssi_data_di_addr = "2"
            theta_ab = "-pi/2"
            field_input = "voltage"
            Rsnb_rotor = "inf"
            Rsnb_stator = "inf"
            enb_sig_out = "False"
            execution_rate = "100e-6"
            machine_id = "0"
            me_speed_out_addr = "0"
            el_torque_out_addr = "0"
            me_angle_out_addr = "0"
        }

        "core/Three Phase Two Winding Transformer" {
            input = "SC and OC tests"
            core_sat = "False"
            Sn = "160000.0"
            f = "50.0"
            V1 = "10000.0"
            V2 = "400.0"
            usc1 = "4.0"
            Psc1 = "2350.0"
            ioc1 = "0.7"
            Poc1 = "460.0"
            R1 = "4.58984375"
            L1 = ".0370093710364"
            R2 = ".00734375"
            L2 = "5.92149936583e-05"
            Rm = "217391.304348"
            Lm = "311.709196788"
            flux_vals_SI = "[1910.3, 2419.7]"
            current_vals_SI = "[0.66653, 277.72]"
            r1 = ".00734375"
            l1 = ".0186029389059"
            r2 = ".00734375"
            l2 = ".0186029389059"
            rm = "347.826086957"
            lm = "156.68213163"
            flux_vals_pu = "[1.2, 1.52]"
            current_vals_pu = "[0.0024, 1]"
            flux_vals_SCOC = "[1.2, 1.52]"
            current_vals_SCOC = "[0.0024, 1]"
            import_from_SI2SCOC = "Import from SI"
            import_from_pu2SCOC = "Import from PU"
            import_from_SCOC2SI = "Import from SC OC"
            import_from_pu2SI = "Import from PU"
            import_from_SCOC2pu = "Import from SC OC"
            import_from_SI2pu = "Import from SI"
            winding_1_connection = "Y"
            winding_2_connection = "Y"
            clock_number = "0"
            embedded_cpl = "false"
            coupling_type = "core"
            Rshunt = "inf"
        }

        "core/Three Phase Voltage Source" {
            init_rms_value = "0.0"
            init_frequency = "50.0"
            init_phase = "0.0"
        }

        "core/Three phase PLL" {
            initial_filter_output = "60"
            wn = "157.0796"
            zeta = "0.707"
            rate_high = "12"
            rate_low = "-12"
            freq_unit = "Hz"
            kp = "100"
            ki = "3200"
            kd = "1"
            N = "714.2857"
            initial_pid_output = "376.99111843"
            up_lim = "1e4"
            low_lim = "-1e4"
            kb = "1"
            power_form = "variant - Clarke\'s original"
            alignment = "-pi/2"
            disable_filter = "False"
            wn_LPFdq = "62.83185307"
            execution_rate = "inherit"
            enable_pk = "False"
            enable_zero = "True"
            enable_sin = "True"
        }

        "core/Transmission Line" {
            model = "RL coupled"
            num_of_phases = "3"
            model_def = "Geometry"
            unit_sys = "imperial"
            Length_metric = "100.0"
            Length_miles = "62.1371"
            Frequency = "60.0"
            Earth_resistivity = "100"
            X_axis_1_metric = "-1.0668"
            Y_axis_1_metric = "8.5344"
            GMR_1_metric = "0.00743712"
            RD_1_metric = "0.009156192"
            Rs_1_metric = "0.19013958482462417"
            X_axis_1_imperial = "-3.5"
            Y_axis_1_imperial = "28.0"
            GMR_1_imperial = "0.0244"
            RD_1_imperial = "0.03004"
            Rs_1_imperial = "0.306"
            X_axis_2_metric = "-0.3048"
            Y_axis_2_metric = "8.5344"
            GMR_2_metric = "0.00743712"
            RD_2_metric = "0.009156192"
            Rs_2_metric = "0.19013958482462417"
            X_axis_2_imperial = "-1.0"
            Y_axis_2_imperial = "28.0"
            GMR_2_imperial = "0.0244"
            RD_2_imperial = "0.03004"
            Rs_2_imperial = "0.306"
            X_axis_3_metric = "1.0668"
            Y_axis_3_metric = "8.5344"
            GMR_3_metric = "0.00743712"
            RD_3_metric = "0.009156192"
            Rs_3_metric = "0.19013958482462417"
            X_axis_3_imperial = "3.5"
            Y_axis_3_imperial = "28.0"
            GMR_3_imperial = "0.0244"
            RD_3_imperial = "0.03004"
            Rs_3_imperial = "0.306"
            X_axis_4_metric = "0.1524"
            Y_axis_4_metric = "7.3152"
            GMR_4_metric = "0.00248"
            RD_4_metric = "0.00714"
            Rs_4_metric = "0.3678"
            X_axis_4_imperial = "0.5"
            Y_axis_4_imperial = "24.0"
            GMR_4_imperial = "0.00814"
            RD_4_imperial = "0.02345"
            Rs_4_imperial = "0.592"
            R_metric = "[[0.2481, 0.0579, 0.0579], [0.0579, 0.2481, 0.0579], [0.0579, 0.0579, 0.2481]]"
            R_imperial = "[[0.4, 0.093, 0.093], [0.093, 0.4, 0.093], [0.093, 0.093, 0.4]]"
            L_metric = "[[0.00233, 0.00140, 0.00140], [0.00140, 0.00233, 0.00140], [0.00140, 0.00140, 0.00233]]"
            L_imperial = "[[0.00374, 0.0022, 0.0022], [0.0022, 0.00374, 0.0022], [0.0022, 0.0022, 0.00374]]"
            C_metric = "[[8.546e-9, 0, 0], [0, 8.546e-9, 0], [0, 0, 8.546e-9]]"
            C_imperial = "[[1.471e-8, 0, 0], [0, 1.530e-8, 0], [0, 0, 1.375e-8]]"
            R_sequence_metric = "[[0.3864, 0, 0],[0, 0.01273, 0], [0, 0, 0.01273]]"
            L_sequence_metric = "[[4.1264e-3, 0, 0],[0, 0.9337e-3, 0], [0, 0, 0.9337e-3]]"
            C_sequence_metric = "[[7.751e-9, 0, 0],[0, 12.74e-9, 0], [0, 0, 12.74e-9]]"
            R_sequence_imperial = "[[0.6218, 0, 0],[0, 0.0204, 0], [0, 0, 0.0204]]"
            L_sequence_imperial = "[[0.00664, 0, 0],[0, 0.00150, 0], [0, 0, 0.00150]]"
            C_sequence_imperial = "[[1.247e-8, 0, 0],[0, 2.0503e-8, 0], [0, 0, 2.0503e-8]]"
            import_from_geometry = "Import from Geometry"
            import_from_RLC = "Import from RLC"
        }

        "core/Triple Pole Single Throw Contactor" {
            ctrl_src = "Digital input"
            Sa = "1"
            Sa_logic = "active high"
            enable_fb_out = "False"
            fb_out_type = "real"
            execution_rate = "inherit"
            initial_state = "off"
            on_delay = "0"
            off_delay = "0"
        }

        "core/Voltage Measurement" {
            bw_limit = "False"
            frequency = "10e3"
            comparator_enable = "False"
            operator = "greater"
            threshold = "0"
            cmp_abs_value = "False"
            feed_forward = "false"
            sig_output = "False"
            execution_rate = "100e-6"
            addr = "0"
            nd_msr_estimation = "false"
            dev_cpl_msr = "false"
            host_device = "0"
            output_to_device = "0"
            dev_cpl_index = "0"
            dev_cpl_var_nb = "0"
            visible = "True"
            override_signal_name = "False"
            signal_name = ""
        }

        "core/Voltage RMS" {
            op_mode = "PLL based"
            frequency = "50"
            sig_output = "False"
            execution_rate = "inherit"
            feed_forward = "false"
            nd_msr_estimation = "false"
        }
    }

    CODE model_init
        # Numpy module is imported as 'np'
        # Scipy module is imported as 'sp'
        
        Ts = 1e-3
        Ts_gen = 1e-3
        sys_f = 60.0    # Hz
        sys_w = 2.0*np.pi*sys_f    #rad/s
        ft2mi = 1.0/5280.0     #mi/ft
        
        # Grid Specs
        
        Vgrid = 115000.0
        SCgrid = 100.0e6
        ratio_grid = 30.0
        
        Rgrid = ((Vgrid/np.sqrt(3))**2)/(SCgrid/3)/np.sqrt(1+ratio_grid**2)
        Lgrid = ratio_grid*Rgrid/sys_w
        
        # Transformer Specs
        
            # Utility
        
        Sn_50MVA       = 50.0e6    # VA
        V1_50MVA       = 115000.0    # V
        V2_50MVA       = 13800.0    # V
        Z_50MVA        = 15.0/100.0    # pu
        Z_ratio_50MVA = 30.0
        
        R_50MVA = Z_50MVA/np.sqrt(1.0+Z_ratio_50MVA**2.0)/2.0    # pu
        L_50MVA = Z_ratio_50MVA*R_50MVA/sys_w/2.0    # pu
        
        R1_50MVA = 3.0*R_50MVA*(V1_50MVA**2.0)/Sn_50MVA
        R2_50MVA = R_50MVA*(V2_50MVA**2.0)/Sn_50MVA
        L1_50MVA = 3.0*L_50MVA*(V1_50MVA**2.0)/Sn_50MVA
        L2_50MVA = L_50MVA*(V2_50MVA**2.0)/Sn_50MVA
        
            # Feeders
        
        Sn_500kVA_1       = 500.0e3    # VA
        V1_500kVA_1       = 13800.0    # V
        V2_500kVA_1       = 480.0    # V
        Z_500kVA_1        = 5.0/100.0    # pu
        Z_ratio_500kVA_1 = 4.9
        
        R_500kVA_1 = Z_500kVA_1/np.sqrt(1.0+Z_ratio_500kVA_1**2.0)/2.0    # pu
        L_500kVA_1 = Z_ratio_500kVA_1*R_500kVA_1/sys_w/2.0    # pu
        
        R1_500kVA_1 = 3.0*R_500kVA_1*(V1_500kVA_1**2.0)/Sn_500kVA_1
        R2_500kVA_1 = R_500kVA_1*(V2_500kVA_1**2.0)/Sn_500kVA_1
        L1_500kVA_1 = 3.0*L_500kVA_1*(V1_500kVA_1**2.0)/Sn_500kVA_1
        L2_500kVA_1 = L_500kVA_1*(V2_500kVA_1**2.0)/Sn_500kVA_1
        
        
        Sn_500kVA_2       = 500.0e3    # VA
        V1_500kVA_2       = 13800.0    # V
        V2_500kVA_2       = 208.0    # V
        Z_500kVA_2        = 5.0/100.0    # pu
        Z_ratio_500kVA_2 = 4.9
        Rm_500kVA_2 = 1e5
        Lm_500kVA_2 = 200
        
        R_500kVA_2 = Z_500kVA_2/np.sqrt(1.0+Z_ratio_500kVA_2**2.0)/2.0    # pu
        L_500kVA_2 = Z_ratio_500kVA_2*R_500kVA_2/sys_w/2.0    # pu
        
        R1_500kVA_2 = 3.0*R_500kVA_2*(V1_500kVA_2**2.0)/Sn_500kVA_2
        R2_500kVA_2 = R_500kVA_2*(V2_500kVA_2**2.0)/Sn_500kVA_2
        L1_500kVA_2 = 3.0*L_500kVA_2*(V1_500kVA_2**2.0)/Sn_500kVA_2
        L2_500kVA_2 = L_500kVA_2*(V2_500kVA_2**2.0)/Sn_500kVA_2
        
        
        Sn_1MVA       = 1000.0e3    # VA
        V1_1MVA       = 13800.0    # V
        V2_1MVA       = 480.0    # V
        Z_1MVA        = 5.56/100.0    # pu
        Z_ratio_1MVA = 5.49
        Rm_1MVA = 1e5
        Lm_1MVA = 200
        
        R_1MVA = Z_1MVA/np.sqrt(1.0+Z_ratio_1MVA**2.0)/2.0    # pu
        L_1MVA = Z_ratio_1MVA*R_1MVA/sys_w/2.0    # pu
        
        R1_1MVA = 3.0*R_1MVA*(V1_1MVA**2.0)/Sn_1MVA
        R2_1MVA = R_1MVA*(V2_1MVA**2.0)/Sn_1MVA
        L1_1MVA = 3.0*L_1MVA*(V1_1MVA**2.0)/Sn_1MVA
        L2_1MVA = L_1MVA*(V2_1MVA**2.0)/Sn_1MVA
        
        Sn_1500kVA       = 1500.0e3    # VA
        V1_1500kVA       = 4160.0    # V
        V2_1500kVA       = 480.0    # V
        Z_1500kVA        = 5.75/100.0    # pu
        Z_ratio_1500kVA = 5.04
        Rm_1500kVA = 1e5
        Lm_1500kVA = 200
        
        R_1500kVA = Z_1500kVA/np.sqrt(1.0+Z_ratio_1500kVA**2.0)/2.0    # pu
        L_1500kVA = Z_ratio_1500kVA*R_1500kVA/sys_w/2.0    # pu
        
        R1_1500kVA = 3.0*R_1500kVA*(V1_1500kVA**2.0)/Sn_1500kVA
        R2_1500kVA = R_1500kVA*(V2_1500kVA**2.0)/Sn_1500kVA
        L1_1500kVA = 3.0*L_1500kVA*(V1_1500kVA**2.0)/Sn_1500kVA
        L2_1500kVA = L_1500kVA*(V2_1500kVA**2.0)/Sn_1500kVA
        
        
        Sn_2MVA_1       = 2000.0e3    # VA
        V1_2MVA_1       = 4160.0    # V
        V2_2MVA_1       = 480.0    # V
        Z_2MVA_1        = 5.75/100.0    # pu
        Z_ratio_2MVA_1 = 5.7
        Rm_2MVA_1 = 1e5
        Lm_2MVA_1 = 200
        
        R_2MVA_1 = Z_2MVA_1/np.sqrt(1.0+Z_ratio_2MVA_1**2.0)/2.0    # pu
        L_2MVA_1 = Z_ratio_2MVA_1*R_2MVA_1/sys_w/2.0    # pu
        
        R1_2MVA_1 = 3.0*R_2MVA_1*(V1_2MVA_1**2.0)/Sn_2MVA_1
        R2_2MVA_1 = R_2MVA_1*(V2_2MVA_1**2.0)/Sn_2MVA_1
        L1_2MVA_1 = 3.0*L_2MVA_1*(V1_2MVA_1**2.0)/Sn_2MVA_1
        L2_2MVA_1 = L_2MVA_1*(V2_2MVA_1**2.0)/Sn_2MVA_1
        
        
        Sn_2MVA_2       = 2000.0e3    # VA
        V1_2MVA_2       = 13800.0    # V
        V2_2MVA_2       = 480.0    # V
        Z_2MVA_2        = 5.75/100.0    # pu
        Z_ratio_2MVA_2 = 5.7
        Rm_2MVA_2 = 1e5
        Lm_2MVA_2 = 200
        
        R_2MVA_2 = Z_2MVA_2/np.sqrt(1.0+Z_ratio_2MVA_2**2.0)/2.0    # pu
        L_2MVA_2 = Z_ratio_2MVA_2*R_2MVA_2/sys_w/2.0    # pu
        
        R1_2MVA_2 = 3.0*R_2MVA_2*(V1_2MVA_2**2.0)/Sn_2MVA_2
        R2_2MVA_2 = R_2MVA_2*(V2_2MVA_2**2.0)/Sn_2MVA_2
        L1_2MVA_2 = 3.0*L_2MVA_2*(V1_2MVA_2**2.0)/Sn_2MVA_2
        L2_2MVA_2 = L_2MVA_2*(V2_2MVA_2**2.0)/Sn_2MVA_2
        
        
        Sn_2500kVA_1       = 2500.0e3    # VA
        V1_2500kVA_1       = 13800.0    # V
        V2_2500kVA_1       = 480.0    # V
        Z_2500kVA_1        = 5.56/100.0    # pu
        Z_ratio_2500kVA_1 = 5.52
        Rm_2500kVA_1 = 1e5
        Lm_2500kVA_1 = 200
        
        R_2500kVA_1 = Z_2500kVA_1/np.sqrt(1.0+Z_ratio_2500kVA_1**2.0)/2.0    # pu
        L_2500kVA_1 = Z_ratio_2500kVA_1*R_2500kVA_1/sys_w/2.0    # pu
        
        R1_2500kVA_1 = 3.0*R_2500kVA_1*(V1_2500kVA_1**2.0)/Sn_2500kVA_1
        R2_2500kVA_1 = R_2500kVA_1*(V2_2500kVA_1**2.0)/Sn_2500kVA_1
        L1_2500kVA_1 = 3.0*L_2500kVA_1*(V1_2500kVA_1**2.0)/Sn_2500kVA_1
        L2_2500kVA_1 = L_2500kVA_1*(V2_2500kVA_1**2.0)/Sn_2500kVA_1
        
        
        Sn_2500kVA_2       = 2500.0e3    # VA
        V1_2500kVA_2       = 13800.0    # V
        V2_2500kVA_2       = 480.0    # V
        Z_2500kVA_2        = 5.75/100.0    # pu
        Z_ratio_2500kVA_2 = 6.6
        Rm_2500kVA_2 = 1e5
        Lm_2500kVA_2 = 200
        
        R_2500kVA_2 = Z_2500kVA_2/np.sqrt(1.0+Z_ratio_2500kVA_2**2.0)/2.0    # pu
        L_2500kVA_2 = Z_ratio_2500kVA_2*R_2500kVA_2/sys_w/2.0    # pu
        
        R1_2500kVA_2 = 3.0*R_2500kVA_2*(V1_2500kVA_2**2.0)/Sn_2500kVA_2
        R2_2500kVA_2 = R_2500kVA_2*(V2_2500kVA_2**2.0)/Sn_2500kVA_2
        L1_2500kVA_2 = 3.0*L_2500kVA_2*(V1_2500kVA_2**2.0)/Sn_2500kVA_2
        L2_2500kVA_2 = L_2500kVA_2*(V2_2500kVA_2**2.0)/Sn_2500kVA_2
        
        
        Sn_3750kVA       = 3750.0e3    # VA
        V1_3750kVA       = 13800.0    # V
        V2_3750kVA       = 4160.0    # V
        Z_3750kVA        = 4.75/100.0    # pu
        Z_ratio_3750kVA = 11.4
        Rm_3750kVA = 1e5
        Lm_3750kVA = 200
        
        R_3750kVA = Z_3750kVA/np.sqrt(1.0+Z_ratio_3750kVA**2.0)/2.0    # pu
        L_3750kVA = Z_ratio_3750kVA*R_3750kVA/sys_w/2.0    # pu
        
        R1_3750kVA = 3.0*R_3750kVA*(V1_3750kVA**2.0)/Sn_3750kVA
        R2_3750kVA = R_3750kVA*(V2_3750kVA**2.0)/Sn_3750kVA
        L1_3750kVA = 3.0*L_3750kVA*(V1_3750kVA**2.0)/Sn_3750kVA
        L2_3750kVA = L_3750kVA*(V2_3750kVA**2.0)/Sn_3750kVA
        
        
        Sn_5MVA       = 5000.0e3    # VA
        V1_5MVA       = 13800.0    # V
        V2_5MVA       = 480.0    # V
        Z_5MVA        = 5.50/100.0    # pu
        Z_ratio_5MVA = 5.44
        Rm_5MVA = 1e5
        Lm_5MVA = 200
        
        R_5MVA = Z_5MVA/np.sqrt(1.0+Z_ratio_5MVA**2.0)/2.0    # pu
        L_5MVA = Z_ratio_5MVA*R_5MVA/sys_w/2.0    # pu
        
        R1_5MVA = 3.0*R_5MVA*(V1_5MVA**2.0)/Sn_5MVA
        R2_5MVA = R_5MVA*(V2_5MVA**2.0)/Sn_5MVA
        L1_5MVA = 3.0*L_5MVA*(V1_5MVA**2.0)/Sn_5MVA
        L2_5MVA = L_5MVA*(V2_5MVA**2.0)/Sn_5MVA
        
        
        # Transmission Line Specs
        
            # The cable 6 impedance is equal to the cable 13 impedance. The differences of both
            # cables are Voltage insulation and Ampacity. Feeder1_line7, Feeder1_line8 and
            # Feeder1_line9 use cable 6.
            # Transmission lines 4, 5 and 6 from Feeder 2 use cable 6.
        
        R1_cable11 = 0.2685    # ohms/mi
        X1_cable11 = 0.207    # ohms/mi
        R0_cable11 = 2.1408    # ohms/mi
        X0_cable11 = 1.582    # ohms/mi
        B_cable11 = 308.7587e-6    # S/mi
        L0_cable11 = X0_cable11/sys_w    # H/mi
        L1_cable11 = X1_cable11/sys_w    # H/mi
        C0_cable11 = B_cable11/sys_w    # F/mi
        R_cable11  = [[R0_cable11,0.0,0.0],[0.0,R1_cable11,0.0],[0.0,0.0,R1_cable11]]
        L_cable11  = [[L0_cable11,0.0,0.0],[0.0,L1_cable11,0.0],[0.0,0.0,L1_cable11]]
        C_cable11  = [[C0_cable11,0.0,0.0],[0.0,C0_cable11,0.0],[0.0,0.0,C0_cable11]]
        
        R1_cable13 = 0.1206    # ohms/mi
        X1_cable13 = 0.1878    # ohms/mi
        R0_cable13 = 1.8354    # ohms/mi
        X0_cable13 = 1.2165    # ohms/mi
        B_cable13 = 384.0177e-6    # S/mi
        L0_cable13 = X0_cable13/sys_w    # H/mi
        L1_cable13 = X1_cable13/sys_w    # H/mi
        C0_cable13 = B_cable13/sys_w    # F/mi
        R_cable13  = [[R0_cable13,0.0,0.0],[0.0,R1_cable13,0.0],[0.0,0.0,R1_cable13]]
        L_cable13  = [[L0_cable13,0.0,0.0],[0.0,L1_cable13,0.0],[0.0,0.0,L1_cable13]]
        C_cable13  = [[C0_cable13,0.0,0.0],[0.0,C0_cable13,0.0],[0.0,0.0,C0_cable13]]
        
        
        # Transmission Line lengths
        
            # Utility
        
        l_U_L1 = 3000.0*ft2mi    # mi
        l_U_L2 = 500.0*ft2mi    # mi
        l_U_L3 = 500.0*ft2mi    # mi
        l_U_L4 = 500.0*ft2mi    # mi
        
            # Feeder1
        
        l_F1L1 = 1800.0*ft2mi    # mi
        l_F1L2 = 5500.0*ft2mi    # mi
        l_F1L3 = 1000.0*ft2mi    # mi
        l_F1L4 = 3000.0*ft2mi    # mi
        l_F1L5 = 3000.0*ft2mi    # mi
        l_F1L6 = 1500.0*ft2mi    # mi
        l_F1L7 = 2000.0*ft2mi    # mi
        l_F1L8 = 1000.0*ft2mi    # mi
        l_F1L9 = 2000.0*ft2mi    # mi
        l_F1DG = 2000.0*ft2mi    # mi
        
            # Fedeer2
        
        l_F2L0 = 10.0*ft2mi    # mi
        l_F2L1 = 5500.0*ft2mi    # mi
        l_F2L2 = 2000.0*ft2mi    # mi
        l_F2L3 = 3000.0*ft2mi    # mi
        l_F2L4 = 1500.0*ft2mi    # mi
        l_F2L5 = 1500.0*ft2mi    # mi
        l_F2L6 = 1500.0*ft2mi    # mi
        
            # Feeder3
        
        l_F3L1 = 2500.0*ft2mi    # mi
        l_F3L2 = 2000.0*ft2mi    # mi
        l_F3L3 = 2000.0*ft2mi    # mi
        l_F3L4 = 1500.0*ft2mi    # mi
        l_F3LNGG = 2000.0*ft2mi    # mi
        
        #EPC ESS specs
        L_inv_ess = 0.133e-3 #7.6573e-5 
        L_grid_ess = 0.08e-3 #4.5944e-5
        
        # Diesel Genset settings
        
            # Governor specs
        
        K = 10  # gain K
        T1 = 1.0E-4 # Time constant T1 of Electric Control Box
        T2 = 0.0 # Time constant T2 of Electric Control Box
        T3 = 0.5001 # Time constant T3 of Electric Control Box
        T4 = 0.025  # Time constant T4 of Actuator
        T5 = 0.0009  # Time constant T5 of Actuator
        T6 = 0.00574  # Time constant T6 of Actuator
        Pm0 = 0.0 #0.0005  # Initial value of Mechanic Power
        Tmax = 10 #1.1  # Max torque limit
        Tmin = -0.1  # Min torque limit
        Td = 0.024  # Engine time delay
        
        dummy = 1.0 + 2.0*T5/Ts
        coeff1 = (1.0 + 2.0*T4/Ts)/dummy
        coeff2 = (1.0 - 2.0*T4/Ts)/dummy
        coeff3 = 1.0
        coeff4 = (1.0 - 2.0*T5/Ts)/dummy
        numTF4d = [coeff1, coeff2]
        denTF4d = [coeff3, coeff4]
        
        dummy = 1.0 + 2.0*T6/Ts
        coeff1 = (1.0)/dummy
        coeff2 = (1.0)/dummy
        coeff3 = 1.0
        coeff4 = (1.0 - 2.0*T6/Ts)/dummy
        numTF3d = [coeff1, coeff2]
        denTF3d = [coeff3, coeff4]
        
        numTF1d = [(1.0+2.0*T3/Ts),2.0,(1.0-2.0*T3/Ts)]
        denTF1d = [(1.0+2.0*T1/Ts+4.0*T1*T2/(Ts**2)),(2.0-8.0*T1*T2/(Ts**2)),(4.0*T1*T2/(Ts**2)-2.0*T1/Ts+1)]
        
            # Synchronous machine specs from Simulink's 4 MVA machine in PU
        
        f = 60.0  # Synchronous speed
        pms = 2.0  # Number of mechanical pole pairs
        Sb_gen1 = 3.5e6  # Nominal/base power of machine in VA
        Vn_gen1 = 13800.0  # Machine terminal line to line rms voltage
        Rs_pu_gen1 = 0.008979  # Stator resistance per phase in pu
        Lls_pu_gen1 = 0.05  # Stator leakage inductance in pu
        Lmd_pu_gen1 = 2.35  # Direct-axis magnetizing inductance in pu
        Lmq_pu_gen1 = 1.72  # Quadrature-axis magnetizing inductance in pu
        Rf_pu_gen1 = 0.00206  # Field resistance in pu
        Llfd_pu_gen1 = 0.511  # Field leakage inductance in pu
        Rkd_pu_gen1 = 0.2826  # D-axis resistance in pu
        Rkq_pu_gen1 = 0.02545  # Q-axis resistance in pu
        Llkd_pu_gen1 = 3.738  # D-axis leakage inductance in pu
        Llkq_pu_gen1 = 0.2392  # Q-axis leakage inductance in pu
        Ns_fd_gen1 = 1.0  # Turn ratio between the stator and the field windings
        Ns_kd_gen1 = 1.0  # Turn ratio between stator and d-axis damper windings
        Ns_kq_gen1 = 1.0  # Turn ratio between stator and q-axis damper windings
        H_gen1 = 0.3468  # Inertia coefficient in seconds
        Fpu_gen1 = 0.009238  # Friction factor in pu
        
            # Base calculation
        
        Vb_gen1 = Vn_gen1*((2.0/3.0)**0.5)  # Nominal/base voltage of machine terminal in V (Peak line to neutral voltage)
        wb_gen1 = 2.0*np.pi*f  # Electrical angular speed base
        wmb_gen1 = wb_gen1/pms  # Mechanical angular speed base
        Zb_gen1 = (Vn_gen1*Vn_gen1)/Sb_gen1  # Impedance base
        Trq_b_gen1 = Sb_gen1/wmb_gen1  # Torque base
        Fb_gen1 = Trq_b_gen1/wmb_gen1  # Friction Factor base
        Lb_gen1 = Zb_gen1/wb_gen1  # Inductance base
        
            # Stator data in SI
        
        Rs_gen1 = Rs_pu_gen1*Zb_gen1
        Lls_gen1 = Lls_pu_gen1*Lb_gen1
        Lmd_gen1 = Lmd_pu_gen1*Lb_gen1
        Lmq_gen1 = Lmq_pu_gen1*Lb_gen1
        Rkd_gen1 = Rkd_pu_gen1*Zb_gen1
        Rkq_gen1 = Rkq_pu_gen1*Zb_gen1
        Llkd_gen1 = Llkd_pu_gen1*Lb_gen1
        Llkq_gen1 = Llkq_pu_gen1*Lb_gen1
        
            # Mechanical data in SI
        
        F_gen1 = Fpu_gen1*Fb_gen1  # Friction Factor in Nm.s
        J_gen1 = 2*H_gen1*Sb_gen1/(wmb_gen1*wmb_gen1)  # Inertia in kg.m2
        
            # Field base calculation
        
        Lsfd_gen1 = (2.0/3.0)*Lmd_gen1*(1.0/Ns_fd_gen1)  # Mutual inductance between stator and field
        ifn_gen1 = Vb_gen1/(Lsfd_gen1*wb_gen1)  # Nominal field current
        ifb_gen1 = ifn_gen1*Lmd_pu_gen1  # Field current base
        Vfb_gen1 = Sb_gen1/ifb_gen1  # Field voltage base
        Zfb_gen1 = Vfb_gen1/ifb_gen1  # Field impedance base
        Lfb_gen1 = Zfb_gen1/wb_gen1  # Field inductance base
        
            # Field data in SI
        
        Rf_gen1 = Rf_pu_gen1*Zfb_gen1  # Field resistance (Field side)
        Llfd_gen1 = Llfd_pu_gen1*Lfb_gen1  # Field inductance (Field side)
        Rf_prime_gen1 = Rf_gen1*(3.0/2.0)*(Ns_fd_gen1*Ns_fd_gen1)  # Field resistance referred to the stator side
        Llfd_prime_gen1 = Llfd_gen1*(3.0/2.0)*(Ns_fd_gen1*Ns_fd_gen1)  # Field inductance referred to the stator side
        
            # Exciter initialization
        
        Tr_gen1 = 20e-4  # Low pass filter time constant
        Ka_gen1 = 200  # Regulator gain
        Ta_gen1 = 2e-3  # Regulator time constant
        Ke_gen1 = 1.0  # Exciter constant
        Te_gen1 = 1e-8 #Exciter time constant
        Tb_gen1 = 1e-12  # Transient gain reduction time constant b
        Tc_gen1 = 1e-12  # Transient gain reduction time constant c
        Kf_gen1 = 0  # Damping filter gain
        Tf_gen1 = 1e-12  # Damping filter time constant
        Efmin_gen1 = -0.1 # Regulator output lower limit
        Efmax_gen1 = 5.0 #5.0  # Regulator output upper limit
        Vt0_gen1 = 0.0  # Initial terminal voltage
        Vf0_gen1 = 0.0  # Initial field voltage
        Const_gen1 = Vf0_gen1/Ka_gen1
        
            #Diesel settings from Unit Test (Mach_ex_gov_PQv3_4MVA_unit_test_woodward_updated_started_v2.tse)
        
        # Governor specs
        
        K = 10  # gain K
        T4 = 0.025  # Time constant T4
        T5 = 0.0009  # Time constant T5
        T6 = 0.00574  # Time constant T6
        Pm0 = 0.0005  # Initial value of Mechanic Power
        Tmax = 1.1  # Max torque limit
        Tmin = 0  # Min torque limit
        Td = 0.024  # Engine time delay
        
        # numTF4d = [27.7777777777778,-27.6726170945921]  # For Ts = 1e-4
        # denTF4d = [1,-0.894839316814370]  # For Ts = 1e-4
        # numTF4d = [27.7777777777778,-27.6056562658610]  # For Ts = 1.7e-4
        # denTF4d = [1,-0.827878488083238]  # For Ts = 1.7e-4
        dummy = 1.0 + 2.0*T5/Ts
        coeff1 = (1.0 + 2.0*T4/Ts)/dummy
        coeff2 = (1.0 - 2.0*T4/Ts)/dummy
        coeff3 = 1.0
        coeff4 = (1.0 - 2.0*T5/Ts)/dummy
        numTF4d = [coeff1, coeff2] #[27.7777777777778,-27.4943090883516]  # For Ts = 3e-4
        denTF4d = [coeff3, coeff4] # [1,-0.716531310573789]  # For Ts = 3e-4
        
        # numTF3d = [0,0.0172707241189214]  # For Ts = 1e-4
        # denTF3d = [1,-0.982729275881079]  # For Ts = 1e-4
        # numTF3d = [0,0.0291824473977244]  # For Ts = 1.7e-4
        # denTF3d = [1,-0.970817552602276]  # For Ts = 1.7e-4
        dummy = 1.0 + 2.0*T6/Ts
        coeff1 = (1.0)/dummy
        coeff2 = (1.0)/dummy
        coeff3 = 1.0
        coeff4 = (1.0 - 2.0*T6/Ts)/dummy
        numTF3d = [coeff1, coeff2] #[0,0.0509224900975103]  # For Ts = 3e-4
        denTF3d = [coeff3, coeff4] # [1,-0.949077509902490]  # For Ts = 3e-4
        
        
        # Synchronous machine specs from Simulink's machine in PU
        
        f = 60.0  # Synchronous speed
        pms = 2.0  # Number of mechanical pole pairs
        Sb_gen2 = 4.0e6  # Nominal/base power of machine in VA
        Vn_gen2 = 13800.0  # Machine terminal line to line rms voltage
        Rs_pu_gen2 = 0.008979  # Stator resistance per phase in pu
        Lls_pu_gen2 = 0.05  # Stator leakage inductance in pu
        Lmd_pu_gen2 = 2.35  # Direct-axis magnetizing inductance in pu
        Lmq_pu_gen2 = 1.72  # Quadrature-axis magnetizing inductance in pu
        Rf_pu_gen2 = 0.00206  # Field resistance in pu
        Llfd_pu_gen2 = 0.511  # Field leakage inductance in pu
        Rkd_pu_gen2 = 0.2826  # D-axis resistance in pu
        Rkq_pu_gen2 = 0.02545  # Q-axis resistance in pu
        Llkd_pu_gen2 = 3.738  # D-axis leakage inductance in pu
        Llkq_pu_gen2 = 0.2392  # Q-axis leakage inductance in pu
        Ns_fd_gen2 = 1.0  # Turn ratio between the stator and the field windings
        Ns_kd_gen2 = 1.0  # Turn ratio between stator and d-axis damper windings
        Ns_kq_gen2 = 1.0  # Turn ratio between stator and q-axis damper windings
        H_gen2 = 0.3468  # Inertia coefficient in seconds
        Fpu_gen2 = 0 #0.009238  # Friction factor in pu
        
        # Base calculation
        
        Vb_gen2 = Vn_gen2*((2.0/3.0)**0.5)  # Nominal/base voltage of machine terminal in V (Peak line to neutral voltage)
        wb_gen2 = 2.0*np.pi*f  # Electrical angular speed base
        wmb_gen2 = wb_gen2/pms  # Mechanical angular speed base
        Zb_gen2 = (Vn_gen2*Vn_gen2)/Sb_gen2  # Impedance base
        Trq_b_gen2 = Sb_gen2/wmb_gen2  # Torque base
        Fb_gen2 = Trq_b_gen2/wmb_gen2  # Friction Factor base
        Lb_gen2 = Zb_gen2/wb_gen2  # Inductance base
        
        # Stator data in SI
        
        Rs_gen2 = Rs_pu_gen2*Zb_gen2
        Lls_gen2 = Lls_pu_gen2*Lb_gen2
        Lmd_gen2 = Lmd_pu_gen2*Lb_gen2
        Lmq_gen2 = Lmq_pu_gen2*Lb_gen2
        Rkd_gen2 = Rkd_pu_gen2*Zb_gen2
        Rkq_gen2 = Rkq_pu_gen2*Zb_gen2
        Llkd_gen2 = Llkd_pu_gen2*Lb_gen2
        Llkq_gen2 = Llkq_pu_gen2*Lb_gen2
        
        # Mechanical data in SI
        
        F_gen2 = Fpu_gen2*Fb_gen2  # Friction Factor in Nm.s
        J_gen2 = 2*H_gen2*Sb_gen2/(wmb_gen2*wmb_gen2)  # Inertia in kg.m2
        
        # Field base calculation
        
        Lsfd_gen2 = (2.0/3.0)*Lmd_gen2*(1.0/Ns_fd_gen2)  # Mutual inductance between stator and field
        ifn_gen2 = Vb_gen2/(Lsfd_gen2*wb_gen2)  # Nominal field current
        ifb_gen2 = ifn_gen2*Lmd_pu_gen2  # Field current base
        Vfb_gen2 = Sb_gen2/ifb_gen2  # Field voltage base
        Zfb_gen2 = Vfb_gen2/ifb_gen2  # Field impedance base
        Lfb_gen2 = Zfb_gen2/wb_gen2  # Field inductance base
        
        # Field data in SI
        
        Rf_gen2 = Rf_pu_gen2*Zfb_gen2  # Field resistance (Field side)
        Llfd_gen2 = Llfd_pu_gen2*Lfb_gen2  # Field inductance (Field side)
        Rf_prime_gen2 = Rf_gen2*(3.0/2.0)*(Ns_fd_gen2*Ns_fd_gen2)  # Field resistance referred to the stator side
        Llfd_prime_gen2 = Llfd_gen2*(3.0/2.0)*(Ns_fd_gen2*Ns_fd_gen2)  # Field inductance referred to the stator side
        
        # Exciter initialization
        
        Tr_gen2 = 1e-3  # Low pass filter time constant
        Ka_gen2 = 20.0  # Regulator gain
        Ta_gen2 = 2e-3  # Regulator time constant
        Ke_gen2 = 1.0  # Exciter constant
        Te_gen2 = 1e-3 #Exciter time constant
        Tb_gen2 = 0.0  # Transient gain reduction time constant b
        Tc_gen2 = 0.0  # Transient gain reduction time constant c
        Kf_gen2 = 0  # Damping filter gain
        Tf_gen2 = 1e-3  # Damping filter time constant
        Efmin_gen2 = -5.0 # 0.0 # Regulator output lower limit
        Efmax_gen2 = 5.0 #5.0  # Regulator output upper limit
        Vt0_gen2 = 0.0  # Initial terminal voltage
        Vf0_gen2 = 0.0  # Initial field voltage
        Const_gen2 = Vf0_gen2/Ka_gen2
        
        dummy_gain_exciter = 0.01
        
        #Rl = 14.283
        #Ll = 0.120472454546162
        
        Rl = 0.1
        Ll = 0.010
        
        Rl_mach = Rl
        Ll_mach = Ll
        
        Rl_shunt = 4761.0/1.0# 4761 Ohm is the resistance needed for 1% of nominal power at nominal voltage
        
        
        load = 0.196837209302326
        
        
            #End of settings from Unit Test 
        
        #Feeder 1 has to have slave_id = 1 to all Relays config
        #Feeder 2 has to have slave_id = 2 to all Relays config
        #Feeder 3 has to have slave_id = 3 to all Relays config
        
        #Relays init time
        cb_init_cond_time = 0.1+Ts
        time_flag_delay = 0.2
        
        configF1_CB1 = {
          'port': 502,
          'ip_addr': '192.168.10.101',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB2 = {
          'port': 502,
          'ip_addr': '192.168.10.102',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB3 = {
          'port': 502,
          'ip_addr': '192.168.10.103',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB4 = {
          'port': 502,
          'ip_addr': '192.168.10.104',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB5 = {
          'port': 502,
          'ip_addr': '192.168.10.105',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB6 = {
          'port': 502,
          'ip_addr': '192.168.10.106',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB7 = {
          'port': 502,
          'ip_addr': '192.168.10.107',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB8 = {
          'port': 502,
          'ip_addr': '192.168.10.108',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB9 = {
          'port': 502,
          'ip_addr': '192.168.10.109',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB10 = {
          'port': 502,
          'ip_addr': '192.168.10.110',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB11 = {
          'port': 502,
          'ip_addr': '192.168.10.111',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB12 = {
          'port': 502,
          'ip_addr': '192.168.10.112',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB13 = {
          'port': 502,
          'ip_addr': '192.168.10.113',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB14 = {
          'port': 502,
          'ip_addr': '192.168.10.114',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        
        configF2_CB1 = {
          'port': 502,
          'ip_addr': '192.168.10.115',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB2 = {
          'port': 502,
          'ip_addr': '192.168.10.116',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB3 = {
          'port': 502,
          'ip_addr': '192.168.10.117',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB4 = {
          'port': 502,
          'ip_addr': '192.168.10.118',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB5 = {
          'port': 502,
          'ip_addr': '192.168.10.119',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB6 = {
          'port': 502,
          'ip_addr': '192.168.10.120',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB7 = {
          'port': 502,
          'ip_addr': '192.168.10.121',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB8 = {
          'port': 502,
          'ip_addr': '192.168.10.122',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB9 = {
          'port': 502,
          'ip_addr': '192.168.10.123',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB10 = {
          'port': 502,
          'ip_addr': '192.168.10.124',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB11 = {
          'port': 502,
          'ip_addr': '192.168.10.125',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB12 = {
          'port': 502,
          'ip_addr': '192.168.10.126',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB13 = {
          'port': 502,
          'ip_addr': '192.168.10.127',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB14 = {
          'port': 502,
          'ip_addr': '192.168.10.128',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB15 = {
          'port': 502,
          'ip_addr': '192.168.10.129',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB16 = {
          'port': 502,
          'ip_addr': '192.168.10.130',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB17 = {
          'port': 502,
          'ip_addr': '192.168.10.131',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB18 = {
          'port': 502,
          'ip_addr': '192.168.10.132',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB19 = {
          'port': 502,
          'ip_addr': '192.168.10.133',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        
        configF3_CB1 = {
          'port': 502,
          'ip_addr': '192.168.10.134',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF3_CB2 = {
          'port': 502,
          'ip_addr': '192.168.10.135',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF3_CB3 = {
          'port': 502,
          'ip_addr': '192.168.10.136',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF3_CB4 = {
          'port': 502,
          'ip_addr': '192.168.10.137',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF3_CB5 = {
          'port': 502,
          'ip_addr': '192.168.10.138',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF3_CB6 = {
          'port': 502,
          'ip_addr': '192.168.10.139',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF3_CB7 = {
          'port': 502,
          'ip_addr': '192.168.10.140',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF3_CB8 = {
          'port': 502,
          'ip_addr': '192.168.10.141',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF3_CB9 = {
          'port': 502,
          'ip_addr': '192.168.10.142',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        dms_config = {
          'port': 502,
          'ip_addr': '192.168.10.54',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '0,1,2,7,3,8,4,9,5,10,6,11,12,13,14,15',
          'holding_register_output_addresses': '',
          'input_register_adresses': ''
        }
        configCHP = {
            'port': 502,
            'ip_addr': '192.168.10.55',
            'netmask': '255.255.255.0',
            'slave_id': 3,
            'coil_input_addresses': '',
            'coil_output_addresses': '',
            'discrete_input_addresses': '',
            'holding_register_input_addresses': '',
            'holding_register_output_addresses': '2000,2001',
            'input_register_adresses': '0,1,2,3,4'
        }
        
            #Transformers Lm and Rm
        Rm_utility_transfo1 = 1e5
        Lm_utility_transfo1 = 200
        
        Rm_feeder1_transfo1 = 1e5
        Lm_feeder1_transfo1 = 200
        
        Rm_feeder1_transfo2 = 1e5
        Lm_feeder1_transfo2 = 200
        
        Rm_feeder1_transfo3 = 1e5
        Lm_feeder1_transfo3 = 200
        
        Rm_feeder1_transfo4 = 1e5
        Lm_feeder1_transfo4 = 200
        
        Rm_feeder1_transfo5 = 1e5
        Lm_feeder1_transfo5 = 200
        
        Rm_feeder1_transfo6 = 1e5
        Lm_feeder1_transfo6 = 200
        
        Rm_feeder1_transfo7 = 1e5
        Lm_feeder1_transfo7 = 200
    ENDCODE
}
