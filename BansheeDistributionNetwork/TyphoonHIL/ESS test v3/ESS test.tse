version = 4.2

//
// Saved by sw version: 2020.1 SP2
// Save timestamp: 29-Jun-2020 @ 10:02:55 PM
//

model "ESS test" {
    configuration {
        hil_device = "HIL603"
        hil_configuration_id = 1
        simulation_method = exact
        simulation_time_step = auto
        simulation_discret_scaling = 1.0
        dsp_timer_periods = 100e-6, 50e-3
        ss_calc_method = "systematic elimination"
        enb_pole_shift = True
        enb_gds_oversampling = True
        show_modes = False
        device_ao_limit_enable = True
        cpl_stb = False
        enb_dep_sw_detect = False
        code_section = "internal memory"
        data_section = "internal memory"
        sys_sp_rate_1 = 0.0001
        sys_sp_rate_2 = 0.05
        sys_real_type_precision = "default"
        user_real_type_precision = "default"
        sys_cpu_optimization = "high"
        user_cpu_optimization = "high"
    }

    component Subsystem Root {
        component "core/Voltage Measurement" Vb {
            execution_rate = "Ts"
            sig_output = "True"
        }
        [
            position = 8808, 8768
            rotation = right
            size = 64, 32
        ]

        component pas_resistor R17 {
            resistance = "1e4"
        }
        [
            position = 9376, 8704
            rotation = right
        ]

        component "core/Voltage Measurement" Vc {
            execution_rate = "Ts"
            sig_output = "True"
        }
        [
            position = 8880, 8816
            rotation = right
            size = 64, 32
        ]

        component pas_resistor R18 {
            resistance = "1e4"
        }
        [
            position = 9312, 8704
            rotation = right
        ]

        component "core/Voltage Measurement" Va {
            execution_rate = "Ts"
            sig_output = "True"
        }
        [
            position = 8736, 8720
            rotation = right
            size = 64, 32
        ]

        component "core/Triple Pole Single Throw Contactor" MX1 {
            Sa = "10"
            ctrl_src = "Model"
        }
        [
            position = 8552, 8480
            size = 64, 256
        ]

        component pas_resistor R16 {
            resistance = "1e4"
        }
        [
            position = 9440, 8704
            rotation = right
        ]

        component "core/Current Measurement" ESS_Ia {
            execution_rate = "Ts"
            sig_output = "True"
        }
        [
            position = 9128, 8384
            size = 64, 32
        ]

        component "core/Current Measurement" ESS_Ic {
            execution_rate = "Ts"
            sig_output = "True"
        }
        [
            position = 9032, 8576
            size = 64, 32
        ]

        component "core/Current Measurement" ESS_Ib {
            execution_rate = "Ts"
            sig_output = "True"
        }
        [
            position = 9080, 8480
            size = 64, 32
        ]

        component gen_PQ_transform "Power Meter1" {
        }
        [
            position = 8808, 8016
        ]

        component gen_probe P {
        }
        [
            position = 8944, 7960
        ]

        component gen_probe Q {
        }
        [
            position = 8944, 8008
        ]

        component src_scada_input ESS_start {
            execution_rate = "Tfast"
            unit = ""
        }
        [
            position = 8680, 8208
            scale = -1, 1
        ]

        component "core/Voltage RMS" Vrms_grid {
            frequency = "sys_f"
            op_mode = "Fixed frequency"
        }
        [
            position = 10224, 8592
            rotation = right
            size = 64, 32
        ]

        component src_ground gnd3 {
        }
        [
            position = 9264, 8944
            rotation = down
            hide_name = True
            scale = 1, -1
        ]

        component pas_resistor Rgrid {
            resistance = "R"
        }
        [
            position = 9552, 8384
        ]

        component pas_resistor Rgrid1 {
            resistance = "R"
        }
        [
            position = 9552, 8480
        ]

        component pas_resistor Rgrid2 {
            resistance = "R"
        }
        [
            position = 9560, 8576
        ]

        component pas_inductor La4 {
            inductance = "L"
        }
        [
            position = 9656, 8384
            rotation = down
        ]

        component pas_inductor La5 {
            inductance = "L"
        }
        [
            position = 9688, 8480
            rotation = down
        ]

        component pas_inductor La6 {
            inductance = "L"
        }
        [
            position = 9688, 8576
            rotation = down
        ]

        component Subsystem "Grid feeding inverter (averaged)" {
            layout = dynamic
            component pas_resistor Rt0b1 {
                resistance = "R_s"
            }
            [
                position = 8096, 8256
                rotation = left
                scale = -1, 1
            ]

            component "core/Current Measurement" Ia1 {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 9256, 7904
                size = 64, 32
            ]

            component "core/Voltage Measurement" Vc2 {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 7856, 8480
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component pas_resistor Rt0c1 {
                resistance = "R_s"
            }
            [
                position = 8176, 8256
                rotation = left
                scale = -1, 1
            ]

            component pas_inductor Lb1 {
                inductance = "L_o"
            }
            [
                position = 8984, 8000
                rotation = down
            ]

            component pas_inductor Lgridb_1 {
                inductance = "L"
            }
            [
                position = 9584, 8000
                rotation = down
            ]

            component "core/Current Measurement" Xi_a1 {
                addr = "14"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 7840, 7904
                scale = 1, -1
                size = 64, 32
            ]

            component pas_capacitor Cc1 {
                capacitance = "C_s"
            }
            [
                position = 8176, 8352
                rotation = right
            ]

            component gen_bus_split "Bus Split1" {
                outputs = "3"
            }
            [
                position = 6912, 7760
                hide_name = True
            ]

            component gen_probe Ec_1 {
            }
            [
                position = 8512, 8400
            ]

            component pas_resistor Rgrida_1 {
                resistance = "R"
            }
            [
                position = 9488, 7904
            ]

            component pas_resistor Ra1 {
                resistance = "R_o"
            }
            [
                position = 8888, 7904
            ]

            component pas_resistor Rb1 {
                resistance = "R_o"
            }
            [
                position = 8888, 8000
            ]

            component pas_inductor Lgrida_1 {
                inductance = "L"
            }
            [
                position = 9584, 7904
                rotation = down
            ]

            component "core/Voltage Measurement" Vb2 {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 7728, 8432
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component pas_resistor Rgridc_1 {
                resistance = "R"
            }
            [
                position = 9488, 8096
            ]

            component pas_inductor L0b1 {
                inductance = "L_i"
            }
            [
                position = 7744, 8000
                rotation = down
            ]

            component "core/Voltage Measurement" Va2 {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 7600, 8384
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component "core/Signal Controlled Voltage Source" Va_inv {
            }
            [
                position = 7008, 7944
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component gen_product Product1 {
            }
            [
                position = 6816, 7760
                hide_name = True
            ]

            component pas_capacitor Cb1 {
                capacitance = "C_s"
            }
            [
                position = 8096, 8352
                rotation = right
            ]

            component pas_inductor L0c1 {
                inductance = "L_i"
            }
            [
                position = 7744, 8096
                rotation = down
            ]

            component "core/Current Measurement" Xi_c1 {
                addr = "16"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 7952, 8096
                scale = 1, -1
                size = 64, 32
            ]

            component "core/Voltage Measurement" Ec1 {
                addr = "11"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 8544, 8272
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component src_constant Constant1 {
                execution_rate = "Ts"
                value = "900"
            }
            [
                position = 6624, 8232
                hide_name = True
            ]

            component "core/Voltage Measurement" Ea1 {
                addr = "7"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 8400, 8144
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component "core/Signal Controlled Voltage Source" Vc_inv {
            }
            [
                position = 7168, 8136
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component "core/Current Measurement" Ib1 {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 9256, 8000
                size = 64, 32
            ]

            component pas_resistor Rc1 {
                resistance = "R_o"
            }
            [
                position = 8888, 8096
            ]

            component "core/Current Measurement" Xi_b1 {
                addr = "15"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 7888, 8000
                scale = 1, -1
                size = 64, 32
            ]

            component gen_probe Eb_1 {
            }
            [
                position = 8400, 8288
            ]

            component "core/Three Phase Two Winding Transformer" Tr1 {
                Poc1 = "344.99999999952564"
                Psc1 = "1762.5"
                Sn = "120000"
                V1 = "277"
                V2 = "480"
                current_vals_SCOC = "[0.0024, 1.0]"
                ioc1 = "0.6999999999992988"
                usc1 = "3.9999999999957394"
            }
            [
                position = 9936, 8000
                size = 126, 256
            ]

            component pas_resistor Rgridb_1 {
                resistance = "R"
            }
            [
                position = 9488, 8000
            ]

            component pas_resistor R0b1 {
                resistance = "R_i"
            }
            [
                position = 7632, 8000
            ]

            component "core/Voltage Measurement" Eb1 {
                addr = "9"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 8464, 8208
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component Subsystem Controller {
                layout = dynamic
                component gen_gain Gain11 {
                    gain = "1/I_DQ"
                }
                [
                    position = 7384, 8616
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_probe f1 {
                }
                [
                    position = 7712, 8280
                    rotation = down
                ]

                component gen_product Product10 {
                }
                [
                    position = 7368, 8296
                    scale = -1, 1
                ]

                component gen_probe E_qREF1 {
                }
                [
                    position = 7568, 8064
                ]

                component gen_probe E_q1 {
                }
                [
                    position = 7744, 8224
                    scale = -1, 1
                ]

                component Subsystem Current_abc_to_dq4 {
                    layout = dynamic
                    component gen_terminator Termination1 {
                    }
                    [
                        position = 7952, 8064
                    ]

                    component "core/abc to dq" "abc to dq1" {
                    }
                    [
                        position = 7856, 8008
                        size = 48, 80
                    ]

                    port "^Ea2" {
                        label = "^Ea2"
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 7960
                    ]

                    port "^Eb2" {
                        label = "^Eb2"
                        position = right:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8000
                    ]

                    port "^Ed2" {
                        label = "^Ed2"
                        position = left:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 7976
                    ]

                    port "^Eq2" {
                        label = "^Eq2"
                        position = left:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 8016
                    ]

                    port wt2 {
                        label = "wt2"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8088
                    ]

                    port "^Ec2" {
                        label = "^Ec2"
                        position = right:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8040
                    ]

                    connect "^Eb2" "abc to dq1.vb" as Connection2
                    connect wt2 "abc to dq1.wt" as Connection7
                    connect Termination1.in "abc to dq1.zero_axis" as Connection4
                    connect "^Ea2" "abc to dq1.va" as Connection1
                    connect "^Ec2" "abc to dq1.vc" as Connection3
                    connect "abc to dq1.q_axis" "^Eq2" as Connection6
                    connect "abc to dq1.d_axis" "^Ed2" as Connection5
                }
                [
                    position = 7480, 8680
                    size = 80, 168
                ]

                component Subsystem Current_abc_to_dq {
                    layout = dynamic
                    component "core/abc to dq" "abc to dq1" {
                    }
                    [
                        position = 7856, 8008
                        size = 48, 80
                    ]

                    component gen_terminator Termination1 {
                    }
                    [
                        position = 7952, 8064
                    ]

                    port Xi_d2 {
                        label = "Xi_d2"
                        position = left:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 7976
                    ]

                    port wt2 {
                        label = "wt2"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8088
                    ]

                    port Xi_c2 {
                        label = "Xi_c2"
                        position = right:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8040
                    ]

                    port Xi_a2 {
                        label = "Xi_a2"
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 7960
                    ]

                    port Xi_q2 {
                        label = "Xi_q2"
                        position = left:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 8016
                    ]

                    port Xi_b2 {
                        label = "Xi_b2"
                        position = right:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8000
                    ]

                    connect Termination1.in "abc to dq1.zero_axis" as Connection4
                    connect Xi_a2 "abc to dq1.va" as Connection1
                    connect "abc to dq1.q_axis" Xi_q2 as Connection6
                    connect Xi_b2 "abc to dq1.vb" as Connection2
                    connect "abc to dq1.d_axis" Xi_d2 as Connection5
                    connect Xi_c2 "abc to dq1.vc" as Connection3
                    connect wt2 "abc to dq1.wt" as Connection7
                }
                [
                    position = 7944, 7880
                    size = 80, 168
                ]

                component gen_gain Gain1 {
                    gain = "1/(2*np.pi)"
                }
                [
                    position = 7800, 8280
                    scale = -1, 1
                ]

                component gen_sum Sum1 {
                }
                [
                    position = 7264, 8224
                    scale = -1, 1
                ]

                component gen_gain Gain5 {
                    gain = "1/V_DQ"
                }
                [
                    position = 7864, 8120
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_probe Xi_d {
                    addr = "8968"
                }
                [
                    position = 7760, 7720
                    scale = -1, 1
                ]

                component gen_gain Gain4 {
                    gain = "1/T_m"
                }
                [
                    position = 6992, 8232
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_sum Sum4 {
                    signs = "+-"
                }
                [
                    position = 7072, 8232
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_gain Gain14 {
                    gain = "S"
                }
                [
                    position = 7136, 8456
                    rotation = right
                    hide_name = True
                    scale = -1, 1
                ]

                component Subsystem "Outer Voltage Loop + Inner Current Loop" {
                    layout = dynamic
                    component Subsystem "dq to abc" {
                        layout = dynamic
                        component src_constant o_ref {
                            execution_rate = "Ts"
                            value = "[0]"
                        }
                        [
                            position = 7520, 8200
                        ]

                        component "core/dq to abc" "dq to abc1" {
                            execution_rate = "inherit"
                        }
                        [
                            position = 7744, 8184
                            size = 48, 80
                        ]

                        port q {
                            label = "Uq1"
                            position = right:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7472, 8168
                        ]

                        port d {
                            label = "Ud1"
                            position = right:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7520, 8136
                        ]

                        port b {
                            label = "b"
                            position = left:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7896, 8184
                        ]

                        port alpha {
                            label = "alpha1"
                            position = right:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7600, 8232
                        ]

                        port c {
                            label = "c"
                            position = left:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7864, 8216
                        ]

                        port a {
                            label = "a"
                            position = left:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7864, 8152
                        ]

                        connect c "dq to abc1.phase_c" as Connection2
                        connect o_ref.out "dq to abc1.zero_input" as Connection5
                        connect "dq to abc1.phase_b" b as Connection4
                        connect d "dq to abc1.d_input" as Connection3
                        connect q "dq to abc1.q_input" as Connection6
                        connect a "dq to abc1.phase_a" as Connection1
                        connect alpha "dq to abc1.wt" as Connection7
                    }
                    [
                        position = 8344, 8456
                        size = 80, 168
                    ]

                    component Subsystem "inner current control loop" {
                        layout = dynamic
                        component gen_gain Gain7 {
                            gain = "L_i"
                        }
                        [
                            position = 8312, 8368
                            scale = -1, 1
                        ]

                        component gen_gain Gain5 {
                            gain = "[0.5]"
                        }
                        [
                            position = 8024, 8432
                            scale = -1, 1
                        ]

                        component gen_pid_controller "PID controller1" {
                            controller_type = "PI"
                            enb_anti_windup_out = "True"
                            enb_output_limit_out = "True"
                            ki = "Ki_I"
                            kp = "Kp_I"
                            lower_sat_lim = "Imin"
                            upper_sat_lim = "Imax"
                        }
                        [
                            position = 8200, 8040
                            scale = -1, 1
                        ]

                        component src_constant one {
                            execution_rate = "Ts"
                            value = "[1000]"
                        }
                        [
                            position = 8216, 8416
                            scale = -1, 1
                        ]

                        component gen_sum Sum8 {
                            signs = "+-"
                        }
                        [
                            position = 8328, 8040
                            scale = -1, 1
                        ]

                        component gen_pid_controller "PID controller2" {
                            controller_type = "PI"
                            enb_anti_windup_out = "True"
                            enb_output_limit_out = "True"
                            ki = "Ki_I"
                            kp = "Kp_I"
                            lower_sat_lim = "Imin"
                            upper_sat_lim = "Imax"
                        }
                        [
                            position = 8208, 8224
                            scale = -1, 1
                        ]

                        component sys_signal_switch "Signal switch1" {
                            threshold = "0.5"
                        }
                        [
                            position = 8128, 8432
                            scale = -1, -1
                        ]

                        component gen_product Product4 {
                            signs = "*/"
                        }
                        [
                            position = 7864, 8280
                            scale = -1, 1
                        ]

                        component gen_sum Sum9 {
                            signs = "+-"
                        }
                        [
                            position = 8320, 8224
                            scale = -1, 1
                        ]

                        component gen_gain Gain6 {
                            gain = "L_i"
                        }
                        [
                            position = 8256, 8176
                            scale = -1, 1
                        ]

                        component gen_product Product2 {
                        }
                        [
                            position = 8208, 8336
                            scale = -1, 1
                        ]

                        component gen_sum Sum7 {
                        }
                        [
                            position = 7760, 8232
                            scale = -1, 1
                        ]

                        component src_constant Limit_zero {
                            execution_rate = "Ts"
                            value = "[100]"
                        }
                        [
                            position = 8336, 8512
                            scale = -1, 1
                        ]

                        component gen_sum Sum3 {
                        }
                        [
                            position = 7760, 8048
                            scale = -1, 1
                        ]

                        component gen_product Product3 {
                            signs = "*/"
                        }
                        [
                            position = 7856, 8112
                            scale = -1, 1
                        ]

                        component gen_comparator Comparator1 {
                        }
                        [
                            position = 8224, 8472
                            scale = -1, 1
                        ]

                        component gen_product Product1 {
                        }
                        [
                            position = 8168, 8144
                            scale = -1, 1
                        ]

                        component gen_sum Sum6 {
                        }
                        [
                            position = 8040, 8272
                            scale = -1, 1
                        ]

                        component gen_sum Sum5 {
                            signs = "+-"
                        }
                        [
                            position = 8024, 8104
                            scale = -1, 1
                        ]

                        component gen_probe Vdc {
                        }
                        [
                            position = 7880, 8472
                            scale = -1, 1
                        ]

                        component gen_gain Gain8 {
                            gain = "[1/Zbase]"
                        }
                        [
                            position = 8136, 8336
                            scale = -1, 1
                        ]

                        component gen_gain Gain9 {
                            gain = "[1/Zbase]"
                        }
                        [
                            position = 8096, 8144
                            scale = -1, 1
                        ]

                        component gen_probe omega {
                        }
                        [
                            position = 8376, 8096
                        ]

                        component gen_probe sig1 {
                        }
                        [
                            position = 8024, 8184
                            scale = -1, 1
                        ]

                        component gen_limiter Limit1 {
                            lower_limit = "[-10]"
                            upper_limit = "[10]"
                        }
                        [
                            position = 7664, 8048
                            hide_name = True
                            scale = -1, 1
                        ]

                        component gen_limiter Limit2 {
                            lower_limit = "[-10]"
                            upper_limit = "[10]"
                        }
                        [
                            position = 7680, 8232
                            hide_name = True
                            scale = -1, 1
                        ]

                        port Xi_d_ref1 {
                            label = "Xi_d_ref1"
                            position = right:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8512, 8032
                            rotation = down
                        ]

                        port Ud1 {
                            position = left:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7592, 8048
                            rotation = down
                        ]

                        port Xi_q_ref1 {
                            label = "Xi_q_ref1"
                            position = right:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8464, 8216
                            rotation = down
                        ]

                        port Xi_q_meas1 {
                            label = "Xi_q_meas1"
                            position = right:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8464, 8288
                            rotation = down
                        ]

                        port Uq1 {
                            position = left:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7592, 8232
                            rotation = down
                        ]

                        port Xi_d_meas1 {
                            label = "Xi_d_meas1"
                            position = right:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8600, 8112
                            rotation = down
                        ]

                        tag From24 {
                            value = "Ed1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8112, 8056
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag From26 {
                            value = "Eq1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8128, 8264
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag From25 {
                            value = "w1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8328, 8312
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag From27 {
                            value = "VDC1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8384, 8448
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag From23 {
                            value = "w1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8272, 8112
                            scale = -1, 1
                            size = 60, 20
                        ]

                        junction Junction171 sp
                        [
                            position = 7928, 8288
                        ]

                        junction Junction176 sp
                        [
                            position = 8400, 8232
                        ]

                        junction Junction172 sp
                        [
                            position = 8280, 8448
                        ]

                        junction Junction179 sp
                        [
                            position = 8520, 8112
                        ]

                        junction Junction180 sp
                        [
                            position = 8080, 8432
                        ]

                        junction Junction181 sp
                        [
                            position = 8224, 8112
                        ]

                        junction Junction182 sp
                        [
                            position = 8064, 8144
                        ]

                        connect Gain7.out Product2.in1 as Connection293
                        connect Sum9.in Xi_q_ref1 as Connection283
                        connect Limit_zero.out Comparator1.in2 as Connection251
                        connect Junction176 Sum9.in1 as Connection291
                        connect "PID controller1.out" Sum3.in as Connection310
                        [
                            breakpoints = 8160, 8040
                        ]
                        connect Xi_q_meas1 Junction176 as Connection290
                        [
                            breakpoints = 8432, 8264; 8432, 8232
                        ]
                        connect Gain6.in Junction176 as Connection292
                        [
                            breakpoints = 8288, 8176; 8400, 8176; 8400, 8192; 8400, 8192
                        ]
                        connect Sum7.in "PID controller2.out" as Connection311
                        [
                            breakpoints = 8160, 8224
                        ]
                        connect Product4.in1 Junction171 as Connection252
                        connect Comparator1.out "Signal switch1.in2" as Connection57
                        connect Junction172 Comparator1.in1 as Connection267
                        connect "PID controller2.in" Sum9.out as Connection306
                        [
                            breakpoints = 8240, 8224
                        ]
                        connect Sum8.in Xi_d_ref1 as Connection297
                        connect "Signal switch1.in" Junction172 as Connection266
                        connect Product3.out Sum3.in1 as Connection17
                        connect Junction171 Product3.in1 as Connection253
                        [
                            breakpoints = 7928, 8288; 7928, 8120
                        ]
                        connect Gain6.out Product1.in1 as Connection289
                        connect From26 Sum6.in as Connection3
                        connect Product4.out Sum7.in1 as Connection19
                        connect From25 Product2.in as Connection2
                        connect From27 Junction172 as Connection268
                        connect one.out "Signal switch1.in1" as Connection40
                        connect Sum8.out "PID controller1.in" as Connection302
                        [
                            breakpoints = 8240, 8040
                        ]
                        connect Sum5.in From24 as Connection23
                        connect Sum6.in1 Gain8.out as Connection315
                        connect Gain8.in Product2.out as Connection316
                        connect Gain9.in Product1.out as Connection318
                        connect Gain7.in Junction179 as Connection320
                        [
                            breakpoints = 8520, 8368
                        ]
                        connect Junction179 Sum8.in1 as Connection321
                        [
                            breakpoints = 8520, 8112; 8520, 8112
                        ]
                        connect Xi_d_meas1 Junction179 as Connection322
                        connect Junction171 Gain5.out as Connection323
                        [
                            breakpoints = 7928, 8288; 7928, 8432
                        ]
                        connect "Signal switch1.out" Junction180 as Connection324
                        connect Junction180 Gain5.in as Connection325
                        connect Vdc.in Junction180 as Connection326
                        connect From23 Junction181 as Connection331
                        connect Junction181 Product1.in as Connection332
                        connect omega.in Junction181 as Connection333
                        connect Sum5.in1 Junction182 as Connection334
                        connect Junction182 Gain9.out as Connection335
                        connect sig1.in Junction182 as Connection336
                        connect Sum3.out Limit1.in as Connection337
                        connect Limit1.out Ud1 as Connection338
                        connect Uq1 Limit2.out as Connection339
                        connect Limit2.in Sum7.out as Connection340
                        connect Product3.in Sum5.out as Connection341
                        connect Product4.in Sum6.out as Connection342
                    }
                    [
                        position = 8608, 8424
                        size = 96, 184
                    ]

                    component Subsystem "outer power loop" {
                        layout = dynamic
                        component sys_signal_switch "Signal switch1" {
                            threshold = "0.5"
                        }
                        [
                            position = 8256, 8328
                            scale = -1, -1
                        ]

                        component gen_gain Gain1 {
                            gain = "2.0/3.0"
                        }
                        [
                            position = 8024, 8080
                            scale = -1, 1
                        ]

                        component gen_comparator Comparator1 {
                        }
                        [
                            position = 8352, 8368
                            scale = -1, 1
                        ]

                        component gen_sum Sum3 {
                            signs = "+-"
                        }
                        [
                            position = 8232, 8072
                            scale = -1, 1
                        ]

                        component gen_product Product1 {
                            signs = "*/"
                        }
                        [
                            position = 8120, 8080
                            scale = -1, 1
                        ]

                        component gen_probe Et_sqr_res {
                        }
                        [
                            position = 8224, 8256
                        ]

                        component gen_product Product2 {
                            signs = "*/"
                        }
                        [
                            position = 8120, 8168
                            scale = -1, 1
                        ]

                        component gen_gain Gain2 {
                            gain = "2.0/3.0"
                        }
                        [
                            position = 8024, 8168
                            scale = -1, 1
                        ]

                        component gen_product Product4 {
                        }
                        [
                            position = 8440, 8080
                            scale = -1, 1
                        ]

                        component gen_sum Sum4 {
                        }
                        [
                            position = 8232, 8160
                            scale = -1, 1
                        ]

                        component gen_probe Et_sqr {
                        }
                        [
                            position = 8496, 8288
                        ]

                        component gen_product Product5 {
                        }
                        [
                            position = 8440, 8152
                            scale = -1, 1
                        ]

                        component gen_product Product3 {
                        }
                        [
                            position = 8440, 8008
                            scale = -1, 1
                        ]

                        component src_constant Limit_zero {
                            execution_rate = "Ts"
                            value = "[0.1]"
                        }
                        [
                            position = 8464, 8408
                            scale = -1, 1
                        ]

                        component gen_product Product6 {
                        }
                        [
                            position = 8440, 8224
                            scale = -1, 1
                        ]

                        component gen_probe Pref_probe {
                        }
                        [
                            position = 8752, 8176
                        ]

                        component src_constant one {
                            execution_rate = "Ts"
                            value = "[1]"
                        }
                        [
                            position = 8344, 8312
                            scale = -1, 1
                        ]

                        port Q_ref {
                            label = "Q_ref"
                            position = right:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8648, 8216
                            rotation = down
                        ]

                        port Eq {
                            label = "Eq"
                            position = right:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8648, 8000
                            rotation = down
                        ]

                        port Xi_rq {
                            label = "Xi_rq"
                            position = left:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7952, 8080
                            rotation = down
                        ]

                        port Et_p2 {
                            label = "Et^2"
                            position = right:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8600, 8360
                            rotation = down
                        ]

                        port Ed {
                            label = "Ed"
                            position = right:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8648, 8072
                            rotation = down
                        ]

                        port P_ref {
                            label = "P_ref"
                            position = right:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8648, 8144
                            rotation = down
                        ]

                        port Xi_rd {
                            label = "Xi_rd"
                            position = left:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7952, 8168
                            rotation = down
                        ]

                        junction Junction142 sp
                        [
                            position = 8528, 8072
                        ]

                        junction Junction143 sp
                        [
                            position = 8544, 8000
                        ]

                        junction Junction144 sp
                        [
                            position = 8408, 8360
                        ]

                        junction Junction147 sp
                        [
                            position = 8184, 8328
                        ]

                        junction Junction148 sp
                        [
                            position = 8600, 8144
                        ]

                        junction Junction149 sp
                        [
                            position = 8424, 8360
                        ]

                        junction Junction138 sp
                        [
                            position = 8160, 8176
                        ]

                        junction Junction139 sp
                        [
                            position = 8568, 8144
                        ]

                        junction Junction141 sp
                        [
                            position = 8560, 8216
                        ]

                        connect Product1.in Sum3.out as Connection23
                        connect Gain2.out Xi_rd as Connection8
                        connect Product6.in1 Junction143 as Connection36
                        connect Et_sqr_res.in Junction147 as Connection5
                        connect Product2.in1 Junction138 as Connection25
                        connect Product3.out Sum3.in as Connection28
                        connect Junction149 Junction144 as Connection45
                        connect Product2.out Gain2.in as Connection24
                        connect Junction138 Product1.in1 as Connection9
                        connect Comparator1.in1 Junction144 as Connection1
                        connect Gain1.in Product1.out as Connection6
                        connect Product6.out Sum4.in1 as Connection37
                        connect Product4.in1 Junction141 as Connection29
                        connect Limit_zero.out Comparator1.in2 as Connection19
                        connect Junction139 Junction148 as Connection10
                        connect Product4.in Junction142 as Connection30
                        connect Comparator1.out "Signal switch1.in2" as Connection2
                        connect Junction141 Q_ref as Connection11
                        connect "Signal switch1.in" Junction144 as Connection38
                        connect Gain1.out Xi_rq as Connection7
                        connect Product4.out Sum3.in1 as Connection31
                        connect Junction142 Ed as Connection12
                        connect Eq Junction143 as Connection3
                        connect Junction143 Product3.in as Connection13
                        connect "Signal switch1.out" Junction147 as Connection39
                        connect Product5.in Junction139 as Connection32
                        connect Product5.in1 Junction142 as Connection33
                        connect Et_p2 Junction149 as Connection46
                        connect Product5.out Sum4.in as Connection34
                        connect one.out "Signal switch1.in1" as Connection40
                        connect Junction148 P_ref as Connection18
                        connect Pref_probe.in Junction148 as Connection22
                        connect Et_sqr.in Junction149 as Connection44
                        connect Product6.in Junction141 as Connection35
                        connect Product2.in Sum4.out as Connection26
                        connect Product3.in1 Junction139 as Connection27
                        connect Junction138 Junction147 as Connection47
                        [
                            breakpoints = 8160, 8176; 8160, 8264
                        ]
                    }
                    [
                        position = 8864, 8400
                        size = 176, 128
                    ]

                    component Subsystem squared_Vt2 {
                        layout = dynamic
                        component gen_product Product1 {
                        }
                        [
                            position = 8208, 8160
                            scale = -1, 1
                        ]

                        component gen_sum Sum3 {
                        }
                        [
                            position = 8104, 8192
                            scale = -1, 1
                        ]

                        component gen_product Product2 {
                        }
                        [
                            position = 8208, 8232
                            scale = -1, 1
                        ]

                        port Et_p2 {
                            label = "Et^2"
                            position = left:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8032, 8192
                            rotation = down
                        ]

                        port Eq {
                            label = "Eq"
                            position = right:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8328, 8224
                            rotation = down
                        ]

                        port Ed {
                            label = "Ed"
                            position = right:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8328, 8152
                            rotation = down
                        ]

                        junction Junction137 sp
                        [
                            position = 8280, 8224
                        ]

                        junction Junction136 sp
                        [
                            position = 8280, 8152
                        ]

                        connect Junction137 Eq as Connection3
                        connect Product2.in Junction137 as Connection6
                        connect Sum3.in Product1.out as Connection8
                        connect Junction136 Ed as Connection1
                        connect Product1.in1 Junction136 as Connection4
                        connect Sum3.in1 Product2.out as Connection9
                        connect Product2.in1 Junction137 as Connection5
                        connect Sum3.out Et_p2 as Connection7
                        connect Junction136 Product1.in as Connection2
                    }
                    [
                        position = 9016, 8464
                        size = 48, 56
                    ]

                    component gen_probe Xi_d_ref {
                    }
                    [
                        position = 8640, 8272
                        rotation = down
                    ]

                    component gen_gain Gain7 {
                        gain = "I_DQ"
                    }
                    [
                        position = 8696, 8272
                        hide_name = True
                        scale = -1, -1
                    ]

                    component gen_probe Xi_q_ref {
                    }
                    [
                        position = 8648, 8632
                        rotation = down
                    ]

                    component gen_gain Gain8 {
                        gain = "I_DQ"
                    }
                    [
                        position = 8720, 8632
                        hide_name = True
                        scale = -1, -1
                    ]

                    component gen_probe Ud {
                    }
                    [
                        position = 8376, 8304
                        scale = -1, 1
                    ]

                    component gen_probe Uq {
                    }
                    [
                        position = 8416, 8496
                        scale = -1, 1
                    ]

                    component gen_gain Gain11 {
                        gain = "[V_DQ]"
                    }
                    [
                        position = 8488, 8352
                        scale = -1, 1
                    ]

                    component gen_gain Gain10 {
                        gain = "[V_DQ]"
                    }
                    [
                        position = 8512, 8496
                        scale = -1, 1
                    ]

                    port Uc1 {
                        position = left:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8256, 8520
                        rotation = down
                    ]

                    port E_q {
                        label = "E_q_ref1"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 9128, 8416
                        scale = -1, 1
                    ]

                    port E_d {
                        label = "E_d_ref1"
                        position = right:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 9176, 8400
                        scale = -1, 1
                    ]

                    port Ua1 {
                        position = left:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8256, 8392
                        rotation = down
                    ]

                    port Ub1 {
                        position = left:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8256, 8456
                        rotation = down
                    ]

                    port P_ref {
                        label = "P_ref"
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 9168, 8336
                        scale = -1, 1
                    ]

                    port Q_ref {
                        label = "Q_ref"
                        position = right:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 9216, 8384
                        scale = -1, 1
                    ]

                    tag From29 {
                        value = "Xi_d1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8720, 8400
                        scale = -1, 1
                    ]

                    tag From30 {
                        value = "Xi_q1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8720, 8496
                        scale = -1, 1
                    ]

                    tag From1 {
                        value = "alpha1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8600, 8560
                        scale = -1, 1
                        size = 63, 25
                    ]

                    junction Junction3 sp
                    [
                        position = 8736, 8352
                    ]

                    junction Junction4 sp
                    [
                        position = 8760, 8448
                    ]

                    junction Junction9 sp
                    [
                        position = 8424, 8352
                    ]

                    junction Junction10 sp
                    [
                        position = 8464, 8496
                    ]

                    junction Junction11 sp
                    [
                        position = 9080, 8400
                    ]

                    junction Junction12 sp
                    [
                        position = 9096, 8416
                    ]

                    connect "dq to abc.alpha" From1 as Connection229
                    [
                        breakpoints = 8400, 8560; 8544, 8560
                    ]
                    connect From29 "inner current control loop.Xi_d_meas1" as Connection253
                    connect "dq to abc.a" Ua1 as Connection283
                    connect From30 "inner current control loop.Xi_q_meas1" as Connection257
                    connect "dq to abc.b" Ub1 as Connection282
                    connect "dq to abc.c" Uc1 as Connection284
                    connect Q_ref "outer power loop.Q_ref" as Connection349
                    connect P_ref "outer power loop.P_ref" as Connection350
                    connect squared_Vt2.Et_p2 "outer power loop.Et_p2" as Connection359
                    connect Xi_d_ref.in Gain7.out as Connection366
                    connect "outer power loop.Xi_rd" Junction3 as Connection367
                    connect Junction3 "inner current control loop.Xi_d_ref1" as Connection368
                    connect Gain7.in Junction3 as Connection369
                    connect Xi_q_ref.in Gain8.out as Connection370
                    connect "outer power loop.Xi_rq" Junction4 as Connection371
                    connect Junction4 "inner current control loop.Xi_q_ref1" as Connection372
                    connect Gain8.in Junction4 as Connection373
                    connect "dq to abc.d" Junction9 as Connection392
                    [
                        breakpoints = 8424, 8392
                    ]
                    connect Ud.in Junction9 as Connection394
                    connect "dq to abc.q" Junction10 as Connection396
                    connect Uq.in Junction10 as Connection398
                    connect Junction9 Gain11.out as Connection399
                    connect Gain11.in "inner current control loop.Ud1" as Connection400
                    connect Junction10 Gain10.out as Connection401
                    connect Gain10.in "inner current control loop.Uq1" as Connection402
                    connect "outer power loop.Ed" Junction11 as Connection405
                    connect Junction11 E_d as Connection406
                    connect squared_Vt2.Ed Junction11 as Connection407
                    connect "outer power loop.Eq" Junction12 as Connection408
                    connect Junction12 E_q as Connection409
                    connect squared_Vt2.Eq Junction12 as Connection410
                }
                [
                    position = 7352, 7952
                    size = 128, 152
                ]

                component gen_product Product111 {
                }
                [
                    position = 7368, 8216
                    scale = -1, 1
                ]

                component gen_probe Xi_q {
                    addr = "8965"
                }
                [
                    position = 7776, 8008
                    scale = -1, 1
                ]

                component gen_gain Gain7 {
                    gain = "1/I_DQ"
                }
                [
                    position = 7808, 7944
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_gain Gain15 {
                    gain = "S"
                }
                [
                    position = 7152, 8176
                    rotation = left
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_integrator Integrator3 {
                }
                [
                    position = 6904, 8376
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_probe Q1 {
                }
                [
                    position = 7072, 8488
                    rotation = down
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7200, 7952
                    scale = -1, 1
                ]

                component gen_gain Gain10 {
                    gain = "1/V_DQ"
                }
                [
                    position = 7848, 8520
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_probe E_dREF1 {
                }
                [
                    position = 7568, 7848
                ]

                component gen_probe E_d1 {
                }
                [
                    position = 7744, 8064
                    scale = -1, 1
                ]

                component gen_gain Gain12 {
                    gain = "1/I_DQ"
                }
                [
                    position = 7384, 8744
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_gain Gain6 {
                    gain = "1/I_DQ"
                }
                [
                    position = 7808, 7816
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_sum Sum5 {
                    signs = "+-"
                }
                [
                    position = 7080, 8376
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_probe P1 {
                }
                [
                    position = 7112, 8136
                    rotation = down
                ]

                component gen_gain Gain13 {
                    gain = "1/T_m"
                }
                [
                    position = 7000, 8376
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_integrator Integrator2 {
                }
                [
                    position = 6896, 8232
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_product Product13 {
                }
                [
                    position = 7368, 8464
                    scale = -1, 1
                ]

                component gen_product Product12 {
                }
                [
                    position = 7368, 8376
                    scale = -1, 1
                ]

                component gen_sum Sum2 {
                    signs = "+-"
                }
                [
                    position = 7264, 8368
                    scale = -1, 1
                ]

                component gen_gain Gain8 {
                    gain = "1/V_DQ"
                }
                [
                    position = 7864, 8168
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_gain Gain9 {
                    gain = "1/V_DQ"
                }
                [
                    position = 7840, 8392
                    hide_name = True
                    scale = -1, -1
                ]

                component Subsystem Current_abc_to_dq3 {
                    layout = dynamic
                    component "core/abc to dq" "abc to dq1" {
                    }
                    [
                        position = 7856, 8008
                        size = 48, 80
                    ]

                    component gen_terminator Termination1 {
                    }
                    [
                        position = 7952, 8064
                    ]

                    port "^Eq2" {
                        label = "^Eq2"
                        position = left:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 8016
                    ]

                    port wt2 {
                        label = "wt2"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8088
                    ]

                    port "^Ec2" {
                        label = "^Ec2"
                        position = right:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8040
                    ]

                    port "^Ed2" {
                        label = "^Ed2"
                        position = left:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 7976
                    ]

                    port "^Ea2" {
                        label = "^Ea2"
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 7960
                    ]

                    port "^Eb2" {
                        label = "^Eb2"
                        position = right:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8000
                    ]

                    connect "^Ec2" "abc to dq1.vc" as Connection3
                    connect Termination1.in "abc to dq1.zero_axis" as Connection4
                    connect "^Eb2" "abc to dq1.vb" as Connection2
                    connect "^Ea2" "abc to dq1.va" as Connection1
                    connect "abc to dq1.q_axis" "^Eq2" as Connection6
                    connect "abc to dq1.d_axis" "^Ed2" as Connection5
                    connect wt2 "abc to dq1.wt" as Connection7
                }
                [
                    position = 7944, 8456
                    size = 80, 168
                ]

                component Subsystem PLL2 {
                    layout = dynamic
                    component gen_gain 2pi {
                        gain = "[6.28318530718]"
                    }
                    [
                        position = 8048, 8200
                        scale = -1, 1
                    ]

                    component gen_terminator Termination3 {
                    }
                    [
                        position = 8160, 8256
                        rotation = down
                    ]

                    component gen_terminator Termination1 {
                    }
                    [
                        position = 8104, 8136
                        rotation = down
                    ]

                    component "core/Three phase PLL" PLL {
                    }
                    [
                        position = 8232, 8136
                        scale = -1, 1
                        size = 64, 128
                    ]

                    port Ed {
                        label = "Ed"
                        position = left:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8024, 8064
                        rotation = down
                    ]

                    port wt {
                        label = "wt"
                        position = left:5
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8048, 8160
                        rotation = down
                    ]

                    port Eq {
                        label = "Eq"
                        position = left:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8160, 8112
                        rotation = down
                    ]

                    port Ea {
                        label = "Ea"
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8336, 8104
                        rotation = down
                    ]

                    port Eb {
                        label = "Eb"
                        position = right:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8392, 8136
                        rotation = down
                    ]

                    port Ec {
                        label = "Ec"
                        position = right:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8336, 8168
                        rotation = down
                    ]

                    port w {
                        label = "w"
                        position = left:4
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 7976, 8200
                        rotation = down
                    ]

                    connect 2pi.out w as Connection1
                    connect PLL.freq 2pi.in as Connection2
                    connect PLL.va Ea as Connection3
                    connect PLL.vb Eb as Connection4
                    connect PLL.vc Ec as Connection5
                    connect PLL.d_axis Ed as Connection6
                    connect PLL.q_axis Eq as Connection7
                    connect PLL.theta wt as Connection8
                    connect Termination1.in PLL.zero_axis as Connection9
                    connect Termination3.in PLL.sin_theta as Connection10
                }
                [
                    position = 8064, 8192
                    size = 96, 192
                ]

                component gen_gain Gain18 {
                    gain = "1.5"
                }
                [
                    position = 7200, 8224
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_gain Gain19 {
                    gain = "1.5"
                }
                [
                    position = 7200, 8368
                    hide_name = True
                    scale = -1, 1
                ]

                port U_P {
                    position = top:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7480, 7888
                    scale = -1, 1
                ]

                port U_Q {
                    position = top:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7480, 7936
                    scale = -1, 1
                ]

                tag From38 {
                    value = "Xi_q1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7568, 8472
                    scale = -1, 1
                ]

                tag Goto28 {
                    value = "E_q1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7776, 8520
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From10 {
                    value = "Ec1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8160, 8264
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto20 {
                    value = "Iq1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7304, 8744
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From36 {
                    value = "Ed1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7568, 8208
                    scale = -1, 1
                ]

                tag Goto37 {
                    value = "P1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 6808, 8168
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From7 {
                    value = "Xi_c1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8072, 7944
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto19 {
                    value = "Id1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7304, 8616
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto36 {
                    value = "Q1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 6808, 8312
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From42 {
                    value = "Eq1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7568, 8008
                    scale = -1, 1
                ]

                tag Goto3 {
                    value = "Eq1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7744, 8168
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From39 {
                    value = "Eq1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7568, 8400
                    scale = -1, 1
                ]

                tag Goto4 {
                    value = "Ed1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7744, 8120
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From8 {
                    value = "Ea1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8160, 8120
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From24 {
                    value = "Ib1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7592, 8656
                    scale = -1, 1
                ]

                tag From5 {
                    value = "Xi_a1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8072, 7816
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From34 {
                    value = "E_c1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8072, 8520
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From37 {
                    value = "Xi_d1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7568, 8256
                    scale = -1, 1
                ]

                tag Goto2 {
                    value = "modulator1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7096, 7952
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From20 {
                    value = "Ed1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7568, 7896
                    scale = -1, 1
                    size = 67, 20
                ]

                tag Goto22 {
                    value = "Xi_d1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7728, 7816
                    scale = -1, 1
                ]

                tag From28 {
                    value = "alpha1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8072, 7904
                    scale = -1, 1
                ]

                tag From6 {
                    value = "Xi_b1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8072, 7856
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto29 {
                    value = "E_d1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7768, 8392
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From26 {
                    value = "alpha1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7592, 8704
                    scale = -1, 1
                ]

                tag From32 {
                    value = "alpha1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8072, 8480
                    scale = -1, 1
                ]

                tag From33 {
                    value = "E_a1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8072, 8392
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From23 {
                    value = "Ia1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7592, 8616
                    scale = -1, 1
                ]

                tag Goto17 {
                    value = "w1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7848, 8216
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From9 {
                    value = "Eb1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8160, 8192
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From35 {
                    value = "E_b1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8072, 8432
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From25 {
                    value = "Ic1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7592, 8744
                    scale = -1, 1
                ]

                tag Goto23 {
                    value = "Xi_q1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7728, 7944
                    scale = -1, 1
                ]

                tag Goto21 {
                    value = "alpha1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7944, 8264
                    scale = -1, 1
                ]

                junction Junction265 sp
                [
                    position = 6856, 8232
                ]

                junction Junction268 sp
                [
                    position = 7152, 8224
                ]

                junction Junction258 sp
                [
                    position = 7520, 8008
                ]

                junction Junction266 sp
                [
                    position = 6856, 8376
                ]

                junction Junction229 sp
                [
                    position = 7520, 8256
                ]

                junction Junction267 sp
                [
                    position = 7136, 8368
                ]

                junction Junction231 sp
                [
                    position = 7520, 7896
                ]

                junction Junction230 sp
                [
                    position = 7472, 8472
                ]

                junction Junction157 sp
                [
                    position = 7816, 8120
                ]

                junction Junction228 sp
                [
                    position = 7520, 8400
                ]

                junction Junction159 sp
                [
                    position = 7472, 8208
                ]

                junction Junction158 sp
                [
                    position = 7808, 8168
                ]

                junction Junction271 sp
                [
                    position = 7896, 8216
                ]

                junction Junction272 sp
                [
                    position = 7864, 7816
                ]

                junction Junction273 sp
                [
                    position = 7864, 7944
                ]

                connect Junction158 Gain8.out as Connection868
                connect Product111.in Junction159 as Connection703
                connect E_qREF1.in Junction258 as Connection861
                connect Product10.in Junction229 as Connection723
                connect E_q1.in Junction158 as Connection718
                connect E_d1.in Junction157 as Connection291
                connect Sum5.out Gain13.in as Connection926
                connect Product111.out Sum1.in as Connection684
                connect Goto28 Gain10.out as Connection874
                connect Sum5.in1 Junction266 as Connection942
                [
                    breakpoints = 7120, 8424; 6856, 8424
                ]
                connect From25 "Current_abc_to_dq4.^Ec2" as Connection699
                connect Gain4.out Integrator2.in as Connection335
                connect Junction230 From38 as Connection677
                connect "Current_abc_to_dq4.^Ea2" From23 as Connection701
                connect Goto20 Gain12.out as Connection878
                connect From34 "Current_abc_to_dq3.^Ec2" as Connection279
                connect From32 Current_abc_to_dq3.wt2 as Connection275
                connect Product10.in1 Junction228 as Connection681
                connect Gain10.in "Current_abc_to_dq3.^Eq2" as Connection875
                connect "Outer Voltage Loop + Inner Current Loop.Ua1" "Bus Join1.in" as Connection839
                connect Product12.in Junction159 as Connection720
                connect Junction229 From37 as Connection683
                connect Product13.in Junction228 as Connection679
                connect Junction258 "Outer Voltage Loop + Inner Current Loop.E_q" as Connection860
                connect Gain12.in "Current_abc_to_dq4.^Eq2" as Connection879
                connect "Current_abc_to_dq4.^Ed2" Gain11.in as Connection876
                connect Gain13.out Integrator3.in as Connection925
                connect Junction266 Goto36 as Connection983
                [
                    breakpoints = 6856, 8376; 6856, 8312; 6856, 8376
                ]
                connect E_dREF1.in Junction231 as Connection729
                [
                    breakpoints = 7520, 7848; 7520, 7896
                ]
                connect Junction231 "Outer Voltage Loop + Inner Current Loop.E_d" as Connection736
                connect Junction265 Goto37 as Connection982
                [
                    breakpoints = 6856, 8232; 6856, 8232
                ]
                connect Sum5.in Junction267 as Connection952
                connect "Current_abc_to_dq3.^Ed2" Gain9.in as Connection872
                connect Q1.in Gain14.out as Connection959
                connect Product111.in1 Junction229 as Connection682
                connect From35 "Current_abc_to_dq3.^Eb2" as Connection276
                connect From6 Current_abc_to_dq.Xi_b2 as Connection39
                connect Junction159 From36 as Connection698
                connect Gain14.in Junction267 as Connection960
                connect f1.in Gain1.out as Connection318
                connect Sum4.in1 Junction265 as Connection939
                [
                    breakpoints = 7112, 8280; 6856, 8280
                ]
                connect Current_abc_to_dq4.wt2 From26 as Connection702
                connect Integrator3.out Junction266 as Connection949
                [
                    breakpoints = 6856, 8376; 6856, 8376
                ]
                connect "Current_abc_to_dq3.^Ea2" From33 as Connection278
                connect "Outer Voltage Loop + Inner Current Loop.Uc1" "Bus Join1.in2" as Connection840
                connect Junction228 From39 as Connection680
                connect Goto3 Junction158 as Connection292
                connect Sum4.in Junction268 as Connection955
                connect "Current_abc_to_dq4.^Eb2" From24 as Connection700
                connect Gain9.out Goto29 as Connection873
                connect P1.in Gain15.out as Connection961
                connect Product13.in1 Junction230 as Connection676
                connect Junction157 Goto4 as Connection290
                connect Product12.in1 Junction230 as Connection678
                connect Goto2 "Bus Join1.out" as Connection51
                connect Junction231 From20 as Connection728
                connect Sum4.out Gain4.in as Connection330
                connect Sum1.in1 Product13.out as Connection719
                connect Product12.out Sum2.in1 as Connection721
                connect From5 Current_abc_to_dq.Xi_a2 as Connection38
                connect From42 Junction258 as Connection859
                connect Gain15.in Junction268 as Connection962
                connect Junction265 Integrator2.out as Connection945
                [
                    breakpoints = 6856, 8232; 6856, 8232
                ]
                connect Current_abc_to_dq.wt2 From28 as Connection247
                [
                    breakpoints = 8000, 7904; 8040, 7904
                ]
                connect From7 Current_abc_to_dq.Xi_c2 as Connection40
                connect "Bus Join1.in1" "Outer Voltage Loop + Inner Current Loop.Ub1" as Connection838
                connect Gain11.out Goto19 as Connection877
                connect Gain5.out Junction157 as Connection871
                connect Product10.out Sum2.in as Connection672
                connect From8 PLL2.Ea as Connection990
                connect From9 PLL2.Eb as Connection991
                connect From10 PLL2.Ec as Connection992
                connect PLL2.Ed Gain5.in as Connection993
                connect Gain8.in PLL2.Eq as Connection994
                connect Goto17 Junction271 as Connection996
                connect Junction271 PLL2.w as Connection997
                connect Gain1.in Junction271 as Connection998
                connect Goto21 PLL2.wt as Connection999
                connect U_Q "Outer Voltage Loop + Inner Current Loop.Q_ref" as Connection1000
                connect U_P "Outer Voltage Loop + Inner Current Loop.P_ref" as Connection1001
                connect Gain6.out Goto22 as Connection1002
                [
                    breakpoints = 7776, 7816
                ]
                connect Current_abc_to_dq.Xi_d2 Junction272 as Connection1003
                connect Junction272 Gain6.in as Connection1004
                connect Xi_d.in Junction272 as Connection1005
                connect Gain7.out Goto23 as Connection1006
                [
                    breakpoints = 7776, 7944
                ]
                connect Current_abc_to_dq.Xi_q2 Junction273 as Connection1007
                connect Junction273 Gain7.in as Connection1008
                connect Xi_q.in Junction273 as Connection1009
                connect Gain18.in Sum1.out as Connection1011
                connect Sum2.out Gain19.in as Connection1012
                connect Junction267 Gain19.out as Connection1014
                [
                    breakpoints = 7136, 8368; 7152, 8368; 7152, 8368
                ]
                connect Junction268 Gain18.out as Connection1015
                [
                    breakpoints = 7120, 8224; 7120, 8224; 7152, 8224
                ]
            }
            [
                position = 6784, 7624
                size = 272, 144
            ]

            component pas_inductor La1 {
                inductance = "L_o"
            }
            [
                position = 8984, 7904
                rotation = down
            ]

            component pas_inductor Lgridc_1 {
                inductance = "L"
            }
            [
                position = 9584, 8096
                rotation = down
            ]

            component pas_resistor Rt0a1 {
                resistance = "R_s"
            }
            [
                position = 8016, 8256
                rotation = left
                scale = -1, 1
            ]

            component pas_resistor R0a1 {
                resistance = "R_i"
            }
            [
                position = 7632, 7904
            ]

            component gen_gain Gain1 {
                gain = "0.5"
            }
            [
                position = 6744, 7792
                hide_name = True
            ]

            component gen_probe Ea_1 {
            }
            [
                position = 8352, 8176
            ]

            component pas_inductor L0a1 {
                inductance = "L_i"
            }
            [
                position = 7744, 7904
                rotation = down
            ]

            component pas_inductor Lc1 {
                inductance = "L_o"
            }
            [
                position = 8984, 8096
                rotation = down
            ]

            component pas_resistor R0c1 {
                resistance = "R_i"
            }
            [
                position = 7632, 8096
            ]

            component "core/Signal Controlled Voltage Source" Vb_inv {
            }
            [
                position = 7088, 8040
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component "core/Current Measurement" Ic1 {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 9256, 8096
                size = 64, 32
            ]

            component pas_capacitor Ca1 {
                capacitance = "C_s"
            }
            [
                position = 8016, 8352
                rotation = right
            ]

            component "core/Four Phase Core Coupling" "Core Coupling 5" {
                R1 = "1e3"
                fixed_snb_i = "true"
            }
            [
                position = 8704, 8048
                size = 12, 352
            ]

            component gen_probe Pref_probe {
            }
            [
                position = 6840, 7320
            ]

            component gen_gain Gain15 {
                gain = "S"
            }
            [
                position = 6752, 7320
                hide_name = True
            ]

            component gen_probe Qref_probe {
            }
            [
                position = 7040, 7368
            ]

            component gen_gain Gain16 {
                gain = "S"
            }
            [
                position = 6952, 7368
                hide_name = True
            ]

            component "core/Voltage RMS" Vrms {
                frequency = "sys_f"
                op_mode = "Fixed frequency"
                sig_output = "True"
            }
            [
                position = 6848, 8112
                rotation = right
                size = 64, 32
            ]

            component gen_probe Vrms_ess {
                execution_rate = "0.1"
            }
            [
                position = 6928, 8112
            ]

            port Vc {
                label = "Vc"
                position = right:3
                kind = pe
            }
            [
                position = 10160, 8096
                scale = -1, 1
            ]

            port Va {
                label = "Va"
                position = right:1
                kind = pe
            }
            [
                position = 10160, 7904
                scale = -1, 1
            ]

            port setpoint_P {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 6712, 7448
                scale = -1, 1
            ]

            port Vb {
                label = "Vb"
                position = right:2
                kind = pe
            }
            [
                position = 10160, 8000
                scale = -1, 1
            ]

            port Ground {
                label = "Ground"
                position = bottom:4
                kind = pe
            }
            [
                position = 10152, 8688
                scale = -1, 1
            ]

            port setpoint_Q {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 6832, 7448
                scale = -1, 1
            ]

            tag Goto18 {
                value = "VDC1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 6736, 8232
                hide_name = True
                size = 60, 20
            ]

            tag Goto44 {
                value = "Xi_b1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 7744, 8208
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto30 {
                value = "Ec1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 8352, 8352
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto38 {
                value = "Xi_c1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 7744, 8256
                scale = -1, 1
                size = 60, 20
            ]

            tag From2 {
                value = "modulator1"
                scope = masked_subsystem
                kind = sp
                direction = out
            }
            [
                position = 6672, 7728
                hide_name = True
                size = 60, 20
            ]

            tag Goto33 {
                value = "E_c1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 7776, 8480
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto32 {
                value = "Ia1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 9096, 7824
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto34 {
                value = "E_a1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 7504, 8384
                scale = -1, 1
                size = 60, 20
            ]

            tag From3 {
                value = "VDC1"
                scope = masked_subsystem
                kind = sp
                direction = out
            }
            [
                position = 6672, 7792
                hide_name = True
            ]

            tag Goto31 {
                value = "Ic1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 9096, 8048
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto39 {
                value = "Ib1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 9096, 7936
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto42 {
                value = "E_b1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 7648, 8432
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto35 {
                value = "Xi_a1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 7744, 8160
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto41 {
                value = "Ea1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 8256, 8144
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto40 {
                value = "Eb1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 8320, 8256
                scale = -1, 1
                size = 60, 20
            ]

            junction Junction160 pe
            [
                position = 8096, 8000
            ]

            junction Junction212 pe
            [
                position = 8096, 8688
            ]

            junction Junction199 pe
            [
                position = 8096, 8688
            ]

            junction Junction194 pe
            [
                position = 8096, 8688
            ]

            junction Junction162 pe
            [
                position = 8544, 8096
            ]

            junction Junction215 pe
            [
                position = 8096, 8688
            ]

            junction Junction291 pe
            [
                position = 7088, 8688
            ]

            junction Junction161 pe
            [
                position = 8016, 7904
            ]

            junction Junction283 sp
            [
                position = 8368, 8256
            ]

            junction Junction192 pe
            [
                position = 8096, 8688
            ]

            junction Junction173 pe
            [
                position = 8176, 8096
            ]

            junction Junction216 pe
            [
                position = 8176, 8304
            ]

            junction Junction284 sp
            [
                position = 8480, 8352
            ]

            junction Junction289 pe
            [
                position = 7600, 8688
            ]

            junction Junction221 sp
            [
                position = 8320, 8144
            ]

            junction Junction213 pe
            [
                position = 8096, 8304
            ]

            junction Junction211 pe
            [
                position = 8016, 8288
            ]

            junction Junction290 pe
            [
                position = 7168, 8688
            ]

            junction Junction198 pe
            [
                position = 8096, 8688
            ]

            junction Junction174 pe
            [
                position = 8400, 7904
            ]

            junction Junction296 pe
            [
                position = 9968, 8688
            ]

            junction Junction292 pe
            [
                position = 8096, 8688
            ]

            junction Junction168 pe
            [
                position = 8464, 8000
            ]

            junction Junction207 pe
            [
                position = 8096, 8688
            ]

            junction Junction195 pe
            [
                position = 8096, 8688
            ]

            junction Junction297 pe
            [
                position = 8544, 8688
            ]

            junction Junction298 pe
            [
                position = 9904, 8688
            ]

            junction Junction299 sp
            [
                position = 6672, 7448
            ]

            junction Junction300 sp
            [
                position = 6896, 7448
            ]

            junction Junction301 pe
            [
                position = 7008, 7904
            ]

            junction Junction302 pe
            [
                position = 7008, 8232
            ]

            connect Vc2.p_node Junction216 as Connection627
            connect Junction283 Eb1.out as Connection951
            connect Vc2.out Goto33 as Connection617
            [
                breakpoints = 7840, 8480; 7824, 8480
            ]
            connect Junction198 Junction195 as Connection477
            [
                breakpoints = 8096, 8688; 8096, 8688
            ]
            connect Goto41 Junction221 as Connection656
            [
                breakpoints = 8288, 8144; 8336, 8144
            ]
            connect "Bus Split1.out" Va_inv.in as Connection1051
            connect Eb1.n_node Junction195 as Connection462
            connect Junction194 Ca1.n_node as Connection597
            [
                breakpoints = 8096, 8688; 8096, 8688; 8096, 8688; 8096, 8544; 8016, 8544
            ]
            connect Rt0c1.p_node Junction216 as Connection625
            [
                breakpoints = 8176, 8288
            ]
            connect Rt0b1.p_node Junction213 as Connection612
            connect Junction192 Junction292 as Connection1067
            connect Vc_inv.n_node Junction290 as Connection1060
            connect Ec_1.in Junction284 as Connection956
            [
                breakpoints = 8480, 8384; 8480, 8352
            ]
            connect Rc1.n_node Lc1.n_node as Connection399
            connect Junction211 Rt0a1.p_node as Connection599
            [
                breakpoints = 8016, 8304; 8016, 8304; 8016, 8288
            ]
            connect Junction212 Junction192 as Connection603
            connect Junction290 Junction289 as Connection1061
            [
                breakpoints = 7168, 8688; 7600, 8688
            ]
            connect Junction289 Junction212 as Connection1058
            [
                breakpoints = 7600, 8688; 8096, 8688
            ]
            connect Junction207 Junction198 as Connection574
            [
                breakpoints = 8096, 8688
            ]
            connect Cb1.n_node Junction212 as Connection602
            connect Rt0b1.n_node Junction160 as Connection351
            connect Ia1.out Goto32 as Connection666
            connect Junction168 Junction160 as Connection362
            connect Junction198 Junction199 as Connection537
            [
                breakpoints = 8096, 8688; 8096, 8688; 8096, 8688; 8096, 8688; 8096, 8688
            ]
            connect Va2.p_node Junction211 as Connection600
            [
                breakpoints = 7840, 8288; 8016, 8288
            ]
            connect Ec1.p_node Junction162 as Connection325
            connect Xi_a1.n_node Junction161 as Connection314
            connect "Bus Split1.out2" Vc_inv.in as Connection1053
            connect Product1.in1 Gain1.out as Connection1073
            connect Rt0c1.n_node Junction173 as Connection327
            connect Rgridb_1.n_node Lgridb_1.n_node as Connection546
            connect Junction173 Junction162 as Connection341
            [
                breakpoints = 8544, 8272; 8544, 8272
            ]
            connect Rb1.n_node Lb1.n_node as Connection354
            connect Va2.n_node Junction289 as Connection1057
            connect Ib1.n_node Rgridb_1.p_node as Connection662
            connect La1.n_node Ra1.n_node as Connection401
            connect Va2.out Goto34 as Connection624
            connect Vc_inv.p_node R0c1.p_node as Connection1054
            connect Junction221 Ea1.out as Connection639
            [
                breakpoints = 8304, 8144; 8368, 8144
            ]
            connect Xi_b1.n_node Junction160 as Connection388
            connect Goto39 Ib1.out as Connection669
            connect From2 Product1.in as Connection1074
            connect Junction291 Junction290 as Connection1064
            [
                breakpoints = 7088, 8688; 7168, 8688
            ]
            connect Goto30 Junction284 as Connection954
            connect Vb_inv.n_node Junction291 as Connection1063
            connect L0a1.n_node R0a1.n_node as Connection355
            connect Product1.out "Bus Split1.in" as Connection1075
            connect "Bus Split1.out1" Vb_inv.in as Connection1071
            connect Ca1.p_node Junction211 as Connection598
            connect La1.p_node Ia1.p_node as Connection665
            connect Ea_1.in Junction221 as Connection640
            connect Eb1.p_node Junction168 as Connection317
            connect Vb2.p_node Junction213 as Connection614
            [
                breakpoints = 7920, 8304; 8096, 8304
            ]
            connect Xi_c1.n_node Junction173 as Connection304
            connect Junction192 Junction194 as Connection459
            connect Xi_b1.out Goto44 as Connection374
            connect Ic1.out Goto31 as Connection668
            connect Ea1.n_node Junction292 as Connection1069
            [
                breakpoints = 8400, 8224; 8240, 8224; 8240, 8304; 8240, 8688
            ]
            connect Tr1.sec_1 Va as Connection1282
            connect Junction216 Cc1.p_node as Connection626
            [
                breakpoints = 8176, 8304; 8176, 8304; 8176, 8304
            ]
            connect Goto35 Xi_a1.out as Connection342
            connect Junction174 Junction161 as Connection535
            [
                breakpoints = 8400, 7904; 8400, 7904
            ]
            connect Lc1.p_node Ic1.p_node as Connection663
            connect Goto40 Junction283 as Connection950
            connect Vb2.out Goto42 as Connection616
            connect L0b1.p_node Xi_b1.p_node as Connection372
            connect From3 Gain1.in as Connection1072
            connect Rt0a1.n_node Junction161 as Connection366
            connect Junction292 Cc1.n_node as Connection1068
            [
                breakpoints = 8096, 8688; 8096, 8688; 8096, 8544; 8176, 8544
            ]
            connect L0a1.p_node Xi_a1.p_node as Connection378
            connect Ia1.n_node Rgrida_1.p_node as Connection660
            connect Lb1.p_node Ib1.p_node as Connection664
            connect Junction213 Cb1.p_node as Connection613
            [
                breakpoints = 8096, 8304; 8096, 8304; 8096, 8304
            ]
            connect Vb Tr1.sec_2 as Connection1277
            connect Junction284 Ec1.out as Connection955
            connect Ea1.p_node Junction174 as Connection298
            connect Vb2.n_node Junction215 as Connection621
            connect Rgridc_1.n_node Lgridc_1.n_node as Connection545
            connect Constant1.out Goto18 as Connection1096
            connect Junction195 Junction194 as Connection463
            connect Ground Junction296 as Connection1286
            connect Tr1.sec_3 Vc as Connection1280
            connect Lgrida_1.n_node Rgrida_1.n_node as Connection547
            connect Xi_c1.out Goto38 as Connection313
            connect Eb_1.in Junction283 as Connection952
            connect Vc2.n_node Junction215 as Connection623
            connect Ic1.n_node Rgridc_1.p_node as Connection661
            connect Junction207 Junction215 as Connection1097
            [
                breakpoints = 8096, 8688; 8096, 8688; 8096, 8688; 8096, 8688; 8096, 8688; 8096, 8688
            ]
            connect R0b1.n_node L0b1.n_node as Connection385
            connect Tr1.n2 Junction296 as Connection1288
            connect L0c1.p_node Xi_c1.p_node as Connection328
            connect Vb_inv.p_node R0b1.p_node as Connection1055
            connect R0c1.n_node L0c1.n_node as Connection330
            connect Junction162 "Core Coupling 5.c_in" as Connection1294
            connect "Core Coupling 5.c_out" Rc1.p_node as Connection1295
            connect Junction174 "Core Coupling 5.a_in" as Connection1296
            connect "Core Coupling 5.a_out" Ra1.p_node as Connection1297
            connect Rb1.p_node "Core Coupling 5.b_out" as Connection1298
            connect "Core Coupling 5.b_in" Junction168 as Connection1299
            connect Junction207 Junction297 as Connection1302
            [
                breakpoints = 8096, 8688
            ]
            connect Junction297 Ec1.n_node as Connection1303
            [
                breakpoints = 8544, 8688; 8544, 8688
            ]
            connect "Core Coupling 5.d_in" Junction297 as Connection1304
            [
                breakpoints = 8656, 8192; 8656, 8688
            ]
            connect Tr1.n1 Junction298 as Connection1305
            connect Junction298 Junction296 as Connection1306
            [
                breakpoints = 9904, 8688; 9936, 8688
            ]
            connect "Core Coupling 5.d_out" Junction298 as Connection1307
            [
                breakpoints = 8752, 8192; 8752, 8688
            ]
            connect Lgrida_1.p_node Tr1.prm_1 as Connection1309
            connect Lgridb_1.p_node Tr1.prm_2 as Connection1310
            connect Lgridc_1.p_node Tr1.prm_3 as Connection1311
            connect setpoint_P Junction299 as Connection1312
            connect Junction299 Controller.U_P as Connection1313
            connect Gain15.in Junction299 as Connection1314
            connect Gain15.out Pref_probe.in as Connection1315
            connect Gain16.out Qref_probe.in as Connection1316
            connect setpoint_Q Junction300 as Connection1317
            connect Junction300 Controller.U_Q as Connection1318
            connect Gain16.in Junction300 as Connection1319
            connect Vrms_ess.in Vrms.out as Connection1821
            connect Va_inv.p_node Junction301 as Connection1822
            connect Junction301 R0a1.p_node as Connection1823
            connect Vrms.p_node Junction301 as Connection1824
            connect Va_inv.n_node Junction302 as Connection1825
            connect Junction302 Junction291 as Connection1826
            [
                breakpoints = 7008, 8688; 7088, 8688
            ]
            connect Vrms.n_node Junction302 as Connection1827

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">A grid-feeding three-phase inverter</p></body></html>"

                S {
                    label = "Rated Power "
                    widget = edit
                    type = generic
                    default_value = "200e3"
                    unit = "VA"
                    group = "1. Three-phase Inverter"
                }

                V_ABC {
                    label = "Rated Phase Voltage (RMS)"
                    widget = edit
                    type = generic
                    default_value = "277"
                    unit = "V"
                    group = "1. Three-phase Inverter"
                }

                w_0 {
                    label = "Nominal Frequency"
                    widget = edit
                    type = generic
                    default_value = "2*np.pi*60"
                    unit = "rad/s"
                    group = "1. Three-phase Inverter"
                }

                Ts {
                    label = "Execution rate"
                    widget = edit
                    type = generic
                    default_value = "Ts"
                    unit = "s"
                    group = "1. Three-phase Inverter"
                }

                R_i {
                    label = "Input Resistance"
                    widget = edit
                    type = generic
                    default_value = "0.1"
                    unit = "Ω"
                    group = "2. LCL filter"
                }

                L_i {
                    label = "Input Inductance"
                    widget = edit
                    type = generic
                    default_value = "6e-3"
                    unit = "H"
                    group = "2. LCL filter"
                }

                R_s {
                    label = "Shunt Resistance"
                    widget = edit
                    type = generic
                    default_value = "15e-3"
                    unit = "Ω"
                    group = "2. LCL filter"
                }

                C_s {
                    label = "Shunt Capacitance"
                    widget = edit
                    type = generic
                    default_value = "150e-6"
                    unit = "F"
                    group = "2. LCL filter"
                }

                R_o {
                    label = "Output Resistance"
                    widget = edit
                    type = generic
                    default_value = "0.03"
                    unit = "Ω"
                    group = "2. LCL filter"
                }

                L_o {
                    label = "Output Inductance"
                    widget = edit
                    type = generic
                    default_value = "0.3e-3"
                    unit = "H"
                    group = "2. LCL filter"
                }

                R {
                    label = "Resistance"
                    widget = edit
                    type = generic
                    default_value = "0.35"
                    unit = "Ω"
                    group = "3. Electrical Line"
                }

                L {
                    label = "Inductance"
                    widget = edit
                    type = generic
                    default_value = "1.5e-3"
                    unit = "H"
                    group = "3. Electrical Line"
                }

                Kp_I {
                    label = "Inner Loop Proportional Gain"
                    widget = edit
                    type = generic
                    default_value = "10e-3"
                    group = "4. Cascaded Controller"
                }

                Ki_I {
                    label = "Inner Loop Integral Gain"
                    widget = edit
                    type = generic
                    default_value = "2e-3"
                    group = "4. Cascaded Controller"
                }

                Imax {
                    label = "Inner Loop Upper Limit"
                    widget = edit
                    type = generic
                    default_value = "1"
                    group = "4. Cascaded Controller"
                }

                Imin {
                    label = "Inner Loop Lower Limit"
                    widget = edit
                    type = generic
                    default_value = "-1"
                    group = "4. Cascaded Controller"
                }

                T_m {
                    label = "Measurement delay"
                    widget = edit
                    type = generic
                    default_value = "0.5"
                    group = "4. Cascaded Controller"
                }

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE

                CODE init
                    S = mdl.get_property_value(mdl.prop(item_handle, "S"))
                    V_ABC = mdl.get_property_value(mdl.prop(item_handle, "V_ABC"))
                    w_0 = mdl.get_property_value(mdl.prop(item_handle, "w_0"))
                    Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                    R_i = mdl.get_property_value(mdl.prop(item_handle, "R_i"))
                    L_i = mdl.get_property_value(mdl.prop(item_handle, "L_i"))
                    R_s = mdl.get_property_value(mdl.prop(item_handle, "R_s"))
                    C_s = mdl.get_property_value(mdl.prop(item_handle, "C_s"))
                    R_o = mdl.get_property_value(mdl.prop(item_handle, "R_o"))
                    L_o = mdl.get_property_value(mdl.prop(item_handle, "L_o"))
                    R = mdl.get_property_value(mdl.prop(item_handle, "R"))
                    L = mdl.get_property_value(mdl.prop(item_handle, "L"))
                    Kp_I = mdl.get_property_value(mdl.prop(item_handle, "Kp_I"))
                    Ki_I = mdl.get_property_value(mdl.prop(item_handle, "Ki_I"))
                    Imax = mdl.get_property_value(mdl.prop(item_handle, "Imax"))
                    Imin = mdl.get_property_value(mdl.prop(item_handle, "Imin"))
                    T_m = mdl.get_property_value(mdl.prop(item_handle, "T_m"))
                    
                    Tfast = Ts
                    V_DQ = V_ABC*np.sqrt(2)
                    I_DQ = S/V_DQ
                    Zbase = V_DQ/I_DQ
                ENDCODE

                CODE define_icon
                    mdl.set_component_icon_image(item_handle, 'grid_feeding_inverter.svg')
                ENDCODE

                CODE pre_compile
                    # HEADER START
                    S = mdl.get_property_value(mdl.prop(item_handle, "S"))
                    V_ABC = mdl.get_property_value(mdl.prop(item_handle, "V_ABC"))
                    w_0 = mdl.get_property_value(mdl.prop(item_handle, "w_0"))
                    Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                    R_i = mdl.get_property_value(mdl.prop(item_handle, "R_i"))
                    L_i = mdl.get_property_value(mdl.prop(item_handle, "L_i"))
                    R_s = mdl.get_property_value(mdl.prop(item_handle, "R_s"))
                    C_s = mdl.get_property_value(mdl.prop(item_handle, "C_s"))
                    R_o = mdl.get_property_value(mdl.prop(item_handle, "R_o"))
                    L_o = mdl.get_property_value(mdl.prop(item_handle, "L_o"))
                    R = mdl.get_property_value(mdl.prop(item_handle, "R"))
                    L = mdl.get_property_value(mdl.prop(item_handle, "L"))
                    Kp_I = mdl.get_property_value(mdl.prop(item_handle, "Kp_I"))
                    Ki_I = mdl.get_property_value(mdl.prop(item_handle, "Ki_I"))
                    Imax = mdl.get_property_value(mdl.prop(item_handle, "Imax"))
                    Imin = mdl.get_property_value(mdl.prop(item_handle, "Imin"))
                    T_m = mdl.get_property_value(mdl.prop(item_handle, "T_m"))
                    # HEADER STOP
                    S = mdl.get_property_value(mdl.prop(item_handle, "S"))
                    V_ABC = mdl.get_property_value(mdl.prop(item_handle, "V_ABC"))
                    w_0 = mdl.get_property_value(mdl.prop(item_handle, "w_0"))
                    Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                    R_i = mdl.get_property_value(mdl.prop(item_handle, "R_i"))
                    L_i = mdl.get_property_value(mdl.prop(item_handle, "L_i"))
                    R_s = mdl.get_property_value(mdl.prop(item_handle, "R_s"))
                    C_s = mdl.get_property_value(mdl.prop(item_handle, "C_s"))
                    R_o = mdl.get_property_value(mdl.prop(item_handle, "R_o"))
                    L_o = mdl.get_property_value(mdl.prop(item_handle, "L_o"))
                    R = mdl.get_property_value(mdl.prop(item_handle, "R"))
                    L = mdl.get_property_value(mdl.prop(item_handle, "L"))
                    Kp_I = mdl.get_property_value(mdl.prop(item_handle, "Kp_I"))
                    Ki_I = mdl.get_property_value(mdl.prop(item_handle, "Ki_I"))
                    Imax = mdl.get_property_value(mdl.prop(item_handle, "Imax"))
                    Imin = mdl.get_property_value(mdl.prop(item_handle, "Imin"))
                    #Kp_V = mdl.get_property_value(mdl.prop(item_handle, "Kp_V"))
                    #Ki_V = mdl.get_property_value(mdl.prop(item_handle, "Ki_V"))
                    #Vmax = mdl.get_property_value(mdl.prop(item_handle, "Vmax"))
                    #Vmin = mdl.get_property_value(mdl.prop(item_handle, "Vmin"))
                    #f_D = mdl.get_property_value(mdl.prop(item_handle, "f_D"))
                    #V_D = mdl.get_property_value(mdl.prop(item_handle, "V_D"))
                    T_m = mdl.get_property_value(mdl.prop(item_handle, "T_m"))
                    
                    
                    Tfast = Ts
                    V_DQ = V_ABC*np.sqrt(2)
                    I_DQ = S/V_DQ
                    Zbase = V_DQ/I_DQ
                ENDCODE
            }
        }
        [
            position = 8200, 8488
            size = 224, 192
        ]

        component src_constant Constant1 {
            execution_rate = "Tfast"
            value = "2/200"
        }
        [
            position = 8000, 8408
        ]

        component src_constant Constant2 {
            execution_rate = "Tfast"
            value = "0.5/200"
        }
        [
            position = 8000, 8552
        ]

        component src_voltage Vs2 {
            init_frequency = "60.0"
            init_phase = "np.pi/2"
            init_rms_value = "1000"
            init_source_nature = "Sine"
        }
        [
            position = 10080, 8576
            rotation = right
        ]

        component src_voltage Vs3 {
            init_frequency = "60.0"
            init_phase = "np.pi/2+120.0"
            init_rms_value = "1000"
            init_source_nature = "Sine"
        }
        [
            position = 9864, 8712
            rotation = right
        ]

        component src_voltage Vs4 {
            init_frequency = "60.0"
            init_phase = "np.pi/2-120.0"
            init_rms_value = "1000"
            init_source_nature = "Sine"
        }
        [
            position = 9984, 8648
            rotation = right
        ]

        tag Goto2 {
            value = "Va"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 8776, 8640
            rotation = left
            hide_name = True
        ]

        tag Goto3 {
            value = "Vb"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 8848, 8640
            rotation = left
            hide_name = True
        ]

        tag Goto4 {
            value = "Vc"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 8920, 8640
            rotation = left
            hide_name = True
        ]

        tag Goto5 {
            value = "Ia"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 9128, 8304
            rotation = left
            hide_name = True
        ]

        tag Goto6 {
            value = "Ib"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 9080, 8304
            rotation = left
            hide_name = True
        ]

        tag Goto7 {
            value = "Ic"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 9032, 8304
            rotation = left
            hide_name = True
        ]

        tag From1 {
            value = "Va"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8656, 7984
            hide_name = True
        ]

        tag From2 {
            value = "Vb"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8720, 8000
            hide_name = True
        ]

        tag From3 {
            value = "Vc"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8656, 8016
            hide_name = True
        ]

        tag From4 {
            value = "Ia"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8720, 8032
            hide_name = True
        ]

        tag From5 {
            value = "Ib"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8656, 8048
            hide_name = True
        ]

        tag From6 {
            value = "Ic"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8720, 8064
            hide_name = True
        ]

        junction Junction108 pe
        [
            position = 8808, 8864
        ]

        junction Junction156 pe
        [
            position = 8736, 8384
        ]

        junction Junction157 pe
        [
            position = 8808, 8480
        ]

        junction Junction453 pe
        [
            position = 8880, 8864
        ]

        junction Junction454 pe
        [
            position = 9312, 8864
        ]

        junction Junction455 pe
        [
            position = 9376, 8864
        ]

        junction Junction496 pe
        [
            position = 9312, 8384
        ]

        junction Junction497 pe
        [
            position = 9376, 8480
        ]

        junction Junction498 pe
        [
            position = 9440, 8576
        ]

        junction Junction504 pe
        [
            position = 9256, 8864
        ]

        junction Junction507 pe
        [
            position = 8880, 8576
        ]

        junction Junction508 pe
        [
            position = 8736, 8864
        ]

        junction Junction509 pe
        [
            position = 9440, 8864
        ]

        junction Junction510 pe
        [
            position = 9864, 8864
        ]

        junction Junction511 pe
        [
            position = 9984, 8864
        ]

        junction Junction512 pe
        [
            position = 10080, 8384
        ]

        junction Junction513 pe
        [
            position = 10080, 8864
        ]

        comment Comment3 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Standalone (UPS) load</p></body></html> ENDCOMMENT 
        [
            position = 8624, 8880
        ]

        connect From4 "Power Meter1.ia" as Connection1367
        connect Goto2 Va.out as Connection1358
        connect Goto3 Vb.out as Connection1359
        connect Goto4 Vc.out as Connection1360
        connect Goto5 ESS_Ia.out as Connection1361
        connect Goto6 ESS_Ib.out as Connection1362
        connect Goto7 ESS_Ic.out as Connection1363
        connect Junction156 Va.p_node as Connection1305
        connect Junction157 Vb.p_node as Connection1308
        connect MX1.a_out Junction156 as Connection1306
        connect MX1.b_out Junction157 as Connection1309
        connect "Power Meter1.va" From1 as Connection1364
        connect "Power Meter1.vb" From2 as Connection1365
        connect "Power Meter1.vc" From3 as Connection1366
        connect "Power Meter1.ib" From5 as Connection1369
        connect "Power Meter1.ic" From6 as Connection1368
        connect Q.in "Power Meter1.Qdc" as Connection1371
        connect Vb.n_node Junction108 as Connection901
        connect ESS_start.out MX1.ctrl_in as Connection1695
        connect Junction156 ESS_Ia.p_node as Connection1824
        [
            breakpoints = 8736, 8384; 8976, 8384; 8976, 8384
        ]
        connect ESS_Ib.p_node Junction157 as Connection1822
        [
            breakpoints = 9040, 8480; 9040, 8480
        ]
        connect Junction108 Junction453 as Connection1829
        [
            breakpoints = 8808, 8864
        ]
        connect Junction453 Vc.n_node as Connection1830
        [
            breakpoints = 8880, 8864
        ]
        connect R18.n_node Junction454 as Connection1832
        connect R17.n_node Junction455 as Connection1835
        connect Junction455 Junction454 as Connection1836
        connect ESS_Ia.n_node Junction496 as Connection4158
        connect Junction496 R18.p_node as Connection4159
        connect ESS_Ib.n_node Junction497 as Connection4161
        connect Junction497 R17.p_node as Connection4162
        connect ESS_Ic.n_node Junction498 as Connection4164
        connect Junction498 R16.p_node as Connection4165
        connect Junction454 Junction504 as Connection4187
        connect Junction504 Junction453 as Connection4188
        connect gnd3.node Junction504 as Connection4189
        connect Rgrid1.p_node Junction497 as Connection4203
        connect Rgrid2.p_node Junction498 as Connection4205
        connect MX1.c_out Junction507 as Connection4207
        connect Junction507 Vc.p_node as Connection4208
        [
            breakpoints = 8880, 8576; 8880, 8576; 8880, 8768
        ]
        connect ESS_Ic.p_node Junction507 as Connection4209
        connect La4.n_node Rgrid.n_node as Connection4211
        connect La5.n_node Rgrid1.n_node as Connection4213
        connect La6.n_node Rgrid2.n_node as Connection4215
        connect "Power Meter1.Pdc" P.in as Connection4228
        [
            breakpoints = 8872, 7968
        ]
        connect "Grid feeding inverter (averaged).Va" MX1.a_in as Connection4234
        connect "Grid feeding inverter (averaged).Vb" MX1.b_in as Connection4235
        connect "Grid feeding inverter (averaged).Vc" MX1.c_in as Connection4236
        connect Va.n_node Junction508 as Connection4237
        connect Junction508 Junction108 as Connection4238
        [
            breakpoints = 8728, 8864
        ]
        connect "Grid feeding inverter (averaged).Ground" Junction508 as Connection4239
        connect Constant1.out "Grid feeding inverter (averaged).setpoint_P" as Connection4240
        connect Constant2.out "Grid feeding inverter (averaged).setpoint_Q" as Connection4241
        connect R16.n_node Junction509 as Connection4244
        connect Junction509 Junction455 as Connection4245
        connect La6.p_node Vs3.p_node as Connection4247
        connect Junction510 Junction509 as Connection4249
        connect Vs3.n_node Junction510 as Connection4250
        connect La5.p_node Vs4.p_node as Connection4251
        connect Junction511 Junction510 as Connection4253
        connect Vs4.n_node Junction511 as Connection4254
        connect Rgrid.p_node Junction496 as Connection4255
        [
            breakpoints = 9488, 8384
        ]
        connect Vs2.p_node Junction512 as Connection4256
        connect Junction512 La4.p_node as Connection4257
        connect Vrms_grid.p_node Junction512 as Connection4258
        connect Vs2.n_node Junction513 as Connection4259
        connect Junction513 Junction511 as Connection4260
        connect Vrms_grid.n_node Junction513 as Connection4261
    }

    default {
        gen_PQ_transform {
            filter_order = "first order"
            filter_cutoff_Hz = "30"
            initial_filter_input = "0"
            initial_filter_output = "0"
            enable_inst_ports = "True"
            enable_zero_ports = "False"
            execution_rate = "inherit"
        }

        gen_bus_join {
            inputs = "2"
            execution_rate = "inherit"
        }

        gen_bus_split {
            outputs = "2"
            execution_rate = "inherit"
        }

        gen_comparator {
            execution_rate = "inherit"
        }

        gen_gain {
            gain = "1"
            multiplication = "Element-wise(K.*u)"
            execution_rate = "inherit"
        }

        gen_integrator {
            show_reset = "none"
            reset_type = "asynchronous"
            show_init_condition = "internal"
            init_value = "0"
            limit_output = "False"
            limit_upper = "inf"
            limit_lower = "-inf"
            show_state = "False"
            state_port_type = "inherit"
            execution_rate = "inherit"
        }

        gen_limiter {
            upper_limit = "[\'inf\']"
            lower_limit = "[\'-inf\']"
            execution_rate = "inherit"
        }

        gen_pid_controller {
            controller_type = "PID"
            kp = "1"
            kp_source = "internal"
            ki = "1"
            ki_source = "internal"
            kd = "0"
            kd_source = "internal"
            filt_coef = "100"
            int_init_value = "0"
            filt_init_value = "0"
            enb_output_limit_out = "False"
            upper_sat_lim = "1"
            lower_sat_lim = "-1"
            enb_anti_windup_out = "False"
            signal_out_type = "inherit"
            execution_rate = "inherit"
        }

        gen_probe {
            addr = "0"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "generic"
            streaming_en = "False"
            streaming_er_idx = "0"
            execution_rate = "inherit"
        }

        gen_product {
            signs = "2"
            execution_rate = "inherit"
        }

        gen_sum {
            signs = "2"
            execution_rate = "inherit"
        }

        gen_terminator {
            execution_rate = "inherit"
        }

        pas_capacitor {
            capacitance = "1e-6"
            initial_voltage = "0"
            pole_shift_ignore = "False"
            visible = "True"
        }

        pas_inductor {
            inductance = "1e-3"
            initial_current = "0.0"
            pole_shift_ignore = "False"
            visible = "True"
        }

        pas_resistor {
            resistance = "1"
        }

        src_constant {
            value = "1"
            signal_type = "real"
            execution_rate = "100e-6"
        }

        src_scada_input {
            addr = "0"
            format = "real"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "real"
            min = "-1e6"
            max = "1e6"
            def_value = "0"
            unit = " "
            execution_rate = "100e-6"
        }

        src_voltage {
            sig_input = "False"
            type = "signal generator"
            param_set = "1phase"
            parent_label = ""
            addr = "0"
            spc_nb = "0"
            execution_rate = "100e-6"
            cpd_visible = "True"
            enable_snb = "False"
            snb_type = "R2"
            R2 = "0.0"
            L1 = "0.1"
            override_signal_name = "False"
            signal_name = ""
            init_source_nature = "Constant"
            init_const_value = "0.0"
            init_rms_value = "0.0"
            init_frequency = "50.0"
            init_phase = "0.0"
        }

        sys_signal_switch {
            criterion = "ctrl >= threshold"
            threshold = "0"
            execution_rate = "inherit"
        }

        "core/Current Measurement" {
            bw_limit = "False"
            frequency = "10e3"
            comparator_enable = "False"
            operator = "greater"
            threshold = "0"
            cmp_abs_value = "False"
            feed_forward = "false"
            sig_output = "False"
            execution_rate = "100e-6"
            addr = "0"
            nd_msr_estimation = "false"
            dev_cpl_msr = "false"
            host_device = "0"
            output_to_device = "0"
            dev_cpl_index = "0"
            dev_cpl_var_nb = "0"
            visible = "True"
            override_signal_name = "False"
            signal_name = ""
        }

        "core/Four Phase Core Coupling" {
            snb_type_i = "none"
            R1 = "100e3"
            C1 = "1e-06"
            C2 = "1e-06"
            fixed_snb_i = "false"
            snb_type_u = "none"
            R2 = "0.1"
            L1 = "0.1"
            L2 = "0.1"
            fixed_snb_u = "false"
            cpl_connection = "star"
        }

        "core/Signal Controlled Voltage Source" {
            execution_rate = "inherit"
        }

        "core/Three Phase Two Winding Transformer" {
            input = "SC and OC tests"
            core_sat = "False"
            Sn = "160000.0"
            f = "50.0"
            V1 = "10000.0"
            V2 = "400.0"
            usc1 = "4.0"
            Psc1 = "2350.0"
            ioc1 = "0.7"
            Poc1 = "460.0"
            R1 = "4.58984375"
            L1 = ".0370093710364"
            R2 = ".00734375"
            L2 = "5.92149936583e-05"
            Rm = "217391.304348"
            Lm = "311.709196788"
            flux_vals_SI = "[1910.3, 2419.7]"
            current_vals_SI = "[0.66653, 277.72]"
            r1 = ".00734375"
            l1 = ".0186029389059"
            r2 = ".00734375"
            l2 = ".0186029389059"
            rm = "347.826086957"
            lm = "156.68213163"
            flux_vals_pu = "[1.2, 1.52]"
            current_vals_pu = "[0.0024, 1]"
            flux_vals_SCOC = "[1.2, 1.52]"
            current_vals_SCOC = "[0.0024, 1]"
            import_from_SI2SCOC = "Import from SI"
            import_from_pu2SCOC = "Import from PU"
            import_from_SCOC2SI = "Import from SC OC"
            import_from_pu2SI = "Import from PU"
            import_from_SCOC2pu = "Import from SC OC"
            import_from_SI2pu = "Import from SI"
            winding_1_connection = "Y"
            winding_2_connection = "Y"
            clock_number = "0"
            embedded_cpl = "false"
            coupling_type = "core"
            Rshunt = "inf"
        }

        "core/Three phase PLL" {
            initial_filter_output = "60"
            wn = "157.0796"
            zeta = "0.707"
            rate_high = "12"
            rate_low = "-12"
            freq_unit = "Hz"
            kp = "100"
            ki = "3200"
            kd = "1"
            N = "714.2857"
            initial_pid_output = "376.99111843"
            up_lim = "1e4"
            low_lim = "-1e4"
            kb = "1"
            power_form = "variant - Clarke\'s original"
            alignment = "-pi/2"
            disable_filter = "False"
            wn_LPFdq = "62.83185307"
            execution_rate = "inherit"
            enable_pk = "False"
            enable_zero = "True"
            enable_sin = "True"
        }

        "core/Triple Pole Single Throw Contactor" {
            ctrl_src = "Digital input"
            Sa = "1"
            Sa_logic = "active high"
            enable_fb_out = "False"
            fb_out_type = "real"
            execution_rate = "inherit"
            initial_state = "off"
            on_delay = "0"
            off_delay = "0"
        }

        "core/Voltage Measurement" {
            bw_limit = "False"
            frequency = "10e3"
            comparator_enable = "False"
            operator = "greater"
            threshold = "0"
            cmp_abs_value = "False"
            feed_forward = "false"
            sig_output = "False"
            execution_rate = "100e-6"
            addr = "0"
            nd_msr_estimation = "false"
            dev_cpl_msr = "false"
            host_device = "0"
            output_to_device = "0"
            dev_cpl_index = "0"
            dev_cpl_var_nb = "0"
            visible = "True"
            override_signal_name = "False"
            signal_name = ""
        }

        "core/Voltage RMS" {
            op_mode = "PLL based"
            frequency = "50"
            sig_output = "False"
            execution_rate = "inherit"
            feed_forward = "false"
            nd_msr_estimation = "false"
        }

        "core/abc to dq" {
            power_form = "variant - Clarke\'s original"
            alignment = "-pi/2"
            disable_filter = "True"
            initial_filter_output = "0"
            wn_LPFdq = "1000"
            execution_rate = "inherit"
        }

        "core/dq to abc" {
            power_form = "variant - Clarke\'s original"
            alignment = "-pi/2"
            execution_rate = "0"
        }
    }

    CODE model_init
        # Numpy module is imported as 'np'
        # Scipy module is imported as 'sp'
        
        Ts = 1e-3
        Ts_gen = 1e-3
        sys_f = 60.0    # Hz
        sys_w = 2.0*np.pi*sys_f    #rad/s
        ft2mi = 1.0/5280.0     #mi/ft
        Tfast = Ts
        
        # Grid Specs
        
        Vgrid = 115000.0
        SCgrid = 100.0e6
        ratio_grid = 30.0
        
        Rgrid = ((Vgrid/np.sqrt(3))**2)/(SCgrid/3)/np.sqrt(1+ratio_grid**2)
        Lgrid = ratio_grid*Rgrid/sys_w
        
        # Transformer Specs
        
            # Utility
        
        Sn_50MVA       = 50.0e6    # VA
        V1_50MVA       = 115000.0    # V
        V2_50MVA       = 13800.0    # V
        Z_50MVA        = 15.0/100.0    # pu
        Z_ratio_50MVA = 30.0
        
        R_50MVA = Z_50MVA/np.sqrt(1.0+Z_ratio_50MVA**2.0)/2.0    # pu
        L_50MVA = Z_ratio_50MVA*R_50MVA/sys_w/2.0    # pu
        
        R1_50MVA = 3.0*R_50MVA*(V1_50MVA**2.0)/Sn_50MVA
        R2_50MVA = R_50MVA*(V2_50MVA**2.0)/Sn_50MVA
        L1_50MVA = 3.0*L_50MVA*(V1_50MVA**2.0)/Sn_50MVA
        L2_50MVA = L_50MVA*(V2_50MVA**2.0)/Sn_50MVA
        
            # Feeders
        
        Sn_500kVA_1       = 500.0e3    # VA
        V1_500kVA_1       = 13800.0    # V
        V2_500kVA_1       = 480.0    # V
        Z_500kVA_1        = 5.0/100.0    # pu
        Z_ratio_500kVA_1 = 4.9
        
        R_500kVA_1 = Z_500kVA_1/np.sqrt(1.0+Z_ratio_500kVA_1**2.0)/2.0    # pu
        L_500kVA_1 = Z_ratio_500kVA_1*R_500kVA_1/sys_w/2.0    # pu
        
        R1_500kVA_1 = 3.0*R_500kVA_1*(V1_500kVA_1**2.0)/Sn_500kVA_1
        R2_500kVA_1 = R_500kVA_1*(V2_500kVA_1**2.0)/Sn_500kVA_1
        L1_500kVA_1 = 3.0*L_500kVA_1*(V1_500kVA_1**2.0)/Sn_500kVA_1
        L2_500kVA_1 = L_500kVA_1*(V2_500kVA_1**2.0)/Sn_500kVA_1
        
        
        Sn_500kVA_2       = 500.0e3    # VA
        V1_500kVA_2       = 13800.0    # V
        V2_500kVA_2       = 208.0    # V
        Z_500kVA_2        = 5.0/100.0    # pu
        Z_ratio_500kVA_2 = 4.9
        Rm_500kVA_2 = 1e5
        Lm_500kVA_2 = 200
        
        R_500kVA_2 = Z_500kVA_2/np.sqrt(1.0+Z_ratio_500kVA_2**2.0)/2.0    # pu
        L_500kVA_2 = Z_ratio_500kVA_2*R_500kVA_2/sys_w/2.0    # pu
        
        R1_500kVA_2 = 3.0*R_500kVA_2*(V1_500kVA_2**2.0)/Sn_500kVA_2
        R2_500kVA_2 = R_500kVA_2*(V2_500kVA_2**2.0)/Sn_500kVA_2
        L1_500kVA_2 = 3.0*L_500kVA_2*(V1_500kVA_2**2.0)/Sn_500kVA_2
        L2_500kVA_2 = L_500kVA_2*(V2_500kVA_2**2.0)/Sn_500kVA_2
        
        
        Sn_1MVA       = 1000.0e3    # VA
        V1_1MVA       = 13800.0    # V
        V2_1MVA       = 480.0    # V
        Z_1MVA        = 5.56/100.0    # pu
        Z_ratio_1MVA = 5.49
        Rm_1MVA = 1e5
        Lm_1MVA = 200
        
        R_1MVA = Z_1MVA/np.sqrt(1.0+Z_ratio_1MVA**2.0)/2.0    # pu
        L_1MVA = Z_ratio_1MVA*R_1MVA/sys_w/2.0    # pu
        
        R1_1MVA = 3.0*R_1MVA*(V1_1MVA**2.0)/Sn_1MVA
        R2_1MVA = R_1MVA*(V2_1MVA**2.0)/Sn_1MVA
        L1_1MVA = 3.0*L_1MVA*(V1_1MVA**2.0)/Sn_1MVA
        L2_1MVA = L_1MVA*(V2_1MVA**2.0)/Sn_1MVA
        
        Sn_1500kVA       = 1500.0e3    # VA
        V1_1500kVA       = 4160.0    # V
        V2_1500kVA       = 480.0    # V
        Z_1500kVA        = 5.75/100.0    # pu
        Z_ratio_1500kVA = 5.04
        Rm_1500kVA = 1e5
        Lm_1500kVA = 200
        
        R_1500kVA = Z_1500kVA/np.sqrt(1.0+Z_ratio_1500kVA**2.0)/2.0    # pu
        L_1500kVA = Z_ratio_1500kVA*R_1500kVA/sys_w/2.0    # pu
        
        R1_1500kVA = 3.0*R_1500kVA*(V1_1500kVA**2.0)/Sn_1500kVA
        R2_1500kVA = R_1500kVA*(V2_1500kVA**2.0)/Sn_1500kVA
        L1_1500kVA = 3.0*L_1500kVA*(V1_1500kVA**2.0)/Sn_1500kVA
        L2_1500kVA = L_1500kVA*(V2_1500kVA**2.0)/Sn_1500kVA
        
        
        Sn_2MVA_1       = 2000.0e3    # VA
        V1_2MVA_1       = 4160.0    # V
        V2_2MVA_1       = 480.0    # V
        Z_2MVA_1        = 5.75/100.0    # pu
        Z_ratio_2MVA_1 = 5.7
        Rm_2MVA_1 = 1e5
        Lm_2MVA_1 = 200
        
        R_2MVA_1 = Z_2MVA_1/np.sqrt(1.0+Z_ratio_2MVA_1**2.0)/2.0    # pu
        L_2MVA_1 = Z_ratio_2MVA_1*R_2MVA_1/sys_w/2.0    # pu
        
        R1_2MVA_1 = 3.0*R_2MVA_1*(V1_2MVA_1**2.0)/Sn_2MVA_1
        R2_2MVA_1 = R_2MVA_1*(V2_2MVA_1**2.0)/Sn_2MVA_1
        L1_2MVA_1 = 3.0*L_2MVA_1*(V1_2MVA_1**2.0)/Sn_2MVA_1
        L2_2MVA_1 = L_2MVA_1*(V2_2MVA_1**2.0)/Sn_2MVA_1
        
        
        Sn_2MVA_2       = 2000.0e3    # VA
        V1_2MVA_2       = 13800.0    # V
        V2_2MVA_2       = 480.0    # V
        Z_2MVA_2        = 5.75/100.0    # pu
        Z_ratio_2MVA_2 = 5.7
        Rm_2MVA_2 = 1e5
        Lm_2MVA_2 = 200
        
        R_2MVA_2 = Z_2MVA_2/np.sqrt(1.0+Z_ratio_2MVA_2**2.0)/2.0    # pu
        L_2MVA_2 = Z_ratio_2MVA_2*R_2MVA_2/sys_w/2.0    # pu
        
        R1_2MVA_2 = 3.0*R_2MVA_2*(V1_2MVA_2**2.0)/Sn_2MVA_2
        R2_2MVA_2 = R_2MVA_2*(V2_2MVA_2**2.0)/Sn_2MVA_2
        L1_2MVA_2 = 3.0*L_2MVA_2*(V1_2MVA_2**2.0)/Sn_2MVA_2
        L2_2MVA_2 = L_2MVA_2*(V2_2MVA_2**2.0)/Sn_2MVA_2
        
        
        Sn_2500kVA_1       = 2500.0e3    # VA
        V1_2500kVA_1       = 13800.0    # V
        V2_2500kVA_1       = 480.0    # V
        Z_2500kVA_1        = 5.56/100.0    # pu
        Z_ratio_2500kVA_1 = 5.52
        Rm_2500kVA_1 = 1e5
        Lm_2500kVA_1 = 200
        
        R_2500kVA_1 = Z_2500kVA_1/np.sqrt(1.0+Z_ratio_2500kVA_1**2.0)/2.0    # pu
        L_2500kVA_1 = Z_ratio_2500kVA_1*R_2500kVA_1/sys_w/2.0    # pu
        
        R1_2500kVA_1 = 3.0*R_2500kVA_1*(V1_2500kVA_1**2.0)/Sn_2500kVA_1
        R2_2500kVA_1 = R_2500kVA_1*(V2_2500kVA_1**2.0)/Sn_2500kVA_1
        L1_2500kVA_1 = 3.0*L_2500kVA_1*(V1_2500kVA_1**2.0)/Sn_2500kVA_1
        L2_2500kVA_1 = L_2500kVA_1*(V2_2500kVA_1**2.0)/Sn_2500kVA_1
        
        
        Sn_2500kVA_2       = 2500.0e3    # VA
        V1_2500kVA_2       = 13800.0    # V
        V2_2500kVA_2       = 480.0    # V
        Z_2500kVA_2        = 5.75/100.0    # pu
        Z_ratio_2500kVA_2 = 6.6
        Rm_2500kVA_2 = 1e5
        Lm_2500kVA_2 = 200
        
        R_2500kVA_2 = Z_2500kVA_2/np.sqrt(1.0+Z_ratio_2500kVA_2**2.0)/2.0    # pu
        L_2500kVA_2 = Z_ratio_2500kVA_2*R_2500kVA_2/sys_w/2.0    # pu
        
        R1_2500kVA_2 = 3.0*R_2500kVA_2*(V1_2500kVA_2**2.0)/Sn_2500kVA_2
        R2_2500kVA_2 = R_2500kVA_2*(V2_2500kVA_2**2.0)/Sn_2500kVA_2
        L1_2500kVA_2 = 3.0*L_2500kVA_2*(V1_2500kVA_2**2.0)/Sn_2500kVA_2
        L2_2500kVA_2 = L_2500kVA_2*(V2_2500kVA_2**2.0)/Sn_2500kVA_2
        
        
        Sn_3750kVA       = 3750.0e3    # VA
        V1_3750kVA       = 13800.0    # V
        V2_3750kVA       = 4160.0    # V
        Z_3750kVA        = 4.75/100.0    # pu
        Z_ratio_3750kVA = 11.4
        Rm_3750kVA = 1e5
        Lm_3750kVA = 200
        
        R_3750kVA = Z_3750kVA/np.sqrt(1.0+Z_ratio_3750kVA**2.0)/2.0    # pu
        L_3750kVA = Z_ratio_3750kVA*R_3750kVA/sys_w/2.0    # pu
        
        R1_3750kVA = 3.0*R_3750kVA*(V1_3750kVA**2.0)/Sn_3750kVA
        R2_3750kVA = R_3750kVA*(V2_3750kVA**2.0)/Sn_3750kVA
        L1_3750kVA = 3.0*L_3750kVA*(V1_3750kVA**2.0)/Sn_3750kVA
        L2_3750kVA = L_3750kVA*(V2_3750kVA**2.0)/Sn_3750kVA
        
        
        Sn_5MVA       = 5000.0e3    # VA
        V1_5MVA       = 13800.0    # V
        V2_5MVA       = 480.0    # V
        Z_5MVA        = 5.50/100.0    # pu
        Z_ratio_5MVA = 5.44
        Rm_5MVA = 1e5
        Lm_5MVA = 200
        
        R_5MVA = Z_5MVA/np.sqrt(1.0+Z_ratio_5MVA**2.0)/2.0    # pu
        L_5MVA = Z_ratio_5MVA*R_5MVA/sys_w/2.0    # pu
        
        R1_5MVA = 3.0*R_5MVA*(V1_5MVA**2.0)/Sn_5MVA
        R2_5MVA = R_5MVA*(V2_5MVA**2.0)/Sn_5MVA
        L1_5MVA = 3.0*L_5MVA*(V1_5MVA**2.0)/Sn_5MVA
        L2_5MVA = L_5MVA*(V2_5MVA**2.0)/Sn_5MVA
        
        
        # Transmission Line Specs
        
            # The cable 6 impedance is equal to the cable 13 impedance. The differences of both
            # cables are Voltage insulation and Ampacity. Feeder1_line7, Feeder1_line8 and
            # Feeder1_line9 use cable 6.
            # Transmission lines 4, 5 and 6 from Feeder 2 use cable 6.
        
        R1_cable11 = 0.2685    # ohms/mi
        X1_cable11 = 0.207    # ohms/mi
        R0_cable11 = 2.1408    # ohms/mi
        X0_cable11 = 1.582    # ohms/mi
        B_cable11 = 308.7587e-6    # S/mi
        L0_cable11 = X0_cable11/sys_w    # H/mi
        L1_cable11 = X1_cable11/sys_w    # H/mi
        C0_cable11 = B_cable11/sys_w    # F/mi
        R_cable11  = [[R0_cable11,0.0,0.0],[0.0,R1_cable11,0.0],[0.0,0.0,R1_cable11]]
        L_cable11  = [[L0_cable11,0.0,0.0],[0.0,L1_cable11,0.0],[0.0,0.0,L1_cable11]]
        C_cable11  = [[C0_cable11,0.0,0.0],[0.0,C0_cable11,0.0],[0.0,0.0,C0_cable11]]
        
        R1_cable13 = 0.1206    # ohms/mi
        X1_cable13 = 0.1878    # ohms/mi
        R0_cable13 = 1.8354    # ohms/mi
        X0_cable13 = 1.2165    # ohms/mi
        B_cable13 = 384.0177e-6    # S/mi
        L0_cable13 = X0_cable13/sys_w    # H/mi
        L1_cable13 = X1_cable13/sys_w    # H/mi
        C0_cable13 = B_cable13/sys_w    # F/mi
        R_cable13  = [[R0_cable13,0.0,0.0],[0.0,R1_cable13,0.0],[0.0,0.0,R1_cable13]]
        L_cable13  = [[L0_cable13,0.0,0.0],[0.0,L1_cable13,0.0],[0.0,0.0,L1_cable13]]
        C_cable13  = [[C0_cable13,0.0,0.0],[0.0,C0_cable13,0.0],[0.0,0.0,C0_cable13]]
        
        
        # Transmission Line lengths
        
            # Utility
        
        l_U_L1 = 3000.0*ft2mi    # mi
        l_U_L2 = 500.0*ft2mi    # mi
        l_U_L3 = 500.0*ft2mi    # mi
        l_U_L4 = 500.0*ft2mi    # mi
        
            # Feeder1
        
        l_F1L1 = 1800.0*ft2mi    # mi
        l_F1L2 = 5500.0*ft2mi    # mi
        l_F1L3 = 1000.0*ft2mi    # mi
        l_F1L4 = 3000.0*ft2mi    # mi
        l_F1L5 = 3000.0*ft2mi    # mi
        l_F1L6 = 1500.0*ft2mi    # mi
        l_F1L7 = 2000.0*ft2mi    # mi
        l_F1L8 = 1000.0*ft2mi    # mi
        l_F1L9 = 2000.0*ft2mi    # mi
        l_F1DG = 2000.0*ft2mi    # mi
        
            # Fedeer2
        
        l_F2L0 = 10.0*ft2mi    # mi
        l_F2L1 = 5500.0*ft2mi    # mi
        l_F2L2 = 2000.0*ft2mi    # mi
        l_F2L3 = 3000.0*ft2mi    # mi
        l_F2L4 = 1500.0*ft2mi    # mi
        l_F2L5 = 1500.0*ft2mi    # mi
        l_F2L6 = 1500.0*ft2mi    # mi
        
            # Feeder3
        
        l_F3L1 = 2500.0*ft2mi    # mi
        l_F3L2 = 2000.0*ft2mi    # mi
        l_F3L3 = 2000.0*ft2mi    # mi
        l_F3L4 = 1500.0*ft2mi    # mi
        l_F3LNGG = 2000.0*ft2mi    # mi
        
        #EPC ESS specs
        L_inv_ess = 0.133e-3 #7.6573e-5 
        L_grid_ess = 0.08e-3 #4.5944e-5
        
        # Diesel Genset settings
        
            # Governor specs
        
        K = 10  # gain K
        T1 = 1.0E-4 # Time constant T1 of Electric Control Box
        T2 = 0.0 # Time constant T2 of Electric Control Box
        T3 = 0.5001 # Time constant T3 of Electric Control Box
        T4 = 0.025  # Time constant T4 of Actuator
        T5 = 0.0009  # Time constant T5 of Actuator
        T6 = 0.00574  # Time constant T6 of Actuator
        Pm0 = 0.0 #0.0005  # Initial value of Mechanic Power
        Tmax = 10 #1.1  # Max torque limit
        Tmin = -0.1  # Min torque limit
        Td = 0.024  # Engine time delay
        
        dummy = 1.0 + 2.0*T5/Ts
        coeff1 = (1.0 + 2.0*T4/Ts)/dummy
        coeff2 = (1.0 - 2.0*T4/Ts)/dummy
        coeff3 = 1.0
        coeff4 = (1.0 - 2.0*T5/Ts)/dummy
        numTF4d = [coeff1, coeff2]
        denTF4d = [coeff3, coeff4]
        
        dummy = 1.0 + 2.0*T6/Ts
        coeff1 = (1.0)/dummy
        coeff2 = (1.0)/dummy
        coeff3 = 1.0
        coeff4 = (1.0 - 2.0*T6/Ts)/dummy
        numTF3d = [coeff1, coeff2]
        denTF3d = [coeff3, coeff4]
        
        numTF1d = [(1.0+2.0*T3/Ts),2.0,(1.0-2.0*T3/Ts)]
        denTF1d = [(1.0+2.0*T1/Ts+4.0*T1*T2/(Ts**2)),(2.0-8.0*T1*T2/(Ts**2)),(4.0*T1*T2/(Ts**2)-2.0*T1/Ts+1)]
        
            # Synchronous machine specs from Simulink's 4 MVA machine in PU
        
        f = 60.0  # Synchronous speed
        pms = 2.0  # Number of mechanical pole pairs
        Sb_gen1 = 3.5e6  # Nominal/base power of machine in VA
        Vn_gen1 = 13800.0  # Machine terminal line to line rms voltage
        Rs_pu_gen1 = 0.008979  # Stator resistance per phase in pu
        Lls_pu_gen1 = 0.05  # Stator leakage inductance in pu
        Lmd_pu_gen1 = 2.35  # Direct-axis magnetizing inductance in pu
        Lmq_pu_gen1 = 1.72  # Quadrature-axis magnetizing inductance in pu
        Rf_pu_gen1 = 0.00206  # Field resistance in pu
        Llfd_pu_gen1 = 0.511  # Field leakage inductance in pu
        Rkd_pu_gen1 = 0.2826  # D-axis resistance in pu
        Rkq_pu_gen1 = 0.02545  # Q-axis resistance in pu
        Llkd_pu_gen1 = 3.738  # D-axis leakage inductance in pu
        Llkq_pu_gen1 = 0.2392  # Q-axis leakage inductance in pu
        Ns_fd_gen1 = 1.0  # Turn ratio between the stator and the field windings
        Ns_kd_gen1 = 1.0  # Turn ratio between stator and d-axis damper windings
        Ns_kq_gen1 = 1.0  # Turn ratio between stator and q-axis damper windings
        H_gen1 = 0.3468  # Inertia coefficient in seconds
        Fpu_gen1 = 0.009238  # Friction factor in pu
        
            # Base calculation
        
        Vb_gen1 = Vn_gen1*((2.0/3.0)**0.5)  # Nominal/base voltage of machine terminal in V (Peak line to neutral voltage)
        wb_gen1 = 2.0*np.pi*f  # Electrical angular speed base
        wmb_gen1 = wb_gen1/pms  # Mechanical angular speed base
        Zb_gen1 = (Vn_gen1*Vn_gen1)/Sb_gen1  # Impedance base
        Trq_b_gen1 = Sb_gen1/wmb_gen1  # Torque base
        Fb_gen1 = Trq_b_gen1/wmb_gen1  # Friction Factor base
        Lb_gen1 = Zb_gen1/wb_gen1  # Inductance base
        
            # Stator data in SI
        
        Rs_gen1 = Rs_pu_gen1*Zb_gen1
        Lls_gen1 = Lls_pu_gen1*Lb_gen1
        Lmd_gen1 = Lmd_pu_gen1*Lb_gen1
        Lmq_gen1 = Lmq_pu_gen1*Lb_gen1
        Rkd_gen1 = Rkd_pu_gen1*Zb_gen1
        Rkq_gen1 = Rkq_pu_gen1*Zb_gen1
        Llkd_gen1 = Llkd_pu_gen1*Lb_gen1
        Llkq_gen1 = Llkq_pu_gen1*Lb_gen1
        
            # Mechanical data in SI
        
        F_gen1 = Fpu_gen1*Fb_gen1  # Friction Factor in Nm.s
        J_gen1 = 2*H_gen1*Sb_gen1/(wmb_gen1*wmb_gen1)  # Inertia in kg.m2
        
            # Field base calculation
        
        Lsfd_gen1 = (2.0/3.0)*Lmd_gen1*(1.0/Ns_fd_gen1)  # Mutual inductance between stator and field
        ifn_gen1 = Vb_gen1/(Lsfd_gen1*wb_gen1)  # Nominal field current
        ifb_gen1 = ifn_gen1*Lmd_pu_gen1  # Field current base
        Vfb_gen1 = Sb_gen1/ifb_gen1  # Field voltage base
        Zfb_gen1 = Vfb_gen1/ifb_gen1  # Field impedance base
        Lfb_gen1 = Zfb_gen1/wb_gen1  # Field inductance base
        
            # Field data in SI
        
        Rf_gen1 = Rf_pu_gen1*Zfb_gen1  # Field resistance (Field side)
        Llfd_gen1 = Llfd_pu_gen1*Lfb_gen1  # Field inductance (Field side)
        Rf_prime_gen1 = Rf_gen1*(3.0/2.0)*(Ns_fd_gen1*Ns_fd_gen1)  # Field resistance referred to the stator side
        Llfd_prime_gen1 = Llfd_gen1*(3.0/2.0)*(Ns_fd_gen1*Ns_fd_gen1)  # Field inductance referred to the stator side
        
            # Exciter initialization
        
        Tr_gen1 = 20e-4  # Low pass filter time constant
        Ka_gen1 = 200  # Regulator gain
        Ta_gen1 = 2e-3  # Regulator time constant
        Ke_gen1 = 1.0  # Exciter constant
        Te_gen1 = 1e-8 #Exciter time constant
        Tb_gen1 = 1e-12  # Transient gain reduction time constant b
        Tc_gen1 = 1e-12  # Transient gain reduction time constant c
        Kf_gen1 = 0  # Damping filter gain
        Tf_gen1 = 1e-12  # Damping filter time constant
        Efmin_gen1 = -0.1 # Regulator output lower limit
        Efmax_gen1 = 5.0 #5.0  # Regulator output upper limit
        Vt0_gen1 = 0.0  # Initial terminal voltage
        Vf0_gen1 = 0.0  # Initial field voltage
        Const_gen1 = Vf0_gen1/Ka_gen1
        
            #Diesel settings from Unit Test (Mach_ex_gov_PQv3_4MVA_unit_test_woodward_updated_started_v2.tse)
        
        # Governor specs
        
        K = 10  # gain K
        T4 = 0.025  # Time constant T4
        T5 = 0.0009  # Time constant T5
        T6 = 0.00574  # Time constant T6
        Pm0 = 0.0005  # Initial value of Mechanic Power
        Tmax = 1.1  # Max torque limit
        Tmin = 0  # Min torque limit
        Td = 0.024  # Engine time delay
        
        # numTF4d = [27.7777777777778,-27.6726170945921]  # For Ts = 1e-4
        # denTF4d = [1,-0.894839316814370]  # For Ts = 1e-4
        # numTF4d = [27.7777777777778,-27.6056562658610]  # For Ts = 1.7e-4
        # denTF4d = [1,-0.827878488083238]  # For Ts = 1.7e-4
        dummy = 1.0 + 2.0*T5/Ts
        coeff1 = (1.0 + 2.0*T4/Ts)/dummy
        coeff2 = (1.0 - 2.0*T4/Ts)/dummy
        coeff3 = 1.0
        coeff4 = (1.0 - 2.0*T5/Ts)/dummy
        numTF4d = [coeff1, coeff2] #[27.7777777777778,-27.4943090883516]  # For Ts = 3e-4
        denTF4d = [coeff3, coeff4] # [1,-0.716531310573789]  # For Ts = 3e-4
        
        # numTF3d = [0,0.0172707241189214]  # For Ts = 1e-4
        # denTF3d = [1,-0.982729275881079]  # For Ts = 1e-4
        # numTF3d = [0,0.0291824473977244]  # For Ts = 1.7e-4
        # denTF3d = [1,-0.970817552602276]  # For Ts = 1.7e-4
        dummy = 1.0 + 2.0*T6/Ts
        coeff1 = (1.0)/dummy
        coeff2 = (1.0)/dummy
        coeff3 = 1.0
        coeff4 = (1.0 - 2.0*T6/Ts)/dummy
        numTF3d = [coeff1, coeff2] #[0,0.0509224900975103]  # For Ts = 3e-4
        denTF3d = [coeff3, coeff4] # [1,-0.949077509902490]  # For Ts = 3e-4
        
        
        # Synchronous machine specs from Simulink's machine in PU
        
        f = 60.0  # Synchronous speed
        pms = 2.0  # Number of mechanical pole pairs
        Sb_gen2 = 4.0e6  # Nominal/base power of machine in VA
        Vn_gen2 = 13800.0  # Machine terminal line to line rms voltage
        Rs_pu_gen2 = 0.008979  # Stator resistance per phase in pu
        Lls_pu_gen2 = 0.05  # Stator leakage inductance in pu
        Lmd_pu_gen2 = 2.35  # Direct-axis magnetizing inductance in pu
        Lmq_pu_gen2 = 1.72  # Quadrature-axis magnetizing inductance in pu
        Rf_pu_gen2 = 0.00206  # Field resistance in pu
        Llfd_pu_gen2 = 0.511  # Field leakage inductance in pu
        Rkd_pu_gen2 = 0.2826  # D-axis resistance in pu
        Rkq_pu_gen2 = 0.02545  # Q-axis resistance in pu
        Llkd_pu_gen2 = 3.738  # D-axis leakage inductance in pu
        Llkq_pu_gen2 = 0.2392  # Q-axis leakage inductance in pu
        Ns_fd_gen2 = 1.0  # Turn ratio between the stator and the field windings
        Ns_kd_gen2 = 1.0  # Turn ratio between stator and d-axis damper windings
        Ns_kq_gen2 = 1.0  # Turn ratio between stator and q-axis damper windings
        H_gen2 = 0.3468  # Inertia coefficient in seconds
        Fpu_gen2 = 0 #0.009238  # Friction factor in pu
        
        # Base calculation
        
        Vb_gen2 = Vn_gen2*((2.0/3.0)**0.5)  # Nominal/base voltage of machine terminal in V (Peak line to neutral voltage)
        wb_gen2 = 2.0*np.pi*f  # Electrical angular speed base
        wmb_gen2 = wb_gen2/pms  # Mechanical angular speed base
        Zb_gen2 = (Vn_gen2*Vn_gen2)/Sb_gen2  # Impedance base
        Trq_b_gen2 = Sb_gen2/wmb_gen2  # Torque base
        Fb_gen2 = Trq_b_gen2/wmb_gen2  # Friction Factor base
        Lb_gen2 = Zb_gen2/wb_gen2  # Inductance base
        
        # Stator data in SI
        
        Rs_gen2 = Rs_pu_gen2*Zb_gen2
        Lls_gen2 = Lls_pu_gen2*Lb_gen2
        Lmd_gen2 = Lmd_pu_gen2*Lb_gen2
        Lmq_gen2 = Lmq_pu_gen2*Lb_gen2
        Rkd_gen2 = Rkd_pu_gen2*Zb_gen2
        Rkq_gen2 = Rkq_pu_gen2*Zb_gen2
        Llkd_gen2 = Llkd_pu_gen2*Lb_gen2
        Llkq_gen2 = Llkq_pu_gen2*Lb_gen2
        
        # Mechanical data in SI
        
        F_gen2 = Fpu_gen2*Fb_gen2  # Friction Factor in Nm.s
        J_gen2 = 2*H_gen2*Sb_gen2/(wmb_gen2*wmb_gen2)  # Inertia in kg.m2
        
        # Field base calculation
        
        Lsfd_gen2 = (2.0/3.0)*Lmd_gen2*(1.0/Ns_fd_gen2)  # Mutual inductance between stator and field
        ifn_gen2 = Vb_gen2/(Lsfd_gen2*wb_gen2)  # Nominal field current
        ifb_gen2 = ifn_gen2*Lmd_pu_gen2  # Field current base
        Vfb_gen2 = Sb_gen2/ifb_gen2  # Field voltage base
        Zfb_gen2 = Vfb_gen2/ifb_gen2  # Field impedance base
        Lfb_gen2 = Zfb_gen2/wb_gen2  # Field inductance base
        
        # Field data in SI
        
        Rf_gen2 = Rf_pu_gen2*Zfb_gen2  # Field resistance (Field side)
        Llfd_gen2 = Llfd_pu_gen2*Lfb_gen2  # Field inductance (Field side)
        Rf_prime_gen2 = Rf_gen2*(3.0/2.0)*(Ns_fd_gen2*Ns_fd_gen2)  # Field resistance referred to the stator side
        Llfd_prime_gen2 = Llfd_gen2*(3.0/2.0)*(Ns_fd_gen2*Ns_fd_gen2)  # Field inductance referred to the stator side
        
        # Exciter initialization
        
        Tr_gen2 = 1e-3  # Low pass filter time constant
        Ka_gen2 = 20.0  # Regulator gain
        Ta_gen2 = 2e-3  # Regulator time constant
        Ke_gen2 = 1.0  # Exciter constant
        Te_gen2 = 1e-3 #Exciter time constant
        Tb_gen2 = 0.0  # Transient gain reduction time constant b
        Tc_gen2 = 0.0  # Transient gain reduction time constant c
        Kf_gen2 = 0  # Damping filter gain
        Tf_gen2 = 1e-3  # Damping filter time constant
        Efmin_gen2 = -5.0 # 0.0 # Regulator output lower limit
        Efmax_gen2 = 5.0 #5.0  # Regulator output upper limit
        Vt0_gen2 = 0.0  # Initial terminal voltage
        Vf0_gen2 = 0.0  # Initial field voltage
        Const_gen2 = Vf0_gen2/Ka_gen2
        
        dummy_gain_exciter = 0.01
        
        #Rl = 14.283
        #Ll = 0.120472454546162
        
        Rl = 0.1
        Ll = 0.010
        
        Rl_mach = Rl
        Ll_mach = Ll
        
        Rl_shunt = 4761.0/1.0# 4761 Ohm is the resistance needed for 1% of nominal power at nominal voltage
        
        
        load = 0.196837209302326
        
        
            #End of settings from Unit Test 
        
        #Feeder 1 has to have slave_id = 1 to all Relays config
        #Feeder 2 has to have slave_id = 2 to all Relays config
        #Feeder 3 has to have slave_id = 3 to all Relays config
        
        #Relays init time
        cb_init_cond_time = 0.1+Ts
        time_flag_delay = 0.2
        
        configF1_CB1 = {
          'port': 502,
          'ip_addr': '192.168.10.101',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB2 = {
          'port': 502,
          'ip_addr': '192.168.10.102',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB3 = {
          'port': 502,
          'ip_addr': '192.168.10.103',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB4 = {
          'port': 502,
          'ip_addr': '192.168.10.104',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB5 = {
          'port': 502,
          'ip_addr': '192.168.10.105',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB6 = {
          'port': 502,
          'ip_addr': '192.168.10.106',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB7 = {
          'port': 502,
          'ip_addr': '192.168.10.107',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB8 = {
          'port': 502,
          'ip_addr': '192.168.10.108',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB9 = {
          'port': 502,
          'ip_addr': '192.168.10.109',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB10 = {
          'port': 502,
          'ip_addr': '192.168.10.110',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB11 = {
          'port': 502,
          'ip_addr': '192.168.10.111',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB12 = {
          'port': 502,
          'ip_addr': '192.168.10.112',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB13 = {
          'port': 502,
          'ip_addr': '192.168.10.113',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB14 = {
          'port': 502,
          'ip_addr': '192.168.10.114',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        
        configF2_CB1 = {
          'port': 502,
          'ip_addr': '192.168.10.115',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB2 = {
          'port': 502,
          'ip_addr': '192.168.10.116',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB3 = {
          'port': 502,
          'ip_addr': '192.168.10.117',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB4 = {
          'port': 502,
          'ip_addr': '192.168.10.118',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB5 = {
          'port': 502,
          'ip_addr': '192.168.10.119',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB6 = {
          'port': 502,
          'ip_addr': '192.168.10.120',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB7 = {
          'port': 502,
          'ip_addr': '192.168.10.121',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB8 = {
          'port': 502,
          'ip_addr': '192.168.10.122',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB9 = {
          'port': 502,
          'ip_addr': '192.168.10.123',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB10 = {
          'port': 502,
          'ip_addr': '192.168.10.124',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB11 = {
          'port': 502,
          'ip_addr': '192.168.10.125',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB12 = {
          'port': 502,
          'ip_addr': '192.168.10.126',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB13 = {
          'port': 502,
          'ip_addr': '192.168.10.127',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB14 = {
          'port': 502,
          'ip_addr': '192.168.10.128',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB15 = {
          'port': 502,
          'ip_addr': '192.168.10.129',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB16 = {
          'port': 502,
          'ip_addr': '192.168.10.130',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB17 = {
          'port': 502,
          'ip_addr': '192.168.10.131',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB18 = {
          'port': 502,
          'ip_addr': '192.168.10.132',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB19 = {
          'port': 502,
          'ip_addr': '192.168.10.133',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        
        configF3_CB1 = {
          'port': 502,
          'ip_addr': '192.168.10.134',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF3_CB2 = {
          'port': 502,
          'ip_addr': '192.168.10.135',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF3_CB3 = {
          'port': 502,
          'ip_addr': '192.168.10.136',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF3_CB4 = {
          'port': 502,
          'ip_addr': '192.168.10.137',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF3_CB5 = {
          'port': 502,
          'ip_addr': '192.168.10.138',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF3_CB6 = {
          'port': 502,
          'ip_addr': '192.168.10.139',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF3_CB7 = {
          'port': 502,
          'ip_addr': '192.168.10.140',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF3_CB8 = {
          'port': 502,
          'ip_addr': '192.168.10.141',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF3_CB9 = {
          'port': 502,
          'ip_addr': '192.168.10.142',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        dms_config = {
          'port': 502,
          'ip_addr': '192.168.10.54',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '0,1,2,7,3,8,4,9,5,10,6,11,12,13,14,15',
          'holding_register_output_addresses': '',
          'input_register_adresses': ''
        }
        configCHP = {
            'port': 502,
            'ip_addr': '192.168.10.55',
            'netmask': '255.255.255.0',
            'slave_id': 3,
            'coil_input_addresses': '',
            'coil_output_addresses': '',
            'discrete_input_addresses': '',
            'holding_register_input_addresses': '',
            'holding_register_output_addresses': '2000,2001',
            'input_register_adresses': '0,1,2,3,4'
        }
        
            #Transformers Lm and Rm
        Rm_utility_transfo1 = 1e5
        Lm_utility_transfo1 = 200
        
        Rm_feeder1_transfo1 = 1e5
        Lm_feeder1_transfo1 = 200
        
        Rm_feeder1_transfo2 = 1e5
        Lm_feeder1_transfo2 = 200
        
        Rm_feeder1_transfo3 = 1e5
        Lm_feeder1_transfo3 = 200
        
        Rm_feeder1_transfo4 = 1e5
        Lm_feeder1_transfo4 = 200
        
        Rm_feeder1_transfo5 = 1e5
        Lm_feeder1_transfo5 = 200
        
        Rm_feeder1_transfo6 = 1e5
        Lm_feeder1_transfo6 = 200
        
        Rm_feeder1_transfo7 = 1e5
        Lm_feeder1_transfo7 = 200
        
        # ESS specs
        
        R0=.0407753
        L0=2.06374e-3
        Rt0=0.427726
        C=30.002852e-6
        R=1e-1
        #R=0
        L=30.6125e-4
        BW=120
    ENDCODE
}
