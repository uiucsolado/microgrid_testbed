version = 4.2

//
// Saved by sw version: 2020.1
// Save timestamp: 16-Jun-2020 @ 10:56:48 PM
//

model "complete_with_pv" {
    configuration {
        hil_device = "HIL604"
        hil_configuration_id = 1
        simulation_method = exact
        simulation_time_step = 2e-6
        simulation_discret_scaling = 1.0
        dsp_timer_periods = 100e-6, 50e-3
        ss_calc_method = "systematic elimination"
        enb_pole_shift = True
        enb_gds_oversampling = True
        show_modes = False
        device_ao_limit_enable = False
        cpl_stb = True
        enb_dep_sw_detect = False
        code_section = "external memory"
        data_section = "internal memory"
        sys_sp_rate_1 = 0.0001
        sys_sp_rate_2 = 0.05
        sys_real_type_precision = "default"
        user_real_type_precision = "default"
        sys_cpu_optimization = "high"
        user_cpu_optimization = "high"
    }

    component Subsystem Root {
        component Subsystem "Charging Station" {
            layout = dynamic
            component Subsystem Charging_station_meter_split {
                layout = dynamic
                component gen_probe POWER_Q {
                }
                [
                    position = 7992, 8352
                    scale = -1, 1
                ]

                component "core/Meter Split" "Meter Split1" {
                    freq = "True"
                    i_rms = "True"
                    power_p = "True"
                    power_pf = "True"
                    power_q = "True"
                    van = "False"
                    vbn = "False"
                    vcn = "False"
                    vll_rms = "True"
                }
                [
                    position = 8288, 8264
                    scale = -1, 1
                    size = 88, 208
                ]

                component gen_z_domain_transfer lpf2 {
                    a_coeff = "[1.0/(2.0*np.pi*5.0), 1.0]"
                    b_coeff = "[1.0]"
                    domain = "S-domain"
                }
                [
                    position = 8072, 8352
                    scale = -1, 1
                ]

                component gen_z_domain_transfer lpf {
                    a_coeff = "[1.0/(2.0*np.pi*5.0), 1.0]"
                    b_coeff = "[1.0]"
                    domain = "S-domain"
                }
                [
                    position = 8112, 8192
                    scale = -1, 1
                ]

                component gen_probe VLL_RMS {
                }
                [
                    position = 8024, 8192
                    scale = -1, 1
                ]

                component gen_z_domain_transfer lpf1 {
                    a_coeff = "[1.0/(2.0*np.pi*5.0), 1.0]"
                    b_coeff = "[1.0]"
                    domain = "S-domain"
                }
                [
                    position = 8112, 8288
                    scale = -1, 1
                ]

                component gen_probe POWER_P {
                }
                [
                    position = 7984, 8288
                    scale = -1, 1
                ]

                component gen_z_domain_transfer lpf3 {
                    a_coeff = "[1.0/(2.0*np.pi*5.0), 1.0]"
                    b_coeff = "[1.0]"
                    domain = "S-domain"
                }
                [
                    position = 8152, 8144
                    scale = -1, 1
                ]

                component gen_probe f_Hz {
                }
                [
                    position = 8064, 8144
                    scale = -1, 1
                ]

                component gen_z_domain_transfer lpf4 {
                    a_coeff = "[1.0/(2.0*np.pi*5.0), 1.0]"
                    b_coeff = "[1.0]"
                    domain = "S-domain"
                }
                [
                    position = 8184, 8248
                    scale = -1, 1
                ]

                component gen_probe I_RMS {
                }
                [
                    position = 8064, 8248
                    scale = -1, 1
                ]

                component gen_probe pf {
                }
                [
                    position = 7992, 8416
                    scale = -1, 1
                ]

                component gen_z_domain_transfer lpf5 {
                    a_coeff = "[1.0/(2.0*np.pi*5.0), 1.0]"
                    b_coeff = "[1.0]"
                    domain = "S-domain"
                }
                [
                    position = 8072, 8416
                    scale = -1, 1
                ]

                component gen_gain Gain1 {
                    gain = "1e-3"
                }
                [
                    position = 7928, 8256
                    rotation = down
                    hide_name = True
                ]

                component gen_probe P_kW {
                }
                [
                    position = 7848, 8256
                    scale = -1, 1
                ]

                component gen_probe Q_kVAr {
                }
                [
                    position = 7848, 8328
                    scale = -1, 1
                ]

                component gen_gain Gain2 {
                    gain = "1e-3"
                }
                [
                    position = 7920, 8328
                    rotation = down
                    hide_name = True
                ]

                port In {
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8392, 8248
                    rotation = down
                ]

                junction Junction1 sp
                [
                    position = 8024, 8288
                ]

                junction Junction2 sp
                [
                    position = 8024, 8352
                ]

                connect lpf2.in "Meter Split1.POWER_Q" as Connection3927
                [
                    breakpoints = 8136, 8352; 8136, 8312
                ]
                connect lpf.in "Meter Split1.VLL_RMS" as Connection3923
                connect VLL_RMS.in lpf.out as Connection3922
                connect "Meter Split1.Input" In as Connection3921
                connect lpf1.in "Meter Split1.POWER_P" as Connection3925
                connect f_Hz.in lpf3.out as Connection3928
                connect lpf3.in "Meter Split1.Freq" as Connection3929
                connect I_RMS.in lpf4.out as Connection3930
                connect lpf4.in "Meter Split1.I_RMS" as Connection3931
                connect pf.in lpf5.out as Connection3932
                connect "Meter Split1.POWER_PF" lpf5.in as Connection3933
                [
                    breakpoints = 8160, 8344; 8160, 8416
                ]
                connect POWER_P.in Junction1 as Connection3934
                connect Junction1 lpf1.out as Connection3935
                connect Gain1.in Junction1 as Connection3936
                connect P_kW.in Gain1.out as Connection3937
                connect POWER_Q.in Junction2 as Connection3938
                connect Junction2 lpf2.out as Connection3939
                connect Gain2.in Junction2 as Connection3940
                connect Q_kVAr.in Gain2.out as Connection3941
            }
            [
                position = 9696, 8072
                rotation = right
                size = 48, 48
            ]

            component "core/Three-phase Meter" Charging_station_meter {
                I_avg_rms = "True"
                I_rms = "True"
                P_meas = "True"
                R = "1e4"
                Ts = "T_meter"
                VAB = "True"
                VBC = "True"
                VCA = "True"
                VLL_avg_rms = "True"
                VLL_rms = "True"
                freq = "True"
            }
            [
                position = 9696, 8256
                size = 56, 240
            ]

            component Subsystem Batt_out {
                layout = dynamic
                component gen_probe Out {
                }
                [
                    position = 8048, 8160
                    rotation = left
                    scale = -1, 1
                ]

                component gen_bus_split "Bus Split1" {
                    outputs = "14"
                }
                [
                    position = 8136, 8216
                ]

                component gen_terminator Termination1 {
                }
                [
                    position = 8304, 7968
                    hide_name = True
                ]

                component gen_terminator Termination2 {
                }
                [
                    position = 8304, 8000
                    hide_name = True
                ]

                component gen_terminator Termination3 {
                }
                [
                    position = 8304, 8032
                    hide_name = True
                ]

                component gen_terminator Termination4 {
                }
                [
                    position = 8304, 8064
                    hide_name = True
                ]

                component gen_terminator Termination5 {
                }
                [
                    position = 8304, 8096
                    hide_name = True
                ]

                component gen_terminator Termination6 {
                }
                [
                    position = 8304, 8128
                    hide_name = True
                ]

                component gen_terminator Termination7 {
                }
                [
                    position = 8304, 8224
                    hide_name = True
                ]

                component gen_terminator Termination8 {
                }
                [
                    position = 8304, 8256
                    hide_name = True
                ]

                component gen_terminator Termination9 {
                }
                [
                    position = 8304, 8288
                    hide_name = True
                ]

                component gen_terminator Termination10 {
                }
                [
                    position = 8304, 8320
                    hide_name = True
                ]

                component gen_terminator Termination11 {
                }
                [
                    position = 8304, 8352
                    hide_name = True
                ]

                component gen_terminator Termination12 {
                }
                [
                    position = 8304, 8384
                    hide_name = True
                ]

                component gen_terminator Termination13 {
                }
                [
                    position = 8304, 8416
                    hide_name = True
                ]

                port outputs {
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8048, 8256
                    rotation = left
                    hide_name = True
                ]

                port charger_CB {
                    position = left:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8304, 7920
                ]

                junction Junction1 sp
                [
                    position = 8048, 8216
                ]

                connect outputs Junction1 as Connection9
                [
                    breakpoints = 8048, 8224
                ]
                connect Junction1 Out.in as Connection10
                [
                    breakpoints = 8048, 8184
                ]
                connect "Bus Split1.in" Junction1 as Connection11
                connect charger_CB "Bus Split1.out" as Connection12
                connect "Bus Split1.out1" Termination1.in as Connection13
                [
                    breakpoints = 8184, 8128; 8184, 7976
                ]
                connect "Bus Split1.out2" Termination2.in as Connection14
                [
                    breakpoints = 8192, 8144; 8192, 8016
                ]
                connect "Bus Split1.out3" Termination3.in as Connection15
                [
                    breakpoints = 8200, 8160; 8200, 8032
                ]
                connect "Bus Split1.out4" Termination4.in as Connection16
                [
                    breakpoints = 8208, 8176; 8208, 8064
                ]
                connect "Bus Split1.out5" Termination5.in as Connection17
                [
                    breakpoints = 8216, 8192; 8216, 8096
                ]
                connect "Bus Split1.out6" Termination6.in as Connection18
                [
                    breakpoints = 8224, 8208; 8224, 8128
                ]
                connect "Bus Split1.out7" Termination7.in as Connection19
                connect "Bus Split1.out8" Termination8.in as Connection20
                [
                    breakpoints = 8272, 8240
                ]
                connect "Bus Split1.out9" Termination9.in as Connection21
                [
                    breakpoints = 8264, 8256
                ]
                connect "Bus Split1.out10" Termination10.in as Connection22
                [
                    breakpoints = 8256, 8272
                ]
                connect "Bus Split1.out11" Termination11.in as Connection23
                [
                    breakpoints = 8248, 8288
                ]
                connect "Bus Split1.out12" Termination12.in as Connection24
                [
                    breakpoints = 8232, 8304
                ]
                connect "Bus Split1.out13" Termination13.in as Connection25
                [
                    breakpoints = 8216, 8336
                ]
            }
            [
                position = 9880, 8064
                rotation = right
                scale = -1, 1
                size = 48, 48
            ]

            component Subsystem Batt_in {
                layout = dynamic
                component src_scada_input Pref {
                    execution_rate = "Ts"
                    max = "10e6"
                    min = "-10e6"
                    unit = ""
                }
                [
                    position = 8168, 8192
                ]

                component gen_c_function "C function1" {
                    in_terminal_dimensions = "inherit;inherit;inherit"
                    in_terminal_dimensions_str = "on inherit;speed inherit;motorstatus inherit"
                    in_terminal_labels = "[(\'on\', True), (\'speed\', True), (\'motorstatus\', True)]"
                    in_terminal_properties = "real on;real speed;inherit motorstatus;"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "out inherit"
                    out_terminal_labels = "[(\'out\', False)]"
                    output_fnc = "/*Begin code section*/
if (speed <= 0.1 && motorstatus == 0)
        out = on;
    else
        out = 0;
/*End code section*/"
                }
                [
                    position = 8232, 8016
                    hide_name = True
                    size = 72, 64
                ]

                component src_scada_input f_ref {
                    def_value = "60.0"
                    execution_rate = "Ts"
                    unit = ""
                }
                [
                    position = 8168, 8128
                ]

                component src_scada_input Qref {
                    execution_rate = "Ts"
                    max = "10e6"
                    min = "-10e6"
                    unit = ""
                }
                [
                    position = 8120, 8240
                ]

                component tm_delay "Unit Delay1" {
                }
                [
                    position = 8104, 8040
                    hide_name = True
                ]

                component gen_bus_join "Bus Join2" {
                    inputs = "6"
                }
                [
                    position = 8264, 8336
                    rotation = right
                    hide_name = True
                ]

                component src_scada_input Vref {
                    def_value = "480"
                    execution_rate = "Ts"
                    unit = ""
                }
                [
                    position = 8120, 8176
                ]

                component src_scada_input mode {
                    execution_rate = "Ts"
                    max = "2"
                    min = "0"
                    unit = ""
                }
                [
                    position = 8120, 8096
                ]

                component src_scada_input On {
                    execution_rate = "Ts"
                    max = "1"
                    min = "0"
                    unit = ""
                }
                [
                    position = 8000, 7936
                ]

                component tm_delay "Unit Delay2" {
                }
                [
                    position = 8096, 7992
                    hide_name = True
                ]

                port inputs {
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8264, 8408
                    rotation = right
                    hide_name = True
                ]

                port motor_status {
                    position = left:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8000, 8040
                ]

                port speedkmh {
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8000, 7992
                ]

                connect Vref.out "Bus Join2.in3" as Connection4
                connect On.out "C function1.on" as Connection8
                connect "Bus Join2.out" inputs as Connection7
                connect "Bus Join2.in4" Pref.out as Connection5
                connect "Unit Delay1.in" motor_status as Connection20
                [
                    breakpoints = 8080, 8040
                ]
                connect mode.out "Bus Join2.in1" as Connection2
                connect "Unit Delay1.out" "C function1.motorstatus" as Connection16
                connect "Bus Join2.in2" f_ref.out as Connection3
                connect Qref.out "Bus Join2.in5" as Connection6
                connect "Bus Join2.in" "C function1.out" as Connection14
                [
                    breakpoints = 8304, 8016
                ]
                connect speedkmh "Unit Delay2.in" as Connection21
                connect "Unit Delay2.out" "C function1.speed" as Connection22
                [
                    breakpoints = 8128, 8016; 8176, 8016
                ]

                Ts = "T_charging_station"

                mask {
                    description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Scada inputs for the battery inverter component from the Microgrid Library.</p></body></html>"

                    Ts {
                        label = "Execution rate"
                        widget = edit
                        type = generic
                        default_value = "200e-6"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE
                }
            }
            [
                position = 10104, 8064
                rotation = right
                scale = -1, 1
                size = 80, 64
            ]

            component Subsystem "Battery inverter" {
                layout = static
                component pas_capacitor Cfa {
                    capacitance = "1/(np.square(OutputFilterFc*2*np.pi)*L)"
                }
                [
                    position = 8624, 8048
                    rotation = right
                ]

                component pas_resistor Rfb {
                    resistance = "Resr"
                }
                [
                    position = 8696, 7952
                    rotation = left
                    scale = -1, 1
                ]

                component pas_inductor Lb {
                    inductance = "L"
                }
                [
                    position = 8336, 7768
                    scale = -1, -1
                ]

                component pas_resistor Rdc {
                    resistance = "50e-9"
                }
                [
                    position = 7440, 7672
                ]

                component pas_inductor Lc {
                    inductance = "L"
                }
                [
                    position = 8336, 7864
                    scale = -1, -1
                ]

                component pas_inductor La {
                    inductance = "L"
                }
                [
                    position = 8336, 7672
                    scale = -1, -1
                ]

                component pas_capacitor Cdc {
                    capacitance = "20e-3"
                }
                [
                    position = 7520, 7768
                    rotation = right
                ]

                component pas_capacitor Cfb {
                    capacitance = "1/(np.square(OutputFilterFc*2*np.pi)*L)"
                }
                [
                    position = 8696, 8048
                    rotation = right
                ]

                component pas_capacitor Cfc {
                    capacitance = "1/(np.square(OutputFilterFc*2*np.pi)*L)"
                }
                [
                    position = 8768, 8048
                    rotation = right
                ]

                component pas_resistor Rfa {
                    resistance = "Resr"
                }
                [
                    position = 8624, 7952
                    rotation = left
                    scale = -1, 1
                ]

                component pas_resistor Rfc {
                    resistance = "Resr"
                }
                [
                    position = 8768, 7952
                    rotation = left
                    scale = -1, 1
                ]

                component pas_resistor Ra {
                    resistance = "R"
                }
                [
                    position = 8232, 7672
                ]

                component pas_resistor Rb {
                    resistance = "R"
                }
                [
                    position = 8232, 7768
                ]

                component pas_resistor Rc {
                    resistance = "R"
                }
                [
                    position = 8232, 7864
                ]

                component "core/Voltage Measurement" VDC {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7600, 7768
                    rotation = right
                    size = 64, 32
                ]

                component "core/Voltage Measurement" Vab1 {
                }
                [
                    position = 8584, 7720
                    rotation = right
                    size = 64, 32
                ]

                component "core/Current Measurement" Ic {
                    addr = "16"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 8440, 7864
                    size = 64, 32
                ]

                component "core/Current Measurement" Ia {
                    addr = "14"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 8440, 7672
                    size = 64, 32
                ]

                component Subsystem "Converter meas" {
                    layout = dynamic
                    component pas_resistor R4 {
                        resistance = "1e3"
                    }
                    [
                        position = 7536, 8272
                        rotation = right
                        hide_name = True
                    ]

                    component pas_resistor R5 {
                        resistance = "1e3"
                    }
                    [
                        position = 7576, 8272
                        rotation = right
                        hide_name = True
                    ]

                    component pas_resistor R6 {
                        resistance = "1e3"
                    }
                    [
                        position = 7616, 8272
                        rotation = right
                        hide_name = True
                    ]

                    component "core/Voltage Measurement" Vb {
                        execution_rate = "Ts"
                        sig_output = "True"
                    }
                    [
                        position = 7728, 8280
                        rotation = right
                        size = 64, 32
                    ]

                    component "core/Voltage Measurement" Va {
                        execution_rate = "Ts"
                        sig_output = "True"
                    }
                    [
                        position = 7680, 8208
                        rotation = right
                        size = 64, 32
                    ]

                    component "core/Voltage Measurement" Vc {
                        execution_rate = "Ts"
                        sig_output = "True"
                    }
                    [
                        position = 7776, 8352
                        rotation = right
                        size = 64, 32
                    ]

                    port a {
                        label = "a"
                        position = right:1
                        kind = pe
                    }
                    [
                        position = 7992, 7952
                        rotation = down
                    ]

                    port b {
                        label = "b"
                        position = right:2
                        kind = pe
                    }
                    [
                        position = 7992, 8048
                        rotation = down
                    ]

                    port c {
                        label = "c"
                        position = right:3
                        kind = pe
                    }
                    [
                        position = 7992, 8144
                        rotation = down
                    ]

                    port A {
                        label = "A"
                        position = left:1
                        kind = pe
                    }
                    [
                        position = 7488, 7952
                    ]

                    port B {
                        label = "B"
                        position = left:2
                        kind = pe
                    }
                    [
                        position = 7488, 8048
                    ]

                    port C {
                        label = "C"
                        position = left:3
                        kind = pe
                    }
                    [
                        position = 7488, 8144
                    ]

                    port VA {
                        position = bottom:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 7864, 8208
                        rotation = down
                        scale = -1, 1
                    ]

                    port VB {
                        position = bottom:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 7864, 8280
                        rotation = down
                        scale = -1, 1
                    ]

                    port VC {
                        position = bottom:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 7864, 8352
                        rotation = down
                        scale = -1, 1
                    ]

                    junction Junction183 pe
                    [
                        position = 7728, 8400
                    ]

                    junction Junction189 pe
                    [
                        position = 7576, 8400
                    ]

                    junction Junction190 pe
                    [
                        position = 7616, 8400
                    ]

                    junction Junction191 pe
                    [
                        position = 7680, 8400
                    ]

                    junction Junction198 pe
                    [
                        position = 7536, 7952
                    ]

                    junction Junction199 pe
                    [
                        position = 7576, 8048
                    ]

                    junction Junction200 pe
                    [
                        position = 7616, 8144
                    ]

                    junction Junction201 pe
                    [
                        position = 7680, 7952
                    ]

                    junction Junction202 pe
                    [
                        position = 7728, 8048
                    ]

                    junction Junction203 pe
                    [
                        position = 7776, 8144
                    ]

                    connect A Junction198 as Connection2681
                    connect B Junction199 as Connection2684
                    connect C Junction200 as Connection2687
                    connect Junction183 Junction191 as Connection2652
                    connect Junction183 Vc.n_node as Connection2649
                    connect Junction189 R4.n_node as Connection2647
                    connect Junction190 Junction189 as Connection2651
                    connect Junction190 Junction191 as Connection2654
                    connect Junction191 Va.n_node as Connection2653
                    connect Junction200 Junction203 as Connection2703
                    [
                        position = 0, 0
                    ]
                    connect Junction200 R6.p_node as Connection2686
                    connect Junction201 Junction198 as Connection2698
                    [
                        position = 0, 0
                    ]
                    connect Junction202 Junction199 as Connection2701
                    [
                        position = 0, 0
                    ]
                    connect Junction203 Vc.p_node as Connection2704
                    [
                        position = 0, 0
                    ]
                    connect R4.p_node Junction198 as Connection2679
                    connect R5.n_node Junction189 as Connection2632
                    connect R5.p_node Junction199 as Connection2682
                    connect R6.n_node Junction190 as Connection2650
                    connect VA Va.out as Connection2673
                    connect VB Vb.out as Connection2674
                    connect VC Vc.out as Connection2675
                    connect Va.p_node Junction201 as Connection2697
                    connect Vb.n_node Junction183 as Connection2606
                    connect Vb.p_node Junction202 as Connection2700
                    connect a Junction201 as Connection2699
                    connect b Junction202 as Connection2702
                    connect c Junction203 as Connection2705
                }
                [
                    position = 8960, 7768
                    rotation = down
                    scale = -1, -1
                    size = 96, 240
                ]

                component "core/Current Measurement" Idc_link {
                    addr = "7"
                    execution_rate = "Ts"
                }
                [
                    position = 7800, 7672
                    scale = 1, -1
                    size = 64, 32
                ]

                component Subsystem Output {
                    layout = dynamic
                    component gen_bus_join "Bus Join1" {
                        inputs = "14"
                    }
                    [
                        position = 8192, 8192
                        rotation = left
                        hide_name = True
                    ]

                    port Out1 {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8192, 8120
                        rotation = left
                    ]

                    port Connected {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7872, 8312
                    ]

                    port Inv_On {
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7936, 8336
                    ]

                    port Va {
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7872, 8376
                    ]

                    port Vb {
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7936, 8400
                    ]

                    port Vc {
                        position = left:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7872, 8440
                    ]

                    port Ia {
                        position = left:7
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7872, 8496
                    ]

                    port Ib {
                        position = left:8
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7936, 8520
                    ]

                    port Ic {
                        position = left:9
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7872, 8560
                    ]

                    tag From29 {
                        value = "Vt"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7944, 8472
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From32 {
                        value = "pf"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7944, 8680
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From34 {
                        value = "f"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7944, 8584
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From33 {
                        value = "S"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7944, 8656
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From31 {
                        value = "Q"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7944, 8632
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From30 {
                        value = "P"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7944, 8608
                        hide_name = True
                        size = 60, 20
                    ]

                    connect "Bus Join1.in5" From29 as Connection25
                    connect "Bus Join1.in10" From30 as Connection16
                    connect "Bus Join1.in11" From31 as Connection17
                    connect "Bus Join1.in13" From32 as Connection19
                    connect "Bus Join1.in7" Ib as Connection27
                    connect "Bus Join1.in1" Inv_On as Connection21
                    connect "Bus Join1.out" Out1 as Connection13
                    connect "Bus Join1.in3" Vb as Connection23
                    connect Connected "Bus Join1.in" as Connection20
                    connect From33 "Bus Join1.in12" as Connection18
                    connect From34 "Bus Join1.in9" as Connection15
                    connect Ia "Bus Join1.in6" as Connection26
                    connect Ic "Bus Join1.in8" as Connection28
                    connect Va "Bus Join1.in2" as Connection22
                    connect Vc "Bus Join1.in4" as Connection24
                }
                [
                    position = 9080, 7192
                    rotation = left
                    size = 72, 144
                ]

                component "core/Current Measurement" Ib {
                    addr = "15"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 8440, 7768
                    size = 64, 32
                ]

                component "core/Voltage Measurement" Vbc {
                }
                [
                    position = 8152, 7816
                    rotation = right
                    size = 64, 32
                ]

                component "core/Triple Pole Single Throw Contactor" S1 {
                    ctrl_src = "Model"
                }
                [
                    position = 9272, 7768
                    size = 64, 256
                ]

                component Subsystem "Grid meas" {
                    layout = dynamic
                    component pas_resistor R4 {
                        resistance = "1e6"
                    }
                    [
                        position = 7536, 8272
                        rotation = right
                        hide_name = True
                    ]

                    component pas_resistor R6 {
                        resistance = "1e6"
                    }
                    [
                        position = 7616, 8272
                        rotation = right
                        hide_name = True
                    ]

                    component pas_resistor R5 {
                        resistance = "1e6"
                    }
                    [
                        position = 7576, 8272
                        rotation = right
                        hide_name = True
                    ]

                    component "core/Voltage Measurement" Va {
                        execution_rate = "Ts"
                        sig_output = "True"
                    }
                    [
                        position = 7680, 8208
                        rotation = right
                        size = 64, 32
                    ]

                    component "core/Voltage Measurement" Vb {
                        execution_rate = "Ts"
                        sig_output = "True"
                    }
                    [
                        position = 7728, 8280
                        rotation = right
                        size = 64, 32
                    ]

                    component "core/Voltage Measurement" Vc {
                        execution_rate = "Ts"
                        sig_output = "True"
                    }
                    [
                        position = 7776, 8352
                        rotation = right
                        size = 64, 32
                    ]

                    port a {
                        label = "a"
                        position = right:1
                        kind = pe
                    }
                    [
                        position = 7864, 7952
                        rotation = down
                    ]

                    port b {
                        label = "b"
                        position = right:2
                        kind = pe
                    }
                    [
                        position = 7864, 8048
                        rotation = down
                    ]

                    port c {
                        label = "c"
                        position = right:3
                        kind = pe
                    }
                    [
                        position = 7864, 8144
                        rotation = down
                    ]

                    port A {
                        label = "A"
                        position = left:1
                        kind = pe
                    }
                    [
                        position = 7488, 7952
                    ]

                    port B {
                        label = "B"
                        position = left:2
                        kind = pe
                    }
                    [
                        position = 7488, 8048
                    ]

                    port C {
                        label = "C"
                        position = left:3
                        kind = pe
                    }
                    [
                        position = 7488, 8144
                    ]

                    port VA {
                        position = bottom:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 7864, 8208
                        rotation = down
                        scale = -1, 1
                    ]

                    port VB {
                        position = bottom:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 7864, 8280
                        rotation = down
                        scale = -1, 1
                    ]

                    port VC {
                        position = bottom:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 7864, 8352
                        rotation = down
                        scale = -1, 1
                    ]

                    junction Junction183 pe
                    [
                        position = 7728, 8400
                    ]

                    junction Junction189 pe
                    [
                        position = 7576, 8400
                    ]

                    junction Junction190 pe
                    [
                        position = 7616, 8400
                    ]

                    junction Junction191 pe
                    [
                        position = 7680, 8400
                    ]

                    junction Junction198 pe
                    [
                        position = 7536, 7952
                    ]

                    junction Junction199 pe
                    [
                        position = 7576, 8048
                    ]

                    junction Junction200 pe
                    [
                        position = 7616, 8144
                    ]

                    junction Junction201 pe
                    [
                        position = 7680, 7952
                    ]

                    junction Junction202 pe
                    [
                        position = 7728, 8048
                    ]

                    junction Junction203 pe
                    [
                        position = 7776, 8144
                    ]

                    connect A Junction198 as Connection2681
                    connect B Junction199 as Connection2684
                    connect C Junction200 as Connection2687
                    connect Junction183 Junction191 as Connection2652
                    connect Junction183 Vc.n_node as Connection2649
                    connect Junction189 R4.n_node as Connection2647
                    connect Junction190 Junction189 as Connection2651
                    connect Junction190 Junction191 as Connection2654
                    connect Junction191 Va.n_node as Connection2653
                    connect Junction199 Junction202 as Connection2700
                    connect Junction200 R6.p_node as Connection2686
                    connect Junction201 Junction198 as Connection2698
                    connect Junction202 Vb.p_node as Connection2701
                    connect Junction203 Junction200 as Connection2704
                    connect R4.p_node Junction198 as Connection2679
                    connect R5.n_node Junction189 as Connection2632
                    connect R5.p_node Junction199 as Connection2682
                    connect R6.n_node Junction190 as Connection2650
                    connect VA Va.out as Connection2673
                    connect VB Vb.out as Connection2674
                    connect VC Vc.out as Connection2675
                    connect Va.p_node Junction201 as Connection2697
                    connect Vb.n_node Junction183 as Connection2606
                    connect Vc.p_node Junction203 as Connection2703
                    connect a Junction201 as Connection2699
                    connect b Junction202 as Connection2702
                    connect c Junction203 as Connection2705
                }
                [
                    position = 9408, 7768
                    rotation = down
                    scale = -1, -1
                    size = 96, 240
                ]

                component "core/Voltage Measurement" Vab {
                }
                [
                    position = 8152, 7720
                    rotation = right
                    size = 64, 32
                ]

                component "core/Three Phase Inverter" "Three Phase Inverter1" {
                    carrier_freq = "fsw"
                    ctrl_src = "Internal modulator"
                    d_time = "0.5e-6"
                }
                [
                    position = 7968, 7768
                    size = 127, 256
                ]

                component Subsystem Control_Inputs {
                    layout = dynamic
                    component gen_bus_split "Bus Split2" {
                        outputs = "6"
                    }
                    [
                        position = 8144, 8120
                        rotation = right
                        hide_name = True
                    ]

                    component gen_round Round1 {
                        round_fn = "round"
                    }
                    [
                        position = 8304, 8200
                        hide_name = True
                    ]

                    component gen_round Round2 {
                        round_fn = "round"
                    }
                    [
                        position = 8344, 8176
                        hide_name = True
                    ]

                    component gen_limiter Limit1 {
                        lower_limit = "0"
                        upper_limit = "1"
                    }
                    [
                        position = 8264, 8176
                        hide_name = True
                    ]

                    component gen_limiter Limit2 {
                        lower_limit = "0"
                        upper_limit = "1"
                    }
                    [
                        position = 8216, 8200
                        hide_name = True
                    ]

                    port Inputs {
                        position = top:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8144, 8048
                        rotation = right
                    ]

                    tag Goto90 {
                        value = "f_ref"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8424, 8224
                        hide_name = True
                        size = 58, 20
                    ]

                    tag Goto21 {
                        value = "Pref"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8424, 8272
                        hide_name = True
                        size = 58, 20
                    ]

                    tag Goto91 {
                        value = "On"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8424, 8176
                        hide_name = True
                        size = 58, 20
                    ]

                    tag Goto89 {
                        value = "Vref"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8424, 8248
                        hide_name = True
                        size = 58, 20
                    ]

                    tag Goto22 {
                        value = "Qref"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8424, 8296
                        hide_name = True
                        size = 58, 20
                    ]

                    tag Goto92 {
                        value = "mode"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8424, 8200
                        hide_name = True
                        size = 58, 20
                    ]

                    connect "Bus Split2.out5" Goto22 as Connection7
                    connect "Bus Split2.out3" Goto89 as Connection5
                    connect "Bus Split2.out2" Goto90 as Connection4
                    connect "Bus Split2.out" Limit1.in as Connection12
                    connect Goto21 "Bus Split2.out4" as Connection6
                    connect Inputs "Bus Split2.in" as Connection1
                    connect Limit1.out Round2.in as Connection13
                    connect Limit2.in "Bus Split2.out1" as Connection15
                    connect Round1.out Goto92 as Connection8
                    connect Round1.in Limit2.out as Connection14
                    connect Round2.out Goto91 as Connection11
                }
                [
                    position = 7768, 7200
                    size = 48, 48
                ]

                component "core/Current Measurement" Ia_out {
                    addr = "14"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 9112, 7672
                    size = 64, 32
                ]

                component "core/Current Measurement" Ib_out {
                    addr = "15"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 9112, 7768
                    size = 64, 32
                ]

                component "core/Current Measurement" Ic_out {
                    addr = "16"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 9112, 7864
                    size = 64, 32
                ]

                component Subsystem Control {
                    layout = dynamic
                    component gen_probe Iq {
                        addr = "8965"
                    }
                    [
                        position = 7712, 8944
                        rotation = right
                        scale = -1, -1
                    ]

                    component gen_probe Id {
                        addr = "8968"
                    }
                    [
                        position = 7712, 8784
                        rotation = right
                        scale = -1, -1
                    ]

                    component gen_probe Id_out {
                        addr = "8968"
                    }
                    [
                        position = 7720, 9048
                        rotation = right
                        scale = -1, -1
                    ]

                    component gen_probe Q {
                    }
                    [
                        position = 8848, 8840
                        rotation = down
                        scale = -1, 1
                    ]

                    component gen_probe S {
                    }
                    [
                        position = 8848, 8904
                        rotation = down
                        scale = -1, 1
                    ]

                    component gen_probe P {
                    }
                    [
                        position = 8848, 8776
                        rotation = down
                        scale = -1, 1
                    ]

                    component gen_gain Gain1 {
                        gain = "1.0/Vn_dc"
                    }
                    [
                        position = 8256, 8184
                        rotation = right
                        hide_name = True
                    ]

                    component gen_probe Vq {
                        addr = "8966"
                        signal_type = "voltage"
                    }
                    [
                        position = 7752, 8520
                        rotation = left
                    ]

                    component gen_probe Vd {
                        addr = "8966"
                        signal_type = "voltage"
                    }
                    [
                        position = 7688, 8520
                        rotation = left
                    ]

                    component gen_probe Vt {
                    }
                    [
                        position = 7688, 8736
                        rotation = right
                    ]

                    component gen_probe pf {
                    }
                    [
                        position = 8848, 8968
                        rotation = down
                        scale = -1, 1
                    ]

                    component gen_probe f {
                        addr = "8966"
                        signal_type = "voltage"
                    }
                    [
                        position = 7752, 8736
                        rotation = right
                    ]

                    component gen_probe Iq_out {
                        addr = "8965"
                    }
                    [
                        position = 7720, 9200
                        rotation = right
                        scale = -1, -1
                    ]

                    component Subsystem ABCtoDQ1 {
                        layout = dynamic
                        component gen_gain Gain2 {
                            gain = "(Vn/Sn)*((3.0/2.0)**0.5)"
                        }
                        [
                            position = 8384, 8120
                            rotation = left
                            hide_name = True
                        ]

                        component gen_gain Gain1 {
                            gain = "(Vn/Sn)*((3.0/2.0)**0.5)"
                        }
                        [
                            position = 8336, 8120
                            rotation = left
                            hide_name = True
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8344, 8248
                            rotation = right
                            hide_name = True
                        ]

                        component "core/abc to dq" "abc to dq1" {
                        }
                        [
                            position = 8256, 8184
                            size = 48, 80
                        ]

                        port A {
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8200, 8056
                            rotation = right
                        ]

                        port B {
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8136, 8056
                            rotation = right
                        ]

                        port C {
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8136, 8288
                            rotation = left
                        ]

                        port wt {
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8192, 8288
                            rotation = left
                        ]

                        port d {
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8336, 8056
                            rotation = left
                        ]

                        port q {
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8056
                            rotation = left
                        ]

                        connect Gain1.out d as Connection2338
                        connect Gain2.out q as Connection2337
                        connect "abc to dq1.d_axis" Gain1.in as Connection2339
                        connect "abc to dq1.q_axis" Gain2.in as Connection2340
                        connect "abc to dq1.zero_axis" Termination1.in as Connection2341
                        connect "abc to dq1.va" A as Connection2342
                        connect B "abc to dq1.vb" as Connection2343
                        connect "abc to dq1.vc" C as Connection2344
                        connect "abc to dq1.wt" wt as Connection2345
                    }
                    [
                        position = 7624, 9160
                        size = 72, 192
                    ]

                    component Subsystem Synch {
                        layout = dynamic
                        component gen_digital_probe on_nominal {
                        }
                        [
                            position = 8248, 8784
                            rotation = left
                        ]

                        component gen_digital_probe phase_lock {
                        }
                        [
                            position = 8256, 8512
                            rotation = left
                        ]

                        component gen_probe dfsynch {
                        }
                        [
                            position = 8256, 8360
                            rotation = left
                        ]

                        component gen_digital_probe freq_lock {
                        }
                        [
                            position = 7952, 8344
                            rotation = left
                        ]

                        component Subsystem phase_match {
                            layout = dynamic
                            component gen_c_function confine_phase {
                                in_terminal_dimensions = "inherit"
                                in_terminal_dimensions_str = "dtheta inherit"
                                in_terminal_labels = "False;"
                                in_terminal_properties = "real dtheta;"
                                init_fnc = "/*Begin code section*/
dtheta = 0;
dtheta_confined = 0;
/*End code section*/"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions = "inherit"
                                out_terminal_dimensions_str = "dtheta_confined inherit"
                                out_terminal_labels = "False;"
                                out_terminal_properties = "real dtheta_confined;"
                                output_fnc = "/*Begin code section*/
if (dtheta > 3.14159265359) {//confine theta to +/- 2*pi;
    dtheta_confined = dtheta - 6.28318530718;
}
else{
    if (dtheta < -3.14159265359){
        dtheta_confined = dtheta + 6.28318530718;
    }
    else{
        dtheta_confined = dtheta;
    }
}
/*End code section*/"
                            }
                            [
                                position = 7656, 8224
                                size = 48, 48
                            ]

                            component gen_gain Gain12 {
                                gain = "1.0/fn"
                            }
                            [
                                position = 8304, 8216
                                hide_name = True
                            ]

                            component gen_product Product1 {
                            }
                            [
                                position = 8224, 8216
                                hide_name = True
                            ]

                            component gen_gain Phase_diff {
                                gain = "Phase_diff*np.pi/180.0"
                            }
                            [
                                position = 7904, 8360
                                hide_name = True
                            ]

                            component tm_delay "Unit Delay4" {
                            }
                            [
                                position = 8488, 8392
                                hide_name = True
                            ]

                            component gen_logic_op "Logical operator1" {
                                operator = "NOT"
                            }
                            [
                                position = 8224, 8400
                                hide_name = True
                            ]

                            component gen_sum Sum1 {
                                signs = "++"
                            }
                            [
                                position = 8432, 8208
                                hide_name = True
                            ]

                            component tm_delay "Unit Delay3" {
                            }
                            [
                                position = 8128, 8424
                                hide_name = True
                                scale = -1, 1
                            ]

                            component tm_delay "Unit Delay5" {
                            }
                            [
                                position = 8792, 8224
                                hide_name = True
                            ]

                            component gen_gain Phase_diff1 {
                                gain = "0.01*Phase_diff*np.pi/180.0"
                            }
                            [
                                position = 8048, 8424
                                hide_name = True
                                scale = -1, 1
                            ]

                            component sys_signal_switch "Signal switch2" {
                                criterion = "ctrl > threshold"
                                threshold = "0.5"
                            }
                            [
                                position = 8608, 8224
                                hide_name = True
                            ]

                            component src_constant Constant4 {
                                execution_rate = "Ts"
                                value = "0"
                            }
                            [
                                position = 8536, 8240
                                hide_name = True
                            ]

                            component gen_probe phase_diff {
                            }
                            [
                                position = 7904, 8272
                                rotation = right
                            ]

                            component src_constant Constant2 {
                                execution_rate = "Ts"
                                value = "1.0"
                            }
                            [
                                position = 7840, 8360
                                hide_name = True
                            ]

                            component gen_rate_limiter "3 hz per sec" {
                                falling_limit = "-1e5/fn"
                                rising_limit = "1e5/fn"
                            }
                            [
                                position = 8712, 8224
                            ]

                            component gen_sum Sum3 {
                                signs = "+-"
                            }
                            [
                                position = 7536, 8224
                                hide_name = True
                            ]

                            component gen_comparator Comparator2 {
                            }
                            [
                                position = 8128, 8336
                                hide_name = True
                                scale = 1, -1
                            ]

                            component gen_abs Abs2 {
                            }
                            [
                                position = 7976, 8288
                                rotation = right
                                hide_name = True
                            ]

                            component gen_sum Sum2 {
                            }
                            [
                                position = 7984, 8368
                                hide_name = True
                            ]

                            component gen_c_function c_function {
                                in_terminal_dimensions = "inherit"
                                in_terminal_dimensions_str = "counter inherit"
                                in_terminal_labels = "False;"
                                in_terminal_properties = "real counter;"
                                no_feed_inputs = "[\'\']"
                                no_feed_outputs = "[\'\']"
                                out_terminal_dimensions = "inherit"
                                out_terminal_dimensions_str = "out inherit"
                                out_terminal_labels = "False;"
                                output_fnc = "/*Begin code section*/
if(counter>=0.1/execution_rate){
    out = 1;
}
else{
    out = 0;
}
/*End code section*/"
                            }
                            [
                                position = 8400, 8392
                                size = 48, 48
                            ]

                            component "core/Counter" Counter1 {
                                execution_rate = "Ts"
                            }
                            [
                                position = 8312, 8392
                                hide_name = True
                                size = 48, 48
                            ]

                            component Subsystem PI {
                                layout = dynamic
                                component gen_sum Sum5 {
                                }
                                [
                                    position = 8320, 8224
                                    hide_name = True
                                ]

                                component gen_gain Kb {
                                    gain = "1.0"
                                }
                                [
                                    position = 8216, 8312
                                    scale = -1, 1
                                ]

                                component gen_integrator Integrator1 {
                                    init_value = "out0"
                                    limit_lower = "-1"
                                    limit_upper = "1"
                                    show_reset = "either"
                                }
                                [
                                    position = 8216, 8232
                                ]

                                component gen_sum Sum6 {
                                    signs = "-+"
                                }
                                [
                                    position = 8320, 8312
                                    hide_name = True
                                    scale = -1, 1
                                ]

                                component gen_sum Sum7 {
                                }
                                [
                                    position = 8088, 8224
                                    hide_name = True
                                ]

                                component gen_limiter Limit1 {
                                    lower_limit = "lowLim"
                                    upper_limit = "upLim"
                                }
                                [
                                    position = 8408, 8224
                                    hide_name = True
                                ]

                                component gen_gain Kp {
                                    gain = "Kp"
                                }
                                [
                                    position = 8144, 8128
                                ]

                                component gen_gain Ki {
                                    gain = "Ki"
                                }
                                [
                                    position = 7992, 8216
                                ]

                                port In {
                                    label = "In"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7888, 8168
                                ]

                                port Out {
                                    label = "Out"
                                    position = right:1
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8472, 8224
                                ]

                                port reset {
                                    position = top:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8136, 8256
                                ]

                                junction Junction2 sp
                                [
                                    position = 8368, 8224
                                ]

                                junction Junction3 sp
                                [
                                    position = 8440, 8224
                                ]

                                junction Junction4 sp
                                [
                                    position = 7920, 8168
                                ]

                                connect Junction2 Limit1.in as Connection45
                                connect Junction3 Out as Connection48
                                connect Junction4 In as Connection67
                                connect Kb.in Sum6.out as Connection50
                                connect Ki.in Junction4 as Connection66
                                connect Kp.in Junction4 as Connection68
                                connect Kp.out Sum5.in as Connection63
                                connect Limit1.out Junction3 as Connection47
                                connect Sum5.in1 Integrator1.out as Connection5
                                connect Sum5.out Junction2 as Connection44
                                connect Sum6.in Junction2 as Connection46
                                connect Sum6.in1 Junction3 as Connection49
                                connect Sum7.out Integrator1.in as Connection52
                                connect Sum7.in1 Kb.out as Connection53
                                connect Sum7.in Ki.out as Connection64
                                connect reset Integrator1.reset as Connection62

                                Ki = "Phase_Ki"
                                Kp = "Phase_Kp"
                                lowLim = "-1e5"
                                out0 = "0.0"
                                upLim = "1e5"

                                mask {
                                    description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">PI controller</span></p></body></html>"

                                    Kp {
                                        label = "Kp"
                                        widget = edit
                                        type = generic
                                        default_value = "1.0"
                                        group = "General"
                                    }

                                    Ki {
                                        label = "Ki"
                                        widget = edit
                                        type = generic
                                        default_value = "5.0"
                                        group = "General"
                                    }

                                    upLim {
                                        label = "Upper limit"
                                        widget = edit
                                        type = generic
                                        default_value = "100.0"
                                        group = "General"
                                    }

                                    lowLim {
                                        label = "Lower limit"
                                        widget = edit
                                        type = generic
                                        default_value = "0.0"
                                        group = "General"
                                    }

                                    out0 {
                                        label = "Integrator initial output"
                                        widget = edit
                                        type = generic
                                        default_value = "fnom"
                                        group = "General"
                                    }

                                    CODE open
                                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                                    
                                        dialog = RegularComponentPropertiesDialog(
                                            component=component,
                                            property_container=component.masks[-1],
                                            current_diagram=current_diagram
                                        )
                                        dialog.exec_()
                                    
                                    ENDCODE
                                }
                            }
                            [
                                position = 8104, 8224
                                size = 64, 48
                            ]

                            component Subsystem "low pass" {
                                layout = dynamic
                                component tm_delay "Unit Delay1" {
                                }
                                [
                                    position = 8048, 8120
                                    rotation = right
                                    hide_name = True
                                ]

                                component gen_gain a2 {
                                    gain = "a[1]"
                                }
                                [
                                    position = 8280, 8336
                                    scale = -1, 1
                                ]

                                component gen_gain b2 {
                                    gain = "b[2]"
                                }
                                [
                                    position = 8112, 8336
                                ]

                                component gen_sum Sum3 {
                                    signs = "+-"
                                }
                                [
                                    position = 8192, 8296
                                    rotation = left
                                    hide_name = True
                                ]

                                component tm_delay "Unit Delay3" {
                                }
                                [
                                    position = 8336, 8128
                                    rotation = right
                                    hide_name = True
                                ]

                                component gen_gain b1 {
                                    gain = "b[1]"
                                }
                                [
                                    position = 8120, 8184
                                ]

                                component gen_gain a1 {
                                    gain = "a[0]"
                                }
                                [
                                    position = 8280, 8184
                                    scale = -1, 1
                                ]

                                component gen_gain b0 {
                                    gain = "b[0]"
                                }
                                [
                                    position = 8120, 8056
                                ]

                                component gen_sum Sum2 {
                                    signs = "++-"
                                }
                                [
                                    position = 8192, 8152
                                    rotation = left
                                    hide_name = True
                                ]

                                component gen_sum Sum1 {
                                }
                                [
                                    position = 8232, 8064
                                    hide_name = True
                                ]

                                component tm_delay "Unit Delay4" {
                                }
                                [
                                    position = 8336, 8264
                                    rotation = right
                                    hide_name = True
                                ]

                                component tm_delay "Unit Delay2" {
                                }
                                [
                                    position = 8048, 8264
                                    rotation = right
                                    hide_name = True
                                ]

                                port In {
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8000, 8080
                                ]

                                port Out {
                                    position = right:1
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8384, 8064
                                ]

                                junction Junction1 sp
                                [
                                    position = 8048, 8080
                                ]

                                junction Junction2 sp
                                [
                                    position = 8336, 8176
                                ]

                                junction Junction3 sp
                                [
                                    position = 8048, 8184
                                ]

                                junction Junction4 sp
                                [
                                    position = 8336, 8064
                                ]

                                connect Junction1 In as Connection643
                                connect Junction1 "Unit Delay1.in" as Connection615
                                connect Junction2 "Unit Delay4.in" as Connection622
                                connect Junction3 "Unit Delay2.in" as Connection625
                                connect Junction4 Out as Connection642
                                connect Junction4 "Unit Delay3.in" as Connection630
                                connect Sum1.out Junction4 as Connection629
                                connect Sum1.in b0.out as Connection632
                                connect Sum2.out Sum1.in1 as Connection617
                                connect Sum2.in2 a1.out as Connection640
                                connect Sum2.in b1.out as Connection634
                                connect Sum3.out Sum2.in1 as Connection620
                                connect "Unit Delay1.out" Junction3 as Connection624
                                connect "Unit Delay3.out" Junction2 as Connection621
                                connect a1.in Junction2 as Connection641
                                connect a2.out Sum3.in1 as Connection638
                                connect a2.in "Unit Delay4.out" as Connection639
                                connect b0.in Junction1 as Connection633
                                connect b1.in Junction3 as Connection635
                                connect b2.out Sum3.in as Connection636
                                connect b2.in "Unit Delay2.out" as Connection637

                                a = "alowpass"
                                b = "blowpass"

                                mask {
                                    description = "Digital biquad filter
irect form 1"

                                    b {
                                        label = "b"
                                        widget = edit
                                        type = generic
                                        default_value = "bnotch"
                                    }

                                    a {
                                        label = "a"
                                        widget = edit
                                        type = generic
                                        default_value = "anotch"
                                    }

                                    CODE open
                                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                                    
                                        dialog = RegularComponentPropertiesDialog(
                                            component=component,
                                            property_container=component.masks[-1],
                                            current_diagram=current_diagram
                                        )
                                        dialog.exec_()
                                    
                                    ENDCODE
                                }
                            }
                            [
                                position = 7768, 8224
                                size = 48, 48
                            ]

                            port freq_lock {
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8008, 8176
                            ]

                            port f_offset {
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8344, 8168
                            ]

                            port phase_util {
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7400, 8216
                            ]

                            port phase_inv {
                                position = left:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7424, 8272
                            ]

                            port sync {
                                label = "sync"
                                position = top:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8608, 8136
                                rotation = left
                                scale = 1, -1
                            ]

                            port df_synch {
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8864, 8224
                            ]

                            port phase_lock {
                                label = "Phase match"
                                position = right:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8552, 8392
                            ]

                            junction Junction43 sp
                            [
                                position = 8176, 8336
                            ]

                            junction Junction51 sp
                            [
                                position = 8160, 8336
                            ]

                            junction Junction54 sp
                            [
                                position = 7976, 8224
                            ]

                            junction Junction55 sp
                            [
                                position = 8104, 8176
                            ]

                            junction Junction61 sp
                            [
                                position = 7904, 8224
                            ]

                            connect "3 hz per sec.out" "Unit Delay5.in" as Connection1876
                            connect Abs2.in Junction54 as Connection571
                            connect Comparator2.in2 Abs2.out as Connection12
                            connect Comparator2.out Junction51 as Connection539
                            connect Constant2.out Phase_diff.in as Connection15
                            connect Gain12.in Product1.out as Connection583
                            connect Junction43 Counter1.en as Connection454
                            connect Junction51 Junction43 as Connection540
                            connect Junction54 Junction61 as Connection841
                            connect Junction61 phase_diff.in as Connection842
                            connect "Logical operator1.out" Counter1.reset as Connection88
                            connect "Logical operator1.in" Junction43 as Connection453
                            connect PI.In Junction54 as Connection573
                            connect PI.reset Junction55 as Connection576
                            connect Phase_diff.out Sum2.in as Connection542
                            connect Phase_diff1.out Sum2.in1 as Connection545
                            connect Product1.in Junction55 as Connection574
                            connect Product1.in1 PI.Out as Connection577
                            connect "Signal switch2.out" "3 hz per sec.in" as Connection2083
                            connect "Signal switch2.in1" Constant4.out as Connection2082
                            connect "Signal switch2.in" Sum1.out as Connection2094
                            [
                                position = 0, 0
                            ]
                            connect Sum1.in1 Gain12.out as Connection2093
                            [
                                position = 0, 0
                            ]
                            connect Sum2.out Comparator2.in1 as Connection543
                            connect Sum3.in1 phase_inv as Connection840
                            connect "Unit Delay3.in" Junction51 as Connection541
                            connect "Unit Delay3.out" Phase_diff1.in as Connection544
                            connect "Unit Delay4.out" phase_lock as Connection845
                            connect "Unit Delay5.out" df_synch as Connection2085
                            connect c_function.counter Counter1.out as Connection2095
                            connect c_function.out "Unit Delay4.in" as Connection2096
                            connect confine_phase.dtheta Sum3.out as Connection2092
                            [
                                position = 0, 0
                            ]
                            connect confine_phase.dtheta_confined "low pass.In" as Connection2091
                            [
                                position = 0, 0
                            ]
                            connect f_offset Sum1.in as Connection537
                            connect freq_lock Junction55 as Connection2090
                            connect "low pass.Out" Junction61 as Connection843
                            connect phase_util Sum3.in as Connection839
                            connect sync "Signal switch2.in2" as Connection2089
                        }
                        [
                            position = 8128, 8488
                            size = 176, 184
                        ]

                        component Subsystem PLL_Util {
                            layout = dynamic
                            component gen_probe wt_util {
                            }
                            [
                                position = 8272, 8288
                                rotation = left
                                scale = -1, -1
                            ]

                            component gen_probe Vt_util {
                            }
                            [
                                position = 8304, 8384
                                rotation = right
                            ]

                            component gen_terminator Termination3 {
                            }
                            [
                                position = 8200, 8056
                                rotation = left
                                hide_name = True
                            ]

                            component gen_terminator Termination2 {
                            }
                            [
                                position = 8248, 8056
                                rotation = left
                                hide_name = True
                            ]

                            component gen_gain Gain5 {
                                gain = "1.0/fn"
                            }
                            [
                                position = 8312, 8176
                                hide_name = True
                            ]

                            component gen_gain Gain4 {
                                gain = "1.0/(Vn*((2.0/3.0)**0.5))"
                            }
                            [
                                position = 8224, 8304
                                rotation = right
                                hide_name = True
                            ]

                            component gen_probe f_util {
                            }
                            [
                                position = 8352, 8128
                                rotation = left
                            ]

                            component "core/Three phase PLL" PLL {
                                enable_pk = "True"
                                enable_sin = "False"
                                enable_zero = "False"
                                initial_pid_output = "2*np.pi*fn"
                                low_lim = "0"
                                rate_high = "5*fn"
                                rate_low = "-5*fn"
                                up_lim = "1.4*2*np.pi*fn"
                            }
                            [
                                position = 8144, 8176
                                size = 64, 128
                            ]

                            port A {
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8040, 8088
                            ]

                            port B {
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8040, 8176
                            ]

                            port C {
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8040, 8264
                            ]

                            port f {
                                position = right:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8400, 8176
                            ]

                            port wt {
                                position = right:3
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8400, 8248
                            ]

                            port t {
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8400, 8336
                            ]

                            junction Junction3 sp
                            [
                                position = 8352, 8176
                            ]

                            junction Junction4 sp
                            [
                                position = 8304, 8336
                            ]

                            junction Junction5 sp
                            [
                                position = 8272, 8248
                            ]

                            connect Gain4.out Junction4 as Connection793
                            connect Junction3 Gain5.out as Connection791
                            connect Junction4 t as Connection794
                            connect Vt_util.in Junction4 as Connection795
                            connect f Junction3 as Connection790
                            connect f_util.in Junction3 as Connection792
                            connect PLL.vb B as Connection798
                            connect PLL.va A as Connection799
                            connect PLL.vc C as Connection800
                            connect Termination3.in PLL.d_axis as Connection801
                            connect Termination2.in PLL.q_axis as Connection802
                            connect Gain5.in PLL.freq as Connection803
                            connect wt Junction5 as Connection804
                            connect Junction5 wt_util.in as Connection805
                            connect PLL.theta Junction5 as Connection806
                            connect Gain4.in PLL.peak as Connection807
                        }
                        [
                            position = 7360, 8368
                            size = 80, 152
                        ]

                        component Subsystem Check_nominal_conditions {
                            layout = dynamic
                            component src_constant "+-10%" {
                                execution_rate = "Ts"
                                value = "0.1"
                            }
                            [
                                position = 8112, 8320
                                hide_name = True
                            ]

                            component src_constant "+-1,5 hz" {
                                execution_rate = "Ts"
                                value = "10.0/fn"
                            }
                            [
                                position = 8120, 8144
                                hide_name = True
                            ]

                            component gen_logic_op "Logical operator1" {
                                operator = "OR"
                            }
                            [
                                position = 8320, 8208
                                hide_name = True
                            ]

                            component gen_logic_op "Logical operator15" {
                                operator = "NOT"
                            }
                            [
                                position = 8424, 8208
                                hide_name = True
                            ]

                            component gen_digital_probe V_out_nom {
                            }
                            [
                                position = 8352, 8280
                            ]

                            component gen_sum Sum5 {
                                signs = "+-"
                            }
                            [
                                position = 8024, 8272
                                hide_name = True
                            ]

                            component gen_comparator Comparator2 {
                            }
                            [
                                position = 8200, 8280
                                hide_name = True
                            ]

                            component gen_digital_probe f_out_nom {
                            }
                            [
                                position = 8344, 8128
                            ]

                            component gen_sum Sum4 {
                                signs = "+-"
                            }
                            [
                                position = 7984, 8120
                                hide_name = True
                            ]

                            component gen_abs Abs3 {
                            }
                            [
                                position = 7888, 8112
                                hide_name = True
                            ]

                            component gen_abs Abs2 {
                            }
                            [
                                position = 8104, 8272
                                hide_name = True
                            ]

                            component gen_comparator Comparator1 {
                            }
                            [
                                position = 8192, 8128
                                hide_name = True
                            ]

                            component src_constant "nominal frequency" {
                                execution_rate = "Ts"
                                value = "1.0"
                            }
                            [
                                position = 7888, 8152
                                hide_name = True
                            ]

                            component gen_c_function wait_to_change {
                                global_variables = "real wait_time;real counter;"
                                in_terminal_dimensions = "inherit;inherit"
                                in_terminal_dimensions_str = "in inherit;reset inherit"
                                in_terminal_labels = "False;False;"
                                in_terminal_properties = "inherit in;inherit reset;"
                                init_fnc = "/*Begin code section*/
out = 0;
counter = 0;
wait_time = 0.01;
/*End code section*/"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions = "inherit"
                                out_terminal_dimensions_str = "out inherit"
                                out_terminal_labels = "False;"
                                output_fnc = "/*Begin code section*/
if(in <= 0){
    counter = 0;
    out = 0;
}
else{
    if(counter >= wait_time){
        out = 1;
    }
    else{
        out = 0;
        counter += execution_rate*in;
    }
}

if(reset == 1){
    counter = 0;
    out = 0;
}
/*End code section*/"
                            }
                            [
                                position = 8600, 8216
                                size = 48, 48
                            ]

                            component src_constant "nominal voltage" {
                                execution_rate = "Ts"
                                value = "1.0"
                            }
                            [
                                position = 7944, 8304
                                hide_name = True
                            ]

                            component gen_abs Abs1 {
                            }
                            [
                                position = 8064, 8120
                                hide_name = True
                            ]

                            component "core/Edge Detection" "Edge Detection1" {
                            }
                            [
                                position = 8520, 8240
                                hide_name = True
                                size = 32, 32
                            ]

                            port freq {
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7792, 8112
                            ]

                            port Vt {
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7792, 8264
                            ]

                            port on_nominal {
                                position = right:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8688, 8216
                            ]

                            junction Junction1507 sp
                            [
                                position = 8256, 8128
                            ]

                            junction Junction1508 sp
                            [
                                position = 8256, 8280
                            ]

                            junction Junction1509 sp
                            [
                                position = 8480, 8208
                            ]

                            connect "+-1,5 hz.out" Comparator1.in2 as Connection540
                            connect "+-10%.out" Comparator2.in2 as Connection544
                            connect Abs1.out Comparator1.in1 as Connection539
                            connect Abs1.in Sum4.out as Connection828
                            connect Abs2.out Comparator2.in1 as Connection543
                            connect Abs3.out Sum4.in as Connection574
                            connect Abs3.in freq as Connection827
                            connect Comparator1.out Junction1507 as Connection549
                            connect Comparator2.out Junction1508 as Connection552
                            connect "Edge Detection1.Out1" wait_to_change.reset as Connection831
                            connect Junction1507 "Logical operator1.in" as Connection550
                            connect Junction1508 "Logical operator1.in1" as Connection553
                            connect Junction1509 "Edge Detection1.In1" as Connection838
                            connect "Logical operator15.out" Junction1509 as Connection844
                            [
                                position = 0, 0
                            ]
                            connect "Logical operator15.in" "Logical operator1.out" as Connection836
                            connect Sum5.out Abs2.in as Connection541
                            connect Sum5.in Vt as Connection825
                            connect V_out_nom.in Junction1508 as Connection554
                            connect f_out_nom.in Junction1507 as Connection551
                            connect "nominal frequency.out" Sum4.in1 as Connection534
                            connect "nominal voltage.out" Sum5.in1 as Connection542
                            connect wait_to_change.in Junction1509 as Connection837
                            connect wait_to_change.out on_nominal as Connection840
                        }
                        [
                            position = 8136, 8832
                            size = 104, 64
                        ]

                        component Subsystem Check_grid {
                            layout = dynamic
                            component gen_comparator Comparator1 {
                            }
                            [
                                position = 8192, 8128
                                hide_name = True
                            ]

                            component gen_comparator Comparator2 {
                            }
                            [
                                position = 8200, 8280
                                hide_name = True
                            ]

                            component gen_sum Sum5 {
                                signs = "+-"
                            }
                            [
                                position = 8024, 8272
                                hide_name = True
                            ]

                            component gen_digital_probe "out of limit volts" {
                            }
                            [
                                position = 8352, 8280
                            ]

                            component gen_digital_probe "out of limit freq" {
                            }
                            [
                                position = 8344, 8128
                            ]

                            component gen_logic_op "Logical operator1" {
                                operator = "OR"
                            }
                            [
                                position = 8320, 8208
                                hide_name = True
                            ]

                            component src_constant "+-1,5 hz" {
                                execution_rate = "Ts"
                                value = "10.0/fn"
                            }
                            [
                                position = 8120, 8144
                                hide_name = True
                            ]

                            component src_constant "nominal frequency" {
                                execution_rate = "Ts"
                                value = "1.0"
                            }
                            [
                                position = 7888, 8152
                                hide_name = True
                            ]

                            component gen_abs Abs3 {
                            }
                            [
                                position = 7888, 8112
                                hide_name = True
                            ]

                            component gen_logic_op "Logical operator15" {
                                operator = "NOT"
                            }
                            [
                                position = 8440, 8208
                                hide_name = True
                            ]

                            component gen_abs Abs1 {
                            }
                            [
                                position = 8064, 8120
                                hide_name = True
                            ]

                            component src_constant "nominal voltage" {
                                execution_rate = "Ts"
                                value = "1.0"
                            }
                            [
                                position = 7944, 8304
                                hide_name = True
                            ]

                            component src_constant "+-10%" {
                                execution_rate = "Ts"
                                value = "0.1"
                            }
                            [
                                position = 8112, 8320
                                hide_name = True
                            ]

                            component gen_abs Abs2 {
                            }
                            [
                                position = 8104, 8272
                                hide_name = True
                            ]

                            component gen_sum Sum4 {
                                signs = "+-"
                            }
                            [
                                position = 7984, 8120
                                hide_name = True
                            ]

                            port freq {
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7792, 8112
                            ]

                            port Vt {
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7792, 8264
                            ]

                            port live_grid {
                                position = right:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8544, 8208
                            ]

                            junction Junction1507 sp
                            [
                                position = 8256, 8128
                            ]

                            junction Junction1508 sp
                            [
                                position = 8256, 8280
                            ]

                            connect "+-1,5 hz.out" Comparator1.in2 as Connection540
                            connect "+-10%.out" Comparator2.in2 as Connection544
                            connect Abs1.out Comparator1.in1 as Connection539
                            connect Abs2.out Comparator2.in1 as Connection543
                            connect Abs3.out Sum4.in as Connection574
                            connect Comparator1.out Junction1507 as Connection549
                            connect Comparator2.out Junction1508 as Connection552
                            connect Junction1507 "Logical operator1.in" as Connection550
                            connect Junction1508 "Logical operator1.in1" as Connection553
                            connect "Logical operator1.out" "Logical operator15.in" as Connection823
                            connect "Logical operator15.out" live_grid as Connection824
                            connect Sum4.out Abs1.in as Connection827
                            [
                                position = 0, 0
                            ]
                            connect Sum5.out Abs2.in as Connection541
                            connect Sum5.in Vt as Connection825
                            connect freq Abs3.in as Connection828
                            [
                                position = 0, 0
                            ]
                            connect "nominal frequency.out" Sum4.in1 as Connection534
                            connect "nominal voltage.out" Sum5.in1 as Connection542
                            connect "out of limit freq.in" Junction1507 as Connection551
                            connect "out of limit volts.in" Junction1508 as Connection554
                        }
                        [
                            position = 8136, 8688
                            size = 104, 64
                        ]

                        component Subsystem f_match {
                            layout = dynamic
                            component gen_sum Sum1 {
                                signs = "+-"
                            }
                            [
                                position = 7912, 8192
                                hide_name = True
                            ]

                            component gen_comparator Comparator1 {
                            }
                            [
                                position = 8280, 8256
                                hide_name = True
                                scale = 1, -1
                            ]

                            component src_constant Constant3 {
                                execution_rate = "Ts"
                                value = "0.0"
                            }
                            [
                                position = 8208, 8128
                                hide_name = True
                                scale = 1, -1
                            ]

                            component gen_delay Delay1 {
                                del_length = "10"
                            }
                            [
                                position = 8704, 8264
                                hide_name = True
                            ]

                            component sys_signal_switch "Signal switch2" {
                                criterion = "ctrl > threshold"
                                threshold = "0.0"
                            }
                            [
                                position = 8272, 8112
                                hide_name = True
                            ]

                            component gen_sum Sum2 {
                            }
                            [
                                position = 8192, 8312
                                hide_name = True
                            ]

                            component src_constant Constant1 {
                                execution_rate = "Ts"
                                value = "1.0"
                            }
                            [
                                position = 8056, 8304
                                hide_name = True
                            ]

                            component gen_gain Freq_diff1 {
                                gain = "0.02"
                            }
                            [
                                position = 8216, 8376
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_gain Freq_diff {
                                gain = "f_diff/100.0"
                            }
                            [
                                position = 8120, 8304
                                hide_name = True
                            ]

                            component gen_logic_op "Logical operator1" {
                                operator = "NOT"
                            }
                            [
                                position = 8376, 8312
                                hide_name = True
                            ]

                            component tm_delay "Unit Delay1" {
                            }
                            [
                                position = 8296, 8376
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_abs Abs3 {
                            }
                            [
                                position = 8160, 8192
                                hide_name = True
                            ]

                            component gen_probe f_diff {
                            }
                            [
                                position = 8064, 8256
                                rotation = right
                            ]

                            component gen_c_function c_function {
                                in_terminal_dimensions = "inherit"
                                in_terminal_dimensions_str = "counter inherit"
                                in_terminal_labels = "False;"
                                in_terminal_properties = "real counter;"
                                no_feed_inputs = "[\'\']"
                                no_feed_outputs = "[\'\']"
                                out_terminal_dimensions = "inherit"
                                out_terminal_dimensions_str = "out inherit"
                                out_terminal_labels = "False;"
                                output_fnc = "/*Begin code section*/
if(counter>=0.1/execution_rate){
    out = 1;
}
else{
    out = 0;
}
/*End code section*/"
                            }
                            [
                                position = 8552, 8264
                                size = 48, 48
                            ]

                            component Subsystem "low pass" {
                                layout = dynamic
                                component gen_gain b1 {
                                    gain = "b[1]"
                                }
                                [
                                    position = 8120, 8184
                                ]

                                component tm_delay "Unit Delay4" {
                                }
                                [
                                    position = 8336, 8264
                                    rotation = right
                                    hide_name = True
                                ]

                                component tm_delay "Unit Delay3" {
                                }
                                [
                                    position = 8336, 8128
                                    rotation = right
                                    hide_name = True
                                ]

                                component gen_gain a1 {
                                    gain = "a[0]"
                                }
                                [
                                    position = 8280, 8184
                                    scale = -1, 1
                                ]

                                component gen_sum Sum3 {
                                    signs = "+-"
                                }
                                [
                                    position = 8192, 8296
                                    rotation = left
                                    hide_name = True
                                ]

                                component gen_sum Sum1 {
                                }
                                [
                                    position = 8232, 8064
                                    hide_name = True
                                ]

                                component tm_delay "Unit Delay1" {
                                }
                                [
                                    position = 8048, 8120
                                    rotation = right
                                    hide_name = True
                                ]

                                component gen_gain b0 {
                                    gain = "b[0]"
                                }
                                [
                                    position = 8120, 8056
                                ]

                                component gen_gain a2 {
                                    gain = "a[1]"
                                }
                                [
                                    position = 8280, 8336
                                    scale = -1, 1
                                ]

                                component gen_sum Sum2 {
                                    signs = "++-"
                                }
                                [
                                    position = 8192, 8152
                                    rotation = left
                                    hide_name = True
                                ]

                                component tm_delay "Unit Delay2" {
                                }
                                [
                                    position = 8048, 8264
                                    rotation = right
                                    hide_name = True
                                ]

                                component gen_gain b2 {
                                    gain = "b[2]"
                                }
                                [
                                    position = 8112, 8336
                                ]

                                port In {
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8000, 8080
                                ]

                                port Out {
                                    position = right:1
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8384, 8064
                                ]

                                junction Junction1 sp
                                [
                                    position = 8048, 8080
                                ]

                                junction Junction2 sp
                                [
                                    position = 8336, 8176
                                ]

                                junction Junction3 sp
                                [
                                    position = 8048, 8184
                                ]

                                junction Junction4 sp
                                [
                                    position = 8336, 8064
                                ]

                                connect Junction1 In as Connection643
                                connect Junction1 "Unit Delay1.in" as Connection615
                                connect Junction2 "Unit Delay4.in" as Connection622
                                connect Junction3 "Unit Delay2.in" as Connection625
                                connect Junction4 Out as Connection642
                                connect Junction4 "Unit Delay3.in" as Connection630
                                connect Sum1.out Junction4 as Connection629
                                connect Sum1.in b0.out as Connection632
                                connect Sum2.out Sum1.in1 as Connection617
                                connect Sum2.in2 a1.out as Connection640
                                connect Sum2.in b1.out as Connection634
                                connect Sum3.out Sum2.in1 as Connection620
                                connect "Unit Delay1.out" Junction3 as Connection624
                                connect "Unit Delay3.out" Junction2 as Connection621
                                connect a1.in Junction2 as Connection641
                                connect a2.out Sum3.in1 as Connection638
                                connect a2.in "Unit Delay4.out" as Connection639
                                connect b0.in Junction1 as Connection633
                                connect b1.in Junction3 as Connection635
                                connect b2.out Sum3.in as Connection636
                                connect b2.in "Unit Delay2.out" as Connection637

                                a = "alowpass"
                                b = "blowpass"

                                mask {
                                    description = "Digital biquad filter
irect form 1"

                                    b {
                                        label = "b"
                                        widget = edit
                                        type = generic
                                        default_value = "bnotch"
                                    }

                                    a {
                                        label = "a"
                                        widget = edit
                                        type = generic
                                        default_value = "anotch"
                                    }

                                    CODE open
                                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                                    
                                        dialog = RegularComponentPropertiesDialog(
                                            component=component,
                                            property_container=component.masks[-1],
                                            current_diagram=current_diagram
                                        )
                                        dialog.exec_()
                                    
                                    ENDCODE
                                }
                            }
                            [
                                position = 8008, 8192
                                size = 48, 48
                            ]

                            component Subsystem PI {
                                layout = dynamic
                                component gen_integrator Integrator1 {
                                    init_value = "out0"
                                    limit_lower = "-1"
                                    limit_upper = "1"
                                    show_reset = "rising"
                                }
                                [
                                    position = 8216, 8240
                                ]

                                component gen_sum Sum5 {
                                }
                                [
                                    position = 8320, 8232
                                    hide_name = True
                                ]

                                component gen_sum Sum6 {
                                    signs = "-+"
                                }
                                [
                                    position = 8320, 8368
                                    hide_name = True
                                    scale = -1, 1
                                ]

                                component gen_limiter Limit1 {
                                    lower_limit = "lowLim"
                                    upper_limit = "upLim"
                                }
                                [
                                    position = 8408, 8232
                                    hide_name = True
                                ]

                                component gen_sum Sum7 {
                                }
                                [
                                    position = 8088, 8232
                                    hide_name = True
                                ]

                                component gen_gain Kb {
                                    gain = "1.0"
                                }
                                [
                                    position = 8216, 8368
                                    scale = -1, 1
                                ]

                                component gen_gain Kp {
                                    gain = "Kp"
                                }
                                [
                                    position = 8152, 8136
                                ]

                                component gen_gain Ki {
                                    gain = "Ki"
                                }
                                [
                                    position = 8000, 8224
                                ]

                                port In {
                                    label = "In"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7888, 8168
                                ]

                                port Out {
                                    label = "Out"
                                    position = right:1
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8472, 8232
                                ]

                                port reset {
                                    position = top:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8136, 8248
                                ]

                                junction Junction2 sp
                                [
                                    position = 8368, 8232
                                ]

                                junction Junction3 sp
                                [
                                    position = 8440, 8232
                                ]

                                junction Junction4 sp
                                [
                                    position = 7920, 8168
                                ]

                                connect Junction2 Limit1.in as Connection45
                                connect Junction3 Out as Connection48
                                connect Junction4 In as Connection67
                                connect Kb.in Sum6.out as Connection50
                                connect Ki.in Junction4 as Connection66
                                connect Kp.in Junction4 as Connection68
                                connect Kp.out Sum5.in as Connection63
                                connect Limit1.out Junction3 as Connection47
                                connect Sum5.in1 Integrator1.out as Connection5
                                connect Sum5.out Junction2 as Connection44
                                connect Sum6.in Junction2 as Connection46
                                connect Sum6.in1 Junction3 as Connection49
                                connect Sum7.out Integrator1.in as Connection52
                                connect Sum7.in1 Kb.out as Connection53
                                connect Sum7.in Ki.out as Connection64
                                connect reset Integrator1.reset as Connection62

                                Ki = "fmatch_Ki"
                                Kp = "fmatch_Kp"
                                lowLim = "[-0.166*1e5]"
                                out0 = "0.0"
                                upLim = "[0.166*1e5]"

                                mask {
                                    description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">PI controller</span></p></body></html>"

                                    Kp {
                                        label = "Kp"
                                        widget = edit
                                        type = generic
                                        default_value = "1.0"
                                        group = "General"
                                    }

                                    Ki {
                                        label = "Ki"
                                        widget = edit
                                        type = generic
                                        default_value = "5.0"
                                        group = "General"
                                    }

                                    upLim {
                                        label = "Upper limit"
                                        widget = edit
                                        type = generic
                                        default_value = "100.0"
                                        group = "General"
                                    }

                                    lowLim {
                                        label = "Lower limit"
                                        widget = edit
                                        type = generic
                                        default_value = "0.0"
                                        group = "General"
                                    }

                                    out0 {
                                        label = "Integrator initial output"
                                        widget = edit
                                        type = generic
                                        default_value = "fnom"
                                        group = "General"
                                    }

                                    CODE open
                                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                                    
                                        dialog = RegularComponentPropertiesDialog(
                                            component=component,
                                            property_container=component.masks[-1],
                                            current_diagram=current_diagram
                                        )
                                        dialog.exec_()
                                    
                                    ENDCODE
                                }
                            }
                            [
                                position = 8368, 8112
                                size = 64, 64
                            ]

                            component "core/Counter" Counter1 {
                                execution_rate = "Ts"
                            }
                            [
                                position = 8464, 8264
                                hide_name = True
                                size = 48, 48
                            ]

                            port sync {
                                label = "sync"
                                position = top:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8224, 8032
                                scale = 1, -1
                            ]

                            port "freq lock" {
                                position = right:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8792, 8264
                            ]

                            port delta_f {
                                position = right:3
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8528, 8112
                            ]

                            port f_Util {
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7776, 8184
                            ]

                            port f_Inv {
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7816, 8232
                            ]

                            junction Junction2 sp
                            [
                                position = 8328, 8256
                            ]

                            junction Junction32 sp
                            [
                                position = 8120, 8192
                            ]

                            junction Junction51 sp
                            [
                                position = 8272, 8032
                            ]

                            junction Junction52 sp
                            [
                                position = 8064, 8192
                            ]

                            junction Junction53 sp
                            [
                                position = 8640, 8264
                            ]

                            connect Abs3.in Junction32 as Connection694
                            connect Comparator1.in2 Abs3.out as Connection778
                            connect Comparator1.out Junction2 as Connection670
                            connect Constant1.out Freq_diff.in as Connection14
                            connect Constant3.out "Signal switch2.in1" as Connection651
                            connect Counter1.en Junction2 as Connection674
                            connect Delay1.in Junction53 as Connection789
                            connect Delay1.out "freq lock" as Connection774
                            connect Freq_diff.out Sum2.in as Connection181
                            connect Freq_diff1.out Sum2.in1 as Connection183
                            connect Junction32 Junction52 as Connection784
                            connect Junction32 "Signal switch2.in" as Connection782
                            [
                                position = 0, 0
                            ]
                            connect Junction52 "low pass.Out" as Connection785
                            connect Junction53 "Unit Delay1.in" as Connection790
                            connect "Logical operator1.out" Counter1.reset as Connection88
                            connect "Logical operator1.in" Junction2 as Connection65
                            connect PI.reset Junction51 as Connection777
                            connect PI.In "Signal switch2.out" as Connection746
                            connect PI.Out delta_f as Connection783
                            [
                                position = 0, 0
                            ]
                            connect "Signal switch2.in2" Junction51 as Connection780
                            connect Sum1.in1 f_Inv as Connection60
                            connect Sum1.in f_Util as Connection57
                            connect Sum2.out Comparator1.in1 as Connection182
                            connect "Unit Delay1.out" Freq_diff1.in as Connection180
                            connect c_function.counter Counter1.out as Connection788
                            connect c_function.out Junction53 as Connection791
                            connect f_diff.in Junction52 as Connection786
                            connect "low pass.In" Sum1.out as Connection781
                            connect sync Junction51 as Connection775
                        }
                        [
                            position = 7864, 8440
                            size = 136, 88
                        ]

                        component Subsystem Vmatch {
                            layout = dynamic
                            component gen_abs Abs2 {
                            }
                            [
                                position = 7856, 8272
                                rotation = right
                                hide_name = True
                            ]

                            component gen_sum Sum10 {
                                signs = "+-"
                            }
                            [
                                position = 7792, 8144
                                hide_name = True
                            ]

                            component gen_gain Phase_diff1 {
                                gain = "0.01*V_diff/100.0"
                            }
                            [
                                position = 7928, 8408
                                hide_name = True
                                scale = -1, 1
                            ]

                            component tm_delay "Unit Delay3" {
                            }
                            [
                                position = 8008, 8408
                                hide_name = True
                                scale = -1, 1
                            ]

                            component tm_delay "Unit Delay5" {
                            }
                            [
                                position = 8248, 8160
                                hide_name = True
                            ]

                            component gen_comparator Comparator2 {
                            }
                            [
                                position = 8008, 8320
                                hide_name = True
                                scale = 1, -1
                            ]

                            component src_constant Constant2 {
                                execution_rate = "Ts"
                                value = "1.0"
                            }
                            [
                                position = 7720, 8344
                                hide_name = True
                            ]

                            component src_constant Constant3 {
                                execution_rate = "Ts"
                                value = "0.0"
                            }
                            [
                                position = 7912, 8176
                                hide_name = True
                                scale = 1, -1
                            ]

                            component gen_logic_op "Logical operator1" {
                                operator = "NOT"
                            }
                            [
                                position = 8104, 8384
                                hide_name = True
                            ]

                            component gen_gain Phase_diff {
                                gain = "V_diff/100.0"
                            }
                            [
                                position = 7784, 8344
                                hide_name = True
                            ]

                            component sys_signal_switch "Signal switch2" {
                                criterion = "ctrl > threshold"
                                threshold = "0.0"
                            }
                            [
                                position = 7976, 8160
                                hide_name = True
                            ]

                            component tm_delay "Unit Delay4" {
                            }
                            [
                                position = 8360, 8376
                                hide_name = True
                            ]

                            component gen_sum Sum2 {
                            }
                            [
                                position = 7864, 8352
                                hide_name = True
                            ]

                            component gen_c_function c_function {
                                in_terminal_dimensions = "inherit"
                                in_terminal_dimensions_str = "counter inherit"
                                in_terminal_labels = "False;"
                                in_terminal_properties = "real counter;"
                                no_feed_inputs = "[\'\']"
                                no_feed_outputs = "[\'\']"
                                out_terminal_dimensions = "inherit"
                                out_terminal_dimensions_str = "out inherit"
                                out_terminal_labels = "False;"
                                output_fnc = "/*Begin code section*/
if(counter>=0.1/execution_rate){
    out = 1;
}
else{
    out = 0;
}
/*End code section*/"
                            }
                            [
                                position = 8280, 8376
                                size = 48, 48
                            ]

                            component "core/Counter" Counter1 {
                                execution_rate = "Ts"
                            }
                            [
                                position = 8192, 8376
                                hide_name = True
                                size = 48, 48
                            ]

                            component Subsystem PI {
                                layout = dynamic
                                component gen_sum Sum7 {
                                }
                                [
                                    position = 8088, 8224
                                    hide_name = True
                                ]

                                component gen_sum Sum6 {
                                    signs = "-+"
                                }
                                [
                                    position = 8320, 8312
                                    hide_name = True
                                    scale = -1, 1
                                ]

                                component gen_integrator Integrator1 {
                                    init_value = "out0"
                                    limit_lower = "-1"
                                    limit_upper = "1"
                                    show_reset = "either"
                                }
                                [
                                    position = 8216, 8232
                                ]

                                component gen_limiter Limit1 {
                                    lower_limit = "lowLim"
                                    upper_limit = "upLim"
                                }
                                [
                                    position = 8408, 8224
                                    hide_name = True
                                ]

                                component gen_gain Kb {
                                    gain = "1.0"
                                }
                                [
                                    position = 8216, 8312
                                    scale = -1, 1
                                ]

                                component gen_sum Sum5 {
                                }
                                [
                                    position = 8320, 8224
                                    hide_name = True
                                ]

                                component gen_gain Kp {
                                    gain = "Kp"
                                }
                                [
                                    position = 8136, 8128
                                ]

                                component gen_gain Ki {
                                    gain = "Ki"
                                }
                                [
                                    position = 7984, 8216
                                ]

                                port In {
                                    label = "In"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7888, 8168
                                ]

                                port Out {
                                    label = "Out"
                                    position = right:1
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8472, 8224
                                ]

                                port reset {
                                    position = top:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8136, 8256
                                ]

                                junction Junction2 sp
                                [
                                    position = 8368, 8224
                                ]

                                junction Junction3 sp
                                [
                                    position = 8440, 8224
                                ]

                                junction Junction4 sp
                                [
                                    position = 7920, 8168
                                ]

                                connect Junction2 Limit1.in as Connection45
                                connect Junction3 Out as Connection48
                                connect Junction4 In as Connection67
                                connect Kb.in Sum6.out as Connection50
                                connect Ki.in Junction4 as Connection66
                                connect Kp.in Junction4 as Connection68
                                connect Kp.out Sum5.in as Connection63
                                connect Limit1.out Junction3 as Connection47
                                connect Sum5.in1 Integrator1.out as Connection5
                                connect Sum5.out Junction2 as Connection44
                                connect Sum6.in Junction2 as Connection46
                                connect Sum6.in1 Junction3 as Connection49
                                connect Sum7.out Integrator1.in as Connection52
                                connect Sum7.in1 Kb.out as Connection53
                                connect Sum7.in Ki.out as Connection64
                                connect reset Integrator1.reset as Connection62

                                Ki = "Vmatch_Ki"
                                Kp = "Vmatch_Kp"
                                lowLim = "[-0.147*1e5]"
                                out0 = "0.0"
                                upLim = "[0.147*1e5]"

                                mask {
                                    description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">PI controller</span></p></body></html>"

                                    Kp {
                                        label = "Kp"
                                        widget = edit
                                        type = generic
                                        default_value = "1.0"
                                        group = "General"
                                    }

                                    Ki {
                                        label = "Ki"
                                        widget = edit
                                        type = generic
                                        default_value = "5.0"
                                        group = "General"
                                    }

                                    upLim {
                                        label = "Upper limit"
                                        widget = edit
                                        type = generic
                                        default_value = "100.0"
                                        group = "General"
                                    }

                                    lowLim {
                                        label = "Lower limit"
                                        widget = edit
                                        type = generic
                                        default_value = "0.0"
                                        group = "General"
                                    }

                                    out0 {
                                        label = "Integrator initial output"
                                        widget = edit
                                        type = generic
                                        default_value = "fnom"
                                        group = "General"
                                    }

                                    CODE open
                                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                                    
                                        dialog = RegularComponentPropertiesDialog(
                                            component=component,
                                            property_container=component.masks[-1],
                                            current_diagram=current_diagram
                                        )
                                        dialog.exec_()
                                    
                                    ENDCODE
                                }
                            }
                            [
                                position = 8088, 8160
                                size = 64, 48
                            ]

                            port Sync_Ess {
                                position = top:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7920, 8088
                            ]

                            port delta_V {
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8424, 8160
                            ]

                            port Vt_Util {
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7568, 8136
                            ]

                            port Vt_Inv {
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7648, 8152
                            ]

                            port V_match {
                                position = right:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8424, 8376
                            ]

                            junction Junction43 sp
                            [
                                position = 8056, 8320
                            ]

                            junction Junction51 sp
                            [
                                position = 8040, 8320
                            ]

                            junction Junction295 sp
                            [
                                position = 7976, 8088
                            ]

                            junction Junction298 sp
                            [
                                position = 7856, 8144
                            ]

                            connect Abs2.in Junction298 as Connection1997
                            connect Comparator2.in2 Abs2.out as Connection12
                            connect Comparator2.out Junction51 as Connection539
                            connect Constant2.out Phase_diff.in as Connection15
                            connect Constant3.out "Signal switch2.in1" as Connection651
                            connect Junction298 "Signal switch2.in" as Connection1996
                            connect Junction43 Counter1.en as Connection454
                            connect Junction51 Junction43 as Connection540
                            connect "Logical operator1.out" Counter1.reset as Connection88
                            connect "Logical operator1.in" Junction43 as Connection453
                            connect PI.reset Junction295 as Connection1989
                            connect PI.Out "Unit Delay5.in" as Connection1999
                            [
                                position = 0, 0
                            ]
                            connect Phase_diff.out Sum2.in as Connection542
                            connect Phase_diff1.out Sum2.in1 as Connection545
                            connect "Signal switch2.in2" Junction295 as Connection1984
                            connect "Signal switch2.out" PI.In as Connection1998
                            [
                                position = 0, 0
                            ]
                            connect Sum10.out Junction298 as Connection1995
                            connect Sum10.in1 Vt_Inv as Connection2000
                            [
                                position = 0, 0
                                breakpoints = 7736, 8152
                            ]
                            connect Sum2.out Comparator2.in1 as Connection543
                            connect Sync_Ess Junction295 as Connection1982
                            connect "Unit Delay3.in" Junction51 as Connection541
                            connect "Unit Delay3.out" Phase_diff1.in as Connection544
                            connect "Unit Delay4.out" V_match as Connection845
                            connect Vt_Util Sum10.in as Connection2001
                            [
                                position = 0, 0
                                breakpoints = 7624, 8136
                            ]
                            connect c_function.counter Counter1.out as Connection2002
                            connect c_function.out "Unit Delay4.in" as Connection2003
                            connect delta_V "Unit Delay5.out" as Connection1992
                        }
                        [
                            position = 8152, 8232
                            size = 120, 104
                        ]

                        port "Turn on Sync" {
                            position = top:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8056, 8120
                        ]

                        port Va_util {
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7256, 8312
                        ]

                        port Vb_util {
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7256, 8368
                        ]

                        port Vc_util {
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7256, 8424
                        ]

                        port df_sync {
                            position = right:11
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8312, 8416
                        ]

                        port dV_match {
                            position = right:10
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8304, 8200
                        ]

                        port Vt_inv {
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7256, 8528
                        ]

                        port f_inv {
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7256, 8584
                        ]

                        port wt_inv {
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7256, 8640
                        ]

                        port live_grid {
                            position = right:14
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8312, 8688
                        ]

                        port grid_locked {
                            position = right:13
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8312, 8560
                        ]

                        port V_match {
                            position = right:12
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8304, 8264
                        ]

                        port nominal_state {
                            position = right:15
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8312, 8832
                        ]

                        tag From121 {
                            value = "sync_ess"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7776, 8360
                            hide_name = True
                            size = 60, 20
                        ]

                        tag Goto2 {
                            value = "Vt_util"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7488, 8312
                            hide_name = True
                            size = 0, 0
                        ]

                        tag From126 {
                            value = "Vt_inv"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8008, 8264
                            hide_name = True
                            size = 60, 20
                        ]

                        tag From129 {
                            value = "Vt_util"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8016, 8704
                            hide_name = True
                            size = 60, 20
                        ]

                        tag From130 {
                            value = "f_util"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8016, 8672
                            hide_name = True
                            size = 60, 20
                        ]

                        tag From133 {
                            value = "Vt_inv"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8016, 8848
                            hide_name = True
                            size = 60, 20
                        ]

                        tag From132 {
                            value = "f_inv"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8016, 8816
                            hide_name = True
                            size = 60, 20
                        ]

                        tag From128 {
                            value = "f_inv"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7680, 8464
                            hide_name = True
                            size = 60, 20
                        ]

                        tag From124 {
                            value = "wt_util"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7952, 8512
                            hide_name = True
                            size = 60, 20
                        ]

                        tag From122 {
                            value = "sync_ess"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8064, 8368
                            hide_name = True
                            size = 60, 20
                        ]

                        tag From127 {
                            value = "wt_inv"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7952, 8560
                            hide_name = True
                            size = 60, 20
                        ]

                        tag Goto4 {
                            value = "wt_util"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7488, 8424
                            hide_name = True
                            size = 0, 0
                        ]

                        tag Goto6 {
                            value = "Vt_inv"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7336, 8528
                            hide_name = True
                            size = 0, 0
                        ]

                        tag Goto1 {
                            value = "sync_ess"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8240, 8120
                            hide_name = True
                            size = 0, 0
                        ]

                        tag Goto7 {
                            value = "wt_inv"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7336, 8640
                            hide_name = True
                            size = 0, 0
                        ]

                        tag From125 {
                            value = "f_util"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7680, 8416
                            hide_name = True
                            size = 60, 20
                        ]

                        tag Goto3 {
                            value = "f_util"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7488, 8368
                            hide_name = True
                            size = 0, 0
                        ]

                        tag Goto5 {
                            value = "f_inv"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7336, 8584
                            hide_name = True
                            size = 0, 0
                        ]

                        tag From123 {
                            value = "Vt_util"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8008, 8200
                            hide_name = True
                            size = 60, 20
                        ]

                        junction Junction1 sp
                        [
                            position = 7952, 8416
                        ]

                        junction Junction4 sp
                        [
                            position = 8152, 8120
                        ]

                        junction Junction5 sp
                        [
                            position = 8256, 8416
                        ]

                        junction Junction6 sp
                        [
                            position = 8256, 8560
                        ]

                        junction Junction9 sp
                        [
                            position = 8248, 8832
                        ]

                        connect Check_grid.freq From130 as Connection1983
                        connect Check_nominal_conditions.freq From132 as Connection1997
                        connect From121 f_match.sync as Connection1969
                        connect From122 phase_match.sync as Connection1970
                        connect From123 Vmatch.Vt_Util as Connection1977
                        connect From124 phase_match.phase_util as Connection1978
                        connect From125 f_match.f_Util as Connection1979
                        connect From126 Vmatch.Vt_Inv as Connection1982
                        connect From127 phase_match.phase_inv as Connection1981
                        connect From128 f_match.f_Inv as Connection1980
                        connect From129 Check_grid.Vt as Connection1984
                        connect From133 Check_nominal_conditions.Vt as Connection1996
                        connect Goto1 Junction4 as Connection1956
                        connect Goto2 PLL_Util.t as Connection1961
                        connect Goto3 PLL_Util.f as Connection1962
                        connect Goto4 PLL_Util.wt as Connection1963
                        connect Goto5 f_inv as Connection1965
                        connect Goto6 Vt_inv as Connection1964
                        connect Goto7 wt_inv as Connection1966
                        connect Junction1 phase_match.freq_lock as Connection593
                        connect Junction4 Vmatch.Sync_Ess as Connection1955
                        connect Junction5 phase_match.df_synch as Connection1972
                        connect Junction6 phase_match.phase_lock as Connection1975
                        connect Junction9 Check_nominal_conditions.on_nominal as Connection1999
                        connect "Turn on Sync" Junction4 as Connection1954
                        connect V_match Vmatch.V_match as Connection1986
                        connect Va_util PLL_Util.A as Connection1958
                        connect Vb_util PLL_Util.B as Connection1960
                        connect Vc_util PLL_Util.C as Connection1959
                        connect Vmatch.delta_V dV_match as Connection1953
                        connect df_sync Junction5 as Connection1971
                        connect dfsynch.in Junction5 as Connection1973
                        connect "f_match.freq lock" Junction1 as Connection592
                        connect freq_lock.in Junction1 as Connection594
                        connect grid_locked Junction6 as Connection1974
                        connect live_grid Check_grid.live_grid as Connection1985
                        connect nominal_state Junction9 as Connection1995
                        connect on_nominal.in Junction9 as Connection1998
                        connect phase_lock.in Junction6 as Connection1976
                        connect phase_match.f_offset f_match.delta_f as Connection588
                    }
                    [
                        position = 8208, 9056
                        size = 136, 280
                    ]

                    component Subsystem Imode_control {
                        layout = dynamic
                        component gen_sum Sum12 {
                            signs = "++"
                        }
                        [
                            position = 7928, 8408
                            hide_name = True
                        ]

                        component gen_probe Idref {
                            addr = "8966"
                            signal_type = "voltage"
                        }
                        [
                            position = 7616, 8048
                            rotation = left
                        ]

                        component gen_probe Qref {
                            addr = "8966"
                            signal_type = "voltage"
                        }
                        [
                            position = 7424, 8024
                            rotation = left
                        ]

                        component gen_probe Pref {
                            addr = "8966"
                            signal_type = "voltage"
                        }
                        [
                            position = 7464, 8056
                            rotation = left
                        ]

                        component gen_probe Iqref {
                            addr = "8966"
                            signal_type = "voltage"
                        }
                        [
                            position = 7616, 8176
                            rotation = left
                        ]

                        component gen_gain Gain2 {
                            gain = "1.0/Sn"
                        }
                        [
                            position = 7200, 7904
                            hide_name = True
                        ]

                        component src_constant Constant1 {
                            execution_rate = "inherit"
                        }
                        [
                            position = 7144, 7968
                            hide_name = True
                        ]

                        component gen_logic_op "Logical operator1" {
                            operator = "OR"
                        }
                        [
                            position = 7800, 7912
                            hide_name = True
                        ]

                        component gen_gain Gain1 {
                            gain = "1.0/Sn"
                        }
                        [
                            position = 7200, 7864
                            hide_name = True
                        ]

                        component Subsystem "Dq current controller" {
                            layout = dynamic
                            component gen_sum Sum2 {
                                signs = "-+"
                            }
                            [
                                position = 7072, 8216
                                rotation = down
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_gain Gain11 {
                                gain = "(Vn*(2.0/3.0)**0.5)/Vn_dc"
                            }
                            [
                                position = 7656, 8232
                                hide_name = True
                            ]

                            component gen_product Product1 {
                            }
                            [
                                position = 7128, 7984
                                hide_name = True
                            ]

                            component gen_gain Gain10 {
                                gain = "(Vn*(2.0/3.0)**0.5)/Vn_dc"
                            }
                            [
                                position = 7656, 8088
                                hide_name = True
                            ]

                            component gen_sum Sum9 {
                            }
                            [
                                position = 7440, 8096
                                hide_name = True
                                scale = 1, -1
                            ]

                            component gen_product Product6 {
                            }
                            [
                                position = 7128, 8352
                                hide_name = True
                            ]

                            component gen_product Product5 {
                                signs = "*/"
                            }
                            [
                                position = 7568, 8088
                                hide_name = True
                                scale = 1, -1
                            ]

                            component gen_sum Sum12 {
                            }
                            [
                                position = 7440, 8224
                                hide_name = True
                                scale = 1, -1
                            ]

                            component gen_gain Gain5 {
                                gain = "0.5"
                            }
                            [
                                position = 6904, 7800
                                rotation = right
                                hide_name = True
                            ]

                            component gen_sum Sum13 {
                            }
                            [
                                position = 7232, 8344
                                hide_name = True
                                scale = 1, -1
                            ]

                            component gen_product Product7 {
                                signs = "*/"
                            }
                            [
                                position = 7568, 8232
                                hide_name = True
                            ]

                            component gen_gain Gain7 {
                                gain = "L*(Sn*2*np.pi*fn)/(Vn**2.0)"
                            }
                            [
                                position = 7056, 8344
                                hide_name = True
                            ]

                            component gen_sum Sum1 {
                                signs = "-+"
                            }
                            [
                                position = 7072, 8104
                                rotation = down
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_sum Sum10 {
                                signs = "+-"
                            }
                            [
                                position = 7232, 7976
                                hide_name = True
                            ]

                            component gen_limiter Limit3 {
                                lower_limit = "0.01"
                            }
                            [
                                position = 6904, 7744
                                rotation = right
                                hide_name = True
                            ]

                            component gen_gain Gain4 {
                                gain = "L*(Sn*2*np.pi*fn)/(Vn**2.0)"
                            }
                            [
                                position = 7056, 7992
                                hide_name = True
                            ]

                            component Subsystem damper {
                                layout = dynamic
                                component gen_sum Sum9 {
                                }
                                [
                                    position = 8240, 8280
                                    hide_name = True
                                ]

                                component gen_gain Id_damp {
                                    gain = "Imode_damp"
                                }
                                [
                                    position = 8120, 8144
                                ]

                                component gen_gain Iq_damp {
                                    gain = "Imode_damp"
                                }
                                [
                                    position = 8120, 8224
                                    rotation = down
                                    scale = -1, -1
                                ]

                                component gen_sum Sum8 {
                                }
                                [
                                    position = 8240, 8088
                                    hide_name = True
                                ]

                                port id {
                                    position = right:11
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8000, 8144
                                ]

                                port "mq out" {
                                    position = left:2
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8328, 8280
                                    rotation = down
                                    scale = -1, 1
                                ]

                                port iq {
                                    position = right:12
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8000, 8224
                                ]

                                port "md out" {
                                    position = left:1
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8328, 8088
                                    rotation = down
                                    scale = -1, 1
                                ]

                                port "md in" {
                                    position = right:10
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8072, 8080
                                    rotation = down
                                    scale = -1, 1
                                ]

                                port "mq in" {
                                    position = right:13
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8080, 8288
                                    rotation = down
                                    scale = -1, 1
                                ]

                                connect Id_damp.out Sum8.in1 as Connection110
                                connect Id_damp.in id as Connection109
                                connect Iq_damp.out Sum9.in as Connection112
                                connect Iq_damp.in iq as Connection111
                                connect "md in" Sum8.in as Connection103
                                connect "md out" Sum8.out as Connection107
                                connect "mq in" Sum9.in1 as Connection104
                                connect "mq out" Sum9.out as Connection108
                            }
                            [
                                position = 7816, 8160
                                scale = -1, 1
                                size = 80, 184
                            ]

                            component Subsystem PI_d {
                                layout = dynamic
                                component gen_gain Kb {
                                    gain = "1.0"
                                }
                                [
                                    position = 8216, 8312
                                    scale = -1, 1
                                ]

                                component gen_limiter Limit1 {
                                    lower_limit = "lowLim"
                                    upper_limit = "upLim"
                                }
                                [
                                    position = 8408, 8224
                                    hide_name = True
                                ]

                                component gen_sum Sum7 {
                                }
                                [
                                    position = 8088, 8224
                                    hide_name = True
                                ]

                                component gen_sum Sum6 {
                                    signs = "-+"
                                }
                                [
                                    position = 8320, 8312
                                    hide_name = True
                                    scale = -1, 1
                                ]

                                component gen_sum Sum5 {
                                }
                                [
                                    position = 8320, 8224
                                    hide_name = True
                                ]

                                component gen_integrator Integrator1 {
                                    init_value = "out0"
                                    limit_lower = "-1"
                                    limit_upper = "1"
                                    show_reset = "either"
                                }
                                [
                                    position = 8216, 8232
                                ]

                                component gen_gain Kp {
                                    gain = "Kp"
                                }
                                [
                                    position = 8136, 8128
                                ]

                                component gen_gain Ki {
                                    gain = "Ki"
                                }
                                [
                                    position = 7984, 8216
                                ]

                                port In {
                                    label = "In"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7888, 8168
                                ]

                                port Out {
                                    label = "Out"
                                    position = right:1
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8472, 8224
                                ]

                                port reset {
                                    position = top:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8136, 8256
                                ]

                                junction Junction2 sp
                                [
                                    position = 8368, 8224
                                ]

                                junction Junction3 sp
                                [
                                    position = 8440, 8224
                                ]

                                junction Junction4 sp
                                [
                                    position = 7920, 8168
                                ]

                                connect Junction2 Limit1.in as Connection45
                                connect Junction3 Out as Connection48
                                connect Junction4 In as Connection67
                                connect Kb.in Sum6.out as Connection50
                                connect Ki.in Junction4 as Connection66
                                connect Ki.out Sum7.in as Connection63
                                connect Kp.in Junction4 as Connection68
                                connect Kp.out Sum5.in as Connection65
                                connect Limit1.out Junction3 as Connection47
                                connect Sum5.in1 Integrator1.out as Connection5
                                connect Sum5.out Junction2 as Connection44
                                connect Sum6.in Junction2 as Connection46
                                connect Sum6.in1 Junction3 as Connection49
                                connect Sum7.out Integrator1.in as Connection52
                                connect Sum7.in1 Kb.out as Connection53
                                connect reset Integrator1.reset as Connection62

                                Ki = "ImodeId_Ki"
                                Kp = "ImodeId_Kp"
                                lowLim = "-1e5"
                                out0 = "0.0"
                                upLim = "1e5"

                                mask {
                                    description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">PI controller</span></p></body></html>"

                                    Kp {
                                        label = "Kp"
                                        widget = edit
                                        type = generic
                                        default_value = "1.0"
                                        group = "General"
                                    }

                                    Ki {
                                        label = "Ki"
                                        widget = edit
                                        type = generic
                                        default_value = "5.0"
                                        group = "General"
                                    }

                                    upLim {
                                        label = "Upper limit"
                                        widget = edit
                                        type = generic
                                        default_value = "100.0"
                                        group = "General"
                                    }

                                    lowLim {
                                        label = "Lower limit"
                                        widget = edit
                                        type = generic
                                        default_value = "0.0"
                                        group = "General"
                                    }

                                    out0 {
                                        label = "Integrator initial output"
                                        widget = edit
                                        type = generic
                                        default_value = "fnom"
                                        group = "General"
                                    }

                                    CODE open
                                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                                    
                                        dialog = RegularComponentPropertiesDialog(
                                            component=component,
                                            property_container=component.masks[-1],
                                            current_diagram=current_diagram
                                        )
                                        dialog.exec_()
                                    
                                    ENDCODE
                                }
                            }
                            [
                                position = 7184, 8104
                                size = 64, 48
                            ]

                            component Subsystem PI_q {
                                layout = dynamic
                                component gen_gain Kb {
                                    gain = "1.0"
                                }
                                [
                                    position = 8216, 8312
                                    scale = -1, 1
                                ]

                                component gen_sum Sum7 {
                                }
                                [
                                    position = 8088, 8224
                                    hide_name = True
                                ]

                                component gen_sum Sum5 {
                                }
                                [
                                    position = 8320, 8224
                                    hide_name = True
                                ]

                                component gen_integrator Integrator1 {
                                    init_value = "out0"
                                    limit_lower = "-1"
                                    limit_upper = "1"
                                    show_reset = "either"
                                }
                                [
                                    position = 8216, 8232
                                ]

                                component gen_limiter Limit1 {
                                    lower_limit = "lowLim"
                                    upper_limit = "upLim"
                                }
                                [
                                    position = 8408, 8224
                                    hide_name = True
                                ]

                                component gen_sum Sum6 {
                                    signs = "-+"
                                }
                                [
                                    position = 8320, 8312
                                    hide_name = True
                                    scale = -1, 1
                                ]

                                component gen_gain Ki {
                                    gain = "Ki"
                                }
                                [
                                    position = 7976, 8216
                                ]

                                component gen_gain Kp {
                                    gain = "Kp"
                                }
                                [
                                    position = 8128, 8136
                                ]

                                port In {
                                    label = "In"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7888, 8168
                                ]

                                port Out {
                                    label = "Out"
                                    position = right:1
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8472, 8224
                                ]

                                port reset {
                                    position = top:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8136, 8256
                                ]

                                junction Junction2 sp
                                [
                                    position = 8368, 8224
                                ]

                                junction Junction3 sp
                                [
                                    position = 8440, 8224
                                ]

                                junction Junction4 sp
                                [
                                    position = 7920, 8168
                                ]

                                connect Junction2 Limit1.in as Connection45
                                connect Junction3 Out as Connection48
                                connect Junction4 In as Connection66
                                connect Kb.in Sum6.out as Connection50
                                connect Ki.in Junction4 as Connection65
                                connect Ki.out Sum7.in as Connection68
                                connect Kp.in Junction4 as Connection67
                                connect Kp.out Sum5.in as Connection63
                                connect Limit1.out Junction3 as Connection47
                                connect Sum5.in1 Integrator1.out as Connection5
                                connect Sum5.out Junction2 as Connection44
                                connect Sum6.in Junction2 as Connection46
                                connect Sum6.in1 Junction3 as Connection49
                                connect Sum7.out Integrator1.in as Connection52
                                connect Sum7.in1 Kb.out as Connection53
                                connect reset Integrator1.reset as Connection62

                                Ki = "ImodeIq_Ki"
                                Kp = "ImodeIq_Kp"
                                lowLim = "-1e5"
                                out0 = "0.0"
                                upLim = "1e5"

                                mask {
                                    description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">PI controller</span></p></body></html>"

                                    Kp {
                                        label = "Kp"
                                        widget = edit
                                        type = generic
                                        default_value = "1.0"
                                        group = "General"
                                    }

                                    Ki {
                                        label = "Ki"
                                        widget = edit
                                        type = generic
                                        default_value = "5.0"
                                        group = "General"
                                    }

                                    upLim {
                                        label = "Upper limit"
                                        widget = edit
                                        type = generic
                                        default_value = "100.0"
                                        group = "General"
                                    }

                                    lowLim {
                                        label = "Lower limit"
                                        widget = edit
                                        type = generic
                                        default_value = "0.0"
                                        group = "General"
                                    }

                                    out0 {
                                        label = "Integrator initial output"
                                        widget = edit
                                        type = generic
                                        default_value = "fnom"
                                        group = "General"
                                    }

                                    CODE open
                                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                                    
                                        dialog = RegularComponentPropertiesDialog(
                                            component=component,
                                            property_container=component.masks[-1],
                                            current_diagram=current_diagram
                                        )
                                        dialog.exec_()
                                    
                                    ENDCODE
                                }
                            }
                            [
                                position = 7328, 8216
                                size = 64, 48
                            ]

                            port Id {
                                position = right:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 6792, 8112
                                rotation = down
                                scale = -1, 1
                            ]

                            port Id_ref {
                                position = right:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 6984, 8096
                                rotation = down
                                scale = -1, 1
                            ]

                            port Iq_ref {
                                position = right:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 6984, 8208
                                rotation = down
                                scale = -1, 1
                            ]

                            port Iq {
                                position = right:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 6792, 8224
                                rotation = down
                                scale = -1, 1
                            ]

                            port m_d {
                                position = left:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8088
                                rotation = down
                                scale = -1, 1
                            ]

                            port m_q {
                                position = left:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8232
                                rotation = down
                                scale = -1, 1
                            ]

                            port f {
                                position = right:5
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 6792, 8288
                                rotation = down
                                scale = -1, 1
                            ]

                            port Vd {
                                position = top:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7176, 7912
                                rotation = right
                                scale = -1, 1
                            ]

                            port Vq {
                                position = top:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7176, 8288
                                rotation = right
                                scale = -1, 1
                            ]

                            port Vdc {
                                position = top:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 6904, 7680
                                rotation = right
                                scale = -1, 1
                            ]

                            port reset {
                                position = top:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 6984, 7680
                                rotation = right
                                scale = -1, 1
                            ]

                            tag From132 {
                                value = "iq"
                                scope = local
                                kind = sp
                                direction = out
                            }
                            [
                                position = 6968, 7992
                                hide_name = True
                                size = 60, 20
                            ]

                            tag From139 {
                                value = "reset"
                                scope = local
                                kind = sp
                                direction = out
                            }
                            [
                                position = 7112, 8048
                                hide_name = True
                                size = 60, 20
                            ]

                            tag Goto21 {
                                value = "reset"
                                scope = local
                                kind = sp
                                direction = in
                            }
                            [
                                position = 6984, 7752
                                rotation = right
                                hide_name = True
                                size = 60, 20
                            ]

                            tag From133 {
                                value = "id"
                                scope = local
                                kind = sp
                                direction = out
                            }
                            [
                                position = 7704, 8136
                                hide_name = True
                                size = 60, 20
                            ]

                            tag Goto20 {
                                value = "half_Vdc"
                                scope = local
                                kind = sp
                                direction = in
                            }
                            [
                                position = 6904, 7872
                                rotation = right
                                hide_name = True
                                size = 60, 20
                            ]

                            tag From140 {
                                value = "reset"
                                scope = local
                                kind = sp
                                direction = out
                            }
                            [
                                position = 7256, 8176
                                hide_name = True
                                size = 60, 20
                            ]

                            tag Goto18 {
                                value = "iq"
                                scope = local
                                kind = sp
                                direction = in
                            }
                            [
                                position = 6904, 8200
                                hide_name = True
                                size = 60, 20
                            ]

                            tag Goto17 {
                                value = "id"
                                scope = local
                                kind = sp
                                direction = in
                            }
                            [
                                position = 6904, 8088
                                hide_name = True
                                size = 60, 20
                            ]

                            tag From131 {
                                value = "id"
                                scope = local
                                kind = sp
                                direction = out
                            }
                            [
                                position = 6968, 8344
                                hide_name = True
                                size = 60, 20
                            ]

                            tag From142 {
                                value = "half_Vdc"
                                scope = local
                                kind = sp
                                direction = out
                            }
                            [
                                position = 7472, 8280
                                hide_name = True
                                size = 60, 20
                            ]

                            tag From137 {
                                value = "half_Vdc"
                                scope = local
                                kind = sp
                                direction = out
                            }
                            [
                                position = 7480, 8024
                                hide_name = True
                                size = 60, 20
                            ]

                            tag From135 {
                                value = "f"
                                scope = local
                                kind = sp
                                direction = out
                            }
                            [
                                position = 6968, 8384
                                hide_name = True
                                size = 60, 20
                            ]

                            tag Goto19 {
                                value = "f"
                                scope = local
                                kind = sp
                                direction = in
                            }
                            [
                                position = 6880, 8288
                                hide_name = True
                                size = 60, 20
                            ]

                            tag From134 {
                                value = "iq"
                                scope = local
                                kind = sp
                                direction = out
                            }
                            [
                                position = 7704, 8184
                                hide_name = True
                                size = 60, 20
                            ]

                            tag From141 {
                                value = "f"
                                scope = local
                                kind = sp
                                direction = out
                            }
                            [
                                position = 6968, 7952
                                hide_name = True
                                size = 60, 20
                            ]

                            junction Junction173 sp
                            [
                                position = 6856, 8112
                            ]

                            junction Junction174 sp
                            [
                                position = 6856, 8224
                            ]

                            connect From131 Gain7.in as Connection1814
                            connect From132 Gain4.in as Connection1812
                            connect From133 damper.id as Connection1819
                            connect From134 damper.iq as Connection1820
                            connect From135 Product6.in1 as Connection1823
                            connect From137 Product5.in1 as Connection1827
                            connect From139 PI_d.reset as Connection1835
                            connect From140 PI_q.reset as Connection1839
                            connect From141 Product1.in as Connection1833
                            connect From142 Product7.in1 as Connection1870
                            connect Gain10.out "damper.md in" as Connection1860
                            connect Gain11.out "damper.mq in" as Connection1862
                            connect Goto17 Junction173 as Connection1807
                            connect Goto18 Junction174 as Connection1810
                            connect Goto20 Gain5.out as Connection1826
                            connect Goto21 reset as Connection1830
                            connect Id Junction173 as Connection1805
                            connect Iq Junction174 as Connection1808
                            connect Junction174 Sum2.in as Connection1811
                            connect Limit3.out Gain5.in as Connection1874
                            connect PI_d.In Sum1.out as Connection1834
                            connect PI_q.Out Sum12.in1 as Connection1837
                            connect PI_q.In Sum2.out as Connection1838
                            connect Product1.in1 Gain4.out as Connection177
                            connect Product5.out Gain10.in as Connection1868
                            connect Product5.in Sum9.out as Connection1869
                            connect Product6.in Gain7.out as Connection204
                            connect Product7.out Gain11.in as Connection1871
                            connect Product7.in Sum12.out as Connection1872
                            connect Sum1.in1 Id_ref as Connection276
                            connect Sum1.in Junction173 as Connection1813
                            connect Sum10.in1 Product1.out as Connection176
                            connect Sum10.out Sum9.in1 as Connection1867
                            connect Sum13.in Product6.out as Connection229
                            connect Sum13.out Sum12.in as Connection1866
                            connect Sum2.in1 Iq_ref as Connection277
                            connect Sum9.in PI_d.Out as Connection1875
                            [
                                position = 0, 0
                                breakpoints = 7264, 8104
                            ]
                            connect Vd Sum10.in as Connection297
                            connect Vdc Limit3.in as Connection1873
                            connect Vq Sum13.in1 as Connection298
                            connect "damper.mq out" m_q as Connection1876
                            [
                                position = 0, 0
                            ]
                            connect f Goto19 as Connection1822
                            connect m_d "damper.md out" as Connection1877
                            [
                                position = 0, 0
                            ]
                        }
                        [
                            position = 7904, 8192
                            scale = -1, 1
                            size = 136, 232
                        ]

                        component Subsystem Limit_PQref {
                            layout = dynamic
                            component gen_rate_limiter "Q rate limit" {
                                falling_limit = "-ratemax"
                                rising_limit = "ratemax"
                            }
                            [
                                position = 7976, 8264
                            ]

                            component tm_delay "Unit Delay1" {
                            }
                            [
                                position = 8200, 8192
                                hide_name = True
                            ]

                            component tm_delay "Unit Delay2" {
                            }
                            [
                                position = 8200, 8336
                                hide_name = True
                            ]

                            component gen_rate_limiter "S rate limit" {
                                falling_limit = "-ratemax"
                                rising_limit = "ratemax"
                            }
                            [
                                position = 7976, 8336
                            ]

                            component gen_rate_limiter "P rate limit" {
                                falling_limit = "-ratemax"
                                rising_limit = "ratemax"
                            }
                            [
                                position = 7976, 8192
                            ]

                            component Subsystem limS_overPQ {
                                layout = dynamic
                                component gen_c_function "S limiting over PQ" {
                                    global_variables = "real S_PQref;"
                                    in_terminal_dimensions = "inherit;inherit;inherit"
                                    in_terminal_dimensions_str = "Pref inherit;Qref inherit;Sref inherit"
                                    in_terminal_labels = "False;False;False;"
                                    in_terminal_properties = "inherit Pref;inherit Qref;inherit Sref;"
                                    init_fnc = "/*Begin code section*/
S_PQref = 0;
/*End code section*/"
                                    no_feed_inputs = "[\'\']"
                                    no_feed_outputs = "[\'\']"
                                    out_terminal_dimensions = "inherit;inherit"
                                    out_terminal_dimensions_str = "P inherit;Q inherit"
                                    out_terminal_labels = "False;False;"
                                    out_terminal_properties = "inherit P;inherit Q;"
                                    output_fnc = "/*Begin code section*/
//-----------------------------------------------------------------------------
// Limit Power with P, Q, or pf priority
//-----------------------------------------------------------------------------
S_PQref = sqrt(Pref*Pref+Qref*Qref);

if (S_PQref > Sref) {
    P = (Pref/S_PQref)*Sref;
    Q = (Qref/S_PQref)*Sref;
} else {
    P = Pref;
    Q = Qref;
}
/*End code section*/"
                                }
                                [
                                    position = 8192, 8192
                                    size = 48, 64
                                ]

                                port Pref {
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8088, 8112
                                    rotation = right
                                ]

                                port Qref {
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8040, 8192
                                ]

                                port Sref {
                                    position = left:3
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8088, 8272
                                    rotation = left
                                ]

                                port P {
                                    position = right:1
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8280, 8120
                                    rotation = left
                                ]

                                port Q {
                                    position = right:2
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8280, 8272
                                    rotation = right
                                ]

                                connect "S limiting over PQ.P" P as Connection3
                                connect "S limiting over PQ.Pref" Pref as Connection5
                                connect "S limiting over PQ.Q" Q as Connection2
                                connect "S limiting over PQ.Qref" Qref as Connection1
                                connect "S limiting over PQ.Sref" Sref as Connection4
                            }
                            [
                                position = 8096, 8264
                                size = 56, 184
                            ]

                            component Subsystem priority_PQlim {
                                layout = dynamic
                                component gen_c_function "PQ limiting with priority" {
                                    global_variables = "real signQ;real signP;real Sref;"
                                    in_terminal_dimensions = "inherit;inherit;inherit"
                                    in_terminal_dimensions_str = "Pref inherit;Qref inherit;Smax inherit"
                                    in_terminal_labels = "False;False;False;"
                                    in_terminal_properties = "inherit Pref;inherit Qref;inherit Smax;"
                                    init_fnc = "/*Begin code section*/
Sref = 0;
/*End code section*/"
                                    no_feed_inputs = "[\'\']"
                                    no_feed_outputs = "[\'\']"
                                    out_terminal_dimensions = "inherit;inherit;inherit"
                                    out_terminal_dimensions_str = "P inherit;Q inherit;S inherit"
                                    out_terminal_labels = "False;False;False;"
                                    out_terminal_properties = "inherit P;inherit Q;inherit S;"
                                    output_fnc = "/*Begin code section*/
//-----------------------------------------------------------------------------
// Limit Power with P, Q, or pf priority
//-----------------------------------------------------------------------------
Sref = sqrt(Pref*Pref+Qref*Qref);

if (Qref>=0) signQ = 1;
else signQ = -1;
if (Pref>=0) signP = 1;
else signP = -1;

if (Sref <= Smax) {
    S = Sref;
    P = Pref;
    Q = Qref;
} else {
    S = Smax;
    if (type==1) {
        // P priority
        if (fabs(Pref) > Smax) {
            P = signP*Smax;
            Q = 0;
        } else {
            P = Pref;
            Q = signQ*sqrt(Smax*Smax - Pref*Pref);
        }
    } else if (type == 2) {
        // Q priority
        if (fabs(Qref) > Smax) {
            Q = signQ*Smax;
            P = 0;
        } else {
            Q = Qref;
            P = signP*sqrt(Smax*Smax-Qref*Qref);
        }
    } else {
        // Preserve Power Factor
        P = (Pref/Sref)*Smax;
        Q = (Qref/Sref)*Smax;
    }
}
/*End code section*/"
                                    parameters = "real type;"
                                }
                                [
                                    position = 8192, 8192
                                    size = 0, 0
                                ]

                                port Pref {
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8096, 8128
                                    rotation = right
                                ]

                                port Qref {
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8032, 8192
                                ]

                                port Smax {
                                    position = left:3
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8096, 8272
                                    rotation = left
                                ]

                                port P {
                                    position = right:1
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8304, 8128
                                    rotation = left
                                ]

                                port Q {
                                    position = right:2
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8368, 8192
                                ]

                                port S {
                                    position = right:3
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8304, 8272
                                    rotation = right
                                ]

                                connect "PQ limiting with priority.P" P as Connection5
                                connect "PQ limiting with priority.Pref" Pref as Connection2
                                connect "PQ limiting with priority.Q" Q as Connection6
                                connect "PQ limiting with priority.Qref" Qref as Connection3
                                connect "PQ limiting with priority.S" S as Connection4
                                connect "PQ limiting with priority.Smax" Smax as Connection1
                            }
                            [
                                position = 7872, 8264
                                size = 56, 184
                            ]

                            port Qlim {
                                position = right:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8280, 8336
                            ]

                            port Plim {
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8280, 8192
                            ]

                            port Pref {
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7752, 8192
                            ]

                            port Qref {
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7752, 8264
                            ]

                            port Smax {
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7752, 8336
                            ]

                            connect "P rate limit.out" limS_overPQ.Pref as Connection166
                            connect "P rate limit.in" priority_PQlim.P as Connection158
                            connect Plim "Unit Delay1.out" as Connection161
                            connect Pref priority_PQlim.Pref as Connection155
                            connect "Q rate limit.out" limS_overPQ.Qref as Connection162
                            connect "Q rate limit.in" priority_PQlim.Q as Connection159
                            connect Qref priority_PQlim.Qref as Connection156
                            connect "S rate limit.out" limS_overPQ.Sref as Connection165
                            connect "S rate limit.in" priority_PQlim.S as Connection157
                            connect Smax priority_PQlim.Smax as Connection154
                            connect "Unit Delay1.in" limS_overPQ.P as Connection164
                            connect "Unit Delay2.out" Qlim as Connection160
                            connect "Unit Delay2.in" limS_overPQ.Q as Connection163

                            type = "1.0"

                            mask {
                                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">Generate Power reference respecting limits defined by maximum apparent power and type of priority.</span></p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">Choose type parameter to define the behaviour of the block on saturation: Type=0 preserves power factor, Type=1 prioritizes Active Power, Type=2 prioritizes reactive power.</span></p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">Limited power outputs \"Plim\" and \"Qlim\" have one sample delay and can be used for higher level controller anti-windup purposes.</span></p></body></html>"

                                type {
                                    label = "Priority type"
                                    widget = edit
                                    type = generic
                                    default_value = "2.0"
                                }

                                ratemax {
                                    label = "Max power rate"
                                    widget = edit
                                    type = generic
                                    default_value = "powerRate"
                                    unit = "pu/s"
                                }

                                CODE open
                                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                                
                                    dialog = RegularComponentPropertiesDialog(
                                        component=component,
                                        property_container=component.masks[-1],
                                        current_diagram=current_diagram
                                    )
                                    dialog.exec_()
                                
                                ENDCODE
                            }
                        }
                        [
                            position = 7248, 8040
                            rotation = right
                            size = 64, 96
                        ]

                        component Subsystem "Island detection (modified SFS)" {
                            layout = dynamic
                            component src_constant Constant6 {
                                execution_rate = "Ts"
                                value = "1.0"
                            }
                            [
                                position = 8048, 8216
                                hide_name = True
                            ]

                            component gen_sum Sum11 {
                                signs = "+-"
                            }
                            [
                                position = 8136, 8160
                                hide_name = True
                            ]

                            component src_constant Constant7 {
                                execution_rate = "Ts"
                                value = "k"
                            }
                            [
                                position = 8128, 8224
                                hide_name = True
                            ]

                            component gen_gain Gain6 {
                                gain = "fn*np.pi/2"
                            }
                            [
                                position = 8320, 8168
                                hide_name = True
                            ]

                            component gen_product Product1 {
                                signs = "**"
                            }
                            [
                                position = 8248, 8168
                                hide_name = True
                            ]

                            port "inv freq" {
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8048, 8152
                            ]

                            port "phase shift" {
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8384, 8168
                            ]

                            connect Constant6.out Sum11.in1 as Connection2223
                            connect Constant7.out Product1.in1 as Connection2226
                            connect Gain6.in Product1.out as Connection2227
                            connect Gain6.out "phase shift" as Connection2229
                            connect Sum11.out Product1.in as Connection2228
                            connect Sum11.in "inv freq" as Connection2230
                        }
                        [
                            position = 7768, 8472
                            size = 168, 56
                        ]

                        component "core/Edge Detection" "Edge Detection1" {
                        }
                        [
                            position = 7696, 7904
                            hide_name = True
                            size = 32, 32
                        ]

                        component Subsystem Current_ref {
                            layout = dynamic
                            component gen_limiter Limit3 {
                                lower_limit = "0.01"
                            }
                            [
                                position = 7464, 8280
                                hide_name = True
                            ]

                            component gen_product Product3 {
                            }
                            [
                                position = 7496, 7992
                                hide_name = True
                            ]

                            component gen_product Product5 {
                            }
                            [
                                position = 7496, 8136
                                hide_name = True
                            ]

                            component gen_sum Sum3 {
                                signs = "+-"
                            }
                            [
                                position = 7600, 8056
                                hide_name = True
                            ]

                            component gen_sum Sum4 {
                            }
                            [
                                position = 7600, 8144
                                hide_name = True
                            ]

                            component gen_product Product1 {
                                signs = "*/"
                            }
                            [
                                position = 7720, 8064
                                hide_name = True
                            ]

                            component gen_product Product6 {
                            }
                            [
                                position = 7496, 8208
                                hide_name = True
                            ]

                            component gen_product Product2 {
                                signs = "*/"
                            }
                            [
                                position = 7720, 8152
                                hide_name = True
                            ]

                            component gen_product Product4 {
                            }
                            [
                                position = 7496, 8064
                                hide_name = True
                            ]

                            component Subsystem squared_Vt {
                                layout = dynamic
                                component gen_product Product1 {
                                }
                                [
                                    position = 7872, 8136
                                    hide_name = True
                                ]

                                component gen_product Product2 {
                                }
                                [
                                    position = 7872, 8208
                                    hide_name = True
                                ]

                                component gen_sum Sum3 {
                                }
                                [
                                    position = 7960, 8168
                                    hide_name = True
                                ]

                                port Vd {
                                    position = right:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7760, 8128
                                    rotation = down
                                    scale = -1, 1
                                ]

                                port Vq {
                                    position = right:3
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7760, 8200
                                    rotation = down
                                    scale = -1, 1
                                ]

                                port Vt_p2 {
                                    label = "Vt^2"
                                    position = left:2
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8032, 8168
                                    rotation = down
                                    scale = -1, 1
                                ]

                                junction Junction136 sp
                                [
                                    position = 7808, 8128
                                ]

                                junction Junction137 sp
                                [
                                    position = 7808, 8200
                                ]

                                connect Junction136 Product1.in as Connection2
                                connect Junction136 Vd as Connection1
                                connect Junction137 Vq as Connection3
                                connect Product1.in1 Junction136 as Connection4
                                connect Product2.in Junction137 as Connection6
                                connect Product2.in1 Junction137 as Connection5
                                connect Sum3.in Product1.out as Connection8
                                connect Sum3.in1 Product2.out as Connection9
                                connect Sum3.out Vt_p2 as Connection7
                            }
                            [
                                position = 7352, 8280
                                scale = -1, 1
                                size = 48, 56
                            ]

                            port P_ref {
                                position = right:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7200, 8128
                                rotation = down
                                scale = -1, 1
                            ]

                            port Q_ref {
                                position = right:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7200, 8200
                                rotation = down
                                scale = -1, 1
                            ]

                            port Id_ref {
                                position = left:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7856, 8152
                                rotation = down
                                scale = -1, 1
                            ]

                            port Iq_ref {
                                position = left:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7856, 8064
                                rotation = down
                                scale = -1, 1
                            ]

                            port Vq {
                                position = right:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7200, 7984
                                rotation = down
                                scale = -1, 1
                            ]

                            port Vd {
                                position = right:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7200, 8056
                                rotation = down
                                scale = -1, 1
                            ]

                            junction Junction139 sp
                            [
                                position = 7400, 8128
                            ]

                            junction Junction141 sp
                            [
                                position = 7392, 8200
                            ]

                            junction Junction142 sp
                            [
                                position = 7336, 8056
                            ]

                            junction Junction143 sp
                            [
                                position = 7352, 7984
                            ]

                            junction Junction150 sp
                            [
                                position = 7304, 7984
                            ]

                            junction Junction151 sp
                            [
                                position = 7288, 8056
                            ]

                            junction Junction152 sp
                            [
                                position = 7656, 8160
                            ]

                            connect Iq_ref Product1.out as Connection78
                            connect Junction139 P_ref as Connection53
                            connect Junction141 Q_ref as Connection11
                            connect Junction142 Junction151 as Connection58
                            connect Junction143 Junction150 as Connection55
                            connect Junction143 Product3.in as Connection13
                            connect Junction150 Vq as Connection56
                            connect Junction151 Vd as Connection59
                            connect Junction152 Product2.in1 as Connection76
                            connect Limit3.out Junction152 as Connection77
                            connect Limit3.in squared_Vt.Vt_p2 as Connection74
                            connect Product1.in1 Junction152 as Connection75
                            connect Product1.in Sum3.out as Connection23
                            connect Product2.out Id_ref as Connection79
                            connect Product2.in Sum4.out as Connection26
                            connect Product3.in1 Junction139 as Connection27
                            connect Product3.out Sum3.in as Connection28
                            connect Product4.in1 Junction141 as Connection29
                            connect Product4.in Junction142 as Connection30
                            connect Product4.out Sum3.in1 as Connection31
                            connect Product5.in Junction139 as Connection32
                            connect Product5.in1 Junction142 as Connection33
                            connect Product5.out Sum4.in as Connection34
                            connect Product6.in Junction141 as Connection35
                            connect Product6.in1 Junction143 as Connection36
                            connect Product6.out Sum4.in1 as Connection37
                            connect squared_Vt.Vq Junction150 as Connection57
                            connect squared_Vt.Vd Junction151 as Connection60
                        }
                        [
                            position = 7544, 8168
                            scale = -1, 1
                            size = 80, 184
                        ]

                        component "core/Edge Detection" "Edge Detection2" {
                        }
                        [
                            position = 7696, 7960
                            hide_name = True
                            size = 32, 32
                        ]

                        port Vq {
                            position = right:11
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7336, 8192
                            rotation = down
                            scale = -1, 1
                        ]

                        port Vd {
                            position = right:10
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7336, 8240
                            rotation = down
                            scale = -1, 1
                        ]

                        port Id {
                            position = right:12
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7696, 8144
                            rotation = down
                            scale = -1, 1
                        ]

                        port Iq {
                            position = right:13
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7696, 8192
                            rotation = down
                            scale = -1, 1
                        ]

                        port f {
                            position = right:14
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7696, 8288
                            rotation = down
                            scale = -1, 1
                        ]

                        port Vdc {
                            position = top:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7888, 7952
                            rotation = left
                            scale = 1, -1
                        ]

                        port wt_ess {
                            position = right:15
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7744, 8400
                            rotation = down
                            scale = -1, 1
                        ]

                        port wt {
                            position = left:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8040, 8408
                            rotation = down
                            scale = -1, 1
                        ]

                        port md {
                            position = left:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8040, 8096
                            rotation = down
                            scale = -1, 1
                        ]

                        port mq {
                            position = left:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8040, 8288
                            rotation = down
                            scale = -1, 1
                        ]

                        port On {
                            position = top:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7632, 7960
                            rotation = down
                            scale = -1, 1
                        ]

                        port Vmode {
                            position = top:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7632, 7904
                            rotation = down
                            scale = -1, 1
                        ]

                        tag Goto18 {
                            value = "f_ess"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7792, 8264
                            hide_name = True
                            size = 60, 20
                        ]

                        tag From167 {
                            value = "Pref"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7112, 7864
                            hide_name = True
                            size = 60, 20
                        ]

                        tag Goto19 {
                            value = "Vd_ess"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7432, 8216
                            hide_name = True
                            size = 60, 20
                        ]

                        tag From166 {
                            value = "f_ess"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7592, 8472
                            hide_name = True
                            size = 0, 0
                        ]

                        tag From168 {
                            value = "Qref"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7112, 7904
                            hide_name = True
                            size = 60, 20
                        ]

                        tag Goto20 {
                            value = "Vq_ess"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7432, 8168
                            hide_name = True
                            size = 60, 20
                        ]

                        tag From151 {
                            value = "Vq_ess"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7920, 8000
                            rotation = right
                            hide_name = True
                            size = 58, 20
                        ]

                        tag From152 {
                            value = "Vd_ess"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7952, 8000
                            rotation = right
                            hide_name = True
                            size = 60, 20
                        ]

                        junction Junction1 sp
                        [
                            position = 7736, 8288
                        ]

                        junction Junction2 sp
                        [
                            position = 7376, 8192
                        ]

                        junction Junction3 sp
                        [
                            position = 7376, 8240
                        ]

                        junction Junction6 sp
                        [
                            position = 7616, 8240
                        ]

                        junction Junction7 sp
                        [
                            position = 7616, 8096
                        ]

                        junction Junction8 sp
                        [
                            position = 7464, 8096
                        ]

                        junction Junction9 sp
                        [
                            position = 7424, 8144
                        ]

                        connect Constant1.out Limit_PQref.Smax as Connection2566
                        connect Current_ref.Vq Junction2 as Connection2308
                        connect Current_ref.P_ref Junction8 as Connection2554
                        connect Current_ref.Q_ref Junction9 as Connection2557
                        connect "Dq current controller.Id" Id as Connection2287
                        connect "Dq current controller.Iq" Iq as Connection2290
                        connect "Dq current controller.f" Junction1 as Connection2297
                        connect "Dq current controller.Iq_ref" Junction6 as Connection2332
                        connect "Dq current controller.Id_ref" Junction7 as Connection2335
                        connect "Edge Detection1.Out1" "Logical operator1.in" as Connection2510
                        connect "Edge Detection1.In1" Vmode as Connection2513
                        connect "Edge Detection2.Out1" "Logical operator1.in1" as Connection2512
                        connect "Edge Detection2.In1" On as Connection2514
                        connect From151 "Dq current controller.Vq" as Connection1839
                        connect From152 "Dq current controller.Vd" as Connection1840
                        connect From166 "Island detection (modified SFS).inv freq" as Connection2232
                        connect From168 Gain2.in as Connection2542
                        connect Gain1.in From167 as Connection2541
                        connect Gain2.out Limit_PQref.Qref as Connection2567
                        [
                            position = 0, 0
                        ]
                        connect Goto18 Junction1 as Connection2299
                        connect Goto19 Junction3 as Connection2313
                        connect Goto20 Junction2 as Connection2310
                        connect Idref.in Junction7 as Connection2337
                        connect Iqref.in Junction6 as Connection2334
                        connect Junction1 f as Connection2298
                        connect Junction2 Vq as Connection2309
                        connect Junction3 Current_ref.Vd as Connection2312
                        connect Junction6 Current_ref.Iq_ref as Connection2333
                        connect Junction7 Current_ref.Id_ref as Connection2336
                        connect Junction8 Pref.in as Connection2555
                        connect Junction9 Qref.in as Connection2558
                        connect Limit_PQref.Pref Gain1.out as Connection2568
                        [
                            position = 0, 0
                        ]
                        connect Limit_PQref.Plim Junction8 as Connection2556
                        connect Limit_PQref.Qlim Junction9 as Connection2559
                        connect "Logical operator1.out" "Dq current controller.reset" as Connection2515
                        connect Sum12.in1 "Island detection (modified SFS).phase shift" as Connection2231
                        connect Sum12.out wt as Connection2291
                        connect Vd Junction3 as Connection2311
                        connect Vdc "Dq current controller.Vdc" as Connection2432
                        connect md "Dq current controller.m_d" as Connection2295
                        connect mq "Dq current controller.m_q" as Connection2296
                        connect wt_ess Sum12.in as Connection2434
                    }
                    [
                        position = 8216, 8384
                        scale = -1, 1
                        size = 120, 200
                    ]

                    component Subsystem Power_Meas {
                        layout = dynamic
                        component gen_gain Gain3 {
                            gain = "Sn"
                        }
                        [
                            position = 8336, 8256
                            rotation = right
                            hide_name = True
                        ]

                        component gen_gain Gain1 {
                            gain = "Sn"
                        }
                        [
                            position = 8272, 8112
                            rotation = left
                            hide_name = True
                        ]

                        component gen_gain Gain2 {
                            gain = "Sn"
                        }
                        [
                            position = 8336, 8112
                            rotation = left
                            hide_name = True
                        ]

                        component Subsystem Power_Meas_DQ {
                            layout = dynamic
                            component gen_product Product1 {
                            }
                            [
                                position = 8024, 8064
                                hide_name = True
                            ]

                            component gen_product Product3 {
                            }
                            [
                                position = 8024, 8320
                                hide_name = True
                            ]

                            component gen_c_function S_and_pf {
                                in_terminal_dimensions = "inherit;inherit"
                                in_terminal_dimensions_str = "P inherit;Q inherit"
                                in_terminal_labels = "False;False;"
                                in_terminal_properties = "real P;inherit Q;"
                                init_fnc = "/*Begin code section*/
P = 0;
Q = 0;
S = 0;
pf = 0;
/*End code section*/"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions = "inherit;inherit"
                                out_terminal_dimensions_str = "S inherit;pf inherit"
                                out_terminal_labels = "False;False;"
                                out_terminal_properties = "inherit S;inherit pf;"
                                output_fnc = "/*Begin code section*/
S = sqrt(P*P+Q*Q);
if(S>0){
    pf = P/S;
}
else{
    pf = 0;
}
/*End code section*/"
                            }
                            [
                                position = 8448, 8192
                                size = 48, 48
                            ]

                            component gen_product Product4 {
                            }
                            [
                                position = 8024, 8232
                                hide_name = True
                            ]

                            component gen_z_domain_transfer LPF_Q {
                                a_coeff = "[1.0/(2*np.pi*fc_Q),1]"
                                b_coeff = "1"
                                domain = "S-domain"
                                method = "Bilinear"
                            }
                            [
                                position = 8264, 8272
                            ]

                            component gen_product Product2 {
                            }
                            [
                                position = 8024, 8152
                                hide_name = True
                            ]

                            component gen_sum Sum1 {
                            }
                            [
                                position = 8128, 8112
                                hide_name = True
                            ]

                            component gen_sum Sum2 {
                                signs = "+-"
                            }
                            [
                                position = 8128, 8272
                                hide_name = True
                            ]

                            component gen_z_domain_transfer LPF_P {
                                a_coeff = "[1.0/(2*np.pi*fc_P),1]"
                                b_coeff = "1"
                                domain = "S-domain"
                                method = "Bilinear"
                            }
                            [
                                position = 8264, 8112
                            ]

                            port Vd {
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7808, 8056
                            ]

                            port Vq {
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7808, 8144
                            ]

                            port Id {
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7808, 8240
                            ]

                            port Iq {
                                position = left:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7808, 8328
                            ]

                            port P {
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8368, 8112
                            ]

                            port Q {
                                position = right:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8368, 8272
                            ]

                            port S {
                                position = right:3
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8520, 8144
                            ]

                            port pf {
                                position = right:4
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8520, 8240
                            ]

                            junction Junction1 sp
                            [
                                position = 7920, 8240
                            ]

                            junction Junction2 sp
                            [
                                position = 7928, 8328
                            ]

                            junction Junction3 sp
                            [
                                position = 7944, 8144
                            ]

                            junction Junction4 sp
                            [
                                position = 7960, 8056
                            ]

                            junction Junction5 sp
                            [
                                position = 8320, 8112
                            ]

                            junction Junction6 sp
                            [
                                position = 8320, 8272
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = Vd*Id+Vq*Iq;</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = Vq*Id-Vd*Iq;</p></body></html> ENDCOMMENT 
                            [
                                position = 7960, 7968
                            ]

                            connect Junction1 Id as Connection49
                            connect Junction1 Product4.in1 as Connection24
                            connect Junction2 Iq as Connection52
                            connect Junction2 Product3.in1 as Connection27
                            connect Junction3 Product2.in as Connection32
                            connect Junction3 Vq as Connection53
                            connect Junction4 Product1.in as Connection35
                            connect Junction4 Vd as Connection50
                            connect Junction5 LPF_P.out as Connection44
                            connect Junction5 P as Connection55
                            connect Junction6 LPF_Q.out as Connection47
                            connect Junction6 Q as Connection56
                            connect Product1.in1 Junction1 as Connection25
                            connect Product2.in1 Junction2 as Connection28
                            connect Product3.in Junction4 as Connection36
                            connect Product4.in Junction3 as Connection33
                            connect S_and_pf.P Junction5 as Connection45
                            connect S_and_pf.Q Junction6 as Connection48
                            connect S_and_pf.S S as Connection51
                            connect S_and_pf.pf pf as Connection54
                            connect Sum1.out LPF_P.in as Connection59
                            connect Sum1.in Product1.out as Connection29
                            connect Sum1.in1 Product2.out as Connection30
                            connect Sum2.out LPF_Q.in as Connection58
                            connect Sum2.in1 Product3.out as Connection38
                            connect Sum2.in Product4.out as Connection37

                            mask {
                                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Power measurement in DQ frame with inputs and outputs in per unit.</p><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Zero component is not considered in the power calculation, thus this measurement is not suitable for unbalanced systems.</p></body></html>"

                                fc_P {
                                    label = "Active power low pass filter cut-off freq."
                                    widget = edit
                                    type = generic
                                    default_value = "1.0"
                                    unit = "Hz"
                                }

                                fc_Q {
                                    label = "Reactive power low pass filter cut-off freq."
                                    widget = edit
                                    type = generic
                                    default_value = "1.0"
                                    unit = "Hz"
                                }

                                CODE open
                                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                                
                                    dialog = RegularComponentPropertiesDialog(
                                        component=component,
                                        property_container=component.masks[-1],
                                        current_diagram=current_diagram
                                    )
                                    dialog.exec_()
                                
                                ENDCODE
                            }
                        }
                        [
                            position = 8184, 8208
                            size = 72, 144
                        ]

                        port Vd {
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8096, 8112
                            rotation = right
                        ]

                        port Vq {
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8040, 8112
                            rotation = right
                        ]

                        port Id {
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8040, 8320
                            rotation = left
                        ]

                        port Iq {
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8096, 8320
                            rotation = left
                        ]

                        port P {
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8272, 8048
                            rotation = left
                        ]

                        port Q {
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8336, 8048
                            rotation = left
                        ]

                        port S {
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8336, 8320
                            rotation = right
                        ]

                        port pf {
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8272, 8320
                            rotation = right
                        ]

                        connect Gain2.out Q as Connection12
                        connect Gain3.out S as Connection14
                        connect P Gain1.out as Connection18
                        connect Power_Meas_DQ.S Gain3.in as Connection13
                        connect Power_Meas_DQ.Id Id as Connection3
                        connect Power_Meas_DQ.Iq Iq as Connection4
                        connect Power_Meas_DQ.Vd Vd as Connection1
                        connect Power_Meas_DQ.Vq Vq as Connection2
                        connect Power_Meas_DQ.pf pf as Connection8
                        connect Gain1.in Power_Meas_DQ.P as Connection25
                        connect Power_Meas_DQ.Q Gain2.in as Connection26
                    }
                    [
                        position = 8664, 8872
                        size = 80, 232
                    ]

                    component Subsystem ABCtoDQ {
                        layout = dynamic
                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8344, 8248
                            rotation = right
                            hide_name = True
                        ]

                        component gen_gain Gain1 {
                            gain = "(Vn/Sn)*((3.0/2.0)**0.5)"
                        }
                        [
                            position = 8336, 8120
                            rotation = left
                            hide_name = True
                        ]

                        component gen_gain Gain2 {
                            gain = "(Vn/Sn)*((3.0/2.0)**0.5)"
                        }
                        [
                            position = 8384, 8120
                            rotation = left
                            hide_name = True
                        ]

                        component "core/abc to dq" "abc to dq1" {
                        }
                        [
                            position = 8256, 8176
                            size = 48, 80
                        ]

                        port A {
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8200, 8056
                            rotation = right
                        ]

                        port B {
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8136, 8056
                            rotation = right
                        ]

                        port C {
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8136, 8288
                            rotation = left
                        ]

                        port wt {
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8192, 8288
                            rotation = left
                        ]

                        port d {
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8336, 8016
                            rotation = left
                        ]

                        port q {
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8016
                            rotation = left
                        ]

                        connect "abc to dq1.va" A as Connection2337
                        connect B "abc to dq1.vb" as Connection2338
                        connect "abc to dq1.vc" C as Connection2339
                        connect wt "abc to dq1.wt" as Connection2340
                        connect "abc to dq1.d_axis" Gain1.in as Connection2341
                        connect "abc to dq1.q_axis" Gain2.in as Connection2342
                        connect "abc to dq1.zero_axis" Termination1.in as Connection2343
                        connect q Gain2.out as Connection2344
                        [
                            position = 0, 0
                        ]
                        connect d Gain1.out as Connection2345
                        [
                            position = 0, 0
                        ]
                    }
                    [
                        position = 7624, 8904
                        size = 72, 192
                    ]

                    component Subsystem Vmode_control {
                        layout = dynamic
                        component gen_sum Sum3 {
                        }
                        [
                            position = 6968, 8096
                            hide_name = True
                        ]

                        component gen_gain Gain2 {
                            gain = "1.0/fn"
                        }
                        [
                            position = 6744, 8360
                            hide_name = True
                        ]

                        component sys_signal_switch "Signal switch1" {
                            criterion = "ctrl > threshold"
                            threshold = "0.5"
                        }
                        [
                            position = 6808, 8048
                            hide_name = True
                        ]

                        component gen_rate_limiter "Rate Limiter2" {
                            falling_limit = "f_fall"
                            rising_limit = "f_rise"
                        }
                        [
                            position = 6816, 8360
                            hide_name = True
                        ]

                        component gen_gain Gain1 {
                            gain = "1.0/Vn"
                        }
                        [
                            position = 6728, 8032
                            hide_name = True
                        ]

                        component src_constant Constant1 {
                            execution_rate = "Ts"
                            value = "0.0"
                        }
                        [
                            position = 6704, 8088
                            hide_name = True
                        ]

                        component gen_rate_limiter "Rate Limiter1" {
                            falling_limit = "V_fall"
                            rising_limit = "V_rise"
                        }
                        [
                            position = 6888, 8048
                            hide_name = True
                        ]

                        component gen_probe Vt_ref {
                        }
                        [
                            position = 7040, 8048
                            rotation = left
                            scale = -1, 1
                        ]

                        component gen_probe Id_ref {
                        }
                        [
                            position = 7208, 8080
                            rotation = left
                            scale = -1, 1
                        ]

                        component gen_logic_op "Logical operator1" {
                            operator = "OR"
                        }
                        [
                            position = 7312, 7912
                            hide_name = True
                        ]

                        component Subsystem Current_ref {
                            layout = dynamic
                            component gen_sum Sum4 {
                                signs = "+-"
                            }
                            [
                                position = 7848, 8096
                                hide_name = True
                            ]

                            component Subsystem PI {
                                layout = dynamic
                                component gen_sum Sum7 {
                                }
                                [
                                    position = 8088, 8224
                                    hide_name = True
                                ]

                                component gen_limiter Limit1 {
                                    lower_limit = "lowLim"
                                    upper_limit = "upLim"
                                }
                                [
                                    position = 8408, 8224
                                    hide_name = True
                                ]

                                component gen_sum Sum5 {
                                }
                                [
                                    position = 8320, 8224
                                    hide_name = True
                                ]

                                component gen_sum Sum6 {
                                    signs = "-+"
                                }
                                [
                                    position = 8320, 8312
                                    hide_name = True
                                    scale = -1, 1
                                ]

                                component gen_integrator Integrator1 {
                                    init_value = "out0"
                                    limit_lower = "-1"
                                    limit_upper = "1"
                                    show_reset = "either"
                                }
                                [
                                    position = 8216, 8232
                                ]

                                component gen_gain Kb {
                                    gain = "1.0"
                                }
                                [
                                    position = 8216, 8312
                                    scale = -1, 1
                                ]

                                component gen_gain Ki {
                                    gain = "Ki"
                                }
                                [
                                    position = 7976, 8216
                                ]

                                component gen_gain Kp {
                                    gain = "Kp"
                                }
                                [
                                    position = 8128, 8128
                                ]

                                port In {
                                    label = "In"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7888, 8168
                                ]

                                port Out {
                                    label = "Out"
                                    position = right:1
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8472, 8224
                                ]

                                port reset {
                                    position = top:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8136, 8256
                                ]

                                junction Junction2 sp
                                [
                                    position = 8368, 8224
                                ]

                                junction Junction3 sp
                                [
                                    position = 8440, 8224
                                ]

                                junction Junction4 sp
                                [
                                    position = 7920, 8168
                                ]

                                connect Junction2 Limit1.in as Connection45
                                connect Junction3 Out as Connection48
                                connect Junction4 In as Connection67
                                connect Kb.in Sum6.out as Connection50
                                connect Ki.in Junction4 as Connection68
                                connect Ki.out Sum7.in as Connection64
                                connect Kp.in Junction4 as Connection66
                                connect Kp.out Sum5.in as Connection63
                                connect Limit1.out Junction3 as Connection47
                                connect Sum5.in1 Integrator1.out as Connection5
                                connect Sum5.out Junction2 as Connection44
                                connect Sum6.in Junction2 as Connection46
                                connect Sum6.in1 Junction3 as Connection49
                                connect Sum7.out Integrator1.in as Connection52
                                connect Sum7.in1 Kb.out as Connection53
                                connect reset Integrator1.reset as Connection62

                                Ki = "VmodeIdRef_Ki"
                                Kp = "VmodeIdRef_Kp"
                                lowLim = "-1.00"
                                out0 = "(((Vn*OutputFilterFc)**2.0*2*np.pi*L)/(Sn*fn))/(Resr**2.0+((2.0*np.pi*L*OutputFilterFc**2.0)/fn)**2.0)"
                                upLim = "1.00"

                                mask {
                                    description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">PI controller</span></p></body></html>"

                                    Kp {
                                        label = "Kp"
                                        widget = edit
                                        type = generic
                                        default_value = "1.0"
                                        group = "General"
                                    }

                                    Ki {
                                        label = "Ki"
                                        widget = edit
                                        type = generic
                                        default_value = "5.0"
                                        group = "General"
                                    }

                                    upLim {
                                        label = "Upper limit"
                                        widget = edit
                                        type = generic
                                        default_value = "100.0"
                                        group = "General"
                                    }

                                    lowLim {
                                        label = "Lower limit"
                                        widget = edit
                                        type = generic
                                        default_value = "0.0"
                                        group = "General"
                                    }

                                    out0 {
                                        label = "Integrator initial output"
                                        widget = edit
                                        type = generic
                                        default_value = "fnom"
                                        group = "General"
                                    }

                                    CODE open
                                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                                    
                                        dialog = RegularComponentPropertiesDialog(
                                            component=component,
                                            property_container=component.masks[-1],
                                            current_diagram=current_diagram
                                        )
                                        dialog.exec_()
                                    
                                    ENDCODE
                                }
                            }
                            [
                                position = 7960, 8096
                                size = 64, 48
                            ]

                            port "id ref" {
                                position = left:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8096
                                rotation = down
                                scale = -1, 1
                            ]

                            port vd {
                                position = right:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7768, 8136
                                rotation = down
                                scale = -1, 1
                            ]

                            port enable {
                                position = top:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7920, 8048
                                rotation = down
                                scale = -1, 1
                            ]

                            port "vt ref" {
                                position = right:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7768, 8088
                                rotation = down
                                scale = -1, 1
                            ]

                            connect PI.In Sum4.out as Connection1668
                            connect PI.reset enable as Connection1669
                            connect PI.Out "id ref" as Connection1670
                            connect Sum4.in1 vd as Connection1663
                            connect Sum4.in "vt ref" as Connection1667
                        }
                        [
                            position = 7128, 8128
                            scale = -1, 1
                            size = 88, 96
                        ]

                        component "core/Edge Detection" "Edge Detection1" {
                        }
                        [
                            position = 7208, 7904
                            hide_name = True
                            size = 32, 32
                        ]

                        component Subsystem "Inner dq current controller" {
                            layout = dynamic
                            component gen_product Product11 {
                                signs = "*/"
                            }
                            [
                                position = 7696, 7560
                                hide_name = True
                            ]

                            component gen_gain Gain5 {
                                gain = "Vmode_ovMod"
                            }
                            [
                                position = 7240, 7392
                                rotation = right
                                hide_name = True
                            ]

                            component gen_limiter Limit3 {
                                lower_limit = "0.01"
                            }
                            [
                                position = 7240, 7336
                                rotation = right
                                hide_name = True
                            ]

                            component gen_sum Sum15 {
                                signs = "-+"
                            }
                            [
                                position = 7312, 7552
                                rotation = down
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_gain Gain10 {
                                gain = "(Vn*(2.0/3.0)**0.5)/Vn_dc"
                            }
                            [
                                position = 7776, 7560
                                hide_name = True
                            ]

                            component src_constant Constant1 {
                                execution_rate = "Ts"
                                value = "0"
                            }
                            [
                                position = 7816, 7632
                                hide_name = True
                            ]

                            component Subsystem PI_d {
                                layout = dynamic
                                component gen_gain Kb {
                                    gain = "1.0"
                                }
                                [
                                    position = 8216, 8352
                                    scale = -1, 1
                                ]

                                component gen_limiter Limit1 {
                                    lower_limit = "lowLim"
                                    upper_limit = "upLim"
                                }
                                [
                                    position = 8408, 8232
                                    hide_name = True
                                ]

                                component gen_sum Sum6 {
                                    signs = "-+"
                                }
                                [
                                    position = 8320, 8352
                                    hide_name = True
                                    scale = -1, 1
                                ]

                                component gen_integrator Integrator1 {
                                    init_value = "out0"
                                    limit_lower = "-1"
                                    limit_upper = "1"
                                    show_reset = "either"
                                }
                                [
                                    position = 8216, 8240
                                ]

                                component gen_sum Sum5 {
                                }
                                [
                                    position = 8320, 8232
                                    hide_name = True
                                ]

                                component gen_sum Sum7 {
                                }
                                [
                                    position = 8088, 8224
                                    hide_name = True
                                ]

                                component gen_gain Kp {
                                    gain = "Kp"
                                }
                                [
                                    position = 8136, 8128
                                ]

                                component gen_gain Ki {
                                    gain = "Ki"
                                }
                                [
                                    position = 7984, 8216
                                ]

                                port In {
                                    label = "In"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7888, 8168
                                ]

                                port Out {
                                    label = "Out"
                                    position = right:1
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8472, 8232
                                ]

                                port reset {
                                    position = top:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8136, 8240
                                ]

                                junction Junction2 sp
                                [
                                    position = 8368, 8232
                                ]

                                junction Junction3 sp
                                [
                                    position = 8440, 8232
                                ]

                                junction Junction4 sp
                                [
                                    position = 7920, 8168
                                ]

                                connect Junction2 Limit1.in as Connection45
                                connect Junction3 Out as Connection48
                                connect Junction4 In as Connection67
                                connect Kb.in Sum6.out as Connection50
                                connect Ki.in Junction4 as Connection66
                                connect Kp.in Junction4 as Connection68
                                connect Kp.out Sum5.in as Connection63
                                connect Limit1.out Junction3 as Connection47
                                connect Sum5.in1 Integrator1.out as Connection5
                                connect Sum5.out Junction2 as Connection44
                                connect Sum6.in Junction2 as Connection46
                                connect Sum6.in1 Junction3 as Connection49
                                connect Sum7.out Integrator1.in as Connection52
                                connect Sum7.in1 Kb.out as Connection53
                                connect Sum7.in Ki.out as Connection64
                                connect reset Integrator1.reset as Connection62

                                Ki = "VmodeId_Ki"
                                Kp = "VmodeId_Kp"
                                lowLim = "-10.0"
                                out0 = "0.0"
                                upLim = "10.0"

                                mask {
                                    description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">PI controller</span></p></body></html>"

                                    Kp {
                                        label = "Kp"
                                        widget = edit
                                        type = generic
                                        default_value = "1.0"
                                        group = "General"
                                    }

                                    Ki {
                                        label = "Ki"
                                        widget = edit
                                        type = generic
                                        default_value = "5.0"
                                        group = "General"
                                    }

                                    upLim {
                                        label = "Upper limit"
                                        widget = edit
                                        type = generic
                                        default_value = "100.0"
                                        group = "General"
                                    }

                                    lowLim {
                                        label = "Lower limit"
                                        widget = edit
                                        type = generic
                                        default_value = "0.0"
                                        group = "General"
                                    }

                                    out0 {
                                        label = "Integrator initial output"
                                        widget = edit
                                        type = generic
                                        default_value = "fnom"
                                        group = "General"
                                    }

                                    CODE open
                                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                                    
                                        dialog = RegularComponentPropertiesDialog(
                                            component=component,
                                            property_container=component.masks[-1],
                                            current_diagram=current_diagram
                                        )
                                        dialog.exec_()
                                    
                                    ENDCODE
                                }
                            }
                            [
                                position = 7464, 7552
                                size = 64, 48
                            ]

                            port m_d {
                                position = left:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7896, 7560
                                rotation = down
                                scale = -1, 1
                            ]

                            port reset {
                                position = top:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7320, 7280
                                rotation = right
                                scale = -1, 1
                            ]

                            port m_q {
                                position = left:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7896, 7632
                                rotation = down
                                scale = -1, 1
                            ]

                            port Vdc {
                                position = top:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7240, 7280
                                rotation = right
                                scale = -1, 1
                            ]

                            port f {
                                position = right:5
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7160, 7664
                                rotation = down
                                scale = -1, 1
                            ]

                            port Id_ref {
                                position = right:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7160, 7544
                                rotation = down
                                scale = -1, 1
                            ]

                            port Id {
                                position = right:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7160, 7600
                                rotation = down
                                scale = -1, 1
                            ]

                            tag Goto20 {
                                value = "overMod"
                                scope = local
                                kind = sp
                                direction = in
                            }
                            [
                                position = 7240, 7472
                                rotation = right
                                hide_name = True
                                size = 60, 20
                            ]

                            tag Goto19 {
                                value = "f"
                                scope = local
                                kind = sp
                                direction = in
                            }
                            [
                                position = 7280, 7664
                                hide_name = True
                                size = 60, 20
                            ]

                            tag From139 {
                                value = "reset"
                                scope = local
                                kind = sp
                                direction = out
                            }
                            [
                                position = 7368, 7496
                                hide_name = True
                                size = 60, 20
                            ]

                            tag Goto21 {
                                value = "reset"
                                scope = local
                                kind = sp
                                direction = in
                            }
                            [
                                position = 7320, 7352
                                rotation = right
                                hide_name = True
                                size = 60, 20
                            ]

                            tag Goto17 {
                                value = "id"
                                scope = local
                                kind = sp
                                direction = in
                            }
                            [
                                position = 7272, 7600
                                hide_name = True
                                size = 60, 20
                            ]

                            tag From137 {
                                value = "overMod"
                                scope = local
                                kind = sp
                                direction = out
                            }
                            [
                                position = 7584, 7576
                                hide_name = True
                                size = 60, 20
                            ]

                            junction Junction173 sp
                            [
                                position = 7208, 7600
                            ]

                            connect Constant1.out m_q as Connection1849
                            connect From137 Product11.in1 as Connection1827
                            connect Goto17 Junction173 as Connection1807
                            connect Goto20 Gain5.out as Connection1826
                            connect Goto21 reset as Connection1830
                            connect Id Junction173 as Connection1805
                            connect Limit3.out Gain5.in as Connection1911
                            connect PI_d.reset From139 as Connection1899
                            connect PI_d.Out Product11.in as Connection1913
                            [
                                position = 0, 0
                                breakpoints = 7592, 7552
                            ]
                            connect PI_d.In Sum15.out as Connection1851
                            connect Product11.out Gain10.in as Connection1874
                            connect Sum15.in1 Id_ref as Connection276
                            connect Sum15.in Junction173 as Connection1813
                            connect Vdc Limit3.in as Connection1910
                            connect f Goto19 as Connection1822
                            connect m_d Gain10.out as Connection1914
                            [
                                position = 0, 0
                            ]
                        }
                        [
                            position = 7408, 8200
                            scale = -1, 1
                            size = 128, 192
                        ]

                        component Subsystem internal_frequency {
                            layout = dynamic
                            component gen_probe inn_wt {
                            }
                            [
                                position = 8408, 8136
                            ]

                            component gen_gain Gain1 {
                                gain = "fn"
                            }
                            [
                                position = 8192, 8216
                                hide_name = True
                            ]

                            component gen_sum Sum1 {
                                signs = "++"
                            }
                            [
                                position = 8112, 8216
                                hide_name = True
                            ]

                            component gen_probe inner_f {
                            }
                            [
                                position = 8280, 8144
                            ]

                            component Subsystem "Angle generator" {
                                layout = dynamic
                                component gen_c_function int_n_wrap {
                                    global_variables = "real out;"
                                    in_terminal_dimensions = "inherit"
                                    in_terminal_dimensions_str = "in inherit"
                                    in_terminal_labels = "False;"
                                    init_fnc = "/*Begin code section*/
out = 0;
in = 0;
/*End code section*/"
                                    no_feed_inputs = "[u\'\']"
                                    no_feed_outputs = "[u\'\']"
                                    out_terminal_dimensions = "inherit"
                                    out_terminal_dimensions_str = "output inherit"
                                    out_terminal_labels = "False;"
                                    out_terminal_properties = "inherit output;"
                                    output_fnc = "/*Begin code section*/
output = out+0.0;
/*End code section*/"
                                    update_fnc = "/*Begin code section*/
out += execution_rate*in;
if(in>=0.0){
    if(out >= 6.283185307179586)
    {
        out -= 6.283185307179586;
    }
}
else{
        if(out <= -6.283185307179586)
    {
        out += 6.283185307179586;
    }
}
/*End code section*/"
                                }
                                [
                                    position = 8088, 8080
                                    size = 0, 0
                                ]

                                component gen_gain Gain1 {
                                    gain = "2*np.pi"
                                }
                                [
                                    position = 8008, 8080
                                    hide_name = True
                                ]

                                port wt {
                                    position = right:1
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8168, 8080
                                ]

                                port f {
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7944, 8080
                                ]

                                connect Gain1.in f as Connection4
                                connect int_n_wrap.in Gain1.out as Connection3
                                connect wt int_n_wrap.output as Connection2
                            }
                            [
                                position = 8288, 8216
                                size = 48, 48
                            ]

                            port f_ref {
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8032, 8160
                            ]

                            port inner_wt {
                                label = "wt"
                                position = right:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8360, 8216
                            ]

                            port df_sync {
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8032, 8224
                            ]

                            junction Junction2 sp
                            [
                                position = 8328, 8216
                            ]

                            junction Junction3 sp
                            [
                                position = 8160, 8216
                            ]

                            connect "Angle generator.f" Gain1.out as Connection1138
                            connect "Angle generator.wt" Junction2 as Connection1135
                            connect Gain1.in Junction3 as Connection1148
                            connect Junction2 inner_wt as Connection1136
                            connect Junction3 inner_f.in as Connection1149
                            connect Sum1.out Junction3 as Connection1150
                            connect Sum1.in1 df_sync as Connection1121
                            connect f_ref Sum1.in as Connection1147
                            connect inn_wt.in Junction2 as Connection1137
                        }
                        [
                            position = 6912, 8392
                            size = 88, 104
                        ]

                        component "core/Edge Detection" "Edge Detection2" {
                        }
                        [
                            position = 7240, 7944
                            hide_name = True
                            size = 32, 32
                        ]

                        port Vdc {
                            position = top:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7456, 8056
                            rotation = right
                            scale = -1, 1
                        ]

                        port f {
                            position = right:15
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7256, 8272
                            rotation = down
                            scale = -1, 1
                        ]

                        port md {
                            position = left:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7528, 8120
                            rotation = down
                            scale = -1, 1
                        ]

                        port mq {
                            position = left:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7528, 8280
                            rotation = down
                            scale = -1, 1
                        ]

                        port wt {
                            position = left:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7024, 8392
                            scale = 1, -1
                        ]

                        port On {
                            position = top:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6752, 7976
                            rotation = down
                            scale = -1, 1
                        ]

                        port dV_match {
                            position = right:10
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6880, 8104
                            scale = 1, -1
                        ]

                        port df_sync {
                            position = right:16
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6792, 8424
                            scale = 1, -1
                        ]

                        port Vmode {
                            position = top:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7144, 7904
                            rotation = down
                            scale = -1, 1
                        ]

                        port Vd {
                            position = right:11
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6992, 8160
                            scale = 1, -1
                        ]

                        port Id {
                            position = right:14
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7256, 8200
                            rotation = down
                            scale = -1, 1
                        ]

                        tag From167 {
                            value = "Vref"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 6648, 8032
                            hide_name = True
                            size = 60, 20
                        ]

                        tag From96 {
                            value = "vmode"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7128, 8016
                            rotation = right
                            hide_name = True
                            size = 60, 20
                        ]

                        tag From169 {
                            value = "On"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7160, 7944
                            hide_name = True
                            size = 60, 20
                        ]

                        tag From168 {
                            value = "f_ref"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 6664, 8360
                            hide_name = True
                            size = 60, 20
                        ]

                        tag Goto19 {
                            value = "On"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 6872, 7976
                            hide_name = True
                            size = 60, 20
                        ]

                        tag Goto17 {
                            value = "vmode"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7448, 7912
                            hide_name = True
                            size = 60, 20
                        ]

                        junction Junction274 sp
                        [
                            position = 6808, 7976
                        ]

                        junction Junction279 sp
                        [
                            position = 7208, 8128
                        ]

                        junction Junction281 sp
                        [
                            position = 7040, 8096
                        ]

                        junction Junction282 sp
                        [
                            position = 7360, 7912
                        ]

                        connect "Current_ref.id ref" Junction279 as Connection2462
                        connect "Current_ref.vt ref" Junction281 as Connection2504
                        connect "Edge Detection1.Out1" "Logical operator1.in" as Connection2510
                        connect "Edge Detection2.Out1" "Logical operator1.in1" as Connection2512
                        connect From167 Gain1.in as Connection2409
                        connect From168 Gain2.in as Connection2411
                        connect From169 "Edge Detection2.In1" as Connection2511
                        connect From96 Current_ref.enable as Connection2371
                        connect Gain1.out "Signal switch1.in" as Connection2417
                        connect Gain2.out "Rate Limiter2.in" as Connection2412
                        connect Goto19 Junction274 as Connection2427
                        connect Id "Inner dq current controller.Id" as Connection2494
                        connect "Inner dq current controller.Id_ref" Junction279 as Connection2492
                        connect "Inner dq current controller.reset" Junction282 as Connection2515
                        connect "Inner dq current controller.Vdc" Vdc as Connection2491
                        connect Junction274 "Signal switch1.in2" as Connection2426
                        connect Junction279 Id_ref.in as Connection2461
                        connect Junction281 Vt_ref.in as Connection2505
                        connect Junction282 Goto17 as Connection2514
                        connect "Logical operator1.out" Junction282 as Connection2513
                        connect On Junction274 as Connection2425
                        connect "Rate Limiter2.out" internal_frequency.f_ref as Connection2405
                        connect "Signal switch1.in1" Constant1.out as Connection2467
                        connect "Signal switch1.out" "Rate Limiter1.in" as Connection2418
                        connect Sum3.out Junction281 as Connection2506
                        connect Sum3.in "Rate Limiter1.out" as Connection2503
                        connect Sum3.in1 dV_match as Connection2307
                        connect Vd Current_ref.vd as Connection2489
                        connect Vmode "Edge Detection1.In1" as Connection2509
                        connect df_sync internal_frequency.df_sync as Connection2507
                        connect f "Inner dq current controller.f" as Connection2490
                        connect md "Inner dq current controller.m_d" as Connection2480
                        connect mq "Inner dq current controller.m_q" as Connection2481
                        connect wt internal_frequency.inner_wt as Connection2396
                    }
                    [
                        position = 8208, 8720
                        scale = -1, 1
                        size = 120, 168
                    ]

                    component Subsystem Inv_Cab_SM {
                        layout = dynamic
                        component gen_c_function Inv_Cab_SM {
                            global_variables = "real lock1;real lock2;real from_grid_follow;"
                            in_terminal_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit"
                            in_terminal_dimensions_str = "On inherit;mode inherit;grid_locked inherit;v_match inherit;live_grid inherit;on_nominal inherit"
                            in_terminal_labels = "False;False;False;False;False;False;"
                            in_terminal_properties = "inherit On;inherit mode;inherit grid_locked;inherit v_match;inherit live_grid;inherit on_nominal;"
                            init_fnc = "/*Begin code section*/
lock1 = 0;
lock2 = 0;
/*End code section*/"
                            no_feed_inputs = "[\'\']"
                            no_feed_outputs = "[\'\']"
                            out_terminal_dimensions = "inherit;inherit;inherit;inherit"
                            out_terminal_dimensions_str = "control_mode inherit;Vmode inherit;synch inherit;contactor inherit"
                            out_terminal_labels = "False;False;False;False;"
                            out_terminal_properties = "real control_mode;inherit Vmode;inherit synch;inherit contactor;"
                            output_fnc = "/*Begin code section*/
if(On == 0){ //all off
    contactor = 0;
    synch = 0;
    Vmode = 1;
    lock1 = 0;
    lock2 = 0;
    control_mode = 0;
    from_grid_follow = 0;
}
else{
    if((mode == 0) && (lock1 == 0)){ //voltage mode
        lock2 = 0;
        if((on_nominal) || (from_grid_follow)){
            Vmode = 1;
            contactor = 1;
            synch = 0;
            lock1 = 1;
            control_mode = 1;
            from_grid_follow = 0;
        }
        else{
            Vmode = 1;
            contactor = 0;
            synch = 0;
            control_mode = 0;
        }
    }
    else{
        if((mode == 1) && (lock2 ==0)){ //current mode
            lock1 = 0;
            if((on_nominal) &&  (live_grid == 1)){
                synch = 1;
                if((grid_locked == 1) && (v_match == 1)){
                    Vmode = 0;
                    contactor = 1;
                    synch = 0;
                    lock2 = 1;
                    control_mode = 2;
                    from_grid_follow = 1;
                }
                else{
                    Vmode = 1;
                    contactor = 0;
                    control_mode = 0;
                }
            }
            else{
                Vmode = 1;
                contactor = 0;
                synch = 0;
                control_mode = 0;
            }
        }
    }
}
/*End code section*/"
                        }
                        [
                            position = 8176, 8240
                            size = 144, 112
                        ]

                        component gen_digital_probe V_mode {
                        }
                        [
                            position = 8408, 8168
                            rotation = right
                            scale = -1, -1
                        ]

                        component gen_digital_probe CB_status {
                        }
                        [
                            position = 8408, 8312
                            rotation = right
                        ]

                        component gen_digital_probe synch {
                        }
                        [
                            position = 8528, 8200
                            rotation = left
                        ]

                        component Subsystem read_mode {
                            layout = dynamic
                            component gen_digital_probe StandBy {
                            }
                            [
                                position = 8240, 8024
                                rotation = left
                            ]

                            component gen_digital_probe on {
                            }
                            [
                                position = 7992, 8040
                            ]

                            component gen_digital_probe "Grid following" {
                            }
                            [
                                position = 8240, 8168
                                rotation = right
                            ]

                            component gen_digital_probe "Grid forming" {
                            }
                            [
                                position = 8328, 8088
                            ]

                            component gen_c_function verify_mode {
                                in_terminal_dimensions = "inherit"
                                in_terminal_dimensions_str = "control_mode inherit"
                                in_terminal_labels = "False;"
                                in_terminal_properties = "real control_mode;"
                                no_feed_inputs = "[\'\']"
                                no_feed_outputs = "[\'\']"
                                out_terminal_dimensions = "inherit;inherit;inherit"
                                out_terminal_dimensions_str = "stand_by inherit;grid_forming inherit;grid_following inherit"
                                out_terminal_labels = "False;False;False;"
                                out_terminal_properties = "real stand_by;inherit grid_forming;inherit grid_following;"
                                output_fnc = "/*Begin code section*/
if(control_mode == 0){
    stand_by = 1;
    grid_forming = 0;
    grid_following = 0;
}
else{
    if(control_mode == 1){
        stand_by = 0;
        grid_forming = 1;
        grid_following = 0;
    }
    else{
        stand_by = 0;
        grid_forming = 0;
        grid_following = 1;
    }
}
/*End code section*/"
                            }
                            [
                                position = 8160, 8088
                                size = 48, 64
                            ]

                            port Mode {
                                position = top:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8104, 8000
                                rotation = right
                            ]

                            port On {
                                position = top:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7952, 8000
                                rotation = right
                            ]

                            connect "Grid following.in" verify_mode.grid_following as Connection1957
                            connect "Grid forming.in" verify_mode.grid_forming as Connection1956
                            connect Mode verify_mode.control_mode as Connection1954
                            connect StandBy.in verify_mode.stand_by as Connection1955
                            connect on.in On as Connection1953
                        }
                        [
                            position = 8256, 8112
                            rotation = down
                            size = 48, 48
                        ]

                        port On {
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7952, 8064
                            rotation = right
                        ]

                        port mode {
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7896, 8064
                            rotation = right
                        ]

                        port grid_locked {
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7888, 8272
                            rotation = right
                            scale = -1, -1
                        ]

                        port Synch {
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8608, 8256
                        ]

                        port CB {
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8464, 8344
                            rotation = right
                        ]

                        port Vmode {
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8464, 8160
                            rotation = left
                        ]

                        port V_match {
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7920, 8304
                            rotation = right
                            scale = -1, -1
                        ]

                        port live_grid {
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7952, 8336
                            rotation = right
                            scale = -1, -1
                        ]

                        port on_nominal {
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7992, 8368
                            rotation = right
                            scale = -1, -1
                        ]

                        junction Junction7 sp
                        [
                            position = 8408, 8224
                        ]

                        junction Junction8 sp
                        [
                            position = 8528, 8256
                        ]

                        junction Junction9 sp
                        [
                            position = 8408, 8272
                        ]

                        junction Junction10 sp
                        [
                            position = 8072, 8200
                        ]

                        comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Modes:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">0 = voltage mode/grid forming</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">1 = current mode/grid following           </p></body></html> ENDCOMMENT 
                        [
                            position = 8032, 8360
                        ]

                        connect CB Junction9 as Connection1759
                        connect Inv_Cab_SM.On Junction10 as Connection1773
                        connect Inv_Cab_SM.Vmode Junction7 as Connection1755
                        connect Inv_Cab_SM.synch Junction8 as Connection1758
                        connect Inv_Cab_SM.contactor Junction9 as Connection1761
                        connect Junction10 read_mode.On as Connection1774
                        [
                            position = 0, 0
                        ]
                        connect Junction7 V_mode.in as Connection1754
                        connect Junction8 synch.in as Connection1757
                        connect Junction9 CB_status.in as Connection1760
                        connect On Junction10 as Connection1775
                        connect Synch Junction8 as Connection1756
                        connect V_match Inv_Cab_SM.v_match as Connection1715
                        connect Vmode Junction7 as Connection1753
                        connect grid_locked Inv_Cab_SM.grid_locked as Connection1714
                        connect live_grid Inv_Cab_SM.live_grid as Connection1725
                        connect mode Inv_Cab_SM.mode as Connection1776
                        connect on_nominal Inv_Cab_SM.on_nominal as Connection1746
                        connect read_mode.Mode Inv_Cab_SM.control_mode as Connection1767
                    }
                    [
                        position = 7720, 8344
                        size = 104, 224
                    ]

                    component Subsystem Change_CtrlMode {
                        layout = dynamic
                        component sys_signal_switch "Signal switch2" {
                            criterion = "ctrl > threshold"
                            threshold = "0.5"
                        }
                        [
                            position = 8192, 8232
                            hide_name = True
                        ]

                        component sys_signal_switch "Signal switch3" {
                            criterion = "ctrl > threshold"
                            threshold = "0.5"
                        }
                        [
                            position = 8192, 8368
                            hide_name = True
                        ]

                        component sys_signal_switch "Signal switch1" {
                            criterion = "ctrl > threshold"
                            threshold = "0.5"
                        }
                        [
                            position = 8192, 8096
                            hide_name = True
                        ]

                        port wt {
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8256, 8368
                        ]

                        port wt_Imode {
                            position = left:12
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8000, 8384
                        ]

                        port wt_Vmode {
                            position = left:15
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8056, 8336
                        ]

                        port md {
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8256, 8096
                        ]

                        port mq {
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8256, 8232
                        ]

                        port md_Imode {
                            position = left:10
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8000, 8112
                        ]

                        port md_Vmode {
                            position = left:13
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8056, 8056
                        ]

                        port mq_Imode {
                            position = left:11
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8000, 8248
                        ]

                        port mq_Vmode {
                            position = left:14
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8056, 8208
                        ]

                        port Vmode {
                            position = top:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8192, 7968
                            rotation = right
                        ]

                        tag From20 {
                            value = "Vmode"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8128, 8168
                            hide_name = True
                            size = 60, 20
                        ]

                        tag Goto17 {
                            value = "Vmode"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8272, 8032
                            hide_name = True
                            size = 60, 20
                        ]

                        tag From21 {
                            value = "Vmode"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8128, 8304
                            hide_name = True
                            size = 60, 20
                        ]

                        junction Junction1 sp
                        [
                            position = 8192, 8032
                        ]

                        connect From20 "Signal switch2.in2" as Connection16
                        connect From21 "Signal switch3.in2" as Connection17
                        connect Junction1 Goto17 as Connection28
                        connect "Signal switch1.in2" Junction1 as Connection27
                        connect "Signal switch1.out" md as Connection2
                        connect "Signal switch2.out" mq as Connection7
                        connect "Signal switch3.out" wt as Connection4
                        connect Vmode Junction1 as Connection29
                        connect md_Imode "Signal switch1.in1" as Connection19
                        connect md_Vmode "Signal switch1.in" as Connection18
                        connect mq_Imode "Signal switch2.in1" as Connection21
                        connect mq_Vmode "Signal switch2.in" as Connection20
                        connect wt_Imode "Signal switch3.in1" as Connection23
                        connect wt_Vmode "Signal switch3.in" as Connection22
                    }
                    [
                        position = 8632, 8552
                        size = 104, 208
                    ]

                    component Subsystem duty_cycle {
                        layout = dynamic
                        component gen_probe Dz_A {
                            addr = "8968"
                        }
                        [
                            position = 7856, 8104
                            rotation = left
                        ]

                        component gen_probe Dz_B {
                            addr = "8968"
                        }
                        [
                            position = 7856, 8184
                            rotation = left
                        ]

                        component gen_limiter Limit2 {
                            lower_limit = "mod_lowLim"
                            upper_limit = "mod_upLim"
                        }
                        [
                            position = 7512, 7944
                            hide_name = True
                        ]

                        component src_constant o_ref {
                            execution_rate = "Ts"
                            value = "0"
                        }
                        [
                            position = 7560, 8016
                            hide_name = True
                        ]

                        component gen_probe m_q {
                            addr = "8967"
                        }
                        [
                            position = 7600, 7896
                            rotation = left
                            scale = -1, 1
                        ]

                        component gen_probe Db {
                            addr = "8968"
                        }
                        [
                            position = 7680, 8184
                            rotation = left
                        ]

                        component gen_limiter Limit3 {
                            lower_limit = "-1.1546"
                            upper_limit = "1.1546"
                        }
                        [
                            position = 7512, 7992
                            hide_name = True
                        ]

                        component gen_probe Da {
                            addr = "8968"
                        }
                        [
                            position = 7680, 8104
                            rotation = left
                        ]

                        component gen_probe m_d {
                            addr = "8969"
                        }
                        [
                            position = 7560, 7896
                            rotation = right
                            scale = 1, -1
                        ]

                        component gen_probe Dc {
                            addr = "8968"
                        }
                        [
                            position = 7680, 8256
                            rotation = left
                        ]

                        component gen_probe Dz_C {
                            addr = "8968"
                        }
                        [
                            position = 7856, 8256
                            rotation = left
                        ]

                        component Subsystem ZSM {
                            layout = dynamic
                            component gen_probe Z0 {
                            }
                            [
                                position = 8048, 8088
                                rotation = left
                            ]

                            component src_constant Constant3 {
                                execution_rate = "inherit"
                            }
                            [
                                position = 7672, 8128
                                hide_name = True
                            ]

                            component gen_sum Sum1 {
                                signs = "-+"
                            }
                            [
                                position = 7752, 8264
                                hide_name = True
                            ]

                            component gen_sum Sum2 {
                                signs = "-+"
                            }
                            [
                                position = 7752, 8120
                                hide_name = True
                            ]

                            component gen_sum Sum6 {
                                signs = "++"
                            }
                            [
                                position = 8328, 8176
                                hide_name = True
                            ]

                            component gen_sum Sum7 {
                                signs = "++"
                            }
                            [
                                position = 8328, 8264
                                hide_name = True
                            ]

                            component src_constant Constant2 {
                                execution_rate = "inherit"
                            }
                            [
                                position = 7656, 8288
                                hide_name = True
                            ]

                            component src_constant Constant1 {
                                execution_rate = "inherit"
                                value = "k"
                            }
                            [
                                position = 7336, 8080
                                hide_name = True
                            ]

                            component gen_sum Sum5 {
                                signs = "++"
                            }
                            [
                                position = 8328, 8096
                                hide_name = True
                            ]

                            component gen_product Product2 {
                            }
                            [
                                position = 7848, 8152
                                hide_name = True
                            ]

                            component gen_minmax "Min Max2" {
                                inputs = "3"
                                operation = "max"
                            }
                            [
                                position = 7584, 8256
                                hide_name = True
                            ]

                            component gen_sum Sum3 {
                                signs = "--+"
                            }
                            [
                                position = 7984, 8152
                                hide_name = True
                            ]

                            component gen_product Product1 {
                            }
                            [
                                position = 7848, 8256
                                hide_name = True
                            ]

                            component gen_minmax "Min Max1" {
                                inputs = "3"
                            }
                            [
                                position = 7584, 8160
                                hide_name = True
                            ]

                            component gen_limiter Limit1 {
                                lower_limit = "0"
                                upper_limit = "1"
                            }
                            [
                                position = 7408, 8080
                                hide_name = True
                            ]

                            component src_constant Constant4 {
                                execution_rate = "inherit"
                            }
                            [
                                position = 7816, 8072
                                hide_name = True
                            ]

                            component gen_sum Sum8 {
                                signs = "-+"
                            }
                            [
                                position = 7896, 8064
                                hide_name = True
                            ]

                            port Da {
                                position = right:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7264, 8144
                                rotation = down
                                scale = -1, 1
                            ]

                            port Db {
                                position = right:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7264, 8208
                                rotation = down
                                scale = -1, 1
                            ]

                            port Dc {
                                position = right:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7264, 8272
                                rotation = down
                                scale = -1, 1
                            ]

                            port Dz_A {
                                position = left:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8416, 8096
                                rotation = down
                                scale = -1, 1
                            ]

                            port Dz_B {
                                position = left:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8416, 8176
                                rotation = down
                                scale = -1, 1
                            ]

                            port Dz_C {
                                position = left:3
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8416, 8264
                                rotation = down
                                scale = -1, 1
                            ]

                            tag From5 {
                                value = "Db"
                                scope = local
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8240, 8168
                                hide_name = True
                                size = 0, 0
                            ]

                            tag From8 {
                                value = "Z0"
                                scope = local
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8240, 8288
                                hide_name = True
                                size = 0, 0
                            ]

                            tag From7 {
                                value = "Dc"
                                scope = local
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8240, 8256
                                hide_name = True
                                size = 0, 0
                            ]

                            tag From2 {
                                value = "k"
                                scope = local
                                kind = sp
                                direction = out
                            }
                            [
                                position = 7736, 8208
                                hide_name = True
                                size = 0, 0
                            ]

                            tag Goto2 {
                                value = "Da"
                                scope = local
                                kind = sp
                                direction = in
                            }
                            [
                                position = 7400, 8168
                                hide_name = True
                                size = 0, 0
                            ]

                            tag From6 {
                                value = "Z0"
                                scope = local
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8240, 8200
                                hide_name = True
                                size = 0, 0
                            ]

                            tag Goto4 {
                                value = "Dc"
                                scope = local
                                kind = sp
                                direction = in
                            }
                            [
                                position = 7400, 8304
                                hide_name = True
                                size = 0, 0
                            ]

                            tag From3 {
                                value = "Z0"
                                scope = local
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8240, 8120
                                hide_name = True
                                size = 0, 0
                            ]

                            tag From4 {
                                value = "Da"
                                scope = local
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8240, 8088
                                hide_name = True
                                size = 0, 0
                            ]

                            tag Goto1 {
                                value = "k"
                                scope = local
                                kind = sp
                                direction = in
                            }
                            [
                                position = 7488, 8080
                                hide_name = True
                                size = 0, 0
                            ]

                            tag Goto3 {
                                value = "Db"
                                scope = local
                                kind = sp
                                direction = in
                            }
                            [
                                position = 7400, 8240
                                hide_name = True
                                size = 0, 0
                            ]

                            tag From1 {
                                value = "k"
                                scope = local
                                kind = sp
                                direction = out
                            }
                            [
                                position = 7648, 8080
                                hide_name = True
                                size = 0, 0
                            ]

                            tag Goto5 {
                                value = "Z0"
                                scope = local
                                kind = sp
                                direction = in
                            }
                            [
                                position = 8120, 8152
                                hide_name = True
                                size = 0, 0
                            ]

                            tag From9 {
                                value = "k"
                                scope = local
                                kind = sp
                                direction = out
                            }
                            [
                                position = 7792, 8024
                                hide_name = True
                                size = 0, 0
                            ]

                            junction Junction254 sp
                            [
                                position = 7480, 8144
                            ]

                            junction Junction255 sp
                            [
                                position = 7496, 8208
                            ]

                            junction Junction256 sp
                            [
                                position = 7512, 8272
                            ]

                            junction Junction257 sp
                            [
                                position = 7344, 8144
                            ]

                            junction Junction258 sp
                            [
                                position = 7344, 8208
                            ]

                            junction Junction259 sp
                            [
                                position = 7344, 8272
                            ]

                            junction Junction260 sp
                            [
                                position = 8048, 8152
                            ]

                            connect Constant1.out Limit1.in as Connection1425
                            connect Constant2.out Sum1.in1 as Connection1427
                            connect Constant3.out Sum2.in1 as Connection1434
                            connect Da Junction257 as Connection1474
                            connect Db Junction258 as Connection1477
                            connect Dc Junction259 as Connection1480
                            connect From1 Sum2.in as Connection1440
                            connect From2 Product1.in as Connection1441
                            connect From3 Sum5.in1 as Connection1446
                            connect From4 Sum5.in as Connection1487
                            connect From5 Sum6.in as Connection1489
                            connect From6 Sum6.in1 as Connection1488
                            connect From7 Sum7.in as Connection1493
                            connect From8 Sum7.in1 as Connection1492
                            connect Goto1 Limit1.out as Connection1439
                            connect Goto2 Junction257 as Connection1476
                            connect Goto3 Junction258 as Connection1479
                            connect Goto4 Junction259 as Connection1482
                            connect Goto5 Junction260 as Connection1486
                            connect Junction254 "Min Max2.in" as Connection1466
                            connect Junction255 "Min Max1.in1" as Connection1469
                            connect Junction256 "Min Max1.in2" as Connection1472
                            connect Junction257 Junction254 as Connection1475
                            connect Junction258 Junction255 as Connection1478
                            connect Junction259 Junction256 as Connection1481
                            connect Junction260 Sum3.out as Connection1485
                            connect "Min Max1.in" Junction254 as Connection1465
                            connect "Min Max2.in1" Junction255 as Connection1468
                            connect "Min Max2.in2" Junction256 as Connection1471
                            connect Product1.in1 Sum1.out as Connection1428
                            connect Product1.out Sum3.in2 as Connection1451
                            connect Product2.in1 "Min Max1.out" as Connection1430
                            connect Product2.out Sum3.in1 as Connection1450
                            connect Sum1.in "Min Max2.out" as Connection1426
                            connect Sum2.out Product2.in as Connection1435
                            connect Sum5.out Dz_A as Connection1447
                            connect Sum6.out Dz_B as Connection1490
                            connect Sum7.out Dz_C as Connection1491
                            connect Z0.in Junction260 as Connection1484
                            connect From9 Sum8.in as Connection1496
                            connect Constant4.out Sum8.in1 as Connection1495
                            connect Sum8.out Sum3.in as Connection1497

                            mask {
                                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">This block implements a zero sequence modulator (ZSM).</span></p><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">To change the ZSM type, user can adjust the coefficient k. This coefficient is a real number between 0 and 1.</span></p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">For k = 0, the modulation type is bottom clamp;</span></p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">For k = 1/2, the modulation type is midpoint clamp;</span></p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">For k = 1, the modulation type is top clamp.</span></p><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                                k {
                                    label = "Modulation type coefficent k"
                                    widget = edit
                                    type = generic
                                    default_value = "0.5"
                                }

                                CODE open
                                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                                
                                    dialog = RegularComponentPropertiesDialog(
                                        component=component,
                                        property_container=component.masks[-1],
                                        current_diagram=current_diagram
                                    )
                                    dialog.exec_()
                                
                                ENDCODE
                            }
                        }
                        [
                            position = 7776, 8216
                            scale = -1, 1
                            size = 88, 184
                        ]

                        component "core/dq to abc" "dq to abc1" {
                            execution_rate = "inherit"
                        }
                        [
                            position = 7608, 8096
                            rotation = right
                            size = 48, 80
                        ]

                        port wt {
                            position = right:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7448, 8040
                        ]

                        port mq {
                            position = right:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7448, 7992
                        ]

                        port md {
                            position = right:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7448, 7944
                        ]

                        port m_a {
                            position = left:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7936, 8144
                            rotation = down
                            scale = -1, 1
                        ]

                        port m_b {
                            position = left:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7936, 8216
                            rotation = down
                            scale = -1, 1
                        ]

                        port m_c {
                            position = left:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7936, 8288
                            rotation = down
                            scale = -1, 1
                        ]

                        junction Junction6 sp
                        [
                            position = 7856, 8288
                        ]

                        junction Junction7 sp
                        [
                            position = 7856, 8216
                        ]

                        junction Junction8 sp
                        [
                            position = 7856, 8144
                        ]

                        junction Junction9 sp
                        [
                            position = 7560, 7944
                        ]

                        junction Junction10 sp
                        [
                            position = 7600, 7992
                        ]

                        junction Junction11 sp
                        [
                            position = 7680, 8144
                        ]

                        junction Junction12 sp
                        [
                            position = 7680, 8216
                        ]

                        junction Junction13 sp
                        [
                            position = 7680, 8288
                        ]

                        connect Dz_A.in Junction8 as Connection2320
                        connect Dz_B.in Junction7 as Connection2317
                        connect Dz_C.in Junction6 as Connection2314
                        connect Junction6 ZSM.Dz_C as Connection2313
                        connect Junction7 m_b as Connection2316
                        connect Junction8 ZSM.Dz_A as Connection2319
                        connect ZSM.Dz_B Junction7 as Connection2315
                        connect m_a Junction8 as Connection2318
                        connect m_c Junction6 as Connection2312
                        connect md Limit2.in as Connection31
                        connect mq Limit3.in as Connection33
                        connect m_d.in Junction9 as Connection2326
                        connect Junction9 Limit2.out as Connection2327
                        connect "dq to abc1.d_input" Junction9 as Connection2328
                        connect Limit3.out Junction10 as Connection2329
                        connect Junction10 m_q.in as Connection2330
                        connect "dq to abc1.q_input" Junction10 as Connection2331
                        connect o_ref.out "dq to abc1.zero_input" as Connection2332
                        connect "dq to abc1.wt" wt as Connection2333
                        connect Da.in Junction11 as Connection2334
                        connect Junction11 ZSM.Da as Connection2335
                        connect "dq to abc1.phase_a" Junction11 as Connection2336
                        connect ZSM.Db Junction12 as Connection2337
                        connect Junction12 Db.in as Connection2338
                        connect "dq to abc1.phase_b" Junction12 as Connection2339
                        connect Dc.in Junction13 as Connection2340
                        connect Junction13 ZSM.Dc as Connection2341
                        connect "dq to abc1.phase_c" Junction13 as Connection2342
                    }
                    [
                        position = 8776, 8552
                        scale = -1, 1
                        size = 80, 200
                    ]

                    component Subsystem PLL_pu {
                        layout = dynamic
                        component gen_gain Gain6 {
                            gain = "1.0/fn"
                        }
                        [
                            position = 8400, 8120
                            hide_name = True
                        ]

                        component gen_gain Gain5 {
                            gain = "1.0/(Vn*((2.0/3.0)**0.5))"
                        }
                        [
                            position = 8240, 8064
                            rotation = left
                            hide_name = True
                        ]

                        component gen_gain Gain7 {
                            gain = "1.0/(Vn*((2.0/3.0)**0.5))"
                        }
                        [
                            position = 8400, 8248
                            hide_name = True
                        ]

                        component gen_gain Gain4 {
                            gain = "1.0/(Vn*((2.0/3.0)**0.5))"
                        }
                        [
                            position = 8208, 8016
                            rotation = left
                            hide_name = True
                        ]

                        component "core/Three phase PLL" PLL {
                            enable_pk = "True"
                            enable_sin = "False"
                            enable_zero = "False"
                            initial_pid_output = "2*np.pi*fn"
                            low_lim = "0"
                            rate_high = "5*fn"
                            rate_low = "-5*fn"
                            up_lim = "1.4*2*np.pi*fn"
                        }
                        [
                            position = 8144, 8144
                            size = 64, 128
                        ]

                        port d {
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8304, 7976
                        ]

                        port q {
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8304, 8024
                        ]

                        port f {
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8464, 8120
                        ]

                        port wt {
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8304, 8160
                        ]

                        port A {
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8032, 8048
                        ]

                        port B {
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8032, 8144
                        ]

                        port C {
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8032, 8240
                        ]

                        port Vt {
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8464, 8248
                        ]

                        tag Goto1 {
                            value = "Vt"
                            scope = masked_subsystem
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8328, 8264
                            hide_name = True
                            size = 0, 0
                        ]

                        tag Goto2 {
                            value = "f"
                            scope = masked_subsystem
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8328, 8096
                            hide_name = True
                            size = 0, 0
                        ]

                        junction Junction1 sp
                        [
                            position = 8264, 8248
                        ]

                        junction Junction2 sp
                        [
                            position = 8280, 8120
                        ]

                        connect Gain4.out d as Connection2283
                        connect Vt Gain7.out as Connection2309
                        connect f Gain6.out as Connection2286
                        connect q Gain5.out as Connection2284
                        connect PLL.vb B as Connection2313
                        connect PLL.va A as Connection2314
                        connect PLL.vc C as Connection2315
                        connect Gain4.in PLL.d_axis as Connection2316
                        connect Gain5.in PLL.q_axis as Connection2317
                        connect Goto1 Junction1 as Connection2326
                        connect Junction1 PLL.peak as Connection2327
                        connect Gain7.in Junction1 as Connection2328
                        connect Goto2 Junction2 as Connection2329
                        connect Junction2 Gain6.in as Connection2330
                        connect PLL.freq Junction2 as Connection2331
                        connect wt PLL.theta as Connection2332
                    }
                    [
                        position = 7624, 8632
                        size = 72, 168
                    ]

                    port Ib {
                        position = left:14
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7528, 8880
                    ]

                    port Ia {
                        position = left:13
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7528, 8832
                    ]

                    port Ic {
                        position = left:15
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7528, 8928
                    ]

                    port Vc {
                        position = left:12
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7528, 8696
                    ]

                    port Vb {
                        position = left:11
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7528, 8632
                    ]

                    port Va {
                        position = left:10
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7528, 8568
                    ]

                    port VDC {
                        position = left:16
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8256, 8120
                        rotation = right
                    ]

                    port On {
                        position = top:10
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7488, 8264
                    ]

                    port Vb_util {
                        position = left:18
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8056, 8984
                    ]

                    port Va_util {
                        position = left:17
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8056, 8936
                    ]

                    port Vc_util {
                        position = left:19
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8056, 9032
                    ]

                    port mode {
                        position = top:11
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7528, 8296
                    ]

                    port Contactor {
                        position = right:15
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 7832, 8432
                        rotation = down
                        scale = -1, 1
                    ]

                    port m_a {
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8864, 8472
                    ]

                    port m_b {
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8864, 8552
                    ]

                    port m_c {
                        position = right:4
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8864, 8632
                    ]

                    port Ia_out {
                        position = left:20
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7528, 9088
                    ]

                    port Ib_out {
                        position = left:21
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7528, 9136
                    ]

                    port Ic_out {
                        position = left:22
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7528, 9184
                    ]

                    tag From188 {
                        value = "Vd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8560, 8776
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto101 {
                        value = "V_match"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8360, 9032
                        hide_name = True
                        size = 74, 20
                    ]

                    tag From202 {
                        value = "V_match"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7592, 8360
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto91 {
                        value = "pf"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8792, 8944
                        hide_name = True
                        size = 0, 0
                    ]

                    tag From203 {
                        value = "wt_Imode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8472, 8536
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto92 {
                        value = "S"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8792, 8880
                        hide_name = True
                        size = 0, 0
                    ]

                    tag From204 {
                        value = "mq_Imode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8472, 8504
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From189 {
                        value = "Id_out"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8560, 8904
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From205 {
                        value = "md_Imode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8472, 8472
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto42 {
                        value = "P"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8792, 8752
                        hide_name = True
                        size = 0, 0
                    ]

                    tag From206 {
                        value = "md_Vmode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8472, 8568
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From196 {
                        value = "f"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8056, 9128
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From207 {
                        value = "mq_Vmode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8472, 8600
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From197 {
                        value = "wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8056, 9176
                        hide_name = True
                        size = 0, 0
                    ]

                    tag From208 {
                        value = "wt_Vmode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8472, 8632
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto61 {
                        value = "Vq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7816, 8600
                        hide_name = True
                        size = 0, 0
                    ]

                    tag Goto90 {
                        value = "df_sync"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8352, 8984
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From61 {
                        value = "VDC"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8248, 8568
                        rotation = right
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto93 {
                        value = "dV_match"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8352, 8936
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto102 {
                        value = "md_Imode"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8352, 8304
                        hide_name = True
                        size = 0, 0
                    ]

                    tag Goto103 {
                        value = "wt_Imode"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8352, 8464
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From66 {
                        value = "synch"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8136, 8880
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From195 {
                        value = "Vt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8056, 9080
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto104 {
                        value = "mq_Imode"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8352, 8384
                        hide_name = True
                        size = 0, 0
                    ]

                    tag Goto105 {
                        value = "wt_Vmode"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8352, 8784
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto67 {
                        value = "grid_locked"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8360, 9080
                        hide_name = True
                        size = 74, 20
                    ]

                    tag Goto35 {
                        value = "Iq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7768, 8984
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto106 {
                        value = "md_Vmode"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8352, 8656
                        hide_name = True
                        size = 0, 0
                    ]

                    tag From192 {
                        value = "dV_match"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8080, 8656
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto60 {
                        value = "f"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7816, 8664
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From154 {
                        value = "Vd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8080, 8688
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto107 {
                        value = "mq_Vmode"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8352, 8720
                        hide_name = True
                        size = 0, 0
                    ]

                    tag Goto108 {
                        value = "on_nominal"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8352, 9176
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From148 {
                        value = "f"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8080, 8752
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto34 {
                        value = "Id"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7768, 8824
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From209 {
                        value = "on_nominal"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7592, 8424
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From108 {
                        value = "Id"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8080, 8720
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto98 {
                        value = "Vmode"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7840, 8256
                        hide_name = True
                        size = 0, 0
                    ]

                    tag Goto109 {
                        value = "Id_out"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7792, 9080
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From60 {
                        value = "df_sync"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8080, 8784
                        hide_name = True
                        size = 0, 0
                    ]

                    tag From43 {
                        value = "wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8064, 8464
                        hide_name = True
                        size = 0, 0
                    ]

                    tag From156 {
                        value = "On"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8216, 8208
                        rotation = right
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From38 {
                        value = "wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7520, 8976
                        hide_name = True
                        size = 0, 0
                    ]

                    tag Goto99 {
                        value = "live_grid"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8352, 9128
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From39 {
                        value = "f"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8064, 8432
                        hide_name = True
                        size = 0, 0
                    ]

                    tag From157 {
                        value = "Vmode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8176, 8208
                        rotation = right
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From198 {
                        value = "Vmode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8168, 8568
                        rotation = right
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto58 {
                        value = "Vd"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7816, 8568
                        hide_name = True
                        size = 0, 0
                    ]

                    tag From68 {
                        value = "Vmode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8632, 8376
                        rotation = right
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From112 {
                        value = "Id_out"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8064, 8368
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From199 {
                        value = "On"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8208, 8568
                        rotation = right
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From210 {
                        value = "wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7520, 9232
                        hide_name = True
                        size = 0, 0
                    ]

                    tag Goto43 {
                        value = "Q"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8792, 8816
                        hide_name = True
                        size = 0, 0
                    ]

                    tag Goto59 {
                        value = "wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7816, 8696
                        hide_name = True
                        size = 0, 0
                    ]

                    tag From113 {
                        value = "Iq_out"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8064, 8400
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto100 {
                        value = "synch"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7840, 8344
                        hide_name = True
                        size = 0, 0
                    ]

                    tag From146 {
                        value = "Vd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8064, 8304
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From190 {
                        value = "Iq_out"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8560, 8968
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto110 {
                        value = "Iq_out"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7792, 9240
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto89 {
                        value = "VDC"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8320, 8240
                        hide_name = True
                        size = 0, 0
                    ]

                    tag From200 {
                        value = "grid_locked"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7592, 8328
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From155 {
                        value = "Vq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8064, 8336
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From187 {
                        value = "Vq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8560, 8840
                        hide_name = True
                        size = 57, 20
                    ]

                    tag Goto96 {
                        value = "Vt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7816, 8632
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto97 {
                        value = "On"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7608, 8240
                        hide_name = True
                        size = 0, 0
                    ]

                    tag From201 {
                        value = "live_grid"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7592, 8392
                        hide_name = True
                        size = 60, 20
                    ]

                    junction Junction233 sp
                    [
                        position = 7752, 8600
                    ]

                    junction Junction234 sp
                    [
                        position = 7688, 8568
                    ]

                    junction Junction263 sp
                    [
                        position = 7712, 8984
                    ]

                    junction Junction264 sp
                    [
                        position = 7712, 8824
                    ]

                    junction Junction329 sp
                    [
                        position = 7752, 8664
                    ]

                    junction Junction330 sp
                    [
                        position = 8744, 8776
                    ]

                    junction Junction331 sp
                    [
                        position = 8744, 8840
                    ]

                    junction Junction333 sp
                    [
                        position = 8744, 8904
                    ]

                    junction Junction334 sp
                    [
                        position = 8744, 8968
                    ]

                    junction Junction337 sp
                    [
                        position = 7688, 8632
                    ]

                    junction Junction341 sp
                    [
                        position = 7560, 8264
                    ]

                    junction Junction342 sp
                    [
                        position = 8256, 8240
                    ]

                    junction Junction343 sp
                    [
                        position = 7720, 9080
                    ]

                    junction Junction344 sp
                    [
                        position = 7720, 9240
                    ]

                    connect ABCtoDQ.A Ia as Connection2493
                    connect ABCtoDQ.B Ib as Connection2494
                    connect ABCtoDQ.C Ic as Connection2495
                    connect ABCtoDQ1.q Junction344 as Connection2857
                    connect Change_CtrlMode.mq_Imode From204 as Connection2730
                    connect Change_CtrlMode.mq_Vmode From207 as Connection2733
                    connect Contactor Inv_Cab_SM.CB as Connection2606
                    connect From112 Imode_control.Id as Connection2562
                    connect From146 Imode_control.Vd as Connection2560
                    connect From156 Imode_control.On as Connection2566
                    connect From157 Imode_control.Vmode as Connection2567
                    connect From187 Power_Meas.Vq as Connection2462
                    connect From188 Power_Meas.Vd as Connection2461
                    connect From189 Power_Meas.Id as Connection2463
                    connect From190 Power_Meas.Iq as Connection2464
                    connect From192 Vmode_control.dV_match as Connection2592
                    connect From195 Synch.Vt_inv as Connection2589
                    connect From198 Vmode_control.Vmode as Connection2603
                    connect From199 Vmode_control.On as Connection2604
                    connect From200 Inv_Cab_SM.grid_locked as Connection2607
                    connect From201 Inv_Cab_SM.live_grid as Connection2610
                    connect From202 Inv_Cab_SM.V_match as Connection2611
                    connect From203 Change_CtrlMode.wt_Imode as Connection2731
                    connect From205 Change_CtrlMode.md_Imode as Connection2729
                    connect From206 Change_CtrlMode.md_Vmode as Connection2732
                    connect From208 Change_CtrlMode.wt_Vmode as Connection2734
                    connect From209 Inv_Cab_SM.on_nominal as Connection2747
                    connect From210 ABCtoDQ1.wt as Connection2748
                    connect From38 ABCtoDQ.wt as Connection2360
                    connect From39 Imode_control.f as Connection2564
                    connect From60 Vmode_control.df_sync as Connection2593
                    connect From61 Vmode_control.Vdc as Connection2736
                    connect From66 "Synch.Turn on Sync" as Connection2576
                    connect From68 Change_CtrlMode.Vmode as Connection2719
                    connect Goto100 Inv_Cab_SM.Synch as Connection2605
                    connect Goto101 Synch.V_match as Connection2609
                    connect Goto102 Imode_control.md as Connection2742
                    connect Goto103 Imode_control.wt as Connection2740
                    connect Goto104 Imode_control.mq as Connection2741
                    connect Goto105 Vmode_control.wt as Connection2744
                    connect Goto106 Vmode_control.md as Connection2745
                    connect Goto107 Vmode_control.mq as Connection2743
                    connect Goto108 Synch.nominal_state as Connection2746
                    connect Goto109 Junction343 as Connection2856
                    connect Goto110 Junction344 as Connection2859
                    connect Goto34 Junction264 as Connection2511
                    connect Goto42 Junction330 as Connection2467
                    connect Goto43 Junction331 as Connection2470
                    connect Goto59 PLL_pu.wt as Connection2363
                    connect Goto60 Junction329 as Connection2452
                    connect Goto67 Synch.grid_locked as Connection2585
                    connect Goto89 Junction342 as Connection2737
                    connect Goto90 Synch.df_sync as Connection2587
                    connect Goto91 Junction334 as Connection2483
                    connect Goto92 Junction333 as Connection2480
                    connect Goto93 Synch.dV_match as Connection2591
                    connect Goto96 Junction337 as Connection2521
                    connect Goto97 Junction341 as Connection2602
                    connect Goto98 Inv_Cab_SM.Vmode as Connection2596
                    connect Goto99 Synch.live_grid as Connection2594
                    connect Id.in Junction264 as Connection1616
                    connect Id_out.in Junction343 as Connection2854
                    connect Imode_control.Iq From113 as Connection2563
                    connect Imode_control.Vq From155 as Connection2561
                    connect Imode_control.wt_ess From43 as Connection2565
                    connect Imode_control.Vdc Junction342 as Connection2739
                    connect Iq.in Junction263 as Connection1613
                    connect Junction233 Goto61 as Connection1201
                    connect Junction233 PLL_pu.q as Connection2449
                    connect Junction234 Goto58 as Connection1203
                    connect Junction234 PLL_pu.d as Connection2367
                    connect Junction263 ABCtoDQ.q as Connection2356
                    connect Junction263 Goto35 as Connection1612
                    connect Junction264 ABCtoDQ.d as Connection2357
                    connect Junction329 PLL_pu.f as Connection2453
                    connect Junction330 Power_Meas.P as Connection2466
                    connect Junction331 Power_Meas.Q as Connection2469
                    connect Junction333 S.in as Connection2479
                    connect Junction334 Power_Meas.pf as Connection2482
                    connect Junction337 PLL_pu.Vt as Connection2522
                    connect Junction341 Inv_Cab_SM.On as Connection2601
                    connect Junction342 Gain1.out as Connection2738
                    connect Junction343 ABCtoDQ1.d as Connection2855
                    connect Junction344 Iq_out.in as Connection2858
                    connect On Junction341 as Connection2600
                    connect P.in Junction330 as Connection2465
                    connect Power_Meas.S Junction333 as Connection2478
                    connect Q.in Junction331 as Connection2468
                    connect Synch.f_inv From196 as Connection2590
                    connect Synch.wt_inv From197 as Connection2588
                    connect Synch.Vc_util Vc_util as Connection2584
                    connect VDC Gain1.in as Connection2498
                    connect Va PLL_pu.A as Connection2526
                    connect Va_util Synch.Va_util as Connection2586
                    connect Vb PLL_pu.B as Connection2525
                    connect Vb_util Synch.Vb_util as Connection2577
                    connect Vc PLL_pu.C as Connection2524
                    connect Vd.in Junction234 as Connection1200
                    connect Vmode_control.Id From108 as Connection2548
                    connect Vmode_control.f From148 as Connection2549
                    connect Vmode_control.Vd From154 as Connection2547
                    connect Vq.in Junction233 as Connection1206
                    connect Vt.in Junction337 as Connection2523
                    connect duty_cycle.mq Change_CtrlMode.mq as Connection2727
                    connect duty_cycle.md Change_CtrlMode.md as Connection2728
                    connect duty_cycle.wt Change_CtrlMode.wt as Connection2726
                    connect duty_cycle.m_a m_a as Connection2313
                    connect f.in Junction329 as Connection2454
                    connect m_b duty_cycle.m_b as Connection2714
                    connect m_c duty_cycle.m_c as Connection2715
                    connect mode Inv_Cab_SM.mode as Connection2597
                    connect pf.in Junction334 as Connection2481
                    connect Ia_out ABCtoDQ1.A as Connection2860
                    connect Ib_out ABCtoDQ1.B as Connection2861
                    connect Ic_out ABCtoDQ1.C as Connection2862
                }
                [
                    position = 8352, 7336
                    size = 136, 440
                ]

                port A {
                    position = 144.0, -96.0
                    kind = pe
                    direction =  out
                }
                [
                    position = 9560, 7672
                    rotation = down
                ]

                port B {
                    position = 144.0, -0.1
                    kind = pe
                    direction =  out
                }
                [
                    position = 9560, 7768
                    rotation = down
                ]

                port C {
                    position = 144.0, 96.0
                    kind = pe
                    direction =  out
                }
                [
                    position = 9560, 7864
                    rotation = down
                ]

                port DCpos {
                    position = -144.0, -96.0
                    kind = pe
                }
                [
                    position = 7360, 7672
                ]

                port DCneg {
                    position = -144.0, 96.0
                    kind = pe
                }
                [
                    position = 7360, 7864
                ]

                port Inputs {
                    position = -112.0, -120.0
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7768, 7120
                    rotation = right
                ]

                port Outputs {
                    position = 112.0, -120.0
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 9080, 7112
                    rotation = left
                ]

                tag From171 {
                    value = "inv_Vb"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8216, 7176
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto2 {
                    value = "m_a"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8520, 7144
                    rotation = down
                    hide_name = True
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto94 {
                    value = "m_c"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8520, 7400
                    rotation = down
                    hide_name = True
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From167 {
                    value = "On"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8304, 7056
                    rotation = right
                    hide_name = True
                    size = 60, 20
                ]

                tag From213 {
                    value = "m_a"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7864, 7584
                    hide_name = True
                    size = 60, 20
                ]

                tag From205 {
                    value = "mode"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8400, 7056
                    rotation = right
                    hide_name = True
                    size = 60, 20
                ]

                tag From206 {
                    value = "On"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7864, 7608
                    hide_name = True
                    size = 60, 20
                ]

                tag From215 {
                    value = "m_c"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7864, 7536
                    hide_name = True
                    size = 60, 20
                ]

                tag From208 {
                    value = "util_Vb"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8216, 7400
                    hide_name = True
                    size = 60, 20
                ]

                tag From214 {
                    value = "m_b"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7864, 7560
                    hide_name = True
                    size = 60, 20
                ]

                tag From209 {
                    value = "util_Va"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8216, 7368
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto98 {
                    value = "Ia_out"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 9184, 7640
                    rotation = down
                    hide_name = True
                    scale = -1, 1
                    size = 0, 0
                ]

                tag From210 {
                    value = "util_Vc"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8216, 7432
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto99 {
                    value = "Ic_out"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 9184, 7840
                    rotation = down
                    hide_name = True
                    scale = -1, 1
                    size = 0, 0
                ]

                tag Goto92 {
                    value = "CB"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8520, 7528
                    rotation = down
                    hide_name = True
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto100 {
                    value = "Ib_out"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 9184, 7736
                    rotation = down
                    hide_name = True
                    scale = -1, 1
                    size = 0, 0
                ]

                tag From211 {
                    value = "CB"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 9192, 7576
                    hide_name = True
                    size = 60, 20
                ]

                tag From189 {
                    value = "inv_Vc"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8832, 7368
                    hide_name = True
                    size = 60, 20
                ]

                tag From185 {
                    value = "On"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8832, 7296
                    hide_name = True
                    size = 60, 20
                ]

                tag From190 {
                    value = "Ia"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8832, 7392
                    hide_name = True
                    size = 60, 20
                ]

                tag From188 {
                    value = "inv_Va"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8832, 7320
                    hide_name = True
                    size = 60, 20
                ]

                tag From187 {
                    value = "inv_Vb"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8832, 7344
                    hide_name = True
                    size = 60, 20
                ]

                tag From192 {
                    value = "Ic"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8832, 7440
                    hide_name = True
                    size = 60, 20
                ]

                tag From191 {
                    value = "Ib"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8832, 7416
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto85 {
                    value = "inv_Vc"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8984, 7952
                    rotation = right
                    hide_name = True
                    scale = -1, 1
                    size = 0, 0
                ]

                tag From212 {
                    value = "CB"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8832, 7272
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto88 {
                    value = "Ic"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8496, 7832
                    rotation = down
                    hide_name = True
                    scale = -1, -1
                    size = 0, 0
                ]

                tag Goto87 {
                    value = "Ib"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8496, 7736
                    rotation = down
                    hide_name = True
                    scale = -1, -1
                    size = 0, 0
                ]

                tag Goto84 {
                    value = "inv_Vb"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8960, 7952
                    rotation = right
                    hide_name = True
                    scale = -1, 1
                    size = 0, 0
                ]

                tag Goto90 {
                    value = "util_Vb"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 9408, 7952
                    rotation = right
                    hide_name = True
                    scale = -1, 1
                    size = 0, 0
                ]

                tag Goto91 {
                    value = "util_Va"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 9384, 7952
                    rotation = right
                    hide_name = True
                    scale = -1, 1
                    size = 0, 0
                ]

                tag Goto18 {
                    value = "VDC"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7680, 7768
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto83 {
                    value = "inv_Va"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8936, 7952
                    rotation = right
                    hide_name = True
                    scale = -1, 1
                    size = 0, 0
                ]

                tag Goto89 {
                    value = "util_Vc"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 9432, 7952
                    rotation = right
                    hide_name = True
                    scale = -1, 1
                    size = 0, 0
                ]

                tag From182 {
                    value = "Ic"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8216, 7304
                    hide_name = True
                    size = 60, 20
                ]

                tag From169 {
                    value = "inv_Va"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8216, 7144
                    hide_name = True
                    size = 60, 20
                ]

                tag From184 {
                    value = "VDC"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8216, 7336
                    hide_name = True
                    size = 60, 20
                ]

                tag From181 {
                    value = "Ia"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8216, 7240
                    hide_name = True
                    size = 60, 20
                ]

                tag From170 {
                    value = "inv_Vc"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8216, 7208
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto86 {
                    value = "Ia"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8496, 7640
                    rotation = down
                    hide_name = True
                    scale = -1, -1
                    size = 0, 0
                ]

                tag From183 {
                    value = "Ib"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8216, 7272
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto93 {
                    value = "m_b"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8520, 7272
                    rotation = down
                    hide_name = True
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From216 {
                    value = "Ib_out"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8216, 7496
                    hide_name = True
                    size = 0, 0
                ]

                tag From217 {
                    value = "Ic_out"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8216, 7528
                    hide_name = True
                    size = 0, 0
                ]

                tag From218 {
                    value = "Ia_out"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8216, 7464
                    hide_name = True
                    size = 0, 0
                ]

                junction Junction10 pe
                [
                    position = 8696, 8104
                ]

                junction Junction118 pe
                [
                    position = 8152, 7768
                ]

                junction Junction129 pe
                [
                    position = 8152, 7672
                ]

                junction Junction130 pe
                [
                    position = 8152, 7864
                ]

                junction Junction176 pe
                [
                    position = 8584, 7768
                ]

                junction Junction178 pe
                [
                    position = 8584, 7672
                ]

                junction Junction203 pe
                [
                    position = 7520, 7864
                ]

                junction Junction204 pe
                [
                    position = 7520, 7672
                ]

                junction Junction205 pe
                [
                    position = 8624, 7672
                ]

                junction Junction206 pe
                [
                    position = 8696, 7768
                ]

                junction Junction207 pe
                [
                    position = 8768, 7864
                ]

                junction Junction208 pe
                [
                    position = 7600, 7672
                ]

                junction Junction209 pe
                [
                    position = 7600, 7864
                ]

                connect Cfa.n_node Junction10 as Connection7
                connect Cfb.n_node Junction10 as Connection8
                connect Control.Va From169 as Connection2808
                connect Control.Vc From170 as Connection2806
                connect Control.Vb From171 as Connection2807
                connect Control.Ia From181 as Connection2805
                connect Control.Ic From182 as Connection2803
                connect Control.Ib From183 as Connection2804
                connect Control.VDC From184 as Connection2802
                connect Control.Vb_util From208 as Connection2800
                connect Control.Va_util From209 as Connection2801
                connect Control.Vc_util From210 as Connection2799
                connect Control.m_a Goto2 as Connection2795
                connect Control.Contactor Goto92 as Connection2798
                connect Control.m_c Goto94 as Connection2797
                connect "Converter meas.VA" Goto83 as Connection2790
                connect "Converter meas.VB" Goto84 as Connection2791
                connect "Converter meas.VC" Goto85 as Connection2792
                connect From167 Control.On as Connection2793
                connect From185 Output.Inv_On as Connection2501
                connect From187 Output.Vb as Connection2503
                connect From190 Output.Ia as Connection2505
                connect From192 Output.Ic as Connection2507
                connect From205 Control.mode as Connection2794
                connect From206 "Three Phase Inverter1.En" as Connection2747
                connect From211 S1.ctrl_in as Connection2754
                connect From212 Output.Connected as Connection2755
                connect From213 "Three Phase Inverter1.InA" as Connection2769
                connect From215 "Three Phase Inverter1.InC" as Connection2771
                connect Goto100 Ib_out.out as Connection2778
                connect Goto86 Ia.out as Connection2258
                connect Goto87 Ib.out as Connection2259
                connect Goto88 Ic.out as Connection2260
                connect Goto93 Control.m_b as Connection2796
                connect Goto98 Ia_out.out as Connection2779
                connect Goto99 Ic_out.out as Connection2780
                connect "Grid meas.VC" Goto89 as Connection2736
                connect "Grid meas.VB" Goto90 as Connection2735
                connect "Grid meas.VA" Goto91 as Connection2734
                connect "Grid meas.C" S1.c_out as Connection2711
                connect "Grid meas.A" S1.a_out as Connection2715
                connect "Grid meas.B" S1.b_out as Connection2713
                connect Ia.n_node Junction178 as Connection2478
                connect Ia.p_node La.p_node as Connection2158
                connect Ia_out.p_node "Converter meas.a" as Connection2784
                connect Ia_out.n_node S1.a_in as Connection2781
                connect Ib.n_node Junction176 as Connection2473
                connect Ib_out.p_node "Converter meas.b" as Connection2786
                connect Ic.p_node Lc.p_node as Connection2156
                connect Ic_out.p_node "Converter meas.c" as Connection2788
                connect Ic_out.n_node S1.c_in as Connection2783
                connect Idc_link.n_node "Three Phase Inverter1.pos_out" as Connection18
                connect Inputs Control_Inputs.Inputs as Connection2496
                connect Junction10 Cfc.n_node as Connection2689
                connect Junction129 Ra.p_node as Connection34
                connect Junction130 Rc.p_node as Connection35
                connect Junction176 Vab1.n_node as Connection2474
                connect Junction178 Vab1.p_node as Connection2479
                connect Lb.p_node Ib.p_node as Connection2157
                connect Output.Va From188 as Connection2502
                connect Output.Vc From189 as Connection2504
                connect Output.Ib From191 as Connection2506
                connect Outputs Output.Out1 as Connection2499
                connect Ra.n_node La.n_node as Connection283
                connect Rb.p_node Junction118 as Connection50
                connect Rb.n_node Lb.n_node as Connection51
                connect Rc.n_node Lc.n_node as Connection52
                connect Rdc.p_node DCpos as Connection1078
                connect Rfa.p_node Cfa.p_node as Connection53
                connect Rfb.p_node Cfb.p_node as Connection55
                connect Rfc.p_node Cfc.p_node as Connection57
                connect S1.b_in Ib_out.n_node as Connection2782
                connect "Three Phase Inverter1.InB" From214 as Connection2770
                connect "Three Phase Inverter1.b_in" Junction118 as Connection67
                connect "Three Phase Inverter1.a_in" Junction129 as Connection68
                connect "Three Phase Inverter1.c_in" Junction130 as Connection69
                connect VDC.out Goto18 as Connection166
                connect Vab.n_node Junction118 as Connection74
                connect Vab.p_node Junction129 as Connection75
                connect Vbc.p_node Junction118 as Connection81
                connect Vbc.n_node Junction130 as Connection82
                connect From217 Control.Ic_out as Connection2809
                connect From216 Control.Ib_out as Connection2810
                connect From218 Control.Ia_out as Connection2811
                connect DCneg Junction203 as Connection2833
                connect Cdc.n_node Junction203 as Connection2835
                connect Rdc.n_node Junction204 as Connection2836
                connect Cdc.p_node Junction204 as Connection2838
                connect Junction178 Junction205 as Connection2842
                [
                    breakpoints = 8584, 7672
                ]
                connect Junction205 Rfa.n_node as Connection2843
                [
                    breakpoints = 8624, 7672; 8624, 7672
                ]
                connect "Converter meas.A" Junction205 as Connection2844
                connect Junction176 Junction206 as Connection2845
                [
                    breakpoints = 8584, 7768
                ]
                connect Junction206 Rfb.n_node as Connection2846
                [
                    breakpoints = 8696, 7768
                ]
                connect "Converter meas.B" Junction206 as Connection2847
                connect Ic.n_node Junction207 as Connection2848
                connect Junction207 Rfc.n_node as Connection2849
                [
                    breakpoints = 8768, 7864
                ]
                connect "Converter meas.C" Junction207 as Connection2850
                connect A "Grid meas.a" as Connection2851
                connect "Grid meas.b" B as Connection2852
                connect C "Grid meas.c" as Connection2853
                connect Junction204 Junction208 as Connection2856
                [
                    breakpoints = 7520, 7672
                ]
                connect Junction208 VDC.p_node as Connection2857
                [
                    breakpoints = 7600, 7672
                ]
                connect Idc_link.p_node Junction208 as Connection2858
                connect VDC.n_node Junction209 as Connection2859
                connect Junction209 Junction203 as Connection2860
                [
                    breakpoints = 7600, 7864
                ]
                connect "Three Phase Inverter1.neg_out" Junction209 as Connection2861

                ImodeId_Kp = "1.0"
                ImodeIq_Kp = "1.0"
                L = "5e-3"
                OutputFilterFc = "1500"
                Sn = "22e3"
                Ts = "T_charging_station"
                Vn = "208"
                Vn_dc = "400"
                fsw = "10000"

                mask {
                    icon = "image(\'converter_cabinet.svg\')"
                    description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">Battery inverter (Switching)  model.</span></p><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">The input \"mode\" define if the battery inverter is in grid forming or voltage mode (0) or in grid following  or current mode (1). When in voltage mode, the inverter will follow the references of voltage and frequency. When in current mode, the inverter will follow references for active and reactive power.</span></p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">The number of regular inputs is 5 and of outputs is 14. They are organized as an array in the following order:</span></p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">Inputs: 0 - On; 1 - mode; 2 - f_ref; 3 - Vref; 4 - Pref; 5 - Qref;</span></p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">Outputs: 0 - Connected; 1 - Inv_On; 2 - Va; 3 - Vb; 4 - Vc; 5 - Vt; 6 - Ia; 7 - Ib; 8 - Ic; 9 - f; 10 - P; 11 - Q; 12 - S; 13 - pf;</span></p><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"
                    help_file = "battery_inverter.html"

                    Sn {
                        label = "Nominal power"
                        widget = edit
                        type = generic
                        default_value = "1.6e6"
                        unit = "VA"
                        group = "1 - General"
                    }

                    Vn {
                        label = "Nominal voltage"
                        widget = edit
                        type = generic
                        default_value = "480.0"
                        unit = "V (line to line)"
                        group = "1 - General"
                    }

                    Vn_dc {
                        label = "Nominal DC link voltage"
                        widget = edit
                        type = generic
                        default_value = "1000.0"
                        unit = "V"
                        group = "1 - General"
                    }

                    fn {
                        label = "Nominal frequency"
                        widget = edit
                        type = generic
                        default_value = "60.0"
                        unit = "Hz"
                        group = "1 - General"
                    }

                    fsw {
                        label = "Switching frequency"
                        widget = edit
                        type = generic
                        default_value = "2500.0"
                        unit = "Hz"
                        group = "1 - General"
                    }

                    Ts {
                        label = "Execution rate"
                        widget = edit
                        type = generic
                        default_value = "200e-6"
                        unit = "s"
                        group = "1 - General"
                    }

                    L {
                        label = "LC filter inductance"
                        widget = edit
                        type = generic
                        default_value = "100.0e-6"
                        unit = "H"
                        group = "2 - Filter"
                    }

                    R {
                        label = "LC filter inductor ESR"
                        widget = edit
                        type = generic
                        default_value = "1e-5"
                        unit = "Ohms"
                        group = "2 - Filter"
                    }

                    OutputFilterFc {
                        label = "LC filter cut-off frequency"
                        widget = edit
                        type = generic
                        default_value = "500.0"
                        unit = "Hz"
                        group = "2 - Filter"
                    }

                    Resr {
                        label = "LC filter capacitor ESR"
                        widget = edit
                        type = generic
                        default_value = "15e-3"
                        unit = "Ohms"
                        group = "2 - Filter"
                    }

                    blowpass {
                        label = "Synch - PLL input filter num"
                        widget = edit
                        type = generic
                        default_value = "[  9.82591682e-06,   1.96518336e-05,   9.82591682e-06]"
                        group = "3 - Adv. 1"
                    }

                    alowpass {
                        label = "Synch - PLL input filter den"
                        widget = edit
                        type = generic
                        default_value = "[ -1.99111429,  0.9911536 ]"
                        group = "3 - Adv. 1"
                    }

                    V_diff {
                        label = "Synch - Accepted voltage diff."
                        widget = edit
                        type = generic
                        default_value = "5"
                        unit = "%"
                        group = "3 - Adv. 1"
                    }

                    Vmatch_Kp {
                        label = "Synch - Voltage match - PI - Kp"
                        widget = edit
                        type = generic
                        default_value = "0.1"
                        group = "3 - Adv. 1"
                    }

                    Vmatch_Ki {
                        label = "Synch - Voltage match - PI - Ki"
                        widget = edit
                        type = generic
                        default_value = "5.0"
                        group = "3 - Adv. 1"
                    }

                    f_diff {
                        label = "Synch - Accepted frequency diff."
                        widget = edit
                        type = generic
                        default_value = "0.2"
                        unit = "%"
                        group = "3 - Adv. 1"
                    }

                    fmatch_Kp {
                        label = "Synch - Frequency match - PI - Kp"
                        widget = edit
                        type = generic
                        default_value = "0.01"
                        group = "3 - Adv. 1"
                    }

                    fmatch_Ki {
                        label = "Synch - Frequency match - PI - Ki"
                        widget = edit
                        type = generic
                        default_value = "3.0"
                        group = "3 - Adv. 1"
                    }

                    Phase_diff {
                        label = "Synch - Accepted phase diff."
                        widget = edit
                        type = generic
                        default_value = "1.0"
                        unit = "%"
                        group = "3 - Adv. 1"
                    }

                    Phase_Kp {
                        label = "Synch - Phase match - PI - Kp"
                        widget = edit
                        type = generic
                        default_value = "0.005"
                        group = "3 - Adv. 1"
                    }

                    Phase_Ki {
                        label = "Synch - Phase match - PI - Ki"
                        widget = edit
                        type = generic
                        default_value = "0.5"
                        group = "3 - Adv. 1"
                    }

                    ImodeId_Kp {
                        label = "Current mode Id - PI - Kp"
                        widget = edit
                        type = generic
                        default_value = "0.347"
                        group = "4 - Adv. 2"
                    }

                    ImodeId_Ki {
                        label = "Current mode Id - PI - Ki"
                        widget = edit
                        type = generic
                        default_value = "347.22"
                        group = "4 - Adv. 2"
                    }

                    ImodeIq_Kp {
                        label = "Current mode Iq - PI - Kd"
                        widget = edit
                        type = generic
                        default_value = "0.347"
                        group = "4 - Adv. 2"
                    }

                    ImodeIq_Ki {
                        label = "Current mode Iq - PI - Ki"
                        widget = edit
                        type = generic
                        default_value = "347.22"
                        group = "4 - Adv. 2"
                    }

                    Imode_damp {
                        label = "Current mode Id and Iq damping gain"
                        widget = edit
                        type = generic
                        default_value = "-0.272"
                        group = "4 - Adv. 2"
                    }

                    powerRate {
                        label = "Maximum power reference change rate"
                        widget = edit
                        type = generic
                        default_value = "1e5"
                        unit = "p.u./s"
                        group = "4 - Adv. 2"
                    }

                    VmodeIdRef_Kp {
                        label = "Voltage mode Id ref - PI - Kp"
                        widget = edit
                        type = generic
                        default_value = "10.0"
                        group = "5 - Adv. 3"
                    }

                    VmodeIdRef_Ki {
                        label = "Voltage mode Id ref - PI - Ki"
                        widget = edit
                        type = generic
                        default_value = "10.0"
                        group = "5 - Adv. 3"
                    }

                    VmodeId_Kp {
                        label = "Voltage mode Id - PI - Kp"
                        widget = edit
                        type = generic
                        default_value = "0.8328"
                        group = "5 - Adv. 3"
                    }

                    VmodeId_Ki {
                        label = "Voltage mode Id - PI - Ki"
                        widget = edit
                        type = generic
                        default_value = "833.33"
                        group = "5 - Adv. 3"
                    }

                    Vmode_ovMod {
                        label = "Voltage mode Id overmodulation gain"
                        widget = edit
                        type = generic
                        default_value = "1.2"
                        group = "5 - Adv. 3"
                    }

                    Vmode_damp {
                        label = "Voltage mode Id damping gain"
                        widget = edit
                        type = generic
                        default_value = "-0.0001"
                        group = "5 - Adv. 3"
                    }

                    V_rise {
                        label = "V reference rising rate"
                        widget = edit
                        type = generic
                        default_value = "10e3"
                        unit = "p.u./s"
                        group = "5 - Adv. 3"
                    }

                    V_fall {
                        label = "V reference falling rate"
                        widget = edit
                        type = generic
                        default_value = "-10e3"
                        unit = "p.u./s"
                        group = "5 - Adv. 3"
                    }

                    f_rise {
                        label = "f reference rising rate"
                        widget = edit
                        type = generic
                        default_value = "10.0"
                        unit = "p.u./s"
                        group = "5 - Adv. 3"
                    }

                    f_fall {
                        label = "f reference falling rate"
                        widget = edit
                        type = generic
                        default_value = "-10.0"
                        unit = "p.u./s"
                        group = "5 - Adv. 3"
                    }

                    mod_upLim {
                        label = "Modulation signals upper limit"
                        widget = edit
                        type = generic
                        default_value = "1.1546"
                        group = "6 - Adv. 4"
                    }

                    mod_lowLim {
                        label = "Modulation signals lower limit"
                        widget = edit
                        type = generic
                        default_value = "-1.1546"
                        group = "6 - Adv. 4"
                    }

                    k {
                        label = "Active islanding detector k factor"
                        widget = edit
                        type = generic
                        default_value = "0.05"
                        group = "6 - Adv. 4"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                    
                    ENDCODE

                    CODE define_icon
                        mdl.set_component_icon_image(item_handle, "converter_cabinet.svg")
                    ENDCODE
                }
            }
            [
                position = 9992, 8256
                scale = -1, 1
                size = 288, 239
            ]

            component gen_bus_split "Bus Split1" {
            }
            [
                position = 10000, 7904
            ]

            component "core/Three Phase Core Coupling" "Core Coupling1" {
                C1 = "10e-6"
                L1 = "100e-6"
                R1 = "1"
                R2 = "1e-2"
                fixed_snb_i = "true"
                fixed_snb_u = "true"
                snb_type_i = "R1-C1"
            }
            [
                position = 9528, 8256
                scale = -1, 1
                size = 12, 256
            ]

            component "core/Rate Transition" "Rate Transition1" {
                execution_rate = "T_charging_station"
            }
            [
                position = 9936, 7904
                hide_name = True
                size = 32, 32
            ]

            port DC- {
                position = left:3
                kind = pe
            }
            [
                position = 10304, 8352
                scale = -1, 1
            ]

            port DC+ {
                position = left:1
                kind = pe
            }
            [
                position = 10304, 8160
                scale = -1, 1
            ]

            port A {
                position = right:1
                kind = pe
            }
            [
                position = 9240, 8160
                rotation = down
                scale = -1, 1
            ]

            port B {
                position = right:2
                kind = pe
            }
            [
                position = 9240, 8256
                rotation = down
                scale = -1, 1
            ]

            port C {
                position = right:3
                kind = pe
            }
            [
                position = 9240, 8352
                rotation = down
                scale = -1, 1
            ]

            port in_extras {
                position = top:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 9872, 7904
            ]

            port out_extras {
                position = top:1
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 9728, 7976
                rotation = down
            ]

            connect Charging_station_meter_split.In Charging_station_meter.Out as Connection4026
            connect "Battery inverter.Outputs" Batt_out.outputs as Connection1105
            connect Batt_in.inputs "Battery inverter.Inputs" as Connection1106
            connect Charging_station_meter.C- "Battery inverter.C" as Connection4057
            connect Charging_station_meter.B- "Battery inverter.B" as Connection4058
            connect "Battery inverter.A" Charging_station_meter.A- as Connection4059
            connect "Battery inverter.DCpos" DC+ as Connection4060
            connect "Battery inverter.DCneg" DC- as Connection4061
            connect "Bus Split1.out" Batt_in.motor_status as Connection4064
            connect Batt_out.charger_CB out_extras as Connection4065
            connect "Bus Split1.out1" Batt_in.speedkmh as Connection4066
            connect B "Core Coupling1.b_out" as Connection4067
            connect "Core Coupling1.b_in" Charging_station_meter.B+ as Connection4068
            connect Charging_station_meter.C+ "Core Coupling1.c_in" as Connection4069
            connect "Core Coupling1.c_out" C as Connection4070
            connect Charging_station_meter.A+ "Core Coupling1.a_in" as Connection4071
            connect "Core Coupling1.a_out" A as Connection4072
            connect in_extras "Rate Transition1.in" as Connection4073
            connect "Rate Transition1.out" "Bus Split1.in" as Connection4074

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Charging point.</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Look under mask (Ctrl+Enter)</p></body></html>"

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE

                CODE define_icon
                    image(r"C:\00 Typhoon SVN\t_misc\00 Project management\90 Demos\0900 EATON-Typhoon Demo 5_26_2020\img\station.png")
                ENDCODE
            }
        }
        [
            position = 8152, 8144
            scale = -1, 1
            size = 200, 240
        ]

        component Subsystem Grid {
            layout = dynamic
            component "core/Three Phase Two Winding Transformer" "TRF 2-4" {
                L1 = "1e-3"
                L2 = "1e-5"
                Lm = "412.478948173"
                Poc1 = "6000.0"
                Psc1 = "59999.9999999"
                R1 = "1e-2"
                R2 = "1e-4"
                Rm = "1e5"
                Sn = "1e6"
                V1 = "4160.0"
                V2 = "208"
                current_vals_SI = "[0.544364482709772, 226.8185344619514]"
                current_vals_pu = "[0.0024000000000010055, 0.9999999999982144]"
                f = "60.0"
                flux_vals_SI = "[56.134722312395574, 71.10398159570106]"
                flux_vals_pu = "[1.2000000000000948, 1.5199999999999776]"
                input = "SI"
                ioc1 = "0.111803398875"
                l1 = "0.03"
                l2 = "0.0300000000001"
                lm = "2000.00000001"
                r1 = "0.005"
                r2 = "0.00499999999999"
                rm = "1000.0"
                usc1 = "6.0827625303"
            }
            [
                position = 9320, 8432
                size = 126, 256
            ]

            component src_ground gnd1 {
            }
            [
                position = 7008, 8760
            ]

            component "core/Three Phase Voltage Source" Vgrid {
                init_frequency = "60"
                init_rms_value = "7200.0"
            }
            [
                position = 7088, 8648
                size = 62, 256
            ]

            component src_ground gnd2 {
            }
            [
                position = 7944, 8840
            ]

            component "core/Transmission Line" "OHL 3-4" {
                C_imperial = "[[0.00233, 0.00140, 0.00140], [0.00140, 0.00233, 0.00140], [0.00140, 0.00140, 0.00233]]"
                Earth_resistivity = "100.0"
                Length_miles = "0.4734848"
            }
            [
                position = 8576, 8648
                size = 256, 72
            ]

            component "core/Transmission Line" "OHL 1-2" {
                C_imperial = "[[0.00233, 0.00140, 0.00140], [0.00140, 0.00233, 0.00140], [0.00140, 0.00140, 0.00233]]"
                Earth_resistivity = "100.0"
                L_imperial = "[[0.003748866547027611, 0.00225878688566188, 0.0019273845193970814], [0.00225878688566188, 0.003748866547027611, 0.002069596697173833], [0.0019273845193970814, 0.002069596697173833, 0.003748866547027611]]"
                L_sequence_imperial = "[[0.007919378615182807, 7.829668451883778e-06, 7.829668451883925e-06], [7.829668451883337e-06, 0.001663610512950013, -1.5659336903765384e-05], [7.82966845188238e-06, -1.565933690376498e-05, 0.001663610512950013]]"
                Length_miles = "0.3787879"
                R_imperial = "[[0.4013015317516005, 0.09530153175160051, 0.09530153175160051], [0.09530153175160051, 0.4013015317516005, 0.09530153175160051], [0.09530153175160051, 0.09530153175160051, 0.4013015317516005]]"
                R_sequence_imperial = "[[0.5919045952548015, 0.03606584407420843, -0.03606584407420843], [-0.03606584407420857, 0.30599999999999994, -0.07213168814841672], [0.0360658440742086, 0.0721316881484168, 0.3059999999999999]]"
            }
            [
                position = 7480, 8648
                size = 256, 72
            ]

            component "core/Three Phase Two Winding Transformer" "TRF 2-3" {
                L1 = "0.00618718422256"
                L2 = "0.000229522648598"
                Lm = "412.478948173"
                Poc1 = "6000.0"
                Psc1 = "59999.9999999"
                R1 = "0.38875225"
                R2 = "0.0144213333333"
                Rm = "77750.45"
                Sn = "6000000.0"
                V1 = "12470.0"
                V2 = "4160.0"
                clock_number = "1"
                current_vals_SI = "[0.544364482709772, 226.8185344619514]"
                current_vals_pu = "[0.0024000000000010055, 0.9999999999982144]"
                f = "60.0"
                flux_vals_SI = "[56.134722312395574, 71.10398159570106]"
                flux_vals_pu = "[1.2000000000000948, 1.5199999999999776]"
                input = "SI"
                ioc1 = "0.111803398875"
                l1 = "0.03"
                l2 = "0.0300000000001"
                lm = "2000.00000001"
                r1 = "0.005"
                r2 = "0.00499999999999"
                rm = "1000.0"
                usc1 = "6.0827625303"
                winding_1_connection = "D"
            }
            [
                position = 7912, 8648
                size = 126, 256
            ]

            component Subsystem "Node 3" {
                layout = dynamic
                component gen_rms_value RMS1 {
                }
                [
                    position = 7496, 7440
                ]

                component gen_rms_value RMS3 {
                }
                [
                    position = 7496, 7552
                ]

                component gen_probe P {
                    addr = "17999"
                }
                [
                    position = 8256, 7472
                ]

                component gen_probe S {
                    addr = "18000"
                }
                [
                    position = 8256, 7664
                ]

                component gen_terminator t1 {
                }
                [
                    position = 8256, 7568
                ]

                component gen_PQ_transform pwr_meter {
                    execution_rate = "ex_rate"
                }
                [
                    position = 8144, 7592
                ]

                component gen_terminator t2 {
                }
                [
                    position = 8256, 7616
                ]

                component gen_probe Q {
                    addr = "17998"
                }
                [
                    position = 8256, 7520
                ]

                component gen_rms_value RMS2 {
                }
                [
                    position = 7496, 7496
                ]

                component gen_probe pf {
                    addr = "17935"
                }
                [
                    position = 8256, 7712
                ]

                component "core/Current Measurement" I1 {
                    addr = "94"
                    execution_rate = "ex_rate"
                    sig_output = "True"
                }
                [
                    position = 7552, 7936
                    size = 64, 32
                ]

                component src_ground gnd {
                }
                [
                    position = 7816, 8384
                ]

                component gen_rms_value RMS4 {
                }
                [
                    position = 7496, 7728
                ]

                component gen_rms_value RMS5 {
                }
                [
                    position = 7496, 7672
                ]

                component gen_rms_value RMS6 {
                }
                [
                    position = 7496, 7616
                ]

                component gen_probe I1_rms {
                    signal_type = "current"
                }
                [
                    position = 7560, 7616
                ]

                component gen_probe I2_rms {
                    signal_type = "current"
                }
                [
                    position = 7560, 7672
                ]

                component gen_probe I3_rms {
                    signal_type = "current"
                }
                [
                    position = 7560, 7728
                ]

                component gen_probe V1_rms {
                    signal_type = "voltage"
                }
                [
                    position = 7560, 7440
                ]

                component gen_probe V2_rms {
                    signal_type = "voltage"
                }
                [
                    position = 7560, 7496
                ]

                component gen_probe V3_rms {
                    signal_type = "voltage"
                }
                [
                    position = 7560, 7552
                ]

                component msr_phase ph_diff1 {
                }
                [
                    position = 7784, 7336
                ]

                component gen_probe V1_phase {
                    addr = "17999"
                }
                [
                    position = 7872, 7336
                ]

                component msr_phase ph_diff2 {
                }
                [
                    position = 7784, 7432
                ]

                component msr_phase ph_diff3 {
                }
                [
                    position = 7784, 7528
                ]

                component msr_phase ph_diff4 {
                }
                [
                    position = 7784, 7824
                ]

                component msr_phase ph_diff5 {
                }
                [
                    position = 7784, 7632
                ]

                component msr_phase ph_diff6 {
                }
                [
                    position = 7784, 7728
                ]

                component "core/Current Measurement" I2 {
                    addr = "95"
                    execution_rate = "ex_rate"
                    sig_output = "True"
                }
                [
                    position = 7552, 8048
                    size = 64, 32
                ]

                component "core/Current Measurement" I3 {
                    addr = "96"
                    execution_rate = "ex_rate"
                    sig_output = "True"
                }
                [
                    position = 7552, 8152
                    size = 64, 32
                ]

                component "core/Voltage Measurement" V1 {
                    addr = "51"
                    execution_rate = "ex_rate"
                    sig_output = "True"
                }
                [
                    position = 7656, 8272
                    rotation = right
                    size = 64, 32
                ]

                component "core/Voltage Measurement" V2 {
                    addr = "52"
                    execution_rate = "ex_rate"
                    sig_output = "True"
                }
                [
                    position = 7816, 8272
                    rotation = right
                    size = 64, 32
                ]

                component "core/Voltage Measurement" V3 {
                    addr = "53"
                    execution_rate = "ex_rate"
                    sig_output = "True"
                }
                [
                    position = 7976, 8272
                    rotation = right
                    size = 64, 32
                ]

                component gen_probe V2_phase {
                    addr = "17999"
                }
                [
                    position = 7872, 7432
                ]

                component gen_probe V3_phase {
                    addr = "17999"
                }
                [
                    position = 7872, 7528
                ]

                component gen_probe I1_phase {
                    addr = "17999"
                }
                [
                    position = 7872, 7632
                ]

                component gen_probe I2_phase {
                    addr = "17999"
                }
                [
                    position = 7872, 7728
                ]

                component gen_probe I3_phase {
                    addr = "17999"
                }
                [
                    position = 7872, 7824
                ]

                port A2 {
                    label = "A2"
                    position = right:1
                    kind = pe
                }
                [
                    position = 8264, 7936
                    hide_name = True
                    scale = -1, 1
                ]

                port B1 {
                    label = "B1"
                    position = left:2
                    kind = pe
                }
                [
                    position = 7424, 8048
                    hide_name = True
                ]

                port A1 {
                    label = "A1"
                    position = left:1
                    kind = pe
                }
                [
                    position = 7424, 7936
                    hide_name = True
                ]

                port C1 {
                    label = "C1"
                    position = left:3
                    kind = pe
                }
                [
                    position = 7424, 8152
                    hide_name = True
                ]

                port B2 {
                    label = "B2"
                    position = right:2
                    kind = pe
                }
                [
                    position = 8264, 8048
                    hide_name = True
                    scale = -1, 1
                ]

                port C2 {
                    label = "C2"
                    position = right:3
                    kind = pe
                }
                [
                    position = 8264, 8152
                    hide_name = True
                    scale = -1, 1
                ]

                tag I1_goto {
                    value = "I1"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7600, 7896
                ]

                tag I2_goto {
                    value = "I2"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7600, 8000
                ]

                tag I3_goto {
                    value = "I3"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7600, 8104
                ]

                tag V1_goto {
                    value = "V1"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7736, 8272
                ]

                tag V2_goto {
                    value = "V2"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7896, 8272
                ]

                tag V3_goto {
                    value = "V3"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8056, 8272
                ]

                tag I1_from {
                    value = "I1"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7992, 7616
                ]

                tag I2_from {
                    value = "I2"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7992, 7656
                ]

                tag I3_from {
                    value = "I3"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7992, 7696
                ]

                tag V3_from {
                    value = "V3"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7992, 7568
                ]

                tag V2_from {
                    value = "V2"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7992, 7528
                ]

                tag V1_from {
                    value = "V1"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7992, 7488
                ]

                tag I1_from1 {
                    value = "I1"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7400, 7616
                ]

                tag V2_from1 {
                    value = "V2"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7400, 7496
                ]

                tag I2_from1 {
                    value = "I2"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7400, 7672
                ]

                tag V3_from1 {
                    value = "V3"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7400, 7552
                ]

                tag V1_from1 {
                    value = "V1"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7400, 7440
                ]

                tag I3_from1 {
                    value = "I3"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7400, 7728
                ]

                tag V1_REF_from {
                    value = "V1_REF"
                    scope = global
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7312
                ]

                tag V1_REF_from1 {
                    value = "V1_REF"
                    scope = global
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7408
                ]

                tag V1_REF_from2 {
                    value = "V1_REF"
                    scope = global
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7504
                ]

                tag V1_REF_from3 {
                    value = "V1_REF"
                    scope = global
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7608
                ]

                tag V1_REF_from4 {
                    value = "V1_REF"
                    scope = global
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7704
                ]

                tag V1_REF_from5 {
                    value = "V1_REF"
                    scope = global
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7800
                ]

                tag V2_from2 {
                    value = "V2"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7456
                ]

                tag V1_from2 {
                    value = "V1"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7360
                ]

                tag V3_from2 {
                    value = "V3"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7552
                ]

                tag I1_from2 {
                    value = "I1"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7656
                ]

                tag I2_from2 {
                    value = "I2"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7752
                ]

                tag I3_from2 {
                    value = "I3"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7848
                ]

                junction Junction5 pe
                [
                    position = 7816, 8320
                ]

                junction Junction8 pe
                [
                    position = 7656, 7936
                ]

                junction Junction9 pe
                [
                    position = 7816, 8048
                ]

                junction Junction18 pe
                [
                    position = 7976, 8152
                ]

                junction Junction22 pe
                [
                    position = 7816, 8320
                ]

                comment Comment2 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
                [
                    position = 7688, 7248
                ]

                comment Comment3 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Power Calculation</span></p></body></html> ENDCOMMENT 
                [
                    position = 8008, 7328
                ]

                comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">RMS Calculation</span></p></body></html> ENDCOMMENT 
                [
                    position = 7400, 7328
                ]

                connect A1 I1.p_node as Connection166
                connect B2 Junction9 as Connection141
                connect C1 I3.p_node as Connection168
                connect C2 Junction18 as Connection145
                connect I1.n_node Junction8 as Connection102
                connect I1_from pwr_meter.ia as Connection229
                [
                    breakpoints = 8040, 7616; 8040, 7600
                ]
                connect I1_from1 RMS6.in as Connection196
                connect I1_from2 ph_diff5.signal1 as Connection221
                connect I1_goto I1.out as Connection178
                connect I1_phase.in ph_diff5.phase_diff as Connection217
                connect I1_rms.in RMS6.out as Connection191
                connect I2.p_node B1 as Connection167
                connect I2.out I2_goto as Connection179
                connect I2.n_node Junction9 as Connection105
                connect I2_from pwr_meter.ib as Connection185
                [
                    breakpoints = 8056, 7656; 8056, 7616; 8104, 7616
                ]
                connect I2_from1 RMS5.in as Connection197
                connect I2_from2 ph_diff6.signal1 as Connection222
                connect I2_phase.in ph_diff6.phase_diff as Connection214
                connect I2_rms.in RMS5.out as Connection192
                connect I3_from pwr_meter.ic as Connection186
                [
                    breakpoints = 8072, 7696; 8072, 7632
                ]
                connect I3_from1 RMS4.in as Connection198
                connect I3_from2 ph_diff4.signal1 as Connection223
                connect I3_goto I3.out as Connection180
                connect I3_phase.in ph_diff4.phase_diff as Connection213
                connect I3_rms.in RMS4.out as Connection190
                connect Junction18 I3.n_node as Connection146
                connect Junction22 Junction5 as Connection176
                connect Junction8 A2 as Connection230
                [
                    breakpoints = 7656, 7936; 8168, 7936
                ]
                connect Junction8 V1.p_node as Connection170
                [
                    breakpoints = 7656, 7936; 7656, 8216
                ]
                connect V1.n_node Junction22 as Connection175
                [
                    breakpoints = 7712, 8320; 7792, 8320
                ]
                connect V1_REF_from ph_diff1.signal2 as Connection202
                connect V1_REF_from1 ph_diff2.signal2 as Connection204
                connect V1_REF_from2 ph_diff3.signal2 as Connection208
                connect V1_REF_from3 ph_diff5.signal2 as Connection216
                connect V1_REF_from4 ph_diff6.signal2 as Connection211
                connect V1_REF_from5 ph_diff4.signal2 as Connection212
                connect V1_from pwr_meter.va as Connection189
                [
                    breakpoints = 8072, 7488; 8072, 7552
                ]
                connect V1_from1 RMS1.in as Connection193
                connect V1_from2 ph_diff1.signal1 as Connection219
                connect V1_goto V1.out as Connection183
                connect V1_phase.in ph_diff1.phase_diff as Connection200
                connect V1_rms.in RMS1.out as Connection154
                connect V2.n_node Junction5 as Connection95
                connect V2.p_node Junction9 as Connection172
                [
                    breakpoints = 7816, 8216
                ]
                connect V2_from pwr_meter.vb as Connection188
                [
                    breakpoints = 8056, 7528; 8056, 7568
                ]
                connect V2_from1 RMS2.in as Connection194
                connect V2_from2 ph_diff2.signal1 as Connection218
                connect V2_goto V2.out as Connection182
                connect V2_phase.in ph_diff2.phase_diff as Connection203
                connect V2_rms.in RMS2.out as Connection155
                connect V3.p_node Junction18 as Connection174
                [
                    breakpoints = 7976, 8216
                ]
                connect V3.n_node Junction5 as Connection173
                [
                    breakpoints = 7952, 8320
                ]
                connect V3_from pwr_meter.vc as Connection187
                [
                    breakpoints = 8040, 7584; 8104, 7584
                ]
                connect V3_from1 RMS3.in as Connection195
                connect V3_from2 ph_diff3.signal1 as Connection220
                connect V3_goto V3.out as Connection181
                connect V3_phase.in ph_diff3.phase_diff as Connection207
                connect V3_rms.in RMS3.out as Connection156
                connect gnd.node Junction22 as Connection177
                connect pwr_meter.Pdc P.in as Connection134
                [
                    breakpoints = 8184, 7552; 8184, 7472
                ]
                connect pwr_meter.Qdc Q.in as Connection133
                [
                    breakpoints = 8200, 7568; 8200, 7520
                ]
                connect pwr_meter.apparent S.in as Connection131
                [
                    breakpoints = 8200, 7616; 8200, 7664
                ]
                connect pwr_meter.k_factor pf.in as Connection132
                [
                    breakpoints = 8184, 7632; 8184, 7712
                ]
                connect pwr_meter.Pac t1.in as Connection129
                connect pwr_meter.Qac t2.in as Connection130

                mask {
                    icon = "image(\'msr_unit.png\')"
                    description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE

                    CODE define_icon
                        image(r'C:\00 Typhoon SVN\t_misc\00 Project management\90 Demos\260 ITEC2020 Conference\00 Models\img\msr_unit.png')
                    ENDCODE
                }
            }
            [
                position = 8096, 8648
                size = 80, 64
            ]

            component Subsystem "Node 4" {
                layout = dynamic
                component gen_rms_value RMS5 {
                }
                [
                    position = 7496, 7672
                ]

                component src_ground gnd {
                }
                [
                    position = 7816, 8384
                ]

                component msr_phase ph_diff5 {
                }
                [
                    position = 7784, 7632
                ]

                component msr_phase ph_diff2 {
                }
                [
                    position = 7784, 7432
                ]

                component gen_probe V2_rms {
                    signal_type = "voltage"
                }
                [
                    position = 7560, 7496
                ]

                component gen_rms_value RMS2 {
                }
                [
                    position = 7496, 7496
                ]

                component gen_probe I3_rms {
                    signal_type = "current"
                }
                [
                    position = 7560, 7728
                ]

                component msr_phase ph_diff6 {
                }
                [
                    position = 7784, 7728
                ]

                component gen_probe S {
                    addr = "18000"
                }
                [
                    position = 8256, 7664
                ]

                component gen_probe I2_rms {
                    signal_type = "current"
                }
                [
                    position = 7560, 7672
                ]

                component gen_terminator t1 {
                }
                [
                    position = 8256, 7568
                ]

                component gen_probe I1_rms {
                    signal_type = "current"
                }
                [
                    position = 7560, 7616
                ]

                component gen_rms_value RMS3 {
                }
                [
                    position = 7496, 7552
                ]

                component "core/Current Measurement" I2 {
                    addr = "95"
                    execution_rate = "ex_rate"
                    sig_output = "True"
                }
                [
                    position = 7552, 8048
                ]

                component msr_phase ph_diff3 {
                }
                [
                    position = 7784, 7528
                ]

                component "core/Current Measurement" I3 {
                    addr = "96"
                    execution_rate = "ex_rate"
                    sig_output = "True"
                }
                [
                    position = 7552, 8152
                ]

                component gen_terminator t2 {
                }
                [
                    position = 8256, 7616
                ]

                component gen_probe V3_rms {
                    signal_type = "voltage"
                }
                [
                    position = 7560, 7552
                ]

                component "core/Current Measurement" I1 {
                    addr = "94"
                    execution_rate = "ex_rate"
                    sig_output = "True"
                }
                [
                    position = 7552, 7936
                ]

                component "core/Voltage Measurement" V1 {
                    addr = "51"
                    execution_rate = "ex_rate"
                    sig_output = "True"
                }
                [
                    position = 7656, 8272
                    rotation = right
                ]

                component gen_probe pf {
                    addr = "17935"
                }
                [
                    position = 8256, 7712
                ]

                component gen_probe V1_rms {
                    signal_type = "voltage"
                }
                [
                    position = 7560, 7440
                ]

                component gen_PQ_transform pwr_meter {
                    execution_rate = "ex_rate"
                }
                [
                    position = 8144, 7592
                ]

                component gen_rms_value RMS6 {
                }
                [
                    position = 7496, 7616
                ]

                component msr_phase ph_diff4 {
                }
                [
                    position = 7784, 7824
                ]

                component gen_probe Q {
                    addr = "17998"
                }
                [
                    position = 8256, 7520
                ]

                component "core/Voltage Measurement" V2 {
                    addr = "52"
                    execution_rate = "ex_rate"
                    sig_output = "True"
                }
                [
                    position = 7816, 8272
                    rotation = right
                ]

                component gen_rms_value RMS4 {
                }
                [
                    position = 7496, 7728
                ]

                component gen_probe P {
                    addr = "17999"
                }
                [
                    position = 8256, 7472
                ]

                component "core/Voltage Measurement" V3 {
                    addr = "53"
                    execution_rate = "ex_rate"
                    sig_output = "True"
                }
                [
                    position = 7976, 8272
                    rotation = right
                ]

                component msr_phase ph_diff1 {
                }
                [
                    position = 7784, 7336
                ]

                component gen_rms_value RMS1 {
                }
                [
                    position = 7496, 7440
                ]

                component gen_probe I3_phase {
                    addr = "17999"
                }
                [
                    position = 7880, 7824
                ]

                component gen_probe V3_phase {
                    addr = "17999"
                }
                [
                    position = 7880, 7528
                ]

                component gen_probe I2_phase {
                    addr = "17999"
                }
                [
                    position = 7880, 7728
                ]

                component gen_probe V1_phase {
                    addr = "17999"
                }
                [
                    position = 7880, 7336
                ]

                component gen_probe V2_phase {
                    addr = "17999"
                }
                [
                    position = 7880, 7432
                ]

                component gen_probe I1_phase {
                    addr = "17999"
                }
                [
                    position = 7880, 7632
                ]

                port A2 {
                    label = "A2"
                    position = right:1
                    kind = pe
                }
                [
                    position = 8264, 7936
                    hide_name = True
                    scale = -1, 1
                ]

                port B1 {
                    label = "B1"
                    position = left:2
                    kind = pe
                }
                [
                    position = 7424, 8048
                    hide_name = True
                ]

                port A1 {
                    label = "A1"
                    position = left:1
                    kind = pe
                }
                [
                    position = 7424, 7936
                    hide_name = True
                ]

                port C1 {
                    label = "C1"
                    position = left:3
                    kind = pe
                }
                [
                    position = 7424, 8152
                    hide_name = True
                ]

                port B2 {
                    label = "B2"
                    position = right:2
                    kind = pe
                }
                [
                    position = 8264, 8048
                    hide_name = True
                    scale = -1, 1
                ]

                port C2 {
                    label = "C2"
                    position = right:3
                    kind = pe
                }
                [
                    position = 8264, 8152
                    hide_name = True
                    scale = -1, 1
                ]

                tag V2_from {
                    value = "V2"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7992, 7528
                ]

                tag V2_goto {
                    value = "V2"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7896, 8272
                ]

                tag I3_from2 {
                    value = "I3"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7848
                ]

                tag V1_REF_from4 {
                    value = "V1_REF"
                    scope = global
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7704
                ]

                tag I3_from1 {
                    value = "I3"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7400, 7728
                ]

                tag V1_REF_from {
                    value = "V1_REF"
                    scope = global
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7312
                ]

                tag I3_from {
                    value = "I3"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7992, 7696
                ]

                tag V3_goto {
                    value = "V3"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8056, 8272
                ]

                tag V2_from2 {
                    value = "V2"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7456
                ]

                tag V3_from2 {
                    value = "V3"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7552
                ]

                tag V3_from {
                    value = "V3"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7992, 7568
                ]

                tag V1_from2 {
                    value = "V1"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7360
                ]

                tag I2_from {
                    value = "I2"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7992, 7656
                ]

                tag V1_REF_from1 {
                    value = "V1_REF"
                    scope = global
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7408
                ]

                tag V1_REF_from5 {
                    value = "V1_REF"
                    scope = global
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7800
                ]

                tag I2_goto {
                    value = "I2"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7600, 8000
                ]

                tag I1_goto {
                    value = "I1"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7600, 7896
                ]

                tag V1_from {
                    value = "V1"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7992, 7488
                ]

                tag I1_from2 {
                    value = "I1"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7656
                ]

                tag V2_from1 {
                    value = "V2"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7400, 7496
                ]

                tag V1_from1 {
                    value = "V1"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7400, 7440
                ]

                tag V1_REF_from3 {
                    value = "V1_REF"
                    scope = global
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7608
                ]

                tag I1_from {
                    value = "I1"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7992, 7616
                ]

                tag I2_from1 {
                    value = "I2"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7400, 7672
                ]

                tag V3_from1 {
                    value = "V3"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7400, 7552
                ]

                tag V1_goto {
                    value = "V1"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7736, 8272
                ]

                tag V1_REF_from2 {
                    value = "V1_REF"
                    scope = global
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7504
                ]

                tag I1_from1 {
                    value = "I1"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7400, 7616
                ]

                tag I3_goto {
                    value = "I3"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7600, 8104
                ]

                tag I2_from2 {
                    value = "I2"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7752
                ]

                junction Junction5 pe
                [
                    position = 7816, 8320
                ]

                junction Junction8 pe
                [
                    position = 7656, 7936
                ]

                junction Junction9 pe
                [
                    position = 7816, 8048
                ]

                junction Junction18 pe
                [
                    position = 7976, 8152
                ]

                junction Junction19 pe
                [
                    position = 7816, 8320
                ]

                comment Comment3 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Power Calculation</span></p></body></html> ENDCOMMENT 
                [
                    position = 8008, 7320
                ]

                comment Comment2 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
                [
                    position = 7688, 7240
                ]

                comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">RMS Calculation</span></p></body></html> ENDCOMMENT 
                [
                    position = 7400, 7320
                ]

                connect A1 I1.p_node as Connection166
                connect B2 Junction9 as Connection141
                connect C1 I3.p_node as Connection168
                connect C2 Junction18 as Connection145
                connect I1.n_node Junction8 as Connection102
                connect I1_from pwr_meter.ia as Connection184
                connect I1_from1 RMS6.in as Connection196
                connect I1_from2 ph_diff5.signal1 as Connection221
                connect I1_goto I1.out as Connection178
                connect I1_rms.in RMS6.out as Connection191
                connect I2.p_node B1 as Connection167
                connect I2.out I2_goto as Connection179
                connect I2.n_node Junction9 as Connection105
                connect I2_from pwr_meter.ib as Connection185
                connect I2_from1 RMS5.in as Connection197
                connect I2_from2 ph_diff6.signal1 as Connection222
                connect I2_rms.in RMS5.out as Connection192
                connect I3_from pwr_meter.ic as Connection186
                connect I3_from1 RMS4.in as Connection198
                connect I3_from2 ph_diff4.signal1 as Connection223
                connect I3_goto I3.out as Connection180
                connect I3_phase.in ph_diff4.phase_diff as Connection243
                connect I3_rms.in RMS4.out as Connection190
                connect Junction18 I3.n_node as Connection146
                connect Junction19 V1.n_node as Connection232
                [
                    breakpoints = 7816, 8320; 7816, 8320
                ]
                connect Junction5 Junction19 as Connection231
                connect Junction8 A2 as Connection230
                [
                    breakpoints = 7656, 7936; 8168, 7936
                ]
                connect Junction8 V1.p_node as Connection170
                connect V1_REF_from ph_diff1.signal2 as Connection237
                connect V1_REF_from1 ph_diff2.signal2 as Connection211
                connect V1_REF_from2 ph_diff3.signal2 as Connection212
                connect V1_REF_from3 ph_diff5.signal2 as Connection234
                connect V1_REF_from4 ph_diff6.signal2 as Connection235
                connect V1_REF_from5 ph_diff4.signal2 as Connection236
                connect V1_from pwr_meter.va as Connection189
                connect V1_from1 RMS1.in as Connection193
                connect V1_from2 ph_diff1.signal1 as Connection219
                connect V1_goto V1.out as Connection183
                connect V1_phase.in ph_diff1.phase_diff as Connection238
                connect V1_rms.in RMS1.out as Connection154
                connect V2.n_node Junction5 as Connection95
                connect V2.p_node Junction9 as Connection172
                connect V2_from pwr_meter.vb as Connection188
                connect V2_from1 RMS2.in as Connection194
                connect V2_from2 ph_diff2.signal1 as Connection218
                connect V2_goto V2.out as Connection182
                connect V2_rms.in RMS2.out as Connection155
                connect V3.p_node Junction18 as Connection174
                connect V3.n_node Junction5 as Connection173
                connect V3_from pwr_meter.vc as Connection187
                connect V3_from1 RMS3.in as Connection195
                connect V3_from2 ph_diff3.signal1 as Connection220
                connect V3_goto V3.out as Connection181
                connect V3_phase.in ph_diff3.phase_diff as Connection240
                connect V3_rms.in RMS3.out as Connection156
                connect gnd.node Junction19 as Connection233
                connect ph_diff2.phase_diff V2_phase.in as Connection239
                connect ph_diff5.phase_diff I1_phase.in as Connection241
                connect ph_diff6.phase_diff I2_phase.in as Connection242
                connect pwr_meter.Pdc P.in as Connection134
                connect pwr_meter.Qdc Q.in as Connection133
                connect pwr_meter.apparent S.in as Connection131
                connect pwr_meter.k_factor pf.in as Connection132
                connect pwr_meter.Pac t1.in as Connection129
                connect pwr_meter.Qac t2.in as Connection130

                mask {
                    icon = "image(\'msr_unit.png\')"
                    description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE

                    CODE define_icon
                        image(r'C:\00 Typhoon SVN\t_misc\00 Project management\90 Demos\260 ITEC2020 Conference\00 Models\img\msr_unit.png')
                    ENDCODE
                }
            }
            [
                position = 8912, 8648
                size = 80, 64
            ]

            component Subsystem "Node 2" {
                layout = dynamic
                component "core/Current Measurement" I2 {
                    addr = "95"
                    execution_rate = "ex_rate"
                    sig_output = "True"
                }
                [
                    position = 7552, 8048
                    size = 64, 32
                ]

                component gen_rms_value RMS3 {
                }
                [
                    position = 7496, 7552
                ]

                component gen_probe V1_phase {
                    addr = "17999"
                }
                [
                    position = 7880, 7336
                ]

                component gen_rms_value RMS6 {
                }
                [
                    position = 7496, 7616
                ]

                component gen_probe V1_rms {
                    signal_type = "voltage"
                }
                [
                    position = 7560, 7440
                ]

                component gen_probe I1_phase {
                    addr = "17999"
                }
                [
                    position = 7880, 7632
                ]

                component msr_phase ph_diff2 {
                }
                [
                    position = 7784, 7432
                ]

                component gen_probe I1_rms {
                    signal_type = "current"
                }
                [
                    position = 7560, 7616
                ]

                component gen_PQ_transform pwr_meter {
                    execution_rate = "ex_rate"
                }
                [
                    position = 8144, 7592
                ]

                component gen_probe V3_rms {
                    signal_type = "voltage"
                }
                [
                    position = 7560, 7552
                ]

                component gen_probe I2_phase {
                    addr = "17999"
                }
                [
                    position = 7880, 7728
                ]

                component msr_phase ph_diff3 {
                }
                [
                    position = 7784, 7528
                ]

                component gen_rms_value RMS4 {
                }
                [
                    position = 7496, 7728
                ]

                component gen_probe I3_rms {
                    signal_type = "current"
                }
                [
                    position = 7560, 7728
                ]

                component "core/Current Measurement" I1 {
                    addr = "94"
                    execution_rate = "ex_rate"
                    sig_output = "True"
                }
                [
                    position = 7552, 7936
                    size = 64, 32
                ]

                component gen_rms_value RMS5 {
                }
                [
                    position = 7496, 7672
                ]

                component msr_phase ph_diff4 {
                }
                [
                    position = 7784, 7824
                ]

                component "core/Voltage Measurement" V3 {
                    addr = "53"
                    execution_rate = "ex_rate"
                    sig_output = "True"
                }
                [
                    position = 8360, 7992
                    rotation = right
                    scale = 1, -1
                    size = 64, 32
                ]

                component gen_probe I2_rms {
                    signal_type = "current"
                }
                [
                    position = 7560, 7672
                ]

                component gen_probe I3_phase {
                    addr = "17999"
                }
                [
                    position = 7880, 7824
                ]

                component "core/Voltage Measurement" Vb {
                    addr = "52"
                    execution_rate = "ex_rate"
                    sig_output = "True"
                }
                [
                    position = 7864, 8272
                    rotation = right
                    size = 64, 32
                ]

                component "core/Voltage Measurement" Vc {
                    addr = "53"
                    execution_rate = "ex_rate"
                    sig_output = "True"
                }
                [
                    position = 8080, 8272
                    rotation = right
                    size = 64, 32
                ]

                component "core/Voltage Measurement" V1 {
                    addr = "51"
                    execution_rate = "ex_rate"
                    sig_output = "True"
                }
                [
                    position = 8168, 7992
                    rotation = right
                    size = 64, 32
                ]

                component gen_terminator t1 {
                }
                [
                    position = 8256, 7568
                ]

                component gen_probe V2_rms {
                    signal_type = "voltage"
                }
                [
                    position = 7560, 7496
                ]

                component "core/Current Measurement" I3 {
                    addr = "96"
                    execution_rate = "ex_rate"
                    sig_output = "True"
                }
                [
                    position = 7552, 8152
                    size = 64, 32
                ]

                component gen_probe pf {
                    addr = "17935"
                }
                [
                    position = 8256, 7712
                ]

                component "core/Voltage Measurement" Va {
                    addr = "51"
                    execution_rate = "ex_rate"
                    sig_output = "True"
                }
                [
                    position = 7656, 8272
                    rotation = right
                    size = 64, 32
                ]

                component gen_probe Q {
                    addr = "17998"
                }
                [
                    position = 8256, 7520
                ]

                component msr_phase ph_diff5 {
                }
                [
                    position = 7784, 7632
                ]

                component gen_terminator t2 {
                }
                [
                    position = 8256, 7616
                ]

                component gen_probe S {
                    addr = "18000"
                }
                [
                    position = 8256, 7664
                ]

                component msr_phase ph_diff1 {
                }
                [
                    position = 7784, 7336
                ]

                component msr_phase ph_diff6 {
                }
                [
                    position = 7784, 7728
                ]

                component gen_probe V2_phase {
                    addr = "17999"
                }
                [
                    position = 7880, 7432
                ]

                component "core/Voltage Measurement" V2 {
                    addr = "52"
                    execution_rate = "ex_rate"
                    sig_output = "True"
                }
                [
                    position = 8168, 8096
                    rotation = right
                    size = 64, 32
                ]

                component gen_probe P {
                    addr = "17999"
                }
                [
                    position = 8256, 7472
                ]

                component gen_rms_value RMS2 {
                }
                [
                    position = 7496, 7496
                ]

                component gen_probe V3_phase {
                    addr = "17999"
                }
                [
                    position = 7880, 7528
                ]

                component gen_rms_value RMS1 {
                }
                [
                    position = 7496, 7440
                ]

                component pas_resistor R1 {
                    resistance = "Rshunt_msr"
                }
                [
                    position = 7608, 8272
                    rotation = right
                ]

                component pas_resistor R2 {
                    resistance = "Rshunt_msr"
                }
                [
                    position = 7816, 8272
                    rotation = right
                ]

                component pas_resistor R3 {
                    resistance = "Rshunt_msr"
                }
                [
                    position = 8032, 8272
                    rotation = right
                ]

                port A2 {
                    label = "A2"
                    position = right:1
                    kind = pe
                }
                [
                    position = 8520, 7936
                    hide_name = True
                    scale = -1, 1
                ]

                port B1 {
                    label = "B1"
                    position = left:2
                    kind = pe
                }
                [
                    position = 7424, 8048
                    hide_name = True
                ]

                port A1 {
                    label = "A1"
                    position = left:1
                    kind = pe
                }
                [
                    position = 7424, 7936
                    hide_name = True
                ]

                port C1 {
                    label = "C1"
                    position = left:3
                    kind = pe
                }
                [
                    position = 7424, 8152
                    hide_name = True
                ]

                port B2 {
                    label = "B2"
                    position = right:2
                    kind = pe
                }
                [
                    position = 8520, 8048
                    hide_name = True
                    scale = -1, 1
                ]

                port C2 {
                    label = "C2"
                    position = right:3
                    kind = pe
                }
                [
                    position = 8520, 8152
                    hide_name = True
                    scale = -1, 1
                ]

                tag I3_from2 {
                    value = "I3"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7848
                ]

                tag Vb_goto {
                    value = "Vb"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7944, 8272
                ]

                tag Va_goto {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7736, 8272
                ]

                tag I3_from {
                    value = "I3"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7992, 7696
                ]

                tag Va_from {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7992, 7488
                ]

                tag I2_from {
                    value = "I2"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7992, 7656
                ]

                tag V1_REF_from5 {
                    value = "V1_REF"
                    scope = global
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7800
                ]

                tag V1_from2 {
                    value = "V1"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7360
                ]

                tag I1_from {
                    value = "I1"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7992, 7616
                ]

                tag I2_from1 {
                    value = "I2"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7400, 7672
                ]

                tag I2_goto {
                    value = "I2"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7600, 8000
                ]

                tag V2_from1 {
                    value = "V2"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7400, 7496
                ]

                tag I2_from2 {
                    value = "I2"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7752
                ]

                tag V3_goto {
                    value = "V3"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8440, 7992
                ]

                tag V1_REF_from2 {
                    value = "V1_REF"
                    scope = global
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7504
                ]

                tag V1_REF_from4 {
                    value = "V1_REF"
                    scope = global
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7704
                ]

                tag I1_from2 {
                    value = "I1"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7656
                ]

                tag V3_from2 {
                    value = "V3"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7552
                ]

                tag Vc_goto {
                    value = "Vc"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8160, 8272
                ]

                tag V2_goto {
                    value = "V2"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8248, 8096
                ]

                tag V1_REF_from1 {
                    value = "V1_REF"
                    scope = global
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7408
                ]

                tag V1_goto {
                    value = "V1"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8248, 7992
                ]

                tag V1_from1 {
                    value = "V1"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7400, 7440
                ]

                tag I3_goto {
                    value = "I3"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7600, 8104
                ]

                tag I3_from1 {
                    value = "I3"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7400, 7728
                ]

                tag V2_from2 {
                    value = "V2"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7456
                ]

                tag V3_from1 {
                    value = "V3"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7400, 7552
                ]

                tag I1_goto {
                    value = "I1"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7600, 7896
                ]

                tag Vb_from {
                    value = "Vb"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7992, 7528
                ]

                tag I1_from1 {
                    value = "I1"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7400, 7616
                ]

                tag Vc_from {
                    value = "Vc"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7992, 7568
                ]

                tag V1_REF_from3 {
                    value = "V1_REF"
                    scope = global
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7608
                ]

                tag V1_REF_from {
                    value = "V1_REF"
                    scope = global
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7312
                ]

                junction Junction20 pe
                [
                    position = 8168, 8048
                ]

                junction Junction21 pe
                [
                    position = 8168, 8048
                ]

                junction Junction22 pe
                [
                    position = 8168, 7936
                ]

                junction Junction23 pe
                [
                    position = 8168, 8152
                ]

                junction Junction24 pe
                [
                    position = 8360, 8152
                ]

                junction Junction25 pe
                [
                    position = 8360, 7936
                ]

                junction Junction26 pe
                [
                    position = 7656, 7936
                ]

                junction Junction27 pe
                [
                    position = 7864, 8048
                ]

                junction Junction28 pe
                [
                    position = 8080, 8152
                ]

                junction Junction29 pe
                [
                    position = 7864, 8360
                ]

                junction Junction30 pe
                [
                    position = 7864, 8328
                ]

                junction Junction31 pe
                [
                    position = 7864, 8216
                ]

                junction Junction32 pe
                [
                    position = 7656, 8216
                ]

                junction Junction33 pe
                [
                    position = 7656, 8328
                ]

                junction Junction34 pe
                [
                    position = 8080, 8216
                ]

                junction Junction35 pe
                [
                    position = 8080, 8328
                ]

                comment Comment2 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
                [
                    position = 7688, 7248
                ]

                comment Comment3 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Power Calculation</span></p></body></html> ENDCOMMENT 
                [
                    position = 8008, 7328
                ]

                comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">RMS Calculation</span></p></body></html> ENDCOMMENT 
                [
                    position = 7400, 7328
                ]

                connect A1 I1.p_node as Connection166
                connect B2 Junction20 as Connection247
                connect C1 I3.p_node as Connection168
                connect C2 Junction24 as Connection259
                connect I1_from pwr_meter.ia as Connection184
                connect I1_from1 RMS6.in as Connection196
                connect I1_from2 ph_diff5.signal1 as Connection221
                connect I1_goto I1.out as Connection178
                connect I1_rms.in RMS6.out as Connection191
                connect I2.p_node B1 as Connection167
                connect I2.out I2_goto as Connection179
                connect I2.n_node Junction27 as Connection271
                [
                    breakpoints = 7816, 8048
                ]
                connect I2_from pwr_meter.ib as Connection185
                connect I2_from1 RMS5.in as Connection197
                connect I2_from2 ph_diff6.signal1 as Connection222
                connect I2_phase.in ph_diff6.phase_diff as Connection242
                connect I2_rms.in RMS5.out as Connection192
                connect I3_from pwr_meter.ic as Connection186
                connect I3_from1 RMS4.in as Connection198
                connect I3_from2 ph_diff4.signal1 as Connection223
                connect I3_goto I3.out as Connection180
                connect I3_rms.in RMS4.out as Connection190
                connect Junction21 Junction20 as Connection251
                connect Junction22 Junction25 as Connection262
                connect Junction22 Junction26 as Connection268
                [
                    breakpoints = 7912, 7936
                ]
                connect Junction23 Junction28 as Connection274
                connect Junction24 Junction23 as Connection267
                [
                    breakpoints = 8360, 8152; 8232, 8152
                ]
                connect Junction25 A2 as Connection263
                connect Junction26 I1.n_node as Connection269
                [
                    breakpoints = 7656, 7936
                ]
                connect Junction27 Junction20 as Connection272
                connect Junction28 I3.n_node as Connection275
                connect Junction29 Junction35 as Connection296
                [
                    breakpoints = 8080, 8360
                ]
                connect Junction30 Junction29 as Connection282
                connect Junction31 Junction27 as Connection285
                connect Junction32 Junction26 as Connection288
                connect Junction33 Junction29 as Connection291
                [
                    breakpoints = 7656, 8360
                ]
                connect Junction34 Junction28 as Connection294
                connect Junction35 Vc.n_node as Connection297
                connect R1.p_node Junction32 as Connection289
                connect R1.n_node Junction33 as Connection292
                connect R2.n_node Junction30 as Connection283
                connect R2.p_node Junction31 as Connection286
                connect R3.p_node Junction34 as Connection295
                [
                    breakpoints = 8032, 8216; 8080, 8216
                ]
                connect R3.n_node Junction35 as Connection298
                connect V1.n_node Junction21 as Connection252
                connect V1.p_node Junction22 as Connection255
                connect V1_REF_from ph_diff1.signal2 as Connection237
                connect V1_REF_from1 ph_diff2.signal2 as Connection211
                connect V1_REF_from2 ph_diff3.signal2 as Connection212
                connect V1_REF_from3 ph_diff5.signal2 as Connection234
                connect V1_REF_from4 ph_diff6.signal2 as Connection235
                connect V1_REF_from5 ph_diff4.signal2 as Connection236
                connect V1_from1 RMS1.in as Connection193
                connect V1_from2 ph_diff1.signal1 as Connection219
                connect V1_goto V1.out as Connection183
                connect V1_goto V1.out as Connection245
                connect V1_phase.in ph_diff1.phase_diff as Connection238
                connect V1_rms.in RMS1.out as Connection154
                connect V2.p_node Junction21 as Connection250
                connect V2.n_node Junction23 as Connection258
                connect V2_from1 RMS2.in as Connection194
                connect V2_from2 ph_diff2.signal1 as Connection218
                connect V2_goto V2.out as Connection246
                connect V2_goto V2.out as Connection182
                connect V2_rms.in RMS2.out as Connection155
                connect V3.p_node Junction24 as Connection261
                connect V3.n_node Junction25 as Connection264
                connect V3_from1 RMS3.in as Connection195
                connect V3_from2 ph_diff3.signal1 as Connection220
                connect V3_goto V3.out as Connection181
                connect V3_goto V3.out as Connection244
                connect V3_phase.in ph_diff3.phase_diff as Connection240
                connect V3_rms.in RMS3.out as Connection156
                connect Va.p_node Junction32 as Connection287
                connect Va.n_node Junction33 as Connection290
                connect Va.out Va_goto as Connection301
                connect Va_from pwr_meter.va as Connection189
                connect Vb.n_node Junction30 as Connection281
                connect Vb.p_node Junction31 as Connection284
                connect Vb.out Vb_goto as Connection300
                connect Vb_from pwr_meter.vb as Connection188
                connect Vc.p_node Junction34 as Connection293
                connect Vc.out Vc_goto as Connection299
                connect Vc_from pwr_meter.vc as Connection187
                connect ph_diff2.phase_diff V2_phase.in as Connection239
                connect ph_diff4.phase_diff I3_phase.in as Connection243
                connect ph_diff5.phase_diff I1_phase.in as Connection241
                connect pwr_meter.Pdc P.in as Connection134
                connect pwr_meter.Qdc Q.in as Connection133
                connect pwr_meter.apparent S.in as Connection131
                connect pwr_meter.k_factor pf.in as Connection132
                connect pwr_meter.Pac t1.in as Connection129
                connect pwr_meter.Qac t2.in as Connection130

                mask {
                    icon = "image(\'msr_unit.png\')"
                    description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE

                    CODE define_icon
                        image(r'C:\00 Typhoon SVN\t_misc\00 Project management\90 Demos\260 ITEC2020 Conference\00 Models\img\msr_unit.png')
                    ENDCODE
                }
            }
            [
                position = 7728, 8648
                size = 80, 64
            ]

            component Subsystem "Node 1" {
                layout = dynamic
                component "core/Voltage Measurement" V1 {
                    addr = "51"
                    execution_rate = "ex_rate"
                    sig_output = "True"
                }
                [
                    position = 8168, 7992
                    rotation = right
                    size = 64, 32
                ]

                component gen_rms_value RMS5 {
                }
                [
                    position = 7496, 7672
                ]

                component gen_probe V2_phase {
                    addr = "17999"
                }
                [
                    position = 7880, 7432
                ]

                component gen_probe S {
                    addr = "18000"
                }
                [
                    position = 8256, 7664
                ]

                component msr_phase ph_diff2 {
                }
                [
                    position = 7784, 7432
                ]

                component "core/Voltage Measurement" Va {
                    addr = "51"
                    execution_rate = "ex_rate"
                    sig_output = "True"
                }
                [
                    position = 7656, 8272
                    rotation = right
                    size = 64, 32
                ]

                component pas_resistor R2 {
                    resistance = "Rshunt_msr"
                }
                [
                    position = 7816, 8272
                    rotation = right
                ]

                component msr_phase ph_diff1 {
                }
                [
                    position = 7784, 7336
                ]

                component gen_rms_value RMS2 {
                }
                [
                    position = 7496, 7496
                ]

                component gen_rms_value RMS6 {
                }
                [
                    position = 7496, 7616
                ]

                component "core/Voltage Measurement" Vc {
                    addr = "53"
                    execution_rate = "ex_rate"
                    sig_output = "True"
                }
                [
                    position = 8080, 8272
                    rotation = right
                    size = 64, 32
                ]

                component gen_probe Q {
                    addr = "17998"
                }
                [
                    position = 8256, 7520
                ]

                component msr_phase ph_diff4 {
                }
                [
                    position = 7784, 7824
                ]

                component gen_probe V1_rms {
                    signal_type = "voltage"
                }
                [
                    position = 7560, 7440
                ]

                component gen_probe I1_phase {
                    addr = "17999"
                }
                [
                    position = 7880, 7632
                ]

                component msr_phase ph_diff5 {
                }
                [
                    position = 7784, 7632
                ]

                component gen_probe pf {
                    addr = "17935"
                }
                [
                    position = 8256, 7712
                ]

                component pas_resistor R1 {
                    resistance = "Rshunt_msr"
                }
                [
                    position = 7608, 8272
                    rotation = right
                ]

                component gen_terminator t2 {
                }
                [
                    position = 8256, 7616
                ]

                component gen_PQ_transform pwr_meter {
                    execution_rate = "ex_rate"
                }
                [
                    position = 8144, 7592
                ]

                component gen_probe V3_rms {
                    signal_type = "voltage"
                }
                [
                    position = 7560, 7552
                ]

                component pas_resistor R3 {
                    resistance = "Rshunt_msr"
                }
                [
                    position = 8032, 8272
                    rotation = right
                ]

                component gen_probe I2_rms {
                    signal_type = "current"
                }
                [
                    position = 7560, 7672
                ]

                component "core/Current Measurement" I3 {
                    addr = "96"
                    execution_rate = "ex_rate"
                    sig_output = "True"
                }
                [
                    position = 7552, 8152
                    size = 64, 32
                ]

                component gen_probe V1_phase {
                    addr = "17999"
                }
                [
                    position = 7880, 7336
                ]

                component gen_probe I2_phase {
                    addr = "17999"
                }
                [
                    position = 7880, 7728
                ]

                component gen_rms_value RMS3 {
                }
                [
                    position = 7496, 7552
                ]

                component gen_terminator t1 {
                }
                [
                    position = 8256, 7568
                ]

                component gen_probe I3_phase {
                    addr = "17999"
                }
                [
                    position = 7880, 7824
                ]

                component msr_phase ph_diff3 {
                }
                [
                    position = 7784, 7528
                ]

                component gen_probe V3_phase {
                    addr = "17999"
                }
                [
                    position = 7880, 7528
                ]

                component "core/Voltage Measurement" V2 {
                    addr = "52"
                    execution_rate = "ex_rate"
                    sig_output = "True"
                }
                [
                    position = 8168, 8096
                    rotation = right
                    size = 64, 32
                ]

                component gen_rms_value RMS1 {
                }
                [
                    position = 7496, 7440
                ]

                component gen_probe I3_rms {
                    signal_type = "current"
                }
                [
                    position = 7560, 7728
                ]

                component gen_rms_value RMS4 {
                }
                [
                    position = 7496, 7728
                ]

                component "core/Current Measurement" I1 {
                    addr = "94"
                    execution_rate = "ex_rate"
                    sig_output = "True"
                }
                [
                    position = 7552, 7936
                    size = 64, 32
                ]

                component "core/Voltage Measurement" Vb {
                    addr = "52"
                    execution_rate = "ex_rate"
                    sig_output = "True"
                }
                [
                    position = 7864, 8272
                    rotation = right
                    size = 64, 32
                ]

                component msr_phase ph_diff6 {
                }
                [
                    position = 7784, 7728
                ]

                component "core/Voltage Measurement" V3 {
                    addr = "53"
                    execution_rate = "ex_rate"
                    sig_output = "True"
                }
                [
                    position = 8360, 7992
                    rotation = right
                    scale = 1, -1
                    size = 64, 32
                ]

                component gen_probe I1_rms {
                    signal_type = "current"
                }
                [
                    position = 7560, 7616
                ]

                component "core/Current Measurement" I2 {
                    addr = "95"
                    execution_rate = "ex_rate"
                    sig_output = "True"
                }
                [
                    position = 7552, 8048
                    size = 64, 32
                ]

                component gen_probe P {
                    addr = "17999"
                }
                [
                    position = 8256, 7472
                ]

                component gen_probe V2_rms {
                    signal_type = "voltage"
                }
                [
                    position = 7560, 7496
                ]

                component "core/Voltage Measurement" V1_REF {
                    addr = "51"
                    execution_rate = "ex_rate"
                    sig_output = "True"
                }
                [
                    position = 8552, 8264
                    rotation = right
                    size = 64, 32
                ]

                component src_ground gnd1 {
                }
                [
                    position = 8552, 8384
                ]

                port A2 {
                    label = "A2"
                    position = right:1
                    kind = pe
                }
                [
                    position = 8664, 7936
                    hide_name = True
                    scale = -1, 1
                ]

                port B1 {
                    label = "B1"
                    position = left:2
                    kind = pe
                }
                [
                    position = 7424, 8048
                    hide_name = True
                ]

                port A1 {
                    label = "A1"
                    position = left:1
                    kind = pe
                }
                [
                    position = 7424, 7936
                    hide_name = True
                ]

                port C1 {
                    label = "C1"
                    position = left:3
                    kind = pe
                }
                [
                    position = 7424, 8152
                    hide_name = True
                ]

                port B2 {
                    label = "B2"
                    position = right:2
                    kind = pe
                }
                [
                    position = 8664, 8048
                    hide_name = True
                    scale = -1, 1
                ]

                port C2 {
                    label = "C2"
                    position = right:3
                    kind = pe
                }
                [
                    position = 8664, 8152
                    hide_name = True
                    scale = -1, 1
                ]

                tag I3_goto {
                    value = "I3"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7600, 8104
                ]

                tag V1_REF_from3 {
                    value = "V1_REF"
                    scope = global
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7608
                ]

                tag V2_goto {
                    value = "V2"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8248, 8096
                ]

                tag I3_from {
                    value = "I3"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7992, 7696
                ]

                tag I1_from {
                    value = "I1"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7992, 7616
                ]

                tag V2_from1 {
                    value = "V2"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7400, 7496
                ]

                tag I1_from1 {
                    value = "I1"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7400, 7616
                ]

                tag V3_goto {
                    value = "V3"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8440, 7992
                ]

                tag Va_goto {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7736, 8272
                ]

                tag V1_REF_from {
                    value = "V1_REF"
                    scope = global
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7312
                ]

                tag I2_from {
                    value = "I2"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7992, 7656
                ]

                tag V3_from2 {
                    value = "V3"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7552
                ]

                tag I2_from1 {
                    value = "I2"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7400, 7672
                ]

                tag V1_REF_from2 {
                    value = "V1_REF"
                    scope = global
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7504
                ]

                tag V1_goto {
                    value = "V1"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8248, 7992
                ]

                tag I3_from1 {
                    value = "I3"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7400, 7728
                ]

                tag V1_from2 {
                    value = "V1"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7360
                ]

                tag Vc_from {
                    value = "Vc"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7992, 7568
                ]

                tag Vc_goto {
                    value = "Vc"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8160, 8272
                ]

                tag V2_from2 {
                    value = "V2"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7456
                ]

                tag Vb_from {
                    value = "Vb"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7992, 7528
                ]

                tag Va_from {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7992, 7488
                ]

                tag I2_from2 {
                    value = "I2"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7752
                ]

                tag I1_from2 {
                    value = "I1"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7656
                ]

                tag V1_from1 {
                    value = "V1"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7400, 7440
                ]

                tag V1_REF_from5 {
                    value = "V1_REF"
                    scope = global
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7800
                ]

                tag I2_goto {
                    value = "I2"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7600, 8000
                ]

                tag V1_REF_from4 {
                    value = "V1_REF"
                    scope = global
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7704
                ]

                tag I3_from2 {
                    value = "I3"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7848
                ]

                tag V1_REF_from1 {
                    value = "V1_REF"
                    scope = global
                    kind = sp
                    direction = out
                }
                [
                    position = 7688, 7408
                ]

                tag V3_from1 {
                    value = "V3"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7400, 7552
                ]

                tag Vb_goto {
                    value = "Vb"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7944, 8272
                ]

                tag I1_goto {
                    value = "I1"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7600, 7896
                ]

                tag V1_REF_goto {
                    value = "V1_REF"
                    scope = global
                    kind = sp
                    direction = in
                }
                [
                    position = 8632, 8264
                ]

                junction Junction20 pe
                [
                    position = 8168, 8048
                ]

                junction Junction21 pe
                [
                    position = 8168, 8048
                ]

                junction Junction22 pe
                [
                    position = 8168, 7936
                ]

                junction Junction23 pe
                [
                    position = 8168, 8152
                ]

                junction Junction24 pe
                [
                    position = 8360, 8152
                ]

                junction Junction25 pe
                [
                    position = 8360, 7936
                ]

                junction Junction26 pe
                [
                    position = 7656, 7936
                ]

                junction Junction27 pe
                [
                    position = 7864, 8048
                ]

                junction Junction28 pe
                [
                    position = 8080, 8152
                ]

                junction Junction29 pe
                [
                    position = 7864, 8360
                ]

                junction Junction30 pe
                [
                    position = 7864, 8328
                ]

                junction Junction31 pe
                [
                    position = 7864, 8216
                ]

                junction Junction32 pe
                [
                    position = 7656, 8216
                ]

                junction Junction33 pe
                [
                    position = 7656, 8328
                ]

                junction Junction34 pe
                [
                    position = 8080, 8216
                ]

                junction Junction35 pe
                [
                    position = 8080, 8328
                ]

                junction Junction36 pe
                [
                    position = 8552, 7936
                ]

                comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">RMS Calculation</span></p></body></html> ENDCOMMENT 
                [
                    position = 7400, 7328
                ]

                comment Comment3 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Power Calculation</span></p></body></html> ENDCOMMENT 
                [
                    position = 8008, 7328
                ]

                comment Comment2 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
                [
                    position = 7688, 7248
                ]

                connect A1 I1.p_node as Connection166
                connect B2 Junction20 as Connection247
                connect C1 I3.p_node as Connection168
                connect C2 Junction24 as Connection259
                connect I1_from pwr_meter.ia as Connection184
                connect I1_from1 RMS6.in as Connection196
                connect I1_from2 ph_diff5.signal1 as Connection221
                connect I1_goto I1.out as Connection178
                connect I1_rms.in RMS6.out as Connection191
                connect I2.p_node B1 as Connection167
                connect I2.out I2_goto as Connection179
                connect I2.n_node Junction27 as Connection271
                connect I2_from pwr_meter.ib as Connection185
                connect I2_from1 RMS5.in as Connection197
                connect I2_from2 ph_diff6.signal1 as Connection222
                connect I2_phase.in ph_diff6.phase_diff as Connection242
                connect I2_rms.in RMS5.out as Connection192
                connect I3_from pwr_meter.ic as Connection186
                connect I3_from1 RMS4.in as Connection198
                connect I3_from2 ph_diff4.signal1 as Connection223
                connect I3_goto I3.out as Connection180
                connect I3_rms.in RMS4.out as Connection190
                connect Junction21 Junction20 as Connection251
                connect Junction22 Junction25 as Connection262
                connect Junction22 Junction26 as Connection268
                connect Junction23 Junction28 as Connection274
                connect Junction24 Junction23 as Connection267
                connect Junction25 Junction36 as Connection302
                connect Junction26 I1.n_node as Connection269
                connect Junction27 Junction20 as Connection272
                connect Junction28 I3.n_node as Connection275
                connect Junction29 Junction35 as Connection296
                connect Junction30 Junction29 as Connection282
                connect Junction31 Junction27 as Connection285
                connect Junction32 Junction26 as Connection288
                connect Junction33 Junction29 as Connection291
                [
                    breakpoints = 7656, 8360; 7864, 8360
                ]
                connect Junction34 Junction28 as Connection294
                connect Junction35 Vc.n_node as Connection297
                connect Junction36 A2 as Connection303
                connect R1.p_node Junction32 as Connection289
                connect R1.n_node Junction33 as Connection292
                connect R2.n_node Junction30 as Connection283
                connect R2.p_node Junction31 as Connection286
                connect R3.p_node Junction34 as Connection295
                connect R3.n_node Junction35 as Connection298
                connect V1.n_node Junction21 as Connection252
                connect V1.p_node Junction22 as Connection255
                connect V1_REF.p_node Junction36 as Connection304
                connect V1_REF.out V1_REF_goto as Connection228
                connect V1_REF.n_node gnd1.node as Connection227
                connect V1_REF_from ph_diff1.signal2 as Connection237
                connect V1_REF_from1 ph_diff2.signal2 as Connection211
                connect V1_REF_from2 ph_diff3.signal2 as Connection212
                connect V1_REF_from3 ph_diff5.signal2 as Connection234
                connect V1_REF_from4 ph_diff6.signal2 as Connection235
                connect V1_REF_from5 ph_diff4.signal2 as Connection236
                connect V1_from1 RMS1.in as Connection193
                connect V1_from2 ph_diff1.signal1 as Connection219
                connect V1_goto V1.out as Connection245
                connect V1_goto V1.out as Connection183
                connect V1_phase.in ph_diff1.phase_diff as Connection238
                connect V1_rms.in RMS1.out as Connection154
                connect V2.p_node Junction21 as Connection250
                connect V2.n_node Junction23 as Connection258
                connect V2_from1 RMS2.in as Connection194
                connect V2_from2 ph_diff2.signal1 as Connection218
                connect V2_goto V2.out as Connection246
                connect V2_goto V2.out as Connection182
                connect V2_rms.in RMS2.out as Connection155
                connect V3.p_node Junction24 as Connection261
                connect V3.n_node Junction25 as Connection264
                connect V3_from1 RMS3.in as Connection195
                connect V3_from2 ph_diff3.signal1 as Connection220
                connect V3_goto V3.out as Connection181
                connect V3_goto V3.out as Connection244
                connect V3_phase.in ph_diff3.phase_diff as Connection240
                connect V3_rms.in RMS3.out as Connection156
                connect Va.p_node Junction32 as Connection287
                connect Va.n_node Junction33 as Connection290
                connect Va.out Va_goto as Connection301
                connect Va_from pwr_meter.va as Connection189
                connect Vb.n_node Junction30 as Connection281
                connect Vb.p_node Junction31 as Connection284
                connect Vb.out Vb_goto as Connection300
                connect Vb_from pwr_meter.vb as Connection188
                connect Vc.p_node Junction34 as Connection293
                connect Vc.out Vc_goto as Connection299
                connect Vc_from pwr_meter.vc as Connection187
                connect ph_diff2.phase_diff V2_phase.in as Connection239
                connect ph_diff4.phase_diff I3_phase.in as Connection243
                connect ph_diff5.phase_diff I1_phase.in as Connection241
                connect pwr_meter.Pdc P.in as Connection134
                connect pwr_meter.Qdc Q.in as Connection133
                connect pwr_meter.apparent S.in as Connection131
                connect pwr_meter.k_factor pf.in as Connection132
                connect pwr_meter.Pac t1.in as Connection129
                connect pwr_meter.Qac t2.in as Connection130

                mask {
                    icon = "image(\'msr_unit.png\')"
                    description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE

                    CODE define_icon
                        image(r'C:\00 Typhoon SVN\t_misc\00 Project management\90 Demos\260 ITEC2020 Conference\00 Models\img\msr_unit.png')
                    ENDCODE
                }
            }
            [
                position = 7240, 8648
                size = 80, 64
            ]

            component Subsystem "Load RL" {
                layout = dynamic
                component pas_inductor L1 {
                    inductance = "L1"
                }
                [
                    position = 8088, 8096
                ]

                component pas_inductor L3 {
                    inductance = "L3"
                }
                [
                    position = 8088, 8272
                ]

                component pas_resistor R1 {
                    resistance = "R1"
                }
                [
                    position = 8200, 8096
                ]

                component pas_resistor R2 {
                    resistance = "R2"
                }
                [
                    position = 8200, 8184
                ]

                component src_ground gnd6 {
                }
                [
                    position = 8296, 8312
                ]

                component pas_inductor L2 {
                    inductance = "L2"
                }
                [
                    position = 8088, 8184
                ]

                component pas_resistor R3 {
                    resistance = "R3"
                }
                [
                    position = 8200, 8272
                ]

                port P1 {
                    position = left:1
                    kind = pe
                }
                [
                    position = 8008, 8096
                    hide_name = True
                ]

                port P2 {
                    position = left:2
                    kind = pe
                }
                [
                    position = 8008, 8184
                    hide_name = True
                ]

                port P3 {
                    position = left:3
                    kind = pe
                }
                [
                    position = 8008, 8272
                    hide_name = True
                ]

                junction Junction10 pe
                [
                    position = 8296, 8184
                ]

                junction Junction11 pe
                [
                    position = 8296, 8272
                ]

                connect Junction10 Junction11 as Connection34
                connect Junction11 gnd6.node as Connection35
                connect L1.p_node P1 as Connection33
                connect L1.n_node R1.p_node as Connection25
                connect L2.p_node P2 as Connection32
                connect L2.n_node R2.p_node as Connection26
                connect L3.p_node P3 as Connection31
                connect L3.n_node R3.p_node as Connection27
                connect R1.n_node Junction10 as Connection28
                connect R2.n_node Junction10 as Connection29
                connect R3.n_node Junction11 as Connection36
            }
            [
                position = 9160, 8648
                size = 72, 72
            ]

            component Subsystem Protection {
                layout = dynamic
                component "core/(50) Instantaneous Overcurrent" "(50) Instantaneous Overcurrent1" {
                    In = "500"
                    OC_thresh = "3.0"
                    execution_rate = "Tprotection"
                }
                [
                    position = 8432, 7776
                    size = 144, 160
                ]

                component src_scada_input "Reset Relay" {
                    execution_rate = "Tprotection"
                    max = "1"
                    min = "0"
                    unit = ""
                }
                [
                    position = 8280, 7840
                ]

                component gen_terminator Termination1 {
                }
                [
                    position = 8616, 7712
                    hide_name = True
                ]

                component gen_terminator Termination2 {
                }
                [
                    position = 8616, 7808
                    hide_name = True
                ]

                component gen_terminator Termination3 {
                }
                [
                    position = 8616, 7776
                    hide_name = True
                ]

                component gen_terminator Termination4 {
                }
                [
                    position = 8616, 7744
                    hide_name = True
                ]

                component gen_logic_op "Logical operator1" {
                    operator = "NOT"
                }
                [
                    position = 8696, 7896
                    hide_name = True
                ]

                component "core/Three-phase Meter" "Three-phase Meter1" {
                    Ts = "Tprotection"
                }
                [
                    position = 8192, 8192
                    hide_name = True
                    size = 56, 240
                ]

                component gen_bus_join "Bus Join1" {
                }
                [
                    position = 8824, 7984
                    rotation = right
                ]

                component gen_probe MP_fb {
                }
                [
                    position = 8920, 8016
                ]

                component gen_digital_probe trip {
                }
                [
                    position = 8688, 7944
                ]

                component "core/Triple Pole MP Circuit Breaker" "MP Breaker 1" {
                }
                [
                    position = 8840, 8192
                    size = 64, 256
                ]

                port C- {
                    position = right:3
                    kind = pe
                }
                [
                    position = 8944, 8288
                    rotation = down
                ]

                port A- {
                    position = right:1
                    kind = pe
                }
                [
                    position = 8944, 8096
                    rotation = down
                ]

                port C+ {
                    position = left:3
                    kind = pe
                }
                [
                    position = 8112, 8288
                ]

                port B+ {
                    position = left:2
                    kind = pe
                }
                [
                    position = 8112, 8192
                ]

                port A+ {
                    position = left:1
                    kind = pe
                }
                [
                    position = 8112, 8096
                ]

                port B- {
                    position = right:2
                    kind = pe
                }
                [
                    position = 8944, 8192
                    rotation = down
                ]

                junction Junction2 sp
                [
                    position = 8832, 7936
                ]

                junction Junction3 sp
                [
                    position = 8608, 7896
                ]

                connect "Three-phase Meter1.B+" B+ as Connection4
                connect "Three-phase Meter1.C+" C+ as Connection3
                connect "Three-phase Meter1.A+" A+ as Connection5
                connect "Three-phase Meter1.Out" "(50) Instantaneous Overcurrent1.Meas_in" as Connection7
                connect "Reset Relay.out" "(50) Instantaneous Overcurrent1.Mem_en_rst" as Connection8
                connect "(50) Instantaneous Overcurrent1.trip_C" Termination2.in as Connection10
                connect "(50) Instantaneous Overcurrent1.trip_B" Termination3.in as Connection11
                connect "(50) Instantaneous Overcurrent1.trip_A" Termination4.in as Connection12
                connect A- "MP Breaker 1.out_a" as Connection30
                connect "MP Breaker 1.out_b" B- as Connection31
                connect C- "MP Breaker 1.out_c" as Connection32
                connect "Bus Join1.out" "MP Breaker 1.breaker_input" as Connection33
                connect "MP Breaker 1.breaker_output" MP_fb.in as Connection34
                connect "Three-phase Meter1.A-" "MP Breaker 1.in_a" as Connection35
                connect "Three-phase Meter1.B-" "MP Breaker 1.in_b" as Connection36
                connect "MP Breaker 1.in_c" "Three-phase Meter1.C-" as Connection37
                connect "Logical operator1.out" Junction2 as Connection40
                connect Junction2 "Bus Join1.in" as Connection41
                connect "Bus Join1.in1" Junction2 as Connection42
                connect "(50) Instantaneous Overcurrent1.trip_inst" Termination1.in as Connection43
                connect "(50) Instantaneous Overcurrent1.Mem" Junction3 as Connection45
                [
                    breakpoints = 8608, 7840
                ]
                connect Junction3 "Logical operator1.in" as Connection46
                [
                    breakpoints = 8608, 7896
                ]
                connect trip.in Junction3 as Connection47
            }
            [
                position = 8264, 8648
                size = 48, 64
            ]

            component "core/Grid Fault" "Grid Fault1" {
            }
            [
                position = 8776, 8648
                size = 64, 64
            ]

            component src_ground gnd3 {
            }
            [
                position = 8776, 8744
            ]

            component "core/Three Phase Core Coupling" "Core Coupling 1" {
                C1 = "10e-06"
                R1 = "10"
                fixed_snb_i = "true"
                snb_type_i = "R1-C1"
            }
            [
                position = 9168, 8432
                size = 12, 256
            ]

            component Subsystem "NPC PV inverter1" {
                layout = static
                component pas_resistor R4 {
                    resistance = "10000"
                }
                [
                    position = 7944, 8040
                    rotation = right
                ]

                component pas_inductor L1 {
                    inductance = "50e-6"
                }
                [
                    position = 8624, 7992
                ]

                component gen_logic_op "Logical operator1" {
                }
                [
                    position = 8856, 7480
                    hide_name = True
                ]

                component gen_terminator Termination7 {
                }
                [
                    position = 9264, 8760
                    hide_name = True
                ]

                component pas_capacitor C6 {
                    capacitance = "18.8e-2"
                    initial_voltage = "500"
                }
                [
                    position = 8032, 8040
                    rotation = right
                ]

                component pas_inductor L4 {
                    inductance = "50e-6"
                }
                [
                    position = 9464, 7992
                ]

                component gen_terminator Termination9 {
                }
                [
                    position = 9784, 9344
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_bus_join "bus join" {
                    inputs = "6"
                }
                [
                    position = 9456, 8928
                    rotation = right
                ]

                component gen_product Product1 {
                }
                [
                    position = 6656, 7424
                    rotation = right
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_probe "Probe Vdcref" {
                }
                [
                    position = 5832, 7432
                    scale = -1, 1
                ]

                component gen_digital_probe precharge_contactor {
                }
                [
                    position = 10048, 7744
                ]

                component pas_resistor R2 {
                    resistance = "0.5"
                }
                [
                    position = 9912, 8384
                ]

                component pas_inductor L2 {
                    inductance = "50e-6"
                }
                [
                    position = 8624, 8088
                ]

                component gen_sign Sign1 {
                }
                [
                    position = 7800, 7704
                    rotation = left
                    hide_name = True
                ]

                component pas_capacitor C4 {
                    capacitance = "600e-6"
                }
                [
                    position = 9128, 8272
                    rotation = right
                ]

                component pas_inductor L3 {
                    inductance = "50e-6"
                }
                [
                    position = 8624, 8184
                ]

                component gen_probe "model states" {
                }
                [
                    position = 9512, 9136
                ]

                component gen_probe "real states" {
                }
                [
                    position = 9512, 9008
                ]

                component gen_bus_split "Bus Split2" {
                    outputs = "4"
                }
                [
                    position = 6208, 6704
                    rotation = right
                    hide_name = True
                ]

                component gen_logic_op "Logical operator2" {
                }
                [
                    position = 9176, 7552
                    hide_name = True
                ]

                component gen_probe "Probe iref_al" {
                }
                [
                    position = 6936, 7464
                    rotation = left
                ]

                component pas_capacitor C5 {
                    capacitance = "600e-6"
                }
                [
                    position = 9192, 8272
                    rotation = right
                ]

                component gen_bus_split "Bus Split1" {
                    outputs = "6"
                }
                [
                    position = 7056, 7336
                    hide_name = True
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "19"
                }
                [
                    position = 6784, 6704
                    rotation = left
                ]

                component gen_terminator Termination6 {
                }
                [
                    position = 9264, 8640
                    hide_name = True
                ]

                component gen_terminator Termination11 {
                }
                [
                    position = 6736, 7440
                    rotation = left
                    hide_name = True
                ]

                component gen_digital_probe contactor {
                }
                [
                    position = 10048, 7808
                ]

                component pas_inductor L6 {
                    inductance = "50e-6"
                }
                [
                    position = 9464, 8184
                ]

                component src_constant Constant1 {
                    execution_rate = "inherit"
                    value = "0"
                }
                [
                    position = 7488, 7576
                    hide_name = True
                ]

                component pas_resistor R1 {
                    resistance = "0.5"
                }
                [
                    position = 9912, 8288
                ]

                component sys_signal_switch "Signal switch1" {
                    threshold = "0.5"
                }
                [
                    position = 9592, 9072
                    hide_name = True
                ]

                component gen_probe "Probe Qref" {
                }
                [
                    position = 6392, 7472
                    rotation = left
                ]

                component pas_resistor R3 {
                    resistance = "0.5"
                }
                [
                    position = 9912, 8480
                ]

                component pas_capacitor C3 {
                    capacitance = "600e-6"
                }
                [
                    position = 9064, 8272
                    rotation = right
                ]

                component gen_terminator Termination10 {
                }
                [
                    position = 8776, 7528
                    hide_name = True
                ]

                component gen_sign Sign3 {
                }
                [
                    position = 7864, 7784
                    rotation = left
                    hide_name = True
                ]

                component gen_terminator Termination12 {
                }
                [
                    position = 6784, 7440
                    rotation = left
                    hide_name = True
                ]

                component pas_resistor R5 {
                    resistance = "10000"
                }
                [
                    position = 7944, 8136
                    rotation = right
                ]

                component pas_inductor L5 {
                    inductance = "50e-6"
                }
                [
                    position = 9464, 8088
                ]

                component gen_probe "Probe Pref" {
                }
                [
                    position = 6280, 7464
                    rotation = left
                ]

                component pas_capacitor C7 {
                    capacitance = "18.8e-2"
                    initial_voltage = "500"
                }
                [
                    position = 8032, 8136
                    rotation = right
                ]

                component gen_terminator Termination8 {
                }
                [
                    position = 9264, 8888
                    hide_name = True
                ]

                component gen_sign Sign2 {
                }
                [
                    position = 7832, 7744
                    rotation = left
                    hide_name = True
                ]

                component gen_probe "Probe iref_be" {
                }
                [
                    position = 6936, 7560
                    rotation = left
                ]

                component "core/Voltage Measurement" vg_a {
                    execution_rate = "inherit"
                    sig_output = "True"
                }
                [
                    position = 10256, 8264
                    rotation = right
                    size = 64, 32
                ]

                component "core/Generic UL 1741 ride-through" "Frequency ride-through" {
                    H1cessation = "False"
                    H1duration = "299"
                    H1val = "1.0083333"
                    H2cessation = "False"
                    H2val = "1.03333"
                    L1cessation = "False"
                    L1duration = "299"
                    L1val = "0.975"
                    L2cessation = "False"
                    L2val = "0.95"
                    L3cessation = "False"
                    Nom = "fnom"
                }
                [
                    position = 8664, 7552
                    size = 120, 88
                ]

                component "core/Constant power factor" "Constant power factor" {
                }
                [
                    position = 6296, 7584
                    size = 64, 96
                ]

                component "core/Open-loop Power Controller" "Open-loop Power Controller" {
                    imax = "1200"
                    ratemax = "1000*10000"
                }
                [
                    position = 6720, 7560
                    size = 176, 144
                ]

                component "core/Voltage Measurement" V_dc {
                    execution_rate = "Tpv"
                    sig_output = "True"
                }
                [
                    position = 7776, 8088
                    rotation = right
                    size = 64, 32
                ]

                component "core/Voltage Measurement" vc_c {
                    execution_rate = "inherit"
                    sig_output = "True"
                }
                [
                    position = 8952, 8232
                    rotation = right
                    size = 64, 32
                ]

                component "core/Current Measurement" Ic_a {
                    execution_rate = "inherit"
                    sig_output = "True"
                }
                [
                    position = 8512, 7992
                    size = 64, 32
                ]

                component "core/Current Measurement" Ig_b {
                    execution_rate = "inherit"
                    sig_output = "True"
                }
                [
                    position = 9592, 8088
                    size = 64, 32
                ]

                component "core/abc to alfa-beta-gamma" "abc to alfa-beta-gamma3" {
                }
                [
                    position = 9184, 8864
                    size = 48, 88
                ]

                component "core/Voltage Measurement" vc_b {
                    execution_rate = "inherit"
                    sig_output = "True"
                }
                [
                    position = 8896, 8136
                    rotation = right
                    size = 64, 32
                ]

                component "core/abc to alfa-beta-gamma" "abc to alfa-beta-gamma2" {
                }
                [
                    position = 9184, 8736
                    size = 48, 88
                ]

                component Subsystem "Fundamental positive sequence estimator" {
                    layout = dynamic
                    component gen_terminator Termination11 {
                    }
                    [
                        position = 8208, 8744
                        rotation = right
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_terminator Termination12 {
                    }
                    [
                        position = 8176, 8784
                        rotation = right
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_probe m_qva {
                    }
                    [
                        position = 7792, 8024
                        rotation = left
                    ]

                    component gen_probe "vpb rms" {
                    }
                    [
                        position = 8216, 8568
                    ]

                    component gen_probe m_va {
                    }
                    [
                        position = 7704, 8024
                        rotation = left
                    ]

                    component gen_c_function "Quad Signal Generator2" {
                        global_variables = "real estados_X1;real estados_X2;real estados_v_l;real estados_qv_l;real kq;real X01;real X02;real Ts;"
                        in_terminal_dimensions = "inherit;inherit"
                        in_terminal_dimensions_str = "estados_v inherit;estados_w_h inherit"
                        in_terminal_labels = "False;False;"
                        in_terminal_properties = "real estados_v;inherit estados_w_h;"
                        init_fnc = "/*Begin code section*/
estados_X1=0;
estados_X2=0;
estados_v_l=0;
estados_qv_l=0;
v = 0;
qv = 0;
kq=0.01; //// 0<kp<0.6 para w=377 e Ts = 1/10000
Ts = execution_rate;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit;inherit"
                        out_terminal_dimensions_str = "v inherit;qv inherit"
                        out_terminal_labels = "False;False;"
                        out_terminal_properties = "real v;inherit qv;"
                        output_fnc = "/*Begin code section*/
X01 = estados_X2;
X02 = (-1./(kq-1.)-2.)*estados_X1 + ((cos(estados_w_h*Ts)*(3.*kq-2.))/(kq-1.))*estados_X2 + (-1./(kq-1.)-1.)*estados_v;

v = (-1./(kq-1.)-2.)*estados_X1 + ((cos(estados_w_h*Ts)*(2.*kq-1.))/(kq-1.))*estados_X2 + (kq/(1.-kq))*estados_v;
qv = sin(estados_w_h*Ts)*estados_X2;

estados_X1 = X01;
estados_X2 = X02;
/*End code section*/"
                    }
                    [
                        position = 7648, 8176
                        size = 48, 48
                    ]

                    component gen_c_function "filtered RMS calculation" {
                        in_terminal_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit"
                        in_terminal_dimensions_str = "va inherit;qva inherit;vb inherit;qvb inherit;vc inherit;qvc inherit"
                        in_terminal_labels = "False;False;False;False;False;False;"
                        in_terminal_properties = "real va;inherit qva;inherit vb;inherit qvb;inherit vc;inherit qvc;"
                        init_fnc = "/*Begin code section*/
norm_v_p_a_f = 0;
norm_v_p_b_f = 0;
norm_v_p_c_f = 0;
norm_v_p_a = 0;
norm_v_p_b = 0;
norm_v_p_c = 0;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit"
                        out_terminal_dimensions_str = "norm_v_p_a_f inherit;norm_v_p_b_f inherit;norm_v_p_c_f inherit;norm_v_p_a inherit;norm_v_p_b inherit;norm_v_p_c inherit"
                        out_terminal_labels = "False;False;False;False;False;False;"
                        out_terminal_properties = "real norm_v_p_a_f;inherit norm_v_p_b_f;inherit norm_v_p_c_f;inherit norm_v_p_a;inherit norm_v_p_b;inherit norm_v_p_c;"
                        output_fnc = "/*Begin code section*/
norm_v_p_a = sqrt(va*va + qva*qva);
norm_v_p_b = sqrt(vb*vb + qvb*qvb);
norm_v_p_c = sqrt(vc*vc + qvc*qvc);

norm_v_p_a_f = 0.99*norm_v_p_a_f + 0.01*norm_v_p_a*0.707;
norm_v_p_b_f = 0.99*norm_v_p_b_f + 0.01*norm_v_p_b*0.707;
norm_v_p_c_f = 0.99*norm_v_p_c_f + 0.01*norm_v_p_c*0.707;
/*End code section*/"
                    }
                    [
                        position = 8072, 8624
                        size = 48, 112
                    ]

                    component gen_gain Gain5 {
                        gain = "0.5"
                    }
                    [
                        position = 8424, 8240
                        hide_name = True
                    ]

                    component gen_gain "to rads" {
                        gain = "2*np.pi"
                    }
                    [
                        position = 7568, 7992
                        rotation = right
                    ]

                    component gen_terminator Termination8 {
                    }
                    [
                        position = 8272, 8320
                        rotation = right
                        hide_name = True
                    ]

                    component gen_terminator Termination10 {
                    }
                    [
                        position = 8240, 8704
                        rotation = right
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_gain Gain2 {
                        gain = "0.5"
                    }
                    [
                        position = 8376, 8000
                        hide_name = True
                    ]

                    component gen_c_function "Quad Signal Generator3" {
                        global_variables = "real estados_X1;real estados_X2;real estados_v_l;real estados_qv_l;real kq;real X01;real X02;real Ts;"
                        in_terminal_dimensions = "inherit;inherit"
                        in_terminal_dimensions_str = "estados_v inherit;estados_w_h inherit"
                        in_terminal_labels = "False;False;"
                        in_terminal_properties = "real estados_v;inherit estados_w_h;"
                        init_fnc = "/*Begin code section*/
estados_X1=0;
estados_X2=0;
estados_v_l=0;
estados_qv_l=0;
v = 0;
qv = 0;
kq=0.01; //// 0<kp<0.6 para w=377 e Ts = 1/10000
Ts = execution_rate;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit;inherit"
                        out_terminal_dimensions_str = "v inherit;qv inherit"
                        out_terminal_labels = "False;False;"
                        out_terminal_properties = "real v;inherit qv;"
                        output_fnc = "/*Begin code section*/
X01 = estados_X2;
X02 = (-1./(kq-1.)-2.)*estados_X1 + ((cos(estados_w_h*Ts)*(3.*kq-2.))/(kq-1.))*estados_X2 + (-1./(kq-1.)-1.)*estados_v;

v = (-1./(kq-1.)-2.)*estados_X1 + ((cos(estados_w_h*Ts)*(2.*kq-1.))/(kq-1.))*estados_X2 + (kq/(1.-kq))*estados_v;
qv = sin(estados_w_h*Ts)*estados_X2;

estados_X1 = X01;
estados_X2 = X02;
/*End code section*/"
                    }
                    [
                        position = 7648, 8264
                        size = 48, 48
                    ]

                    component gen_c_function "Quad Signal Generator1" {
                        global_variables = "real estados_X1;real estados_X2;real estados_v_l;real estados_qv_l;real kq;real X01;real X02;real Ts;"
                        in_terminal_dimensions = "inherit;inherit"
                        in_terminal_dimensions_str = "estados_v inherit;estados_w_h inherit"
                        in_terminal_labels = "False;False;"
                        in_terminal_properties = "real estados_v;inherit estados_w_h;"
                        init_fnc = "/*Begin code section*/
estados_X1=0;
estados_X2=0;
estados_v_l=0;
estados_qv_l=0;
v = 0;
qv = 0;
kq=0.01; //// 0<kp<0.6 para w=377 e Ts = 1/10000
Ts = execution_rate;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit;inherit"
                        out_terminal_dimensions_str = "v inherit;qv inherit"
                        out_terminal_labels = "False;False;"
                        out_terminal_properties = "real v;inherit qv;"
                        output_fnc = "/*Begin code section*/
X01 = estados_X2;
X02 = (-1./(kq-1.)-2.)*estados_X1 + ((cos(estados_w_h*Ts)*(3.*kq-2.))/(kq-1.))*estados_X2 + (-1./(kq-1.)-1.)*estados_v;

v = (-1./(kq-1.)-2.)*estados_X1 + ((cos(estados_w_h*Ts)*(2.*kq-1.))/(kq-1.))*estados_X2 + (kq/(1.-kq))*estados_v;
qv = sin(estados_w_h*Ts)*estados_X2;

estados_X1 = X01;
estados_X2 = X02;
/*End code section*/"
                    }
                    [
                        position = 7648, 8080
                        size = 48, 48
                    ]

                    component gen_gain Gain4 {
                        gain = "0.5"
                    }
                    [
                        position = 8424, 8184
                        hide_name = True
                    ]

                    component gen_sum Sum1 {
                        signs = "+-"
                    }
                    [
                        position = 8496, 8008
                        hide_name = True
                    ]

                    component gen_terminator Termination9 {
                    }
                    [
                        position = 8256, 8080
                        rotation = right
                        hide_name = True
                    ]

                    component gen_gain Gain3 {
                        gain = "0.5"
                    }
                    [
                        position = 8376, 8064
                        hide_name = True
                    ]

                    component gen_sum Sum2 {
                    }
                    [
                        position = 8496, 8232
                        hide_name = True
                    ]

                    component gen_probe "vpa rms" {
                    }
                    [
                        position = 8184, 8456
                    ]

                    component gen_probe "vpc rms" {
                    }
                    [
                        position = 8288, 8576
                        rotation = left
                    ]

                    component "core/abc to alfa-beta-gamma" "abc to alfa-beta-gamma2" {
                    }
                    [
                        position = 8168, 8256
                        size = 48, 64
                    ]

                    component "core/abc to alfa-beta-gamma" "abc to alfa-beta-gamma1" {
                    }
                    [
                        position = 8448, 8136
                        size = 48, 64
                    ]

                    port va {
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7496, 8072
                    ]

                    port vb {
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7496, 8168
                    ]

                    port vc {
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7496, 8256
                    ]

                    port vp_al {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8576, 8008
                    ]

                    port vp_be {
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8576, 8232
                    ]

                    port vpa_rms {
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8128, 8408
                        rotation = left
                    ]

                    port vpb_rms {
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8160, 8520
                        rotation = left
                    ]

                    port vpc_rms {
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8336, 8616
                    ]

                    port f {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7568, 7912
                        rotation = right
                    ]

                    junction Junction157 sp
                    [
                        position = 7568, 8088
                    ]

                    junction Junction158 sp
                    [
                        position = 7568, 8184
                    ]

                    junction Junction166 sp
                    [
                        position = 8128, 8456
                    ]

                    junction Junction168 sp
                    [
                        position = 8288, 8616
                    ]

                    junction Junction169 sp
                    [
                        position = 7704, 8072
                    ]

                    junction Junction171 sp
                    [
                        position = 8008, 8072
                    ]

                    junction Junction172 sp
                    [
                        position = 7944, 8168
                    ]

                    junction Junction173 sp
                    [
                        position = 7880, 8256
                    ]

                    junction Junction176 sp
                    [
                        position = 7864, 8272
                    ]

                    junction Junction177 sp
                    [
                        position = 8160, 8568
                    ]

                    junction Junction178 sp
                    [
                        position = 7928, 8256
                    ]

                    junction Junction179 sp
                    [
                        position = 7792, 8088
                    ]

                    junction Junction180 sp
                    [
                        position = 7992, 8240
                    ]

                    connect Gain2.in "abc to alfa-beta-gamma1.al" as Connection1081
                    connect Gain3.out Sum1.in1 as Connection1025
                    connect Gain4.in "abc to alfa-beta-gamma1.be" as Connection1082
                    [
                        position = 0, 0
                    ]
                    connect Gain5.out Sum2.in1 as Connection1027
                    connect Gain5.in "abc to alfa-beta-gamma2.al" as Connection1097
                    connect Junction157 "Quad Signal Generator1.estados_w_h" as Connection1017
                    connect Junction157 "to rads.out" as Connection1112
                    connect Junction158 Junction157 as Connection1020
                    connect Junction166 "filtered RMS calculation.norm_v_p_a_f" as Connection1064
                    connect Junction168 "filtered RMS calculation.norm_v_p_c_f" as Connection1070
                    connect Junction169 Junction171 as Connection1085
                    connect Junction171 "filtered RMS calculation.va" as Connection1086
                    connect Junction172 "filtered RMS calculation.vb" as Connection1090
                    connect Junction173 "filtered RMS calculation.vc" as Connection1094
                    connect Junction176 "filtered RMS calculation.qvc" as Connection1110
                    connect Junction177 vpb_rms as Connection1116
                    connect Junction178 "filtered RMS calculation.qvb" as Connection1120
                    connect Junction179 Junction180 as Connection1128
                    connect Junction179 m_qva.in as Connection1125
                    [
                        position = 0, 0
                    ]
                    connect Junction180 "filtered RMS calculation.qva" as Connection1127
                    [
                        position = 0, 0
                        breakpoints = 7992, 8240
                    ]
                    connect "Quad Signal Generator1.v" Junction169 as Connection1075
                    connect "Quad Signal Generator1.qv" Junction179 as Connection1124
                    connect "Quad Signal Generator1.estados_v" va as Connection1034
                    connect "Quad Signal Generator2.estados_w_h" Junction158 as Connection1019
                    connect "Quad Signal Generator2.v" Junction172 as Connection1089
                    connect "Quad Signal Generator2.qv" Junction178 as Connection1121
                    connect "Quad Signal Generator2.estados_v" vb as Connection1032
                    connect "Quad Signal Generator3.estados_w_h" Junction158 as Connection1021
                    connect "Quad Signal Generator3.v" Junction173 as Connection1093
                    connect "Quad Signal Generator3.qv" Junction176 as Connection1109
                    connect "Quad Signal Generator3.estados_v" vc as Connection1033
                    connect Sum1.in Gain2.out as Connection1024
                    connect Sum1.out vp_al as Connection1036
                    connect Sum2.in Gain4.out as Connection1026
                    connect Sum2.out vp_be as Connection1037
                    connect Termination10.in "filtered RMS calculation.norm_v_p_a" as Connection1072
                    connect Termination11.in "filtered RMS calculation.norm_v_p_b" as Connection1073
                    connect Termination12.in "filtered RMS calculation.norm_v_p_c" as Connection1074
                    connect Termination8.in "abc to alfa-beta-gamma2.y" as Connection1099
                    connect Termination9.in "abc to alfa-beta-gamma1.y" as Connection1083
                    connect "abc to alfa-beta-gamma1.a" Junction171 as Connection1087
                    connect "abc to alfa-beta-gamma1.b" Junction172 as Connection1091
                    connect "abc to alfa-beta-gamma1.c" Junction173 as Connection1095
                    connect "abc to alfa-beta-gamma2.be" Gain3.in as Connection1098
                    connect "abc to alfa-beta-gamma2.c" Junction176 as Connection1111
                    connect "abc to alfa-beta-gamma2.b" Junction178 as Connection1119
                    connect "abc to alfa-beta-gamma2.a" Junction180 as Connection1126
                    connect "filtered RMS calculation.norm_v_p_b_f" Junction177 as Connection1117
                    connect m_va.in Junction169 as Connection1077
                    connect "to rads.in" f as Connection1113
                    connect "vpa rms.in" Junction166 as Connection1065
                    connect vpa_rms Junction166 as Connection1063
                    connect "vpb rms.in" Junction177 as Connection1115
                    connect "vpc rms.in" Junction168 as Connection1071
                    connect vpc_rms Junction168 as Connection1069

                    mask {
                        description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">Calculates alfa-beta transformation and RMS values of the positive-sequence component of the fundamental voltage.</span></p></body></html>"

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE
                    }
                }
                [
                    position = 8552, 8600
                    size = 200, 152
                ]

                component "core/Voltage Measurement" vg_c {
                    execution_rate = "inherit"
                    sig_output = "True"
                }
                [
                    position = 10352, 8360
                    rotation = right
                    size = 64, 32
                ]

                component Subsystem "Grid connection sequencing" {
                    layout = dynamic
                    component gen_c_function "Startup routine" {
                        global_variables = "real contactor_count;real Fs;"
                        in_terminal_dimensions = "inherit"
                        in_terminal_dimensions_str = "rt_enable inherit"
                        in_terminal_labels = "False;"
                        in_terminal_properties = "real rt_enable;"
                        init_fnc = "/*Begin code section*/
Fs = 1/execution_rate;
contactor_count = 0;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit;inherit;inherit"
                        out_terminal_dimensions_str = "contactor1 inherit;contactor2 inherit;inv_enable inherit"
                        out_terminal_labels = "False;False;False;"
                        out_terminal_properties = "real contactor1;inherit contactor2;inherit inv_enable;"
                        output_fnc = "/*Begin code section*/
if (rt_enable) {
    if (contactor_count == 0.) contactor1 = 1;

    if (contactor_count > (T1*Fs)){
        contactor2 = 1;
        contactor1 = 0;
    }
    contactor_count++;

    if (contactor_count > (T2*Fs))
    {
       inv_enable = 1;
        contactor_count = (T2*Fs+1.);
    }
} else {
    contactor_count = 0;
    contactor1 = 0;
    contactor2 = 0;
    inv_enable = 0;
}
/*End code section*/"
                        parameters = "real T1;real T2;"
                    }
                    [
                        position = 8192, 8192
                        size = 0, 0
                    ]

                    component gen_probe enable_inv_gridcon {
                    }
                    [
                        position = 8384, 8264
                    ]

                    port "Pre-charge contactor" {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8288, 8096
                        rotation = left
                    ]

                    port "Main contactor" {
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8376, 8192
                    ]

                    port "Inverter enable" {
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8288, 8304
                        rotation = right
                    ]

                    port "RT Enable" {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8072, 8192
                    ]

                    junction Junction1 sp
                    [
                        position = 8288, 8264
                    ]

                    connect Junction1 "Inverter enable" as Connection7
                    connect "Startup routine.inv_enable" Junction1 as Connection6
                    connect "Startup routine.contactor2" "Main contactor" as Connection1
                    connect "Startup routine.contactor1" "Pre-charge contactor" as Connection2
                    connect "Startup routine.rt_enable" "RT Enable" as Connection4
                    connect enable_inv_gridcon.in Junction1 as Connection8

                    T2 = "1"

                    mask {
                        description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">Coordinates the closing of converter contactors and converter switching enable when connecting to the grid if voltages are proper. Otherwise disconnects the converter.</span></p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">At t = 0 (when grid voltages become proper), closes precharging contactor. At t = t1, prechargin contactor is bypassed. At t = t2 inverter enable output is enabled.</span></p></body></html>"

                        T1 {
                            label = "Charging time"
                            widget = edit
                            type = generic
                            default_value = "0.25"
                            unit = "seconds"
                        }

                        T2 {
                            label = "Enable inverter time"
                            widget = edit
                            type = generic
                            default_value = "5"
                            unit = "seconds"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE
                    }
                }
                [
                    position = 8992, 7480
                    size = 152, 88
                ]

                component "core/Triple Pole Single Throw Contactor" S2 {
                    Sa = "19"
                    ctrl_src = "Model"
                }
                [
                    position = 10008, 8384
                    size = 64, 256
                ]

                component Subsystem "State feedback Resonant Current Controller" {
                    layout = dynamic
                    component gen_probe error_al {
                    }
                    [
                        position = 8096, 7936
                        rotation = left
                    ]

                    component gen_c_function "current controller" {
                        execution_rate = "Tpv"
                        global_variables = "real erro_i_al;real erro_i_be;real xc11_al;real xc11_be;real xc11m_al;real xc11m_be;real xc12_al;real xc12_be;real xc12m_al;real xc12m_be;real u_al_prev;real u_be_prev;real xc51_al;real xc52_al;real xc51m_al;real xc52m_al;real xc51_be;real xc52_be;real xc51m_be;real xc52m_be;real xc71_al;real xc72_al;real xc71m_al;real xc72m_al;real xc71_be;real xc72_be;real xc71m_be;real xc72m_be;real xc111_al;real xc112_al;real xc111m_al;real xc112m_al;real xc111_be;real xc112_be;real xc111m_be;real xc112m_be;real pi;real w;real zeta;real a1;real a5;real a7;real a11;real kres11;real kres12;real kres51;real kres52;real kres71;real kres72;real kres111;real kres112;real tmp;real Ts;"
                        in_terminal_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit"
                        in_terminal_dimensions_str = "ig_al inherit;ig_be inherit;ic_al inherit;ic_be inherit;vc_al inherit;vc_be inherit;wek inherit;iref_al inherit;iref_be inherit"
                        in_terminal_labels = "[(\'ig_al\', False), (\'ig_be\', False), (\'ic_al\', False), (\'ic_be\', False), (\'vc_al\', False), (\'vc_be\', False), (\'wek\', False), (\'iref_al\', False), (\'iref_be\', False)]"
                        in_terminal_properties = "inherit ig_al;inherit ig_be;inherit ic_al;inherit ic_be;inherit vc_al;inherit vc_be;inherit wek;inherit iref_al;inherit iref_be;"
                        init_fnc = "/*Begin code section*/
wek = 376.9911;
pi = 3.141592653589793238;
Ts = execution_rate;
// Resonant Controller definition

w = 2*pi*fnom;
zeta = 0.0001;

tmp = 1 - powf(zeta , 2);

a1  = w*zeta/(sqrt(tmp));
a5  = 5*w*zeta/(sqrt(tmp));
a7  = 7*w*zeta/(sqrt(tmp));
a11 = 11*w*zeta/(sqrt(tmp));

kres11=-exp(-2*a1*Ts);
kres12=exp(-a1*Ts);

kres51=-exp(-2*a5*Ts);
kres52=exp(-a5*Ts);

kres71=-exp(-2*a7*Ts);
kres72=exp(-a7*Ts);

kres111=-exp(-2*a11*Ts);
kres112=exp(-a11*Ts);

// State initialization

xc11_al = 0.;
xc12_al = 0.;
xc51_al = 0.;
xc52_al = 0.;
xc71_al = 0.;
xc72_al = 0.;
xc111_al = 0.;
xc112_al = 0.;
xc11m_al = 0.;
xc12m_al = 0.;
xc51m_al = 0.;
xc52m_al = 0.;
xc71m_al = 0.;
xc72m_al = 0.;
xc111m_al = 0.;
xc112m_al = 0.;
xc11_be = 0.;
xc12_be = 0.;
xc51_be = 0.;
xc52_be = 0.;
xc71_be = 0.;
xc72_be = 0.;
xc111_be = 0.;
xc112_be = 0.;
xc11m_be = 0.;
xc12m_be = 0.;
xc51m_be = 0.;
xc52m_be = 0.;
xc71m_be = 0.;
xc72m_be = 0.;
xc111m_be = 0.;
xc112m_be = 0.;

u_al_prev = 0;
u_be_prev = 0;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit"
                        out_terminal_dimensions_str = "u_al inherit;u_be inherit;debug1 inherit;debug2 inherit;debug3 inherit;debug4 inherit;debug5 inherit;debug6 inherit;debug7 inherit"
                        out_terminal_labels = "[(\'u_al\', False), (\'u_be\', False), (\'debug1\', False), (\'debug2\', False), (\'debug3\', False), (\'debug4\', False), (\'debug5\', False), (\'debug6\', False), (\'debug7\', False)]"
                        out_terminal_properties = "inherit u_al;inherit u_be;inherit debug1;inherit debug2;inherit debug3;inherit debug4;inherit debug5;inherit debug6;inherit debug7;"
                        output_fnc = "/*Begin code section*/
// UPDATE OF STATE CONTROLLER STATES
xc11_al = xc11m_al;
xc12_al = xc12m_al;
xc51_al = xc51m_al;
xc52_al = xc52m_al;
xc71_al = xc71m_al;
xc72_al = xc72m_al;
xc111_al = xc111m_al;
xc112_al = xc112m_al;

xc11_be = xc11m_be;
xc12_be = xc12m_be;
xc51_be = xc51m_be;
xc52_be = xc52m_be;
xc71_be = xc71m_be;
xc72_be = xc72m_be;
xc111_be = xc111m_be;
xc112_be = xc112m_be;

erro_i_al = iref_al - ig_al;
erro_i_be = iref_be - ig_be;

u_al = -(k0*ic_al + k1*vc_al + k2*ig_al+ k3*u_al + k4*xc11_al + k5*xc12_al + k6*xc51_al + k7*xc52_al + k8*xc71_al + k9*xc72_al + k10*xc111_al + k11*xc112_al);
u_be = -(k0*ic_be + k1*vc_be + k2*ig_be+ k3*u_be + k4*xc11_be + k5*xc12_be + k6*xc51_be + k7*xc52_be + k8*xc71_be + k9*xc72_be + k10*xc111_be + k11*xc112_be);

u_al_prev = u_al;
u_be_prev = u_be;

//if (1)//(absolut(eal)<1.)
//{
    xc11m_al = xc12_al;
    xc12m_al = kres11*xc11_al + 2.*kres12*cos(wek*Ts)*xc12_al + erro_i_al;
    xc51m_al = xc52_al;
    xc52m_al = kres51*xc51_al + 2.*kres52*cos(5.*wek*Ts)*xc52_al + erro_i_al;
    xc71m_al = xc72_al;
    xc72m_al = kres71*xc71_al + 2.*kres72*cos(7.*wek*Ts)*xc72_al + erro_i_al;
    xc111m_al = xc112_al;
    xc112m_al = kres111*xc111_al + 2.*kres112*cos(11.*wek*Ts)*xc112_al + erro_i_al;
//}

//if (1)//(absolut(ebe)<1.)
//{
    xc11m_be = xc12_be;
    xc12m_be = kres11*xc11_be + 2.*kres12*cos(wek*Ts)*xc12_be + erro_i_be;
    xc51m_be = xc52_be;
    xc52m_be = kres51*xc51_be + 2.*kres52*cos(5.*wek*Ts)*xc52_be + erro_i_be;
    xc71m_be = xc72_be;
    xc72m_be = kres71*xc71_be + 2.*kres72*cos(7.*wek*Ts)*xc72_be + erro_i_be;
    xc111m_be = xc112_be;
    xc112m_be = kres111*xc111_be + 2.*kres112*cos(11.*wek*Ts)*xc112_be + erro_i_be;
//}

debug1 = erro_i_al;
debug2 = erro_i_be;
debug3 = xc52m_al;
debug4 = xc52m_be;
debug5 = xc72m_al;
debug6 = xc72m_be;
/*End code section*/"
                        parameters = "real fnom;real k0;real k1;real k2;real k3;real k4;real k5;real k6;real k7;real k8;real k9;real k10;real k11;"
                    }
                    [
                        position = 7848, 8016
                        size = 48, 160
                    ]

                    component gen_probe xc12m_be {
                    }
                    [
                        position = 8000, 8168
                        rotation = right
                    ]

                    component gen_gain "to rads" {
                        gain = "2*np.pi"
                    }
                    [
                        position = 7552, 7976
                        rotation = right
                    ]

                    component gen_probe xc11m_be {
                    }
                    [
                        position = 8064, 8232
                        rotation = right
                    ]

                    component gen_probe m_u_al {
                    }
                    [
                        position = 8064, 7832
                    ]

                    component gen_probe unused {
                    }
                    [
                        position = 7968, 8136
                        rotation = right
                    ]

                    component gen_probe xc11m_al {
                    }
                    [
                        position = 8096, 8264
                        rotation = right
                    ]

                    component gen_probe xc12m_al {
                    }
                    [
                        position = 8032, 8200
                        rotation = right
                    ]

                    component gen_probe m_u_be {
                    }
                    [
                        position = 8016, 7856
                    ]

                    component gen_probe error_be {
                    }
                    [
                        position = 8152, 8000
                    ]

                    port u_al {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 7920, 7752
                        rotation = left
                    ]

                    port u_be {
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 7960, 7784
                        rotation = left
                    ]

                    port ig_al {
                        position = top:20
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7720, 7656
                        rotation = right
                    ]

                    port ig_be {
                        position = top:30
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7696, 7696
                        rotation = right
                    ]

                    port ic_al {
                        position = top:40
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7672, 7736
                        rotation = right
                    ]

                    port ic_be {
                        position = top:50
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7648, 7768
                        rotation = right
                    ]

                    port vc_al {
                        position = top:60
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7616, 7800
                        rotation = right
                    ]

                    port vc_be {
                        position = top:70
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7592, 7840
                        rotation = right
                    ]

                    port ig_be_ref {
                        position = left:100
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7440, 7952
                        rotation = right
                    ]

                    port ig_al_ref {
                        position = left:99
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7472, 7920
                        rotation = right
                    ]

                    port f {
                        position = top:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7552, 7880
                        rotation = right
                    ]

                    junction Junction1 sp
                    [
                        position = 7920, 7832
                    ]

                    junction Junction2 sp
                    [
                        position = 7960, 7856
                    ]

                    connect Junction1 "current controller.u_al" as Connection1405
                    connect Junction1 u_al as Connection1434
                    connect Junction2 "current controller.u_be" as Connection1408
                    connect Junction2 u_be as Connection1435
                    connect "current controller.iref_al" ig_al_ref as Connection1368
                    connect "current controller.iref_be" ig_be_ref as Connection1364
                    connect "current controller.wek" "to rads.out" as Connection1442
                    connect error_al.in "current controller.debug1" as Connection1359
                    connect error_be.in "current controller.debug2" as Connection1021
                    connect ic_al "current controller.ic_al" as Connection1438
                    connect ic_be "current controller.ic_be" as Connection1439
                    connect ig_al "current controller.ig_al" as Connection1436
                    connect ig_be "current controller.ig_be" as Connection1437
                    connect m_u_al.in Junction1 as Connection1406
                    connect m_u_be.in Junction2 as Connection1409
                    connect "to rads.in" f as Connection1443
                    connect unused.in "current controller.debug7" as Connection1026
                    connect vc_al "current controller.vc_al" as Connection1440
                    connect vc_be "current controller.vc_be" as Connection1441
                    connect xc11m_al.in "current controller.debug3" as Connection1022
                    connect xc11m_be.in "current controller.debug4" as Connection1023
                    connect xc12m_al.in "current controller.debug5" as Connection1024
                    connect xc12m_be.in "current controller.debug6" as Connection1025

                    k0 = "0.0517436654205"
                    k1 = "-0.175014904865"
                    k10 = "-0.00103488062729"
                    k11 = "0.00130712160229"
                    k2 = "0.127386586845"
                    k3 = "0.349012138783"
                    k4 = "0.0129592962221"
                    k5 = "-0.0131619258282"
                    k6 = "0.000818190473868"
                    k7 = "0.00019350199611"
                    k8 = "-0.000229087380002"
                    k9 = "0.00118601729715"

                    mask {
                        description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">Discrete LQR Resonant Current Controller</span></p></body></html>"

                        fnom {
                            label = "Fundamental Frequency"
                            widget = edit
                            type = generic
                            default_value = "fnom"
                            unit = "Hz"
                        }

                        k0 {
                            label = "k0"
                            widget = edit
                            type = generic
                            default_value = "gains[0]"
                        }

                        k1 {
                            label = "k1"
                            widget = edit
                            type = generic
                            default_value = "gains[1]"
                        }

                        k2 {
                            label = "k2"
                            widget = edit
                            type = generic
                            default_value = "gains[2]"
                        }

                        k3 {
                            label = "k3"
                            widget = edit
                            type = generic
                            default_value = "gains[3]"
                        }

                        k4 {
                            label = "k4"
                            widget = edit
                            type = generic
                            default_value = "gains[4]"
                        }

                        k5 {
                            label = "k5"
                            widget = edit
                            type = generic
                            default_value = "gains[5]"
                        }

                        k6 {
                            label = "k6"
                            widget = edit
                            type = generic
                            default_value = "gains[6]"
                        }

                        k7 {
                            label = "k7"
                            widget = edit
                            type = generic
                            default_value = "gains[7]"
                        }

                        k8 {
                            label = "k8"
                            widget = edit
                            type = generic
                            default_value = "gains[8]"
                        }

                        k9 {
                            label = "k9"
                            widget = edit
                            type = generic
                            default_value = "gains[9]"
                        }

                        k10 {
                            label = "k10"
                            widget = edit
                            type = generic
                            default_value = "gains[10]"
                        }

                        k11 {
                            label = "k11"
                            widget = edit
                            type = generic
                            default_value = "gains[11]"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE
                    }
                }
                [
                    position = 7152, 7560
                    size = 192, 136
                ]

                component "core/abc to alfa-beta-gamma" "abc to alfa-beta-gamma4" {
                }
                [
                    position = 9864, 9320
                    scale = -1, 1
                    size = 48, 96
                ]

                component Subsystem PLL {
                    layout = dynamic
                    component gen_terminator Termination2 {
                    }
                    [
                        position = 8240, 8256
                        rotation = right
                        hide_name = True
                    ]

                    component gen_terminator Termination3 {
                    }
                    [
                        position = 8256, 8136
                        rotation = left
                        hide_name = True
                    ]

                    component "core/Three phase PLL" "Three phase PLL" {
                    }
                    [
                        position = 8144, 8200
                        hide_name = True
                        size = 64, 128
                    ]

                    component gen_terminator Termination1 {
                    }
                    [
                        position = 8208, 8304
                        rotation = right
                        hide_name = True
                    ]

                    component gen_terminator Termination4 {
                    }
                    [
                        position = 8232, 8096
                        rotation = left
                        hide_name = True
                    ]

                    component gen_terminator Termination5 {
                    }
                    [
                        position = 8208, 8056
                        rotation = left
                        hide_name = True
                    ]

                    port f {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8344, 8208
                    ]

                    port Va {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8064, 8104
                        rotation = right
                    ]

                    port Vb {
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 8200
                    ]

                    port Vc {
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8064, 8296
                        rotation = left
                    ]

                    connect Termination1.in "Three phase PLL.sin_theta" as Connection2061
                    connect Termination2.in "Three phase PLL.theta" as Connection2062
                    connect Termination3.in "Three phase PLL.zero_axis" as Connection2063
                    connect Termination4.in "Three phase PLL.q_axis" as Connection2064
                    connect Termination5.in "Three phase PLL.d_axis" as Connection2065
                    connect "Three phase PLL.va" Va as Connection2066
                    connect "Three phase PLL.vb" Vb as Connection2069
                    connect "Three phase PLL.vc" Vc as Connection2068
                    connect "Three phase PLL.freq" f as Connection2067
                }
                [
                    position = 8552, 8440
                    size = 48, 88
                ]

                component "core/Resistive Neutral" "Resistive Neutral1" {
                    R = "1e4"
                }
                [
                    position = 10624, 8320
                    size = 112, 64
                ]

                component "core/Triple Pole Single Throw Contactor" S1 {
                    Sa = "20"
                    ctrl_src = "Model"
                }
                [
                    position = 9944, 8088
                    size = 64, 256
                ]

                component Subsystem MPPT {
                    layout = dynamic
                    component gen_probe "Probe ppv_ant" {
                    }
                    [
                        position = 8304, 8232
                        rotation = right
                    ]

                    component gen_probe "Probe ppv" {
                    }
                    [
                        position = 8040, 8064
                        rotation = left
                    ]

                    component gen_c_function "C function1" {
                        global_variables = "real vdc_ant;real ppv_ant;real vdc_ant_2;"
                        in_terminal_dimensions = "inherit;inherit"
                        in_terminal_dimensions_str = "ppv inherit;enable inherit"
                        in_terminal_labels = "False;False;"
                        in_terminal_properties = "real ppv;real enable;"
                        init_fnc = "/*Begin code section*/
vdc_ant_2 = vdc_init;
vdc_ant =vdc_init;
vdc = vdc_init;
ppv_ant = 0;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit;inherit;inherit"
                        out_terminal_dimensions_str = "vdc inherit;debug1 inherit;debug2 inherit"
                        out_terminal_labels = "False;False;False;"
                        out_terminal_properties = "real vdc;inherit debug1;inherit debug2;"
                        output_fnc = "/*Begin code section*/
debug1 = ppv_ant;
debug2 = vdc_ant;

if (enable) {
    if (ppv>ppv_ant) {
        if (vdc_ant>vdc_ant_2) {
            vdc += step;
        } else {
            vdc -= step;
        }
    } else {
        if (vdc_ant>vdc_ant_2) {
            vdc -= step;
        } else {
            vdc += step;
        }
    }
    vdc_ant_2 = vdc_ant;
    vdc_ant = vdc;
    ppv_ant = ppv;
} else {
    vdc_ant_2 = vdc_init;
    vdc_ant =vdc_init;
    vdc = vdc_init;
    ppv_ant = 0;
}
/*End code section*/"
                        parameters = "real step;real vdc_init;"
                    }
                    [
                        position = 8128, 8128
                        size = 48, 64
                    ]

                    component gen_probe "Probe vdc_ant" {
                    }
                    [
                        position = 8264, 8192
                        rotation = right
                    ]

                    component "core/Rate Transition" "Rate Transition3" {
                        execution_rate = "Ts"
                    }
                    [
                        position = 7968, 8192
                        hide_name = True
                        size = 32, 32
                    ]

                    component "core/Rate Transition" "Rate Transition2" {
                        execution_rate = "inherit"
                    }
                    [
                        position = 8344, 8112
                        hide_name = True
                        size = 32, 32
                    ]

                    component "core/Rate Transition" "Rate Transition1" {
                        execution_rate = "Ts"
                    }
                    [
                        position = 7968, 8112
                        hide_name = True
                        size = 32, 32
                    ]

                    port "PV Power" {
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7816, 8112
                    ]

                    port Vdc {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8472, 8112
                    ]

                    port Enable {
                        position = top:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7816, 8192
                    ]

                    junction Junction1 sp
                    [
                        position = 8040, 8112
                    ]

                    connect "C function1.ppv" Junction1 as Connection9
                    connect "C function1.vdc" "Rate Transition2.in" as Connection5
                    connect Junction1 "Rate Transition1.out" as Connection10
                    connect "Probe ppv.in" Junction1 as Connection11
                    connect "Probe ppv_ant.in" "C function1.debug1" as Connection12
                    connect "Probe vdc_ant.in" "C function1.debug2" as Connection13
                    connect "Rate Transition1.in" "PV Power" as Connection4
                    connect "Rate Transition2.out" Vdc as Connection6
                    connect "Rate Transition3.out" "C function1.enable" as Connection8
                    connect "Rate Transition3.in" Enable as Connection7

                    mask {
                        description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Fixed step MPPT algorithm.</p></body></html>"

                        step {
                            label = "Voltage step"
                            widget = edit
                            type = generic
                            default_value = "5"
                            unit = "dc volts"
                        }

                        vdc_init {
                            label = "Initial voltage"
                            widget = edit
                            type = generic
                            default_value = "1000"
                            unit = "dc volts"
                        }

                        Ts {
                            label = "Execution rate"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "seconds"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE
                    }
                }
                [
                    position = 5960, 7400
                    scale = -1, 1
                    size = 88, 48
                ]

                component Subsystem "PCC Measurements" {
                    layout = dynamic
                    component gen_rms_value RMS6 {
                        frequency = "60"
                        op_mode = "Fixed frequency"
                    }
                    [
                        position = 8224, 8352
                        hide_name = True
                        scale = 1, -1
                    ]

                    component gen_rms_value RMS3 {
                        frequency = "60"
                        op_mode = "Fixed frequency"
                    }
                    [
                        position = 8224, 8016
                        hide_name = True
                        scale = 1, -1
                    ]

                    component gen_rms_value RMS7 {
                        frequency = "60"
                        op_mode = "Fixed frequency"
                    }
                    [
                        position = 8224, 8408
                        hide_name = True
                        scale = 1, -1
                    ]

                    component gen_rms_value RMS5 {
                        frequency = "60"
                        op_mode = "Fixed frequency"
                    }
                    [
                        position = 8224, 7960
                        hide_name = True
                        scale = 1, -1
                    ]

                    component gen_rms_value RMS4 {
                        frequency = "60"
                        op_mode = "Fixed frequency"
                    }
                    [
                        position = 8224, 7904
                        hide_name = True
                        scale = 1, -1
                    ]

                    component gen_rms_value RMS8 {
                        frequency = "60"
                        op_mode = "Fixed frequency"
                    }
                    [
                        position = 8224, 8464
                        hide_name = True
                        scale = 1, -1
                    ]

                    component Subsystem "Power Measurements" {
                        layout = dynamic
                        component gen_terminator Term2 {
                        }
                        [
                            position = 8416, 8160
                            rotation = left
                            hide_name = True
                        ]

                        component gen_terminator Term3 {
                        }
                        [
                            position = 8384, 8120
                            rotation = left
                            hide_name = True
                        ]

                        component gen_PQ_transform "Power Meter1" {
                        }
                        [
                            position = 8192, 8192
                        ]

                        port P {
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8256, 8096
                            rotation = left
                        ]

                        port Q {
                            position = right:auto
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8320, 8096
                            rotation = left
                        ]

                        port Vg_a {
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8120, 8096
                            rotation = right
                        ]

                        port Vg_b {
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8048, 8096
                            rotation = right
                        ]

                        port Vg_c {
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7968, 8096
                            rotation = right
                        ]

                        port Ig_c {
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8120, 8296
                            rotation = left
                        ]

                        port Ig_b {
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8048, 8296
                            rotation = left
                        ]

                        port Ig_a {
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7968, 8296
                            rotation = left
                        ]

                        port S {
                            position = right:auto
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8352, 8296
                            rotation = right
                        ]

                        port pf {
                            position = right:auto
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8288, 8296
                            rotation = right
                        ]

                        connect P "Power Meter1.Pdc" as Connection11
                        connect "Power Meter1.ia" Ig_a as Connection4
                        connect "Power Meter1.ib" Ig_b as Connection6
                        connect "Power Meter1.ic" Ig_c as Connection3
                        connect "Power Meter1.apparent" S as Connection13
                        connect "Power Meter1.va" Vg_a as Connection2
                        connect "Power Meter1.vb" Vg_b as Connection5
                        connect "Power Meter1.vc" Vg_c as Connection1
                        connect "Power Meter1.k_factor" pf as Connection14
                        connect Q "Power Meter1.Qdc" as Connection12
                        connect Term2.in "Power Meter1.Qac" as Connection9
                        connect Term3.in "Power Meter1.Pac" as Connection10
                    }
                    [
                        position = 8264, 8184
                        size = 128, 232
                    ]

                    port va {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8080, 7824
                        rotation = right
                    ]

                    port vb {
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8048, 7856
                        rotation = right
                    ]

                    port vc {
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8016, 7888
                        rotation = right
                    ]

                    port ia {
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8016, 8592
                        rotation = left
                    ]

                    port ib {
                        position = left:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8048, 8552
                        rotation = left
                    ]

                    port ic {
                        position = left:7
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8080, 8512
                        rotation = left
                    ]

                    port va_rms {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8296, 7904
                    ]

                    port vb_rms {
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8296, 7960
                    ]

                    port vc_rms {
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8296, 8016
                    ]

                    port ia_rms {
                        position = right:8
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8288, 8352
                    ]

                    port ib_rms {
                        position = right:9
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8288, 8408
                    ]

                    port ic_rms {
                        position = right:10
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8288, 8464
                    ]

                    port P {
                        position = right:4
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8392, 8088
                    ]

                    port Q {
                        position = right:5
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8392, 8152
                    ]

                    port S {
                        position = right:6
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8392, 8216
                    ]

                    port pf {
                        position = right:7
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8392, 8280
                    ]

                    junction Junction347 sp
                    [
                        position = 8080, 7904
                    ]

                    junction Junction348 sp
                    [
                        position = 8048, 7960
                    ]

                    junction Junction349 sp
                    [
                        position = 8016, 8016
                    ]

                    junction Junction350 sp
                    [
                        position = 8016, 8352
                    ]

                    junction Junction351 sp
                    [
                        position = 8048, 8408
                    ]

                    junction Junction352 sp
                    [
                        position = 8080, 8464
                    ]

                    connect Junction347 "Power Measurements.Vg_a" as Connection2624
                    connect Junction348 vb as Connection2627
                    connect Junction349 vc as Connection2630
                    connect Junction350 ia as Connection2636
                    connect Junction351 ib as Connection2639
                    connect Junction352 RMS8.in as Connection2646
                    connect "Power Measurements.Vg_b" Junction348 as Connection2626
                    connect "Power Measurements.Vg_c" Junction349 as Connection2629
                    connect "Power Measurements.Ig_a" Junction350 as Connection2635
                    connect "Power Measurements.Ig_b" Junction351 as Connection2638
                    connect "Power Measurements.Ig_c" Junction352 as Connection2647
                    connect "Power Measurements.P" P as Connection2606
                    connect "Power Measurements.Q" Q as Connection2611
                    connect "Power Measurements.S" S as Connection2613
                    connect "Power Measurements.pf" pf as Connection2612
                    connect RMS3.in Junction349 as Connection2631
                    connect RMS3.out vc_rms as Connection2600
                    connect RMS4.in Junction347 as Connection2625
                    connect RMS4.out va_rms as Connection2604
                    connect RMS5.in Junction348 as Connection2628
                    connect RMS5.out vb_rms as Connection2605
                    connect RMS6.in Junction350 as Connection2637
                    connect RMS6.out ia_rms as Connection2610
                    connect RMS7.in Junction351 as Connection2640
                    connect RMS7.out ib_rms as Connection2609
                    connect RMS8.out ic_rms as Connection2607
                    connect ic Junction352 as Connection2645
                    connect va Junction347 as Connection2623
                }
                [
                    position = 10488, 8832
                    size = 120, 384
                ]

                component Subsystem "DC Voltage Controller" {
                    layout = dynamic
                    component gen_sum Sum1 {
                        signs = "+-"
                    }
                    [
                        position = 8192, 8224
                        hide_name = True
                    ]

                    component gen_probe "Probe Vdc ref" {
                    }
                    [
                        position = 8040, 8152
                        rotation = left
                    ]

                    component "core/DC Energy Calculation" "DC Energy Calculation1" {
                        C_dc = "C_dc/2"
                    }
                    [
                        position = 8096, 8216
                        hide_name = True
                        size = 48, 48
                    ]

                    component "core/DC Energy Calculation" "DC Energy Calculation2" {
                        C_dc = "C_dc/2"
                    }
                    [
                        position = 8096, 8312
                        hide_name = True
                        size = 48, 48
                    ]

                    component Subsystem "PI with Antiwindup" {
                        layout = dynamic
                        component gen_c_function "C function1" {
                            global_variables = "real enable_old;real sum;"
                            in_terminal_dimensions = "inherit;inherit"
                            in_terminal_dimensions_str = "error inherit;enable inherit"
                            in_terminal_labels = "True;True;"
                            in_terminal_properties = "real error;inherit enable;"
                            init_fnc = "/*Begin code section*/
sum=0;
enable_old = 0;
/*End code section*/"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions = "inherit"
                            out_terminal_dimensions_str = "out inherit"
                            out_terminal_labels = "True;"
                            output_fnc = "/*Begin code section*/
if (enable == 0) {
    sum = 0;
    error = 0;
}
//enable_old = enable;
out = ki * sum + kp * error;
if (ki!=0) sum = sum + error;

// Anti windup
if (out > maxout){
    out = maxout;
    if (ki!=0) sum = (out - (kp * error))/ki;
}

// Anti windup
if (out < minout){
    out = minout;
    if (ki!=0) sum = (out - (kp * error))/ki;
}
/*End code section*/"
                            parameters = "real kp;real ki;real maxout;real minout;"
                        }
                        [
                            position = 8192, 8192
                            size = 48, 48
                        ]

                        port error {
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8024, 8144
                        ]

                        port out {
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8320, 8144
                        ]

                        port enable {
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8032, 8224
                        ]

                        connect "C function1.error" error as Connection2
                        connect "C function1.out" out as Connection3
                        connect enable "C function1.enable" as Connection4

                        ki = "-2"
                        kp = "-200"
                        maxout = "1000000"
                        minout = "-1000000"

                        mask {
                            description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                            kp {
                                label = "Proportional gain"
                                widget = edit
                                type = generic
                                default_value = "0"
                            }

                            ki {
                                label = "Integral gain"
                                widget = edit
                                type = generic
                                default_value = "0"
                            }

                            maxout {
                                label = "Maximum output"
                                widget = edit
                                type = generic
                                default_value = "0"
                            }

                            minout {
                                label = "Minimum output"
                                widget = edit
                                type = generic
                                default_value = "0"
                            }

                            CODE open
                                from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                            
                                dialog = RegularComponentPropertiesDialog(
                                    component=component,
                                    property_container=component.masks[-1],
                                    current_diagram=current_diagram
                                )
                                dialog.exec_()
                                
                            ENDCODE
                        }
                    }
                    [
                        position = 8328, 8232
                        size = 48, 48
                    ]

                    port "Vdc ref" {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 8216
                    ]

                    port Vdc {
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8024, 8312
                    ]

                    port Enable {
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8216, 8296
                    ]

                    port P {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8400, 8232
                    ]

                    junction Junction1 sp
                    [
                        position = 8040, 8216
                    ]

                    comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Energy used to control voltage indirectly</p></body></html> ENDCOMMENT 
                    [
                        position = 8080, 8080
                    ]

                    connect "DC Energy Calculation1.Vdc" Junction1 as Connection2293
                    connect "DC Energy Calculation1.energy" Sum1.in as Connection2291
                    connect "DC Energy Calculation2.energy" Sum1.in1 as Connection2297
                    connect "DC Energy Calculation2.Vdc" Vdc as Connection2296
                    connect Junction1 "Vdc ref" as Connection2294
                    connect "PI with Antiwindup.enable" Enable as Connection2290
                    connect "PI with Antiwindup.out" P as Connection2289
                    connect "PI with Antiwindup.error" Sum1.out as Connection2281
                    connect "Probe Vdc ref.in" Junction1 as Connection2295

                    mask {
                        description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">DC Voltage Controller based on DC link energy.</span></p></body></html>"

                        C_dc {
                            label = "DC Link Capacitance"
                            widget = edit
                            type = generic
                            default_value = "18.8e-2/2"
                            unit = "F"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE
                    }
                }
                [
                    position = 5960, 7512
                    size = 112, 88
                ]

                component "core/Three-phase UL 1741 voltage ride-through" "Voltage ride-through" {
                    Vnom = "vnom"
                }
                [
                    position = 8680, 7376
                    size = 120, 88
                ]

                component "core/Voltage Measurement" Vab {
                }
                [
                    position = 8416, 8040
                    rotation = right
                    size = 64, 32
                ]

                component "core/Current Measurement" Ig_c {
                    execution_rate = "inherit"
                    sig_output = "True"
                }
                [
                    position = 9592, 8184
                    size = 64, 32
                ]

                component "core/alfa-beta-gamma to abc" "alfa-beta-gamma to abc1" {
                }
                [
                    position = 7576, 7544
                    size = 56, 112
                ]

                component Subsystem "Modulation and DC balancing" {
                    layout = dynamic
                    component gen_probe db_down {
                    }
                    [
                        position = 9288, 8728
                    ]

                    component gen_probe dc_down {
                    }
                    [
                        position = 9288, 8808
                    ]

                    component gen_probe dc_up {
                    }
                    [
                        position = 9232, 8768
                    ]

                    component gen_probe da_down {
                    }
                    [
                        position = 9240, 8544
                    ]

                    component gen_probe da_up {
                    }
                    [
                        position = 9296, 8504
                    ]

                    component gen_c_function "Method 2 (DC balancing control)" {
                        global_variables = "real max;real min;real c1;real c2;real c3;real c4;real c5;real c6;real c7;real c9;real c11;real c8;real c10;real c12;real c13;real vo;real vag_s1;real vbg_s1;real vcg_s1;real vag_vdc2;real vbg_vdc2;real vcg_vdc2;real kp_dc;"
                        in_terminal_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit;inherit"
                        in_terminal_dimensions_str = "u_a inherit;u_b inherit;u_c inherit;sign_ic_a inherit;sign_ic_b inherit;sign_ic_c inherit;dc_error inherit"
                        in_terminal_labels = "False;False;False;False;False;False;False;"
                        in_terminal_properties = "inherit u_a;inherit u_b;inherit u_c;inherit sign_ic_a;inherit sign_ic_b;inherit sign_ic_c;inherit dc_error;"
                        init_fnc = "/*Begin code section*/
kp_dc = 1;
vag_s1_l = 0;
vag_s2_l = 0;
vbg_s1_l = 0;
vbg_s2_l = 0;
vcg_s1_l = 0;
vcg_s2_l = 0;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit"
                        out_terminal_dimensions_str = "vag_s1_l inherit;vag_s2_l inherit;vbg_s1_l inherit;vbg_s2_l inherit;vcg_s1_l inherit;vcg_s2_l inherit"
                        out_terminal_labels = "False;False;False;False;False;False;"
                        out_terminal_properties = "inherit vag_s1_l;inherit vag_s2_l;inherit vbg_s1_l;inherit vbg_s2_l;inherit vcg_s1_l;inherit vcg_s2_l;"
                        output_fnc = "/*Begin code section*/
vag_s1_l = u_a;
vbg_s1_l = u_b;
vcg_s1_l = u_c;

c1  = (3. - 2.*vag_s1_l + vbg_s1_l + vcg_s1_l)*0.5;
c3  = (3. + vag_s1_l -2.* vbg_s1_l + vcg_s1_l)*0.5;
c5  = (3. + vag_s1_l + vbg_s1_l - 2.*vcg_s1_l)*0.5;
c7  = (4.*vag_s1_l + vbg_s1_l + vcg_s1_l)*0.5;
c9  = (vag_s1_l + 4.*vbg_s1_l + vcg_s1_l)*0.5;
c11 = (vag_s1_l + vbg_s1_l + 4.*vcg_s1_l)*0.5;

//c2 = c1+1.5;
//c4 = c3+1.5;
//c6 = c5+1.5;
//c8 = c7+1.5;
//c10 = c9+1.5;
//c12 = c11+1.5;

c13 = (3. + vag_s1_l + vbg_s1_l + vcg_s1_l)*0.5;

max = c1;
if (c3>max) max = c3;
if (c5>max) max = c5;
if (c7>max) max = c7;
if (c9>max) max = c9;
if (c11>max) max = c11;

vag_vdc2 = vag_s1_l + 0.5;
vbg_vdc2 = vbg_s1_l + 0.5;
vcg_vdc2 = vcg_s1_l + 0.5;

vag_s1_l = ((2.)*vag_vdc2 + (-1.)*vbg_vdc2 + (-1.)*vcg_vdc2 + (2.)*max)*0.16666667;
vag_s2_l = ((4.)*vag_vdc2 + (1.)*vbg_vdc2 + (1.)*vcg_vdc2 + (-2.)*max)*0.16666667;

vbg_s1_l = ((-1.)*vag_vdc2 + (2.)*vbg_vdc2 + (-1.)*vcg_vdc2 + (2.)*max)*0.16666667;
vbg_s2_l = ((1.)*vag_vdc2 + (4.)*vbg_vdc2 + (1.)*vcg_vdc2 + (-2.)*max)*0.16666667;

vcg_s1_l = ((-1.)*vag_vdc2 + (-1.)*vbg_vdc2 + (2.)*vcg_vdc2 + (2.)*max)*0.16666667;
vcg_s2_l = ((1.)*vag_vdc2 + (1.)*vbg_vdc2 + (4.)*vcg_vdc2 + (-2.)*max)*0.16666667;

if((vag_s1_l > 0.5) && (vag_s2_l < 0.5)){
    vag_s1_l = vag_s1_l + kp_dc*sign_ic_a*dc_error;
    vag_s2_l = vag_s2_l - kp_dc*sign_ic_a*dc_error;
}

if((vbg_s1_l > 0.5) && (vbg_s2_l < 0.5)){
    vbg_s1_l = vbg_s1_l + kp_dc*sign_ic_b*dc_error;
    vbg_s2_l = vbg_s2_l - kp_dc*sign_ic_b*dc_error;
}

if((vcg_s1_l > 0.5) && (vcg_s2_l < 0.5)){
    vcg_s1_l = vcg_s1_l + kp_dc*sign_ic_c*dc_error;
    vcg_s2_l = vcg_s2_l - kp_dc*sign_ic_c*dc_error;
}
/*End code section*/"
                    }
                    [
                        position = 8576, 8632
                        size = 48, 128
                    ]

                    component gen_limiter "cant be zero for normalization" {
                        lower_limit = "0.0001"
                    }
                    [
                        position = 7568, 8968
                    ]

                    component gen_sum "midpoint DC error" {
                        signs = "+-"
                    }
                    [
                        position = 8408, 8968
                    ]

                    component src_constant offset {
                        execution_rate = "inherit"
                        value = "0.5"
                    }
                    [
                        position = 8024, 8528
                    ]

                    component src_constant "midpoint reference" {
                        execution_rate = "inherit"
                        value = "0.5"
                    }
                    [
                        position = 8304, 8904
                    ]

                    component gen_product Normalization2 {
                        signs = "/*"
                    }
                    [
                        position = 7984, 8976
                    ]

                    component gen_probe db_up {
                    }
                    [
                        position = 9296, 8584
                    ]

                    component Subsystem Saturation {
                        layout = dynamic
                        component gen_limiter Limit2 {
                            lower_limit = "0"
                            upper_limit = "1"
                        }
                        [
                            position = 8408, 8408
                        ]

                        component gen_limiter Limit3 {
                            lower_limit = "0"
                            upper_limit = "1"
                        }
                        [
                            position = 8408, 8464
                        ]

                        component gen_limiter Limit1 {
                            lower_limit = "0"
                            upper_limit = "1"
                        }
                        [
                            position = 8408, 8352
                        ]

                        port in_a {
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8312, 8352
                        ]

                        port in_b {
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8312, 8408
                        ]

                        port in_c {
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8312, 8464
                        ]

                        port out_a {
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8496, 8352
                        ]

                        port out_b {
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8496, 8408
                        ]

                        port out_c {
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8496, 8464
                        ]

                        connect Limit1.in in_a as Connection1
                        connect Limit1.out out_a as Connection2
                        connect Limit2.in in_b as Connection4
                        connect Limit3.out out_c as Connection6
                        connect in_c Limit3.in as Connection5
                        connect out_b Limit2.out as Connection3
                    }
                    [
                        position = 8240, 8600
                        size = 80, 80
                    ]

                    component Subsystem Normalization {
                        layout = dynamic
                        component gen_product Product2 {
                            signs = "*/"
                        }
                        [
                            position = 8560, 8416
                        ]

                        component gen_product Product3 {
                            signs = "*/"
                        }
                        [
                            position = 8496, 8472
                        ]

                        component gen_product Product1 {
                            signs = "*/"
                        }
                        [
                            position = 8616, 8360
                        ]

                        port in_a {
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8312, 8352
                        ]

                        port in_b {
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8312, 8408
                        ]

                        port in_c {
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8312, 8464
                        ]

                        port out_a {
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8704, 8360
                        ]

                        port out_b {
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8704, 8416
                        ]

                        port out_c {
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8704, 8472
                        ]

                        port Vdc {
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8560
                        ]

                        junction Junction1 sp
                        [
                            position = 8416, 8424
                        ]

                        junction Junction2 sp
                        [
                            position = 8416, 8480
                        ]

                        connect Junction1 Junction2 as Connection70
                        connect Junction2 Vdc as Connection71
                        connect Product1.in1 Junction1 as Connection67
                        connect Product1.in in_a as Connection63
                        connect Product1.out out_a as Connection59
                        connect Product2.in1 Junction1 as Connection69
                        connect Product3.in1 Junction2 as Connection72
                        connect in_b Product2.in as Connection64
                        connect in_c Product3.in as Connection65
                        connect out_b Product2.out as Connection61
                        connect out_c Product3.out as Connection62
                    }
                    [
                        position = 7784, 8600
                        size = 80, 80
                    ]

                    component Subsystem "add offset" {
                        layout = dynamic
                        component gen_sum Sum4 {
                        }
                        [
                            position = 8504, 8472
                        ]

                        component gen_sum Sum2 {
                        }
                        [
                            position = 8608, 8360
                        ]

                        component gen_sum Sum3 {
                        }
                        [
                            position = 8560, 8416
                        ]

                        port in_a {
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8320, 8368
                        ]

                        port in_b {
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8320, 8424
                        ]

                        port in_c {
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8320, 8480
                        ]

                        port out_a {
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8704, 8360
                        ]

                        port out_b {
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8704, 8416
                        ]

                        port out_c {
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8704, 8472
                        ]

                        port offset {
                            position = top:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8272
                        ]

                        junction Junction9 sp
                        [
                            position = 8464, 8408
                        ]

                        junction Junction10 sp
                        [
                            position = 8464, 8352
                        ]

                        connect Junction10 Junction9 as Connection56
                        connect Junction9 Sum4.in as Connection39
                        connect Sum2.in Junction10 as Connection55
                        connect Sum2.in1 in_a as Connection48
                        connect Sum3.in Junction9 as Connection40
                        connect Sum4.in1 in_c as Connection47
                        connect in_b Sum3.in1 as Connection49
                        connect offset Junction10 as Connection57
                        connect out_a Sum2.out as Connection44
                        connect out_b Sum3.out as Connection45
                        connect out_c Sum4.out as Connection46
                    }
                    [
                        position = 8104, 8600
                        size = 96, 80
                    ]

                    component Subsystem "Triplen Harm Zero seq injection" {
                        layout = dynamic
                        component gen_sum Sum2 {
                            signs = "-+"
                        }
                        [
                            position = 8608, 8360
                        ]

                        component gen_sum Sum4 {
                            signs = "-+"
                        }
                        [
                            position = 8504, 8472
                        ]

                        component gen_minmax "Min Max2" {
                            inputs = "3"
                            operation = "max"
                        }
                        [
                            position = 8232, 8232
                        ]

                        component gen_gain Gain1 {
                            gain = "0.5"
                        }
                        [
                            position = 8384, 8168
                        ]

                        component gen_sum Sum1 {
                        }
                        [
                            position = 8312, 8168
                        ]

                        component gen_sum Sum3 {
                            signs = "-+"
                        }
                        [
                            position = 8560, 8416
                        ]

                        component gen_minmax "Min Max1" {
                            inputs = "3"
                        }
                        [
                            position = 8232, 8104
                        ]

                        port in_a {
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7728, 8368
                        ]

                        port in_b {
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7728, 8424
                        ]

                        port in_c {
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7728, 8480
                        ]

                        port out_a {
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8704, 8360
                        ]

                        port out_b {
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8704, 8416
                        ]

                        port out_c {
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8704, 8472
                        ]

                        junction Junction3 sp
                        [
                            position = 8072, 8248
                        ]

                        junction Junction4 sp
                        [
                            position = 8032, 8232
                        ]

                        junction Junction5 sp
                        [
                            position = 8000, 8216
                        ]

                        junction Junction6 sp
                        [
                            position = 8000, 8368
                        ]

                        junction Junction7 sp
                        [
                            position = 8032, 8424
                        ]

                        junction Junction8 sp
                        [
                            position = 8072, 8480
                        ]

                        junction Junction9 sp
                        [
                            position = 8464, 8408
                        ]

                        junction Junction10 sp
                        [
                            position = 8464, 8352
                        ]

                        connect Gain1.out Junction10 as Connection41
                        connect Gain1.in Sum1.out as Connection15
                        connect Junction10 Junction9 as Connection42
                        connect Junction3 "Min Max1.in2" as Connection11
                        connect Junction4 "Min Max2.in1" as Connection23
                        connect Junction5 Junction6 as Connection28
                        connect Junction6 in_a as Connection29
                        connect Junction7 Junction4 as Connection32
                        connect Junction8 Junction3 as Connection35
                        connect Junction9 Sum4.in as Connection39
                        connect "Min Max1.in1" Junction4 as Connection24
                        connect "Min Max1.in" Junction5 as Connection27
                        connect "Min Max1.out" Sum1.in as Connection13
                        connect "Min Max2.in2" Junction3 as Connection12
                        connect "Min Max2.in" Junction5 as Connection25
                        connect "Min Max2.out" Sum1.in1 as Connection14
                        connect Sum2.in Junction10 as Connection43
                        connect Sum2.in1 Junction6 as Connection30
                        connect Sum3.in1 Junction7 as Connection33
                        connect Sum3.in Junction9 as Connection40
                        connect Sum4.in1 Junction8 as Connection36
                        connect in_b Junction7 as Connection31
                        connect in_c Junction8 as Connection34
                        connect out_a Sum2.out as Connection44
                        connect out_b Sum3.out as Connection45
                        connect out_c Sum4.out as Connection46
                    }
                    [
                        position = 7928, 8600
                        size = 80, 64
                    ]

                    component Subsystem "Transport delay" {
                        layout = dynamic
                        component gen_delay Delay6 {
                            del_length = "1"
                        }
                        [
                            position = 8072, 8232
                            hide_name = True
                        ]

                        component gen_delay Delay5 {
                            del_length = "1"
                        }
                        [
                            position = 8120, 8216
                            hide_name = True
                        ]

                        component gen_delay Delay2 {
                            del_length = "1"
                        }
                        [
                            position = 8264, 8168
                            hide_name = True
                        ]

                        component gen_delay Delay3 {
                            del_length = "1"
                        }
                        [
                            position = 8216, 8184
                            hide_name = True
                        ]

                        component gen_delay Delay4 {
                            del_length = "1"
                        }
                        [
                            position = 8168, 8200
                            hide_name = True
                        ]

                        component gen_delay Delay1 {
                            del_length = "1"
                        }
                        [
                            position = 8312, 8152
                            hide_name = True
                        ]

                        port Out1 {
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8152
                        ]

                        port Out2 {
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8336, 8168
                        ]

                        port Out3 {
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8288, 8184
                        ]

                        port Out4 {
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8240, 8200
                        ]

                        port Out5 {
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8192, 8216
                        ]

                        port Out6 {
                            position = right:6
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8144, 8232
                        ]

                        port In7 {
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8240, 8152
                        ]

                        port In8 {
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8192, 8168
                        ]

                        port In9 {
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8144, 8184
                        ]

                        port In10 {
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8096, 8200
                        ]

                        port In11 {
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8048, 8216
                        ]

                        port In12 {
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8000, 8232
                        ]

                        connect Delay1.in In7 as Connection3
                        connect Delay1.out Out1 as Connection4
                        connect Delay2.in In8 as Connection7
                        connect Delay2.out Out2 as Connection6
                        connect Delay3.in In9 as Connection11
                        connect Delay3.out Out3 as Connection8
                        connect Delay4.in In10 as Connection2
                        connect Delay4.out Out4 as Connection12
                        connect Delay5.in In11 as Connection9
                        connect Delay5.out Out5 as Connection1
                        connect Delay6.in In12 as Connection10
                        connect Delay6.out Out6 as Connection5
                    }
                    [
                        position = 9000, 8632
                        size = 128, 120
                    ]

                    component Subsystem "adjust range for PWM" {
                        layout = dynamic
                        component gen_gain Gain6 {
                            gain = "2"
                        }
                        [
                            position = 8272, 8648
                        ]

                        component gen_gain Gain4 {
                            gain = "2"
                        }
                        [
                            position = 8272, 8536
                        ]

                        component gen_limiter Limit12 {
                            lower_limit = "0"
                            upper_limit = "0.5"
                        }
                        [
                            position = 7896, 8648
                        ]

                        component gen_gain Gain2 {
                            gain = "2"
                        }
                        [
                            position = 8272, 8416
                        ]

                        component gen_limiter Limit8 {
                            lower_limit = "0.5"
                            upper_limit = "1"
                        }
                        [
                            position = 7720, 8480
                        ]

                        component gen_sum Sum4 {
                            signs = "-+"
                        }
                        [
                            position = 8136, 8472
                        ]

                        component gen_sum Sum5 {
                            signs = "-+"
                        }
                        [
                            position = 8136, 8592
                        ]

                        component gen_gain Gain3 {
                            gain = "2"
                        }
                        [
                            position = 8272, 8472
                        ]

                        component gen_gain Gain1 {
                            gain = "2"
                        }
                        [
                            position = 8272, 8360
                        ]

                        component gen_limiter Limit11 {
                            lower_limit = "0"
                            upper_limit = "0.5"
                        }
                        [
                            position = 7896, 8536
                        ]

                        component gen_limiter Limit10 {
                            lower_limit = "0"
                            upper_limit = "0.5"
                        }
                        [
                            position = 7896, 8416
                        ]

                        component gen_limiter Limit9 {
                            lower_limit = "0.5"
                            upper_limit = "1"
                        }
                        [
                            position = 7720, 8600
                        ]

                        component gen_sum Sum2 {
                            signs = "-+"
                        }
                        [
                            position = 8136, 8360
                        ]

                        component src_constant Constant {
                            execution_rate = "inherit"
                            value = "0.5"
                        }
                        [
                            position = 8136, 8280
                            scale = -1, 1
                        ]

                        component gen_gain Gain5 {
                            gain = "2"
                        }
                        [
                            position = 8272, 8592
                        ]

                        component gen_limiter Limit7 {
                            lower_limit = "0.5"
                            upper_limit = "1"
                        }
                        [
                            position = 7720, 8368
                        ]

                        port in_a2 {
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7568, 8416
                        ]

                        port in_b2 {
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7568, 8536
                        ]

                        port in_c2 {
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7568, 8648
                        ]

                        port out_a1 {
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 8360
                        ]

                        port out_b1 {
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 8472
                        ]

                        port out_c1 {
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 8592
                        ]

                        port out_a2 {
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 8416
                        ]

                        port out_b2 {
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 8536
                        ]

                        port out_c2 {
                            position = right:6
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 8648
                        ]

                        port in_a1 {
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7568, 8368
                        ]

                        port in_b1 {
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7568, 8480
                        ]

                        port in_c1 {
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7568, 8600
                        ]

                        junction Junction3 sp
                        [
                            position = 8016, 8464
                        ]

                        junction Junction4 sp
                        [
                            position = 8016, 8352
                        ]

                        comment Comment4 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bring the upper</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">halfs down to</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">(0-0.5)</p></body></html> ENDCOMMENT 
                        [
                            position = 8080, 8192
                        ]

                        comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">signals between</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">(0-1)</p></body></html> ENDCOMMENT 
                        [
                            position = 7536, 8296
                        ]

                        comment Comment2 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">limit upper half</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">between</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">(0.5-1)</p></body></html> ENDCOMMENT 
                        [
                            position = 7688, 8280
                        ]

                        comment Comment3 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Gain so upper halfs</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">and lower halfs are</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">between (0,1)</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Now each half can be</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">compared to the</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">modulator carrier,</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">which is between</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">(0,1)</p></body></html> ENDCOMMENT 
                        [
                            position = 8256, 8128
                        ]

                        comment Comment6 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">limit lower half</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">between</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">(0-0.5)</p></body></html> ENDCOMMENT 
                        [
                            position = 7856, 8288
                        ]

                        connect Constant.out Junction4 as Connection119
                        connect Gain1.out out_a1 as Connection141
                        connect Gain2.out out_a2 as Connection143
                        connect Gain3.out out_b1 as Connection145
                        connect Gain4.out out_b2 as Connection147
                        connect Gain5.out out_c1 as Connection149
                        connect Gain6.out out_c2 as Connection151
                        connect Junction3 Sum5.in as Connection112
                        connect Junction4 Junction3 as Connection118
                        connect Limit10.out Gain2.in as Connection142
                        connect Limit11.out Gain4.in as Connection146
                        connect Limit12.out Gain6.in as Connection150
                        connect Limit7.out Sum2.in1 as Connection131
                        connect Limit7.in in_a1 as Connection121
                        connect Limit8.out Sum4.in1 as Connection132
                        connect Limit9.out Sum5.in1 as Connection133
                        connect Sum2.out Gain1.in as Connection140
                        connect Sum2.in Junction4 as Connection117
                        connect Sum4.out Gain3.in as Connection144
                        connect Sum4.in Junction3 as Connection91
                        connect Sum5.out Gain5.in as Connection148
                        connect in_a2 Limit10.in as Connection126
                        connect in_b1 Limit8.in as Connection122
                        connect in_b2 Limit11.in as Connection128
                        connect in_c1 Limit9.in as Connection124
                        connect in_c2 Limit12.in as Connection130
                    }
                    [
                        position = 8776, 8632
                        size = 136, 112
                    ]

                    port u_a {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8488
                        rotation = right
                    ]

                    port u_b {
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7672, 8520
                        rotation = right
                    ]

                    port u_c {
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7648, 8560
                        rotation = right
                    ]

                    port Vdc {
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7448, 8968
                    ]

                    port Vdc_half {
                        position = left:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7872, 9056
                        rotation = left
                    ]

                    port "a high" {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9096, 8392
                        rotation = left
                    ]

                    port "a low" {
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9128, 8424
                        rotation = left
                    ]

                    port "b high" {
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9160, 8456
                        rotation = left
                    ]

                    port "b low" {
                        position = right:4
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9160, 8944
                        rotation = right
                    ]

                    port "c high" {
                        position = right:5
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9128, 8904
                        rotation = right
                    ]

                    port "c low" {
                        position = right:6
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9096, 8864
                        rotation = right
                    ]

                    port sign_ic_a {
                        position = left:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8312, 8824
                        rotation = left
                    ]

                    port sign_ic_b {
                        position = left:7
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8336, 8792
                        rotation = left
                    ]

                    port sign_ic_c {
                        position = left:8
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8368, 8760
                        rotation = left
                    ]

                    junction Junction2 sp
                    [
                        position = 9128, 8544
                    ]

                    junction Junction5 sp
                    [
                        position = 9128, 8768
                    ]

                    junction Junction73 sp
                    [
                        position = 7696, 8968
                    ]

                    junction Junction74 sp
                    [
                        position = 9160, 8728
                    ]

                    junction Junction75 sp
                    [
                        position = 9096, 8808
                    ]

                    junction Junction76 sp
                    [
                        position = 9160, 8584
                    ]

                    junction Junction77 sp
                    [
                        position = 9096, 8504
                    ]

                    comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">1 sample transport delay, simulating DSP behavior</p></body></html> ENDCOMMENT 
                    [
                        position = 8680, 8504
                    ]

                    connect Junction2 "Transport delay.Out2" as Connection2607
                    connect Junction2 "a low" as Connection1834
                    connect Junction5 "Transport delay.Out5" as Connection2602
                    connect Junction5 "c high" as Connection1843
                    connect Junction73 Normalization2.in as Connection2515
                    connect Junction74 "b low" as Connection2616
                    connect Junction75 dc_down.in as Connection2620
                    connect Junction76 "b high" as Connection2624
                    connect Junction77 da_up.in as Connection2628
                    connect "Method 2 (DC balancing control).u_a" Saturation.out_a as Connection2592
                    connect "Method 2 (DC balancing control).u_b" Saturation.out_b as Connection2593
                    connect "Method 2 (DC balancing control).u_c" Saturation.out_c as Connection2594
                    connect "Method 2 (DC balancing control).vag_s1_l" "adjust range for PWM.in_a1" as Connection2596
                    connect "Method 2 (DC balancing control).vag_s2_l" "adjust range for PWM.in_a2" as Connection2597
                    connect "Method 2 (DC balancing control).vbg_s2_l" "adjust range for PWM.in_b2" as Connection2599
                    connect "Method 2 (DC balancing control).vbg_s1_l" "adjust range for PWM.in_b1" as Connection2598
                    connect "Method 2 (DC balancing control).vcg_s2_l" "adjust range for PWM.in_c2" as Connection2601
                    connect "Method 2 (DC balancing control).vcg_s1_l" "adjust range for PWM.in_c1" as Connection2600
                    connect "Method 2 (DC balancing control).dc_error" "midpoint DC error.out" as Connection2595
                    connect Normalization.Vdc Junction73 as Connection2516
                    connect Normalization.out_c "Triplen Harm Zero seq injection.in_c" as Connection2510
                    connect Normalization.out_b "Triplen Harm Zero seq injection.in_b" as Connection2509
                    connect Normalization.out_a "Triplen Harm Zero seq injection.in_a" as Connection2508
                    connect Normalization2.out "midpoint DC error.in1" as Connection2296
                    connect Saturation.in_a "add offset.out_a" as Connection2531
                    connect "Transport delay.Out4" Junction74 as Connection2617
                    connect "Transport delay.Out6" Junction75 as Connection2621
                    connect "Transport delay.Out3" Junction76 as Connection2625
                    connect "Transport delay.Out1" Junction77 as Connection2629
                    connect Vdc_half Normalization2.in1 as Connection2304
                    connect "a high" Junction77 as Connection2627
                    connect "add offset.out_b" Saturation.in_b as Connection2532
                    connect "add offset.out_c" Saturation.in_c as Connection2533
                    connect "add offset.in_b" "Triplen Harm Zero seq injection.out_b" as Connection2503
                    connect "add offset.in_c" "Triplen Harm Zero seq injection.out_c" as Connection2505
                    connect "add offset.in_a" "Triplen Harm Zero seq injection.out_a" as Connection2501
                    connect "adjust range for PWM.out_c1" "Transport delay.In11" as Connection2610
                    connect "adjust range for PWM.out_b1" "Transport delay.In9" as Connection2612
                    connect "adjust range for PWM.out_b2" "Transport delay.In10" as Connection2603
                    connect "adjust range for PWM.out_a1" "Transport delay.In7" as Connection2604
                    connect "adjust range for PWM.out_c2" "Transport delay.In12" as Connection2611
                    connect "adjust range for PWM.out_a2" "Transport delay.In8" as Connection2608
                    connect "c low" Junction75 as Connection2619
                    connect "cant be zero for normalization.out" Junction73 as Connection2514
                    connect "cant be zero for normalization.in" Vdc as Connection2327
                    connect da_down.in Junction2 as Connection1835
                    connect db_down.in Junction74 as Connection2615
                    connect db_up.in Junction76 as Connection2623
                    connect dc_up.in Junction5 as Connection1844
                    connect "midpoint reference.out" "midpoint DC error.in" as Connection2299
                    connect offset.out "add offset.offset" as Connection2506
                    connect sign_ic_a "Method 2 (DC balancing control).sign_ic_a" as Connection2565
                    connect sign_ic_b "Method 2 (DC balancing control).sign_ic_b" as Connection2566
                    connect sign_ic_c "Method 2 (DC balancing control).sign_ic_c" as Connection2567
                    connect u_a Normalization.in_a as Connection2511
                    connect u_b Normalization.in_b as Connection2512
                    connect u_c Normalization.in_c as Connection2513
                }
                [
                    position = 8016, 7624
                    size = 88, 312
                ]

                component "core/Current Measurement" Ig_a {
                    execution_rate = "inherit"
                    sig_output = "True"
                }
                [
                    position = 9592, 7992
                    size = 64, 32
                ]

                component "core/Voltage Measurement" vc_a {
                    execution_rate = "inherit"
                    sig_output = "True"
                }
                [
                    position = 8848, 8040
                    rotation = right
                    size = 64, 32
                ]

                component "core/Current Measurement" Ic_b {
                    execution_rate = "inherit"
                    sig_output = "True"
                }
                [
                    position = 8512, 8088
                    size = 64, 32
                ]

                component "core/abc to alfa-beta-gamma" "abc to alfa-beta-gamma1" {
                }
                [
                    position = 9184, 8616
                    size = 48, 88
                ]

                component "core/Voltage Measurement" V_dc_1 {
                    execution_rate = "inherit"
                    sig_output = "True"
                }
                [
                    position = 7880, 8136
                    rotation = right
                    size = 64, 32
                ]

                component "core/Three Phase Core Coupling" "Core Coupling 2" {
                }
                [
                    position = 8744, 8088
                    scale = -1, 1
                    size = 12, 256
                ]

                component "core/Current Measurement" Ic_c {
                    execution_rate = "inherit"
                    sig_output = "True"
                }
                [
                    position = 8512, 8184
                    size = 64, 32
                ]

                component "core/Voltage Measurement" vg_b {
                    execution_rate = "inherit"
                    sig_output = "True"
                }
                [
                    position = 10304, 8312
                    rotation = right
                    size = 64, 32
                ]

                component Subsystem "Startup and Shutdown Ramping" {
                    layout = dynamic
                    component gen_c_function "Inverter startup" {
                        global_variables = "real enable_ant;real count;real ramp;real Fs;"
                        in_terminal_dimensions = "inherit"
                        in_terminal_dimensions_str = "enable inherit"
                        in_terminal_labels = "False;"
                        in_terminal_properties = "real enable;"
                        init_fnc = "/*Begin code section*/
count=0;
ramp=0;
enable_ant=0;
Fs = 1/execution_rate;

operating=0;
inv_enable = 0;
ref_control = 0;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit;inherit;inherit"
                        out_terminal_dimensions_str = "ref_control inherit;inv_enable inherit;operating inherit"
                        out_terminal_labels = "False;False;False;"
                        out_terminal_properties = "real ref_control;inherit inv_enable;inherit operating;"
                        output_fnc = "/*Begin code section*/
if (enable==1) inv_enable=1;

if (enable-enable_ant > 0) // 0 -> 1 enable
{
    ramp = 1.;
    count = 0.;
} else if (enable-enable_ant < 0) // 1 -> 0 desable
{
    count = t*Fs;
    ramp = -1.;
}

count = count + ramp;

if (count>t*Fs) {
    count = t*Fs;
    ramp = 0;
}
if (count<0.) {
    count = 0.;
    ramp = 0;
    inv_enable = 0;
}

enable_ant = enable;
ref_control = count/(t*Fs);

if (ramp == 0 && inv_enable==1) operating = 1;
else    operating = 0;
/*End code section*/"
                        parameters = "real t;"
                    }
                    [
                        position = 8192, 8192
                        size = 0, 0
                    ]

                    port enable {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8072, 8192
                    ]

                    port "switching enable" {
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8352, 8192
                    ]

                    port "ref control" {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8280, 8120
                        rotation = left
                    ]

                    port operating {
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8280, 8288
                        rotation = right
                    ]

                    connect "Inverter startup.enable" enable as Connection2
                    connect "Inverter startup.operating" operating as Connection14
                    connect "Inverter startup.inv_enable" "switching enable" as Connection4
                    connect "ref control" "Inverter startup.ref_control" as Connection13

                    t = "1"

                    mask {
                        description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">Controls switching start and stop, issuing a control signal to ramp up (start up) and down (shutdown) the set-points in the converter.</span></p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">Also zeroes setpoints in case of a ride-through momentary cessation</span></p></body></html>"

                        t {
                            label = "Ramp time"
                            widget = edit
                            type = generic
                            default_value = "0.1"
                            unit = "s"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE
                    }
                }
                [
                    position = 9304, 7552
                    size = 136, 88
                ]

                component Subsystem "LCL filter model" {
                    layout = dynamic
                    component gen_bus_join "plant model states" {
                        inputs = "6"
                    }
                    [
                        position = 8320, 8192
                    ]

                    component gen_c_function "Plant model" {
                        global_variables = "real ic_al_m;real ic_be_m;real vc_al_m;real vc_be_m;real ig_al_m;real ig_be_m;real Ad11;real Ad12;real Ad13;real Ad21;real Ad22;real Ad23;real Ad31;real Ad32;real Ad33;real Bd11;real Bd21;real Bd31;real Fd11;real Fd21;real Fd31;real u_al;real u_be;"
                        in_terminal_dimensions = "inherit;inherit;inherit;inherit"
                        in_terminal_dimensions_str = "u_al_m inherit;u_be_m inherit;vr_al inherit;vr_be inherit"
                        in_terminal_labels = "False;False;False;False;"
                        in_terminal_properties = "inherit u_al_m;inherit u_be_m;inherit vr_al;inherit vr_be;"
                        init_fnc = "/*Begin code section*/
// Plant model when inverter off
/*
Ad11 = 0.84238926;
Ad12 = -1.78506869;
Ad13 = 0.15761074;

Ad21 = 0.14875572;
Ad22 = 0.68477853;
Ad23 = -0.14875572;

Ad31 = 0.15761074;
Ad32 = 1.78506869;
Ad33 = 0.84238926;

Bd11 = 1.89253434;
Bd21 = 0.15761074;
Bd31 = 0.10746566;

Fd11 = -0.10746566;
Fd21 =  0.15761074;
Fd31 = -1.89253434;

/// With r1 = 0.1

Ad11 = 0.6809047;
Ad12 = -1.61311001;
Ad13 = 0.14755423;

Ad21 = 0.13442583;
Ad22 = 0.69466147;
Ad23 = -0.14918126;

Ad31 = 0.14755423;
Ad32 = 1.79017509;
Ad33 = 0.8422157;

Bd11 = 1.71541067;
Bd21 = 0.14755423;
Bd31 = 0.10230066;

Fd11 = -0.10230066;
Fd21 =  0.1577843;
Fd31 = -1.89247575;
*/
// Fs = 5000 Hz

Ad11 = 0.46892163;
Ad12 = -2.44475341;
Ad13 = 0.53107837;

Ad21 = 0.20372945;
Ad22 = -0.06215674;
Ad23 = -0.20372945;

Ad31 = 0.53107837;
Ad32 = 2.44475341;
Ad33 = 0.46892163;

Bd11 = 3.22237671;
Bd21 = 0.53107837;
Bd31 = 0.77762329;

Fd11 = -0.77762329;
Fd21 =  0.53107837;
Fd31 = -3.22237671;

/*// Fs = 5000 Hz, r1=0.1

Ad11 = 2.68559801e-01;
Ad12 = -1.95479164e+00;
Ad13 = 4.65388646e-01;

Ad21 = 1.62899303e-01;
Ad22 = -1.34968111e-03;
Ad23 = -2.09438168e-01;

Ad31 = 4.65388646e-01;
Ad32 = 2.51325801e+00;
Ad33 = 4.64038964e-01;

Bd11 = 2.66051554;
Bd21 = 0.46538865;
Bd31 = 0.7057239;

Fd11 = -0.7057239;
Fd21 =  0.53596104;
Fd31 = -3.21898191;
*/
ic_al_m=0.;
vc_be_m=0.;

vc_al_m=0.;
ic_be_m=0.;

ig_al_m=0.;
ig_be_m=0.;

u_al_m=0;
u_be_m=0;

ig_al=0.;
ig_be=0.;

u_al=0.;
u_be=0.;
/*End code section*/"
                        no_feed_inputs = "[\'\', \'u_al_m\', \'u_be_m\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit"
                        out_terminal_dimensions_str = "ig_al inherit;ig_be inherit;ic_al inherit;ic_be inherit;vc_al inherit;vc_be inherit"
                        out_terminal_labels = "False;False;False;False;False;False;"
                        out_terminal_properties = "inherit ig_al;inherit ig_be;inherit ic_al;inherit ic_be;inherit vc_al;inherit vc_be;"
                        output_fnc = "/*Begin code section*/
ic_al = ic_al_m;
ic_be = ic_be_m;

vc_al = vc_al_m;
vc_be = vc_be_m;

ig_al = ig_al_m;
ig_be = ig_be_m;

u_al = u_al_m;
u_be = u_be_m;

ic_al_m = Ad11*ic_al + Ad12* vc_al + Ad13* ig_al + Bd11* u_al + Fd11*vr_al;
vc_al_m = Ad21*ic_al + Ad22* vc_al + Ad23* ig_al + Bd21* u_al + Fd21*vr_al;
ig_al_m = Ad31*ic_al + Ad32* vc_al + Ad33* ig_al + Bd31* u_al + Fd31*vr_al;

ic_be_m = Ad11*ic_be + Ad12* vc_be + Ad13* ig_be + Bd11* u_be + Fd11*vr_be;
vc_be_m = Ad21*ic_be + Ad22* vc_be + Ad23* ig_be + Bd21* u_be + Fd21*vr_be;
ig_be_m = Ad31*ic_be + Ad32* vc_be + Ad33* ig_be + Bd31* u_be + Fd31*vr_be;
/*End code section*/"
                    }
                    [
                        position = 8080, 8192
                        size = 48, 112
                    ]

                    port states {
                        position = top:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8464, 8192
                    ]

                    port u_alpha {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8016, 8096
                        rotation = right
                    ]

                    port u_beta {
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7936, 8128
                        rotation = right
                    ]

                    port vg_alpha {
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7936, 8272
                        rotation = left
                    ]

                    port vg_beta {
                        position = right:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8016, 8312
                        rotation = left
                    ]

                    comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Outputs</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">0 - ig_alpha</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">1 - ig_beta</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">2 - ic_alpha</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">3 - ic_beta</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">4 - vc_alpha</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">5 - vc_beta</p></body></html> ENDCOMMENT 
                    [
                        position = 8136, 7984
                    ]

                    connect "Plant model.ic_al" "plant model states.in2" as Connection2152
                    connect "Plant model.vc_al" "plant model states.in4" as Connection2154
                    connect "Plant model.vc_be" "plant model states.in5" as Connection2155
                    connect "Plant model.ig_be" "plant model states.in1" as Connection2142
                    connect "Plant model.ic_be" "plant model states.in3" as Connection2153
                    connect "Plant model.ig_al" "plant model states.in" as Connection2141
                    connect "Plant model.u_al_m" u_alpha as Connection2150
                    connect "Plant model.u_be_m" u_beta as Connection2149
                    connect "Plant model.vr_al" vg_alpha as Connection2147
                    connect "Plant model.vr_be" vg_beta as Connection2148
                    connect "plant model states.out" states as Connection2151

                    mask {
                        description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">This is a model of the LCL filter to be used for proper control initialization even if converter is disabled.</span></p></body></html>"

                        CODE define_icon
                            mdl.set_component_icon_image(item_handle, "lcl_filter.svg")
                        ENDCODE

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE
                    }
                }
                [
                    position = 9456, 9312
                    size = 384, 216
                ]

                component Subsystem Inverter {
                    layout = dynamic
                    component "core/NPC Leg" LegC {
                        PESB_Optimization = "False"
                        carr_ph_offset = "carr_ph_offset"
                        carrier_freq = "carrier_freq"
                        ctrl_src = "Internal modulator"
                        d_time = "d_time"
                        execution_rate = "execution_rate"
                        ref_sig_min_max = "ref_sig_min_max"
                    }
                    [
                        position = 8360, 8688
                        size = 127, 256
                    ]

                    component "core/NPC Leg" LegB {
                        PESB_Optimization = "False"
                        carr_ph_offset = "carr_ph_offset"
                        carrier_freq = "carrier_freq"
                        ctrl_src = "Internal modulator"
                        d_time = "d_time"
                        execution_rate = "execution_rate"
                        ref_sig_min_max = "ref_sig_min_max"
                    }
                    [
                        position = 8360, 8240
                        size = 127, 256
                    ]

                    component "core/NPC Leg" LegA {
                        PESB_Optimization = "False"
                        carr_ph_offset = "carr_ph_offset"
                        carrier_freq = "carrier_freq"
                        ctrl_src = "Internal modulator"
                        d_time = "d_time"
                        execution_rate = "execution_rate"
                        ref_sig_min_max = "ref_sig_min_max"
                    }
                    [
                        position = 8360, 7800
                        size = 127, 256
                    ]

                    port DC+ {
                        position = left:1
                        kind = pe
                    }
                    [
                        position = 7928, 7704
                    ]

                    port DCn {
                        position = left:2
                        kind = pe
                    }
                    [
                        position = 7928, 8240
                    ]

                    port DC- {
                        position = left:3
                        kind = pe
                    }
                    [
                        position = 7920, 8784
                    ]

                    port A {
                        position = right:1
                        kind = pe
                    }
                    [
                        position = 8592, 7800
                        rotation = down
                    ]

                    port B {
                        position = right:2
                        kind = pe
                    }
                    [
                        position = 8592, 8240
                        rotation = down
                    ]

                    port C {
                        position = right:3
                        kind = pe
                    }
                    [
                        position = 8584, 8688
                        rotation = down
                    ]

                    port Enable {
                        position = top:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7944, 7584
                    ]

                    port InA_up {
                        position = top:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8288, 7576
                    ]

                    port InA_low {
                        position = top:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8288, 7528
                    ]

                    port InB_up {
                        position = top:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8272, 8024
                    ]

                    port InB_low {
                        position = top:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8272, 7976
                    ]

                    port InC_up {
                        position = top:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8272, 8472
                    ]

                    port InC_low {
                        position = top:7
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8272, 8424
                    ]

                    tag Goto1 {
                        value = "Enable"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8064, 7584
                        size = 0, 0
                    ]

                    tag From1 {
                        value = "Enable"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8280, 7632
                        size = 0, 0
                    ]

                    tag From3 {
                        value = "Enable"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8264, 8528
                        size = 0, 0
                    ]

                    tag From2 {
                        value = "Enable"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8264, 8080
                        size = 0, 0
                    ]

                    junction Junction10 pe
                    [
                        position = 7984, 8144
                    ]

                    junction Junction12 pe
                    [
                        position = 8176, 8784
                    ]

                    junction Junction13 pe
                    [
                        position = 8080, 8240
                    ]

                    junction Junction14 pe
                    [
                        position = 8176, 8336
                    ]

                    junction Junction15 pe
                    [
                        position = 8080, 8240
                    ]

                    junction Junction16 pe
                    [
                        position = 7984, 7704
                    ]

                    connect B LegB.OUT as Connection67
                    connect DC+ Junction16 as Connection115
                    connect DCn Junction13 as Connection106
                    connect From1 LegA.En as Connection120
                    connect From2 LegB.En as Connection97
                    connect From3 LegC.En as Connection98
                    connect Goto1 Enable as Connection91
                    connect InA_low LegA.In2 as Connection126
                    connect InA_up LegA.In1 as Connection125
                    connect InB_low LegB.In2 as Connection128
                    connect InB_up LegB.In1 as Connection127
                    connect InC_low LegC.In2 as Connection130
                    connect InC_up LegC.In1 as Connection129
                    connect Junction12 DC- as Connection87
                    connect Junction12 Junction14 as Connection109
                    connect Junction14 LegB.DC- as Connection110
                    connect Junction15 Junction13 as Connection113
                    connect Junction16 Junction10 as Connection116
                    connect LegA.OUT A as Connection108
                    connect LegA.DC- Junction14 as Connection111
                    connect LegA.DCn Junction15 as Connection114
                    connect LegA.DC+ Junction16 as Connection117
                    connect LegB.DC+ Junction10 as Connection80
                    connect LegB.DCn Junction13 as Connection101
                    connect LegC.OUT C as Connection79
                    connect LegC.DC+ Junction10 as Connection82
                    connect LegC.DC- Junction12 as Connection88
                    connect LegC.DCn Junction15 as Connection112

                    mask {
                        description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">Switches and diodes are modeled as ideal switches.</span></p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">This block can only be controlled through internal modulator. Modulator inputs per phase are subdivided in up and low reference signals.</span></p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">Up reference signal controls switches 1 and 3 of the respective leg. Low reference signal controls switches 2 and 4 of the respective leg.</span></p><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">weight = 3</span></p></body></html>"

                        carrier_freq {
                            label = "Carrier frequency"
                            widget = edit
                            type = generic
                            default_value = "10000"
                            unit = "Hz"
                            group = "General"
                        }

                        carr_ph_offset {
                            label = "Carrier phase offset"
                            widget = edit
                            type = generic
                            default_value = "0.0"
                            unit = "deg"
                            group = "General"
                        }

                        d_time {
                            label = "Dead time period"
                            widget = edit
                            type = generic
                            default_value = "0"
                            unit = "s"
                            group = "General"
                        }

                        ref_sig_min_max {
                            label = "Reference signal [min, max]"
                            widget = edit
                            type = generic
                            default_value = "[0.0,1.0]"
                            group = "General"
                        }

                        execution_rate {
                            label = "Execution rate"
                            widget = edit
                            type = generic
                            default_value = "inherit"
                            group = "General"
                        }

                        CODE define_icon
                            mdl.set_component_icon_image(item_handle, "pesb_3l4q3ph_npc.svg")
                        ENDCODE

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE
                    }
                }
                [
                    position = 8248, 8088
                    size = 128, 240
                ]

                port A {
                    position = 144.0, -96.0
                    kind = pe
                }
                [
                    position = 10744, 7992
                    rotation = down
                ]

                port B {
                    position = 144.0, -0.1
                    kind = pe
                }
                [
                    position = 10744, 8088
                    rotation = down
                ]

                port C {
                    position = 144.0, 96.0
                    kind = pe
                }
                [
                    position = 10744, 8184
                    rotation = down
                ]

                port N {
                    position = -0.1, 120.0
                    kind = pe
                }
                [
                    position = 10752, 8424
                    rotation = down
                ]

                port Input {
                    position = -112.0, -120.0
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 6136, 6640
                ]

                port Output {
                    position = 112.0, -120.0
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 6784, 6624
                    rotation = left
                ]

                port DCpos {
                    position = -144.0, -96.0
                    kind = pe
                }
                [
                    position = 7656, 7992
                    rotation = down
                    scale = -1, 1
                ]

                port DCneg {
                    position = -144.0, 96.0
                    kind = pe
                }
                [
                    position = 7656, 8184
                    rotation = down
                    scale = -1, 1
                ]

                tag Goto31 {
                    value = "VRT inv enable"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8904, 7400
                    hide_name = True
                    size = 104, 20
                ]

                tag From56 {
                    value = "VRT ref enable"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6576, 7352
                    hide_name = True
                    size = 97, 20
                ]

                tag From60 {
                    value = "vpc_rms"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8504, 7400
                    hide_name = True
                    size = 0, 0
                ]

                tag From69 {
                    value = "Vdc_1"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6536, 6784
                    hide_name = True
                    size = 0, 0
                ]

                tag From27 {
                    value = "f"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8296, 8552
                    hide_name = True
                    size = 0, 0
                ]

                tag From76 {
                    value = "VRT inv enable"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6568, 6904
                    hide_name = True
                    size = 120, 20
                ]

                tag From85 {
                    value = "P"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6536, 7120
                    hide_name = True
                    size = 0, 0
                ]

                tag Goto22 {
                    value = "ramping"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 9528, 7528
                    hide_name = True
                    size = 104, 20
                ]

                tag "to Controller6" {
                    value = "va_rms"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 10664, 8688
                    hide_name = True
                    size = 0, 0
                ]

                tag From77 {
                    value = "VRT ref enable"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6568, 6928
                    hide_name = True
                    size = 120, 20
                ]

                tag From31 {
                    value = "Ic_b"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7736, 7784
                    hide_name = True
                    size = 0, 0
                ]

                tag "to Controller9" {
                    value = "P"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 10664, 8784
                    hide_name = True
                    size = 0, 0
                ]

                tag From71 {
                    value = "contactor"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6560, 6832
                    hide_name = True
                    size = 105, 20
                ]

                tag From8 {
                    value = "Ic_a"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7736, 7744
                    hide_name = True
                    size = 58, 20
                ]

                tag Goto14 {
                    value = "f"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8632, 8440
                    hide_name = True
                    size = 32, 20
                ]

                tag "to Controller8" {
                    value = "vb_rms"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 10664, 8720
                    hide_name = True
                    size = 0, 0
                ]

                tag Goto6 {
                    value = "vg_c"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 10472, 8360
                    hide_name = True
                    size = 0, 0
                ]

                tag Goto23 {
                    value = "VRT ref enable"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8904, 7352
                    hide_name = True
                    size = 104, 20
                ]

                tag From80 {
                    value = "vb_rms"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6536, 6976
                    hide_name = True
                    size = 0, 0
                ]

                tag "to Controller7" {
                    value = "vc_rms"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 10664, 8752
                    hide_name = True
                    size = 0, 0
                ]

                tag From15 {
                    value = "vc_c"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 9024, 8888
                    hide_name = True
                    size = 0, 0
                ]

                tag From62 {
                    value = "u_al"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 9128, 9224
                    hide_name = True
                    size = 0, 0
                ]

                tag From3 {
                    value = "vg_c"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 10328, 8800
                    hide_name = True
                    size = 0, 0
                ]

                tag "to Controller4" {
                    value = "vp_al"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8728, 8552
                    hide_name = True
                    size = 0, 0
                ]

                tag From14 {
                    value = "vc_b"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 9024, 8864
                    hide_name = True
                    size = 0, 0
                ]

                tag Goto9 {
                    value = "Ic_b"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8624, 8048
                    hide_name = True
                    size = 0, 0
                ]

                tag Goto12 {
                    value = "vc_b"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8968, 8136
                    hide_name = True
                    size = 0, 0
                ]

                tag Goto19 {
                    value = "Vdc_1"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7840, 8216
                    scale = -1, 1
                    size = 0, 0
                ]

                tag From48 {
                    value = "enable-inv"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 9664, 9000
                    hide_name = True
                    scale = -1, 1
                    size = 96, 20
                ]

                tag From75 {
                    value = "FRT inv enable"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6568, 6880
                    hide_name = True
                    size = 120, 20
                ]

                tag From11 {
                    value = "Ic_a"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 9024, 8712
                    hide_name = True
                    size = 0, 0
                ]

                tag From78 {
                    value = "vc_rms"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6536, 7000
                    hide_name = True
                    size = 0, 0
                ]

                tag Goto32 {
                    value = "FRT inv enable"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8904, 7576
                    hide_name = True
                    size = 104, 20
                ]

                tag From79 {
                    value = "va_rms"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6536, 6952
                    hide_name = True
                    size = 0, 0
                ]

                tag From49 {
                    value = "Vdc"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 5776, 7512
                    hide_name = True
                    size = 0, 0
                ]

                tag From18 {
                    value = "vg_c"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8456, 8464
                    hide_name = True
                    size = 0, 0
                ]

                tag From42 {
                    value = "Vdc_1"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7776, 7640
                    hide_name = True
                    size = 0, 0
                ]

                tag Goto11 {
                    value = "vc_a"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8920, 8040
                    hide_name = True
                    size = 0, 0
                ]

                tag From47 {
                    value = "vg_b"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 10008, 9320
                    hide_name = True
                    scale = -1, 1
                    size = 0, 0
                ]

                tag From44 {
                    value = "precharge_contactor"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 9816, 7856
                    hide_name = True
                    size = 138, 20
                ]

                tag From53 {
                    value = "enable-inv"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 5784, 7536
                    rotation = down
                    hide_name = True
                    scale = -1, 1
                    size = 96, 20
                ]

                tag "to Controller10" {
                    value = "Q"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 10664, 8816
                    hide_name = True
                    size = 0, 0
                ]

                tag From16 {
                    value = "vc_a"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 9024, 8840
                    hide_name = True
                    size = 0, 0
                ]

                tag From36 {
                    value = "vg_b"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8296, 8616
                    hide_name = True
                    size = 0, 0
                ]

                tag From37 {
                    value = "vg_c"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8296, 8648
                    hide_name = True
                    size = 0, 0
                ]

                tag From46 {
                    value = "vg_c"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 10008, 9344
                    hide_name = True
                    scale = -1, 1
                    size = 0, 0
                ]

                tag From41 {
                    value = "Vdc"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7776, 7608
                    hide_name = True
                    size = 0, 0
                ]

                tag From38 {
                    value = "vg_a"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8296, 8584
                    hide_name = True
                    size = 0, 0
                ]

                tag From72 {
                    value = "operating"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6576, 6856
                    hide_name = True
                    size = 138, 20
                ]

                tag Goto20 {
                    value = "precharge_contactor"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 9184, 7456
                    hide_name = True
                    size = 143, 20
                ]

                tag "to Controller15" {
                    value = "pf"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 10664, 8880
                    hide_name = True
                    size = 0, 0
                ]

                tag From59 {
                    value = "vpb_rms"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8504, 7376
                    hide_name = True
                    size = 0, 0
                ]

                tag From26 {
                    value = "f"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6960, 7416
                    hide_name = True
                    size = 0, 0
                ]

                tag From13 {
                    value = "Ic_c"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 9024, 8760
                    hide_name = True
                    size = 0, 0
                ]

                tag From55 {
                    value = "ramping"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6576, 7376
                    hide_name = True
                    size = 97, 20
                ]

                tag "to Controller5" {
                    value = "vp_be"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8728, 8576
                    hide_name = True
                    size = 0, 0
                ]

                tag From57 {
                    value = "vp_al"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6544, 7576
                    hide_name = True
                    size = 0, 0
                ]

                tag "to Controller12" {
                    value = "ia_rms"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 10664, 8912
                    hide_name = True
                    size = 0, 0
                ]

                tag From12 {
                    value = "Ic_b"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 9024, 8736
                    hide_name = True
                    size = 0, 0
                ]

                tag From6 {
                    value = "Ig_c"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 10328, 8992
                    hide_name = True
                    size = 0, 0
                ]

                tag From83 {
                    value = "ib_rms"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6536, 7048
                    hide_name = True
                    size = 0, 0
                ]

                tag From82 {
                    value = "ia_rms"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6536, 7024
                    hide_name = True
                    size = 0, 0
                ]

                tag From61 {
                    value = "vp_be"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6544, 7608
                    hide_name = True
                    size = 0, 0
                ]

                tag Goto8 {
                    value = "Ic_c"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8624, 8144
                    hide_name = True
                    size = 0, 0
                ]

                tag "to Controller11" {
                    value = "ib_rms"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 10664, 8944
                    hide_name = True
                    size = 0, 0
                ]

                tag From43 {
                    value = "contactor"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 9824, 7904
                    hide_name = True
                    size = 105, 20
                ]

                tag From63 {
                    value = "u_be"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 9128, 9400
                    hide_name = True
                    size = 0, 0
                ]

                tag From64 {
                    value = "IN_pfref"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6168, 7584
                    hide_name = True
                    size = 0, 0
                ]

                tag From5 {
                    value = "Ig_b"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 10328, 8928
                    hide_name = True
                    size = 0, 0
                ]

                tag From45 {
                    value = "vg_a"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 10008, 9296
                    hide_name = True
                    scale = -1, 1
                    size = 0, 0
                ]

                tag From84 {
                    value = "Q"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6536, 7144
                    hide_name = True
                    size = 0, 0
                ]

                tag From28 {
                    value = "states"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6936, 7336
                    hide_name = True
                    size = 97, 20
                ]

                tag From65 {
                    value = "IN_qsign"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6168, 7608
                    hide_name = True
                    size = 0, 0
                ]

                tag From58 {
                    value = "vpa_rms"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8504, 7352
                    hide_name = True
                    size = 0, 0
                ]

                tag Goto27 {
                    value = "IN_prioritytype"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6304, 6784
                    hide_name = True
                    size = 98, 20
                ]

                tag "to Controller2" {
                    value = "vpb_rms"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8728, 8624
                    hide_name = True
                    size = 0, 0
                ]

                tag From9 {
                    value = "Ig_b"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 9024, 8616
                    hide_name = True
                    size = 0, 0
                ]

                tag From4 {
                    value = "Ig_a"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 10328, 8864
                    hide_name = True
                    size = 0, 0
                ]

                tag Goto18 {
                    value = "Vdc"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7856, 8056
                    hide_name = True
                    size = 0, 0
                ]

                tag From88 {
                    value = "f"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6536, 7096
                    hide_name = True
                    size = 0, 0
                ]

                tag From87 {
                    value = "pf"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6536, 7192
                    hide_name = True
                    size = 0, 0
                ]

                tag From19 {
                    value = "vg_b"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8456, 8440
                    hide_name = True
                    size = 0, 0
                ]

                tag "to Controller14" {
                    value = "S"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 10664, 8848
                    hide_name = True
                    size = 0, 0
                ]

                tag From66 {
                    value = "IN_enable"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 9072, 7576
                    hide_name = True
                    size = 0, 0
                ]

                tag Goto5 {
                    value = "vg_b"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 10472, 8312
                    hide_name = True
                    size = 0, 0
                ]

                tag Goto26 {
                    value = "IN_enable"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6296, 6760
                    hide_name = True
                    size = 77, 20
                ]

                tag From81 {
                    value = "ic_rms"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6536, 7072
                    hide_name = True
                    size = 0, 0
                ]

                tag From67 {
                    value = "IN_prioritytype"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6576, 7328
                    hide_name = True
                    size = 93, 20
                ]

                tag Goto25 {
                    value = "u_be"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7384, 7528
                    hide_name = True
                    size = 0, 0
                ]

                tag From17 {
                    value = "vg_a"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8456, 8416
                    hide_name = True
                    size = 0, 0
                ]

                tag Goto30 {
                    value = "operating"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 9528, 7576
                    hide_name = True
                    size = 104, 20
                ]

                tag From70 {
                    value = "precharge_contactor"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6576, 6808
                    hide_name = True
                    size = 138, 20
                ]

                tag "to Controller13" {
                    value = "ic_rms"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 10664, 8976
                    hide_name = True
                    size = 0, 0
                ]

                tag Goto13 {
                    value = "vc_c"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 9024, 8232
                    hide_name = True
                    size = 0, 0
                ]

                tag Goto24 {
                    value = "u_al"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7384, 7496
                    hide_name = True
                    size = 0, 0
                ]

                tag "to Controller3" {
                    value = "vpc_rms"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8728, 8648
                    hide_name = True
                    size = 0, 0
                ]

                tag Goto3 {
                    value = "Ig_c"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 9672, 8152
                    hide_name = True
                    size = 0, 0
                ]

                tag From86 {
                    value = "S"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6536, 7168
                    hide_name = True
                    size = 0, 0
                ]

                tag From40 {
                    value = "f"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8504, 7552
                    hide_name = True
                    size = 0, 0
                ]

                tag From39 {
                    value = "Ig_c"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 9024, 8640
                    hide_name = True
                    size = 0, 0
                ]

                tag Goto7 {
                    value = "Ic_a"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8624, 7944
                    hide_name = True
                    size = 0, 0
                ]

                tag "to Controller1" {
                    value = "vpa_rms"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8728, 8600
                    hide_name = True
                    size = 0, 0
                ]

                tag Goto17 {
                    value = "enable-inv"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 9528, 7552
                    hide_name = True
                    size = 104, 20
                ]

                tag "to current controller" {
                    value = "states"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 9744, 9072
                    size = 0, 0
                ]

                tag From68 {
                    value = "Vdc"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6536, 6760
                    hide_name = True
                    size = 0, 0
                ]

                tag From7 {
                    value = "Ic_c"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7736, 7824
                    hide_name = True
                    size = 0, 0
                ]

                tag Goto2 {
                    value = "Ig_b"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 9672, 8056
                    hide_name = True
                    size = 0, 0
                ]

                tag Goto4 {
                    value = "vg_a"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 10472, 8264
                    hide_name = True
                    size = 0, 0
                ]

                tag From10 {
                    value = "Ig_a"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 9024, 8592
                    hide_name = True
                    size = 0, 0
                ]

                tag From1 {
                    value = "vg_a"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 10328, 8672
                    hide_name = True
                    size = 0, 0
                ]

                tag From30 {
                    value = "enable-inv"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8112, 7888
                    hide_name = True
                    size = 96, 20
                ]

                tag From2 {
                    value = "vg_b"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 10328, 8736
                    hide_name = True
                    size = 0, 0
                ]

                tag Goto28 {
                    value = "IN_pfref"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6296, 6808
                    hide_name = True
                    size = 79, 20
                ]

                tag Goto1 {
                    value = "Ig_a"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 9672, 7960
                    hide_name = True
                    size = 0, 0
                ]

                tag Goto21 {
                    value = "contactor"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 9184, 7480
                    hide_name = True
                    size = 143, 20
                ]

                tag Goto29 {
                    value = "IN_qsign"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6296, 6832
                    hide_name = True
                    size = 83, 20
                ]

                tag From54 {
                    value = "enable-inv"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 5888, 7336
                    hide_name = True
                    size = 96, 20
                ]

                junction Junction8 pe
                [
                    position = 9128, 8320
                ]

                junction Junction27 pe
                [
                    position = 9064, 8320
                ]

                junction Junction28 pe
                [
                    position = 8952, 8320
                ]

                junction Junction29 pe
                [
                    position = 8896, 8320
                ]

                junction Junction37 pe
                [
                    position = 10304, 8424
                ]

                junction Junction157 pe
                [
                    position = 8952, 8184
                ]

                junction Junction158 pe
                [
                    position = 8896, 8088
                ]

                junction Junction159 pe
                [
                    position = 8848, 7992
                ]

                junction Junction160 pe
                [
                    position = 8032, 8088
                ]

                junction Junction164 pe
                [
                    position = 7880, 8184
                ]

                junction Junction169 pe
                [
                    position = 7944, 8088
                ]

                junction Junction170 pe
                [
                    position = 7944, 8088
                ]

                junction Junction171 pe
                [
                    position = 7944, 8184
                ]

                junction Junction177 pe
                [
                    position = 8416, 7992
                ]

                junction Junction255 pe
                [
                    position = 8416, 8088
                ]

                junction Junction257 pe
                [
                    position = 8032, 8184
                ]

                junction Junction258 pe
                [
                    position = 8032, 8088
                ]

                junction Junction289 sp
                [
                    position = 9928, 7856
                ]

                junction Junction290 sp
                [
                    position = 9944, 7904
                ]

                junction Junction293 sp
                [
                    position = 9456, 9136
                ]

                junction Junction294 sp
                [
                    position = 9456, 9008
                ]

                junction Junction321 sp
                [
                    position = 6240, 7512
                ]

                junction Junction322 sp
                [
                    position = 7328, 7512
                ]

                junction Junction323 sp
                [
                    position = 7328, 7544
                ]

                junction Junction326 sp
                [
                    position = 6280, 7512
                ]

                junction Junction327 sp
                [
                    position = 6392, 7544
                ]

                junction Junction329 sp
                [
                    position = 6936, 7608
                ]

                junction Junction330 pe
                [
                    position = 8032, 7992
                ]

                junction Junction334 pe
                [
                    position = 10352, 8424
                ]

                junction Junction336 sp
                [
                    position = 8816, 7400
                ]

                junction Junction337 sp
                [
                    position = 8816, 7576
                ]

                junction Junction339 pe
                [
                    position = 7776, 8184
                ]

                junction Junction340 pe
                [
                    position = 7944, 7992
                ]

                junction Junction341 pe
                [
                    position = 7776, 7992
                ]

                junction Junction342 pe
                [
                    position = 10592, 7992
                ]

                junction Junction343 pe
                [
                    position = 10624, 8088
                ]

                junction Junction344 pe
                [
                    position = 10656, 8184
                ]

                junction Junction345 pe
                [
                    position = 10624, 8424
                ]

                junction Junction346 sp
                [
                    position = 6936, 7512
                ]

                junction Junction347 pe
                [
                    position = 9864, 7992
                ]

                junction Junction348 pe
                [
                    position = 9840, 8088
                ]

                junction Junction349 pe
                [
                    position = 9816, 8184
                ]

                junction Junction350 pe
                [
                    position = 10256, 7992
                ]

                junction Junction351 pe
                [
                    position = 10304, 8088
                ]

                junction Junction352 pe
                [
                    position = 10352, 8184
                ]

                junction Junction353 pe
                [
                    position = 10056, 7992
                ]

                junction Junction354 pe
                [
                    position = 10080, 8088
                ]

                junction Junction355 pe
                [
                    position = 10104, 8184
                ]

                junction Junction356 pe
                [
                    position = 9064, 7992
                ]

                junction Junction357 pe
                [
                    position = 9128, 8088
                ]

                junction Junction358 pe
                [
                    position = 9192, 8184
                ]

                junction Junction359 sp
                [
                    position = 6064, 7512
                ]

                junction Junction360 sp
                [
                    position = 5888, 7432
                ]

                comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Protection, startup and shutdown</p></body></html> ENDCOMMENT 
                [
                    position = 8984, 7360
                ]

                comment Comment2 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">When converter is off, controller drives the model so states are properly initialized when turning on.</p></body></html> ENDCOMMENT 
                [
                    position = 9048, 9448
                ]

                comment Comment3 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">If neutral is not connected, resistive neutral provides it and measurements are as if we had used only line voltages</p></body></html> ENDCOMMENT 
                [
                    position = 10232, 8472
                ]

                comment Comment4 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Only for SCADA measurements</p></body></html> ENDCOMMENT 
                [
                    position = 10368, 9064
                ]

                connect B Junction343 as Connection2613
                connect "Bus Split1.out2" "State feedback Resonant Current Controller.ic_al" as Connection2013
                connect "Bus Split1.out5" "State feedback Resonant Current Controller.vc_be" as Connection2010
                connect "Bus Split1.out" "State feedback Resonant Current Controller.ig_al" as Connection2015
                connect "Bus Split1.out3" "State feedback Resonant Current Controller.ic_be" as Connection2012
                connect "Bus Split1.out1" "State feedback Resonant Current Controller.ig_be" as Connection2014
                connect "Bus Split1.out4" "State feedback Resonant Current Controller.vc_al" as Connection2011
                connect "Bus Split2.in" Input as Connection2524
                connect C3.n_node Junction27 as Connection145
                connect C4.p_node Junction357 as Connection2671
                connect C4.n_node Junction8 as Connection34
                connect C5.p_node Junction358 as Connection2674
                connect C6.p_node Junction330 as Connection2499
                connect C7.p_node Junction160 as Connection884
                connect "Constant power factor.P" Junction321 as Connection2445
                connect "Constant power factor.Q" Junction327 as Connection2474
                connect Constant1.out "alfa-beta-gamma to abc1.y" as Connection2228
                connect "Core Coupling 2.c_in" Junction157 as Connection864
                connect "Core Coupling 2.b_in" Junction158 as Connection867
                connect "Core Coupling 2.a_in" Junction159 as Connection870
                connect "Core Coupling 2.a_out" L1.n_node as Connection2216
                connect "Core Coupling 2.b_out" L2.n_node as Connection2217
                connect "Core Coupling 2.c_out" L3.n_node as Connection2218
                connect "DC Voltage Controller.P" Junction359 as Connection2678
                connect "DC Voltage Controller.Vdc ref" Junction360 as Connection2682
                connect DCneg Junction339 as Connection2597
                connect DCpos Junction341 as Connection2603
                connect "Frequency ride-through.Enable inverter" Junction337 as Connection2551
                connect From1 "PCC Measurements.va" as Connection2566
                connect From10 "abc to alfa-beta-gamma1.a" as Connection2242
                connect From12 "abc to alfa-beta-gamma2.b" as Connection2246
                connect From13 "abc to alfa-beta-gamma2.c" as Connection2247
                connect From16 "abc to alfa-beta-gamma3.a" as Connection2252
                connect From17 PLL.Va as Connection2560
                connect From18 PLL.Vc as Connection2562
                connect From19 PLL.Vb as Connection2563
                connect From26 "State feedback Resonant Current Controller.f" as Connection2484
                connect From27 "Fundamental positive sequence estimator.f" as Connection1861
                connect From28 "Bus Split1.in" as Connection2460
                connect From3 "PCC Measurements.vc" as Connection2580
                connect From31 Sign2.in as Connection2111
                connect From36 "Fundamental positive sequence estimator.vb" as Connection1860
                connect From37 "Fundamental positive sequence estimator.vc" as Connection2052
                connect From38 "Fundamental positive sequence estimator.va" as Connection1859
                connect From39 "abc to alfa-beta-gamma1.c" as Connection2244
                connect From4 "PCC Measurements.ia" as Connection2579
                connect From40 "Frequency ride-through.value" as Connection2483
                connect From43 Junction290 as Connection1942
                connect From44 Junction289 as Connection1939
                connect From45 "abc to alfa-beta-gamma4.a" as Connection2259
                connect From48 "Signal switch1.in2" as Connection2158
                connect From49 "DC Voltage Controller.Vdc" as Connection2281
                connect From5 "PCC Measurements.ib" as Connection2572
                connect From53 "DC Voltage Controller.Enable" as Connection2283
                connect From54 MPPT.Enable as Connection2285
                connect From55 Product1.in as Connection2428
                connect From56 Product1.in1 as Connection2429
                connect From57 "Open-loop Power Controller.v_al" as Connection2447
                connect From58 "Voltage ride-through.va rms" as Connection2437
                connect From59 "Voltage ride-through.vb rms" as Connection2436
                connect From6 "PCC Measurements.ic" as Connection2578
                connect From60 "Voltage ride-through.vc rms" as Connection2435
                connect From61 "Open-loop Power Controller.v_be" as Connection2448
                connect From62 "LCL filter model.u_alpha" as Connection2477
                connect From63 "LCL filter model.u_beta" as Connection2478
                connect From64 "Constant power factor.Pf ref (abs)" as Connection2525
                connect From65 "Constant power factor.Q sign" as Connection2526
                connect From66 "Logical operator2.in1" as Connection2527
                connect From67 "Open-loop Power Controller.Type" as Connection2528
                connect From68 "Bus Join1.in" as Connection2534
                connect From69 "Bus Join1.in1" as Connection2535
                connect From7 Sign3.in as Connection2113
                connect From70 "Bus Join1.in2" as Connection2536
                connect From71 "Bus Join1.in3" as Connection2537
                connect From72 "Bus Join1.in4" as Connection2539
                connect From75 "Bus Join1.in5" as Connection2554
                connect From76 "Bus Join1.in6" as Connection2555
                connect From77 "Bus Join1.in7" as Connection2556
                connect From78 "Bus Join1.in10" as Connection2559
                connect From79 "Bus Join1.in8" as Connection2557
                connect From8 Sign1.in as Connection2109
                connect From80 "Bus Join1.in9" as Connection2558
                connect From81 "Bus Join1.in13" as Connection2584
                connect From82 "Bus Join1.in11" as Connection2582
                connect From83 "Bus Join1.in12" as Connection2583
                connect From84 "Bus Join1.in16" as Connection2586
                connect From85 "Bus Join1.in15" as Connection2585
                connect From86 "Bus Join1.in17" as Connection2587
                connect From87 "Bus Join1.in18" as Connection2588
                connect From88 "Bus Join1.in14" as Connection2589
                connect From9 "abc to alfa-beta-gamma1.b" as Connection2243
                connect Goto14 PLL.f as Connection2561
                connect Goto17 "Startup and Shutdown Ramping.switching enable" as Connection2060
                connect Goto18 V_dc.out as Connection1819
                connect Goto19 V_dc_1.out as Connection1820
                connect Goto22 "Startup and Shutdown Ramping.ref control" as Connection2426
                connect Goto23 "Voltage ride-through.Enable references" as Connection2427
                connect Goto24 Junction322 as Connection2453
                connect Goto25 Junction323 as Connection2464
                connect Goto26 "Bus Split2.out" as Connection2529
                connect Goto27 "Bus Split2.out1" as Connection2530
                connect Goto28 "Bus Split2.out2" as Connection2531
                connect Goto29 "Bus Split2.out3" as Connection2532
                connect Goto30 "Startup and Shutdown Ramping.operating" as Connection2538
                connect Goto31 Junction336 as Connection2550
                connect Goto32 Junction337 as Connection2553
                connect "Grid connection sequencing.Pre-charge contactor" Goto20 as Connection1937
                connect "Grid connection sequencing.Main contactor" Goto21 as Connection1938
                connect "Grid connection sequencing.RT Enable" "Logical operator1.out" as Connection1887
                connect "Grid connection sequencing.Inverter enable" "Logical operator2.in" as Connection2166
                connect Ic_a.out Goto7 as Connection1766
                connect Ic_a.n_node L1.p_node as Connection72
                connect Ic_b.out Goto9 as Connection1767
                connect Ic_b.n_node L2.p_node as Connection73
                connect Ic_c.out Goto8 as Connection1768
                connect Ic_c.p_node Inverter.C as Connection2068
                connect Ic_c.n_node L3.p_node as Connection74
                connect Ig_a.out Goto1 as Connection1772
                connect Ig_a.n_node Junction347 as Connection2640
                connect Ig_b.out Goto2 as Connection1773
                connect Ig_b.n_node Junction348 as Connection2643
                connect Ig_c.out Goto3 as Connection1774
                connect Ig_c.n_node Junction349 as Connection2646
                connect Inverter.Enable From30 as Connection1714
                connect Inverter.A Junction177 as Connection2066
                connect Inverter.B Junction255 as Connection1686
                connect Inverter.DC- Junction257 as Connection1692
                connect Inverter.DCn Junction258 as Connection1695
                connect Inverter.DC+ Junction330 as Connection2501
                connect Junction159 Junction356 as Connection2668
                [
                    position = 0, 0
                ]
                connect Junction160 C6.n_node as Connection883
                connect Junction169 Junction258 as Connection1693
                connect Junction169 V_dc_1.p_node as Connection2070
                connect Junction170 Junction169 as Connection921
                connect Junction171 Junction164 as Connection924
                connect Junction171 Junction257 as Connection1690
                connect Junction177 Ic_a.p_node as Connection1316
                connect Junction255 Ic_b.p_node as Connection2067
                connect Junction255 Vab.n_node as Connection1685
                connect Junction257 C7.n_node as Connection1691
                connect Junction258 Junction160 as Connection1694
                connect Junction27 Junction8 as Connection146
                connect Junction28 Junction27 as Connection149
                connect Junction289 S2.ctrl_in as Connection1940
                connect Junction29 Junction28 as Connection152
                connect Junction290 S1.ctrl_in as Connection1943
                connect Junction293 "LCL filter model.states" as Connection2174
                connect Junction294 "bus join.out" as Connection2177
                connect Junction322 "alfa-beta-gamma to abc1.al" as Connection2458
                connect Junction323 "alfa-beta-gamma to abc1.be" as Connection2463
                connect Junction326 Junction321 as Connection2472
                connect Junction327 "Open-loop Power Controller.Qref" as Connection2475
                connect Junction329 "State feedback Resonant Current Controller.ig_be_ref" as Connection2492
                connect Junction334 Junction37 as Connection2516
                connect Junction336 "Voltage ride-through.Enable inverter" as Connection2549
                connect Junction337 "Logical operator1.in1" as Connection2552
                connect Junction339 Junction164 as Connection2596
                connect Junction340 Junction330 as Connection2601
                connect Junction341 Junction340 as Connection2604
                connect Junction342 A as Connection2611
                connect Junction344 C as Connection2617
                connect Junction345 Junction334 as Connection2620
                connect Junction346 "Open-loop Power Controller.ref_al" as Connection2624
                connect Junction347 S1.a_in as Connection2639
                [
                    position = 0, 0
                ]
                connect Junction348 R2.p_node as Connection2642
                [
                    position = 0, 0
                ]
                connect Junction349 R3.p_node as Connection2645
                [
                    position = 0, 0
                ]
                connect Junction350 Junction342 as Connection2648
                [
                    position = 0, 0
                ]
                connect Junction351 Junction343 as Connection2651
                [
                    position = 0, 0
                ]
                connect Junction352 Junction344 as Connection2654
                [
                    position = 0, 0
                ]
                connect Junction353 Junction350 as Connection2657
                connect Junction354 Junction351 as Connection2660
                connect Junction355 Junction352 as Connection2663
                connect Junction356 C3.p_node as Connection2669
                [
                    position = 0, 0
                ]
                connect Junction357 Junction158 as Connection2672
                [
                    position = 0, 0
                ]
                connect Junction358 Junction157 as Connection2675
                [
                    position = 0, 0
                ]
                connect Junction359 Junction321 as Connection2679
                [
                    position = 0, 0
                ]
                connect Junction360 "Probe Vdcref.in" as Connection2683
                [
                    position = 0, 0
                ]
                connect Junction8 C5.n_node as Connection33
                connect L4.n_node Ig_a.p_node as Connection2635
                connect L4.p_node Junction356 as Connection2670
                connect L5.n_node Ig_b.p_node as Connection2636
                connect L5.p_node Junction357 as Connection2673
                connect L6.n_node Ig_c.p_node as Connection2637
                connect L6.p_node Junction358 as Connection2676
                connect "Logical operator1.in" Junction336 as Connection2548
                connect "Logical operator2.out" "Startup and Shutdown Ramping.enable" as Connection2167
                connect "MPPT.PV Power" Junction359 as Connection2680
                connect MPPT.Vdc Junction360 as Connection2684
                connect "Modulation and DC balancing.Vdc" From41 as Connection2123
                connect "Modulation and DC balancing.Vdc_half" From42 as Connection2124
                connect "Modulation and DC balancing.c high" Inverter.InC_up as Connection2121
                connect "Modulation and DC balancing.a low" Inverter.InA_low as Connection2118
                connect "Modulation and DC balancing.b high" Inverter.InB_up as Connection2119
                connect "Modulation and DC balancing.a high" Inverter.InA_up as Connection2117
                connect "Modulation and DC balancing.c low" Inverter.InC_low as Connection2122
                connect "Modulation and DC balancing.b low" Inverter.InB_low as Connection2120
                connect "Modulation and DC balancing.sign_ic_a" Sign1.out as Connection2125
                connect "Modulation and DC balancing.sign_ic_b" Sign2.out as Connection2126
                connect "Modulation and DC balancing.sign_ic_c" Sign3.out as Connection2127
                connect N Junction345 as Connection2619
                connect "Open-loop Power Controller.Pref" Junction326 as Connection2471
                connect "Open-loop Power Controller.ref_be" Junction329 as Connection2493
                connect Output "Bus Join1.out" as Connection2533
                connect "PCC Measurements.vb" From2 as Connection2581
                connect "Probe Pref.in" Junction326 as Connection2473
                connect "Probe Qref.in" Junction327 as Connection2476
                connect "Probe iref_al.in" Junction346 as Connection2625
                connect "Probe iref_be.in" Junction329 as Connection2491
                connect Product1.out "Open-loop Power Controller.control" as Connection2485
                connect R1.p_node Junction347 as Connection2638
                connect R1.n_node S2.a_in as Connection749
                connect R2.n_node S2.b_in as Connection750
                connect R3.n_node S2.c_in as Connection751
                connect R4.n_node Junction170 as Connection920
                connect R4.p_node Junction340 as Connection2600
                connect R5.p_node Junction170 as Connection922
                connect R5.n_node Junction171 as Connection925
                connect "Resistive Neutral1.A" Junction342 as Connection2612
                connect "Resistive Neutral1.B" Junction343 as Connection2615
                connect "Resistive Neutral1.C" Junction344 as Connection2618
                connect "Resistive Neutral1.N" Junction345 as Connection2621
                connect S1.b_in Junction348 as Connection2641
                connect S1.c_in Junction349 as Connection2644
                connect S1.a_out Junction353 as Connection2656
                connect S1.b_out Junction354 as Connection2659
                connect S1.c_out Junction355 as Connection2662
                connect S2.a_out Junction353 as Connection2658
                connect S2.b_out Junction354 as Connection2661
                connect S2.c_out Junction355 as Connection2664
                connect "Signal switch1.in1" Junction293 as Connection2173
                connect "Signal switch1.in" Junction294 as Connection2176
                connect "State feedback Resonant Current Controller.u_al" Junction322 as Connection2451
                connect "State feedback Resonant Current Controller.u_be" Junction323 as Connection2462
                connect "State feedback Resonant Current Controller.ig_al_ref" Junction346 as Connection2623
                connect Termination10.in "Frequency ride-through.Enable references" as Connection2266
                connect Termination11.in "Open-loop Power Controller.Plim" as Connection2494
                connect Termination12.in "Open-loop Power Controller.Qlim" as Connection2495
                connect Termination6.in "abc to alfa-beta-gamma1.y" as Connection2255
                connect Termination7.in "abc to alfa-beta-gamma2.y" as Connection2256
                connect Termination8.in "abc to alfa-beta-gamma3.y" as Connection2257
                connect Termination9.in "abc to alfa-beta-gamma4.y" as Connection2258
                connect V_dc.n_node Junction339 as Connection2595
                connect V_dc.p_node Junction341 as Connection2605
                connect V_dc_1.n_node Junction164 as Connection896
                connect Vab.p_node Junction177 as Connection1315
                connect "abc to alfa-beta-gamma1.al" "bus join.in" as Connection2240
                connect "abc to alfa-beta-gamma1.be" "bus join.in1" as Connection2241
                connect "abc to alfa-beta-gamma2.a" From11 as Connection2245
                connect "abc to alfa-beta-gamma2.be" "bus join.in3" as Connection2249
                connect "abc to alfa-beta-gamma2.al" "bus join.in2" as Connection2248
                connect "abc to alfa-beta-gamma3.b" From14 as Connection2253
                connect "abc to alfa-beta-gamma3.c" From15 as Connection2254
                connect "abc to alfa-beta-gamma3.be" "bus join.in5" as Connection2251
                connect "abc to alfa-beta-gamma3.al" "bus join.in4" as Connection2250
                connect "abc to alfa-beta-gamma4.c" From46 as Connection2261
                connect "abc to alfa-beta-gamma4.b" From47 as Connection2260
                connect "abc to alfa-beta-gamma4.be" "LCL filter model.vg_beta" as Connection2263
                connect "abc to alfa-beta-gamma4.al" "LCL filter model.vg_alpha" as Connection2262
                connect "alfa-beta-gamma to abc1.c" "Modulation and DC balancing.u_c" as Connection2231
                connect "alfa-beta-gamma to abc1.b" "Modulation and DC balancing.u_b" as Connection2230
                connect "alfa-beta-gamma to abc1.a" "Modulation and DC balancing.u_a" as Connection2229
                connect contactor.in Junction290 as Connection1944
                connect "model states.in" Junction293 as Connection2175
                connect precharge_contactor.in Junction289 as Connection1941
                connect "real states.in" Junction294 as Connection2178
                connect "to Controller1" "Fundamental positive sequence estimator.vpa_rms" as Connection2430
                connect "to Controller10" "PCC Measurements.Q" as Connection2575
                connect "to Controller11" "PCC Measurements.ib_rms" as Connection2573
                connect "to Controller12" "PCC Measurements.ia_rms" as Connection2574
                connect "to Controller13" "PCC Measurements.ic_rms" as Connection2571
                connect "to Controller14" "PCC Measurements.S" as Connection2577
                connect "to Controller15" "PCC Measurements.pf" as Connection2576
                connect "to Controller2" "Fundamental positive sequence estimator.vpb_rms" as Connection2431
                connect "to Controller3" "Fundamental positive sequence estimator.vpc_rms" as Connection2432
                connect "to Controller4" "Fundamental positive sequence estimator.vp_al" as Connection2433
                connect "to Controller5" "Fundamental positive sequence estimator.vp_be" as Connection2434
                connect "to Controller6" "PCC Measurements.va_rms" as Connection2568
                connect "to Controller7" "PCC Measurements.vc_rms" as Connection2564
                connect "to Controller8" "PCC Measurements.vb_rms" as Connection2569
                connect "to Controller9" "PCC Measurements.P" as Connection2570
                connect "to current controller" "Signal switch1.out" as Connection2155
                connect vc_a.out Goto11 as Connection1769
                connect vc_a.p_node Junction159 as Connection868
                connect vc_a.n_node Junction29 as Connection153
                connect vc_b.out Goto12 as Connection1770
                connect vc_b.p_node Junction158 as Connection865
                connect vc_b.n_node Junction29 as Connection151
                connect vc_c.out Goto13 as Connection1771
                connect vc_c.p_node Junction157 as Connection862
                connect vc_c.n_node Junction28 as Connection148
                connect vg_a.out Goto4 as Connection1775
                connect vg_a.p_node Junction350 as Connection2647
                connect vg_a.n_node Junction37 as Connection962
                connect vg_b.out Goto5 as Connection1776
                connect vg_b.p_node Junction351 as Connection2650
                connect vg_b.n_node Junction37 as Connection182
                connect vg_c.out Goto6 as Connection1777
                connect vg_c.n_node Junction334 as Connection2515
                connect vg_c.p_node Junction352 as Connection2653

                mask {
                    description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">Low voltage 3-level NPC Solar Inverter</span></p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">Rated DC Voltage: 1000 V</span></p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">Rated AC Power: 1 MVA @ 480 Vrms L-L</span></p><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">Inputs: 0-Enable; 1-Saturation Priority; 2-Power factor reference (absolute); 3-Reactive power direction</span></p><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">Outputs: 0-DC voltage; 1-DC midpoint voltage; 2-Precharging contactor; 3-main contactor; 4-operating; 5-frequency ride through inverter enable; 6-voltage ride through inverter enable; 7-voltage ride through references enable; 8-Va rms; 9- Vb rms; 10-Vc rms; 11- Ia rms; 12-Ib rms; 13-Ic rms; 14-Frequency; 15-Active Power; 16-Reactive power; 17-Apparent power; 18-Power factor</span></p><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">For more details on inputs and outpus, check component help page.</span></p><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">Developed in partnership with Federal University of Santa Maria, Brazil.</span></p></body></html>"
                    help_file = "npc_pv_inverter.html"

                    fnom {
                        label = "Frequency"
                        widget = edit
                        type = generic
                        default_value = "60"
                        unit = "Hz"
                    }

                    vnom {
                        label = "Voltage"
                        widget = edit
                        type = generic
                        default_value = "277"
                        unit = "Vrms L-N"
                    }

                    CODE define_icon
                        mdl.set_component_icon_image(item_handle, "converter_cabinet.svg")
                    ENDCODE

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE
                }
            }
            [
                position = 7592, 8216
                size = 288, 239
            ]

            component "core/Three Phase Two Winding Transformer" "TRF 2-5" {
                L1 = "1e-4"
                L2 = "1e-3"
                Lm = "412.478948173"
                Poc1 = "6000.0"
                Psc1 = "59999.9999999"
                R1 = "1e-4"
                R2 = "1e-2"
                Rm = "1e5"
                Sn = "1.5e6"
                V1 = "480"
                V2 = "4160.0"
                clock_number = "1"
                current_vals_SI = "[0.544364482709772, 226.8185344619514]"
                current_vals_pu = "[0.0024000000000010055, 0.9999999999982144]"
                f = "60.0"
                flux_vals_SI = "[56.134722312395574, 71.10398159570106]"
                flux_vals_pu = "[1.2000000000000948, 1.5199999999999776]"
                input = "SI"
                ioc1 = "0.111803398875"
                l1 = "0.03"
                l2 = "0.0300000000001"
                lm = "2000.00000001"
                r1 = "0.005"
                r2 = "0.00499999999999"
                rm = "1000.0"
                usc1 = "6.0827625303"
                winding_1_connection = "D"
            }
            [
                position = 7896, 8216
                size = 126, 256
            ]

            component Subsystem in {
                layout = dynamic
                component src_scada_input "NPC enable" {
                    execution_rate = "inherit"
                    unit = ""
                }
                [
                    position = 8096, 8104
                ]

                component src_scada_input Qsign {
                    execution_rate = "inherit"
                    unit = ""
                }
                [
                    position = 8160, 8208
                ]

                component src_scada_input "pf ref" {
                    execution_rate = "inherit"
                    unit = ""
                }
                [
                    position = 8096, 8176
                ]

                component src_scada_input Priority {
                    execution_rate = "inherit"
                    unit = ""
                }
                [
                    position = 8160, 8136
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "4"
                }
                [
                    position = 8288, 8280
                    rotation = right
                    hide_name = True
                ]

                port Out1 {
                    position = bottom:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8288, 8352
                    rotation = right
                    hide_name = True
                ]

                connect "Bus Join1.out" Out1 as Connection2537
                connect "Bus Join1.in3" Qsign.out as Connection2536
                connect "NPC enable.out" "Bus Join1.in" as Connection2533
                connect Priority.out "Bus Join1.in1" as Connection2534
                connect "pf ref.out" "Bus Join1.in2" as Connection2535
            }
            [
                position = 7480, 8008
                size = 48, 48
            ]

            component Subsystem out {
                layout = dynamic
                component gen_bus_split "Bus Split1" {
                    outputs = "19"
                }
                [
                    position = 8032, 8480
                    rotation = left
                    hide_name = True
                ]

                component gen_probe Vdc_total {
                }
                [
                    position = 8240, 7904
                ]

                component gen_probe Vdc_half {
                }
                [
                    position = 8352, 7936
                ]

                component gen_digital_probe precharging_contactor {
                }
                [
                    position = 8240, 7968
                ]

                component gen_digital_probe main_contactor {
                }
                [
                    position = 8352, 7992
                ]

                component gen_digital_probe operating {
                }
                [
                    position = 8240, 8024
                ]

                component gen_digital_probe FRT_inv_enable {
                }
                [
                    position = 8352, 8048
                ]

                component gen_digital_probe VRT_inv_enable {
                }
                [
                    position = 8240, 8080
                ]

                component gen_digital_probe VRT_ref_enable {
                }
                [
                    position = 8352, 8104
                ]

                component gen_probe Va_rms {
                }
                [
                    position = 8240, 8128
                ]

                component gen_probe Vb_rms {
                }
                [
                    position = 8352, 8160
                ]

                component gen_probe Vc_rms {
                }
                [
                    position = 8240, 8184
                ]

                component gen_probe Ia_rms {
                }
                [
                    position = 8352, 8216
                ]

                component gen_probe Ib_rms {
                }
                [
                    position = 8240, 8240
                ]

                component gen_probe Ic_rms {
                }
                [
                    position = 8352, 8272
                ]

                component gen_probe f {
                }
                [
                    position = 8240, 8296
                ]

                component gen_probe P {
                }
                [
                    position = 8352, 8328
                ]

                component gen_probe Q {
                }
                [
                    position = 8240, 8352
                ]

                component gen_probe S {
                }
                [
                    position = 8352, 8384
                ]

                component gen_probe pf {
                }
                [
                    position = 8240, 8408
                ]

                port In1 {
                    position = bottom:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8032, 8552
                    rotation = left
                    hide_name = True
                ]

                connect "Bus Split1.in" In1 as Connection2578
                connect "Bus Split1.out5" FRT_inv_enable.in as Connection2575
                connect "Bus Split1.out11" Ia_rms.in as Connection2564
                connect "Bus Split1.out12" Ib_rms.in as Connection2565
                connect "Bus Split1.out13" Ic_rms.in as Connection2566
                connect "Bus Split1.out15" P.in as Connection2568
                connect "Bus Split1.out16" Q.in as Connection2569
                connect "Bus Split1.out17" S.in as Connection2570
                connect "Bus Split1.out6" VRT_inv_enable.in as Connection2576
                connect "Bus Split1.out7" VRT_ref_enable.in as Connection2577
                connect "Bus Split1.out8" Va_rms.in as Connection2561
                connect "Bus Split1.out9" Vb_rms.in as Connection2562
                connect "Bus Split1.out10" Vc_rms.in as Connection2563
                connect "Bus Split1.out1" Vdc_half.in as Connection2554
                connect "Bus Split1.out" Vdc_total.in as Connection2553
                connect "Bus Split1.out14" f.in as Connection2567
                connect "Bus Split1.out3" main_contactor.in as Connection2573
                connect "Bus Split1.out4" operating.in as Connection2574
                connect pf.in "Bus Split1.out18" as Connection2571
                connect precharging_contactor.in "Bus Split1.out2" as Connection2572
            }
            [
                position = 7704, 8008
                size = 48, 48
            ]

            component "core/Photovoltaic Panel" "Photovoltaic Panel 1" {
            }
            [
                position = 7192, 8208
                rotation = right
                size = 64, 64
            ]

            component "core/Current Measurement" Ipv {
            }
            [
                position = 7352, 8120
                size = 64, 32
            ]

            component "core/Voltage Measurement" Vpv {
                execution_rate = "inherit"
            }
            [
                position = 7304, 8208
                rotation = right
                size = 64, 32
            ]

            component "core/Three Phase Core Coupling" "Core Coupling 2" {
                C1 = "10e-06"
                R1 = "10"
                fixed_snb_i = "true"
                snb_type_i = "R1-C1"
            }
            [
                position = 8264, 8216
                scale = -1, 1
                size = 12, 256
            ]

            port A {
                position = right:1
                kind = pe
            }
            [
                position = 9560, 8336
                rotation = down
            ]

            port B {
                position = right:2
                kind = pe
            }
            [
                position = 9560, 8432
                rotation = down
            ]

            port C {
                position = right:3
                kind = pe
            }
            [
                position = 9560, 8528
                rotation = down
            ]

            junction Junction1 pe
            [
                position = 8992, 8632
            ]

            junction Junction2 pe
            [
                position = 9016, 8648
            ]

            junction Junction3 pe
            [
                position = 9040, 8664
            ]

            junction Junction4 pe
            [
                position = 7304, 8120
            ]

            junction Junction6 pe
            [
                position = 7304, 8312
            ]

            junction Junction7 pe
            [
                position = 8352, 8664
            ]

            junction Junction8 pe
            [
                position = 8368, 8648
            ]

            junction Junction9 pe
            [
                position = 8384, 8632
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt; font-weight:600;">Node 1 </span></p></body></html> ENDCOMMENT 
            [
                position = 7200, 8576
            ]

            comment Comment8 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt; font-weight:600;">Node 2 </span></p></body></html> ENDCOMMENT 
            [
                position = 7688, 8576
            ]

            comment Comment9 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt; font-weight:600;">Node 3 </span></p></body></html> ENDCOMMENT 
            [
                position = 8056, 8576
            ]

            comment Comment10 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt; font-weight:600;">Node 4 </span></p></body></html> ENDCOMMENT 
            [
                position = 8872, 8576
            ]

            connect "Node 1.B2" "OHL 1-2.b_in" as Connection77
            connect "Node 1.C2" "OHL 1-2.c_in" as Connection79
            connect "Node 1.A1" Vgrid.a_node as Connection75
            connect "Node 1.C1" Vgrid.c_node as Connection76
            connect "Node 2.B1" "OHL 1-2.b_out" as Connection81
            connect "Node 2.B2" "TRF 2-3.prm_2" as Connection83
            connect "Node 2.C2" "TRF 2-3.prm_3" as Connection84
            connect "Node 2.A2" "TRF 2-3.prm_1" as Connection85
            connect "Node 3.B1" "TRF 2-3.sec_2" as Connection86
            connect "Node 3.A1" "TRF 2-3.sec_1" as Connection87
            connect "Node 3.C1" "TRF 2-3.sec_3" as Connection88
            connect "OHL 1-2.a_in" "Node 1.A2" as Connection78
            connect "OHL 1-2.c_out" "Node 2.C1" as Connection80
            connect "OHL 1-2.a_out" "Node 2.A1" as Connection82
            connect Vgrid.b_node "Node 1.B1" as Connection74
            connect gnd1.node Vgrid.n_node as Connection73
            connect gnd2.node "TRF 2-3.n2" as Connection98
            connect "Node 3.A2" Protection.A+ as Connection103
            connect "Node 3.C2" Protection.C+ as Connection101
            connect "Node 3.B2" Protection.B+ as Connection102
            connect "OHL 3-4.c_out" "Grid Fault1.C1" as Connection105
            connect "Grid Fault1.C2" "Node 4.C1" as Connection106
            connect "OHL 3-4.b_out" "Grid Fault1.B1" as Connection107
            connect "Grid Fault1.B2" "Node 4.B1" as Connection108
            connect "Node 4.A1" "Grid Fault1.A2" as Connection109
            connect "Grid Fault1.A1" "OHL 3-4.a_out" as Connection110
            connect gnd3.node "Grid Fault1.GND" as Connection111
            connect "Node 4.A2" Junction1 as Connection189
            connect Junction1 "Load RL.P1" as Connection190
            [
                breakpoints = 9056, 8632; 9056, 8632; 9056, 8632
            ]
            connect "Load RL.P2" Junction2 as Connection192
            [
                breakpoints = 9072, 8648; 9072, 8648
            ]
            connect Junction2 "Node 4.B2" as Connection193
            connect "Node 4.C2" Junction3 as Connection195
            connect Junction3 "Load RL.P3" as Connection196
            [
                breakpoints = 9088, 8664
            ]
            connect "TRF 2-4.prm_3" "Core Coupling 1.c_out" as Connection197
            connect "Core Coupling 1.c_in" Junction3 as Connection198
            connect "TRF 2-4.prm_2" "Core Coupling 1.b_out" as Connection199
            connect "Core Coupling 1.b_in" Junction2 as Connection200
            connect "TRF 2-4.prm_1" "Core Coupling 1.a_out" as Connection201
            connect "Core Coupling 1.a_in" Junction1 as Connection202
            connect "TRF 2-4.sec_1" A as Connection203
            connect B "TRF 2-4.sec_2" as Connection204
            connect "TRF 2-4.sec_3" C as Connection205
            connect "NPC PV inverter1.C" "TRF 2-5.prm_3" as Connection206
            connect "NPC PV inverter1.B" "TRF 2-5.prm_2" as Connection207
            connect "TRF 2-5.prm_1" "NPC PV inverter1.A" as Connection208
            connect "NPC PV inverter1.Input" in.Out1 as Connection209
            connect "NPC PV inverter1.Output" out.In1 as Connection210
            connect Junction4 Ipv.p_node as Connection2548
            connect "Photovoltaic Panel 1.p_node" Junction4 as Connection2547
            connect Vpv.p_node Junction4 as Connection2549
            connect Ipv.n_node "NPC PV inverter1.DCpos" as Connection2600
            connect Vpv.n_node Junction6 as Connection2601
            connect "NPC PV inverter1.DCneg" Junction6 as Connection2603
            connect "OHL 3-4.c_in" Junction7 as Connection2604
            connect Junction7 Protection.C- as Connection2605
            connect "OHL 3-4.b_in" Junction8 as Connection2607
            connect Junction8 Protection.B- as Connection2608
            connect "OHL 3-4.a_in" Junction9 as Connection2610
            connect Junction9 Protection.A- as Connection2611
            connect "TRF 2-5.sec_1" "Core Coupling 2.a_out" as Connection2612
            connect "Core Coupling 2.a_in" Junction9 as Connection2613
            connect "TRF 2-5.sec_2" "Core Coupling 2.b_out" as Connection2614
            connect "Core Coupling 2.b_in" Junction8 as Connection2615
            connect "TRF 2-5.sec_3" "Core Coupling 2.c_out" as Connection2616
            connect "Core Coupling 2.c_in" Junction7 as Connection2617
            connect "Photovoltaic Panel 1.n_node" Junction6 as Connection2618
            [
                breakpoints = 7304, 8312; 7304, 8312; 7304, 8312; 7304, 8312
            ]

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Grid model</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Look under mask (Ctrl+Enter)</p></body></html>"

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE

                CODE define_icon
                    image(r"C:\00 Typhoon SVN\t_misc\00 Project management\90 Demos\0900 EATON-Typhoon Demo 5_26_2020\img\transmission_4.png")
                ENDCODE
            }
        }
        [
            position = 7480, 8144
            size = 224, 232
        ]

        component Subsystem Home {
            layout = dynamic
            component "core/Triple Pole Single Throw Contactor" S1 {
                enable_fb_out = "True"
                execution_rate = "Tbatt"
            }
            [
                position = 7696, 8208
                size = 64, 256
            ]

            component gen_digital_probe mcb_fb {
            }
            [
                position = 7640, 8048
                rotation = down
            ]

            component Subsystem "Natural Gas Genset" {
                layout = dynamic
                component gen_probe T_elec {
                }
                [
                    position = 7488, 8552
                ]

                component "core/Voltage Measurement" v_ca {
                    execution_rate = "Tfast"
                    sig_output = "True"
                }
                [
                    position = 8760, 8408
                    rotation = left
                    scale = -1, 1
                    size = 64, 32
                ]

                component "core/Current Measurement" Ia_gen {
                    execution_rate = "Tfast"
                    sig_output = "True"
                }
                [
                    position = 8304, 8264
                    size = 64, 32
                ]

                component gen_probe wt_gen {
                }
                [
                    position = 7488, 8616
                ]

                component gen_gain Gain2 {
                    gain = "-1.0"
                }
                [
                    position = 7832, 8056
                    hide_name = True
                ]

                component Subsystem controls {
                    layout = dynamic
                    component Subsystem gov {
                        layout = dynamic
                        component gen_c_function "state machine" {
                            global_variables = "int state;int error_msg_var;real starter_on_var;real speed_controller_on_var;int start_edge;int start_k1;int ignition_var;real settle_time;int enable_engine_monitoring;real kp_gov_var;real ki_gov_var;"
                            in_terminal_dimensions = "inherit;inherit;inherit;inherit;inherit"
                            in_terminal_dimensions_str = "start inherit;n_rpm inherit;reset inherit;stop inherit;engine_load_pu inherit"
                            in_terminal_labels = "[(\'start\', True), (\'n_rpm\', True), (\'reset\', True), (\'stop\', True), (\'engine_load_pu\', True)]"
                            in_terminal_properties = "int start;inherit n_rpm;inherit reset;int stop;inherit engine_load_pu;"
                            init_fnc = "/*Begin code section*/
state = 0;
error_msg_var = 0;
starter_on_var = 0;
speed_controller_on_var = 0;
ignition_var = 0;
kp_gov_var = 0.1;
ki_gov_var = 0.003;
settle_time = 0;
enable_engine_monitoring = 0;
/*End code section*/"
                            no_feed_inputs = "[\'\']"
                            no_feed_outputs = "[\'\']"
                            out_terminal_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit;inherit"
                            out_terminal_dimensions_str = "starter_on inherit;speed_control_enable inherit;error_msg inherit;state_out inherit;ignition inherit;kp_gov inherit;ki_gov inherit"
                            out_terminal_labels = "[(\'starter_on\', True), (\'speed_control_enable\', True), (\'error_msg\', True), (\'state_out\', True), (\'ignition\', True), (\'kp_gov\', True), (\'ki_gov\', True)]"
                            out_terminal_properties = "real starter_on;inherit speed_control_enable;inherit error_msg;inherit state_out;inherit ignition;inherit kp_gov;inherit ki_gov;"
                            output_fnc = "/*Begin code section*/
starter_on = starter_on_var;
speed_control_enable = speed_controller_on_var;
error_msg = error_msg_var;
state_out = state;
ignition = ignition_var;
kp_gov = kp_gov_var;
ki_gov = ki_gov_var;
/*End code section*/"
                            update_fnc = "/*Begin code section*/
//This function implements basic engine governor
//state 0 = intial resting state
//state 1 = starter state
//state 2 = run state (normal & protection state)

start_edge = start - start_k1;

if (start_edge == 1)
{
    if (error_msg_var == 0)
    {
        state = 1;
    }
}
start_k1 = start;

if (stop)
{
    state = 0;
}


if (reset)
{
    error_msg_var = 0;
}

switch (state)
{
    case 0:
        {
            //Stop engine
            starter_on_var = 0;
            speed_controller_on_var = 0;
            ignition_var = 0;
            enable_engine_monitoring = 0;
            settle_time = 0;
            //set low kp/ki gains
            kp_gov_var = 0.03;
            ki_gov_var = 0.005;
        }
        break;
    case 1:
        {
            //Turn on the starter if engine speed is less than stall
            if (n_rpm < 200.0)
            {
                starter_on_var = 1;
            }
            
            if (n_rpm >= 200.0)
            {
                //turn on fuel and ignition to pick up speed, while starter is still on
                speed_controller_on_var = 1;
                ignition_var = 1;
            }
            
            if (n_rpm >= 400.0)
            {
                //if engine picking up speed, turn off starter and enable engine speed monitoring
                starter_on_var = 0;
                enable_engine_monitoring = 1;
            }

            //check if engine settled
            if ((n_rpm > 1790.0) && (n_rpm < 1810.0))
            {
                settle_time = settle_time + 1;
            }
            else
            {
                settle_time = 0.0;
            }
            
            //if engine settled go to run state (1second)
            if (settle_time > 1.0/execution_rate)
            {
                state = 2;
            }
        }
        break;
    
    case 2:
        {
            //This case may have additional code in future. Nothing to add for now.
            
            //In run state, kp and ki can be scheduled to improve genset performance
            kp_gov_var = 0.03 + 4.0*fabs(engine_load_pu);
            ki_gov_var = 0.005 + 4.0*fabs(engine_load_pu);
            
            //kp_gov_var = 4.0;
            //ki_gov_var = 2.0;
            //kp_max = 0.1, ki_max = 1
            if (kp_gov_var > 0.1)
            {
                kp_gov_var = 0.1;
            }
            if (ki_gov_var > 4)
            {
                ki_gov_var = 4;
            }
            
        }
        break;
        
    default:
        //should never get here
        error_msg_var = 1000;
}

if (enable_engine_monitoring == 1)
{
    //check for overspeed and stall
    if (n_rpm > 3000.0)
    {
        state = 0;
        error_msg_var = 1;
    }
    if (n_rpm < 100.0)
    {
        state = 0;
        error_msg_var = 2;
    }
}
/*End code section*/"
                        }
                        [
                            position = 8352, 7960
                            size = 144, 128
                        ]

                        component src_scada_input reset {
                            execution_rate = "T_engine"
                            format = "int"
                            max = "1"
                            min = "0"
                            signal_type = "int"
                            unit = "1=reset"
                        }
                        [
                            position = 8128, 8008
                        ]

                        component gen_probe error_msg {
                        }
                        [
                            position = 9040, 8328
                        ]

                        component gen_probe state {
                        }
                        [
                            position = 8600, 7960
                        ]

                        component src_scada_input "stop(manual)" {
                            execution_rate = "T_engine"
                            format = "int"
                            max = "1"
                            min = "0"
                            signal_type = "int"
                            unit = "1=stop"
                        }
                        [
                            position = 7936, 8088
                        ]

                        component gen_probe Aeq_pu_ {
                        }
                        [
                            position = 8616, 8264
                        ]

                        component Subsystem pid_controller {
                            layout = dynamic
                            component gen_product Product8 {
                            }
                            [
                                position = 8160, 7936
                                hide_name = True
                            ]

                            component gen_z_domain_transfer deriv {
                                a_coeff = "[1.0/(2.0*np.pi*100.0),1.0]"
                                b_coeff = "[1.0, 0.0]"
                                domain = "S-domain"
                                method = "Bilinear"
                            }
                            [
                                position = 8088, 8192
                            ]

                            component gen_sum Sum8 {
                                signs = "+-"
                            }
                            [
                                position = 7488, 7872
                                hide_name = True
                            ]

                            component gen_sum Sum14 {
                                signs = "3"
                            }
                            [
                                position = 8528, 7952
                                hide_name = True
                            ]

                            component src_constant Constant1 {
                                execution_rate = "T_engine"
                                value = "0"
                            }
                            [
                                position = 8680, 7896
                                hide_name = True
                            ]

                            component gen_product Product9 {
                            }
                            [
                                position = 8168, 8080
                                hide_name = True
                            ]

                            component gen_integrator Integrator1 {
                                limit_lower = "-1"
                                limit_output = "True"
                                limit_upper = "1"
                                show_reset = "level"
                            }
                            [
                                position = 8344, 8088
                                hide_name = True
                            ]

                            component gen_product Product14 {
                            }
                            [
                                position = 7992, 8192
                                hide_name = True
                            ]

                            component sys_signal_switch "Signal switch1" {
                                threshold = "0.5"
                            }
                            [
                                position = 8744, 7936
                                hide_name = True
                            ]

                            component gen_limiter Limit1 {
                                lower_limit = "-1"
                                upper_limit = "1"
                            }
                            [
                                position = 8296, 7936
                            ]

                            component gen_limiter Limit2 {
                                lower_limit = "-1"
                                upper_limit = "1"
                            }
                            [
                                position = 8368, 8192
                            ]

                            component gen_limiter Limit3 {
                                lower_limit = "0.0"
                                upper_limit = "1.0"
                            }
                            [
                                position = 8616, 7952
                            ]

                            component gen_logic_op "Logical operator4" {
                                operator = "NOT"
                            }
                            [
                                position = 7240, 8048
                                hide_name = True
                            ]

                            component gen_rate_limiter "Rate Limiter1" {
                            }
                            [
                                position = 7392, 7824
                                hide_name = True
                            ]

                            component gen_probe w_err {
                            }
                            [
                                position = 7616, 7824
                            ]

                            port ki {
                                position = left:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7880, 8088
                            ]

                            port Aeq_pu {
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 9024, 7936
                            ]

                            port Enable {
                                position = left:7
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7144, 8000
                            ]

                            port kp {
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7880, 7944
                            ]

                            port ref {
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7304, 7824
                            ]

                            port kd {
                                position = left:5
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7880, 8200
                            ]

                            port fdbck {
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7392, 7880
                            ]

                            tag Goto2 {
                                value = "enable"
                                scope = local
                                kind = sp
                                direction = in
                            }
                            [
                                position = 7240, 8000
                                hide_name = True
                                size = 0, 0
                            ]

                            tag Goto3 {
                                value = "disable"
                                scope = local
                                kind = sp
                                direction = in
                            }
                            [
                                position = 7328, 8048
                                hide_name = True
                                size = 0, 0
                            ]

                            tag From6 {
                                value = "disable"
                                scope = local
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8248, 8104
                                hide_name = True
                                size = 0, 0
                            ]

                            tag From7 {
                                value = "disable"
                                scope = local
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8672, 7864
                                hide_name = True
                                size = 0, 0
                            ]

                            junction Junction358 sp
                            [
                                position = 8112, 8072
                            ]

                            junction Junction359 sp
                            [
                                position = 7176, 8000
                            ]

                            junction Junction366 sp
                            [
                                position = 8112, 7928
                            ]

                            junction Junction367 sp
                            [
                                position = 7560, 7872
                            ]

                            connect fdbck Sum8.in1 as Connection1502
                            connect Sum14.in1 Integrator1.out as Connection1979
                            connect Product14.in Junction358 as Connection1946
                            connect Product9.in Junction358 as Connection1944
                            connect Product9.out Integrator1.in as Connection288
                            connect Product14.out deriv.in as Connection1938
                            connect Constant1.out "Signal switch1.in" as Connection333
                            connect Sum14.in Limit1.out as Connection1992
                            connect Limit1.in Product8.out as Connection1993
                            connect Sum14.in2 Limit2.out as Connection1994
                            [
                                breakpoints = 8440, 7968; 8440, 8192
                            ]
                            connect Limit2.in deriv.out as Connection1995
                            connect kp Product8.in1 as Connection1997
                            connect kd Product14.in1 as Connection1998
                            connect ki Product9.in1 as Connection1999
                            connect Sum14.out Limit3.in as Connection2000
                            connect Limit3.out "Signal switch1.in1" as Connection2001
                            connect Enable Junction359 as Connection2014
                            connect Junction359 Goto2 as Connection2015
                            connect "Logical operator4.in" Junction359 as Connection2016
                            connect "Logical operator4.out" Goto3 as Connection2017
                            connect From6 Integrator1.reset as Connection2025
                            connect From7 "Signal switch1.in2" as Connection2026
                            connect "Rate Limiter1.in" ref as Connection2039
                            connect "Rate Limiter1.out" Sum8.in as Connection2040
                            connect Junction358 Junction366 as Connection2059
                            [
                                breakpoints = 8112, 8072; 8112, 8072; 8112, 8072
                            ]
                            connect Junction366 Product8.in as Connection2060
                            [
                                breakpoints = 8112, 7928; 8112, 7928; 8112, 7928; 8112, 7928
                            ]
                            connect Aeq_pu "Signal switch1.out" as Connection2068
                            [
                                breakpoints = 8984, 7936; 8832, 7936; 8832, 7936
                            ]
                            connect Sum8.out Junction367 as Connection2070
                            connect Junction367 Junction366 as Connection2071
                            [
                                breakpoints = 7600, 7872; 7600, 7872; 8032, 7872; 8032, 7928
                            ]
                            connect w_err.in Junction367 as Connection2072
                        }
                        [
                            position = 8392, 8216
                            size = 96, 224
                        ]

                        component gen_gain Gain1 {
                            gain = "1.0/nominal_rpm"
                        }
                        [
                            position = 7992, 8136
                            hide_name = True
                        ]

                        component gen_gain Gain2 {
                            gain = "1.0/nominal_rpm"
                        }
                        [
                            position = 8256, 8168
                            hide_name = True
                        ]

                        component gen_z_domain_transfer lpf_ {
                            a_coeff = "[1.0/(2.0*np.pi*20.0),1.0]"
                            b_coeff = "[1.0]"
                            domain = "S-domain"
                        }
                        [
                            position = 8488, 8216
                        ]

                        component gen_probe ignition_ {
                        }
                        [
                            position = 8632, 8056
                        ]

                        component gen_sum Sum1 {
                        }
                        [
                            position = 8088, 8160
                            hide_name = True
                        ]

                        component src_constant kd_gov_ {
                            execution_rate = "T_engine"
                            value = "0.0"
                        }
                        [
                            position = 8216, 8296
                        ]

                        component gen_sum Sum16 {
                        }
                        [
                            position = 8112, 7920
                            hide_name = True
                        ]

                        component src_scada_input "start_engine(manual)" {
                            execution_rate = "T_engine"
                            format = "int"
                            max = "1"
                            min = "0"
                            signal_type = "int"
                            unit = "0=stop, 1=start"
                        }
                        [
                            position = 8024, 7944
                        ]

                        component Subsystem NOT {
                            layout = dynamic
                            component gen_data_type_conversion "Data Type Conversion1" {
                                output_type = "int"
                            }
                            [
                                position = 8224, 8192
                            ]

                            component gen_logic_op "Logical operator1" {
                                operator = "NOT"
                            }
                            [
                                position = 8080, 8192
                            ]

                            port Out {
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8368, 8192
                                hide_name = True
                            ]

                            port In {
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7968, 8192
                                hide_name = True
                            ]

                            connect "Data Type Conversion1.out" Out as Connection1
                            connect "Data Type Conversion1.in" "Logical operator1.out" as Connection2
                            connect "Logical operator1.in" In as Connection3
                        }
                        [
                            position = 8000, 8040
                            size = 48, 48
                        ]

                        component gen_sum Sum17 {
                        }
                        [
                            position = 8096, 8064
                            hide_name = True
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 7728, 8400
                            hide_name = True
                        ]

                        component src_scada_input ki_gov {
                            def_value = "0.005"
                            execution_rate = "T_engine"
                            max = "10"
                            min = "0"
                            unit = ""
                        }
                        [
                            position = 8216, 8232
                        ]

                        component src_scada_input kp_gov {
                            def_value = "0.03"
                            execution_rate = "T_engine"
                            max = "10"
                            min = "0"
                            unit = ""
                        }
                        [
                            position = 8168, 8200
                        ]

                        component gen_terminator Termination2 {
                        }
                        [
                            position = 8504, 8000
                            hide_name = True
                        ]

                        component gen_terminator Termination3 {
                        }
                        [
                            position = 8504, 8032
                            hide_name = True
                        ]

                        port starter {
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9040, 8032
                        ]

                        port n_rpm {
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7632, 8144
                        ]

                        port Aeq_pu {
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9040, 8200
                        ]

                        port ignition {
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9040, 8112
                        ]

                        port w_bias_pu {
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7632, 8200
                        ]

                        port start_engine_ {
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7632, 8264
                        ]

                        port n_rpm_ref {
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7632, 8320
                        ]

                        port engine_error {
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9040, 8264
                        ]

                        port rate_limit_kWps {
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7632, 8400
                        ]

                        tag Goto1 {
                            value = "n_rpm"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7776, 8144
                            hide_name = True
                        ]

                        tag From1 {
                            value = "n_rpm"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8216, 7944
                            hide_name = True
                        ]

                        tag Goto2 {
                            value = "speed_controller_en"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8704, 7928
                            hide_name = True
                            size = 102, 20
                        ]

                        tag From2 {
                            value = "speed_controller_en"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8160, 8376
                            hide_name = True
                            size = 109, 20
                        ]

                        tag From4 {
                            value = "n_rpm"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8176, 8168
                            hide_name = True
                        ]

                        tag From5 {
                            value = "ignition"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8928, 8112
                            hide_name = True
                            size = 59, 20
                        ]

                        tag Goto3 {
                            value = "ignition"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8664, 8024
                            hide_name = True
                            size = 102, 20
                        ]

                        tag From6 {
                            value = "Aeq_pu"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8152, 8112
                            hide_name = True
                        ]

                        tag Goto4 {
                            value = "Aeq_pu"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8616, 8184
                            hide_name = True
                            size = 102, 20
                        ]

                        tag Goto5 {
                            value = "w_bias_pu"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7776, 8200
                            hide_name = True
                        ]

                        tag From7 {
                            value = "w_bias_pu"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7944, 8192
                            hide_name = True
                        ]

                        tag Goto6 {
                            value = "start_engine"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7776, 8264
                            hide_name = True
                            size = 76, 20
                        ]

                        tag Goto7 {
                            value = "rpm_ref"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7768, 8320
                            hide_name = True
                            size = 76, 20
                        ]

                        tag From8 {
                            value = "rpm_ref"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7912, 8136
                            hide_name = True
                        ]

                        tag From9 {
                            value = "start_engine"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8024, 7904
                            hide_name = True
                        ]

                        tag From10 {
                            value = "starter"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8928, 8032
                            hide_name = True
                            size = 59, 20
                        ]

                        tag From11 {
                            value = "Aeq_pu"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8928, 8200
                            hide_name = True
                            size = 59, 20
                        ]

                        tag Goto8 {
                            value = "starter"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8616, 7880
                            hide_name = True
                            size = 102, 20
                        ]

                        tag Goto9 {
                            value = "engine_error"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8520, 7944
                            hide_name = True
                            size = 74, 20
                        ]

                        tag From12 {
                            value = "engine_error"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8928, 8264
                            hide_name = True
                            size = 65, 20
                        ]

                        tag From13 {
                            value = "start_engine"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7904, 8040
                            hide_name = True
                        ]

                        junction Junction2 sp
                        [
                            position = 8552, 8024
                        ]

                        junction Junction3 sp
                        [
                            position = 8528, 8216
                        ]

                        junction Junction4 sp
                        [
                            position = 8984, 8264
                        ]

                        connect From1 "state machine.n_rpm" as Connection54
                        connect reset.out "state machine.reset" as Connection55
                        [
                            breakpoints = 8176, 8008; 8176, 7976
                        ]
                        connect state.in "state machine.state_out" as Connection65
                        connect From5 ignition as Connection70
                        connect From2 pid_controller.Enable as Connection59
                        connect Gain2.out pid_controller.fdbck as Connection81
                        connect "state machine.speed_control_enable" Goto2 as Connection82
                        connect pid_controller.Aeq_pu lpf_.in as Connection85
                        connect "state machine.ignition" Junction2 as Connection87
                        [
                            breakpoints = 8528, 7976; 8528, 7976; 8552, 7976
                        ]
                        connect Junction2 Goto3 as Connection88
                        connect ignition_.in Junction2 as Connection89
                        connect lpf_.out Junction3 as Connection97
                        connect Goto4 Junction3 as Connection99
                        connect From6 "state machine.engine_load_pu" as Connection107
                        [
                            breakpoints = 8224, 8104
                        ]
                        connect From4 Gain2.in as Connection112
                        connect w_bias_pu Goto5 as Connection113
                        connect Gain1.out Sum1.in as Connection115
                        connect From7 Sum1.in1 as Connection116
                        connect Sum1.out pid_controller.ref as Connection117
                        [
                            breakpoints = 8128, 8160; 8128, 8136
                        ]
                        connect kd_gov_.out pid_controller.kd as Connection118
                        [
                            breakpoints = 8288, 8304; 8288, 8264
                        ]
                        connect start_engine_ Goto6 as Connection119
                        connect n_rpm_ref Goto7 as Connection120
                        connect From8 Gain1.in as Connection121
                        connect From10 starter as Connection123
                        connect Aeq_pu_.in Junction3 as Connection124
                        [
                            breakpoints = 8552, 8216
                        ]
                        connect From11 Aeq_pu as Connection125
                        connect "state machine.starter_on" Goto8 as Connection126
                        [
                            breakpoints = 8440, 7880; 8544, 7880
                        ]
                        connect "state machine.error_msg" Goto9 as Connection127
                        connect From12 Junction4 as Connection129
                        connect Junction4 engine_error as Connection130
                        connect error_msg.in Junction4 as Connection131
                        connect From9 Sum16.in as Connection132
                        connect "start_engine(manual).out" Sum16.in1 as Connection133
                        connect Sum16.out "state machine.start" as Connection134
                        connect From13 NOT.In as Connection135
                        connect "stop(manual).out" Sum17.in1 as Connection136
                        connect NOT.Out Sum17.in as Connection137
                        connect Sum17.out "state machine.stop" as Connection138
                        [
                            breakpoints = 8200, 7976
                        ]
                        connect rate_limit_kWps Termination1.in as Connection139
                        connect kp_gov.out pid_controller.kp as Connection140
                        connect ki_gov.out pid_controller.ki as Connection141
                        connect n_rpm Goto1 as Connection142
                        connect "state machine.kp_gov" Termination2.in as Connection143
                        [
                            breakpoints = 8472, 7992
                        ]
                        connect "state machine.ki_gov" Termination3.in as Connection144
                    }
                    [
                        position = 8352, 8224
                        size = 144, 184
                    ]

                    component Subsystem exciter {
                        layout = dynamic
                        component src_scada_input kd_exc {
                            def_value = "0.0"
                            execution_rate = "Tfast"
                            unit = ""
                        }
                        [
                            position = 7848, 8200
                        ]

                        component gen_probe disable {
                        }
                        [
                            position = 7776, 8536
                        ]

                        component gen_probe pid_out {
                        }
                        [
                            position = 8648, 8008
                        ]

                        component gen_gain Gain9 {
                            gain = "nominal_rms_voltage_LL"
                        }
                        [
                            position = 8840, 7944
                            hide_name = True
                        ]

                        component src_constant Constant2 {
                            execution_rate = "Tfast"
                            value = "0"
                        }
                        [
                            position = 7248, 7784
                            hide_name = True
                        ]

                        component gen_c_function exc_state_machine {
                            global_variables = "int start_edge;int start_k1;int error_msg_var;"
                            in_terminal_dimensions = "inherit;inherit;inherit;inherit;inherit"
                            in_terminal_dimensions_str = "start inherit;stop inherit;reset inherit;n_rpm inherit;v_LL_rms inherit"
                            in_terminal_labels = "[(\'start\', True), (\'stop\', True), (\'reset\', True), (\'n_rpm\', True), (\'v_LL_rms\', True)]"
                            in_terminal_properties = "int start;int stop;int reset;real n_rpm;real v_LL_rms;"
                            init_fnc = "/*Begin code section*/
error_msg_var = 0;
state = 0;
start_k1 = 0;
/*End code section*/"
                            no_feed_inputs = "[\'\']"
                            no_feed_outputs = "[\'\']"
                            out_terminal_dimensions = "inherit;inherit;inherit"
                            out_terminal_dimensions_str = "state inherit;exciter_controller_enable inherit;error_msg inherit"
                            out_terminal_labels = "[(\'state\', True), (\'exciter_controller_enable\', True), (\'error_msg\', True)]"
                            out_terminal_properties = "int state;int exciter_controller_enable;int error_msg;"
                            output_fnc = "/*Begin code section*/
error_msg = error_msg_var;
/*End code section*/"
                            parameters = "real nominal_rms_voltage_LL;"
                            update_fnc = "/*Begin code section*/
//This function implements basic exciter
//state 0 = intial resting state
//state 1= exciter enable state
//state 2 = run state (normal & protection state)

start_edge = start - start_k1;

if (start_edge == 1)
{
    if (error_msg_var == 0)
    {
        state = 1;
    }
}
start_k1 = start;

if (stop)
{
    state = 0;
}


if (reset)
{
    error_msg_var = 0;
}

switch (state)
{
    case 0:
        {
            //Stop exciter
            exciter_controller_enable = 0;
        }
        break;
    case 1:
        {
            //Turn on the exciter if engine speed is above 1500rpm
            if (n_rpm >= 1500.0)
            {
                exciter_controller_enable = 1;
                state = 2;
            }
        }
        break;
    
    case 2:
        {
            //check for overvoltage and stall
            if (n_rpm <= 800.0)
            {
                state = 0;
                error_msg_var = 1;
            }
            if (v_LL_rms >= nominal_rms_voltage_LL*1.5)
            {
                state = 0;
                error_msg_var = 2;
            }
        }
        break;
        
    default:
        //should never get here
        error_msg_var = 1000;
}
/*End code section*/"
                        }
                        [
                            position = 7488, 8584
                            size = 184, 160
                        ]

                        component src_scada_input ki_exc {
                            def_value = "0.1"
                            execution_rate = "Tfast"
                            unit = ""
                        }
                        [
                            position = 7848, 8088
                        ]

                        component gen_sum Sum8 {
                            signs = "+-"
                        }
                        [
                            position = 7552, 7896
                            hide_name = True
                        ]

                        component sys_signal_switch "Signal switch2" {
                            threshold = "0.5"
                        }
                        [
                            position = 7312, 7824
                            hide_name = True
                        ]

                        component gen_probe pid_error {
                        }
                        [
                            position = 7744, 7824
                        ]

                        component gen_integrator Integrator1 {
                            limit_lower = "-1"
                            limit_upper = "1"
                            show_reset = "level"
                        }
                        [
                            position = 8344, 8088
                            hide_name = True
                        ]

                        component gen_rate_limiter "Rate Limiter1" {
                            falling_limit = "-0.1"
                            rising_limit = "0.1"
                        }
                        [
                            position = 7432, 7824
                            hide_name = True
                        ]

                        component gen_product Product14 {
                        }
                        [
                            position = 7992, 8192
                            hide_name = True
                        ]

                        component src_scada_input reset_exc {
                            execution_rate = "Tfast"
                            format = "int"
                            max = "1"
                            min = "0"
                            signal_type = "int"
                            unit = ""
                        }
                        [
                            position = 7168, 8592
                        ]

                        component gen_probe kp_out {
                        }
                        [
                            position = 8408, 7752
                        ]

                        component gen_gain Gain6 {
                            gain = "1.0/nominal_rms_voltage_LL"
                        }
                        [
                            position = 7160, 7840
                            hide_name = True
                        ]

                        component gen_logic_op "Logical operator1" {
                            operator = "NOT"
                        }
                        [
                            position = 7664, 8584
                            hide_name = True
                        ]

                        component gen_product Product9 {
                        }
                        [
                            position = 8168, 8080
                            hide_name = True
                        ]

                        component gen_sum Sum14 {
                            signs = "3"
                        }
                        [
                            position = 8528, 7960
                            hide_name = True
                        ]

                        component gen_probe ki_out {
                        }
                        [
                            position = 8432, 7808
                        ]

                        component sys_signal_switch "Signal switch1" {
                            threshold = "0.5"
                        }
                        [
                            position = 8744, 7944
                            hide_name = True
                        ]

                        component gen_product Product8 {
                        }
                        [
                            position = 8016, 7944
                            hide_name = True
                        ]

                        component gen_gain Gain7 {
                            gain = "1.0/nominal_rms_voltage_LL"
                        }
                        [
                            position = 7440, 7904
                            hide_name = True
                        ]

                        component gen_probe kd_out {
                        }
                        [
                            position = 8472, 7864
                        ]

                        component gen_probe v_exc {
                        }
                        [
                            position = 8944, 7872
                        ]

                        component gen_probe V_LL_ref {
                        }
                        [
                            position = 7640, 7752
                        ]

                        component src_constant Constant1 {
                            execution_rate = "Tfast"
                            value = "0"
                        }
                        [
                            position = 8680, 7904
                            hide_name = True
                        ]

                        component src_scada_input kp_exc {
                            def_value = "0.1"
                            execution_rate = "Tfast"
                            unit = ""
                        }
                        [
                            position = 7848, 7952
                        ]

                        component gen_z_domain_transfer deriv {
                            a_coeff = "[1.0/(2.0*np.pi*100.0),1.0]"
                            b_coeff = "[1.0, 0.0]"
                            domain = "S-domain"
                            method = "Bilinear"
                        }
                        [
                            position = 8088, 8192
                        ]

                        component gen_probe error_msg {
                        }
                        [
                            position = 7664, 8640
                        ]

                        component gen_gain Gain8 {
                            gain = "nominal_rms_voltage_LL"
                        }
                        [
                            position = 7568, 7752
                            hide_name = True
                        ]

                        component gen_probe state {
                        }
                        [
                            position = 7648, 8512
                        ]

                        component gen_sum Sum15 {
                        }
                        [
                            position = 7240, 7856
                            hide_name = True
                        ]

                        component src_scada_input "start_exc(manual)" {
                            execution_rate = "Tfast"
                            format = "int"
                            max = "1"
                            min = "0"
                            signal_type = "int"
                            unit = ""
                        }
                        [
                            position = 7128, 8496
                        ]

                        component gen_sum Sum16 {
                        }
                        [
                            position = 7272, 8488
                            hide_name = True
                        ]

                        component Subsystem NOT {
                            layout = dynamic
                            component gen_data_type_conversion "Data Type Conversion1" {
                                output_type = "int"
                            }
                            [
                                position = 8224, 8192
                            ]

                            component gen_logic_op "Logical operator1" {
                                operator = "NOT"
                            }
                            [
                                position = 8080, 8192
                            ]

                            port Out {
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8368, 8192
                                hide_name = True
                            ]

                            port In {
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7968, 8192
                                hide_name = True
                            ]

                            connect "Logical operator1.in" In as Connection3
                            connect "Data Type Conversion1.out" Out as Connection1
                            connect "Data Type Conversion1.in" "Logical operator1.out" as Connection2
                        }
                        [
                            position = 6960, 8536
                            size = 48, 48
                        ]

                        component src_scada_input "stop_exc(manual)" {
                            execution_rate = "Tfast"
                            format = "int"
                            max = "1"
                            min = "0"
                            signal_type = "int"
                            unit = "1=stop"
                        }
                        [
                            position = 6896, 8584
                        ]

                        component gen_sum Sum17 {
                        }
                        [
                            position = 7056, 8560
                            hide_name = True
                        ]

                        port V_exc {
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8920, 7944
                        ]

                        port n_rpm {
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7216, 8176
                        ]

                        port v_ab_rms {
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7216, 8120
                        ]

                        port v_bias_pu {
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7216, 8232
                        ]

                        port exc_error {
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8928, 8048
                        ]

                        port start_exc_ {
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7216, 8288
                        ]

                        port v_ab_rms_ref {
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7208, 8344
                        ]

                        tag Goto1 {
                            value = "disable"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7760, 8584
                            hide_name = True
                            size = 0, 0
                        ]

                        tag From17 {
                            value = "disable"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8680, 7864
                            hide_name = True
                            size = 0, 0
                        ]

                        tag From16 {
                            value = "disable"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8256, 8112
                            hide_name = True
                            size = 0, 0
                        ]

                        tag From15 {
                            value = "v_ab_rms"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7344, 7904
                            hide_name = True
                            size = 0, 0
                        ]

                        tag From18 {
                            value = "v_ab_rms"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7240, 8664
                            hide_name = True
                            size = 0, 0
                        ]

                        tag From7 {
                            value = "disable"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7240, 7752
                            hide_name = True
                            size = 0, 0
                        ]

                        tag Goto2 {
                            value = "v_ab_rms"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7328, 8120
                            hide_name = True
                            size = 0, 0
                        ]

                        tag Goto3 {
                            value = "n_rpm"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7320, 8176
                            hide_name = True
                            size = 0, 0
                        ]

                        tag Goto4 {
                            value = "v_bias_pu"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7328, 8232
                            hide_name = True
                            size = 0, 0
                        ]

                        tag From19 {
                            value = "v_bias_pu"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7064, 7896
                            hide_name = True
                            size = 0, 0
                        ]

                        tag From20 {
                            value = "n_rpm"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7248, 8616
                            hide_name = True
                            size = 0, 0
                        ]

                        tag Goto5 {
                            value = "start_exc"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7320, 8288
                            hide_name = True
                            size = 0, 0
                        ]

                        tag From21 {
                            value = "start_exc"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7176, 8464
                            hide_name = True
                            size = 58, 20
                        ]

                        tag Goto6 {
                            value = "v_ab_rms_ref"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7328, 8344
                            hide_name = True
                            size = 85, 20
                        ]

                        tag From22 {
                            value = "v_ab_rms_ref"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7048, 7840
                            hide_name = True
                            size = 88, 20
                        ]

                        tag Goto7 {
                            value = "exc_error"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7680, 8696
                            hide_name = True
                            size = 0, 0
                        ]

                        tag From23 {
                            value = "exc_error"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8832, 8048
                            hide_name = True
                            size = 0, 0
                        ]

                        tag From13 {
                            value = "start_exc"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 6864, 8536
                            hide_name = True
                        ]

                        junction Junction374 sp
                        [
                            position = 7888, 8072
                        ]

                        junction Junction381 sp
                        [
                            position = 8432, 7976
                        ]

                        junction Junction382 sp
                        [
                            position = 8296, 7944
                        ]

                        junction Junction371 sp
                        [
                            position = 7888, 7936
                        ]

                        junction Junction360 sp
                        [
                            position = 7512, 7824
                        ]

                        junction Junction361 sp
                        [
                            position = 8888, 7944
                        ]

                        junction Junction362 sp
                        [
                            position = 7704, 8584
                        ]

                        junction Junction364 sp
                        [
                            position = 7688, 7896
                        ]

                        junction Junction378 sp
                        [
                            position = 8384, 7960
                        ]

                        junction Junction363 sp
                        [
                            position = 8616, 7960
                        ]

                        junction Junction383 sp
                        [
                            position = 7600, 8640
                        ]

                        connect From17 "Signal switch1.in2" as Connection2040
                        connect "Rate Limiter1.out" Junction360 as Connection2041
                        connect Junction360 Sum8.in as Connection2042
                        connect ki_out.in Junction378 as Connection2125
                        connect V_LL_ref.in Gain8.out as Connection2043
                        connect Gain8.in Junction360 as Connection2044
                        connect Integrator1.out Junction378 as Connection2127
                        connect Gain9.in "Signal switch1.out" as Connection2046
                        connect Junction378 Sum14.in1 as Connection2126
                        [
                            breakpoints = 8384, 7960; 8384, 7960
                        ]
                        connect kp_exc.out Product8.in1 as Connection2047
                        connect pid_out.in Junction363 as Connection2066
                        connect ki_exc.out Product9.in1 as Connection2048
                        connect kd_exc.out Product14.in1 as Connection2049
                        connect From16 Integrator1.reset as Connection2010
                        connect Constant2.out "Signal switch2.in" as Connection2013
                        connect reset_exc.out exc_state_machine.reset as Connection2052
                        connect pid_error.in Junction364 as Connection2069
                        connect From7 "Signal switch2.in2" as Connection2026
                        connect exc_state_machine.exciter_controller_enable "Logical operator1.in" as Connection2054
                        connect Product8.in Junction371 as Connection2093
                        connect kd_out.in Junction381 as Connection2202
                        connect deriv.out Junction381 as Connection2204
                        connect "Signal switch2.out" "Rate Limiter1.in" as Connection2032
                        connect Junction381 Sum14.in2 as Connection2203
                        [
                            breakpoints = 8432, 7976; 8432, 7976; 8432, 7976; 8432, 7976; 8432, 7976
                        ]
                        connect Product9.in Junction374 as Connection2104
                        connect V_exc Junction361 as Connection2055
                        connect From15 Gain7.in as Connection2037
                        connect Junction382 kp_out.in as Connection2206
                        [
                            breakpoints = 8296, 7944; 8296, 7944; 8296, 7944; 8296, 7944; 8296, 7944; 8296, 7944; 8296, 7928; 8296, 7896; 8296, 7896; 8296, 7896; 8296, 7888; 8296, 7888; 8296, 7896
                        ]
                        connect Gain7.out Sum8.in1 as Connection2038
                        connect Sum14.in Junction382 as Connection2205
                        [
                            breakpoints = 8352, 7944
                        ]
                        connect Junction361 Gain9.out as Connection2056
                        connect v_exc.in Junction361 as Connection2057
                        connect exc_state_machine.state state.in as Connection2059
                        connect Product8.out Junction382 as Connection2207
                        connect From18 exc_state_machine.v_LL_rms as Connection2060
                        connect "Logical operator1.out" Junction362 as Connection2061
                        connect Junction362 Goto1 as Connection2062
                        connect disable.in Junction362 as Connection2063
                        connect Product9.out Integrator1.in as Connection2208
                        connect Sum14.out Junction363 as Connection2064
                        connect Junction363 "Signal switch1.in1" as Connection2065
                        connect Sum8.out Junction364 as Connection2067
                        connect Constant1.out "Signal switch1.in" as Connection333
                        connect Product14.out deriv.in as Connection1938
                        connect Goto2 v_ab_rms as Connection2209
                        connect n_rpm Goto3 as Connection2210
                        connect v_bias_pu Goto4 as Connection2211
                        connect Gain6.out Sum15.in as Connection2212
                        connect From19 Sum15.in1 as Connection2213
                        connect Sum15.out "Signal switch2.in1" as Connection2214
                        connect From20 exc_state_machine.n_rpm as Connection2215
                        connect Sum16.out exc_state_machine.start as Connection2216
                        connect "start_exc(manual).out" Sum16.in1 as Connection2217
                        connect start_exc_ Goto5 as Connection2218
                        connect From21 Sum16.in as Connection2219
                        connect v_ab_rms_ref Goto6 as Connection2220
                        connect From22 Gain6.in as Connection2221
                        connect exc_state_machine.error_msg Junction383 as Connection2222
                        connect Junction383 error_msg.in as Connection2223
                        connect Goto7 Junction383 as Connection2224
                        connect From23 exc_error as Connection2225
                        connect From13 NOT.In as Connection135
                        connect "stop_exc(manual).out" Sum17.in1 as Connection136
                        connect NOT.Out Sum17.in as Connection137
                        connect Sum17.out exc_state_machine.stop as Connection2226
                        connect Junction371 Junction364 as Connection2227
                        [
                            breakpoints = 7888, 7936; 7888, 7896; 7768, 7896; 7688, 7896
                        ]
                        connect Junction374 Junction371 as Connection2228
                        [
                            breakpoints = 7888, 8072; 7888, 8040
                        ]
                        connect Product14.in Junction374 as Connection2229
                        [
                            breakpoints = 7928, 8184
                        ]
                    }
                    [
                        position = 8368, 8480
                        size = 112, 152
                    ]

                    component Subsystem PLLs {
                        layout = dynamic
                        component gen_gain Gain5 {
                            gain = "1.0/np.sqrt(2.0)"
                        }
                        [
                            position = 8064, 8312
                            rotation = down
                            hide_name = True
                            scale = -1, 1
                        ]

                        component gen_terminator Termination3 {
                        }
                        [
                            position = 8080, 8152
                            hide_name = True
                        ]

                        component gen_terminator Termination2 {
                        }
                        [
                            position = 8080, 8120
                            hide_name = True
                        ]

                        component gen_terminator Termination5 {
                        }
                        [
                            position = 8080, 8232
                            hide_name = True
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8080, 8088
                            hide_name = True
                        ]

                        component "core/Three phase PLL" "Three phase PLL1" {
                            enable_pk = "True"
                        }
                        [
                            position = 7936, 8168
                            size = 64, 128
                        ]

                        component gen_probe v_ab_rms_gen {
                        }
                        [
                            position = 8608, 8616
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "3"
                        }
                        [
                            position = 7800, 8168
                            hide_name = True
                        ]

                        component gen_bus_split "Bus Split2" {
                            outputs = "3"
                        }
                        [
                            position = 7768, 8512
                            hide_name = True
                        ]

                        component gen_terminator Termination6 {
                        }
                        [
                            position = 8048, 8440
                            hide_name = True
                        ]

                        component gen_terminator Termination7 {
                        }
                        [
                            position = 8048, 8504
                            hide_name = True
                        ]

                        component gen_terminator Termination9 {
                        }
                        [
                            position = 8048, 8472
                            hide_name = True
                        ]

                        component gen_terminator Termination10 {
                        }
                        [
                            position = 8048, 8584
                            hide_name = True
                        ]

                        component gen_probe v_ab_rms_grid {
                        }
                        [
                            position = 8640, 8528
                        ]

                        component gen_gain Gain6 {
                            gain = "1.0/np.sqrt(2.0)"
                        }
                        [
                            position = 8032, 8664
                            rotation = down
                            hide_name = True
                            scale = -1, 1
                        ]

                        component "core/Three phase PLL" "Three phase PLL2" {
                            enable_pk = "True"
                        }
                        [
                            position = 7904, 8520
                            size = 64, 128
                        ]

                        component gen_probe f_Hz_gen_ {
                        }
                        [
                            position = 8592, 7992
                        ]

                        component gen_probe f_Hz_grid_ {
                        }
                        [
                            position = 8632, 8056
                        ]

                        component gen_probe wt_gen_ {
                        }
                        [
                            position = 8768, 8296
                        ]

                        component gen_probe wt_grid_ {
                        }
                        [
                            position = 8776, 8360
                        ]

                        port vabc_LL_gen {
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7680, 8168
                        ]

                        port vabc_LL_grid {
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7648, 8512
                        ]

                        port f_Hz_gen {
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8656, 8144
                        ]

                        port f_Hz_grid {
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8656, 8200
                        ]

                        port wt_gen {
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8656, 8256
                        ]

                        port wt_grid {
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8656, 8320
                        ]

                        port vab_rms_gen {
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8656, 8376
                        ]

                        port vab_rms_grid {
                            position = right:6
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8656, 8432
                        ]

                        tag Goto8 {
                            value = "f_Hz_gen"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8144, 8168
                            hide_name = True
                        ]

                        tag Goto7 {
                            value = "v_ab_rms_gen"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8168, 8312
                            hide_name = True
                            size = 109, 20
                        ]

                        tag Goto9 {
                            value = "f_Hz_grid"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8112, 8520
                            hide_name = True
                        ]

                        tag Goto10 {
                            value = "v_ab_rms_grid"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8128, 8664
                            hide_name = True
                            size = 91, 20
                        ]

                        tag Goto11 {
                            value = "wt_gen"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8144, 8192
                            hide_name = True
                        ]

                        tag Goto12 {
                            value = "wt_grid"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8112, 8544
                            hide_name = True
                        ]

                        tag From1 {
                            value = "f_Hz_gen"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8464, 8144
                            hide_name = True
                            size = 73, 20
                        ]

                        tag From2 {
                            value = "f_Hz_grid"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8464, 8200
                            hide_name = True
                            size = 73, 20
                        ]

                        tag From3 {
                            value = "wt_gen"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8472, 8256
                            hide_name = True
                            size = 73, 20
                        ]

                        tag From4 {
                            value = "wt_grid"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8472, 8320
                            hide_name = True
                            size = 73, 20
                        ]

                        tag From5 {
                            value = "v_ab_rms_gen"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8472, 8376
                            hide_name = True
                            size = 73, 20
                        ]

                        tag From6 {
                            value = "v_ab_rms_grid"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8472, 8432
                            hide_name = True
                            size = 73, 20
                        ]

                        junction Junction13 sp
                        [
                            position = 8544, 8376
                        ]

                        junction Junction14 sp
                        [
                            position = 8568, 8432
                        ]

                        junction Junction15 sp
                        [
                            position = 8536, 8144
                        ]

                        junction Junction16 sp
                        [
                            position = 8560, 8200
                        ]

                        junction Junction17 sp
                        [
                            position = 8568, 8256
                        ]

                        junction Junction18 sp
                        [
                            position = 8568, 8320
                        ]

                        connect "Three phase PLL1.q_axis" Termination2.in as Connection2002
                        [
                            breakpoints = 8032, 8136; 8032, 8120
                        ]
                        connect "Three phase PLL1.peak" Gain5.in as Connection142
                        connect "Three phase PLL1.zero_axis" Termination3.in as Connection2003
                        connect "Three phase PLL1.sin_theta" Termination5.in as Connection2005
                        [
                            breakpoints = 8048, 8200
                        ]
                        connect "Three phase PLL1.d_axis" Termination1.in as Connection2001
                        [
                            breakpoints = 8016, 8120; 8016, 8088
                        ]
                        connect "Three phase PLL1.freq" Goto8 as Connection2006
                        connect vabc_LL_gen "Bus Split1.in" as Connection2007
                        connect vabc_LL_grid "Bus Split2.in" as Connection2009
                        connect "Bus Split1.out1" "Three phase PLL1.vb" as Connection2010
                        connect "Bus Split1.out2" "Three phase PLL1.vc" as Connection2011
                        connect "Bus Split1.out" "Three phase PLL1.va" as Connection2012
                        connect "Three phase PLL2.sin_theta" Termination10.in as Connection2014
                        [
                            breakpoints = 8016, 8552
                        ]
                        connect "Three phase PLL2.q_axis" Termination9.in as Connection2015
                        [
                            breakpoints = 8000, 8488; 8000, 8472
                        ]
                        connect "Three phase PLL2.peak" Gain6.in as Connection2016
                        connect "Three phase PLL2.freq" Goto9 as Connection2018
                        connect "Three phase PLL2.zero_axis" Termination7.in as Connection2020
                        connect "Three phase PLL2.d_axis" Termination6.in as Connection2022
                        [
                            breakpoints = 7984, 8472; 7984, 8440
                        ]
                        connect "Bus Split2.out" "Three phase PLL2.va" as Connection2023
                        connect "Three phase PLL2.vb" "Bus Split2.out1" as Connection2024
                        [
                            breakpoints = 7856, 8512; 7808, 8512
                        ]
                        connect "Bus Split2.out2" "Three phase PLL2.vc" as Connection2025
                        [
                            breakpoints = 7840, 8528; 7840, 8568
                        ]
                        connect "Three phase PLL1.theta" Goto11 as Connection2026
                        connect "Three phase PLL2.theta" Goto12 as Connection2027
                        connect Gain5.out Goto7 as Connection2034
                        [
                            breakpoints = 8096, 8312
                        ]
                        connect From5 Junction13 as Connection2035
                        connect Junction13 vab_rms_gen as Connection2036
                        connect v_ab_rms_gen.in Junction13 as Connection2037
                        connect Gain6.out Goto10 as Connection2038
                        connect vab_rms_grid Junction14 as Connection2039
                        connect Junction14 From6 as Connection2040
                        connect v_ab_rms_grid.in Junction14 as Connection2041
                        connect From1 Junction15 as Connection2042
                        connect Junction15 f_Hz_gen as Connection2043
                        connect f_Hz_gen_.in Junction15 as Connection2044
                        connect f_Hz_grid Junction16 as Connection2045
                        connect Junction16 From2 as Connection2046
                        connect f_Hz_grid_.in Junction16 as Connection2047
                        connect From3 Junction17 as Connection2048
                        connect Junction17 wt_gen as Connection2049
                        connect wt_gen_.in Junction17 as Connection2050
                        connect From4 Junction18 as Connection2051
                        connect Junction18 wt_grid as Connection2052
                        connect wt_grid_.in Junction18 as Connection2053
                    }
                    [
                        position = 8304, 8736
                        size = 128, 144
                    ]

                    component Subsystem Synchronizer {
                        layout = dynamic
                        component gen_probe dtheta {
                        }
                        [
                            position = 8920, 8544
                        ]

                        component gen_probe ok_dir {
                        }
                        [
                            position = 9104, 7880
                        ]

                        component gen_probe err_dtheta {
                        }
                        [
                            position = 8768, 8104
                        ]

                        component gen_probe ok_df {
                        }
                        [
                            position = 9216, 7928
                        ]

                        component gen_probe df {
                        }
                        [
                            position = 8696, 8432
                        ]

                        component gen_logic_op "Logical operator1" {
                            inputs = "4"
                        }
                        [
                            position = 9064, 8144
                            hide_name = True
                        ]

                        component gen_probe dv {
                        }
                        [
                            position = 8760, 8488
                        ]

                        component gen_probe ok_dv {
                        }
                        [
                            position = 9104, 7952
                        ]

                        component Subsystem error_detection {
                            layout = dynamic
                            component gen_probe in_dv_tol {
                            }
                            [
                                position = 8344, 8688
                            ]

                            component gen_probe in_enable {
                            }
                            [
                                position = 8344, 8480
                            ]

                            component gen_probe in_filter {
                            }
                            [
                                position = 8344, 8544
                            ]

                            component gen_probe in_direction_error {
                            }
                            [
                                position = 8344, 8624
                            ]

                            component gen_probe in_df_tol {
                            }
                            [
                                position = 8344, 8416
                            ]

                            component gen_c_function error_check {
                                global_variables = "real df;real dv;real dtheta;real sgn_f1;real sgn_f2;real df_filtered_k1;real dv_filtered_k1;real dtheta_filtered_k1;real df_k1;real dv_k1;real dtheta_k1;real a_filter;real b_filter;real c_filter;"
                                in_terminal_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit;inherit"
                                in_terminal_dimensions_str = "v1 inherit;f1 inherit;theta1 inherit;v2 inherit;f2 inherit;theta2 inherit;enable_synchronizer inherit"
                                in_terminal_labels = "[(\'v1\', True), (\'f1\', True), (\'theta1\', True), (\'v2\', True), (\'f2\', True), (\'theta2\', True), (\'enable_synchronizer\', True)]"
                                in_terminal_properties = "real v1;real f1;real theta1;real v2;real f2;real theta2;real enable_synchronizer;"
                                init_fnc = "/*Begin code section*/
//filter coefficients (using bilinear transform) for 1st order low pass filter
a_filter = 1.0/(2.0*(1.0/(2.0*3.141592653589793*filter_cutoff_Hz))/execution_rate + 1.0);
b_filter = a_filter;
c_filter = (1.0 - 2.0*(1.0/(2.0*3.141592653589793*filter_cutoff_Hz))/execution_rate )/(2.0*(1.0/(2.0*3.141592653589793*filter_cutoff_Hz))/execution_rate + 1.0);

//filter input and output history terms;
df_filtered_k1 = 0; //output history
dv_filtered_k1 = 0; //output history
dtheta_filtered_k1 = 0; //output history
df_k1 = 0; //input history
dv_k1 = 0; //input history  
dtheta_k1 = 0; //input history
/*End code section*/"
                                no_feed_inputs = "[\'\']"
                                no_feed_outputs = "[\'\']"
                                out_terminal_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit"
                                out_terminal_dimensions_str = "error_direction inherit;error_df inherit;error_dv inherit;error_dtheta inherit;df_filtered inherit;dv_filtered inherit;dtheta_filtered inherit;in_df_tol inherit;in_enable inherit;in_filter inherit;in_direction_error inherit;in_dv_tol inherit;in_dtheta_tol inherit"
                                out_terminal_labels = "[(\'error_direction\', True), (\'error_df\', True), (\'error_dv\', True), (\'error_dtheta\', True), (\'df_filtered\', True), (\'dv_filtered\', True), (\'dtheta_filtered\', True), (\'in_df_tol\', True), (\'in_enable\', True), (\'in_filter\', True), (\'in_direction_error\', True), (\'in_dv_tol\', True), (\'in_dtheta_tol\', True)]"
                                out_terminal_properties = "real error_direction;real error_df;real error_dv;real error_dtheta;real df_filtered;real dv_filtered;real dtheta_filtered;real in_df_tol;real in_enable;real in_filter;real in_direction_error;real in_dv_tol;real in_dtheta_tol;"
                                output_fnc = "/*Begin code section*/
//This block computes and filters errors and asserts whether they are beyond the tolerances

df = (f1 - f2)*100.0/fbase; //freq error in percent
dv = (v1 - v2)*100.0/vbase; //volt error in percent
dtheta = (theta1 - theta2)*180.0/3.141592653589793; //phase error in degrees    
if (dtheta > 180.0) //confine theta to +/- 180;
    dtheta = dtheta - 360.0;
else if (dtheta < -180.0)
    dtheta = dtheta + 360;

if (enable_error_filters >= 0.5) //use 1st order low pass filters on error signals to improve noise immunity
{
    
    in_filter = 100;
        //filter df; first order low pass
    df_filtered = a_filter*df + b_filter*df_k1 - c_filter*df_filtered_k1;
    df_filtered_k1 = df_filtered;
    df_k1 = df;
    
        //filter dv; 1st order low pass
    dv_filtered = a_filter*dv + b_filter*dv_k1 - c_filter*dv_filtered_k1;
    dv_filtered_k1 = dv_filtered;
    dv_k1 = dv;
    
        //filter dtheta; 1st order low pass
    dtheta_filtered = a_filter* dtheta + b_filter* dtheta_k1 - c_filter* dtheta_filtered_k1;
    dtheta_filtered_k1 =  dtheta_filtered;
    dtheta_k1 = dtheta;        
}
else
{ //pass through errors
    df_filtered = df;
    dv_filtered = dv;
    dtheta_filtered = dtheta;
    in_filter = 0;
}




//Check for errors:
//1. Check for error in direction of rotation
if (f1 >= 0) //sign of f1
{
    sgn_f1 = 1;
}
else
{
    sgn_f1 = -1;
}
if (f2 >= 0) //sign of f2
{
    sgn_f2 = 1;
}
else
{
    sgn_f2 = -1;
}

if (direction_rotation == 0) //simply check that both sides are going in same direction 
{
    if (sgn_f1 != sgn_f2)//if both directions are different 
    {
        in_direction_error = 0;
        error_direction = 1;
    }
    else
    {
        in_direction_error = 100;
        error_direction = 0;
    }
}

if (direction_rotation == 1) //check that both sides are going in positive direction (clockwise)
{
    if ((sgn_f1 > 0) && (sgn_f2 > 0))
    {
        in_direction_error = 0;
        error_direction = 0; //no error if both going positive (clockwise)
    }
    else
    {
        in_direction_error = 100;
        error_direction = 1; //error if one or more not going positive
    }
}

if (direction_rotation == 2) //check that both sides are going in negative direction (counter clockwise)
{
    if ((sgn_f1 < 0) && (sgn_f2 < 0))
    {
        in_direction_error = 0;
        error_direction = 0; //no error if both going negative (counter clock wise)
    }
    else
    {
        in_direction_error = 100;
        error_direction = 1; //error if one or more not going negative
    }
}

//Check for difference of frequency out of bounds error 
if (fabs(df_filtered) > df_tol)
{
    in_df_tol = 100;
    error_df = 1;
}
else
{
    in_df_tol = 0;
    error_df = 0;
}

//check for difference of theta out of bounds
if (fabs(dtheta_filtered) > dtheta_tol)
{
    in_dtheta_tol = 100;
    error_dtheta = 1;
}
else
{
    in_dtheta_tol = 0;
    error_dtheta = 0;
}


// check for difference of voltage out of bounds error
if (fabs(dv_filtered) > dv_tol)
{
    error_dv = 1;
    in_dv_tol = 100;
}
else
{
    error_dv = 0;
    in_dv_tol = 0;
}

//If sync_to_dead_val is high, synchronize to dead bus is enabled
if (sync_to_dead_val > 0.5)
{
    //below 10Vrms is considered a dead bus
    if (v1 < 10.0)
    {
        error_direction = 0;
        error_dtheta = 0;
        error_df = 0;
        error_dv = 0;
    }
}
/*End code section*/"
                                parameters = "int direction_rotation;real df_tol;real dv_tol;real dtheta_tol;real fbase;real vbase;real enable_error_filters;real filter_cutoff_Hz;real sync_to_dead_val;"
                            }
                            [
                                position = 8072, 8160
                                size = 144, 304
                            ]

                            component gen_probe in_dtheta_tol {
                            }
                            [
                                position = 8352, 8792
                            ]

                            port error_direction {
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8344, 8096
                            ]

                            port theta1_rad {
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7800, 8120
                            ]

                            port error_df {
                                position = right:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8480, 8160
                            ]

                            port dtheta_degrees {
                                position = right:7
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8264, 8328
                            ]

                            port error_dv {
                                position = right:3
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8336, 8176
                            ]

                            port error_dtheta {
                                position = right:4
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8472, 8240
                            ]

                            port enable {
                                label = "enable"
                                position = left:7
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7776, 8312
                            ]

                            port df {
                                position = right:5
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8368, 8264
                            ]

                            port dv {
                                position = right:6
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8344, 8344
                            ]

                            port v1_rms {
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7800, 8008
                            ]

                            port f2_Hz {
                                position = left:5
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7808, 8208
                            ]

                            port f1_Hz {
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7800, 8064
                            ]

                            port v2_rms {
                                position = left:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7856, 8160
                            ]

                            port theta2_rad {
                                position = left:6
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7824, 8264
                            ]

                            connect in_filter.in error_check.in_filter as Connection18
                            [
                                breakpoints = 8192, 8272
                            ]
                            connect error_check.in_df_tol in_df_tol.in as Connection16
                            [
                                breakpoints = 8216, 8232
                            ]
                            connect error_check.in_dv_tol in_dv_tol.in as Connection20
                            [
                                breakpoints = 8168, 8272
                            ]
                            connect error_check.error_direction error_direction as Connection10
                            connect error_check.f1 f1_Hz as Connection1
                            connect in_enable.in error_check.in_enable as Connection17
                            [
                                breakpoints = 8208, 8248
                            ]
                            connect error_check.theta1 theta1_rad as Connection7
                            connect error_check.error_dtheta error_dtheta as Connection3
                            connect error_check.error_dv error_dv as Connection6
                            connect enable error_check.enable_synchronizer as Connection12
                            connect error_check.theta2 theta2_rad as Connection11
                            connect error_check.f2 f2_Hz as Connection8
                            connect error_check.df_filtered df as Connection13
                            connect error_check.v1 v1_rms as Connection2
                            connect error_check.dtheta_filtered dtheta_degrees as Connection15
                            connect error_check.v2 v2_rms as Connection4
                            connect in_dtheta_tol.in error_check.in_dtheta_tol as Connection21
                            connect error_check.dv_filtered dv as Connection14
                            connect in_direction_error.in error_check.in_direction_error as Connection19
                            [
                                breakpoints = 8176, 8624; 8176, 8256
                            ]
                            connect error_check.error_df error_df as Connection9
                        }
                        [
                            position = 8520, 8280
                            size = 152, 192
                        ]

                        component gen_probe ok_dtheta {
                        }
                        [
                            position = 9256, 8032
                        ]

                        component gen_probe err_dir {
                        }
                        [
                            position = 8712, 7904
                        ]

                        component gen_probe err_df {
                        }
                        [
                            position = 8776, 7952
                        ]

                        component gen_probe debug {
                        }
                        [
                            position = 9048, 8432
                        ]

                        component gen_probe err_dv {
                        }
                        [
                            position = 8728, 8032
                        ]

                        component Subsystem error_ack {
                            layout = dynamic
                            component gen_c_function error_ack {
                                global_variables = "real ok_counter_dir;real ok_max_count;real not_ok_max_count;real ok_counter_df;real ok_counter_dv;real ok_counter_dtheta;real not_ok_counter_dir;real not_ok_counter_df;real not_ok_counter_dv;real not_ok_counter_dtheta;"
                                in_terminal_dimensions = "inherit;inherit;inherit;inherit;inherit"
                                in_terminal_dimensions_str = "error_direction inherit;error_df inherit;error_dv inherit;error_dtheta inherit;v_grid_rms_LL inherit"
                                in_terminal_labels = "[(\'error_direction\', True), (\'error_df\', True), (\'error_dv\', True), (\'error_dtheta\', True), (\'v_grid_rms_LL\', True)]"
                                in_terminal_properties = "real error_direction;real error_df;real error_dv;real error_dtheta;inherit v_grid_rms_LL;"
                                init_fnc = "/*Begin code section*/
ok_max_count = round(ok_time/execution_rate);
not_ok_max_count = round(not_ok_time/execution_rate);
ok_dir = 0;
ok_df = 0;
ok_dtheta = 0;
ok_dv = 0;
ok_counter_dir = ok_max_count;
not_ok_counter_dir = not_ok_max_count;
ok_counter_df = ok_max_count;
not_ok_counter_df = not_ok_max_count;
ok_counter_dv = ok_max_count;
not_ok_counter_dv = not_ok_max_count;
ok_counter_dtheta = ok_max_count;
not_ok_counter_dtheta = not_ok_max_count;
/*End code section*/"
                                no_feed_inputs = "[\'\']"
                                no_feed_outputs = "[\'\']"
                                out_terminal_dimensions = "inherit;inherit;inherit;inherit;inherit"
                                out_terminal_dimensions_str = "ok_dir inherit;ok_df inherit;ok_dv inherit;ok_dtheta inherit;debug inherit"
                                out_terminal_labels = "[(\'ok_dir\', True), (\'ok_df\', True), (\'ok_dv\', True), (\'ok_dtheta\', True), (\'debug\', True)]"
                                out_terminal_properties = "int ok_dir;int ok_df;int ok_dv;int ok_dtheta;int debug;"
                                output_fnc = "/*Begin code section*/
//f1, v1, theta1 = upstream; f2, v2, theta2 = downstream


debug = 100; //for debugging
//check for persistence in error_direction
if (error_direction == 0) //start a counter to ensure that direction error is persistently absent
{
    ok_counter_dir = ok_counter_dir - 1; 
    not_ok_counter_dir = not_ok_max_count; //user_selected wait time
    if (ok_counter_dir < 1)
    {
        ok_dir = 1; //asserts that directions of both Up and Down are OK
    }
}
else
{
    //a not_ok_counter is needed so we can ignore direction errors that are only briefly transient. This time should be much shorter than ok_time.
    not_ok_counter_dir = not_ok_counter_dir - 1;
    ok_counter_dir = ok_max_count; //reset ok_counter
    if (not_ok_counter_dir < 1)
    {
        ok_dir = 0;
    }
}


//check for persistence in error_df
if (error_df == 0) //start a counter to ensure that df error is persistently absent
{
    ok_counter_df = ok_counter_df - 1; 
    not_ok_counter_df = not_ok_max_count; //user_selected wait time
    if (ok_counter_df < 1)
    {
        ok_df = 1; //asserts that df between Up and Down are OK
    }
}
else
{
    //a not_ok_counter is needed so we can ignore frequency errors that are only briefly transient. This time should be much shorter than ok_time.
    not_ok_counter_df = not_ok_counter_df - 1;
    ok_counter_df = ok_max_count; //reset ok_counter
    if (not_ok_counter_df < 1)
    {
        ok_df = 0;
    }
}


//check for persistence in error_dv
if (error_dv == 0) //start a counter to ensure that dv error is persistently absent
{
    ok_counter_dv = ok_counter_dv - 1; 
    not_ok_counter_dv = not_ok_max_count; //user_selected wait time
    if (ok_counter_dv< 1)
    {
        ok_dv = 1; //asserts that dv of both Up and Down are OK
    }
}
else
{
    //a not_ok_counter is needed so we can ignore dv errors that are only briefly transient. This time should be much shorter than ok_time.
    not_ok_counter_dv = not_ok_counter_dv - 1;
    ok_counter_dv = ok_max_count; //reset ok_counter
    if (not_ok_counter_dv < 1)
    {
        ok_dv = 0;
    }
}    

//check for persistence in error_dtheta
if (error_dtheta == 0) //start a counter to ensure that dtheta error is persistently absent
{
    ok_counter_dtheta = ok_counter_dtheta - 1; 
    not_ok_counter_dtheta = not_ok_max_count; //user_selected wait time
    if (ok_counter_dtheta < 1)
    {
        ok_dtheta = 1; //asserts that dtheta of both Up and Down are OK
    }
}
else
{
    //a not_ok_counter is needed so we can ignore dtheta errors that are only briefly transient. This time should be much shorter than ok_time.
    not_ok_counter_dtheta = not_ok_counter_dtheta - 1;
    ok_counter_dtheta = ok_max_count; //reset ok_counter
    if (not_ok_counter_dtheta < 1)
    {
        ok_dtheta = 0;
    }
}

if (sync_to_dead_val > 0.5)
{
    if (v_grid_rms_LL < 10.0)
    {
        ok_dir = 1;
        ok_df = 1;
        ok_dv = 1;
        ok_dtheta = 1;
    }
}
/*End code section*/"
                                parameters = "real ok_time;real not_ok_time;real sync_to_dead_val;"
                            }
                            [
                                position = 8160, 8192
                                size = 64, 96
                            ]

                            port error_dv {
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8008, 8192
                            ]

                            port error_dtheta {
                                position = left:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8008, 8264
                            ]

                            port ok_dir {
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8312, 8056
                            ]

                            port ok_df {
                                position = right:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8400, 8176
                            ]

                            port ok_dv {
                                position = right:3
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8320, 8192
                            ]

                            port ok_dtheta {
                                position = right:4
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8400, 8256
                            ]

                            port debug {
                                position = right:4
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8304, 8304
                            ]

                            port error_direction {
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8008, 8072
                            ]

                            port error_df {
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8008, 8136
                            ]

                            port v_grid_rms_LL {
                                position = left:5
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8000, 8320
                            ]

                            connect error_ack.error_dtheta error_dtheta as Connection9
                            [
                                breakpoints = 8056, 8208; 8056, 8264
                            ]
                            connect error_ack.error_dv error_dv as Connection6
                            connect error_ack.ok_df ok_df as Connection8
                            connect error_ack.ok_dir ok_dir as Connection5
                            [
                                breakpoints = 8256, 8160; 8256, 8056
                            ]
                            connect error_ack.ok_dv ok_dv as Connection1
                            connect debug error_ack.debug as Connection10
                            [
                                breakpoints = 8256, 8304; 8256, 8224
                            ]
                            connect error_ack.ok_dtheta ok_dtheta as Connection4
                            [
                                breakpoints = 8280, 8208; 8280, 8256
                            ]
                            connect error_ack.error_df error_df as Connection3
                            [
                                breakpoints = 8056, 8176; 8056, 8136
                            ]
                            connect error_ack.error_direction error_direction as Connection7
                            [
                                breakpoints = 8096, 8160; 8096, 8072; 8040, 8072
                            ]
                            connect v_grid_rms_LL error_ack.v_grid_rms_LL as Connection11
                            [
                                breakpoints = 8072, 8288
                            ]
                        }
                        [
                            position = 8888, 8248
                            size = 112, 128
                        ]

                        component Subsystem controller {
                            layout = dynamic
                            component gen_c_function error_ack {
                                global_variables = "real speed_throttle_integral_k1;real voltage_throttle_integral_k1;real speed_throttle_integral;real voltage_throttle_integral;real offset_df;real actual_Kp;real actual_Ki;"
                                in_terminal_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit;inherit"
                                in_terminal_dimensions_str = "ok_df inherit;ok_dv inherit;ok_dtheta inherit;df inherit;dv inherit;dtheta inherit;enable_synchronizer inherit"
                                in_terminal_labels = "[(\'ok_df\', True), (\'ok_dv\', True), (\'ok_dtheta\', True), (\'df\', True), (\'dv\', True), (\'dtheta\', True), (\'enable_synchronizer\', True)]"
                                in_terminal_properties = "int ok_df;int ok_dv;int ok_dtheta;real df;real dv;real dtheta;real enable_synchronizer;"
                                init_fnc = "/*Begin code section*/
speed_throttle_integral_k1 = 0;
voltage_throttle_integral_k1 = 0;
speed_throttle_signal = 0.0;
voltage_throttle_signal = 0.0;
/*End code section*/"
                                no_feed_inputs = "[\'\']"
                                no_feed_outputs = "[\'\']"
                                out_terminal_dimensions = "inherit;inherit"
                                out_terminal_dimensions_str = "speed_throttle_signal inherit;voltage_throttle_signal inherit"
                                out_terminal_labels = "[(\'speed_throttle_signal\', True), (\'voltage_throttle_signal\', True)]"
                                out_terminal_properties = "real speed_throttle_signal;real voltage_throttle_signal;"
                                output_fnc = "/*Begin code section*/
//f1, v1, theta1 = upstream; f2, v2, theta2 = downstream

if (enable_synchronizer >= 0.5) //only run code if synchronizer enabled otherwise pass through  to end
{
    //PI control for df (backward euler discretization)
    if (ok_df == 0) //control df only if the freq error is out of tolerance
    {
        speed_throttle_integral = df*Ki_speed*execution_rate + speed_throttle_integral_k1; //Integral part of PI controller (backward euler)
        speed_throttle_signal = df*Kp_speed + speed_throttle_integral;  //Add proportional part.
        if (speed_throttle_signal > 1.0) //implement a clamp type anti-windup.
        {
            speed_throttle_signal = 1.0;
        }
        else if (speed_throttle_signal < -1.0)
        {
            speed_throttle_signal = -1.0;
        }
        else
        {
            speed_throttle_integral_k1 = speed_throttle_integral; //update history term if no saturation (clamp type antiwindup)
        }
    }


    //PI control for dtheta 
    if ((ok_dtheta == 0) && (ok_df == 1)) //control dtheta only if the theta error is out of tolerance and speed error is ok.
    {
        if (fabs(dtheta) >= 60.0)
        {
            actual_Ki = Ki_angle;
            actual_Kp = Kp_angle;
        }
        if (fabs(dtheta) < 60.0)
        {
            actual_Ki = Ki_angle*0.1;
            actual_Kp = Kp_angle*0.1;
        }
        if (fabs(dtheta) <= 10.0)
        {
            actual_Ki = Ki_angle*0.01;
            actual_Kp = Kp_angle*0.1;            
        }
        if (fabs(dtheta) < 1.0)
        {
            actual_Ki = Ki_angle*0.01;
            actual_Kp = Kp_angle*0.1;
        }

        //stop integrator when angle error is less than some small value to prevent oscillations.
        //if (fabs(dtheta) > dtheta_tol)
        
        speed_throttle_integral = (dtheta+0.5)*actual_Ki*execution_rate + speed_throttle_integral_k1; //Integral part of PI control (backward euler); per unitize angle error
        
        speed_throttle_signal = (dtheta+0.5)*actual_Kp + speed_throttle_integral; //add proportional part
        
        if (speed_throttle_signal > 1.0) //implement a clamp type anti-windup.
        {
            speed_throttle_signal = 1.0;
        }
        else if (speed_throttle_signal < -1.0)
        {
            speed_throttle_signal = -1.0;
        }
        else
        {
            speed_throttle_integral_k1 = speed_throttle_integral; //update history term if no saturation (clamp type antiwindup)
        }
        
        /*
        //experimenting with using constant values for correcting phase instead of PI which is challenging to tune
        
        offset_df = speed_throttle_integral_k1; //df/fbase;
        if (fabs(dtheta) >= 60.0)
        {
            speed_throttle_signal = 0.001;
        }
        if (fabs(dtheta) < 60.0)
        {
            speed_throttle_signal = 0.0005;
        }
        if (fabs(dtheta) <= 10.0)
        {
            speed_throttle_signal = 0.0001;
        }
        if (fabs(dtheta) < 1.0)
        {
            speed_throttle_signal = 0.0;
        }
        
        if (dtheta < 0.0)
        {
            speed_throttle_signal = fabs(speed_throttle_signal)*-1.0;
        }
        
        speed_throttle_signal = speed_throttle_signal + offset_df;
        
        if (speed_throttle_signal > 1.0) //implement a clamp type anti-windup.
        {
            speed_throttle_signal = 1.0;
        }
        else if (speed_throttle_signal < -1.0)
        {
            speed_throttle_signal = -1.0;
        }
        */
    }


    //PI control for dv
    if (ok_dv == 0) //control dv only if the voltage error is out of tolerance
    {
        voltage_throttle_integral = dv*Ki_voltage*execution_rate + voltage_throttle_integral_k1; //Integral part of PI control (backward euler)
        voltage_throttle_signal = dv*Kp_voltage + voltage_throttle_integral; //adding proportional part
        if (voltage_throttle_signal > 1.0) //saturation 
        {
            voltage_throttle_signal = 1.0;
        }
        else if (voltage_throttle_signal < -1.0)
        {
            voltage_throttle_signal = -1.0;
        }
        else
        {
            voltage_throttle_integral_k1 = voltage_throttle_integral;  //update history term if no saturation (clamp type antiwindup)
        }
    }
    
}
else
{
    speed_throttle_signal = 0;
    voltage_throttle_signal = 0;
    speed_throttle_integral_k1 = 0;
    voltage_throttle_integral_k1 = 0;
    
}
/*End code section*/"
                                parameters = "real Kp_speed;real Ki_speed;real Kp_angle;real Ki_angle;real Kp_voltage;real Ki_voltage;real fbase;real dtheta_tol;"
                            }
                            [
                                position = 8192, 8192
                                size = 48, 128
                            ]

                            port ok_df {
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8008, 7992
                            ]

                            port ok_dv {
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8000, 8072
                            ]

                            port ok_dtheta {
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8000, 8144
                            ]

                            port df {
                                position = left:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8000, 8224
                            ]

                            port dv {
                                position = left:5
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7992, 8328
                            ]

                            port enable {
                                position = left:7
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7992, 8464
                            ]

                            port dtheta_degrees {
                                position = left:6
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7992, 8400
                            ]

                            port speed_throttle_signal {
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8560, 8168
                            ]

                            port voltage_throttle_signal {
                                position = right:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8568, 8280
                            ]

                            connect enable error_ack.enable_synchronizer as Connection11
                            [
                                breakpoints = 8120, 8440
                            ]
                            connect error_ack.df df as Connection9
                            [
                                breakpoints = 8048, 8192
                            ]
                            connect error_ack.dv dv as Connection2
                            [
                                breakpoints = 8072, 8224; 8072, 8328
                            ]
                            connect error_ack.ok_df ok_df as Connection7
                            [
                                breakpoints = 8152, 7992; 8040, 7992
                            ]
                            connect error_ack.ok_dtheta ok_dtheta as Connection6
                            connect error_ack.ok_dv ok_dv as Connection3
                            [
                                breakpoints = 8120, 8160; 8120, 8072
                            ]
                            connect dtheta_degrees error_ack.dtheta as Connection10
                            [
                                breakpoints = 8096, 8392; 8096, 8224
                            ]
                            connect voltage_throttle_signal error_ack.voltage_throttle_signal as Connection24
                            connect speed_throttle_signal error_ack.speed_throttle_signal as Connection25
                        }
                        [
                            position = 9176, 8288
                            size = 160, 160
                        ]

                        component gen_probe w_throttle {
                        }
                        [
                            position = 9480, 8264
                        ]

                        component gen_probe v_throttle {
                        }
                        [
                            position = 9488, 8408
                        ]

                        port Enable_sync {
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7896, 8544
                        ]

                        port breaker_enable {
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9272, 8144
                        ]

                        port speed_throttle {
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9392, 8224
                        ]

                        port voltage_throttle {
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9392, 8352
                        ]

                        port f_Hz_gen {
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7896, 8096
                        ]

                        port f_Hz_grid {
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7896, 8184
                        ]

                        port wt_gen_rad {
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7896, 8264
                        ]

                        port wt_grid_rad {
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7896, 8344
                        ]

                        port v_ab_gen_rms {
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7896, 8400
                        ]

                        port v_ab_grid_rms {
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7896, 8464
                        ]

                        tag From1 {
                            value = "f_Hz_gen"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8344, 8304
                            hide_name = True
                            size = 81, 20
                        ]

                        tag Goto1 {
                            value = "f_Hz_gen"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8032, 8096
                            hide_name = True
                            size = 71, 20
                        ]

                        tag Goto2 {
                            value = "f_Hz_grid"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8024, 8184
                            hide_name = True
                            size = 75, 20
                        ]

                        tag Goto3 {
                            value = "wt_gen_rad"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8024, 8264
                            hide_name = True
                            size = 83, 20
                        ]

                        tag Goto4 {
                            value = "wt_grid_rad"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8024, 8344
                            hide_name = True
                            size = 83, 20
                        ]

                        tag Goto5 {
                            value = "v_ab_gen_rms"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8024, 8400
                            hide_name = True
                            size = 83, 20
                        ]

                        tag Goto6 {
                            value = "v_ab_grid_rms"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8024, 8464
                            hide_name = True
                            size = 83, 20
                        ]

                        tag Goto7 {
                            value = "en_sync"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8016, 8544
                            hide_name = True
                            size = 83, 20
                        ]

                        tag From2 {
                            value = "v_ab_gen_rms"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8344, 8280
                            hide_name = True
                            size = 85, 20
                        ]

                        tag From3 {
                            value = "v_ab_grid_rms"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8344, 8208
                            hide_name = True
                            size = 85, 20
                        ]

                        tag From4 {
                            value = "wt_gen_rad"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8344, 8328
                            hide_name = True
                            size = 85, 20
                        ]

                        tag From5 {
                            value = "wt_grid_rad"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8344, 8256
                            hide_name = True
                            size = 85, 20
                        ]

                        tag From6 {
                            value = "f_Hz_grid"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8344, 8232
                            hide_name = True
                            size = 85, 20
                        ]

                        tag From7 {
                            value = "en_sync"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8344, 8352
                            hide_name = True
                            size = 85, 20
                        ]

                        tag From9 {
                            value = "en_sync"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 9008, 8400
                            hide_name = True
                            size = 59, 20
                        ]

                        tag From10 {
                            value = "v_ab_grid_rms"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8744, 8304
                            hide_name = True
                            size = 85, 20
                        ]

                        junction Junction3 sp
                        [
                            position = 8976, 8232
                        ]

                        junction Junction4 sp
                        [
                            position = 8992, 8256
                        ]

                        junction Junction5 sp
                        [
                            position = 9008, 8280
                        ]

                        junction Junction6 sp
                        [
                            position = 8624, 8208
                        ]

                        junction Junction7 sp
                        [
                            position = 8648, 8232
                        ]

                        junction Junction8 sp
                        [
                            position = 8664, 8256
                        ]

                        junction Junction9 sp
                        [
                            position = 8688, 8280
                        ]

                        junction Junction10 sp
                        [
                            position = 8664, 8352
                        ]

                        junction Junction11 sp
                        [
                            position = 8728, 8368
                        ]

                        junction Junction13 sp
                        [
                            position = 8968, 8120
                        ]

                        junction Junction14 sp
                        [
                            position = 8976, 8136
                        ]

                        junction Junction15 sp
                        [
                            position = 8992, 8152
                        ]

                        junction Junction16 sp
                        [
                            position = 9008, 8168
                        ]

                        junction Junction25 sp
                        [
                            position = 8792, 8384
                        ]

                        junction Junction26 sp
                        [
                            position = 9320, 8224
                        ]

                        junction Junction27 sp
                        [
                            position = 9320, 8352
                        ]

                        comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt;">Detects if quantities </span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt;">(f,v,theta,direction) </span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt;">are out of specification</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt;">Will sync to dead bus </span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt;">if sync_to_dead is enabled</span></p></body></html> ENDCOMMENT 
                        [
                            position = 8432, 8408
                        ]

                        comment Comment2 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt;">Acknowledges the errors </span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt;">(f,v,theta,direction) if they </span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt;">persist after some time. </span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt;">Using a timer (counter) </span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt;">for this purpose.</span></p></body></html> ENDCOMMENT 
                        [
                            position = 8800, 8400
                        ]

                        comment Comment3 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt;">Uses a P.I. controller</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt;">to force the errors</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt;">(df, dv, dtheta) to 0        </span></p></body></html> ENDCOMMENT 
                        [
                            position = 9096, 8416
                        ]

                        comment Comment4 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">saturates at +/- 1.0</p></body></html> ENDCOMMENT 
                        [
                            position = 9336, 8168
                        ]

                        comment Comment5 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">saturates at +/- 1.0</p></body></html> ENDCOMMENT 
                        [
                            position = 9328, 8304
                        ]

                        connect err_dtheta.in Junction9 as Connection69
                        connect Junction14 Junction3 as Connection87
                        connect err_dv.in Junction8 as Connection66
                        connect error_ack.ok_dir Junction13 as Connection83
                        [
                            breakpoints = 8968, 8208
                        ]
                        connect Junction15 Junction4 as Connection90
                        connect error_ack.ok_df Junction3 as Connection48
                        connect Junction16 Junction5 as Connection93
                        connect error_ack.ok_dv Junction4 as Connection51
                        connect error_ack.ok_dtheta Junction5 as Connection54
                        connect error_detection.dv Junction11 as Connection77
                        [
                            breakpoints = 8640, 8328; 8656, 8368; 8656, 8368
                        ]
                        connect error_detection.dtheta_degrees Junction25 as Connection126
                        [
                            breakpoints = 8624, 8384
                        ]
                        connect Junction25 controller.dtheta_degrees as Connection127
                        [
                            breakpoints = 8792, 8384; 9000, 8384
                        ]
                        connect Junction4 controller.ok_dv as Connection52
                        connect error_detection.error_dtheta Junction9 as Connection67
                        connect error_detection.error_direction Junction6 as Connection58
                        connect Junction5 controller.ok_dtheta as Connection55
                        connect ok_df.in Junction14 as Connection88
                        connect Junction6 error_ack.error_direction as Connection59
                        connect ok_dir.in Junction13 as Connection85
                        connect Junction3 controller.ok_df as Connection49
                        connect controller.df Junction10 as Connection70
                        [
                            breakpoints = 8960, 8304; 8960, 8352
                        ]
                        connect Junction7 error_ack.error_df as Connection62
                        connect ok_dtheta.in Junction16 as Connection94
                        connect error_detection.error_df Junction7 as Connection61
                        connect Junction8 error_ack.error_dv as Connection65
                        connect ok_dv.in Junction15 as Connection91
                        connect Junction9 error_ack.error_dtheta as Connection68
                        [
                            breakpoints = 8768, 8280; 8768, 8264
                        ]
                        connect "Logical operator1.in1" Junction14 as Connection86
                        connect "Logical operator1.in2" Junction15 as Connection89
                        connect "Logical operator1.in3" Junction16 as Connection92
                        connect debug.in error_ack.debug as Connection95
                        connect "Logical operator1.out" breaker_enable as Connection57
                        connect df.in Junction10 as Connection72
                        connect Junction11 controller.dv as Connection78
                        [
                            breakpoints = 8984, 8368; 8984, 8328
                        ]
                        connect dtheta.in Junction25 as Connection128
                        connect Junction10 error_detection.df as Connection71
                        [
                            breakpoints = 8664, 8352; 8664, 8304
                        ]
                        connect err_df.in Junction7 as Connection63
                        connect Junction13 "Logical operator1.in" as Connection84
                        connect error_detection.error_dv Junction8 as Connection64
                        connect dv.in Junction11 as Connection79
                        [
                            breakpoints = 8728, 8488
                        ]
                        connect err_dir.in Junction6 as Connection60
                        connect f_Hz_gen Goto1 as Connection129
                        connect f_Hz_grid Goto2 as Connection130
                        connect wt_gen_rad Goto3 as Connection131
                        connect wt_grid_rad Goto4 as Connection132
                        connect v_ab_gen_rms Goto5 as Connection133
                        connect v_ab_grid_rms Goto6 as Connection134
                        connect Enable_sync Goto7 as Connection135
                        connect From7 error_detection.enable as Connection142
                        connect From9 controller.enable as Connection144
                        connect speed_throttle Junction26 as Connection145
                        connect Junction26 controller.speed_throttle_signal as Connection146
                        [
                            breakpoints = 9320, 8224; 9272, 8224
                        ]
                        connect w_throttle.in Junction26 as Connection147
                        connect controller.voltage_throttle_signal Junction27 as Connection148
                        connect Junction27 voltage_throttle as Connection149
                        connect v_throttle.in Junction27 as Connection150
                        connect From4 error_detection.theta2_rad as Connection151
                        connect From1 error_detection.f2_Hz as Connection152
                        connect From2 error_detection.v2_rms as Connection153
                        connect From3 error_detection.v1_rms as Connection154
                        connect From6 error_detection.f1_Hz as Connection155
                        connect error_detection.theta1_rad From5 as Connection156
                        connect From10 error_ack.v_grid_rms_LL as Connection157
                        [
                            breakpoints = 8808, 8288
                        ]

                        dtheta_tol = "2.5"
                        vbase = "440"

                        mask {
                            description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">Synchronize two three phase voltage sources. Upstream is the reference; throttle signals attempt to change downstream voltage and speed to match upstream voltage and speed.</span></p><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">Rotation direction:</span></p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">0 = Both upstream and downstream sources must be rotating in the same direction, irrespective of the specific direction.</span></p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">1 = Both upstream and downstream sources must be rotating in the clockwise sense.</span></p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">2 = Both upstream and downstream sources must be rotating in the anti-clockwise sense.</span></p><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">Enable error filters:</span></p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">0 = Error signals (df, dv, dtheta) are passed directly from measurement</span></p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">1 = Error signals are filtered with 1st order low pass; cutoff specified in \'filter cutoff frequency\'</span></p></body></html>"

                            direction_rotation {
                                label = "Rotation direction"
                                widget = combo
                                combo_values = "0", "1", "2"
                                type = string
                                default_value = "0"
                                group = "Error Check"
                                no_evaluate
                            }

                            df_tol {
                                label = "Frequency deviation tolerance"
                                widget = edit
                                type = generic
                                default_value = "0.1"
                                unit = "%"
                                group = "Error Check"
                            }

                            dv_tol {
                                label = "Voltage deviation tolerance"
                                widget = edit
                                type = generic
                                default_value = "1"
                                unit = "%"
                                group = "Error Check"
                            }

                            dtheta_tol {
                                label = "Angle deviation tolerance"
                                widget = edit
                                type = generic
                                default_value = "1"
                                unit = "degrees"
                                group = "Error Check"
                            }

                            fbase {
                                label = "Frequency base"
                                widget = edit
                                type = generic
                                default_value = "60"
                                unit = "Hz"
                                group = "Error Check"
                            }

                            vbase {
                                label = "Voltage base"
                                widget = edit
                                type = generic
                                default_value = "480.0"
                                unit = "Vrms"
                                group = "Error Check"
                            }

                            enable_error_filters {
                                label = "Enable error filters"
                                widget = combo
                                combo_values = "0", "1"
                                type = string
                                default_value = "1"
                                group = "Error Check"
                                no_evaluate
                            }

                            filter_cutoff_Hz {
                                label = "Filter cutoff frequency"
                                widget = edit
                                type = generic
                                default_value = "10.0"
                                unit = "Hz"
                                group = "Error Check"
                            }

                            Kp_speed {
                                label = "Proportional gain for speed throttle"
                                widget = edit
                                type = generic
                                default_value = "1e-3"
                                group = "Throttling"
                            }

                            Ki_speed {
                                label = "Integral gain for speed throttle"
                                widget = edit
                                type = generic
                                default_value = "1e-3"
                                group = "Throttling"
                            }

                            ok_time {
                                label = "Minimum persist time for synchronization"
                                widget = edit
                                type = generic
                                default_value = "0.5"
                                unit = "s"
                                group = "Error acknowledge"
                            }

                            not_ok_time {
                                label = "Minimum persist time for unsynchronization"
                                widget = edit
                                type = generic
                                default_value = "0.1"
                                unit = "s"
                                group = "Error acknowledge"
                            }

                            Kp_angle {
                                label = "Proportional gain for angle throttle"
                                widget = edit
                                type = generic
                                default_value = "1e-4"
                                group = "Throttling"
                            }

                            Ki_angle {
                                label = "Integral gain for angle throttle"
                                widget = edit
                                type = generic
                                default_value = "1e-5"
                                group = "Throttling"
                            }

                            Kp_voltage {
                                label = "Proportional gain for voltage throttle"
                                widget = edit
                                type = generic
                                default_value = "0"
                                group = "Throttling"
                            }

                            Ki_voltage {
                                label = "Integral gain for voltage throttle"
                                widget = edit
                                type = generic
                                default_value = "0.01"
                                group = "Throttling"
                            }

                            sync_to_dead {
                                label = "Sync to dead bus"
                                widget = checkbox
                                type = bool
                                default_value = "True"
                                group = "Error Check"
                                no_evaluate
                            }

                            CODE open
                                from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                            
                                dialog = RegularComponentPropertiesDialog(
                                    component=component,
                                    property_container=component.masks[-1],
                                    current_diagram=current_diagram
                                )
                                dialog.exec_()
                                
                            ENDCODE

                            CODE pre_compile
                                # HEADER START
                                direction_rotation = mdl.get_property_value(mdl.prop(item_handle, "direction_rotation"))
                                df_tol = mdl.get_property_value(mdl.prop(item_handle, "df_tol"))
                                dv_tol = mdl.get_property_value(mdl.prop(item_handle, "dv_tol"))
                                dtheta_tol = mdl.get_property_value(mdl.prop(item_handle, "dtheta_tol"))
                                fbase = mdl.get_property_value(mdl.prop(item_handle, "fbase"))
                                vbase = mdl.get_property_value(mdl.prop(item_handle, "vbase"))
                                enable_error_filters = mdl.get_property_value(mdl.prop(item_handle, "enable_error_filters"))
                                filter_cutoff_Hz = mdl.get_property_value(mdl.prop(item_handle, "filter_cutoff_Hz"))
                                Kp_speed = mdl.get_property_value(mdl.prop(item_handle, "Kp_speed"))
                                Ki_speed = mdl.get_property_value(mdl.prop(item_handle, "Ki_speed"))
                                ok_time = mdl.get_property_value(mdl.prop(item_handle, "ok_time"))
                                not_ok_time = mdl.get_property_value(mdl.prop(item_handle, "not_ok_time"))
                                Kp_angle = mdl.get_property_value(mdl.prop(item_handle, "Kp_angle"))
                                Ki_angle = mdl.get_property_value(mdl.prop(item_handle, "Ki_angle"))
                                Kp_voltage = mdl.get_property_value(mdl.prop(item_handle, "Kp_voltage"))
                                Ki_voltage = mdl.get_property_value(mdl.prop(item_handle, "Ki_voltage"))
                                sync_to_dead = mdl.get_property_value(mdl.prop(item_handle, "sync_to_dead"))
                                # HEADER STOP
                                sync_to_dead_val = 0.0
                                if (sync_to_dead):
                                    sync_to_dead_val = 1.0
                                
                            ENDCODE
                        }
                    }
                    [
                        position = 8304, 9168
                        size = 152, 240
                    ]

                    component src_scada_input "en_sync(manual)" {
                        execution_rate = "Tfast"
                        max = "1"
                        min = "0"
                        unit = ""
                    }
                    [
                        position = 8080, 9344
                    ]

                    component src_scada_input w_bias_pu {
                        execution_rate = "T_engine"
                        max = "1"
                        min = "-1"
                        unit = "pu"
                    }
                    [
                        position = 7928, 8160
                    ]

                    component src_scada_input v_bias_pu {
                        execution_rate = "Tfast"
                        max = "1"
                        min = "-1"
                        unit = "pu"
                    }
                    [
                        position = 8000, 8464
                    ]

                    component Subsystem phasor_units {
                        layout = dynamic
                        component msr_phasor_3ph "Three Phase Phasor1" {
                        }
                        [
                            position = 8208, 8184
                        ]

                        component gen_bus_split "Bus Split2" {
                            outputs = "3"
                        }
                        [
                            position = 8048, 8472
                            hide_name = True
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "3"
                        }
                        [
                            position = 8048, 8192
                            hide_name = True
                        ]

                        component msr_phasor_3ph "Three Phase Phasor2" {
                        }
                        [
                            position = 8208, 8464
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8408, 8176
                            hide_name = True
                        ]

                        component gen_terminator Termination2 {
                        }
                        [
                            position = 8368, 8192
                            hide_name = True
                        ]

                        component gen_terminator Termination3 {
                        }
                        [
                            position = 8328, 8208
                            hide_name = True
                        ]

                        component gen_terminator Termination4 {
                        }
                        [
                            position = 8288, 8224
                            hide_name = True
                        ]

                        component gen_terminator Termination5 {
                        }
                        [
                            position = 8320, 8488
                            hide_name = True
                        ]

                        component gen_terminator Termination6 {
                        }
                        [
                            position = 8368, 8472
                            hide_name = True
                        ]

                        component gen_terminator Termination7 {
                        }
                        [
                            position = 8400, 8456
                            hide_name = True
                        ]

                        component gen_terminator Termination8 {
                        }
                        [
                            position = 8288, 8504
                            hide_name = True
                        ]

                        component gen_probe v_rms_gen_ {
                        }
                        [
                            position = 8488, 8072
                        ]

                        component gen_probe v_rms_grid_ {
                        }
                        [
                            position = 8512, 8312
                        ]

                        component gen_probe phase_a_grid_ {
                        }
                        [
                            position = 8544, 8472
                        ]

                        component gen_probe phase_a_gen_ {
                        }
                        [
                            position = 8536, 8240
                        ]

                        port v_rms_gen {
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8488, 8144
                        ]

                        port vabc_LL_gen {
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7928, 8192
                        ]

                        port vabc_LL_grid {
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7920, 8472
                        ]

                        port phase_a_gen {
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8488, 8192
                        ]

                        port v_rms_grid {
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8464, 8368
                        ]

                        port phase_a_grid {
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8536, 8416
                        ]

                        junction Junction1 sp
                        [
                            position = 8128, 8176
                        ]

                        junction Junction2 sp
                        [
                            position = 8096, 8176
                        ]

                        junction Junction3 sp
                        [
                            position = 8408, 8144
                        ]

                        junction Junction4 sp
                        [
                            position = 8400, 8368
                        ]

                        junction Junction5 sp
                        [
                            position = 8472, 8416
                        ]

                        junction Junction6 sp
                        [
                            position = 8440, 8192
                        ]

                        connect vabc_LL_grid "Bus Split2.in" as Connection2009
                        connect vabc_LL_gen "Bus Split1.in" as Connection2007
                        connect "Bus Split1.out1" "Three Phase Phasor1.in2" as Connection2011
                        connect "Three Phase Phasor1.in3" "Bus Split1.out2" as Connection2012
                        connect Junction1 "Three Phase Phasor1.in1" as Connection2014
                        connect "Three Phase Phasor1.in_ref" Junction1 as Connection2015
                        connect "Bus Split2.out2" "Three Phase Phasor2.in3" as Connection2016
                        connect "Three Phase Phasor2.in2" "Bus Split2.out1" as Connection2017
                        connect "Bus Split2.out" "Three Phase Phasor2.in1" as Connection2018
                        connect "Bus Split1.out" Junction2 as Connection2019
                        connect Junction2 Junction1 as Connection2020
                        connect "Three Phase Phasor2.in_ref" Junction2 as Connection2021
                        connect "Three Phase Phasor1.out2" Termination1.in as Connection2024
                        connect "Three Phase Phasor1.phase2" Termination2.in as Connection2025
                        connect "Three Phase Phasor1.out3" Termination3.in as Connection2026
                        connect Termination4.in "Three Phase Phasor1.phase3" as Connection2027
                        connect "Three Phase Phasor2.phase3" Termination8.in as Connection2028
                        connect "Three Phase Phasor2.out3" Termination5.in as Connection2029
                        connect "Three Phase Phasor2.phase2" Termination6.in as Connection2030
                        connect Termination7.in "Three Phase Phasor2.out2" as Connection2031
                        connect "Three Phase Phasor1.out1" Junction3 as Connection2034
                        connect Junction3 v_rms_gen as Connection2035
                        connect v_rms_gen_.in Junction3 as Connection2036
                        connect "Three Phase Phasor2.out1" Junction4 as Connection2037
                        [
                            breakpoints = 8248, 8368
                        ]
                        connect Junction4 v_rms_grid as Connection2038
                        [
                            breakpoints = 8432, 8368
                        ]
                        connect v_rms_grid_.in Junction4 as Connection2039
                        connect "Three Phase Phasor2.phase1" Junction5 as Connection2040
                        connect Junction5 phase_a_grid as Connection2041
                        connect phase_a_grid_.in Junction5 as Connection2042
                        connect "Three Phase Phasor1.phase1" Junction6 as Connection2043
                        [
                            breakpoints = 8440, 8160
                        ]
                        connect Junction6 phase_a_gen as Connection2044
                        [
                            breakpoints = 8440, 8192
                        ]
                        connect phase_a_gen_.in Junction6 as Connection2045
                    }
                    [
                        position = 8304, 8928
                        size = 152, 144
                    ]

                    component gen_c_function "genset state machine" {
                        global_variables = "real engine_exc_settle_time;real counter1;real en_w_ctrl_var;real en_v_ctrl_var;real en_p_ctrl_var;real en_q_ctrl_var;real en_sync_var;real en_GCB_var;real sync_settle_time;real start_k1;"
                        in_terminal_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit"
                        in_terminal_dimensions_str = "start inherit;mode inherit;sync_fdback inherit;GCB_fdback inherit;genset_error inherit;n_rpm inherit;n_rpm_ref inherit;stop inherit;v_rms inherit;v_rms_ref inherit"
                        in_terminal_labels = "[(\'start\', True), (\'mode\', True), (\'sync_fdback\', True), (\'GCB_fdback\', True), (\'genset_error\', True), (\'n_rpm\', True), (\'n_rpm_ref\', True), (\'stop\', True), (\'v_rms\', True), (\'v_rms_ref\', True)]"
                        in_terminal_properties = "real start;inherit mode;inherit sync_fdback;inherit GCB_fdback;inherit genset_error;inherit n_rpm;inherit n_rpm_ref;inherit stop;inherit v_rms;inherit v_rms_ref;"
                        init_fnc = "/*Begin code section*/
engine_exc_settle_time = 1.0/execution_rate;
sync_settle_time = 1.0/execution_rate;
en_w_ctrl_var = 0;
en_v_ctrl_var = 0;
en_p_ctrl_var = 0;
en_q_ctrl_var = 0;
en_sync_var = 0;
en_GCB_var = 0;
counter1 = 0;
error_msg_var = 0;
state = -1;
start_k1 = 0;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit"
                        out_terminal_dimensions_str = "en_w_ctrl inherit;en_v_ctrl inherit;en_p_ctrl inherit;en_q_ctrl inherit;en_sync inherit;en_GCB inherit;state inherit;error_msg_var inherit"
                        out_terminal_labels = "[(\'en_w_ctrl\', True), (\'en_v_ctrl\', True), (\'en_p_ctrl\', True), (\'en_q_ctrl\', True), (\'en_sync\', True), (\'en_GCB\', True), (\'state\', True), (\'error_msg_var\', True)]"
                        out_terminal_properties = "real en_w_ctrl;inherit en_v_ctrl;inherit en_p_ctrl;inherit en_q_ctrl;inherit en_sync;inherit en_GCB;int state;int error_msg_var;"
                        output_fnc = "/*Begin code section*/
en_w_ctrl = en_w_ctrl_var;
en_v_ctrl = en_v_ctrl_var;
en_p_ctrl = en_p_ctrl_var;
en_q_ctrl = en_q_ctrl_var;
en_sync = en_sync_var;
en_GCB = en_GCB_var;
/*End code section*/"
                        update_fnc = "/*Begin code section*/
if ((start - start_k1) > 0.5) //catch rising edge of start signal
{
    //goto stop state if genset error
    if (genset_error > 0)
    {
        state = -1;
    }
    else
    {
        //running
        if (mode == 0)
        {
            //go to standby state
            state = 0;
        }
        else
        {
            //go to other states
            state = 1;
        }
    }
}
start_k1 = start;

if (stop > 0.5)
{
    //stop state
    state = -1;
    error_msg_var = 0;
    counter1 = 0;
}


switch (state)
{
    case -1:
        {
            //Stop state
            en_w_ctrl_var = 0;
            en_v_ctrl_var = 0;
            en_p_ctrl_var = 0;
            en_q_ctrl_var = 0;
            en_sync_var = 0;
            en_GCB_var = 0;
            counter1 = 0;
        }
        break;
    case 0:
        {
            //Idle or Running-on-Standby state
            en_w_ctrl_var = 1;
            en_v_ctrl_var = 1;
            en_p_ctrl_var = 0;
            en_q_ctrl_var = 0;
            en_sync_var = 0;
            en_GCB_var = 0;
            
            //goto run states if mode is changed
            if (mode > 0)
            {
                state = 1;
            }
        }
        break;
    case 1:
        {
            //pre-cursor to v-f control / P-v control / P-Q control
            en_w_ctrl_var = 1; //start engine
            en_v_ctrl_var = 1; //start exciter
            en_p_ctrl_var = 0;
            en_q_ctrl_var = 0;
            en_sync_var = 0;
            en_GCB_var = 0; //open breaker
            
            //wait for engine and exciter to settle
            counter1 = counter1 + 1;
            if (counter1 > engine_exc_settle_time)
            {
                if ((n_rpm >= n_rpm_ref*0.99) && (n_rpm <= n_rpm_ref*1.01) && (v_rms >= v_rms_ref*0.99) && (v_rms <= v_rms_ref*1.01))
                {
                    state = 2; //go to sync state
                    counter1 = 0;
                }
            }
        }
        break;
        
    case 2:
        {
            // synchronization state
            en_sync_var = 1;
            
            //wait for sync to take effect
            counter1 = counter1 + 1;
            if (counter1 > sync_settle_time)
            {
                if (sync_fdback > 0.5)
                {
                    //Send command to close GCB if Genset is synced
                    en_GCB_var = 1; //close GCB
                }
                
                if (GCB_fdback > 0.5)
                {
                    //Disable synchronizer if GCB is closed and go to next state
                    en_sync_var = 0;
                    state = 3;
                    counter1 = 0;
                }
            }
        }
        break;
    case 3:
        {
            // normal run state  state
            
            if (mode == 1)
            {
                //v-f control
                en_w_ctrl_var = 1;
                en_v_ctrl_var = 1;
                en_p_ctrl_var = 0;
                en_q_ctrl_var = 0;
            }
            if (mode == 2)
            {
                //P-v control
                en_w_ctrl_var = 1;
                en_v_ctrl_var = 1;
                en_p_ctrl_var = 1;
                en_q_ctrl_var = 0;
            }
            if (mode == 3)
            {
                //P-Q control
                en_w_ctrl_var = 1;
                en_v_ctrl_var = 1;
                en_p_ctrl_var = 1;
                en_q_ctrl_var = 1;
            }
        }
        break;
        
    default:
        //should never get here
        error_msg_var = 1000; //something wrong with state machine
}

//goto stop state if genset error
if (genset_error > 0)
{
    state = -1;
}
/*End code section*/"
                    }
                    [
                        position = 8432, 7616
                        size = 152, 312
                    ]

                    component gen_sum Sum1 {
                        signs = "4"
                    }
                    [
                        position = 8176, 8200
                        hide_name = True
                    ]

                    component gen_sum Sum2 {
                        signs = "4"
                    }
                    [
                        position = 8208, 8488
                        hide_name = True
                    ]

                    component gen_gain Gain1 {
                        gain = "np.pi/180.0"
                    }
                    [
                        position = 8072, 9136
                        hide_name = True
                    ]

                    component gen_gain Gain2 {
                        gain = "np.pi/180.0"
                    }
                    [
                        position = 8112, 9168
                        hide_name = True
                    ]

                    component Subsystem "P controller" {
                        layout = dynamic
                        component gen_gain Gain1 {
                            gain = "1.0/P_gen_rating_kW"
                        }
                        [
                            position = 8304, 8136
                            hide_name = True
                        ]

                        component Subsystem pid_controller {
                            layout = dynamic
                            component gen_limiter Limit2 {
                                lower_limit = "-1"
                                upper_limit = "1"
                            }
                            [
                                position = 8368, 8192
                            ]

                            component gen_product Product8 {
                            }
                            [
                                position = 8160, 7936
                                hide_name = True
                            ]

                            component gen_integrator Integrator1 {
                                limit_lower = "-1"
                                limit_output = "True"
                                limit_upper = "1"
                                show_reset = "level"
                            }
                            [
                                position = 8344, 8088
                                hide_name = True
                            ]

                            component gen_limiter Limit1 {
                                lower_limit = "-1"
                                upper_limit = "1"
                            }
                            [
                                position = 8296, 7936
                            ]

                            component gen_sum Sum14 {
                                signs = "3"
                            }
                            [
                                position = 8528, 7952
                                hide_name = True
                            ]

                            component gen_product Product9 {
                            }
                            [
                                position = 8168, 8080
                                hide_name = True
                            ]

                            component gen_product Product14 {
                            }
                            [
                                position = 7992, 8192
                                hide_name = True
                            ]

                            component gen_rate_limiter "Rate Limiter1" {
                                falling_limit = "-100"
                                rising_limit = "100"
                            }
                            [
                                position = 7376, 7824
                                hide_name = True
                            ]

                            component sys_signal_switch "Signal switch1" {
                                threshold = "0.5"
                            }
                            [
                                position = 8744, 7936
                                hide_name = True
                            ]

                            component gen_sum Sum8 {
                                signs = "+-"
                            }
                            [
                                position = 7616, 7872
                                hide_name = True
                            ]

                            component gen_z_domain_transfer deriv {
                                a_coeff = "[1.0/(2.0*np.pi*100.0),1.0]"
                                b_coeff = "[1.0, 0.0]"
                                domain = "S-domain"
                                method = "Bilinear"
                            }
                            [
                                position = 8088, 8192
                            ]

                            component src_constant Constant1 {
                                execution_rate = "T_engine"
                                value = "0"
                            }
                            [
                                position = 8680, 7896
                                hide_name = True
                            ]

                            component gen_logic_op "Logical operator4" {
                                operator = "NOT"
                            }
                            [
                                position = 7240, 8048
                                hide_name = True
                            ]

                            component gen_limiter Limit3 {
                                lower_limit = "-1"
                                upper_limit = "1"
                            }
                            [
                                position = 8616, 7952
                            ]

                            component gen_sum Sum15 {
                                signs = "+-"
                            }
                            [
                                position = 8720, 8032
                                hide_name = True
                            ]

                            component gen_sum Sum16 {
                                signs = "+-"
                            }
                            [
                                position = 8080, 8040
                                hide_name = True
                            ]

                            port ki {
                                position = left:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7880, 8088
                            ]

                            port dP_bias {
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8928, 7936
                            ]

                            port Enable {
                                position = left:7
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7144, 8000
                            ]

                            port kp {
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7880, 7944
                            ]

                            port ref {
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7288, 7824
                            ]

                            port kd {
                                position = left:5
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7880, 8200
                            ]

                            port fdbck {
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 7880
                            ]

                            tag Goto2 {
                                value = "enable"
                                scope = local
                                kind = sp
                                direction = in
                            }
                            [
                                position = 7240, 8000
                                hide_name = True
                                size = 0, 0
                            ]

                            tag Goto3 {
                                value = "disable"
                                scope = local
                                kind = sp
                                direction = in
                            }
                            [
                                position = 7328, 8048
                                hide_name = True
                                size = 0, 0
                            ]

                            tag From6 {
                                value = "disable"
                                scope = local
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8248, 8104
                                hide_name = True
                                size = 0, 0
                            ]

                            tag From7 {
                                value = "disable"
                                scope = local
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8672, 7864
                                hide_name = True
                                size = 0, 0
                            ]

                            junction Junction359 sp
                            [
                                position = 7176, 8000
                            ]

                            junction Junction363 sp
                            [
                                position = 8576, 7952
                            ]

                            junction Junction364 sp
                            [
                                position = 8672, 7952
                            ]

                            junction Junction365 sp
                            [
                                position = 7984, 7872
                            ]

                            junction Junction366 sp
                            [
                                position = 7944, 7872
                            ]

                            connect From6 Integrator1.reset as Connection2025
                            connect Sum14.in Limit1.out as Connection1992
                            connect kp Product8.in1 as Connection1997
                            connect Product9.out Integrator1.in as Connection288
                            connect kd Product14.in1 as Connection1998
                            connect "Rate Limiter1.in" ref as Connection2039
                            connect ki Product9.in1 as Connection1999
                            connect Limit2.in deriv.out as Connection1995
                            connect fdbck Sum8.in1 as Connection1502
                            connect Junction359 Goto2 as Connection2015
                            connect Limit1.in Product8.out as Connection1993
                            connect "Rate Limiter1.out" Sum8.in as Connection2040
                            connect "Logical operator4.out" Goto3 as Connection2017
                            connect Constant1.out "Signal switch1.in" as Connection333
                            connect Enable Junction359 as Connection2014
                            connect "Logical operator4.in" Junction359 as Connection2016
                            connect From7 "Signal switch1.in2" as Connection2026
                            connect dP_bias "Signal switch1.out" as Connection1991
                            [
                                breakpoints = 8856, 7936
                            ]
                            connect Sum14.in1 Integrator1.out as Connection1979
                            connect Product14.out deriv.in as Connection1938
                            connect Sum14.in2 Limit2.out as Connection1994
                            [
                                breakpoints = 8440, 7968; 8440, 8192
                            ]
                            connect Limit3.in Junction363 as Connection2043
                            connect Junction363 Sum14.out as Connection2044
                            connect Sum15.in Junction363 as Connection2045
                            connect Limit3.out Junction364 as Connection2047
                            connect Junction364 "Signal switch1.in1" as Connection2048
                            connect Sum15.in1 Junction364 as Connection2049
                            connect Sum16.out Product9.in as Connection2051
                            connect Junction365 Product8.in as Connection2053
                            [
                                breakpoints = 8112, 7928
                            ]
                            connect Sum16.in Junction365 as Connection2054
                            [
                                breakpoints = 7984, 8032; 7984, 7880
                            ]
                            connect Sum8.out Junction366 as Connection2056
                            connect Junction366 Junction365 as Connection2057
                            connect Product14.in Junction366 as Connection2058
                            connect Sum15.out Sum16.in1 as Connection2059
                            [
                                breakpoints = 8384, 8152; 8040, 8152; 8040, 8072
                            ]
                        }
                        [
                            position = 8544, 8224
                            size = 96, 224
                        ]

                        component gen_gain Gain2 {
                            gain = "1.0/P_gen_rating_kW"
                        }
                        [
                            position = 8352, 8168
                            hide_name = True
                        ]

                        component src_scada_input kp_P {
                            execution_rate = "T_engine"
                            unit = ""
                        }
                        [
                            position = 8400, 8200
                        ]

                        component gen_probe dP_bias_pu_ {
                        }
                        [
                            position = 8704, 8264
                        ]

                        component src_scada_input kd_P {
                            execution_rate = "T_engine"
                            unit = ""
                        }
                        [
                            position = 8272, 8264
                        ]

                        component src_scada_input P_ref_kW {
                            def_value = "0.0"
                            execution_rate = "T_engine"
                            min = "0"
                            unit = "kW"
                        }
                        [
                            position = 7792, 8080
                        ]

                        component src_scada_input ki_P {
                            execution_rate = "T_engine"
                            unit = ""
                        }
                        [
                            position = 8176, 8240
                        ]

                        component gen_gain Gain5 {
                            gain = "1e-3"
                        }
                        [
                            position = 8264, 8168
                            hide_name = True
                        ]

                        component src_scada_input rise_fall_rate_P_kWps {
                            def_value = "10.0"
                            execution_rate = "T_engine"
                            unit = "kW/s"
                        }
                        [
                            position = 7792, 8152
                        ]

                        component gen_gain Gain6 {
                            gain = "-1"
                        }
                        [
                            position = 7920, 8200
                            hide_name = True
                        ]

                        component gen_c_function "rate limiter" {
                            global_variables = "real rate;"
                            in_terminal_dimensions = "inherit;inherit;inherit"
                            in_terminal_dimensions_str = "in inherit;rise_rate inherit;fall_rate inherit"
                            in_terminal_labels = "[(\'in\', True), (\'rise_rate\', True), (\'fall_rate\', True)]"
                            in_terminal_properties = "real in;inherit rise_rate;inherit fall_rate;"
                            no_feed_inputs = "[\'\']"
                            no_feed_outputs = "[\'\']"
                            out_terminal_dimensions = "inherit"
                            out_terminal_dimensions_str = "out inherit"
                            out_terminal_labels = "[(\'out\', True)]"
                            output_fnc = "/*Begin code section*/
rate = (in - out)/execution_rate;
if (rate > rise_rate)
{
    rate = rise_rate;
}
else if (rate < fall_rate)
{
    rate = fall_rate;
}
out = out + rate*execution_rate;
/*End code section*/"
                        }
                        [
                            position = 8016, 8136
                            size = 88, 80
                        ]

                        component lut_1d "1D look-up table1" {
                            in_vec_x = "[0.0, 1.0, P_gen_rating_kW]"
                            out_vec_f_x = "[1.0, 0.1, 0.0]"
                        }
                        [
                            position = 8136, 7984
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8224, 7984
                        ]

                        component gen_limiter Limit1 {
                            lower_limit = "0.0"
                            upper_limit = "P_gen_rating_kW"
                        }
                        [
                            position = 7904, 8080
                            hide_name = True
                        ]

                        component gen_probe P_ref_rt_ltd {
                        }
                        [
                            position = 8112, 8168
                        ]

                        component gen_probe P_ref {
                        }
                        [
                            position = 7992, 8040
                        ]

                        port P_gen {
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7456, 8104
                        ]

                        port en {
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7456, 8160
                        ]

                        port dP_bias_pu {
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8680, 8216
                        ]

                        port rate_limit_kWps {
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8704, 8448
                        ]

                        tag From4 {
                            value = "P_gen"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8184, 8168
                            hide_name = True
                        ]

                        tag From2 {
                            value = "en"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8376, 8296
                            hide_name = True
                            size = 57, 20
                        ]

                        tag Goto5 {
                            value = "en"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7568, 8160
                            hide_name = True
                        ]

                        tag Goto6 {
                            value = "P_gen"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7568, 8104
                            hide_name = True
                            size = 59, 20
                        ]

                        tag From6 {
                            value = "rate_limit_kWps"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8568, 8448
                            hide_name = True
                            size = 142, 20
                        ]

                        tag Goto8 {
                            value = "rate_limit_kWps"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7936, 8240
                            hide_name = True
                            size = 100, 20
                        ]

                        junction Junction1 sp
                        [
                            position = 8640, 8216
                        ]

                        junction Junction2 sp
                        [
                            position = 7864, 8152
                        ]

                        junction Junction3 sp
                        [
                            position = 8096, 8136
                        ]

                        junction Junction4 sp
                        [
                            position = 7864, 8200
                        ]

                        junction Junction5 sp
                        [
                            position = 8080, 8136
                        ]

                        junction Junction6 sp
                        [
                            position = 7952, 8080
                        ]

                        comment Comment2 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">When Inverter (ESM) is grid-forming,</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">GENSET power controller requires high Ki</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">and High Kp at low load, and</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">low Ki and Kp at high load.</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">This needs to be understood better.</span></p></body></html> ENDCOMMENT 
                        [
                            position = 8200, 8032
                        ]

                        connect Gain2.out pid_controller.fdbck as Connection81
                        connect en Goto5 as Connection113
                        connect From2 pid_controller.Enable as Connection59
                        connect kd_P.out pid_controller.kd as Connection67
                        connect Gain1.out pid_controller.ref as Connection121
                        connect dP_bias_pu Junction1 as Connection126
                        connect Junction1 dP_bias_pu_.in as Connection127
                        [
                            breakpoints = 8640, 8216; 8640, 8216
                        ]
                        connect pid_controller.dP_bias Junction1 as Connection128
                        connect From4 Gain5.in as Connection140
                        connect Gain5.out Gain2.in as Connection141
                        connect P_gen Goto6 as Connection144
                        connect Gain6.out "rate limiter.fall_rate" as Connection154
                        connect rise_fall_rate_P_kWps.out Junction2 as Connection155
                        connect "rate limiter.rise_rate" Junction2 as Connection157
                        connect ki_P.out pid_controller.ki as Connection170
                        connect Gain1.in Junction3 as Connection171
                        connect "1D look-up table1.addr" Junction3 as Connection173
                        connect Junction2 Junction4 as Connection200
                        [
                            breakpoints = 7864, 8152
                        ]
                        connect Junction4 Gain6.in as Connection201
                        connect Goto8 Junction4 as Connection202
                        connect From6 rate_limit_kWps as Connection203
                        connect P_ref_kW.out Limit1.in as Connection204
                        connect "1D look-up table1.value" Termination1.in as Connection205
                        connect kp_P.out pid_controller.kp as Connection206
                        connect Junction3 Junction5 as Connection207
                        connect Junction5 "rate limiter.out" as Connection208
                        connect P_ref_rt_ltd.in Junction5 as Connection209
                        connect Limit1.out Junction6 as Connection210
                        connect Junction6 "rate limiter.in" as Connection211
                        connect P_ref.in Junction6 as Connection212
                    }
                    [
                        position = 8352, 7864
                        size = 128, 88
                    ]

                    component gen_bus_split "Bus Split1" {
                    }
                    [
                        position = 7720, 8408
                        hide_name = True
                    ]

                    component Subsystem "Q controller" {
                        layout = dynamic
                        component src_scada_input ki_Q {
                            execution_rate = "Tfast"
                            unit = ""
                        }
                        [
                            position = 8120, 8280
                        ]

                        component gen_gain Gain4 {
                            gain = "1.0/P_gen_rating_kW"
                        }
                        [
                            position = 8144, 8184
                            hide_name = True
                        ]

                        component gen_probe dQ_bias_pu_ {
                        }
                        [
                            position = 8536, 8312
                        ]

                        component src_scada_input kp_Q {
                            execution_rate = "Tfast"
                            unit = ""
                        }
                        [
                            position = 8208, 8248
                        ]

                        component src_scada_input Q_ref_kVAr {
                            def_value = "0.0"
                            execution_rate = "Tfast"
                            unit = "kVAr"
                        }
                        [
                            position = 7808, 8120
                        ]

                        component src_scada_input kd_Q {
                            execution_rate = "Tfast"
                            unit = ""
                        }
                        [
                            position = 8200, 8312
                        ]

                        component Subsystem pid_controller1 {
                            layout = dynamic
                            component gen_sum Sum8 {
                                signs = "+-"
                            }
                            [
                                position = 7616, 7872
                                hide_name = True
                            ]

                            component gen_sum Sum14 {
                                signs = "3"
                            }
                            [
                                position = 8528, 7952
                                hide_name = True
                            ]

                            component gen_product Product9 {
                            }
                            [
                                position = 8168, 8080
                                hide_name = True
                            ]

                            component gen_rate_limiter "Rate Limiter1" {
                                falling_limit = "-100"
                                rising_limit = "100"
                            }
                            [
                                position = 7376, 7824
                                hide_name = True
                            ]

                            component gen_limiter Limit1 {
                                lower_limit = "-1"
                                upper_limit = "1"
                            }
                            [
                                position = 8296, 7936
                            ]

                            component gen_product Product8 {
                            }
                            [
                                position = 8160, 7936
                                hide_name = True
                            ]

                            component gen_logic_op "Logical operator4" {
                                operator = "NOT"
                            }
                            [
                                position = 7240, 8048
                                hide_name = True
                            ]

                            component gen_limiter Limit2 {
                                lower_limit = "-1"
                                upper_limit = "1"
                            }
                            [
                                position = 8368, 8192
                            ]

                            component gen_z_domain_transfer deriv {
                                a_coeff = "[1.0/(2.0*np.pi*100.0),1.0]"
                                b_coeff = "[1.0, 0.0]"
                                domain = "S-domain"
                                method = "Bilinear"
                            }
                            [
                                position = 8088, 8192
                            ]

                            component gen_limiter Limit3 {
                                lower_limit = "-1"
                                upper_limit = "1"
                            }
                            [
                                position = 8616, 7952
                            ]

                            component gen_integrator Integrator1 {
                                limit_lower = "-1"
                                limit_output = "True"
                                limit_upper = "1"
                                show_reset = "level"
                            }
                            [
                                position = 8344, 8088
                                hide_name = True
                            ]

                            component sys_signal_switch "Signal switch1" {
                                threshold = "0.5"
                            }
                            [
                                position = 8744, 7936
                                hide_name = True
                            ]

                            component src_constant Constant1 {
                                execution_rate = "Tfast"
                                value = "0"
                            }
                            [
                                position = 8680, 7896
                                hide_name = True
                            ]

                            component gen_product Product14 {
                            }
                            [
                                position = 7992, 8192
                                hide_name = True
                            ]

                            port dQ_bias {
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8928, 7936
                            ]

                            port fdbck {
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 7880
                            ]

                            port kd {
                                position = left:5
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7880, 8200
                            ]

                            port ki {
                                position = left:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7880, 8088
                            ]

                            port kp {
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7880, 7944
                            ]

                            port ref {
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7288, 7824
                            ]

                            port Enable {
                                position = left:7
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7144, 8000
                            ]

                            tag From6 {
                                value = "disable"
                                scope = local
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8248, 8104
                                hide_name = True
                                size = 0, 0
                            ]

                            tag Goto3 {
                                value = "disable"
                                scope = local
                                kind = sp
                                direction = in
                            }
                            [
                                position = 7328, 8048
                                hide_name = True
                                size = 0, 0
                            ]

                            tag Goto2 {
                                value = "enable"
                                scope = local
                                kind = sp
                                direction = in
                            }
                            [
                                position = 7240, 8000
                                hide_name = True
                                size = 0, 0
                            ]

                            tag From7 {
                                value = "disable"
                                scope = local
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8672, 7864
                                hide_name = True
                                size = 0, 0
                            ]

                            junction Junction359 sp
                            [
                                position = 7176, 8000
                            ]

                            junction Junction358 sp
                            [
                                position = 8112, 8072
                            ]

                            junction Junction362 sp
                            [
                                position = 8112, 7928
                            ]

                            connect Limit3.out "Signal switch1.in1" as Connection2041
                            connect Sum14.in1 Integrator1.out as Connection1979
                            connect "Rate Limiter1.in" ref as Connection2039
                            connect Constant1.out "Signal switch1.in" as Connection333
                            connect Sum8.out Junction362 as Connection2037
                            connect Enable Junction359 as Connection2014
                            connect kp Product8.in1 as Connection1997
                            connect fdbck Sum8.in1 as Connection1502
                            connect Product14.out deriv.in as Connection1938
                            connect Sum14.in2 Limit2.out as Connection1994
                            [
                                breakpoints = 8440, 7968; 8440, 8192
                            ]
                            connect dQ_bias "Signal switch1.out" as Connection1991
                            [
                                breakpoints = 8856, 7936
                            ]
                            connect Junction359 Goto2 as Connection2015
                            connect Product8.in Junction362 as Connection2035
                            connect From6 Integrator1.reset as Connection2025
                            connect Limit1.in Product8.out as Connection1993
                            connect "Rate Limiter1.out" Sum8.in as Connection2040
                            connect Product9.in Junction358 as Connection1944
                            connect ki Product9.in1 as Connection1999
                            connect "Logical operator4.out" Goto3 as Connection2017
                            connect Product14.in Junction358 as Connection1946
                            connect Product9.out Integrator1.in as Connection288
                            connect Limit2.in deriv.out as Connection1995
                            connect Junction362 Junction358 as Connection2036
                            [
                                breakpoints = 8112, 7928; 8112, 7928; 8112, 8072
                            ]
                            connect Sum14.in Limit1.out as Connection1992
                            connect Limit3.in Sum14.out as Connection2042
                            connect kd Product14.in1 as Connection1998
                            connect From7 "Signal switch1.in2" as Connection2026
                            connect "Logical operator4.in" Junction359 as Connection2016
                        }
                        [
                            position = 8312, 8264
                            size = 96, 224
                        ]

                        component gen_gain Gain6 {
                            gain = "1e-3"
                        }
                        [
                            position = 8112, 8216
                            hide_name = True
                        ]

                        component gen_gain Gain3 {
                            gain = "1.0/P_gen_rating_kW"
                        }
                        [
                            position = 8184, 8216
                            hide_name = True
                        ]

                        component gen_gain Gain7 {
                            gain = "-1"
                        }
                        [
                            position = 7904, 8208
                            hide_name = True
                        ]

                        component gen_c_function "rate limiter" {
                            global_variables = "real rate;"
                            in_terminal_dimensions = "inherit;inherit;inherit"
                            in_terminal_dimensions_str = "in inherit;rise_rate inherit;fall_rate inherit"
                            in_terminal_labels = "[(\'in\', True), (\'rise_rate\', True), (\'fall_rate\', True)]"
                            in_terminal_properties = "real in;inherit rise_rate;inherit fall_rate;"
                            no_feed_inputs = "[\'\']"
                            no_feed_outputs = "[\'\']"
                            out_terminal_dimensions = "inherit"
                            out_terminal_dimensions_str = "out inherit"
                            out_terminal_labels = "[(\'out\', True)]"
                            output_fnc = "/*Begin code section*/
rate = (in - out)/execution_rate;
if (rate > rise_rate)
{
    rate = rise_rate;
}
else if (rate < fall_rate)
{
    rate = fall_rate;
}
out = out + rate*execution_rate;
/*End code section*/"
                        }
                        [
                            position = 8000, 8144
                            size = 88, 80
                        ]

                        component src_scada_input rise_fall_rate_Q_kVArps {
                            def_value = "2.5"
                            execution_rate = "Tfast"
                            unit = "kVAr/s"
                        }
                        [
                            position = 7760, 8168
                        ]

                        component gen_probe Q_ref_rt_ltd {
                        }
                        [
                            position = 8160, 8112
                        ]

                        port Q_gen {
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7520, 8112
                        ]

                        port dQ_bias_pu {
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8512, 8264
                        ]

                        port en {
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7520, 8200
                        ]

                        tag From6 {
                            value = "Q_gen"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8032, 8216
                            hide_name = True
                        ]

                        tag Goto5 {
                            value = "en"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7624, 8200
                            hide_name = True
                        ]

                        tag From5 {
                            value = "en"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8192, 8360
                            hide_name = True
                            size = 57, 20
                        ]

                        tag Goto7 {
                            value = "Q_gen"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7624, 8112
                            hide_name = True
                            size = 59, 20
                        ]

                        junction Junction2 sp
                        [
                            position = 8472, 8264
                        ]

                        junction Junction3 sp
                        [
                            position = 7848, 8168
                        ]

                        junction Junction4 sp
                        [
                            position = 8112, 8144
                        ]

                        connect Gain3.out pid_controller1.fdbck as Connection131
                        connect ki_Q.out pid_controller1.ki as Connection137
                        connect From5 pid_controller1.Enable as Connection139
                        connect dQ_bias_pu Junction2 as Connection132
                        connect kd_Q.out pid_controller1.kd as Connection135
                        connect From6 Gain6.in as Connection142
                        connect Junction2 dQ_bias_pu_.in as Connection134
                        [
                            breakpoints = 8472, 8264; 8472, 8264
                        ]
                        connect Gain6.out Gain3.in as Connection143
                        connect pid_controller1.dQ_bias Junction2 as Connection129
                        connect kp_Q.out pid_controller1.kp as Connection136
                        connect en Goto5 as Connection113
                        connect Gain4.out pid_controller1.ref as Connection130
                        connect Q_gen Goto7 as Connection144
                        connect Gain7.out "rate limiter.fall_rate" as Connection154
                        connect Q_ref_kVAr.out "rate limiter.in" as Connection204
                        connect "rate limiter.rise_rate" Junction3 as Connection206
                        connect Junction3 Gain7.in as Connection207
                        [
                            breakpoints = 7848, 8160; 7848, 8160; 7848, 8208
                        ]
                        connect rise_fall_rate_Q_kVArps.out Junction3 as Connection208
                        connect "rate limiter.out" Junction4 as Connection209
                        connect Junction4 Gain4.in as Connection210
                        connect Q_ref_rt_ltd.in Junction4 as Connection211
                    }
                    [
                        position = 8360, 7992
                        size = 112, 80
                    ]

                    component src_scada_input mode {
                        execution_rate = "T_engine"
                        format = "int"
                        max = "3"
                        min = "0"
                        signal_type = "int"
                        unit = "0=stdby; 1=v-f; 2=P-v; 3=P-Q"
                    }
                    [
                        position = 8152, 7528
                    ]

                    component src_scada_input start {
                        execution_rate = "T_engine"
                        max = "1"
                        min = "0"
                        unit = ""
                    }
                    [
                        position = 8112, 7504
                    ]

                    component src_scada_input f_Hz_ref {
                        def_value = "nominal_rpm/30.0"
                        execution_rate = "T_engine"
                        min = "0"
                        unit = "Hz"
                    }
                    [
                        position = 7632, 8592
                    ]

                    component gen_sum Sum3 {
                    }
                    [
                        position = 7888, 7712
                        hide_name = True
                    ]

                    component gen_probe state {
                    }
                    [
                        position = 8640, 7696
                    ]

                    component gen_probe err_msg {
                    }
                    [
                        position = 8568, 7728
                    ]

                    component src_scada_input V_LL_ref_rms {
                        def_value = "480"
                        execution_rate = "Tfast"
                        min = "0"
                        unit = "Vrms LL"
                    }
                    [
                        position = 7632, 8656
                    ]

                    component gen_gain Gain3 {
                        gain = "30.0"
                    }
                    [
                        position = 7696, 8592
                        hide_name = True
                    ]

                    component gen_sum Sum4 {
                    }
                    [
                        position = 8152, 9312
                        hide_name = True
                    ]

                    component src_scada_input stop {
                        execution_rate = "T_engine"
                        max = "1"
                        min = "0"
                        unit = ""
                    }
                    [
                        position = 8128, 7680
                    ]

                    component src_scada_input P_droop_gain {
                        execution_rate = "T_engine"
                        max = "1"
                        min = "0"
                        unit = ""
                    }
                    [
                        position = 8880, 7880
                    ]

                    component gen_gain Gain4 {
                        gain = "1.0/P_gen_rating_kW"
                    }
                    [
                        position = 8952, 7832
                        hide_name = True
                    ]

                    component gen_gain Gain5 {
                        gain = "1.0e-3"
                    }
                    [
                        position = 8880, 7832
                        hide_name = True
                    ]

                    component gen_product Product1 {
                    }
                    [
                        position = 9040, 7864
                        hide_name = True
                    ]

                    component gen_product Product2 {
                    }
                    [
                        position = 9048, 8080
                        hide_name = True
                    ]

                    component src_scada_input Q_droop_gain {
                        execution_rate = "Tfast"
                        max = "1"
                        min = "0"
                        unit = ""
                    }
                    [
                        position = 8912, 8088
                    ]

                    component gen_gain Gain6 {
                        gain = "1.0e-3"
                    }
                    [
                        position = 8888, 8056
                        hide_name = True
                    ]

                    component gen_gain Gain7 {
                        gain = "1.0/P_gen_rating_kW"
                    }
                    [
                        position = 8960, 8056
                        hide_name = True
                    ]

                    component gen_gain Gain8 {
                        gain = "-1"
                    }
                    [
                        position = 9120, 8080
                        hide_name = True
                    ]

                    component gen_gain Gain9 {
                        gain = "-1"
                    }
                    [
                        position = 9200, 7864
                        hide_name = True
                    ]

                    component gen_terminator Termination2 {
                    }
                    [
                        position = 8448, 8880
                        hide_name = True
                    ]

                    component gen_terminator Termination3 {
                    }
                    [
                        position = 8448, 8944
                        hide_name = True
                    ]

                    component gen_probe dw_droop {
                    }
                    [
                        position = 9168, 7904
                    ]

                    component "core/Rate Transition" "Rate Transition2" {
                        execution_rate = "T_engine"
                    }
                    [
                        position = 8232, 8128
                        hide_name = True
                        size = 32, 32
                    ]

                    component "core/Rate Transition" "Rate Transition3" {
                        execution_rate = "T_engine"
                    }
                    [
                        position = 8088, 8184
                        hide_name = True
                        size = 32, 32
                    ]

                    component "core/Rate Transition" "Rate Transition5" {
                        execution_rate = "T_engine"
                    }
                    [
                        position = 8816, 7832
                        hide_name = True
                        size = 32, 32
                    ]

                    component "core/Rate Transition" "Rate Transition6" {
                        execution_rate = "T_engine"
                    }
                    [
                        position = 8256, 7840
                        hide_name = True
                        size = 32, 32
                    ]

                    component "core/Rate Transition" "Rate Transition7" {
                        execution_rate = "T_engine"
                    }
                    [
                        position = 7808, 7736
                        hide_name = True
                        size = 32, 32
                    ]

                    component "core/Rate Transition" "Rate Transition8" {
                        execution_rate = "T_engine"
                    }
                    [
                        position = 8304, 7552
                        hide_name = True
                        size = 32, 32
                    ]

                    component "core/Rate Transition" "Rate Transition10" {
                        execution_rate = "T_engine"
                    }
                    [
                        position = 8304, 7640
                        hide_name = True
                        size = 32, 32
                    ]

                    component "core/Rate Transition" "Rate Transition11" {
                        execution_rate = "T_engine"
                    }
                    [
                        position = 8304, 7696
                        hide_name = True
                        size = 32, 32
                    ]

                    component "core/Rate Transition" "Rate Transition12" {
                        execution_rate = "T_engine"
                    }
                    [
                        position = 8304, 7728
                        hide_name = True
                        size = 32, 32
                    ]

                    component "core/Rate Transition" "Rate Transition13" {
                        execution_rate = "Tfast"
                    }
                    [
                        position = 8224, 8608
                        hide_name = True
                        size = 32, 32
                    ]

                    component "core/Rate Transition" "Rate Transition14" {
                        execution_rate = "Tfast"
                    }
                    [
                        position = 8264, 8008
                        hide_name = True
                        size = 32, 32
                    ]

                    component "core/Rate Transition" "Rate Transition15" {
                        execution_rate = "Tfast"
                    }
                    [
                        position = 8064, 9304
                        hide_name = True
                        size = 32, 32
                    ]

                    component tm_delay "Unit Delay1" {
                    }
                    [
                        position = 8304, 7584
                        hide_name = True
                    ]

                    component tm_delay "Unit Delay2" {
                    }
                    [
                        position = 8304, 7616
                        hide_name = True
                    ]

                    port ignition {
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8536, 8184
                    ]

                    port Aeq_pu {
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8536, 8248
                    ]

                    port starter {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8536, 8128
                    ]

                    port n_rpm {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7632, 8200
                    ]

                    port vabc_gen_LL {
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7624, 8264
                    ]

                    port vabc_mains_LL {
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7624, 8336
                    ]

                    port V_field {
                        position = right:4
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8504, 8424
                    ]

                    port PQ_gen {
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7624, 8408
                    ]

                    port GCB_fb {
                        position = left:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7624, 8488
                    ]

                    port en_GCB {
                        position = right:5
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8720, 8424
                    ]

                    tag From20 {
                        value = "n_rpm"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8200, 8432
                        hide_name = True
                        size = 71, 20
                    ]

                    tag Goto1 {
                        value = "n_rpm"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7728, 8200
                        hide_name = True
                    ]

                    tag Goto2 {
                        value = "vabc_gen_LL"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7736, 8264
                        hide_name = True
                        size = 84, 20
                    ]

                    tag Goto3 {
                        value = "vabc_mains_LL"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7736, 8336
                        hide_name = True
                        size = 84, 20
                    ]

                    tag From21 {
                        value = "vabc_mains_LL"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8784
                        hide_name = True
                        size = 71, 20
                    ]

                    tag From22 {
                        value = "vabc_gen_LL"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8688
                        hide_name = True
                        size = 71, 20
                    ]

                    tag Goto4 {
                        value = "f_Hz_gen"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8456, 8696
                        hide_name = True
                    ]

                    tag Goto5 {
                        value = "f_Hz_grid"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8552, 8712
                        hide_name = True
                    ]

                    tag Goto6 {
                        value = "wt_gen"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8456, 8728
                        hide_name = True
                    ]

                    tag Goto7 {
                        value = "wt_grid"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8552, 8744
                        hide_name = True
                    ]

                    tag Goto8 {
                        value = "vab_rms_gen"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8464, 8760
                        hide_name = True
                        size = 77, 20
                    ]

                    tag Goto9 {
                        value = "vab_rms_grid"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8560, 8776
                        hide_name = True
                        size = 77, 20
                    ]

                    tag From23 {
                        value = "vab_rms_gen"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8200, 8400
                        hide_name = True
                        size = 71, 20
                    ]

                    tag From24 {
                        value = "n_rpm"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8144, 8128
                        hide_name = True
                        size = 71, 20
                    ]

                    tag From25 {
                        value = "f_Hz_gen"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8128, 9072
                        hide_name = True
                        size = 71, 20
                    ]

                    tag From26 {
                        value = "f_Hz_grid"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8128, 9104
                        hide_name = True
                        size = 71, 20
                    ]

                    tag From27 {
                        value = "wt_gen"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7864, 9128
                        hide_name = True
                        size = 71, 20
                    ]

                    tag From28 {
                        value = "wt_grid"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7864, 9160
                        hide_name = True
                        size = 71, 20
                    ]

                    tag From29 {
                        value = "vab_rms_gen"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8128, 9200
                        hide_name = True
                        size = 71, 20
                    ]

                    tag From30 {
                        value = "vab_rms_grid"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8128, 9232
                        hide_name = True
                        size = 71, 20
                    ]

                    tag From31 {
                        value = "vabc_gen_LL"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8144, 8880
                        hide_name = True
                        size = 71, 20
                    ]

                    tag From32 {
                        value = "vabc_mains_LL"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8144, 8976
                        hide_name = True
                        size = 71, 20
                    ]

                    tag Goto10 {
                        value = "wt_grid_phasor"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8480, 8976
                        hide_name = True
                        size = 101, 20
                    ]

                    tag Goto11 {
                        value = "wt_gen_phasor"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8480, 8912
                        hide_name = True
                        size = 88, 20
                    ]

                    tag From33 {
                        value = "wt_grid_phasor"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7976, 9168
                        hide_name = True
                        size = 71, 20
                    ]

                    tag From34 {
                        value = "wt_gen_phasor"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7976, 9136
                        hide_name = True
                        size = 71, 20
                    ]

                    tag Goto12 {
                        value = "dw_sync"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8488, 9168
                        hide_name = True
                        size = 101, 20
                    ]

                    tag Goto13 {
                        value = "dv_sync"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8488, 9264
                        hide_name = True
                        size = 101, 20
                    ]

                    tag From35 {
                        value = "dv_sync"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8072, 8480
                        hide_name = True
                        size = 71, 20
                    ]

                    tag From36 {
                        value = "dw_sync"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8000, 8184
                        hide_name = True
                        size = 71, 20
                    ]

                    tag Goto14 {
                        value = "P_gen"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7840, 8400
                        hide_name = True
                        size = 84, 20
                    ]

                    tag From37 {
                        value = "P_gen"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8176, 7840
                        hide_name = True
                        size = 71, 20
                    ]

                    tag From38 {
                        value = "dw_P"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8000, 8208
                        hide_name = True
                        size = 71, 20
                    ]

                    tag From39 {
                        value = "dv_Q"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8072, 8512
                        hide_name = True
                        size = 71, 20
                    ]

                    tag Goto15 {
                        value = "dw_P"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8488, 7840
                        hide_name = True
                    ]

                    tag Goto17 {
                        value = "Q_gen"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7840, 8424
                        hide_name = True
                        size = 84, 20
                    ]

                    tag Goto19 {
                        value = "dv_Q"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8464, 7992
                        hide_name = True
                    ]

                    tag From40 {
                        value = "Q_gen"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8184, 7976
                        hide_name = True
                        size = 71, 20
                    ]

                    tag Goto20 {
                        value = "sync_ok"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8488, 9072
                        hide_name = True
                        size = 101, 20
                    ]

                    tag From41 {
                        value = "sync_ok"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8216, 7552
                        hide_name = True
                        size = 71, 20
                    ]

                    tag From42 {
                        value = "GCB_fb"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8216, 7584
                        hide_name = True
                        size = 71, 20
                    ]

                    tag Goto21 {
                        value = "engine_fault"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8544, 8304
                        hide_name = True
                        size = 73, 20
                    ]

                    tag From43 {
                        value = "en_w_ctrl"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8080, 8264
                        hide_name = True
                        size = 71, 20
                    ]

                    tag Goto22 {
                        value = "GCB_fb"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7808, 8488
                        hide_name = True
                        size = 84, 20
                    ]

                    tag From44 {
                        value = "n_rpm"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8216, 7640
                        hide_name = True
                        size = 71, 20
                    ]

                    tag From45 {
                        value = "n_rpm_ref"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8216, 7664
                        hide_name = True
                        size = 71, 20
                    ]

                    tag From46 {
                        value = "genset_fault"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8216, 7616
                        hide_name = True
                        size = 71, 20
                    ]

                    tag Goto23 {
                        value = "genset_fault"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7984, 7712
                        hide_name = True
                    ]

                    tag From47 {
                        value = "engine_fault"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7728, 7672
                        hide_name = True
                        size = 71, 20
                    ]

                    tag From48 {
                        value = "exciter_fault"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7720, 7736
                        hide_name = True
                        size = 71, 20
                    ]

                    tag From49 {
                        value = "n_rpm_ref"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8080, 8296
                        hide_name = True
                        size = 71, 20
                    ]

                    tag From19 {
                        value = "en_GCB"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8640, 8424
                        hide_name = True
                    ]

                    tag Goto24 {
                        value = "exciter_fault"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8504, 8536
                        hide_name = True
                        size = 73, 20
                    ]

                    tag Goto25 {
                        value = "en_w_ctrl"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8592, 7504
                        hide_name = True
                    ]

                    tag Goto26 {
                        value = "en_v_ctrl"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8592, 7536
                        hide_name = True
                    ]

                    tag Goto27 {
                        value = "en_p_ctrl"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8592, 7568
                        hide_name = True
                    ]

                    tag Goto28 {
                        value = "en_q_ctrl"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8592, 7600
                        hide_name = True
                    ]

                    tag Goto29 {
                        value = "en_sync"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8592, 7632
                        hide_name = True
                    ]

                    tag Goto30 {
                        value = "en_GCB"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8592, 7664
                        hide_name = True
                    ]

                    tag From50 {
                        value = "en_p_ctrl"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8176, 7888
                        hide_name = True
                        size = 71, 20
                    ]

                    tag From51 {
                        value = "en_q_ctrl"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8184, 8008
                        hide_name = True
                        size = 71, 20
                    ]

                    tag Goto31 {
                        value = "n_rpm_ref"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7800, 8592
                        hide_name = True
                        size = 84, 20
                    ]

                    tag Goto32 {
                        value = "V_LL_ref_rms_ref"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7736, 8656
                        hide_name = True
                        size = 84, 20
                    ]

                    tag From52 {
                        value = "en_v_ctrl"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8144, 8608
                        hide_name = True
                        size = 71, 20
                    ]

                    tag From53 {
                        value = "V_LL_ref_rms_ref"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8136, 8632
                        hide_name = True
                        size = 93, 20
                    ]

                    tag From54 {
                        value = "en_sync"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7976, 9304
                        hide_name = True
                        size = 71, 20
                    ]

                    tag From56 {
                        value = "vab_rms_gen"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8216, 7696
                        hide_name = True
                        size = 71, 20
                    ]

                    tag From57 {
                        value = "V_LL_ref_rms_ref"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8216, 7728
                        hide_name = True
                        size = 93, 20
                    ]

                    tag From58 {
                        value = "dw_droop"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8000, 8232
                        hide_name = True
                        size = 71, 20
                    ]

                    tag From59 {
                        value = "dv_droop"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8080, 8544
                        hide_name = True
                        size = 71, 20
                    ]

                    tag From60 {
                        value = "P_gen"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8728, 7832
                        hide_name = True
                        size = 71, 20
                    ]

                    tag From61 {
                        value = "Q_gen"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8792, 8056
                        hide_name = True
                        size = 71, 20
                    ]

                    tag Goto33 {
                        value = "dw_droop"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9280, 7864
                        hide_name = True
                    ]

                    tag Goto34 {
                        value = "dv_droop"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9200, 8080
                        hide_name = True
                    ]

                    tag Goto36 {
                        value = "rate_limit_kWps"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8520, 7888
                        hide_name = True
                        size = 121, 20
                    ]

                    tag From2 {
                        value = "rate_limit_kWps"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8080, 8328
                        hide_name = True
                        size = 109, 20
                    ]

                    tag Goto37 {
                        value = "P_gen_pu"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9048, 7816
                        hide_name = True
                    ]

                    junction Junction1 sp
                    [
                        position = 8984, 7832
                    ]

                    junction Junction2 sp
                    [
                        position = 9112, 7864
                    ]

                    comment Comment2 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:6pt;">Exciter </span> </p></body></html> ENDCOMMENT 
                    [
                        position = 8328, 8376
                    ]

                    comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:6pt;">Engine governor  </span> </p></body></html> ENDCOMMENT 
                    [
                        position = 8288, 8112
                    ]

                    comment Comment3 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">Mode</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">====</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">0 = Standby</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">1 = v-f control</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">2 = P-v control</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">3 = P-Q control</span></p></body></html> ENDCOMMENT 
                    [
                        position = 8024, 7536
                    ]

                    comment Comment4 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">Droops </span></p></body></html> ENDCOMMENT 
                    [
                        position = 9016, 7768
                    ]

                    connect gov.Aeq_pu Aeq_pu as Connection133
                    connect gov.ignition ignition as Connection132
                    connect gov.starter starter as Connection134
                    connect From20 exciter.n_rpm as Connection286
                    [
                        breakpoints = 8272, 8432; 8272, 8464
                    ]
                    connect n_rpm Goto1 as Connection287
                    connect Goto2 vabc_gen_LL as Connection288
                    connect Goto3 vabc_mains_LL as Connection289
                    connect From21 PLLs.vabc_LL_grid as Connection290
                    connect From22 PLLs.vabc_LL_gen as Connection291
                    connect PLLs.f_Hz_gen Goto4 as Connection292
                    connect PLLs.f_Hz_grid Goto5 as Connection293
                    connect PLLs.wt_gen Goto6 as Connection294
                    connect PLLs.wt_grid Goto7 as Connection295
                    connect PLLs.vab_rms_gen Goto8 as Connection296
                    connect PLLs.vab_rms_grid Goto9 as Connection297
                    connect From23 exciter.v_ab_rms as Connection298
                    connect exciter.V_exc V_field as Connection299
                    connect From25 Synchronizer.f_Hz_gen as Connection301
                    [
                        breakpoints = 8192, 9072; 8208, 9072
                    ]
                    connect From26 Synchronizer.f_Hz_grid as Connection302
                    connect From29 Synchronizer.v_ab_gen_rms as Connection305
                    connect From30 Synchronizer.v_ab_grid_rms as Connection306
                    connect From31 phasor_units.vabc_LL_gen as Connection310
                    connect From32 phasor_units.vabc_LL_grid as Connection311
                    connect phasor_units.phase_a_gen Goto11 as Connection312
                    connect phasor_units.phase_a_grid Goto10 as Connection313
                    connect Synchronizer.speed_throttle Goto12 as Connection316
                    connect Synchronizer.voltage_throttle Goto13 as Connection317
                    connect w_bias_pu.out Sum1.in as Connection318
                    connect Sum1.out gov.w_bias_pu as Connection319
                    connect Sum2.out exciter.v_bias_pu as Connection320
                    connect v_bias_pu.out Sum2.in as Connection321
                    connect From35 Sum2.in1 as Connection322
                    connect Synchronizer.wt_gen_rad Gain1.out as Connection324
                    connect Gain1.in From34 as Connection325
                    connect From33 Gain2.in as Connection326
                    connect Gain2.out Synchronizer.wt_grid_rad as Connection327
                    connect From38 Sum1.in2 as Connection330
                    connect From39 Sum2.in2 as Connection331
                    [
                        breakpoints = 8128, 8496; 8168, 8496
                    ]
                    connect "P controller.dP_bias_pu" Goto15 as Connection333
                    connect PQ_gen "Bus Split1.in" as Connection338
                    [
                        breakpoints = 7664, 8408
                    ]
                    connect "Bus Split1.out" Goto14 as Connection339
                    connect "Bus Split1.out1" Goto17 as Connection340
                    connect From40 "Q controller.Q_gen" as Connection341
                    connect "Q controller.dQ_bias_pu" Goto19 as Connection342
                    connect mode.out "genset state machine.mode" as Connection345
                    connect Synchronizer.breaker_enable Goto20 as Connection346
                    connect start.out "genset state machine.start" as Connection349
                    connect gov.engine_error Goto21 as Connection350
                    connect From45 "genset state machine.n_rpm_ref" as Connection353
                    connect Sum3.out Goto23 as Connection355
                    connect Sum3.in From47 as Connection357
                    connect From43 gov.start_engine_ as Connection358
                    [
                        breakpoints = 8216, 8264; 8216, 8232
                    ]
                    connect From49 gov.n_rpm_ref as Connection359
                    [
                        breakpoints = 8232, 8296; 8232, 8264
                    ]
                    connect From19 en_GCB as Connection360
                    connect exciter.exc_error Goto24 as Connection361
                    connect "genset state machine.en_w_ctrl" Goto25 as Connection362
                    connect "genset state machine.en_v_ctrl" Goto26 as Connection363
                    connect "genset state machine.en_q_ctrl" Goto28 as Connection364
                    connect "genset state machine.en_p_ctrl" Goto27 as Connection365
                    connect "genset state machine.en_sync" Goto29 as Connection366
                    connect "genset state machine.en_GCB" Goto30 as Connection367
                    connect "genset state machine.state" state.in as Connection368
                    connect "genset state machine.error_msg_var" err_msg.in as Connection369
                    connect From50 "P controller.en" as Connection370
                    connect V_LL_ref_rms.out Goto32 as Connection373
                    connect From53 exciter.v_ab_rms_ref as Connection375
                    [
                        breakpoints = 8272, 8536
                    ]
                    connect f_Hz_ref.out Gain3.in as Connection376
                    connect Gain3.out Goto31 as Connection377
                    connect "en_sync(manual).out" Sum4.in1 as Connection378
                    connect Sum4.out Synchronizer.Enable_sync as Connection379
                    connect GCB_fb Goto22 as Connection381
                    connect stop.out "genset state machine.stop" as Connection388
                    connect From58 Sum1.in3 as Connection391
                    connect Sum2.in3 From59 as Connection392
                    connect Gain5.out Gain4.in as Connection394
                    connect Product2.in Gain7.out as Connection398
                    connect Gain6.out Gain7.in as Connection399
                    connect Q_droop_gain.out Product2.in1 as Connection401
                    connect From61 Gain6.in as Connection402
                    connect Product2.out Gain8.in as Connection403
                    connect Gain8.out Goto34 as Connection404
                    connect Gain9.out Goto33 as Connection406
                    connect "P controller.rate_limit_kWps" Goto36 as Connection409
                    connect From2 gov.rate_limit_kWps as Connection410
                    connect Product1.in Junction1 as Connection411
                    connect Junction1 Gain4.out as Connection412
                    connect Goto37 Junction1 as Connection413
                    connect Termination2.in phasor_units.v_rms_gen as Connection417
                    connect Termination3.in phasor_units.v_rms_grid as Connection418
                    connect P_droop_gain.out Product1.in1 as Connection419
                    connect Gain9.in Junction2 as Connection421
                    connect Junction2 Product1.out as Connection422
                    connect dw_droop.in Junction2 as Connection423
                    connect From24 "Rate Transition2.in" as Connection424
                    connect "Rate Transition2.out" gov.n_rpm as Connection425
                    connect From36 "Rate Transition3.in" as Connection426
                    connect "Rate Transition3.out" Sum1.in1 as Connection427
                    connect From60 "Rate Transition5.in" as Connection428
                    connect "Rate Transition5.out" Gain5.in as Connection429
                    connect From37 "Rate Transition6.in" as Connection430
                    connect "Rate Transition6.out" "P controller.P_gen" as Connection431
                    connect "Rate Transition8.out" "genset state machine.sync_fdback" as Connection432
                    connect "Rate Transition8.in" From41 as Connection433
                    connect From48 "Rate Transition7.in" as Connection436
                    connect "Rate Transition7.out" Sum3.in1 as Connection437
                    connect From44 "Rate Transition10.in" as Connection439
                    connect "Rate Transition10.out" "genset state machine.n_rpm" as Connection440
                    connect From56 "Rate Transition11.in" as Connection441
                    connect "Rate Transition11.out" "genset state machine.v_rms" as Connection442
                    connect From57 "Rate Transition12.in" as Connection443
                    connect "Rate Transition12.out" "genset state machine.v_rms_ref" as Connection444
                    connect From52 "Rate Transition13.in" as Connection445
                    connect "Rate Transition13.out" exciter.start_exc_ as Connection446
                    [
                        breakpoints = 8256, 8608; 8256, 8504
                    ]
                    connect From51 "Rate Transition14.in" as Connection447
                    connect "Rate Transition14.out" "Q controller.en" as Connection448
                    connect From54 "Rate Transition15.in" as Connection449
                    connect "Rate Transition15.out" Sum4.in as Connection450
                    connect From42 "Unit Delay1.in" as Connection451
                    connect "Unit Delay1.out" "genset state machine.GCB_fdback" as Connection452
                    connect From46 "Unit Delay2.in" as Connection453
                    connect "Unit Delay2.out" "genset state machine.genset_error" as Connection454
                }
                [
                    position = 7008, 8104
                    size = 128, 152
                ]

                component Subsystem Subsystem1 {
                    layout = dynamic
                    component "core/Signal Controlled Voltage Source" Vsp1 {
                    }
                    [
                        position = 8192, 8224
                        rotation = right
                        hide_name = True
                        scale = -1, 1
                        size = 64, 32
                    ]

                    component "core/Current Measurement" I_field {
                    }
                    [
                        position = 8272, 8136
                        size = 64, 32
                    ]

                    port P1 {
                        position = right:1
                        kind = pe
                    }
                    [
                        position = 8360, 8136
                        rotation = down
                        hide_name = True
                    ]

                    port P2 {
                        position = right:2
                        kind = pe
                    }
                    [
                        position = 8360, 8304
                        rotation = down
                        hide_name = True
                    ]

                    port In3 {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8128, 8224
                        hide_name = True
                    ]

                    connect Vsp1.n_node P2 as Connection2
                    connect Vsp1.in In3 as Connection3
                    connect Vsp1.p_node I_field.p_node as Connection4
                    connect I_field.n_node P1 as Connection5
                }
                [
                    position = 7968, 8360
                    hide_name = True
                    size = 48, 64
                ]

                component "core/Current Measurement" Ib_gen {
                    execution_rate = "Tfast"
                    sig_output = "True"
                }
                [
                    position = 8368, 8360
                    size = 64, 32
                ]

                component gen_probe n_rpm {
                }
                [
                    position = 7464, 8432
                ]

                component gen_probe trq_final {
                }
                [
                    position = 7992, 8008
                ]

                component "core/Rate Transition" "Rate Transition1" {
                    execution_rate = "T_engine"
                }
                [
                    position = 7496, 8160
                    hide_name = True
                    size = 32, 32
                ]

                component gen_gain Gain1 {
                    gain = "30.0/np.pi"
                }
                [
                    position = 7376, 8496
                    hide_name = True
                ]

                component Subsystem "Gas Engine" {
                    layout = dynamic
                    component gen_product Product1 {
                        signs = "*/"
                    }
                    [
                        position = 10408, 8592
                        hide_name = True
                    ]

                    component gen_sum Sum4 {
                    }
                    [
                        position = 10768, 8344
                        hide_name = True
                    ]

                    component Subsystem Subsystem1 {
                        layout = dynamic
                        component gen_probe constant_roughness {
                        }
                        [
                            position = 8744, 8880
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8520, 8744
                            hide_name = True
                        ]

                        component gen_c_function normal_distribution {
                            global_variables = "uint w;uint s;real two_32;uint x;real two_pi;real std_uniform_sample;real std_normal_sample;real normal_sample;real std_uniform_sample_k1;real std_normal_sample_k1;real normal_sample_k1;"
                            in_terminal_dimensions = "inherit;inherit;inherit;inherit"
                            in_terminal_dimensions_str = "enable inherit;random_input inherit;std inherit;avg inherit"
                            in_terminal_labels = "[(\'enable\', True), (\'random_input\', True), (\'std\', True), (\'avg\', True)]"
                            in_terminal_properties = "int enable;real random_input;inherit std;inherit avg;"
                            init_fnc = "/*Begin code section*/
x = 0;
w = 0;
s = 0xF0000001; //seed. Must be odd, and have non-zero upper sixteen bit
two_32 = 4294967295;
two_pi = 6.283185307179586;
std_uniform_sample_k1 = 0;
/*End code section*/"
                            no_feed_inputs = "[\'\']"
                            no_feed_outputs = "[\'\']"
                            out_terminal_dimensions = "inherit;inherit"
                            out_terminal_dimensions_str = "out1 inherit;out2 inherit"
                            out_terminal_labels = "[(\'out1\', True), (\'out2\', True)]"
                            out_terminal_properties = "real out1;inherit out2;"
                            output_fnc = "/*Begin code section*/
/*normal_distribution generates 
2 random variables having a 
a normal distribution, given a standard 
uniform distribution and a standard 
deviation + mean
*/

if (enable)
{
    std_uniform_sample = random_input;
    //avoid computing log(0) and avoid arguments > 1 to avoid sqrtf error
    if (std_uniform_sample <= 1e-8)
    {
        std_uniform_sample = 1e-8; //0.001;
    }
    else if (std_uniform_sample > 1.0)
    {
        std_uniform_sample = 1.0;
    }

    std_normal_sample = sqrtf(-2.0*log(std_uniform_sample))*cosf(two_pi*std_uniform_sample_k1);
    std_normal_sample_k1 = sqrtf(-2.0*log(std_uniform_sample))*sinf(two_pi*std_uniform_sample_k1);
    
    normal_sample = std*std_normal_sample + avg;
    normal_sample_k1 = std*std_normal_sample_k1 + avg;
    
    //update samples
    std_uniform_sample_k1 = std_uniform_sample;
    std_normal_sample_k1 = std_normal_sample;
    out1 = normal_sample;
    out2 = normal_sample_k1;
}
else
{
    out1 = 0;
    out2 = 0;
}
/*End code section*/"
                        }
                        [
                            position = 8416, 8696
                            size = 88, 144
                        ]

                        component gen_abs Abs1 {
                        }
                        [
                            position = 8576, 8584
                            hide_name = True
                        ]

                        component src_constant Constant1 {
                            execution_rate = "inherit"
                            value = "0"
                        }
                        [
                            position = 8312, 8744
                            hide_name = True
                        ]

                        component gen_c_function "C function1" {
                            global_variables = "real cyl_angle;real TWO_PI;real ONE_OVER_2PI;real quotient;real TWO_ON_PI;real new_random_amp;real PI;real PI_ON_2;real angle_dbg;real angle_dbg_k1;"
                            in_terminal_dimensions = "inherit;inherit"
                            in_terminal_dimensions_str = "engine_cycle_angle inherit;rand_normal_dist inherit"
                            in_terminal_labels = "[(\'engine_cycle_angle\', True), (\'rand_normal_dist\', True)]"
                            in_terminal_properties = "real engine_cycle_angle;inherit rand_normal_dist;"
                            init_fnc = "/*Begin code section*/
cyl_angle = 0;
TWO_PI = 6.283185307179586;
ONE_OVER_2PI = 1.591549430918954e-01;
TWO_ON_PI = 6.366197723675814e-01;
new_random_amp = 0.0;
PI_ON_2 = 1.5707963267948966;
PI = 3.141592653589793;
angle_dbg_k1 = 0;
/*End code section*/"
                            no_feed_inputs = "[\'\']"
                            no_feed_outputs = "[\'\']"
                            out_terminal_dimensions = "inherit;inherit"
                            out_terminal_dimensions_str = "constant_roughness inherit;selected_random_amp inherit"
                            out_terminal_labels = "[(\'constant_roughness\', True), (\'selected_random_amp\', True)]"
                            out_terminal_properties = "real constant_roughness;inherit selected_random_amp;"
                            output_fnc = "/*Begin code section*/
constant_roughness = 2.0*((sinf(cyl_angle)*sinf(cyl_angle)) - 0.5); //generates a double frequency sine with 0 mean
selected_random_amp = new_random_amp;
/*End code section*/"
                            parameters = "real ncyl;"
                            update_fnc = "/*Begin code section*/
cyl_angle = engine_cycle_angle * ncyl*0.25;

if (cyl_angle < 0)
{
    quotient = (int) fabs(cyl_angle*ONE_OVER_2PI) + 1;
    cyl_angle = cyl_angle + quotient*TWO_PI;
}
else if (cyl_angle > TWO_PI)
{
    quotient = (int) fabs(cyl_angle*ONE_OVER_2PI);
    cyl_angle = cyl_angle - quotient*TWO_PI;
}


angle_dbg = cyl_angle*2.0 - PI_ON_2;
if (angle_dbg < 0)
{
    quotient = (int) fabs(angle_dbg*ONE_OVER_2PI) + 1;
    angle_dbg = angle_dbg + quotient*TWO_PI;
}
else if (angle_dbg > TWO_PI)
{
    quotient = (int) fabs(angle_dbg*ONE_OVER_2PI);
    angle_dbg = angle_dbg - quotient*TWO_PI;
}
/*
angle_zcd = angle_dbg*2.0;
if (angle_zcd < 0)
{
    quotient = (int) fabs(angle_zcd*ONE_OVER_2PI) + 1;
    angle_zcd = angle_zcd + quotient*TWO_PI;
}
else if (angle_zcd > TWO_PI)
{
    quotient = (int) fabs(angle_zcd*ONE_OVER_2PI);
    angle_zcd = angle_zcd - quotient*TWO_PI;
}
*/
if (fabs(angle_dbg - angle_dbg_k1) > PI)
{
    new_random_amp = rand_normal_dist;
}
angle_dbg_k1 = angle_dbg;
/*End code section*/"
                        }
                        [
                            position = 8400, 8984
                            size = 224, 104
                        ]

                        component gen_probe random_amplitude {
                        }
                        [
                            position = 8760, 8968
                        ]

                        component gen_product Product1 {
                            signs = "3"
                        }
                        [
                            position = 8888, 8768
                            hide_name = True
                        ]

                        component gen_c_function msws {
                            global_variables = "uint w;uint s;real two_32;uint x;"
                            in_terminal_dimensions = "inherit"
                            in_terminal_dimensions_str = "enable inherit"
                            in_terminal_labels = "[(\'enable\', True)]"
                            in_terminal_properties = "int enable;"
                            init_fnc = "/*Begin code section*/
x = 0;
w = 0;
s = 0xF0000001; //seed. Must be odd, and have non-zero upper sixteen bit
two_32 = 4294967295;
/*End code section*/"
                            no_feed_inputs = "[\'\']"
                            no_feed_outputs = "[\'\']"
                            out_terminal_dimensions = "inherit"
                            out_terminal_dimensions_str = "out inherit"
                            out_terminal_labels = "[(\'out\', True)]"
                            output_fnc = "/*Begin code section*/
//generates a random number with the Middle Square Weyl Sequence RNG method.
//See Bernard Widynski, \"Middle Square Weyl Sequence RNG\", arxiv, April 4, 2017
//original method is for 64-bit sequence, which we have adapted here for a 32-bit sequence
//given our hardware constraints

if (enable)
{
    /*
    if (reset)
    {
        x = 0;
        w = 0;
    }
    */
    
    //x = (uint)(x*x);
    //w = w + s;
    //x = x + w;
    //x += (w += s); 
    //x = (x>>16) ; //right shift to keep upper sixteen bits
    //x = (uint)(two_32) >> 16 ;
    x = (x*x);
    x += (w += s);
    x = (x >> 16)|(x << 16);
    out = ((real)x)/two_32; //normalize value to between 0 and 1
}
else
{
    out = 0;
    x = 0;
    w = 0;
}
/*End code section*/"
                        }
                        [
                            position = 7976, 8680
                            size = 64, 64
                        ]

                        component gen_gain Gain1 {
                            gain = "1.0/np.sqrt(1.0 - 2.0/np.pi)"
                        }
                        [
                            position = 8272, 8712
                            hide_name = True
                        ]

                        port enable_roughness {
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7800, 8288
                        ]

                        port standard_dev {
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7800, 8352
                        ]

                        port torque_roughness_pu {
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9128, 8768
                        ]

                        port engine_cycle_angle {
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7800, 8416
                        ]

                        tag Goto2 {
                            value = "standard_dev"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7920, 8352
                            hide_name = True
                            size = 112, 20
                        ]

                        tag Goto3 {
                            value = "engine_cycle_angle"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7920, 8416
                            hide_name = True
                            size = 112, 20
                        ]

                        tag Goto8 {
                            value = "rand_uniform"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8072, 8680
                            hide_name = True
                            size = 66, 20
                        ]

                        tag From5 {
                            value = "engine_cycle_angle"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8192, 8952
                            hide_name = True
                            size = 111, 20
                        ]

                        tag From2 {
                            value = "standard_dev"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8160, 8712
                            hide_name = True
                            size = 111, 20
                        ]

                        tag From6 {
                            value = "half_normal_dist"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8184, 9016
                            hide_name = True
                            size = 111, 20
                        ]

                        tag From11 {
                            value = "rand_uniform"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8288, 8680
                            hide_name = True
                            size = 78, 20
                        ]

                        tag Goto4 {
                            value = "selected_random_amplitude"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8656, 9016
                            hide_name = True
                            size = 147, 20
                        ]

                        tag From7 {
                            value = "selected_random_amplitude"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8736, 8768
                            hide_name = True
                            size = 155, 20
                        ]

                        tag From8 {
                            value = "constant_roughness"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8752, 8792
                            hide_name = True
                            size = 120, 20
                        ]

                        tag Goto5 {
                            value = "constant_roughness"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8640, 8952
                            hide_name = True
                            size = 117, 20
                        ]

                        tag Goto1 {
                            value = "enable_roughness"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7920, 8288
                            hide_name = True
                            size = 112, 20
                        ]

                        tag From9 {
                            value = "enable_roughness"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8760, 8744
                            hide_name = True
                            size = 111, 20
                        ]

                        tag From1 {
                            value = "enable_roughness"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7824, 8680
                            hide_name = True
                            size = 111, 20
                        ]

                        tag Goto6 {
                            value = "half_normal_dist"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8712, 8584
                            hide_name = True
                            size = 99, 20
                        ]

                        tag From3 {
                            value = "enable_roughness"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8272, 8648
                            hide_name = True
                            size = 111, 20
                        ]

                        junction Junction2 sp
                        [
                            position = 8552, 9016
                        ]

                        junction Junction1 sp
                        [
                            position = 8544, 8952
                        ]

                        comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">msws generates random numbers [0:1]</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">with a standard uniform distribution</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;"> with an avg of 0.5</span></p></body></html> ENDCOMMENT 
                        [
                            position = 7880, 8592
                        ]

                        comment Comment2 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">normal_distribution generates </span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">2 random variables having a </span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">a normal distribution, given a standard </span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">uniform distribution and a standard </span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">deviation + mean</span></p></body></html> ENDCOMMENT 
                        [
                            position = 8264, 8528
                        ]

                        comment Comment3 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">If the std of a normal distribution is sigma,</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">then, the std of the absolute value of that</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">distribution (the so-called 'half-normal distribution')</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">is sigma*sqrt(1 - 2/pi).</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">Since we will end up using a half-normal</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">distribution for emulating the engine roughness,</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">we should pre-adjust the sigma here to result</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">in correct sigma at the end.</span></p></body></html> ENDCOMMENT 
                        [
                            position = 8016, 8728
                        ]

                        comment Comment4 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">'abs' is necessary in order to prevent negative amplitude </span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">of the engine roughness. Negative amplitude is bad because</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">it could lead to a non-zero torque (or power) average over</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">a given engine cycle. The consequence of &quot;abs&quot; is that it</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">transforms a normal distribution into a half-normal one.</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">This requires re-adjustment of the original std into a value </span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">such that half-normal distribution's std will be equal to the</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">original std.</span></p></body></html> ENDCOMMENT 
                        [
                            position = 8496, 8440
                        ]

                        comment Comment5 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">this block picks a random number</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">once per cylinder peak,</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">and generates the constant roughness</span></p></body></html> ENDCOMMENT 
                        [
                            position = 8312, 8872
                        ]

                        comment Comment6 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">final roughness (in per unit) to be applied to mean torque</span></p></body></html> ENDCOMMENT 
                        [
                            position = 9024, 8800
                        ]

                        comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">Given a normal distribution with std sigma and </span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">mean 0, check that the corresponding </span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">half-normal distribution  should have a std of</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;"> sigma*sqrt(1-2/pi) and a mean of </span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">sigma*sqrt(2.0/pi)</span></p></body></html> ENDCOMMENT 
                        [
                            position = 8672, 8592
                        ]

                        connect Product1.in1 From7 as Connection114
                        connect engine_cycle_angle Goto3 as Connection26
                        connect msws.out Goto8 as Connection115
                        connect From11 normal_distribution.random_input as Connection116
                        connect normal_distribution.out2 Termination1.in as Connection30
                        connect From2 Gain1.in as Connection117
                        connect Gain1.out normal_distribution.std as Connection118
                        connect enable_roughness Goto1 as Connection16
                        connect Abs1.out Goto6 as Connection131
                        [
                            breakpoints = 8632, 8584
                        ]
                        connect Product1.out torque_roughness_pu as Connection132
                        [
                            breakpoints = 9024, 8768
                        ]
                        connect "C function1.engine_cycle_angle" From5 as Connection43
                        connect "C function1.constant_roughness" Junction1 as Connection135
                        connect "C function1.selected_random_amp" Junction2 as Connection138
                        connect Abs1.in normal_distribution.out1 as Connection57
                        connect From1 msws.enable as Connection17
                        connect random_amplitude.in Junction2 as Connection140
                        connect From8 Product1.in2 as Connection74
                        connect standard_dev Goto2 as Connection18
                        connect Junction1 Goto5 as Connection136
                        [
                            breakpoints = 8576, 8952
                        ]
                        connect Junction2 Goto4 as Connection139
                        [
                            breakpoints = 8576, 9016
                        ]
                        connect Constant1.out normal_distribution.avg as Connection20
                        connect From9 Product1.in as Connection75
                        connect From3 normal_distribution.enable as Connection21
                        connect From6 "C function1.rand_normal_dist" as Connection84
                        connect constant_roughness.in Junction1 as Connection137
                    }
                    [
                        position = 10456, 8944
                        size = 184, 136
                    ]

                    component gen_gain Gain6 {
                        gain = "H"
                    }
                    [
                        position = 9448, 9136
                        hide_name = True
                    ]

                    component gen_c_function "Throttle body" {
                        global_variables = "real mi_dot_var;real critical_condition;real Pm_on_Po;real Meq_var;real keq_var;real mfi_dot_var;real dummy;real lambda_sp_var;real Pm_effective;real Po_effective;real mi_dot_sign;"
                        in_terminal_dimensions = "inherit;inherit;inherit;inherit;inherit"
                        in_terminal_dimensions_str = "Aeq inherit;Po inherit;Pm inherit;To inherit;lambda_sp inherit"
                        in_terminal_labels = "[(\'Aeq\', True), (\'Po\', True), (\'Pm\', True), (\'To\', True), (\'lambda_sp\', True)]"
                        in_terminal_properties = "real Aeq;real Po;real Pm;real To;real lambda_sp;"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit;inherit;inherit;inherit"
                        out_terminal_dimensions_str = "mi_dot inherit;Meq_throttle inherit;keq_throttle inherit;mfi_dot inherit"
                        out_terminal_labels = "[(\'mi_dot\', True), (\'Meq_throttle\', True), (\'keq_throttle\', True), (\'mfi_dot\', True)]"
                        out_terminal_properties = "real mi_dot;real Meq_throttle;real keq_throttle;real mfi_dot;"
                        output_fnc = "/*Begin code section*/
mi_dot = mi_dot_var;
Meq_throttle = Meq_var;
keq_throttle = keq_var;
mfi_dot = mfi_dot_var;
/*End code section*/"
                        parameters = "real R_gas_cst;real cd;real lambda_eq;real Ma;real Mf;real keq_a1;real keq_a2;real keq_a7;"
                        update_fnc = "/*Begin code section*/
//equivalent molecular mass of air-fuel mixture over intake throttle
lambda_sp_var = lambda_sp;

if (lambda_sp_var > 1e6)
{
    lambda_sp_var = 1e6;
    Meq_var = Ma;
}
else
{
    Meq_var = (lambda_sp_var*lambda_eq*Ma + Mf)/(lambda_sp_var*lambda_eq + 1.0); 
}


//Meq_var = (lambda_sp_var*lambda_eq*Ma + Mf)/(lambda_sp_var*lambda_eq + 1.0); 

//specific heat ratio of air-fuel mixture
//Control the term with lambda_sp as denominator to avoid div by 0
if (lambda_sp_var < 1e-16)
{
    dummy = keq_a7*1e16;
}
else
{
    dummy = keq_a7/lambda_sp_var;
}

keq_var = keq_a1 + keq_a2*To + dummy;


//Because mass flow rate over throttle is written for one-direction, it assumes Pm < Po.
//Since Po, is a user-input [potentially a turbo-charger output in the future], we 
//have to be careful if the user inadvertently changes Po to be less than Pm.
//In case Po < Pm, mass flow rate over throttle must reverse direction, meaning 
//that our definition of Po becomes Pm, and Pm becomes Po

if (Pm > Po)
{
    Pm_effective = Po;
    Po_effective = Pm;
    mi_dot_sign = -1.0;
}
else
{
    Pm_effective = Pm;
    Po_effective = Po;
    mi_dot_sign = 1.0;
}


critical_condition = powf((2.0/(keq_var + 1.0)),(keq_var/(keq_var - 1.0)));
Pm_on_Po = Pm_effective/Po_effective;

if ((Pm_on_Po) > critical_condition)
{
    //unchoked flow condition
    mi_dot_var = cd*Aeq*Po*powf(Pm_on_Po,(1.0/keq_var))*sqrtf((2.0*keq_var/(keq_var - 1.0))*(1.0 - powf(Pm_on_Po, (keq_var - 1.0)/keq_var))) / sqrtf(R_gas_cst*To/Meq_var);
}
else
{
    //choked flow
    mi_dot_var = cd*Aeq*Po*sqrtf(keq_var)*powf((2.0/(keq_var + 1.0)),((keq_var + 1.0)/(2.0*(keq_var - 1.0)))) / sqrtf(R_gas_cst*To/Meq_var);
}

//implement sign of mi_dot
mi_dot_var = mi_dot_var*mi_dot_sign;

//fuel flow rate
mfi_dot_var = mi_dot_var/(lambda_sp_var*lambda_eq + 1.0);
/*End code section*/"
                    }
                    [
                        position = 8296, 8304
                        size = 120, 208
                    ]

                    component gen_terminator Termination1 {
                    }
                    [
                        position = 8424, 8272
                        hide_name = True
                    ]

                    component gen_gain Gain1 {
                        gain = "np.pi/30.0"
                    }
                    [
                        position = 10328, 8624
                        hide_name = True
                    ]

                    component gen_sum Sum3 {
                        signs = "+-"
                    }
                    [
                        position = 9552, 9144
                        hide_name = True
                    ]

                    component gen_terminator Termination2 {
                    }
                    [
                        position = 8424, 8336
                        hide_name = True
                    ]

                    component gen_gain Gain8 {
                        gain = "1.0e-3"
                    }
                    [
                        position = 9192, 7848
                        hide_name = True
                    ]

                    component gen_c_function "C function4" {
                        global_variables = "real dummy;"
                        in_terminal_dimensions = "inherit"
                        in_terminal_dimensions_str = "lambda_sp inherit"
                        in_terminal_labels = "[(\'lambda_sp\', True)]"
                        in_terminal_properties = "real lambda_sp;"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "NOx inherit"
                        out_terminal_labels = "[(\'NOx\', True)]"
                        out_terminal_properties = "real NOx;"
                        output_fnc = "/*Begin code section*/
dummy = powf((lambda_sp - NOx_b)/NOx_c,2);
NOx = NOx_a * exp(-dummy);
/*End code section*/"
                        parameters = "real NOx_a;real NOx_b;real NOx_c;"
                    }
                    [
                        position = 9544, 9232
                        size = 104, 48
                    ]

                    component gen_probe P_loss_kW {
                    }
                    [
                        position = 9280, 7848
                    ]

                    component gen_integrator Integrator2 {
                        init_value = "0.0"
                        limit_lower = "0.0"
                        limit_output = "True"
                        limit_upper = "1.0"
                    }
                    [
                        position = 9080, 8472
                        hide_name = True
                    ]

                    component gen_limiter Limit7 {
                        lower_limit = "0.0"
                        upper_limit = "1.0"
                    }
                    [
                        position = 7864, 8392
                        hide_name = True
                    ]

                    component gen_probe mi_dot_ {
                    }
                    [
                        position = 8864, 7752
                    ]

                    component gen_probe Torque_thermal {
                    }
                    [
                        position = 9224, 8128
                    ]

                    component gen_product Product2 {
                    }
                    [
                        position = 9400, 8488
                        hide_name = True
                    ]

                    component gen_c_function f_dot {
                        in_terminal_dimensions = "inherit;inherit;inherit;inherit;inherit"
                        in_terminal_dimensions_str = "mfi_dot inherit;mi_dot inherit;f inherit;Pm inherit;Tm inherit"
                        in_terminal_labels = "[(\'mfi_dot\', True), (\'mi_dot\', True), (\'f\', True), (\'Pm\', True), (\'Tm\', True)]"
                        in_terminal_properties = "real mfi_dot;inherit mi_dot;inherit f;inherit Pm;inherit Tm;"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit;inherit"
                        out_terminal_dimensions_str = "f_dot inherit;Meqm inherit"
                        out_terminal_labels = "[(\'f_dot\', True), (\'Meqm\', True)]"
                        out_terminal_properties = "real f_dot;inherit Meqm;"
                        output_fnc = "/*Begin code section*/
Meqm = (1.0 - f)*Ma + f*Mf;
f_dot = R_gas_cst*Tm*(mfi_dot - f*mi_dot)/(V*Meqm*Pm);
/*End code section*/"
                        parameters = "real R_gas_cst;real V;real Ma;real Mf;"
                    }
                    [
                        position = 8920, 8520
                        size = 80, 136
                    ]

                    component gen_z_domain_transfer lpf {
                        a_coeff = "[1.0/(2.0*np.pi*10.0),1.0]"
                        b_coeff = "[1.0]"
                        domain = "S-domain"
                    }
                    [
                        position = 10656, 8304
                    ]

                    component gen_gain "pu->m^2" {
                        gain = "Aeq_max"
                    }
                    [
                        position = 7920, 7896
                    ]

                    component gen_limiter Limit14 {
                        lower_limit = "0.0"
                        upper_limit = "1.0"
                    }
                    [
                        position = 9688, 8896
                        hide_name = True
                    ]

                    component gen_probe mfi_dot {
                    }
                    [
                        position = 8864, 7816
                    ]

                    component src_scada_input Po {
                        def_value = "Po_nom"
                        execution_rate = "T_engine"
                        max = "1e9"
                        min = "0"
                        unit = "Pa"
                    }
                    [
                        position = 7216, 8056
                    ]

                    component gen_probe transp_delay {
                    }
                    [
                        position = 10080, 8544
                    ]

                    component src_scada_input lambda_sp {
                        def_value = "lambda_sp_nom"
                        execution_rate = "T_engine"
                        max = "10.0"
                        min = "0"
                        unit = ""
                    }
                    [
                        position = 7216, 8168
                    ]

                    component gen_bus_split "Bus Split1" {
                        outputs = "4"
                    }
                    [
                        position = 7304, 7952
                        hide_name = True
                    ]

                    component gen_limiter Limit2 {
                        lower_limit = "1e-16"
                    }
                    [
                        position = 7816, 8176
                        hide_name = True
                    ]

                    component gen_probe T_roughness_pu {
                    }
                    [
                        position = 10664, 8896
                    ]

                    component gen_limiter Limit3 {
                        lower_limit = "0.0"
                    }
                    [
                        position = 7816, 8112
                        hide_name = True
                    ]

                    component src_constant Constant2 {
                        execution_rate = "inherit"
                        value = "1.0"
                    }
                    [
                        position = 9536, 8632
                        hide_name = True
                    ]

                    component gen_data_type_conversion "Data Type Conversion3" {
                        output_type = "int"
                    }
                    [
                        position = 7808, 8456
                        hide_name = True
                    ]

                    component gen_sum Sum2 {
                    }
                    [
                        position = 9632, 8608
                        hide_name = True
                    ]

                    component gen_probe mo_dot_ {
                    }
                    [
                        position = 8864, 7944
                    ]

                    component gen_limiter Limit4 {
                        lower_limit = "1e-16"
                    }
                    [
                        position = 7840, 8048
                        hide_name = True
                    ]

                    component gen_probe eta_vol_ {
                    }
                    [
                        position = 8864, 7872
                    ]

                    component gen_c_function "Var Transport delay" {
                        global_variables = "real buffer[1000];int buffer_size;real tau_d;int i;real buffer_size_real;int old_buffer_size;"
                        in_terminal_dimensions = "inherit;inherit"
                        in_terminal_dimensions_str = "n_rpm inherit;in inherit"
                        in_terminal_labels = "[(\'n_rpm\', True), (\'in\', True)]"
                        in_terminal_properties = "real n_rpm;inherit in;"
                        init_fnc = "/*Begin code section*/
//initialize buffer
for ( i = 0; i < 1000; i = i+1)
{
    buffer[i] = 0.0;
}
old_buffer_size = 1;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit;inherit"
                        out_terminal_dimensions_str = "out inherit;tau_d_out inherit"
                        out_terminal_labels = "[(\'out\', True), (\'tau_d_out\', True)]"
                        out_terminal_properties = "real out;inherit tau_d_out;"
                        output_fnc = "/*Begin code section*/
out = buffer[0];
tau_d_out = tau_d;
/*End code section*/"
                        parameters = "real ncyl;"
                        update_fnc = "/*Begin code section*/
//calculate transport delay. watch for div by 0
if (n_rpm < 0.1)
{
    n_rpm = 0.1;
}
tau_d = (60.0/n_rpm)*(1.0 + 1.0/ncyl) + 45.0/(6.0*n_rpm);

//determine size of buffer to use.
//use a (real) to accomodate for arbitrarily large values
buffer_size_real = tau_d/execution_rate;
if (buffer_size_real > 1000)
{
    buffer_size_real = 1000;
}
if (buffer_size_real < 1)
{
    buffer_size_real = 1;
}

buffer_size = (int)buffer_size_real; //convert to (int) for indexing

//update buffer

//if new buffer size is greater than previous buffer size, there is need to re-initialize the buffer registers in the interval
if (buffer_size > old_buffer_size)
{
    for ( i = old_buffer_size-1; i < buffer_size; i = i+1)
    {
        buffer[i] = in;
    }
}
else
{
    buffer[buffer_size-1] = in; //new element    
}
old_buffer_size = buffer_size; //update old buffer size

//barrel shift
for ( i = 0; i < buffer_size-1; i = i+1)
{
    buffer[i] = buffer[i+1];
}
/*End code section*/"
                    }
                    [
                        position = 9960, 8496
                        size = 80, 64
                    ]

                    component gen_probe lambda_spb_ {
                    }
                    [
                        position = 9112, 9008
                    ]

                    component gen_probe eta_therm_ {
                    }
                    [
                        position = 9808, 8840
                    ]

                    component gen_data_type_conversion "Data Type Conversion4" {
                    }
                    [
                        position = 7920, 8456
                        hide_name = True
                    ]

                    component gen_limiter Limit17 {
                        lower_limit = "1e-16"
                    }
                    [
                        position = 7832, 7984
                        hide_name = True
                    ]

                    component gen_integrator Integrator1 {
                        init_value = "atmospheric_pressure"
                        limit_lower = "1e-16"
                        limit_output = "True"
                    }
                    [
                        position = 9088, 8304
                        hide_name = True
                    ]

                    component gen_limiter Limit18 {
                        lower_limit = "0.0"
                        upper_limit = "1.0"
                    }
                    [
                        position = 7768, 7896
                        hide_name = True
                    ]

                    component gen_probe lambda_sp_ {
                    }
                    [
                        position = 8040, 8080
                    ]

                    component gen_sum Sum1 {
                        signs = "+-"
                    }
                    [
                        position = 10536, 8744
                        hide_name = True
                    ]

                    component gen_data_type_conversion "Data Type Conversion1" {
                        output_type = "int"
                    }
                    [
                        position = 7808, 8392
                        hide_name = True
                    ]

                    component gen_c_function mo_dot {
                        in_terminal_dimensions = "inherit;inherit;inherit;inherit;inherit"
                        in_terminal_dimensions_str = "n_rpm inherit;eta_vol inherit;Pm inherit;Meqm inherit;Tm inherit"
                        in_terminal_labels = "[(\'n_rpm\', True), (\'eta_vol\', True), (\'Pm\', True), (\'Meqm\', True), (\'Tm\', True)]"
                        in_terminal_properties = "real n_rpm;real eta_vol;real Pm;real Meqm;real Tm;"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "mo_dot inherit"
                        out_terminal_labels = "[(\'mo_dot\', True)]"
                        out_terminal_properties = "real mo_dot;"
                        output_fnc = "/*Begin code section*/
mo_dot = n_rpm*Vd*eta_vol*Pm*Meqm/(120.0 * R_gas_cst*Tm);
/*End code section*/"
                        parameters = "real Vd;real R_gas_cst;"
                    }
                    [
                        position = 8920, 8712
                        size = 80, 136
                    ]

                    component gen_data_type_conversion "Data Type Conversion2" {
                    }
                    [
                        position = 7920, 8392
                        hide_name = True
                    ]

                    component gen_abs Abs1 {
                    }
                    [
                        position = 8832, 8664
                        hide_name = True
                    ]

                    component src_constant Constant3 {
                        execution_rate = "inherit"
                        value = "0.0"
                    }
                    [
                        position = 10792, 8616
                        hide_name = True
                    ]

                    component gen_c_function eta_vol {
                        global_variables = "real Pm_on_Po;"
                        in_terminal_dimensions = "inherit;inherit;inherit"
                        in_terminal_dimensions_str = "Pm inherit;Po inherit;n_rpm inherit"
                        in_terminal_labels = "[(\'Pm\', True), (\'Po\', True), (\'n_rpm\', True)]"
                        in_terminal_properties = "real Pm;inherit Po;inherit n_rpm;"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "eta_vol inherit"
                        out_terminal_labels = "[(\'eta_vol\', True)]"
                        out_terminal_properties = "real eta_vol;"
                        output_fnc = "/*Begin code section*/
Pm_on_Po = Pm/Po;
eta_vol = (1.0 + a_eta_vol*(Pm_on_Po - 1.0) + b_eta_vol*((Pm_on_Po*Pm_on_Po) - 1.0))*exp(-powf(((1.0/c_eta_vol)*(n_rpm - n_rpm_pk)/1000.0),2));
/*End code section*/"
                        parameters = "real n_rpm_pk;real a_eta_vol;real b_eta_vol;real c_eta_vol;"
                    }
                    [
                        position = 8920, 8896
                        size = 64, 104
                    ]

                    component gen_abs Abs2 {
                    }
                    [
                        position = 8840, 8928
                        hide_name = True
                    ]

                    component gen_abs Abs3 {
                    }
                    [
                        position = 9856, 8480
                        hide_name = True
                    ]

                    component gen_gain Gain7 {
                        gain = "starter_torque_Nm"
                    }
                    [
                        position = 10568, 8304
                        hide_name = True
                    ]

                    component gen_probe P_therm_kW {
                    }
                    [
                        position = 8936, 8080
                    ]

                    component src_constant Constant1 {
                        execution_rate = "inherit"
                        value = "engine_roughness_enabled"
                    }
                    [
                        position = 10304, 8896
                        hide_name = True
                    ]

                    component gen_c_function "C function1" {
                        global_variables = "real var;real TWO_PI;real PI;"
                        in_terminal_dimensions = "inherit"
                        in_terminal_dimensions_str = "w inherit"
                        in_terminal_labels = "[(\'w\', True)]"
                        in_terminal_properties = "real w;"
                        init_fnc = "/*Begin code section*/
var = 0;
TWO_PI  = 6.283185307179586;
PI = 3.141592653589793;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "crankshaft_angle inherit"
                        out_terminal_labels = "[(\'crankshaft_angle\', True)]"
                        out_terminal_properties = "real crankshaft_angle;"
                        output_fnc = "/*Begin code section*/
crankshaft_angle = var;
/*End code section*/"
                        update_fnc = "/*Begin code section*/
var = var + w*execution_rate;
if (var > TWO_PI)
{
    var = var - TWO_PI;
}
if (var < 0)
{
    var = var + TWO_PI;
}
/*End code section*/"
                    }
                    [
                        position = 10120, 9296
                        size = 128, 48
                    ]

                    component src_scada_input theta_deg {
                        def_value = "theta_deg_nom"
                        execution_rate = "T_engine"
                        max = "0"
                        min = "-90.0"
                        unit = "°"
                    }
                    [
                        position = 7216, 8280
                    ]

                    component gen_gain Gain4 {
                        gain = "1.0e-3"
                    }
                    [
                        position = 8848, 8080
                        hide_name = True
                    ]

                    component gen_limiter Limit11 {
                        lower_limit = "0.0"
                        upper_limit = "1.0"
                    }
                    [
                        position = 9008, 8896
                        hide_name = True
                    ]

                    component gen_c_function eta_therm {
                        global_variables = "real theta_norm;"
                        in_terminal_dimensions = "inherit;inherit"
                        in_terminal_dimensions_str = "lambda_spb inherit;theta_deg inherit"
                        in_terminal_labels = "[(\'lambda_spb\', True), (\'theta_deg\', True)]"
                        in_terminal_properties = "real lambda_spb;inherit theta_deg;"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "eta_therm inherit"
                        out_terminal_labels = "[(\'eta_therm\', True)]"
                        out_terminal_properties = "real eta_therm;"
                        output_fnc = "/*Begin code section*/
eta_therm = (a_eta_therm + b_eta_therm*theta_norm + c_eta_therm*theta_norm*theta_norm)*exp(-powf((lambda_spb + d_eta_therm + e_eta_therm*theta_norm)/(f_eta_therm + g_eta_therm*theta_norm),2));
/*End code section*/"
                        parameters = "real a_eta_therm;real b_eta_therm;real c_eta_therm;real d_eta_therm;real e_eta_therm;real f_eta_therm;real g_eta_therm;"
                        update_fnc = "/*Begin code section*/
theta_norm = theta_deg/90.0;
/*End code section*/"
                    }
                    [
                        position = 9568, 8896
                        size = 120, 80
                    ]

                    component gen_product Product3 {
                        signs = "3"
                    }
                    [
                        position = 9736, 8552
                        hide_name = True
                    ]

                    component gen_c_function "C function3" {
                        in_terminal_dimensions = "inherit"
                        in_terminal_dimensions_str = "lambda_sp inherit"
                        in_terminal_labels = "[(\'lambda_sp\', False)]"
                        in_terminal_properties = "real lambda_sp;"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "sigma inherit"
                        out_terminal_labels = "[(\'sigma\', False)]"
                        out_terminal_properties = "real sigma;"
                        output_fnc = "/*Begin code section*/
sigma = (1.0/(1.0 + exp(-k_roughness*(lambda_sp - xo_roughness))));
/*End code section*/"
                        parameters = "real k_roughness;real xo_roughness;"
                    }
                    [
                        position = 10000, 8944
                        hide_name = True
                        size = 48, 48
                    ]

                    component gen_abs Abs4 {
                    }
                    [
                        position = 10200, 8624
                        hide_name = True
                    ]

                    component gen_probe std {
                    }
                    [
                        position = 10096, 8984
                    ]

                    component gen_probe Torque_friction {
                    }
                    [
                        position = 9216, 8072
                    ]

                    component gen_limiter Limit15 {
                        lower_limit = "0.1"
                    }
                    [
                        position = 10264, 8624
                        hide_name = True
                    ]

                    component gen_integrator Integrator3 {
                    }
                    [
                        position = 10688, 8472
                        hide_name = True
                    ]

                    component gen_sum Sum5 {
                        signs = "+-"
                    }
                    [
                        position = 10208, 8728
                        hide_name = True
                    ]

                    component gen_bus_join "Bus Join1" {
                        inputs = "4"
                    }
                    [
                        position = 10888, 8592
                        hide_name = True
                    ]

                    component gen_probe P_shaft_kW {
                    }
                    [
                        position = 9288, 8000
                    ]

                    component gen_probe Aeq_ {
                    }
                    [
                        position = 8864, 8008
                    ]

                    component gen_gain Gain2 {
                        gain = "1.0e-3"
                    }
                    [
                        position = 9208, 8000
                        hide_name = True
                    ]

                    component gen_gain Gain5 {
                        gain = "np.pi/30.0"
                    }
                    [
                        position = 9984, 9296
                        hide_name = True
                    ]

                    component gen_probe T_shaft_ {
                    }
                    [
                        position = 10896, 8288
                    ]

                    component gen_probe crank_shaft_angle {
                    }
                    [
                        position = 10336, 9296
                    ]

                    component gen_probe P_manifold_MPa {
                    }
                    [
                        position = 9288, 7920
                    ]

                    component gen_c_function "C function2" {
                        global_variables = "real PI;int half_cycle_counter;real crankshaft_angle_k1;real engine_cycle_angle;real delta_angle;real TWO_PI;"
                        in_terminal_dimensions = "inherit"
                        in_terminal_dimensions_str = "crankshaft_angle inherit"
                        in_terminal_labels = "[(\'crankshaft_angle\', True)]"
                        in_terminal_properties = "real crankshaft_angle;"
                        init_fnc = "/*Begin code section*/
PI = 3.141592653589793;
TWO_PI = 6.283185307179586;
half_cycle_counter = 0;
engine_cycle_angle = 0;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "engine_cycle_angle_out inherit"
                        out_terminal_labels = "[(\'engine_cycle_angle_out\', True)]"
                        out_terminal_properties = "real engine_cycle_angle_out;"
                        output_fnc = "/*Begin code section*/
engine_cycle_angle_out = engine_cycle_angle;
/*End code section*/"
                        update_fnc = "/*Begin code section*/
//convert crankshaft angle to engine_cycle_angle
delta_angle = fabs(crankshaft_angle - crankshaft_angle_k1);
if (delta_angle > PI)
{
    half_cycle_counter = half_cycle_counter + 1;
}

switch(half_cycle_counter)
{
    case 0:
        engine_cycle_angle = crankshaft_angle;
        break;
    case 1:
        engine_cycle_angle = TWO_PI + crankshaft_angle;
        break;
    case 2:
        half_cycle_counter = 0;
        break;
    default:
        //error, should never get here
        half_cycle_counter = 0;
}
crankshaft_angle_k1 = crankshaft_angle; //update angle history
/*End code section*/"
                    }
                    [
                        position = 10120, 9152
                        size = 240, 72
                    ]

                    component gen_c_function Pm_dot {
                        in_terminal_dimensions = "inherit;inherit;inherit;inherit;inherit"
                        in_terminal_dimensions_str = "mi_dot inherit;mfi_dot inherit;Tm inherit;mo_dot inherit;Meqm inherit"
                        in_terminal_labels = "[(\'mi_dot\', True), (\'mfi_dot\', True), (\'Tm\', True), (\'mo_dot\', True), (\'Meqm\', True)]"
                        in_terminal_properties = "real mi_dot;inherit mfi_dot;inherit Tm;inherit mo_dot;inherit Meqm;"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "Pm_dot inherit"
                        out_terminal_labels = "[(\'Pm_dot\', True)]"
                        out_terminal_properties = "real Pm_dot;"
                        output_fnc = "/*Begin code section*/
Pm_dot = R_gas_cst*Tm*(mi_dot - mfi_dot)/(V*Ma) + R_gas_cst*Tm*mfi_dot/(V*Mf) - mo_dot*R_gas_cst*Tm/(V*Meqm);
/*End code section*/"
                        parameters = "real R_gas_cst;real V;real Ma;real Mf;"
                    }
                    [
                        position = 8920, 8304
                        size = 96, 184
                    ]

                    component gen_probe engine_cycle_angle {
                    }
                    [
                        position = 10328, 9200
                    ]

                    component gen_gain Gain3 {
                        gain = "1.0e-6"
                    }
                    [
                        position = 9208, 7920
                        hide_name = True
                    ]

                    component gen_limiter Limit16 {
                        lower_limit = "0.0"
                        upper_limit = "1.0"
                    }
                    [
                        position = 7864, 8456
                        hide_name = True
                    ]

                    component gen_c_function lambda_spb {
                        in_terminal_dimensions = "inherit"
                        in_terminal_dimensions_str = "f inherit"
                        in_terminal_labels = "[(\'f\', True)]"
                        in_terminal_properties = "real f;"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "lambda_spb inherit"
                        out_terminal_labels = "[(\'lambda_spb\', True)]"
                        out_terminal_properties = "real lambda_spb;"
                        output_fnc = "/*Begin code section*/
//avoid div by 0

if (f < 1e-16)
{
    f = 1e-16;
}
lambda_spb = (1.0/f - 1.0)/lambda_eq;
/*End code section*/"
                        parameters = "real lambda_eq;"
                    }
                    [
                        position = 8888, 9064
                        size = 80, 56
                    ]

                    component src_scada_input Tm {
                        def_value = "Tm_nom"
                        execution_rate = "T_engine"
                        min = "0"
                        unit = "K"
                    }
                    [
                        position = 7216, 8224
                    ]

                    component gen_c_function "Friction losses" {
                        global_variables = "real Kf;real Pmf;real n_rpm_min;real friction_torque_dynamic;real friction_torque_static;real max_static_friction_torque;"
                        in_terminal_dimensions = "inherit"
                        in_terminal_dimensions_str = "n_rpm inherit"
                        in_terminal_labels = "[(\'n_rpm\', True)]"
                        in_terminal_properties = "real n_rpm;"
                        init_fnc = "/*Begin code section*/
n_rpm_min = 10.0; //minimum rpm for solving the problem of discontinuous static component of friction torque
max_static_friction_torque = kfb*sqrtf(Stroke*Dcm)/Bore * 1.0e6 * Vd/(120.0*0.1047197551196598); //maximum friction torque for 0 rpm
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit;inherit"
                        out_terminal_dimensions_str = "P_friction inherit;Torque_friction inherit"
                        out_terminal_labels = "[(\'P_friction\', True), (\'Torque_friction\', True)]"
                        out_terminal_properties = "real P_friction;inherit Torque_friction;"
                        output_fnc = "/*Begin code section*/
P_friction = Pmf*Vd*n_rpm/120.0; 

//Frictional torque is a sum of a static term (dependent on kfb) and a dynamic term (dependent on n_rpm^2)
//There is a numerical difficulty to simulate the static term when the speed is near 0.
//To fix this, convert the  static term to a speed-dependent torque for a given minimum n_rpm
Torque_friction = friction_torque_static + friction_torque_dynamic;

//Torque_friction = Pmf*Vd/(120.0*0.1047197551196598);

/*
if (fabs(n_rpm) <= n_rpm_min)
{
    if (n_rpm >= 0.0)
    {
        Torque_friction = P_friction/(n_rpm_min*0.1047197551196598);
    }
    else
    {
        Torque_friction = P_friction/(-n_rpm_min*0.1047197551196598); 
    }
}
else
{
    Torque_friction = P_friction/(n_rpm*0.1047197551196598);
}
*/
/*End code section*/"
                        parameters = "real Stroke;real Bore;real Dcm;real kfa;real kfb;real Vd;"
                        update_fnc = "/*Begin code section*/
Kf = kfa*n_rpm*n_rpm*1.0e-6 + kfb;
Pmf = Kf*sqrtf(Stroke*Dcm)/Bore * 1.0e6;

//Frictional torque is a sum of a static term (dependent on kfb) and a dynamic term (dependent on n_rpm^2)
//There is a numerical difficulty to simulate the static term when the speed is near 0.
//To fix this, convert the  static term to a speed-dependent torque for a given minimum n_rpm
if (fabs(n_rpm) < n_rpm_min)
{
    friction_torque_static = max_static_friction_torque*fabs(n_rpm)/n_rpm_min;
}
else
{
    friction_torque_static = max_static_friction_torque;
}

friction_torque_dynamic = kfa*n_rpm*n_rpm*sqrtf(Stroke*Dcm)/Bore * Vd/(120.0*0.1047197551196598);

//keep track of sign of frictional torque based on sign of n_rpm 
if (n_rpm < 0)
{
    friction_torque_dynamic = -1.0*friction_torque_dynamic;
    friction_torque_static = -1.0*friction_torque_static;
}
/*End code section*/"
                    }
                    [
                        position = 9600, 8744
                        size = 120, 72
                    ]

                    component gen_probe fuel_fraction {
                    }
                    [
                        position = 9248, 7752
                    ]

                    component gen_c_function Ptherm {
                        in_terminal_dimensions = "inherit;inherit"
                        in_terminal_dimensions_str = "mfo_dot inherit;eta_therm inherit"
                        in_terminal_labels = "[(\'mfo_dot\', True), (\'eta_therm\', True)]"
                        in_terminal_properties = "real mfo_dot;inherit eta_therm;"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "P_therm inherit"
                        out_terminal_labels = "[(\'P_therm\', True)]"
                        out_terminal_properties = "real P_therm;"
                        output_fnc = "/*Begin code section*/
P_therm = H*eta_therm*mfo_dot;
/*End code section*/"
                        parameters = "real H;"
                    }
                    [
                        position = 9528, 8504
                        size = 96, 64
                    ]

                    component src_scada_input To {
                        def_value = "To_nom"
                        execution_rate = "T_engine"
                        min = "0"
                        unit = "K"
                    }
                    [
                        position = 7216, 8112
                    ]

                    component gen_probe To_ {
                    }
                    [
                        position = 8040, 8016
                    ]

                    component gen_probe NOx {
                    }
                    [
                        position = 9584, 7752
                    ]

                    component gen_probe Po_ {
                    }
                    [
                        position = 8040, 7960
                    ]

                    component gen_probe Tm_ {
                    }
                    [
                        position = 8040, 8152
                    ]

                    component gen_probe theta_deg_ {
                    }
                    [
                        position = 8008, 8216
                    ]

                    component gen_product Product4 {
                    }
                    [
                        position = 9720, 9240
                        hide_name = True
                    ]

                    component gen_c_function "rate calculator" {
                        global_variables = "real in_k1;"
                        in_terminal_dimensions = "inherit"
                        in_terminal_dimensions_str = "in inherit"
                        in_terminal_labels = "[(\'in\', True)]"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "rate inherit"
                        out_terminal_labels = "[(\'rate\', True)]"
                        out_terminal_properties = "inherit rate;"
                        output_fnc = "/*Begin code section*/
rate = (in - in_k1)/execution_rate;
in_k1 = in;
/*End code section*/"
                    }
                    [
                        position = 10936, 8416
                        size = 80, 48
                    ]

                    component gen_probe T_shaft_dot_Nmps {
                    }
                    [
                        position = 11136, 8416
                    ]

                    component gen_probe P_shaft_dot_kWps {
                    }
                    [
                        position = 9656, 8032
                    ]

                    component gen_c_function "rate calculator1" {
                        global_variables = "real in_k1;"
                        in_terminal_dimensions = "inherit"
                        in_terminal_dimensions_str = "in inherit"
                        in_terminal_labels = "[(\'in\', True)]"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "rate inherit"
                        out_terminal_labels = "[(\'rate\', True)]"
                        out_terminal_properties = "inherit rate;"
                        output_fnc = "/*Begin code section*/
rate = (in - in_k1)/execution_rate;
in_k1 = in;
/*End code section*/"
                    }
                    [
                        position = 9448, 8032
                        size = 80, 48
                    ]

                    component gen_z_domain_transfer lpf_ {
                        a_coeff = "[1.0/(2.0*np.pi*10.0),1.0]"
                        b_coeff = "[1.0]"
                        domain = "S-domain"
                        method = "Euler"
                    }
                    [
                        position = 9536, 8032
                    ]

                    component gen_z_domain_transfer lpf_1 {
                        a_coeff = "[1.0/(2.0*np.pi*10.0),1.0]"
                        b_coeff = "[1.0]"
                        domain = "S-domain"
                        method = "Euler"
                    }
                    [
                        position = 11024, 8416
                    ]

                    port T_shaft {
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 10896, 8344
                    ]

                    port fuel_used_kg {
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 10792, 8472
                    ]

                    port emissions {
                        position = right:4
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 11032, 8592
                    ]

                    port inputs {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7208, 7952
                    ]

                    tag From36 {
                        value = "eta_therm"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9400, 8536
                        hide_name = True
                    ]

                    tag From6 {
                        value = "To"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8120, 8344
                        hide_name = True
                    ]

                    tag From37 {
                        value = "P_therm_delayed"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 10424, 8728
                        hide_name = True
                        size = 95, 20
                    ]

                    tag Goto5 {
                        value = "mi_dot"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8440, 8224
                        hide_name = True
                        size = 72, 20
                    ]

                    tag From38 {
                        value = "n_rpm"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9768, 8480
                        hide_name = True
                    ]

                    tag From39 {
                        value = "P_therm_delayed"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 10296, 8576
                        hide_name = True
                        size = 85, 20
                    ]

                    tag From12 {
                        value = "lambda_sp"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8120, 8384
                        hide_name = True
                    ]

                    tag From40 {
                        value = "P_loss"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 10440, 8760
                        hide_name = True
                    ]

                    tag Goto9 {
                        value = "keq_throttle"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8544, 8336
                        hide_name = True
                        size = 75, 20
                    ]

                    tag Goto22 {
                        value = "P_shaft"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 10640, 8744
                        hide_name = True
                        size = 72, 20
                    ]

                    tag Goto10 {
                        value = "mfi_dot"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8440, 8384
                        hide_name = True
                        size = 75, 20
                    ]

                    tag From41 {
                        value = "n_rpm"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 10112, 8624
                        hide_name = True
                    ]

                    tag Goto23 {
                        value = "T_thermal"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 10504, 8592
                        hide_name = True
                        size = 72, 20
                    ]

                    tag From42 {
                        value = "P_shaft"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9096, 8000
                        hide_name = True
                    ]

                    tag From43 {
                        value = "T_shaft"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 10640, 8352
                        hide_name = True
                    ]

                    tag From44 {
                        value = "Pm"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9096, 7920
                        hide_name = True
                    ]

                    tag From45 {
                        value = "f"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9120, 7752
                        hide_name = True
                    ]

                    tag Goto24 {
                        value = "n_rpm"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7896, 8312
                        hide_name = True
                    ]

                    tag From46 {
                        value = "mi_dot"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8744, 7752
                        hide_name = True
                    ]

                    tag From47 {
                        value = "mfi_dot"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8744, 7816
                        hide_name = True
                    ]

                    tag From48 {
                        value = "eta_vol"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8744, 7872
                        hide_name = True
                    ]

                    tag From49 {
                        value = "mo_dot"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8744, 7944
                        hide_name = True
                    ]

                    tag From50 {
                        value = "Aeq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8744, 8008
                        hide_name = True
                    ]

                    tag From51 {
                        value = "P_therm"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8736, 8080
                        hide_name = True
                    ]

                    tag From22 {
                        value = "Tm"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8776, 8568
                        hide_name = True
                    ]

                    tag Goto44 {
                        value = "ignition_in"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7432, 8016
                        hide_name = True
                    ]

                    tag From23 {
                        value = "n_rpm"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8752, 8664
                        hide_name = True
                    ]

                    tag From73 {
                        value = "Aeq_pu_in"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7688, 7896
                        hide_name = True
                    ]

                    tag From74 {
                        value = "Po_in"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7728, 7984
                        hide_name = True
                    ]

                    tag From24 {
                        value = "eta_vol"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8752, 8688
                        hide_name = True
                    ]

                    tag From75 {
                        value = "To_in"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7728, 8048
                        hide_name = True
                    ]

                    tag From25 {
                        value = "Pm"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8752, 8712
                        hide_name = True
                    ]

                    tag From76 {
                        value = "lambda_sp_in"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7720, 8112
                        hide_name = True
                        size = 86, 20
                    ]

                    tag From26 {
                        value = "Meqm"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8752, 8736
                        hide_name = True
                    ]

                    tag From77 {
                        value = "Tm_in"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7728, 8176
                        hide_name = True
                        size = 58, 20
                    ]

                    tag From27 {
                        value = "Tm"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8752, 8760
                        hide_name = True
                    ]

                    tag Goto15 {
                        value = "mo_dot"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9096, 8712
                        hide_name = True
                        size = 72, 20
                    ]

                    tag From28 {
                        value = "Pm"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 8864
                        hide_name = True
                    ]

                    tag From29 {
                        value = "Po"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 8896
                        hide_name = True
                    ]

                    tag From30 {
                        value = "n_rpm"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 8928
                        hide_name = True
                    ]

                    tag Goto16 {
                        value = "eta_vol"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9096, 8896
                        hide_name = True
                        size = 72, 20
                    ]

                    tag From31 {
                        value = "lambda_spb"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9416, 8880
                        hide_name = True
                        size = 77, 20
                    ]

                    tag Goto17 {
                        value = "lambda_spb"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9128, 9064
                        hide_name = True
                        size = 72, 20
                    ]

                    tag Goto1 {
                        value = "Aeq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8008, 7896
                        hide_name = True
                    ]

                    tag From32 {
                        value = "f"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8776, 9064
                        hide_name = True
                    ]

                    tag Goto2 {
                        value = "Po"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7928, 7984
                        hide_name = True
                    ]

                    tag Goto18 {
                        value = "theta_deg"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7912, 8240
                        hide_name = True
                    ]

                    tag Goto3 {
                        value = "To"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7928, 8048
                        hide_name = True
                    ]

                    tag From33 {
                        value = "theta_deg"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9416, 8912
                        hide_name = True
                        size = 77, 20
                    ]

                    tag Goto19 {
                        value = "eta_therm"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9784, 8896
                        hide_name = True
                        size = 72, 20
                    ]

                    tag Goto4 {
                        value = "lambda_sp"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7936, 8112
                        hide_name = True
                    ]

                    tag Goto20 {
                        value = "P_loss"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9744, 8728
                        hide_name = True
                        size = 72, 20
                    ]

                    tag From1 {
                        value = "Aeq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8120, 8224
                        hide_name = True
                    ]

                    tag From34 {
                        value = "n_rpm"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9424, 8744
                        hide_name = True
                    ]

                    tag From2 {
                        value = "Po"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8120, 8264
                        hide_name = True
                    ]

                    tag Goto21 {
                        value = "P_therm_delayed"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 10112, 8480
                        hide_name = True
                        size = 109, 20
                    ]

                    tag From3 {
                        value = "Pm"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8120, 8304
                        hide_name = True
                    ]

                    tag From52 {
                        value = "f"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9304, 8464
                        hide_name = True
                    ]

                    tag From53 {
                        value = "mo_dot"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9304, 8496
                        hide_name = True
                    ]

                    tag From54 {
                        value = "n_rpm"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9904, 9296
                        hide_name = True
                    ]

                    tag From5 {
                        value = "crankshaft_angle"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9896, 9152
                        hide_name = True
                        size = 111, 20
                    ]

                    tag Goto25 {
                        value = "crankshaft_angle"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 10296, 9352
                        hide_name = True
                        size = 118, 20
                    ]

                    tag Goto26 {
                        value = "engine_cycle_angle"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 10344, 9152
                        hide_name = True
                        size = 118, 20
                    ]

                    tag From55 {
                        value = "engine_cycle_angle"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 10264, 8992
                        hide_name = True
                        size = 111, 20
                    ]

                    tag From78 {
                        value = "theta_deg_in"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7720, 8240
                        hide_name = True
                        size = 86, 20
                    ]

                    tag From79 {
                        value = "n_rpm_in"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7720, 8312
                        hide_name = True
                        size = 86, 20
                    ]

                    tag From80 {
                        value = "starter_turnon_in"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7712, 8392
                        hide_name = True
                        size = 86, 20
                    ]

                    tag From81 {
                        value = "ignition_in"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7704, 8456
                        hide_name = True
                        size = 86, 20
                    ]

                    tag Goto45 {
                        value = "ignition"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7984, 8456
                        hide_name = True
                    ]

                    tag From82 {
                        value = "ignition"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9616, 8480
                        hide_name = True
                        size = 58, 20
                    ]

                    tag Goto27 {
                        value = "T_roughness_pu"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 10672, 8944
                        hide_name = True
                        size = 109, 20
                    ]

                    tag From15 {
                        value = "Tm"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8768, 8304
                        hide_name = True
                    ]

                    tag From57 {
                        value = "lambda_spb"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9904, 8944
                        hide_name = True
                    ]

                    tag From69 {
                        value = "Torque_friction"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9104, 8072
                        hide_name = True
                        size = 72, 20
                    ]

                    tag Goto28 {
                        value = "std"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 10104, 8944
                        hide_name = True
                        size = 72, 20
                    ]

                    tag From70 {
                        value = "Torque_friction"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 10080, 8744
                        hide_name = True
                        size = 87, 20
                    ]

                    tag From58 {
                        value = "std"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 10288, 8944
                        hide_name = True
                    ]

                    tag Goto11 {
                        value = "Tm"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7912, 8176
                        hide_name = True
                    ]

                    tag Goto29 {
                        value = "mfo_dot"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9520, 8448
                        hide_name = True
                        size = 72, 20
                    ]

                    tag From71 {
                        value = "T_thermal"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 10096, 8704
                        hide_name = True
                    ]

                    tag From59 {
                        value = "mfo_dot"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 10568, 8472
                        hide_name = True
                    ]

                    tag From16 {
                        value = "mo_dot"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8768, 8336
                        hide_name = True
                    ]

                    tag From60 {
                        value = "mfo_dot"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9368, 9136
                        hide_name = True
                    ]

                    tag Goto35 {
                        value = "T_shaft"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 10304, 8728
                        hide_name = True
                        size = 72, 20
                    ]

                    tag From61 {
                        value = "lambda_spb"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9416, 9232
                        hide_name = True
                    ]

                    tag From17 {
                        value = "Meqm"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8768, 8368
                        hide_name = True
                    ]

                    tag From62 {
                        value = "P_therm"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9424, 9168
                        hide_name = True
                    ]

                    tag From72 {
                        value = "T_thermal"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9104, 8128
                        hide_name = True
                        size = 72, 20
                    ]

                    tag Goto30 {
                        value = "P_thermal_loss"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9688, 9144
                        hide_name = True
                        size = 118, 20
                    ]

                    tag Goto12 {
                        value = "Pm"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9216, 8304
                        hide_name = True
                        size = 72, 20
                    ]

                    tag Goto31 {
                        value = "NOx"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9824, 9240
                        hide_name = True
                        size = 61, 20
                    ]

                    tag Goto36 {
                        value = "Aeq_pu_in"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7432, 7888
                        hide_name = True
                    ]

                    tag From63 {
                        value = "P_thermal_loss"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 10696, 8560
                        hide_name = True
                        size = 111, 20
                    ]

                    tag Goto37 {
                        value = "Po_in"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7312, 8056
                        hide_name = True
                    ]

                    tag From64 {
                        value = "NOx"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 10696, 8584
                        hide_name = True
                        size = 111, 20
                    ]

                    tag From18 {
                        value = "mfi_dot"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8776, 8472
                        hide_name = True
                    ]

                    tag From65 {
                        value = "COx"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 10696, 8608
                        hide_name = True
                        size = 111, 20
                    ]

                    tag Goto38 {
                        value = "To_in"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7312, 8112
                        hide_name = True
                    ]

                    tag From66 {
                        value = "HCx"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 10696, 8632
                        hide_name = True
                        size = 111, 20
                    ]

                    tag From19 {
                        value = "mi_dot"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8776, 8496
                        hide_name = True
                    ]

                    tag Goto32 {
                        value = "starter_on"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7984, 8392
                        hide_name = True
                    ]

                    tag Goto39 {
                        value = "lambda_sp_in"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7312, 8168
                        hide_name = True
                        size = 70, 20
                    ]

                    tag From67 {
                        value = "starter_on"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 10456, 8304
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto13 {
                        value = "f"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9184, 8472
                        hide_name = True
                        size = 72, 20
                    ]

                    tag Goto8 {
                        value = "Meq_throttle"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8544, 8272
                        hide_name = True
                        size = 75, 20
                    ]

                    tag Goto40 {
                        value = "Tm_in"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7312, 8224
                        hide_name = True
                    ]

                    tag From68 {
                        value = "P_loss"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9112, 7848
                        hide_name = True
                    ]

                    tag Goto14 {
                        value = "Meqm"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9096, 8568
                        hide_name = True
                        size = 72, 20
                    ]

                    tag From56 {
                        value = "T_roughness_pu"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9512, 8600
                        hide_name = True
                        size = 89, 20
                    ]

                    tag Goto41 {
                        value = "theta_deg_in"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7320, 8280
                        hide_name = True
                        size = 75, 20
                    ]

                    tag From13 {
                        value = "mi_dot"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8768, 8240
                        hide_name = True
                    ]

                    tag From20 {
                        value = "f"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8776, 8520
                        hide_name = True
                    ]

                    tag Goto33 {
                        value = "P_therm"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9848, 8592
                        hide_name = True
                        size = 65, 20
                    ]

                    tag Goto42 {
                        value = "n_rpm_in"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7432, 7920
                        hide_name = True
                    ]

                    tag From14 {
                        value = "mfi_dot"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8768, 8272
                        hide_name = True
                    ]

                    tag From21 {
                        value = "Pm"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8776, 8544
                        hide_name = True
                    ]

                    tag Goto34 {
                        value = "Torque_friction"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9744, 8760
                        hide_name = True
                        size = 72, 20
                    ]

                    tag Goto43 {
                        value = "starter_turnon_in"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7440, 7984
                        hide_name = True
                        size = 93, 20
                    ]

                    tag From83 {
                        value = "NOx"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9448, 7752
                        hide_name = True
                        size = 72, 20
                    ]

                    tag From84 {
                        value = "ignition"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9632, 9272
                        hide_name = True
                    ]

                    junction Junction7 sp
                    [
                        position = 9728, 8896
                    ]

                    junction Junction8 sp
                    [
                        position = 7872, 8112
                    ]

                    junction Junction10 sp
                    [
                        position = 10208, 9296
                    ]

                    junction Junction11 sp
                    [
                        position = 10272, 9152
                    ]

                    junction Junction13 sp
                    [
                        position = 10048, 8944
                    ]

                    junction Junction14 sp
                    [
                        position = 9456, 8488
                    ]

                    junction Junction15 sp
                    [
                        position = 10832, 8616
                    ]

                    junction Junction16 sp
                    [
                        position = 10840, 8344
                    ]

                    junction Junction17 sp
                    [
                        position = 10568, 8944
                    ]

                    junction Junction18 sp
                    [
                        position = 9792, 8552
                    ]

                    junction Junction19 sp
                    [
                        position = 9016, 9064
                    ]

                    junction Junction20 sp
                    [
                        position = 7880, 8048
                    ]

                    junction Junction21 sp
                    [
                        position = 7872, 7984
                    ]

                    junction Junction22 sp
                    [
                        position = 7856, 8176
                    ]

                    junction Junction23 sp
                    [
                        position = 7856, 8240
                    ]

                    junction Junction24 sp
                    [
                        position = 10848, 8344
                    ]

                    junction Junction25 sp
                    [
                        position = 9248, 8000
                    ]

                    comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">volumetric_efficiency</span></p></body></html> ENDCOMMENT 
                    [
                        position = 9040, 8912
                    ]

                    comment Comment2 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">charge flow rate out of intake </span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">manifold into cylinders [kg/s]</span></p></body></html> ENDCOMMENT 
                    [
                        position = 9024, 8728
                    ]

                    comment Comment3 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">equivalent molecular mass of air-fuel </span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">mixture inside intake manifold [kg/mol]</span></p></body></html> ENDCOMMENT 
                    [
                        position = 9024, 8584
                    ]

                    comment Comment4 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">fuel-fraction inside intake manifold</span></p></body></html> ENDCOMMENT 
                    [
                        position = 9024, 8504
                    ]

                    comment Comment5 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">Manifold absolute pressure [Pa] </span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">Must be &gt; 0 (vacuum)</span></p></body></html> ENDCOMMENT 
                    [
                        position = 9016, 8336
                    ]

                    comment Comment6 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">Mass flow rate of charge over throttle (kg/s)</span></p></body></html> ENDCOMMENT 
                    [
                        position = 8368, 8184
                    ]

                    comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">Molecular mass of charge over throttle (kg/mol)</span> </p></body></html> ENDCOMMENT 
                    [
                        position = 8368, 8240
                    ]

                    comment Comment8 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">specific heat ratio of input charge over throttle</span></p></body></html> ENDCOMMENT 
                    [
                        position = 8368, 8304
                    ]

                    comment Comment9 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">flow rate of fuel over throttle (kg/s)</span></p></body></html> ENDCOMMENT 
                    [
                        position = 8376, 8352
                    ]

                    comment Comment10 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">specific air-fuel ratio inside manifold</span></p></body></html> ENDCOMMENT 
                    [
                        position = 9032, 9080
                    ]

                    comment Comment11 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">thermal efficiency</span></p></body></html> ENDCOMMENT 
                    [
                        position = 9736, 8912
                    ]

                    comment Comment12 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">frictional losses [watts]</span></p></body></html> ENDCOMMENT 
                    [
                        position = 9680, 8688
                    ]

                    comment Comment13 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">thermal power [watts]</span></p></body></html> ENDCOMMENT 
                    [
                        position = 10056, 8496
                    ]

                    comment Comment14 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">transport delay</span></p></body></html> ENDCOMMENT 
                    [
                        position = 9984, 8584
                    ]

                    comment Comment15 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">shaft power [watts]</span></p></body></html> ENDCOMMENT 
                    [
                        position = 10584, 8760
                    ]

                    comment Comment16 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">contribution of thermal torque [Nm]</span> </p></body></html> ENDCOMMENT 
                    [
                        position = 10400, 8536
                    ]

                    comment Comment17 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">variable transport delay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">buffer size of 10000 points</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">i.e. maximum Td = 1e4*Ts</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">which is more than 1s for</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Ts &gt; 100e-6</p></body></html> ENDCOMMENT 
                    [
                        position = 9888, 8328
                    ]

                    comment Comment18 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">Generate crankshaft angle internally</span></p></body></html> ENDCOMMENT 
                    [
                        position = 10032, 9240
                    ]

                    comment Comment19 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">Generate engine cycle angle from crankshaft angle</span></p></body></html> ENDCOMMENT 
                    [
                        position = 10000, 9080
                    ]

                    comment Comment20 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">generate engine roughness</span></p></body></html> ENDCOMMENT 
                    [
                        position = 10384, 8840
                    ]

                    comment Comment21 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">compute standard deviation </span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">[in per unit] of engine torque</span></p></body></html> ENDCOMMENT 
                    [
                        position = 9936, 8880
                    ]

                    comment Comment22 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">EMISSIONS</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                    [
                        position = 9504, 9056
                    ]

                    comment Comment23 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:6pt;">limit to avoid div by 0  </span></p></body></html> ENDCOMMENT 
                    [
                        position = 9736, 8432
                    ]

                    comment Comment25 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:6pt;">limit to avoid div by 0 </span></p></body></html> ENDCOMMENT 
                    [
                        position = 8736, 9024
                    ]

                    comment Comment26 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:6pt;">shaft torque [Nm] </span></p></body></html> ENDCOMMENT 
                    [
                        position = 10272, 8696
                    ]

                    comment Comment27 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:6pt;">avoiding div by 0</span></p></body></html> ENDCOMMENT 
                    [
                        position = 10232, 8648
                    ]

                    connect Po.out Goto37 as Connection349
                    connect "Bus Split1.out1" Goto42 as Connection354
                    [
                        breakpoints = 7376, 7944; 7376, 7920
                    ]
                    connect lambda_sp.out Goto39 as Connection351
                    connect Junction10 "C function1.crankshaft_angle" as Connection155
                    connect Goto25 Junction10 as Connection156
                    connect From76 Limit3.in as Connection330
                    connect From55 Subsystem1.engine_cycle_angle as Connection159
                    connect crank_shaft_angle.in Junction10 as Connection157
                    [
                        breakpoints = 10256, 9296; 10256, 9296
                    ]
                    connect "C function2.engine_cycle_angle_out" Junction11 as Connection160
                    connect From77 Limit2.in as Connection331
                    connect From79 Goto24 as Connection333
                    connect Junction11 Goto26 as Connection161
                    connect From80 "Data Type Conversion1.in" as Connection334
                    connect engine_cycle_angle.in Junction11 as Connection162
                    connect "Data Type Conversion3.out" Limit16.in as Connection335
                    connect Product1.out Goto23 as Connection73
                    connect "Data Type Conversion4.out" Goto45 as Connection336
                    connect From57 "C function3.lambda_sp" as Connection177
                    connect Limit16.out "Data Type Conversion4.in" as Connection337
                    connect From58 Subsystem1.standard_dev as Connection179
                    connect From81 "Data Type Conversion3.in" as Connection338
                    connect "C function3.sigma" Junction13 as Connection180
                    connect Sum2.out Product3.in2 as Connection339
                    connect From82 Product3.in as Connection341
                    connect Junction13 Goto28 as Connection181
                    connect Ptherm.P_therm Product3.in1 as Connection340
                    [
                        breakpoints = 9616, 8512
                    ]
                    connect std.in Junction13 as Connection182
                    connect Product2.out Junction14 as Connection183
                    connect T_roughness_pu.in Junction17 as Connection272
                    connect From56 Sum2.in as Connection170
                    connect Constant2.out Sum2.in1 as Connection176
                    connect From43 Sum4.in1 as Connection276
                    connect Goto13 Integrator2.out as Connection280
                    connect Integrator1.out Goto12 as Connection281
                    connect Product3.out Junction18 as Connection282
                    connect Junction18 "Var Transport delay.in" as Connection283
                    connect Goto33 Junction18 as Connection284
                    connect From32 lambda_spb.f as Connection285
                    connect f_dot.Meqm Goto14 as Connection295
                    connect Goto17 Junction19 as Connection298
                    [
                        breakpoints = 9088, 9064
                    ]
                    connect From74 Limit17.in as Connection342
                    connect Junction14 Ptherm.mfo_dot as Connection184
                    connect Goto29 Junction14 as Connection185
                    connect From59 Integrator3.in as Connection186
                    connect From73 Limit18.in as Connection344
                    connect Gain3.in From44 as Connection187
                    connect "pu->m^2.in" Limit18.out as Connection345
                    connect Integrator3.out fuel_used_kg as Connection188
                    connect "Bus Join1.out" emissions as Connection190
                    connect fuel_fraction.in From45 as Connection189
                    [
                        breakpoints = 9176, 7752
                    ]
                    connect From60 Gain6.in as Connection191
                    connect Gain6.out Sum3.in as Connection192
                    connect From62 Sum3.in1 as Connection193
                    connect Sum3.out Goto30 as Connection194
                    connect From61 "C function4.lambda_sp" as Connection195
                    connect From63 "Bus Join1.in" as Connection197
                    connect From64 "Bus Join1.in1" as Connection198
                    connect Constant3.out Junction15 as Connection200
                    connect Junction15 "Bus Join1.in2" as Connection201
                    connect "Bus Join1.in3" Junction15 as Connection202
                    connect Gain2.in From42 as Connection203
                    connect From1 "Throttle body.Aeq" as Connection7
                    connect From2 "Throttle body.Po" as Connection8
                    connect theta_deg.out Goto41 as Connection353
                    connect From3 "Throttle body.Pm" as Connection9
                    connect From6 "Throttle body.To" as Connection12
                    connect "Throttle body.mi_dot" Goto5 as Connection13
                    connect "Throttle body.mfi_dot" Goto10 as Connection24
                    connect From13 Pm_dot.mi_dot as Connection25
                    connect From14 Pm_dot.mfi_dot as Connection26
                    connect From15 Pm_dot.Tm as Connection27
                    connect "pu->m^2.out" Goto1 as Connection123
                    connect "Var Transport delay.tau_d_out" transp_delay.in as Connection124
                    connect To.out Goto38 as Connection350
                    connect Junction8 Limit3.out as Connection129
                    connect From26 mo_dot.Meqm as Connection44
                    connect Abs3.out "Var Transport delay.n_rpm" as Connection296
                    connect From27 mo_dot.Tm as Connection45
                    connect mo_dot.mo_dot Goto15 as Connection46
                    connect Constant1.out Subsystem1.enable_roughness as Connection133
                    connect From28 eta_vol.Pm as Connection47
                    connect From54 Gain5.in as Connection136
                    connect Tm.out Goto40 as Connection352
                    connect Gain5.out "C function1.w" as Connection137
                    connect eta_vol.Po From29 as Connection49
                    connect From5 "C function2.crankshaft_angle" as Connection153
                    connect "Bus Split1.out2" Goto43 as Connection355
                    connect From31 eta_therm.lambda_spb as Connection51
                    connect Junction19 lambda_spb_.in as Connection299
                    [
                        breakpoints = 9016, 9064; 9016, 9064
                    ]
                    connect eta_therm.theta_deg From33 as Connection55
                    connect lambda_spb.lambda_spb Junction19 as Connection300
                    connect From36 Ptherm.eta_therm as Connection61
                    connect From34 "Friction losses.n_rpm" as Connection301
                    connect "Bus Split1.out3" Goto44 as Connection356
                    [
                        breakpoints = 7360, 7976; 7360, 8016
                    ]
                    connect From40 Sum1.in1 as Connection66
                    connect From41 Abs4.in as Connection302
                    connect "Friction losses.P_friction" Goto20 as Connection304
                    connect Gain1.out Product1.in1 as Connection70
                    connect "Friction losses.Torque_friction" Goto34 as Connection305
                    connect From69 Torque_friction.in as Connection306
                    connect P_manifold_MPa.in Gain3.out as Connection89
                    connect Abs4.out Limit15.in as Connection307
                    connect Junction7 Goto19 as Connection101
                    connect Limit15.out Gain1.in as Connection308
                    connect eta_therm_.in Junction7 as Connection102
                    connect From39 Product1.in as Connection309
                    connect Goto4 Junction8 as Connection103
                    connect From70 Sum5.in1 as Connection310
                    connect lambda_sp_.in Junction8 as Connection105
                    connect From71 Sum5.in as Connection311
                    connect From48 eta_vol_.in as Connection107
                    connect Sum5.out Goto35 as Connection312
                    connect From46 mi_dot_.in as Connection108
                    connect From37 Sum1.in as Connection313
                    connect From47 mfi_dot.in as Connection109
                    connect From72 Torque_thermal.in as Connection314
                    connect From49 mo_dot_.in as Connection110
                    connect From50 Aeq_.in as Connection111
                    connect Gain7.out lpf.in as Connection315
                    connect From51 Gain4.in as Connection112
                    connect lpf.out Sum4.in as Connection316
                    connect Gain4.out P_therm_kW.in as Connection113
                    connect inputs "Bus Split1.in" as Connection317
                    connect From52 Product2.in as Connection118
                    connect From53 Product2.in1 as Connection119
                    connect "Bus Split1.out" Goto36 as Connection318
                    [
                        breakpoints = 7360, 7928; 7360, 7888
                    ]
                    connect "Var Transport delay.out" Goto21 as Connection121
                    connect From75 Limit4.in as Connection329
                    connect From16 Pm_dot.mo_dot as Connection29
                    connect Pm_dot.Meqm From17 as Connection30
                    connect Pm_dot.Pm_dot Integrator1.in as Connection31
                    connect From18 f_dot.mfi_dot as Connection33
                    connect From19 f_dot.mi_dot as Connection34
                    connect f_dot.f_dot Integrator2.in as Connection35
                    connect From20 f_dot.f as Connection38
                    connect From22 f_dot.Tm as Connection39
                    connect f_dot.Pm From21 as Connection40
                    connect From24 mo_dot.eta_vol as Connection42
                    connect From25 mo_dot.Pm as Connection43
                    connect Gain7.in From67 as Connection205
                    connect Sum4.out Junction16 as Connection209
                    connect T_shaft_.in Junction16 as Connection211
                    connect "Throttle body.Meq_throttle" Termination1.in as Connection212
                    connect "Throttle body.keq_throttle" Termination2.in as Connection213
                    connect Gain8.out P_loss_kW.in as Connection216
                    connect Gain8.in From68 as Connection217
                    connect From12 "Throttle body.lambda_sp" as Connection220
                    connect "Data Type Conversion1.out" Limit7.in as Connection224
                    connect Limit7.out "Data Type Conversion2.in" as Connection225
                    connect "Data Type Conversion2.out" Goto32 as Connection226
                    connect From23 Abs1.in as Connection231
                    connect Abs1.out mo_dot.n_rpm as Connection232
                    connect From30 Abs2.in as Connection233
                    connect Abs2.out eta_vol.n_rpm as Connection234
                    connect From38 Abs3.in as Connection235
                    connect eta_vol.eta_vol Limit11.in as Connection251
                    connect Limit11.out Goto16 as Connection252
                    connect eta_therm.eta_therm Limit14.in as Connection263
                    connect Limit14.out Junction7 as Connection264
                    connect Goto27 Junction17 as Connection270
                    connect Junction17 Subsystem1.torque_roughness_pu as Connection271
                    connect Limit4.out Junction20 as Connection357
                    connect Junction20 Goto3 as Connection358
                    connect To_.in Junction20 as Connection359
                    connect From83 NOx.in as Connection360
                    connect Limit17.out Junction21 as Connection361
                    connect Junction21 Goto2 as Connection362
                    connect Po_.in Junction21 as Connection363
                    connect Goto11 Junction22 as Connection364
                    connect Junction22 Limit2.out as Connection365
                    connect Tm_.in Junction22 as Connection366
                    connect From78 Junction23 as Connection367
                    connect Junction23 Goto18 as Connection368
                    connect theta_deg_.in Junction23 as Connection369
                    connect "C function4.NOx" Product4.in as Connection370
                    connect Product4.out Goto31 as Connection371
                    connect From84 Product4.in1 as Connection372
                    connect Junction16 Junction24 as Connection373
                    connect Junction24 T_shaft as Connection374
                    connect "rate calculator.in" Junction24 as Connection375
                    connect Sum1.out Goto22 as Connection380
                    [
                        breakpoints = 10584, 8744
                    ]
                    connect P_shaft_kW.in Junction25 as Connection386
                    connect Junction25 Gain2.out as Connection387
                    [
                        breakpoints = 9240, 8000
                    ]
                    connect "rate calculator1.in" Junction25 as Connection388
                    connect "rate calculator1.rate" lpf_.in as Connection389
                    connect lpf_.out P_shaft_dot_kWps.in as Connection390
                    connect "rate calculator.rate" lpf_1.in as Connection391
                    connect lpf_1.out T_shaft_dot_Nmps.in as Connection392

                    Aeq_max = "0.001"
                    Bore = "0.061071"
                    Dcm = "0.041898"
                    P_shaft_kW = "25.0"
                    Stroke = "0.06724"
                    V = "0.001477"
                    Vd = "0.001181"
                    generate_parameters = "False"
                    n_rpm_pk = "1800"
                    ncyl = "6"
                    starter_torque_Nm = "40"

                    mask {
                        description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                        cd {
                            label = "Throttle discharge coefficient"
                            widget = edit
                            type = generic
                            default_value = "0.8"
                            group = "Advanced"

                            CODE property_value_changed
                                if (new_value <= 0.0):
                                    mdl.info('Warning: Throttle discharge coefficienct should be > 0')
                            ENDCODE
                        }

                        Aeq_max {
                            label = "Max throttle area"
                            widget = edit
                            type = generic
                            default_value = "0.0006255995857115761"
                            unit = "m^2"
                            group = "Advanced"

                            CODE property_value_changed
                                if (new_value <= 0.0):
                                    mdl.info('Warning: Throttle area should be > 0')
                            ENDCODE
                        }

                        R_gas_cst {
                            label = "Gas constant"
                            widget = edit
                            type = generic
                            default_value = "8.314"
                            unit = "J/(mol.K)"
                            group = "Advanced"

                            CODE property_value_changed
                                if (new_value <= 0.0):
                                    mdl.info('Warning: Gas constant should be > 0')
                            ENDCODE
                        }

                        H {
                            label = "Fuel heating value"
                            widget = edit
                            type = generic
                            default_value = "40705000.0"
                            unit = "J/kg"
                            group = "Advanced"

                            CODE property_value_changed
                                if (new_value <= 0.0):
                                    mdl.info('Warning: Heating value should be should be > 0')
                            ENDCODE
                        }

                        ncyl {
                            label = "Number of cylinders"
                            widget = edit
                            type = generic
                            default_value = "10"
                            group = "Advanced"

                            CODE property_value_changed
                                if (new_value <= 0.0):
                                    mdl.info('Warning: Number of cylinders should be > 0')
                            ENDCODE
                        }

                        Vd {
                            label = "Total displacement of all cylinders"
                            widget = edit
                            type = generic
                            default_value = "0.004013"
                            unit = "m^3"
                            group = "Advanced"

                            CODE property_value_changed
                                if (new_value <= 0.0):
                                    mdl.info('Warning: Total displacement should be > 0')
                            ENDCODE
                        }

                        V {
                            label = "Manifold + port passage volume"
                            widget = edit
                            type = generic
                            default_value = "0.005016"
                            unit = "m^3"
                            group = "Advanced"

                            CODE property_value_changed
                                if (new_value <= 0.0):
                                    mdl.info('Warning: Manifold vol. should be > 0')
                            ENDCODE
                        }

                        Ma {
                            label = "Molar mass of air"
                            widget = edit
                            type = generic
                            default_value = "0.029"
                            unit = "kg/mol"
                            group = "Advanced"

                            CODE property_value_changed
                                if (new_value <= 0.0):
                                    mdl.info('Warning: Molar mass of air should be > 0')
                            ENDCODE
                        }

                        Mf {
                            label = "Molar mass of fuel"
                            widget = edit
                            type = generic
                            default_value = "0.0195"
                            unit = "kg/mol"
                            group = "Advanced"

                            CODE property_value_changed
                                if (new_value <= 0.0):
                                    mdl.info('Warning: Molar mass of fuel should be > 0')
                            ENDCODE
                        }

                        lambda_eq {
                            label = "Stoichiometric air-fuel ratio"
                            widget = edit
                            type = generic
                            default_value = "17.2"
                            group = "Advanced"

                            CODE property_value_changed
                                if (new_value <= 0.0):
                                    mdl.info('Warning: Stoichiometric air-fuel ratio should be > 0')
                            ENDCODE
                        }

                        atmospheric_pressure {
                            label = "Ambient pressure"
                            widget = edit
                            type = generic
                            default_value = "100000.0"
                            unit = "Pa"
                            group = "Advanced"

                            CODE property_value_changed
                                atmospheric_pressure_val_ = float(new_value)
                                Po_nom_tag_ = mdl.prop(container_handle, "Po_nom")
                                Po_nom_val_ = float(mdl.get_property_disp_value(Po_nom_tag_))
                                
                                if (atmospheric_pressure_val_ <= 0.0):
                                    mdl.info('Warning: Ambient (atmospheric) pressure should be greater than 0')
                                
                                if (Po_nom_val_ < atmospheric_pressure_val_):
                                    mdl.info('Warning: Ambient (atmospheric) pressure should be less than nominal throttle intake pressure')
                            ENDCODE

                            CODE property_value_edited
                                '''
                                Po_nom_tag = mdl.prop(container_handle, "Po_nom")
                                Po_nom_val = mdl.get_property_disp_value(Po_nom_tag)
                                
                                atmospheric_pressure_val = new_value
                                
                                if (Po_nom_val < atmospheric_pressure_val):
                                    mdl.info('Warning: Ambient (atmospheric) pressure should be < nominal throttle intake pressure')
                                '''
                            ENDCODE
                        }

                        Po_nom {
                            label = "Nominal throttle intake pressure"
                            widget = edit
                            type = generic
                            default_value = "300000.0"
                            unit = "Pa"
                            group = "Advanced"

                            CODE property_value_changed
                                Po_nom_val_ = new_value
                                atmospheric_pressure_tag_ = mdl.prop(container_handle, "atmospheric_pressure")
                                atmospheric_pressure_val_ = float(mdl.get_property_disp_value(atmospheric_pressure_tag_))
                                
                                
                                if (Po_nom_val_ <= 0.0):
                                    mdl.info('Warning: Throttle intake pressure should be greater than 0')
                                
                                if (Po_nom_val_ < atmospheric_pressure_val_):
                                    mdl.info('Warning: Throttle intake pressure should be greater than ambient (atmospheric) pressure')
                            ENDCODE

                            CODE property_value_edited
                                '''
                                atmospheric_pressure_tag = mdl.prop(container_handle, "atmospheric_pressure")
                                
                                Po_nom_val = new_value
                                atmospheric_pressure_val = mdl.get_property_disp_value(atmospheric_pressure_tag)
                                
                                if (Po_nom_val < atmospheric_pressure_val):
                                    mdl.info('Warning: Throttle intake pressure should be > ambient (atmospheric) pressure')
                                '''
                            ENDCODE
                        }

                        Dcm {
                            label = "Mean crank diameter"
                            widget = edit
                            type = generic
                            default_value = "0.042079"
                            unit = "m"
                            group = "Friction losses"

                            CODE property_value_changed
                                if (new_value <= 0.0):
                                    mdl.info('Warning: Mean crank diameter should be > 0')
                            ENDCODE
                        }

                        kfa {
                            label = "Friction coefficient kfa"
                            widget = edit
                            type = generic
                            default_value = "0.00337"
                            group = "Friction losses"
                        }

                        kfb {
                            label = "Friction coefficient kfb"
                            widget = edit
                            type = generic
                            default_value = "0.194"
                            group = "Friction losses"
                        }

                        Stroke {
                            label = "Stroke"
                            widget = edit
                            type = generic
                            default_value = "0.085382"
                            unit = "m"
                            group = "Friction losses"

                            CODE property_value_changed
                                if (new_value <= 0.0):
                                    mdl.info('Warning: Stroke should be > 0')
                            ENDCODE
                        }

                        Bore {
                            label = "Bore"
                            widget = edit
                            type = generic
                            default_value = "0.077359"
                            unit = "m"
                            group = "Friction losses"

                            CODE property_value_changed
                                if (new_value <= 0.0):
                                    mdl.info('Warning: Bore should be > 0')
                            ENDCODE
                        }

                        test_plot_friction {
                            label = "Preview friction losses"
                            widget = button
                            type = string
                            default_value = "Preview friction losses"
                            group = "Friction losses"
                            no_evaluate

                            CODE button_clicked
                                import numpy as np
                                from handlers.look_up_table import preview_lut
                                
                                #get handles (or tags) for the volumetric efficiency coefficients
                                kfa_tag = mdl.prop(container_handle, "kfa")
                                kfb_tag = mdl.prop(container_handle, "kfb")
                                Vd_tag = mdl.prop(container_handle, "Vd")
                                Stroke_tag = mdl.prop(container_handle, "Stroke")
                                Bore_tag = mdl.prop(container_handle, "Bore")
                                Dcm_tag = mdl.prop(container_handle, "Dcm")
                                
                                kfa_val = float(mdl.get_property_disp_value(kfa_tag))
                                kfb_val = float(mdl.get_property_disp_value(kfb_tag))
                                Vd_val = float(mdl.get_property_disp_value(Vd_tag))
                                Stroke_val = float(mdl.get_property_disp_value(Stroke_tag))
                                Bore_val = float(mdl.get_property_disp_value(Bore_tag))
                                Dcm_val = float(mdl.get_property_disp_value(Dcm_tag))
                                
                                n_rpm_plot = np.linspace(-200.0, 10000.0, 100)
                                Kf = kfa_val*(n_rpm_plot/1000.0)**2 + kfb_val
                                Pmf = Kf*np.sqrt(Stroke_val*Dcm_val)/Bore_val * 1.0e6
                                Ploss_plot = Pmf*Vd_val*n_rpm_plot/120.0 * 1.0e-3
                                
                                preview_lut(n_rpm_plot,Ploss_plot,'Engine friction losses','rpm', 'Ploss [kW]')
                            ENDCODE
                        }

                        a_eta_therm {
                            label = "Thermal eff. coeff, a_eta_therm"
                            widget = edit
                            type = generic
                            default_value = "0.3377"
                            group = "Thermal efficiency"
                        }

                        b_eta_therm {
                            label = "Thermal eff. coeff, b_eta_therm"
                            widget = edit
                            type = generic
                            default_value = "-0.6737"
                            group = "Thermal efficiency"
                        }

                        c_eta_therm {
                            label = "Thermal eff. coeff, c_eta_therm"
                            widget = edit
                            type = generic
                            default_value = "-1.0"
                            group = "Thermal efficiency"
                        }

                        d_eta_therm {
                            label = "Thermal eff. coeff, d_eta_therm"
                            widget = edit
                            type = generic
                            default_value = "-1.275"
                            group = "Thermal efficiency"
                        }

                        e_eta_therm {
                            label = "Thermal eff. coeff, e_eta_therm"
                            widget = edit
                            type = generic
                            default_value = "0.3614"
                            group = "Thermal efficiency"
                        }

                        f_eta_therm {
                            label = "Thermal eff. coeff, f_eta_therm"
                            widget = edit
                            type = generic
                            default_value = "0.7526"
                            group = "Thermal efficiency"
                        }

                        g_eta_therm {
                            label = "Thermal eff. coeff, g_eta_therm"
                            widget = edit
                            type = generic
                            default_value = "1.755"
                            group = "Thermal efficiency"
                        }

                        test_plot_eta_therm {
                            label = "Preview therm. eff. curve"
                            widget = button
                            type = string
                            default_value = "Preview therm. eff."
                            group = "Thermal efficiency"
                            no_evaluate

                            CODE button_clicked
                                import numpy as np
                                from handlers.look_up_table import preview_lut
                                
                                #get handles (or tags) for the volumetric efficiency coefficients
                                a_eta_therm = mdl.prop(container_handle, "a_eta_therm")
                                b_eta_therm = mdl.prop(container_handle, "b_eta_therm")
                                c_eta_therm = mdl.prop(container_handle, "c_eta_therm")
                                d_eta_therm = mdl.prop(container_handle, "d_eta_therm")
                                e_eta_therm = mdl.prop(container_handle, "e_eta_therm")
                                f_eta_therm = mdl.prop(container_handle, "f_eta_therm")
                                g_eta_therm = mdl.prop(container_handle, "g_eta_therm")
                                theta_deg_nom_tag = mdl.prop(container_handle, "theta_deg_nom")
                                
                                a_eta_therm_val = float(mdl.get_property_disp_value(a_eta_therm))
                                b_eta_therm_val = float(mdl.get_property_disp_value(b_eta_therm))
                                c_eta_therm_val = float(mdl.get_property_disp_value(c_eta_therm))
                                d_eta_therm_val = float(mdl.get_property_disp_value(d_eta_therm))
                                e_eta_therm_val = float(mdl.get_property_disp_value(e_eta_therm))
                                f_eta_therm_val = float(mdl.get_property_disp_value(f_eta_therm))
                                g_eta_therm_val = float(mdl.get_property_disp_value(g_eta_therm))
                                theta_deg_nom_val = float(mdl.get_property_disp_value(theta_deg_nom_tag))
                                
                                lambda_sp_plot = np.linspace(0.5, 2.0, 100)
                                theta_norm_plot = theta_deg_nom_val/90.0 #-19.0/90.0 #normalized spark advanced angle of -13 degrees
                                eta_therm_plot = (a_eta_therm_val + b_eta_therm_val*theta_norm_plot + \
                                                    c_eta_therm_val*(theta_norm_plot**2))* \
                                                    np.exp(-((lambda_sp_plot + d_eta_therm_val + e_eta_therm_val*theta_norm_plot)/(f_eta_therm_val + g_eta_therm_val*theta_norm_plot))**2)
                                
                                preview_lut(lambda_sp_plot,eta_therm_plot,'Thermal efficiency for spark adv. angle = '+str(round(theta_norm_plot*90.0))+'°','λsp', 'thermal efficiency')
                            ENDCODE
                        }

                        a_eta_vol {
                            label = "Volumetric eff. coeff, a_eta_vol"
                            widget = edit
                            type = generic
                            default_value = "-0.8421"
                            group = "Vol. eff."
                        }

                        b_eta_vol {
                            label = "Volumetric eff. coeff, b_eta_vol"
                            widget = edit
                            type = generic
                            default_value = "1.368"
                            group = "Vol. eff."
                        }

                        c_eta_vol {
                            label = "Volumetric eff. coeff, c_eta_vol"
                            widget = edit
                            type = generic
                            default_value = "6.689"
                            group = "Vol. eff."
                        }

                        n_rpm_pk {
                            label = "RPM at peak vol. eff."
                            widget = edit
                            type = generic
                            default_value = "3320.2386567184835"
                            unit = "rpm"
                            group = "Vol. eff."
                        }

                        test_plot_eta_vol {
                            label = "Preview vol. eff. curve"
                            widget = button
                            type = string
                            default_value = "Preview vol. eff."
                            group = "Vol. eff."
                            no_evaluate

                            CODE button_clicked
                                import numpy as np
                                from handlers.look_up_table import preview_lut
                                
                                #get handles (or tags) for the volumetric efficiency coefficients
                                a_eta_vol = mdl.prop(container_handle, "a_eta_vol")
                                b_eta_vol = mdl.prop(container_handle, "b_eta_vol")
                                c_eta_vol = mdl.prop(container_handle, "c_eta_vol")
                                n_rpm_pk = mdl.prop(container_handle, "n_rpm_pk")
                                Po_nom_tag = mdl.prop(container_handle, "Po_nom")
                                
                                a_eta_vol_val = float(mdl.get_property_disp_value(a_eta_vol))
                                b_eta_vol_val = float(mdl.get_property_disp_value(b_eta_vol))
                                c_eta_vol_val = float(mdl.get_property_disp_value(c_eta_vol))
                                n_rpm_pk_val = float(mdl.get_property_disp_value(n_rpm_pk))
                                Po_nom_val = float(mdl.get_property_disp_value(Po_nom_tag))
                                
                                n_rpm_plot = np.linspace(200.0, 10000.0, 100)
                                Po_plot = Po_nom_val #1.0e5
                                Pm_plot = 0.95*Po_plot #wide open throttle (assuming 95%)
                                eta_vol_plot = (1.0 + a_eta_vol_val*(Pm_plot/Po_plot - 1.0) + b_eta_vol_val*((Pm_plot/Po_plot)**2 - 1.0))*np.exp(-((n_rpm_plot - n_rpm_pk_val)/(1000.0 * c_eta_vol_val))**2)
                                mdl.info('Volumetric efficiency plot assuming WOT (95%)')
                                preview_lut(n_rpm_plot,eta_vol_plot,'Volumetric efficiency for Pm/Po ='+str(Pm_plot/Po_plot),'n [rpm]', 'vol. efficiency')
                            ENDCODE
                        }

                        keq_a1 {
                            label = "Specific heat ratio coeff., keq_a1"
                            widget = edit
                            type = generic
                            default_value = "1.4642"
                            group = "Specific heat ratio"
                        }

                        keq_a2 {
                            label = "Specific heat ratio coeff., keq_a2"
                            widget = edit
                            type = generic
                            default_value = "0.0"
                            group = "Specific heat ratio"
                        }

                        keq_a7 {
                            label = "Specific heat ratio coeff., keq_a7"
                            widget = edit
                            type = generic
                            default_value = "0.0"
                            group = "Specific heat ratio"
                        }

                        test_plot_keq {
                            label = "Preview keq(To, λsp) curve"
                            widget = button
                            type = string
                            default_value = "Preview keq"
                            group = "Specific heat ratio"
                            no_evaluate

                            CODE button_clicked
                                import numpy as np
                                from handlers.look_up_table import preview_lut
                                
                                #get handles (or tags) for the keq coefficients
                                keq_a1 = mdl.prop(container_handle, "keq_a1")
                                keq_a2 = mdl.prop(container_handle, "keq_a2")
                                keq_a7 = mdl.prop(container_handle, "keq_a7")
                                
                                lambda_sp_plot1 = 1.2
                                #lambda_sp_plot2 = 1.4
                                To_plot = np.linspace(300.0, 450.0, 50)
                                keq_a1_val = float(mdl.get_property_disp_value(keq_a1))
                                keq_a2_val = float(mdl.get_property_disp_value(keq_a2))
                                keq_a7_val = float(mdl.get_property_disp_value(keq_a7))
                                keq_plot1 = keq_a1_val + keq_a2_val*To_plot + keq_a7_val/lambda_sp_plot1
                                #keq_plot2 = keq_a1_val + keq_a2_val*To_plot + keq_a7_val/lambda_sp_plot2
                                preview_lut(To_plot,keq_plot1,'Specific heat ratio curve (keq) for λ='+str(lambda_sp_plot1), 'To [K]', 'keq')
                                #preview_lut(To_plot,keq_plot2, 'Specific heat ratio curve (keq)', 'To [K]', 'keq2')
                            ENDCODE
                        }

                        generate_parameters {
                            label = "Estimate parameters for a generic engine"
                            widget = checkbox
                            type = bool
                            default_value = "True"
                            group = "General"
                            no_evaluate

                            CODE property_value_edited
                                #collect tags
                                cd = mdl.prop(container_handle, "cd")
                                Aeq_max = mdl.prop(container_handle, "Aeq_max")
                                R_gas_cst = mdl.prop(container_handle, "R_gas_cst")
                                H = mdl.prop(container_handle, "H")
                                Dcm = mdl.prop(container_handle, "Dcm")
                                ncyl = mdl.prop(container_handle, "ncyl")
                                Vd = mdl.prop(container_handle, "Vd")
                                kfa = mdl.prop(container_handle, "kfa")
                                kfb = mdl.prop(container_handle, "kfb")
                                Stroke = mdl.prop(container_handle, "Stroke")
                                Bore = mdl.prop(container_handle, "Bore")
                                a_eta_therm = mdl.prop(container_handle, "a_eta_therm")
                                b_eta_therm = mdl.prop(container_handle, "b_eta_therm")
                                c_eta_therm = mdl.prop(container_handle, "c_eta_therm")
                                d_eta_therm = mdl.prop(container_handle, "d_eta_therm")
                                e_eta_therm = mdl.prop(container_handle, "e_eta_therm")
                                f_eta_therm = mdl.prop(container_handle, "f_eta_therm")
                                g_eta_therm = mdl.prop(container_handle, "g_eta_therm")
                                a_eta_vol = mdl.prop(container_handle, "a_eta_vol")
                                b_eta_vol = mdl.prop(container_handle, "b_eta_vol")
                                c_eta_vol = mdl.prop(container_handle, "c_eta_vol")
                                n_rpm_pk = mdl.prop(container_handle, "n_rpm_pk")
                                keq_a1 = mdl.prop(container_handle, "keq_a1")
                                keq_a2 = mdl.prop(container_handle, "keq_a2")
                                keq_a7 = mdl.prop(container_handle, "keq_a7")
                                Ma = mdl.prop(container_handle, "Ma")
                                Mf = mdl.prop(container_handle, "Mf")
                                V = mdl.prop(container_handle, "V")
                                lambda_eq = mdl.prop(container_handle, "lambda_eq")
                                P_shaft_kW = mdl.prop(container_handle, "P_shaft_kW")
                                nominal_rpm = mdl.prop(container_handle, "nominal_rpm")
                                fuel = mdl.prop(container_handle, "fuel")
                                compute_params = mdl.prop(container_handle, "compute_params")
                                Po_nom_tag = mdl.prop(container_handle, "Po_nom")
                                NOx_a = mdl.prop(container_handle, "NOx_a")
                                NOx_b = mdl.prop(container_handle, "NOx_b")
                                NOx_c = mdl.prop(container_handle, "NOx_c")
                                starter_torque_Nm_tag = mdl.prop(container_handle, "starter_torque_Nm")
                                ambient_pressure_tag = mdl.prop(container_handle, "atmospheric_pressure")
                                lambda_sp_nom_tag = mdl.prop(container_handle, "lambda_sp_nom")
                                theta_deg_nom_tag = mdl.prop(container_handle, "theta_deg_nom")
                                To_nom_tag = mdl.prop(container_handle, "To_nom")
                                Tm_nom_tag = mdl.prop(container_handle, "Tm_nom")
                                #mdl.info(dd)
                                
                                if (new_value):
                                    mdl.enable_property(P_shaft_kW)
                                    mdl.enable_property(fuel)
                                    mdl.enable_property(nominal_rpm)
                                    mdl.enable_property(compute_params)
                                    
                                    mdl.disable_property(Po_nom_tag)
                                    mdl.disable_property(cd)
                                    mdl.disable_property(Aeq_max)
                                    mdl.disable_property(R_gas_cst)
                                    mdl.disable_property(H)
                                    mdl.disable_property(Dcm)
                                    mdl.disable_property(ncyl)
                                    mdl.disable_property(Vd)
                                    mdl.disable_property(kfa)
                                    mdl.disable_property(kfb)
                                    mdl.disable_property(Stroke)
                                    mdl.disable_property(Bore)
                                    mdl.disable_property(a_eta_therm)
                                    mdl.disable_property(b_eta_therm)
                                    mdl.disable_property(c_eta_therm)
                                    mdl.disable_property(d_eta_therm)
                                    mdl.disable_property(e_eta_therm)
                                    mdl.disable_property(f_eta_therm)
                                    mdl.disable_property(g_eta_therm)
                                    mdl.disable_property(a_eta_vol)
                                    mdl.disable_property(b_eta_vol)
                                    mdl.disable_property(c_eta_vol)
                                    mdl.disable_property(n_rpm_pk)
                                    mdl.disable_property(keq_a1)
                                    mdl.disable_property(keq_a2)
                                    mdl.disable_property(keq_a7)
                                    mdl.disable_property(Ma)
                                    mdl.disable_property(Mf)
                                    mdl.disable_property(V)
                                    mdl.disable_property(lambda_eq)
                                    mdl.disable_property(NOx_a)
                                    mdl.disable_property(NOx_b)
                                    mdl.disable_property(NOx_c)
                                    mdl.disable_property(starter_torque_Nm_tag)
                                    mdl.disable_property(ambient_pressure_tag)
                                    mdl.disable_property(lambda_sp_nom_tag)
                                    mdl.disable_property(theta_deg_nom_tag)
                                    mdl.disable_property(To_nom_tag)
                                    mdl.disable_property(Tm_nom_tag)
                                    
                                else:
                                    mdl.disable_property(P_shaft_kW)
                                    mdl.disable_property(fuel)
                                    mdl.disable_property(nominal_rpm)
                                    mdl.disable_property(compute_params)
                                    
                                    mdl.enable_property(Po_nom_tag)
                                    mdl.enable_property(cd)
                                    mdl.enable_property(Aeq_max)
                                    mdl.enable_property(R_gas_cst)
                                    mdl.enable_property(H)
                                    mdl.enable_property(Dcm)
                                    mdl.enable_property(ncyl)
                                    mdl.enable_property(Vd)
                                    mdl.enable_property(kfa)
                                    mdl.enable_property(kfb)
                                    mdl.enable_property(Stroke)
                                    mdl.enable_property(Bore)
                                    mdl.enable_property(a_eta_therm)
                                    mdl.enable_property(b_eta_therm)
                                    mdl.enable_property(c_eta_therm)
                                    mdl.enable_property(d_eta_therm)
                                    mdl.enable_property(e_eta_therm)
                                    mdl.enable_property(f_eta_therm)
                                    mdl.enable_property(g_eta_therm)
                                    mdl.enable_property(a_eta_vol)
                                    mdl.enable_property(b_eta_vol)
                                    mdl.enable_property(c_eta_vol)
                                    mdl.enable_property(n_rpm_pk)
                                    mdl.enable_property(keq_a1)
                                    mdl.enable_property(keq_a2)
                                    mdl.enable_property(keq_a7)
                                    mdl.enable_property(Ma)
                                    mdl.enable_property(Mf)
                                    mdl.enable_property(V)
                                    mdl.enable_property(lambda_eq)
                                    mdl.enable_property(NOx_a)
                                    mdl.enable_property(NOx_b)
                                    mdl.enable_property(NOx_c)
                                    mdl.enable_property(starter_torque_Nm_tag)
                                    mdl.enable_property(ambient_pressure_tag)
                                    mdl.enable_property(lambda_sp_nom_tag)
                                    mdl.enable_property(theta_deg_nom_tag)
                                    mdl.enable_property(To_nom_tag)
                                    mdl.enable_property(Tm_nom_tag)
                            ENDCODE
                        }

                        P_shaft_kW {
                            label = "Nominal shaft power"
                            widget = edit
                            type = generic
                            default_value = "100.0"
                            unit = "kW"
                            group = "General"
                            disabled

                            CODE property_value_changed
                                if (new_value <= 0.0):
                                    mdl.info('Warning: Nominal shaft power should be > 0')
                            ENDCODE
                        }

                        nominal_rpm {
                            label = "Nominal speed"
                            widget = edit
                            type = generic
                            default_value = "1800"
                            unit = "rpm"
                            group = "General"
                            disabled

                            CODE property_value_changed
                                if (new_value <= 0.0):
                                    mdl.info('Warning: Nominal shaft power should be > 0')
                            ENDCODE
                        }

                        fuel {
                            label = "Fuel"
                            widget = combo
                            combo_values = "Natural gas", "Biogas", "Coke gas", "Wood gas"
                            type = string
                            default_value = "Natural gas"
                            group = "General"
                            disabled
                            no_evaluate
                        }

                        compute_params {
                            label = "Compute"
                            widget = button
                            type = string
                            default_value = "Compute"
                            group = "General"
                            disabled
                            no_evaluate

                            CODE button_clicked
                                #Compute and set the engine parameters
                                #cd = mdl.prop(container_handle, "cd")
                                #mdl.set_property_value(cd,1000.0)
                                #mdl.set_property_disp_value(cd,41000.0)
                                #mdl.info('property value cd = '+str(mdl.get_property_value(cd)))
                                import numpy as np
                                
                                verbose = False #Set to True to show information about engine parameter estimation
                                
                                if verbose:
                                    mdl.info('*****')
                                
                                #collect tags for edit boxes
                                cd_tag = mdl.prop(container_handle, "cd")
                                Aeq_max_tag  = mdl.prop(container_handle, "Aeq_max")
                                R_gas_cst_tag  = mdl.prop(container_handle, "R_gas_cst")
                                H_tag  = mdl.prop(container_handle, "H")
                                Dcm_tag  = mdl.prop(container_handle, "Dcm")
                                ncyl_tag  = mdl.prop(container_handle, "ncyl")
                                Vd_tag  = mdl.prop(container_handle, "Vd")
                                kfa_tag  = mdl.prop(container_handle, "kfa")
                                kfb_tag  = mdl.prop(container_handle, "kfb")
                                Stroke_tag  = mdl.prop(container_handle, "Stroke")
                                Bore_tag  = mdl.prop(container_handle, "Bore")
                                a_eta_therm_tag  = mdl.prop(container_handle, "a_eta_therm")
                                b_eta_therm_tag  = mdl.prop(container_handle, "b_eta_therm")
                                c_eta_therm_tag  = mdl.prop(container_handle, "c_eta_therm")
                                d_eta_therm_tag  = mdl.prop(container_handle, "d_eta_therm")
                                e_eta_therm_tag  = mdl.prop(container_handle, "e_eta_therm")
                                f_eta_therm_tag  = mdl.prop(container_handle, "f_eta_therm")
                                g_eta_therm_tag  = mdl.prop(container_handle, "g_eta_therm")
                                a_eta_vol_tag  = mdl.prop(container_handle, "a_eta_vol")
                                b_eta_vol_tag  = mdl.prop(container_handle, "b_eta_vol")
                                c_eta_vol_tag  = mdl.prop(container_handle, "c_eta_vol")
                                n_rpm_pk_tag  = mdl.prop(container_handle, "n_rpm_pk")
                                keq_a1_tag  = mdl.prop(container_handle, "keq_a1")
                                keq_a2_tag  = mdl.prop(container_handle, "keq_a2")
                                keq_a7_tag  = mdl.prop(container_handle, "keq_a7")
                                Ma_tag  = mdl.prop(container_handle, "Ma")
                                Mf_tag  = mdl.prop(container_handle, "Mf")
                                lambda_eq_tag  = mdl.prop(container_handle, "lambda_eq")
                                V_tag  = mdl.prop(container_handle, "V")
                                P_shaft_kW_tag  = mdl.prop(container_handle, "P_shaft_kW")
                                nominal_rpm_tag  = mdl.prop(container_handle, "nominal_rpm")
                                fuel_tag  = mdl.prop(container_handle, "fuel")
                                Po_nom_tag  = mdl.prop(container_handle, "Po_nom")
                                NOx_a_tag  = mdl.prop(container_handle, "NOx_a")
                                NOx_b_tag  = mdl.prop(container_handle, "NOx_b")
                                NOx_c_tag  = mdl.prop(container_handle, "NOx_c")
                                starter_torque_Nm_tag  = mdl.prop(container_handle, "starter_torque_Nm")
                                ambient_pressure_tag  = mdl.prop(container_handle, "atmospheric_pressure")
                                Po_nom_tag  = mdl.prop(container_handle, "Po_nom")
                                lambda_sp_nom_tag  = mdl.prop(container_handle, "lambda_sp_nom")
                                theta_deg_nom_tag  = mdl.prop(container_handle, "theta_deg_nom")
                                To_nom_tag  = mdl.prop(container_handle, "To_nom")
                                Tm_nom_tag  = mdl.prop(container_handle, "Tm_nom")
                                #compute_params = mdl.prop(container_handle, "compute_params")
                                
                                def set_default_engine_params(cd_tag , R_gas_cst_tag , kfa_tag , kfb_tag , a_eta_therm_tag , b_eta_therm_tag , \
                                                            c_eta_therm_tag , d_eta_therm_tag , e_eta_therm_tag , f_eta_therm_tag , \
                                                            g_eta_therm_tag , a_eta_vol_tag , b_eta_vol_tag , c_eta_vol_tag , NOx_a_tag, \
                                                            NOx_b_tag, NOx_c_tag, ambient_pressure_tag, Po_nom_tag, lambda_sp_nom_tag, \
                                                            theta_deg_nom_tag, To_nom_tag, Tm_nom_tag, verbose):
                                
                                    #mdl.set_property_value(cd_tag, 0.8)
                                    mdl.set_property_disp_value(cd_tag, 0.8)
                                    
                                    #mdl.set_property_value(R_gas_cst_tag, 8.314)
                                    mdl.set_property_disp_value(R_gas_cst_tag, 8.314)
                                
                                    #mdl.set_property_value(kfa_tag, 3.37e-3)
                                    mdl.set_property_disp_value(kfa_tag, 3.37e-3)
                                
                                    #mdl.set_property_value(kfb_tag, 0.194)
                                    mdl.set_property_disp_value(kfb_tag, 0.194)
                                
                                    #mdl.set_property_value(a_eta_therm_tag, 0.3377)
                                    mdl.set_property_disp_value(a_eta_therm_tag, 0.3377)
                                
                                    #mdl.set_property_value(b_eta_therm_tag, -0.6737)
                                    mdl.set_property_disp_value(b_eta_therm_tag, -0.6737)
                                
                                    #mdl.set_property_value(c_eta_therm_tag, -1.0)
                                    mdl.set_property_disp_value(c_eta_therm_tag, -1.0)
                                
                                    #mdl.set_property_value(d_eta_therm_tag, -1.275)
                                    mdl.set_property_disp_value(d_eta_therm_tag, -1.275)
                                
                                    #mdl.set_property_value(e_eta_therm_tag, 0.3614)
                                    mdl.set_property_disp_value(e_eta_therm_tag, 0.3614)
                                
                                    #mdl.set_property_value(f_eta_therm_tag, 0.7526)
                                    mdl.set_property_disp_value(f_eta_therm_tag, 0.7526)
                                
                                    #mdl.set_property_value(g_eta_therm_tag, 1.755)
                                    mdl.set_property_disp_value(g_eta_therm_tag, 1.755)
                                
                                    #mdl.set_property_value(a_eta_vol_tag, -0.8421)
                                    mdl.set_property_disp_value(a_eta_vol_tag, -0.8421)
                                    
                                   # mdl.set_property_value(b_eta_vol_tag, 1.368)
                                    mdl.set_property_disp_value(b_eta_vol_tag, 1.368)
                                
                                    #mdl.set_property_value(c_eta_vol_tag, 6.689)
                                    mdl.set_property_disp_value(c_eta_vol_tag, 6.689)
                                    
                                    #mdl.set_property_value(NOx_a_tag, 2402.0)
                                    mdl.set_property_disp_value(NOx_a_tag, 2402.0)
                                    
                                    #mdl.set_property_value(NOx_b_tag, 1.118)
                                    mdl.set_property_disp_value(NOx_b_tag, 1.118)
                                
                                    #mdl.set_property_value(NOx_c_tag, 0.164)
                                    mdl.set_property_disp_value(NOx_c_tag, 0.164)
                                    
                                    #mdl.set_property_value(ambient_pressure_tag, 100000.0)
                                    mdl.set_property_disp_value(ambient_pressure_tag, 100000.0)
                                    
                                    mdl.set_property_disp_value(Po_nom_tag, 300000.0)
                                    
                                    mdl.set_property_disp_value(lambda_sp_nom_tag, 1.2)
                                    
                                    mdl.set_property_disp_value(theta_deg_nom_tag, -19.0)
                                    
                                    mdl.set_property_disp_value(To_nom_tag, 300.0)
                                    
                                    mdl.set_property_disp_value(Tm_nom_tag, 325.0)
                                    
                                    if verbose:
                                        mdl.info('cd set to '+str(mdl.get_property_disp_value(cd_tag)))
                                        mdl.info('R_gas_cst set to '+str(mdl.get_property_disp_value(R_gas_cst_tag)))
                                        mdl.info('kfa set to '+str(mdl.get_property_disp_value(kfa_tag)))
                                        mdl.info('kfb set to '+str(mdl.get_property_disp_value(kfb_tag)))
                                        mdl.info('a_eta_therm set to '+str(mdl.get_property_disp_value(a_eta_therm_tag)))
                                        mdl.info('b_eta_therm set to '+str(mdl.get_property_disp_value(b_eta_therm_tag)))
                                        mdl.info('c_eta_therm set to '+str(mdl.get_property_disp_value(c_eta_therm_tag)))
                                        mdl.info('d_eta_therm set to '+str(mdl.get_property_disp_value(d_eta_therm_tag)))
                                        mdl.info('e_eta_therm set to '+str(mdl.get_property_disp_value(e_eta_therm_tag)))
                                        mdl.info('f_eta_therm set to '+str(mdl.get_property_disp_value(f_eta_therm_tag)))
                                        mdl.info('g_eta_therm set to '+str(mdl.get_property_disp_value(g_eta_therm_tag)))
                                        mdl.info('a_eta_vol set to '+str(mdl.get_property_disp_value(a_eta_vol_tag)))
                                        mdl.info('b_eta_vol set to '+str(mdl.get_property_disp_value(b_eta_vol_tag)))
                                        mdl.info('c_eta_vol set to '+str(mdl.get_property_disp_value(c_eta_vol_tag)))
                                        mdl.info('NOx_a set to '+str(mdl.get_property_disp_value(NOx_a_tag)))
                                        mdl.info('NOx_b set to '+str(mdl.get_property_disp_value(NOx_b_tag)))
                                        mdl.info('NOx_c set to '+str(mdl.get_property_disp_value(NOx_c_tag)))
                                        mdl.info('Ambient pressure set to '+str(mdl.get_property_disp_value(ambient_pressure_tag)))
                                        mdl.info('Nominal throttle intake pressure set to '+str(mdl.get_property_disp_value(Po_nom_tag)))
                                        mdl.info('lambda_sp_nom set to '+str(mdl.get_property_disp_value(lambda_sp_nom_tag)))
                                        mdl.info('theta_deg_nom set to '+str(mdl.get_property_disp_value(theta_deg_nom_tag)))
                                        mdl.info('To_nom set to '+str(mdl.get_property_disp_value(To_nom_tag)))
                                        mdl.info('Tm_nom set to '+str(mdl.get_property_disp_value(Tm_nom_tag)))
                                        mdl.info('Po_nom set to '+str(mdl.get_property_disp_value(Po_nom_tag)))
                                #end of function
                                
                                def set_fuel_params(H_tag, H_val, Mf_tag, Mf_val, lambda_eq_tag, lambda_eq_val,verbose):
                                    #mdl.set_property_value(H_tag,H_val)
                                    #mdl.set_property_disp_value(H_tag,np.trunc(H_val*1e-6*1e3)/1e3) #display value in MJ/kg
                                    
                                    #mdl.set_property_value(H_tag,H_val)
                                    mdl.set_property_disp_value(H_tag,np.trunc(H_val*1e4)/1e4) #display value in J/kg
                                
                                    
                                    #mdl.set_property_value(Mf_tag,Mf_val)
                                    mdl.set_property_disp_value(Mf_tag,Mf_val)
                                    
                                    #mdl.set_property_value(lambda_eq_tag,lambda_eq_val)
                                    mdl.set_property_disp_value(lambda_eq_tag,lambda_eq_val)
                                    
                                    if verbose:
                                        mdl.info('H set to '+str(mdl.get_property_disp_value(H_tag))+' J/kg')
                                        mdl.info('Mf set to '+str(mdl.get_property_disp_value(Mf_tag)))
                                        mdl.info('lambda_eq set to '+str(mdl.get_property_disp_value(lambda_eq_tag)))
                                #end of function
                                
                                def engine_rating_to_dimensions(To_nom, keq_nom, Po_nom, lambda_sp_nom, Tm_nom, Theta_nom, \
                                                                P_shaft_kW_val, lambda_eq_val, nominal_rpm_val, Ma_val, Mf_val, \
                                                                a_eta_therm_val, b_eta_therm_val, c_eta_therm_val,\
                                                                d_eta_therm_val, e_eta_therm_val, f_eta_therm_val, g_eta_therm_val, \
                                                                a_eta_vol_val, b_eta_vol_val, c_eta_vol_val, \
                                                                R_gas_cst_val, H_val, cd_val, Aeq_max_tag, P_shaft_kW_tag, Vd_tag, V_tag, \
                                                                ncyl_tag, Stroke_tag, Bore_tag, Dcm_tag, n_rpm_pk_tag, kfa_val, kfb_val, verbose):
                                    #=========================
                                    #total engine displacement
                                    #=========================
                                    #these are constants for the curve-fitting function
                                    k1 = 0.013
                                    k2 = 17.5248
                                    k3 = 1.2026
                                    Vd_val = (k1*(P_shaft_kW_val + k2)**k3) / 1000.0 #total eng. displacement in m^3
                                    #mdl.set_property_disp_value(Vd_tag, Vd_val)
                                    #mdl.set_property_disp_value(Vd_tag, np.trunc(Vd_val*1e6*1e3)/1e3) #display in Liters
                                    mdl.set_property_disp_value(Vd_tag, np.trunc(Vd_val*1e6)/1e6) #display in m^3
                                    if verbose:
                                        #mdl.info('Vd set to: '+str(Vd_val*1e6)+' cm^3')
                                        mdl.info('Vd set to: '+str(Vd_val)+' m^3')
                                    
                                    #====================================
                                    #Total manifold + port passage volume
                                    #====================================
                                    V_val = Vd_val*1.25 #in m^3
                                    #mdl.set_property_disp_value(V_tag, V_val)
                                    #mdl.set_property_disp_value(V_tag, np.trunc(V_val*1e6*1e3)/1e3) #display in cm^3
                                    mdl.set_property_disp_value(V_tag, np.trunc(V_val*1e6)/1e6) #display in m^3
                                    if verbose:
                                        #mdl.info('V set to: '+str(V_val*1e6)+' cm^3')    
                                        mdl.info('V set to: '+str(V_val)+' m^3')    
                                    
                                    #====================================
                                    #Total number of cylinders
                                    #====================================    
                                    a = 0.0870
                                    b = 2.8692
                                    ncyl_val = np.round(P_shaft_kW_val/(a*P_shaft_kW_val + b))
                                    if (ncyl_val < 1):
                                        ncyl_val = 1
                                    if ((ncyl_val%2) != 0):
                                        ncyl_val = ncyl_val+1
                                    #mdl.set_property_value(ncyl_tag, ncyl_val)
                                    mdl.set_property_disp_value(ncyl_tag, int(ncyl_val))
                                    if verbose:
                                        mdl.info('ncyl set to: '+str(ncyl_val))
                                    
                                    #=======================
                                    #Bore and stroke
                                    #=======================
                                    a = 0.1087
                                    b = 0.0002765
                                    c = 0.8003
                                    bore_to_stroke = a*np.exp(-b*P_shaft_kW_val) + c
                                    vol_per_cyl = Vd_val/ncyl_val #volume per cylinder in m^3
                                    Bore_val = (vol_per_cyl * 4.0 * bore_to_stroke / np.pi)**(1.0/3.0)
                                    Stroke_val = Bore_val/bore_to_stroke
                                    #mdl.set_property_disp_value(Bore_tag, Bore_val)
                                    #mdl.set_property_disp_value(Bore_tag, np.trunc(Bore_val*1e2*1e2)/1e2) #set display value in cm
                                    mdl.set_property_disp_value(Bore_tag, np.trunc(Bore_val*1e6)/1e6) #set display value in m
                                    #mdl.set_property_disp_value(Stroke_tag, Stroke_val)
                                    mdl.set_property_disp_value(Stroke_tag, np.trunc(Stroke_val*1e6)/1e6) #display value in m
                                    #mdl.set_property_disp_value(Stroke_tag, np.trunc(Stroke_val*1000.0)/1000.0) #display value in m
                                    if verbose:
                                        #mdl.info('Bore set to: '+str(Bore_val*1e2)+' cm') 
                                        #mdl.info('Stroke set to: '+str(Stroke_val*1e2)+' cm') 
                                        mdl.info('Bore set to: '+str(Bore_val)+' m') 
                                        mdl.info('Stroke set to: '+str(Stroke_val)+' m') 
                                    
                                    #=======================
                                    #Mean crank diameter
                                    #=======================
                                    Dcj_inches = 0.5031287*np.log(Vd_val/ncyl_val + 1.467849) + 1.658345
                                    Dcj_meters = Dcj_inches * 0.0254
                                    Dcm_val = 1.0*(Dcj_meters*(ncyl_val*(1.0+0.8)-1.0)/(2.0*ncyl_val-1.0)) #mean crank diameter in meters
                                    #mdl.set_property_disp_value(Dcm_tag, Dcm_val)
                                    #mdl.set_property_disp_value(Dcm_tag, np.trunc(Dcm_val*1e2*1e2)/1e2) #display value in cm
                                    mdl.set_property_disp_value(Dcm_tag, np.trunc(Dcm_val*1e6)/1e6) #display value in m
                                    if verbose:
                                        #mdl.info('Dcm set to: '+str(Dcm_val*1e2)+' cm')    
                                        mdl.info('Dcm set to: '+str(Dcm_val)+' m')    
                                    
                                    #=======================
                                    #Throttle area 
                                    #=======================
                                    Pmo = 0.95*Po_nom #manifold pressure. for WOT, we assume 95% of Po_nom
                                
                                    #compute the frictional losses
                                    #Kf = 3.37e-3*(nominal_rpm_val*1e-3)**2 + 0.194
                                    Kf = kfa_val*(nominal_rpm_val*1e-3)**2 + kfb_val
                                    Pmf = Kf*np.sqrt(Stroke_val*Dcm_val)/Bore_val #frictional loss in MPa
                                    Pmf_W = (Pmf*1e6)*Vd_val*(nominal_rpm_val/60.0)/2.0 #frictional loss in watts
                                
                                    #compute the equivalent molar mass
                                    Meq0 = (lambda_sp_nom*lambda_eq_val*Ma_val + Mf_val)/(lambda_sp_nom*lambda_eq_val + 1.0) #Equivalent molecular weight of air/fuel mixture.
                                    f0 = 1.0/(lambda_sp_nom*lambda_eq_val + 1.0)
                                    
                                    # Compute thermal efficiency
                                    eta_therm_success = True
                                    eta_therm0 = (a_eta_therm_val + b_eta_therm_val*Theta_nom/90.0 + c_eta_therm_val*(Theta_nom/90.0)**2)*np.exp(-((lambda_sp_nom + d_eta_therm_val + e_eta_therm_val*Theta_nom/90.0)/(f_eta_therm_val + g_eta_therm_val*Theta_nom/90.0))**2) #thermal efficiency
                                    if (eta_therm0 > 1.0):
                                        mdl.info('eta_therm0 target = '+str(eta_therm0))
                                        mdl.error('Required thermal efficiency is not feasible (>100%). Readjust therm. eff. coefficients')
                                        eta_therm_success = False
                                    #mdl.info('eta_therm0 = '+str(eta_therm0))
                                    
                                    #compute volumetric efficiency
                                    eta_vol_success = True
                                    mo_dot = (P_shaft_kW_val*1e3 + Pmf_W)/(f0*H_val*eta_therm0) #From power we can compute output mass flow rate at steady state.
                                    #mdl.info('mo_dot = '+str(mo_dot))
                                    eta_vol_target = mo_dot * (R_gas_cst_val*Tm_nom*120.0)/(nominal_rpm_val*Vd_val*Pmo*Meq0) #compute the required volumetric efficiency
                                    if (eta_vol_target > 1.0):
                                        mdl.info('eta_vol target = '+str(eta_vol_target))        
                                        mdl.error('Required volumetric efficiency is not feasible (>100%). Try increasing throttle intake pressure Po_nom')
                                        eta_vol_success = False
                                    k = 1.0 + a_eta_vol_val*(Pmo/Po_nom - 1.0) + b_eta_vol_val*((Pmo/Po_nom)**2 - 1.0) #coefficient of exponential constant in eta_vol
                                    if (eta_vol_target > k):
                                        mdl.info('eta_vol target = '+str(eta_vol_target) + ', but maximum possible eta_vol = '+str(k)) 
                                        mdl.error('Required volumetric efficiency is not feasible. Readjust vol. eff. coefficients and/or rpm_at_peak_vol_eff.') #our code should normally not arrive at this point
                                        eta_vol_success = False
                                
                                    # Compute n_rpm_pk. There are 2 values of n_rpm_pk. Select the one that is both positive and closest to nominal_rpm
                                    n_star_1 = nominal_rpm_val  + 1000.0*c_eta_vol_val*np.sqrt(np.log(k / eta_vol_target))
                                    n_star_2 = nominal_rpm_val  - 1000.0*c_eta_vol_val*np.sqrt(np.log(k / eta_vol_target))
                                    if (n_star_2 < 0.0):
                                       n_rpm_pk = n_star_1
                                    elif (n_star_1 < 0.0):
                                       n_rpm_pk = n_star_2
                                    else:
                                        diff_n_star_1 = abs(n_star_1 - nominal_rpm_val)
                                        diff_n_star_2 = abs(n_star_2 - nominal_rpm_val)
                                        if (diff_n_star_1 > diff_n_star_2):
                                            n_rpm_pk = n_star_2
                                        else:
                                            n_rpm_pk = n_star_1
                                    mdl.set_property_disp_value(n_rpm_pk_tag, n_rpm_pk)
                                    #mdl.set_property_disp_value(n_rpm_pk_tag, np.trunc(n_rpm_pk*100)/100)
                                    dummy_var = cd_val*Po_nom/(np.sqrt(R_gas_cst_val*To_nom/Meq0))*((Pmo/Po_nom)**(1.0/keq_nom))*\
                                                np.sqrt((2.0*keq_nom/(keq_nom - 1.0))*(1.0 - (Pmo/Po_nom)**((keq_nom - 1.0)/keq_nom)))
                                                
                                    Aeq_max_val = mo_dot/dummy_var 
                                    
                                    mdl.set_property_disp_value(Aeq_max_tag, Aeq_max_val)
                                    #mdl.set_property_disp_value(Aeq_max_tag, np.trunc(Aeq_max_val*1e4*1e2)/1e2) #display value in cm^2
                                    #mdl.set_property_disp_value(Aeq_max_tag, np.trunc(Aeq_max_val*100000)/100000) #display value in m^2
                                    if verbose:
                                        mdl.info('Aeq_max set to '+str(Aeq_max_val)+' m^2')
                                        
                                    return eta_vol_success, eta_therm_success
                                #End of function
                                
                                
                                #Get kW value that is displayed in the edit box
                                P_shaft_kW_val = float(mdl.get_property_disp_value(P_shaft_kW_tag))
                                auto_compute_success = True
                                
                                if (verbose):
                                    mdl.info('property value display P_shaft_kW = '+str(P_shaft_kW_val))
                                
                                if (P_shaft_kW_val <= 0.0):
                                    #do not set any values if bad nominal shaft power 
                                    mdl.info('Warning: Nominal shaft power should be > 0')
                                    auto_compute_success = False
                                else:
                                    #continue with setting parameters
                                    mdl.set_property_disp_value(P_shaft_kW_tag,P_shaft_kW_val)
                                    if (verbose):
                                        mdl.info('P_shaft_kW value set to '+str(mdl.get_property_disp_value(P_shaft_kW_tag)))
                                    
                                    #fuel type selection affects H, Mf, lambda_eq
                                    fuel_type_value = (mdl.get_property_disp_value(fuel_tag))
                                    if fuel_type_value == 'Natural gas':
                                        H_val = 40.705e6
                                        Mf_val = 19.5e-3
                                        lambda_eq_val = 17.2
                                        set_fuel_params(H_tag, H_val, Mf_tag, Mf_val, lambda_eq_tag, lambda_eq_val, verbose)
                                    elif fuel_type_value == 'Biogas':
                                        H_val = 18.568e6
                                        Mf_val = 20.8281e-3
                                        lambda_eq_val = 7.98
                                        set_fuel_params(H_tag, H_val, Mf_tag, Mf_val, lambda_eq_tag, lambda_eq_val, verbose)
                                    elif fuel_type_value == 'Coke gas':
                                        H_val = 36.722e6
                                        Mf_val = 6.2231e-3
                                        lambda_eq_val = 21.13
                                        set_fuel_params(H_tag, H_val, Mf_tag, Mf_val, lambda_eq_tag, lambda_eq_val, verbose)
                                    elif fuel_type_value == 'Wood gas':
                                        H_val = 5.7e6
                                        Mf_val = 24.6612e-3
                                        lambda_eq_val = 2.245
                                        set_fuel_params(H_tag, H_val, Mf_tag, Mf_val, lambda_eq_tag, lambda_eq_val, verbose)
                                    else:
                                        mdl.info('Warning: Unknown fuel-type selected')
                                        auto_compute_success = False
                                        
                                    if (verbose):
                                        mdl.info('fuel type set to = '+fuel_type_value)
                                    
                                    
                                    #Set default engine parameters
                                    set_default_engine_params(cd_tag, R_gas_cst_tag, kfa_tag, kfb_tag, a_eta_therm_tag, b_eta_therm_tag, \
                                                            c_eta_therm_tag, d_eta_therm_tag, e_eta_therm_tag, f_eta_therm_tag, \
                                                            g_eta_therm_tag, a_eta_vol_tag, b_eta_vol_tag, c_eta_vol_tag, NOx_a_tag, \
                                                            NOx_b_tag, NOx_c_tag, ambient_pressure_tag, Po_nom_tag, lambda_sp_nom_tag,\
                                                            theta_deg_nom_tag, To_nom_tag, Tm_nom_tag, verbose)
                                
                                    #get some parameter values
                                    cd_val = float(mdl.get_property_disp_value(cd_tag))
                                    R_gas_cst_val = float(mdl.get_property_disp_value(R_gas_cst_tag))
                                    H_val = float(mdl.get_property_disp_value(H_tag))
                                    Dcm_val = float(mdl.get_property_disp_value(Dcm_tag))
                                    ncyl_val = float(mdl.get_property_disp_value(ncyl_tag))
                                    Vd_val = float(mdl.get_property_disp_value(Vd_tag))
                                    kfa_val = float(mdl.get_property_disp_value(kfa_tag))
                                    kfb_val = float(mdl.get_property_disp_value(kfb_tag))
                                    Stroke_val = float(mdl.get_property_disp_value(Stroke_tag))
                                    Bore_val = float(mdl.get_property_disp_value(Bore_tag))
                                    a_eta_therm_val = float(mdl.get_property_disp_value(a_eta_therm_tag))
                                    b_eta_therm_val = float(mdl.get_property_disp_value(b_eta_therm_tag))
                                    c_eta_therm_val = float(mdl.get_property_disp_value(c_eta_therm_tag))
                                    d_eta_therm_val = float(mdl.get_property_disp_value(d_eta_therm_tag))
                                    e_eta_therm_val = float(mdl.get_property_disp_value(e_eta_therm_tag))
                                    f_eta_therm_val = float(mdl.get_property_disp_value(f_eta_therm_tag))
                                    g_eta_therm_val = float(mdl.get_property_disp_value(g_eta_therm_tag))
                                    a_eta_vol_val = float(mdl.get_property_disp_value(a_eta_vol_tag))
                                    b_eta_vol_val = float(mdl.get_property_disp_value(b_eta_vol_tag))
                                    c_eta_vol_val = float(mdl.get_property_disp_value(c_eta_vol_tag))
                                    n_rpm_pk_val = float(mdl.get_property_disp_value(n_rpm_pk_tag))
                                    keq_a1_val = float(mdl.get_property_disp_value(keq_a1_tag))
                                    keq_a2_val = float(mdl.get_property_disp_value(keq_a2_tag))
                                    keq_a7_val = float(mdl.get_property_disp_value(keq_a7_tag))
                                    Ma_val = float(mdl.get_property_disp_value(Ma_tag))
                                    Mf_val = float(mdl.get_property_disp_value(Mf_tag))
                                    lambda_eq_val = float(mdl.get_property_disp_value(lambda_eq_tag))
                                    V_val = float(mdl.get_property_disp_value(V_tag))
                                    P_shaft_kW_val = float(mdl.get_property_disp_value(P_shaft_kW_tag))
                                    
                                    #For nominal rpm, use get_property_disp_value api instead of get_property_value, 
                                    #because nominal_rpm_val is not validated before 'compute' button is pushed
                                    nominal_rpm_val = float(mdl.get_property_disp_value(nominal_rpm_tag))
                                    #Po_nom_val = 300.0e3 #we assume 3 bars for nominal pressure.
                                    Po_nom_val = float(mdl.get_property_disp_value(Po_nom_tag)) #read nominal pressure in Pa.
                                    
                                    lambda_sp_nom = float(mdl.get_property_disp_value(lambda_sp_nom_tag)) #1.2
                                    Tm_nom = float(mdl.get_property_disp_value(Tm_nom_tag)) #325.0
                                    To_nom = float(mdl.get_property_disp_value(To_nom_tag)) #300.0
                                    Theta_nom = float(mdl.get_property_disp_value(theta_deg_nom_tag)) #-13.0
                                    
                                    keq_nom = keq_a1_val + keq_a2_val*To_nom + keq_a7_val/lambda_sp_nom
                                    if (keq_nom < 1.0):
                                        keq_nom = 1.0
                                        mdl.info('Warning: keq_nom clipped to 1.0')
                                    
                                    if verbose:
                                        mdl.info('Computing engine dimensions with Po_nom = '+str(Po_nom_val*1.0e-3)+\
                                                    ' kPa; λ_sp_nom = '+str(lambda_sp_nom)+'; Tm_nom = '+str(Tm_nom)+\
                                                    ' K; Adv. spark angle θ = '+str(Theta_nom)+'°')
                                        #mdl.info('Computing engine dimensions with λ_sp_nom = '+str(lambda_sp_nom))
                                        #mdl.info('Computing engine dimensions with Tm_nom = '+str(Tm_nom)+' K')
                                        #mdl.info('Computing engine dimensions with adv. spark angle θ = '+str(Theta_nom)+'°')
                                    
                                    eta_vol_success, eta_therm_success = engine_rating_to_dimensions(To_nom, keq_nom, Po_nom_val, lambda_sp_nom, Tm_nom, Theta_nom, \
                                                                P_shaft_kW_val, lambda_eq_val, nominal_rpm_val, Ma_val, Mf_val, \
                                                                a_eta_therm_val, b_eta_therm_val, c_eta_therm_val,\
                                                                d_eta_therm_val, e_eta_therm_val, f_eta_therm_val, g_eta_therm_val, \
                                                                a_eta_vol_val, b_eta_vol_val, c_eta_vol_val, \
                                                                R_gas_cst_val, H_val, cd_val, Aeq_max_tag, P_shaft_kW_tag, Vd_tag, V_tag, \
                                                                ncyl_tag, Stroke_tag, Bore_tag, Dcm_tag, n_rpm_pk_tag, kfa_val, kfb_val, verbose)
                                    
                                    #update parameter values after the engine calculations. Some code is unecessarily repeated from line 367 above
                                    cd_val = float(mdl.get_property_disp_value(cd_tag))
                                    R_gas_cst_val = float(mdl.get_property_disp_value(R_gas_cst_tag))
                                    H_val = float(mdl.get_property_disp_value(H_tag))
                                    Dcm_val = float(mdl.get_property_disp_value(Dcm_tag))
                                    ncyl_val = float(mdl.get_property_disp_value(ncyl_tag))
                                    Vd_val = float(mdl.get_property_disp_value(Vd_tag))
                                    kfa_val = float(mdl.get_property_disp_value(kfa_tag))
                                    kfb_val = float(mdl.get_property_disp_value(kfb_tag))
                                    Stroke_val = float(mdl.get_property_disp_value(Stroke_tag))
                                    Bore_val = float(mdl.get_property_disp_value(Bore_tag))
                                    a_eta_therm_val = float(mdl.get_property_disp_value(a_eta_therm_tag))
                                    b_eta_therm_val = float(mdl.get_property_disp_value(b_eta_therm_tag))
                                    c_eta_therm_val = float(mdl.get_property_disp_value(c_eta_therm_tag))
                                    d_eta_therm_val = float(mdl.get_property_disp_value(d_eta_therm_tag))
                                    e_eta_therm_val = float(mdl.get_property_disp_value(e_eta_therm_tag))
                                    f_eta_therm_val = float(mdl.get_property_disp_value(f_eta_therm_tag))
                                    g_eta_therm_val = float(mdl.get_property_disp_value(g_eta_therm_tag))
                                    a_eta_vol_val = float(mdl.get_property_disp_value(a_eta_vol_tag))
                                    b_eta_vol_val = float(mdl.get_property_disp_value(b_eta_vol_tag))
                                    c_eta_vol_val = float(mdl.get_property_disp_value(c_eta_vol_tag))
                                    n_rpm_pk_val = float(mdl.get_property_disp_value(n_rpm_pk_tag))
                                    keq_a1_val = float(mdl.get_property_disp_value(keq_a1_tag))
                                    keq_a2_val = float(mdl.get_property_disp_value(keq_a2_tag))
                                    keq_a7_val = float(mdl.get_property_disp_value(keq_a7_tag))
                                    Ma_val = float(mdl.get_property_disp_value(Ma_tag))
                                    Mf_val = float(mdl.get_property_disp_value(Mf_tag))
                                    lambda_eq_val = float(mdl.get_property_disp_value(lambda_eq_tag))
                                    V_val = float(mdl.get_property_disp_value(V_tag))
                                    P_shaft_kW_val = float(mdl.get_property_disp_value(P_shaft_kW_tag))
                                    Po_nom_val = float(mdl.get_property_disp_value(Po_nom_tag))
                                    lambda_sp_nom_val = float(mdl.get_property_disp_value(lambda_sp_nom_tag))
                                    theta_deg_nom_val = float(mdl.get_property_disp_value(theta_deg_nom_tag))
                                    To_nom_val = float(mdl.get_property_disp_value(To_nom_tag))
                                
                                    #========================
                                    #Starter torque
                                    #========================
                                    #For minimal design, set starter torque to be just above the frictional torque
                                    #at the engine crank rpm setpoint. However, at low speed, most of the 
                                    #frictional torque is static. Therefore, engine would take too long to
                                    #start if using a starter torque that is close to the frictional torque at 
                                    #the speed setpoint.
                                    #In many usual genset applications, engine crank setpoint is around 200.0rpm.
                                    rpm_starter_ref = 200.0
                                
                                    starter_torque_Nm_val = ((Vd_val*rpm_starter_ref/120.0)*(kfa_val*rpm_starter_ref**2 * 1e-6 + kfb_val)*((Stroke_val*Dcm_val)**0.5/Bore_val) * 1e6)/(rpm_starter_ref*np.pi/30.0)
                                    starter_torque_Nm_val = 1.80*starter_torque_Nm_val #in order to avoid too long start time, make this 80% higher than minimum required torque
                                    #Previously we assumed to set starter torque to 5 percent of rated engine power on nominal engine speed;
                                    #This sometimes resulted in too low of starter torque
                                    #starter_torque_Nm_val = 0.05*P_shaft_kW_val*1000.0/(nominal_rpm_val*np.pi/30.0) 
                                    
                                    mdl.set_property_disp_value(starter_torque_Nm_tag, starter_torque_Nm_val)    
                                    #mdl.set_property_disp_value(starter_torque_Nm_tag, np.trunc(starter_torque_Nm_val*1000)/1000) #display value in Nm
                                    if verbose:
                                        mdl.info('Starter torque set to = '+str(starter_torque_Nm_val)+'Nm')
                                        
                                    
                                if (auto_compute_success and eta_vol_success and eta_therm_success):
                                    mdl.info('"Estimate engine parameters" complete')
                                else:
                                    mdl.info('Warning: Unable to estimate engine parameters)')
                                    
                                #from handlers.look_up_table import preview_lut
                                #x = [1.0,2.0,3.0]
                                #y = [1.0,2.0,3.0]
                                #preview_lut(x,y,'PEMFC polarization curve', 'Current [A]', 'Voltage [V]')
                            ENDCODE
                        }

                        test_plot_power_speed {
                            label = "Preview power-speed curve"
                            widget = button
                            type = string
                            default_value = "Preview Power-Speed Curve"
                            group = "General"
                            no_evaluate

                            CODE button_clicked
                                import numpy as np
                                from scipy.optimize import root as scipy_root
                                from handlers.look_up_table import preview_lut
                                
                                mdl.info('generating preview...')
                                
                                
                                #collect parameter tags
                                cd_tag = mdl.prop(container_handle, "cd")
                                Aeq_max_tag = mdl.prop(container_handle, "Aeq_max")
                                R_gas_cst_tag = mdl.prop(container_handle, "R_gas_cst")
                                H_tag = mdl.prop(container_handle, "H")
                                ncyl_tag = mdl.prop(container_handle, "ncyl")
                                Vd_tag = mdl.prop(container_handle, "Vd")
                                V_tag = mdl.prop(container_handle, "V")
                                Ma_tag = mdl.prop(container_handle, "Ma")
                                Mf_tag = mdl.prop(container_handle, "Mf")
                                lambda_eq_tag = mdl.prop(container_handle, "lambda_eq")
                                Dcm_tag = mdl.prop(container_handle, "Dcm")
                                kfa_tag = mdl.prop(container_handle, "kfa")
                                kfb_tag = mdl.prop(container_handle, "kfb")
                                Stroke_tag = mdl.prop(container_handle, "Stroke")
                                Bore_tag = mdl.prop(container_handle, "Bore")
                                a_eta_therm_tag = mdl.prop(container_handle, "a_eta_therm")
                                b_eta_therm_tag = mdl.prop(container_handle, "b_eta_therm")
                                c_eta_therm_tag = mdl.prop(container_handle, "c_eta_therm")
                                d_eta_therm_tag = mdl.prop(container_handle, "d_eta_therm")
                                e_eta_therm_tag = mdl.prop(container_handle, "e_eta_therm")
                                f_eta_therm_tag = mdl.prop(container_handle, "f_eta_therm")
                                g_eta_therm_tag = mdl.prop(container_handle, "g_eta_therm")
                                a_eta_vol_tag = mdl.prop(container_handle, "a_eta_vol")
                                b_eta_vol_tag = mdl.prop(container_handle, "b_eta_vol")
                                c_eta_vol_tag = mdl.prop(container_handle, "c_eta_vol")
                                n_rpm_pk_tag = mdl.prop(container_handle, "n_rpm_pk")
                                keq_a1_tag = mdl.prop(container_handle, "keq_a1")
                                keq_a2_tag = mdl.prop(container_handle, "keq_a2")
                                keq_a7_tag = mdl.prop(container_handle, "keq_a7")
                                Po_nom_tag = mdl.prop(container_handle, "Po_nom")
                                lambda_sp_nom_tag = mdl.prop(container_handle, "lambda_sp_nom")
                                theta_deg_nom_tag = mdl.prop(container_handle, "theta_deg_nom")
                                To_nom_tag = mdl.prop(container_handle, "To_nom")
                                Tm_nom_tag = mdl.prop(container_handle, "Tm_nom")
                                
                                
                                #get parameter values. Get display values instead of actual values as they may not yet have been validated.
                                #This can be avoided in future if we have an 'Apply' button.
                                cd_val = float(mdl.get_property_disp_value(cd_tag))
                                Aeq_max_val = float(mdl.get_property_disp_value(Aeq_max_tag))
                                R_gas_cst_val = float(mdl.get_property_disp_value(R_gas_cst_tag))
                                H_val = float(mdl.get_property_disp_value(H_tag))
                                ncyl_val = float(mdl.get_property_disp_value(ncyl_tag))
                                Vd_val = float(mdl.get_property_disp_value(Vd_tag))
                                V_val = float(mdl.get_property_disp_value(V_tag))
                                Ma_val = float(mdl.get_property_disp_value(Ma_tag))
                                Mf_val = float(mdl.get_property_disp_value(Mf_tag))
                                lambda_eq_val = float(mdl.get_property_disp_value(lambda_eq_tag))
                                Dcm_val = float(mdl.get_property_disp_value(Dcm_tag))
                                kfa_val = float(mdl.get_property_disp_value(kfa_tag))
                                kfb_val = float(mdl.get_property_disp_value(kfb_tag))
                                Stroke_val = float(mdl.get_property_disp_value(Stroke_tag))
                                Bore_val = float(mdl.get_property_disp_value(Bore_tag))
                                a_eta_therm_val = float(mdl.get_property_disp_value(a_eta_therm_tag))
                                b_eta_therm_val = float(mdl.get_property_disp_value(b_eta_therm_tag))
                                c_eta_therm_val = float(mdl.get_property_disp_value(c_eta_therm_tag))
                                d_eta_therm_val = float(mdl.get_property_disp_value(d_eta_therm_tag))
                                e_eta_therm_val = float(mdl.get_property_disp_value(e_eta_therm_tag))
                                f_eta_therm_val = float(mdl.get_property_disp_value(f_eta_therm_tag))
                                g_eta_therm_val = float(mdl.get_property_disp_value(g_eta_therm_tag))
                                a_eta_vol_val = float(mdl.get_property_disp_value(a_eta_vol_tag))
                                b_eta_vol_val = float(mdl.get_property_disp_value(b_eta_vol_tag))
                                c_eta_vol_val = float(mdl.get_property_disp_value(c_eta_vol_tag))
                                n_rpm_pk_val = float(mdl.get_property_disp_value(n_rpm_pk_tag))
                                keq_a1_val = float(mdl.get_property_disp_value(keq_a1_tag))
                                keq_a2_val = float(mdl.get_property_disp_value(keq_a2_tag))
                                keq_a7_val = float(mdl.get_property_disp_value(keq_a7_tag))
                                Po_nom_val = float(mdl.get_property_disp_value(Po_nom_tag))
                                lambda_sp_nom_val = float(mdl.get_property_disp_value(lambda_sp_nom_tag))
                                theta_deg_nom_val = float(mdl.get_property_disp_value(theta_deg_nom_tag))
                                To_nom_val = float(mdl.get_property_disp_value(To_nom_tag))
                                Tm_nom_val = float(mdl.get_property_disp_value(Tm_nom_tag))
                                #P_shaft_kW_val = float(mdl.get_property_value(P_shaft_kW_tag))
                                
                                #Create a dictionary of inputs
                                all_inputs = {'cd_val':cd_val, 'Aeq_max_val': Aeq_max_val, 'R_gas_cst_val': R_gas_cst_val, \
                                'H_val': H_val, 'ncyl_val': ncyl_val, 'Vd_val': Vd_val, \
                                'V_val': V_val, 'Ma_val': Ma_val, 'Mf_val': Mf_val, 'lambda_eq_val': lambda_eq_val, \
                                'Dcm_val': Dcm_val, 'kfa_val': kfa_val, 'kfb_val': kfb_val, 'Stroke_val': Stroke_val, \
                                'Bore_val': Bore_val, 'a_eta_therm_val': a_eta_therm_val, 'b_eta_therm_val': b_eta_therm_val, \
                                'c_eta_therm_val': c_eta_therm_val, 'd_eta_therm_val': d_eta_therm_val, 'e_eta_therm_val': e_eta_therm_val, \
                                'f_eta_therm_val': f_eta_therm_val, 'g_eta_therm_val': g_eta_therm_val, 'a_eta_vol_val': a_eta_vol_val, \
                                'b_eta_vol_val': b_eta_vol_val, 'c_eta_vol_val': c_eta_vol_val, 'n_rpm_pk_val': n_rpm_pk_val, \
                                'keq_a1_val': keq_a1_val, 'keq_a2_val': keq_a2_val, 'keq_a7_val': keq_a7_val, 'Po_nom_val': Po_nom_val, \
                                'lambda_sp_nom_val': lambda_sp_nom_val, 'theta_deg_nom_val': theta_deg_nom_val, 'To_nom_val': To_nom_val, \
                                'Tm_nom_val': Tm_nom_val}
                                
                                #additional inputs for plotting
                                sonic_flow = 1 #1=sonic flow assumption; 0=subsonic flow
                                lambda_sp_plot = lambda_sp_nom_val #1.2
                                To_plot = To_nom_val #300.0
                                Tm_plot = Tm_nom_val #325.0
                                Po_plot = Po_nom_val
                                spark_angle_plot = theta_deg_nom_val #-19.0
                                
                                mdl.info('Plotting characteristic, assuming: Po = '+str(Po_plot/1000.0)+'kPa; To = '+str(To_plot)+\
                                'K; Tm = '+str(Tm_plot)+'K; Spark adv. angle = '+str(spark_angle_plot)+'°; Specific λ = '+str(lambda_sp_plot))
                                
                                all_inputs['sonic_flow'] = sonic_flow
                                all_inputs['lambda_sp0_val'] = lambda_sp_plot
                                all_inputs['To_nom'] = To_plot
                                all_inputs['Tm_nom'] = Tm_plot
                                all_inputs['Po_nom_val'] = Po_plot
                                all_inputs['spark_angle_val'] = spark_angle_plot
                                
                                
                                def roots_3rd_method_Pm0(x,*all_inputs):
                                    
                                    #helper function (anonymous) for experimenting a way to solve the initial
                                    #Pm0 without any need for the Pm differential equation. It comes from the
                                    #assumption that in steady state, the air mass flow over the throttle mi_dot is equal to the
                                    #air mass flow out of the manifold in to the cylinders.
                                    
                                
                                    cd_val = all_inputs[0]['cd_val']
                                    H_val = all_inputs[0]['H_val']
                                    lambda_sp0_val = all_inputs[0]['lambda_sp0_val']
                                    lambda_eq_val = all_inputs[0]['lambda_eq_val']
                                    To_nom = all_inputs[0]['To_nom']
                                    Tm_nom = all_inputs[0]['Tm_nom']
                                    nominal_rpm_val = all_inputs[0]['nominal_rpm_val']
                                    
                                    
                                    keq_a1_val = all_inputs[0]['keq_a1_val']
                                    keq_a2_val = all_inputs[0]['keq_a2_val']
                                    keq_a7_val = all_inputs[0]['keq_a7_val']
                                    Ma_val = all_inputs[0]['Ma_val']
                                    Mf_val = all_inputs[0]['Mf_val']
                                    R_gas_cst_val = all_inputs[0]['R_gas_cst_val']
                                    V_val = all_inputs[0]['V_val']
                                    Vd_val = all_inputs[0]['Vd_val']
                                    a_eta_vol_val = all_inputs[0]['a_eta_vol_val']
                                    b_eta_vol_val = all_inputs[0]['b_eta_vol_val']
                                    c_eta_vol_val = all_inputs[0]['c_eta_vol_val']
                                    n_rpm_pk_val = all_inputs[0]['n_rpm_pk_val']
                                    Aeq_max_val = all_inputs[0]['Aeq_max_val']
                                    Po_nom_val = all_inputs[0]['Po_nom_val']
                                    sonic_flow = all_inputs[0]['sonic_flow']
                                    
                                    '''
                                    mdl.info('cd_val = '+str(cd_val))
                                    mdl.info('H_val = '+str(H_val))
                                    mdl.info('lambda_sp0_val = '+str(lambda_sp0_val))
                                    mdl.info('lambda_eq_val = '+str(lambda_eq_val))
                                    mdl.info('To_nom = '+str(To_nom))
                                    mdl.info('Tm_nom = '+str(Tm_nom))
                                    mdl.info('nominal_rpm_val = '+str(nominal_rpm_val))
                                    mdl.info('V_val = '+str(V_val))
                                    mdl.info('n_rpm_pk_val = '+str(n_rpm_pk_val))
                                    mdl.info('Po_nom_val = '+str(Po_nom_val))
                                    '''
                                    
                                    Pm = x
                                    #mdl.info('Pm estimate = '+str(Pm))
                                
                                    lambda_val = lambda_sp0_val*lambda_eq_val
                                    Meq0 = (lambda_val*Ma_val + Mf_val)/(lambda_val + 1.0)
                                    Meqm0 = Meq0
                                    keq0 = keq_a1_val + keq_a2_val*To_nom + keq_a7_val/lambda_sp0_val
                                
                                    if (sonic_flow == 1): #sonic flow assumption
                                        mi_dot = cd_val * Aeq_max_val * (Po_nom_val / np.sqrt(R_gas_cst_val * To_nom / Meq0)) * np.sqrt(keq0) * (2.0 / (keq0 + 1.0)) ** (
                                        (keq0 + 1.0) / (2.0 * (keq0 - 1.0)))
                                    if (sonic_flow == 0): #subsonic flow assumption
                                        mi_dot = cd_val * Aeq_max_val * (Po_nom_val / np.sqrt(R_gas_cst_val * To_nom / Meq0)) * (Pm / Po_nom_val) ** (1.0 / keq0) * np.sqrt(
                                            (2.0 * keq0 / (keq0 - 1.0)) * (1.0 - (Pm / Po_nom_val) ** ((keq0 - 1.0) / keq0)))
                                            
                                    '''
                                    mdl.info('Using rpm = '+str(nominal_rpm_val))
                                    mdl.info('Meq0 = '+str(Meq0))
                                    mdl.info('sonic_flow = '+str(sonic_flow))
                                    mdl.info('mi_dot = '+str(mi_dot))
                                    '''
                                    
                                    eta_vol = (1.0 + a_eta_vol_val*(Pm/Po_nom_val - 1.0) + b_eta_vol_val*((Pm/Po_nom_val)**2.0 - 1.0)) * np.exp(
                                        -((nominal_rpm_val - n_rpm_pk_val) / (1000.0 * c_eta_vol_val))**2)
                                    mo_dot = nominal_rpm_val * Vd_val * eta_vol * Pm * Meqm0 / (R_gas_cst_val * Tm_nom * 120.0)
                                    F = mi_dot - mo_dot # the assumption is that in steady state, mi_dot = mo_dot
                                    '''
                                    mdl.info('eta_vol = '+str(eta_vol))
                                    mdl.info('mo_dot = '+str(mo_dot))
                                    mdl.info('F = '+str(F))
                                    mdl.info('**----**')
                                    '''
                                    return F
                                
                                
                                def engine_steady_state(all_inputs):
                                    '''
                                    Use this function to compute the steady state of enging
                                    :param all_inputs:
                                    :return: all_outputs
                                    '''
                                    #mdl.info('after calling function')
                                    
                                    cd_val = all_inputs['cd_val']
                                    H_val = all_inputs['H_val']
                                    lambda_sp0_val = all_inputs['lambda_sp0_val']
                                    lambda_eq_val = all_inputs['lambda_eq_val']
                                    To_nom = all_inputs['To_nom']
                                    Tm_nom = all_inputs['Tm_nom']
                                    nominal_rpm_val = all_inputs['nominal_rpm_val']
                                
                                    keq_a1_val = all_inputs['keq_a1_val']
                                    keq_a2_val = all_inputs['keq_a2_val']
                                    keq_a7_val = all_inputs['keq_a7_val']
                                    Ma_val = all_inputs['Ma_val']
                                    Mf_val = all_inputs['Mf_val']
                                    R_gas_cst_val = all_inputs['R_gas_cst_val']
                                    V_val = all_inputs['V_val']
                                    Vd_val = all_inputs['Vd_val']
                                    a_eta_therm_val = all_inputs['a_eta_therm_val']
                                    b_eta_therm_val = all_inputs['b_eta_therm_val']
                                    c_eta_therm_val = all_inputs['c_eta_therm_val']
                                    d_eta_therm_val = all_inputs['d_eta_therm_val']
                                    e_eta_therm_val = all_inputs['e_eta_therm_val']
                                    f_eta_therm_val = all_inputs['f_eta_therm_val']
                                    g_eta_therm_val = all_inputs['g_eta_therm_val']
                                    a_eta_vol_val = all_inputs['a_eta_vol_val']
                                    b_eta_vol_val = all_inputs['b_eta_vol_val']
                                    c_eta_vol_val = all_inputs['c_eta_vol_val']
                                    n_rpm_pk_val = all_inputs['n_rpm_pk_val']
                                    Aeq_max_val = all_inputs['Aeq_max_val']
                                    Po_nom_val = all_inputs['Po_nom_val']
                                    Bore_val = all_inputs['Bore_val']
                                    Stroke_val = all_inputs['Stroke_val']
                                    Dcm_val = all_inputs['Dcm_val']
                                    #P_shaft_kW_val = all_inputs['P_shaft_kW_val']
                                
                                    # tolerance of imaginary part. Important results will be considered real if value of imaginary part is less than this tolerance.
                                    tol_imag = 1e-3
                                
                                    # fuel fraction steady state value should be a straight calculation
                                    f0 = 1.0/(lambda_sp0_val*lambda_eq_val + 1.0)
                                
                                
                                    lambda_val = lambda_sp0_val*lambda_eq_val
                                    Meq0 = (lambda_val*Ma_val + Mf_val)/(lambda_val + 1.0)
                                    Meqm0 = Meq0
                                    keq0 = keq_a1_val + keq_a2_val*To_nom + keq_a7_val/lambda_sp0_val
                                
                                    #1. start with assuming sonic (or choked) flow because the equation is simpler
                                    all_inputs['sonic_flow'] = 1 #0=subsonic flow; 1=sonic flow; 2=no solution
                                    critical_value = (2.0/(keq0 + 1.0))**(keq0/(keq0 - 1.0))
                                    #mdl.info('critical_value = '+str(critical_value))
                                
                                    mi_dot =  cd_val*Aeq_max_val * (Po_nom_val/np.sqrt(R_gas_cst_val*To_nom/Meq0)) * keq0**0.5 * (2.0/(keq0 + 1.0))**((keq0 + 1.0)/(2.0*(keq0 - 1.0)))
                                    #mdl.info('mi_dot = '+str(mi_dot))
                                    
                                    #the 3 coefficients of eta_vol should be re-defined to be consistent with the expression containing 4 coefficients
                                    a_eta_vol_new = 1.0 - a_eta_vol_val - b_eta_vol_val
                                    b_eta_vol_new = a_eta_vol_val
                                    c_eta_vol_new = b_eta_vol_val
                                    d_eta_vol_new = c_eta_vol_val
                                
                                    k3_Pm = nominal_rpm_val*Vd_val*Meq0*c_eta_vol_new*np.exp(-((nominal_rpm_val - n_rpm_pk_val)/(1000.0*d_eta_vol_new))**2)/(120.0*R_gas_cst_val*Tm_nom*Po_nom_val**2.0)
                                    k2_Pm = nominal_rpm_val*Vd_val*Meq0*b_eta_vol_new*np.exp(-((nominal_rpm_val - n_rpm_pk_val)/(1000.0*d_eta_vol_new))**2)/(120.0*R_gas_cst_val*Tm_nom*Po_nom_val)
                                    k1_Pm = nominal_rpm_val*Vd_val*Meq0*a_eta_vol_new*np.exp(-((nominal_rpm_val - n_rpm_pk_val)/(1000.0*d_eta_vol_new))**2)/(120.0*R_gas_cst_val*Tm_nom)
                                    k0_Pm = -mi_dot
                                
                                    Pm0_values_xx = np.roots([k3_Pm, k2_Pm, k1_Pm, k0_Pm])
                                    #mdl.info('Pm0_values_roots = '+str(Pm0_values_xx))
                                
                                    potential_solutions = []
                                    #in some edge cases, the solution can have a very small imaginary part, which should be ignored
                                    i = 0
                                    while i < 3:
                                        if (np.abs(np.imag(Pm0_values_xx[i])) > 0.0):
                                            if (np.abs((np.imag(Pm0_values_xx[i])/np.real(Pm0_values_xx[i]))) < tol_imag):
                                                potential_solutions.append(np.real(Pm0_values_xx[i]))
                                            i = i+2 #if a complex root exists, there will be exactly 2 of them (for a cubic system). therefore, no need checking the next root
                                        else:
                                            potential_solutions.append(np.real(Pm0_values_xx[i]))
                                            i = i+1 #if root is real, proceed to check next root.
                                
                                    #if there are more than one real solutions that are less than the critical_value boundary condition, then we have problem.
                                    #if there are no solutions we also have a problem :)
                                    Pm0_solution = []
                                    for i in range(len(potential_solutions)):
                                        if ((potential_solutions[i]/Po_nom_val <= critical_value) and (potential_solutions[i] > 0) and potential_solutions[i] <= Po_nom_val): #last check is moot
                                            Pm0_solution.append(np.real(potential_solutions[i])) #this is a sonic flow solution
                                
                                    if (len(Pm0_solution) != 1):
                                        all_inputs['sonic_flow'] = 2  # 0=subsonic flow; 1=sonic flow; 2=no solution
                                        #no solution found with sonic flow assumption
                                    else:
                                        all_inputs['sonic_flow'] = 1  # 0=subsonic flow; 1=sonic flow; 2=no solution
                                        # confirms sonic flow solution is valid
                                        #mdl.info('sonic flow solution found')
                                
                                    if (all_inputs['sonic_flow'] == 2):
                                        #If no solution returned for sonic flow assumption, then compute new Pm0 with subsonic flow assumption
                                        Pm0_guess = Po_nom_val*0.6 #initial guess
                                        all_inputs['sonic_flow'] = 0 #assume subsonic flow
                                        
                                        #Pm0_solution = fsolve(roots_3rd_method_Pm0, Pm0_guess, args = (all_inputs,), maxfev=300) #args must be tuple
                                        #Pm0_solution = newton(roots_3rd_method_Pm0, Pm0_guess, args = (all_inputs,)) #args must be tuple
                                        Pm0_solution_x = scipy_root(roots_3rd_method_Pm0, Pm0_guess, args = (all_inputs,), method='lm') #args must be tuple
                                        Pm0_solution = Pm0_solution_x.x
                                        #mdl.info('Solution of fsolve: '+str(Pm0_solution))
                                        
                                        Pm0_P0 = np.real(Pm0_solution)/Po_nom_val
                                        if (Pm0_P0 >= critical_value) and (abs(np.imag(Pm0_solution)/np.real(Pm0_solution)) < tol_imag) and (np.real(Pm0_solution) <= Po_nom_val):
                                            all_inputs['sonic_flow'] = 0 #confirms subsonic flow
                                            Pm0_solution = np.real(Pm0_solution)
                                        else:
                                            all_inputs['sonic_flow'] = 2  # no solution found (neither subsonic or sonic flow)
                                            Pm0_solution = [np.nan]
                                            #mdl.info('no sol. found')
                                
                                    #mdl.info('final computed Pm0_solution = '+str(Pm0_solution[0]))
                                    
                                    #Begin debugging
                                    #mdl.info('What is sonic_flow? = '+str(all_inputs['sonic_flow']))
                                    if (all_inputs['sonic_flow'] == 1): #sonic flow assumption
                                        mi_dot = cd_val * Aeq_max_val * (Po_nom_val / np.sqrt(R_gas_cst_val * To_nom / Meq0)) * np.sqrt(keq0) * (2.0 / (keq0 + 1.0)) ** (\
                                        (keq0 + 1.0) / (2.0 * (keq0 - 1.0)))
                                    if (all_inputs['sonic_flow'] == 0): #subsonic flow assumption
                                        mi_dot = cd_val * Aeq_max_val * (Po_nom_val / np.sqrt(R_gas_cst_val * To_nom / Meq0)) * (Pm0_solution / Po_nom_val) ** (1.0 / keq0) * np.sqrt(\
                                            (2.0 * keq0 / (keq0 - 1.0)) * (1.0 - (Pm0_solution / Po_nom_val) ** ((keq0 - 1.0) / keq0)))
                                            
                                    eta_vol = (1.0 + a_eta_vol_val*(Pm0_solution[0]/Po_nom_val - 1.0) + b_eta_vol_val*((Pm0_solution[0]/Po_nom_val)**2 - 1.0)) * \
                                    np.exp(-((nominal_rpm_val - n_rpm_pk_val) / (1000.0 * c_eta_vol_val)) ** 2)
                                    
                                    mo_dot = nominal_rpm_val * Vd_val * eta_vol * Pm0_solution[0] * Meqm0 / (R_gas_cst_val * Tm_nom * 120.0)
                                    
                                    error_mass_flow = abs(mi_dot - mo_dot)/mo_dot
                                    if (error_mass_flow > 0.001):
                                        mdl.info('Warning: mass flow error greater than 0.1%')
                                
                                    #End debugging
                                
                                    all_outputs = {'Pm0_solution':Pm0_solution, 'f0_solution':f0}
                                
                                    return all_outputs
                                    
                                
                                #main function
                                #==============
                                
                                rpm_plot = np.linspace(200,6000,30) #x-axis is engine speed (rpm)
                                Pshaft0_plot = list(range(len(rpm_plot)))
                                #mdl.info(Pshaft0_plot)
                                counter = 0
                                for rpm in rpm_plot:
                                    '''
                                    mdl.info('==================')
                                    mdl.info('counter = '+str(counter))
                                    mdl.info('==================')
                                    mdl.info('lambda_sp = '+str(all_inputs['lambda_sp0_val']))
                                    mdl.info('rpm = '+str(rpm))
                                    '''
                                    
                                    all_inputs['nominal_rpm_val'] = rpm
                                    #mdl.info('before calling function')
                                    all_outputs = engine_steady_state(all_inputs)
                                    #mdl.info('debug 1200')
                                    
                                    Pm0 = all_outputs['Pm0_solution'][0]
                                    f0 = all_outputs['f0_solution']
                                    
                                    Meq0 = (lambda_sp_plot*lambda_eq_val*Ma_val + Mf_val)/(lambda_sp_plot*lambda_eq_val + 1.0) #Equivalent molecular weight of air/fuel mixture
                                    eta_vol = (1.0 + a_eta_vol_val*(Pm0/Po_plot - 1.0) + b_eta_vol_val*((Pm0/Po_plot)**2 - 1.0))\
                                    *np.exp(-((rpm - n_rpm_pk_val)/(1000.0*c_eta_vol_val))**2)
                                    mo0 = rpm*Vd_val*eta_vol*Pm0*Meq0/(R_gas_cst_val*Tm_plot*120.0)  #Steady state Charge flow rate out of manifold into cylinders
                                    Pf0 = Pm0/(1.0 + (Mf_val/Ma_val) * (1.0/f0 - 1.0)) #Steady state partial pressure of fuel in intake manifold
                                    eta_therm0 = (a_eta_therm_val + b_eta_therm_val*spark_angle_plot/90.0 + c_eta_therm_val*(spark_angle_plot/90.0)**2)* \
                                    np.exp(-((lambda_sp_plot + d_eta_therm_val + e_eta_therm_val*spark_angle_plot/90.0)/(f_eta_therm_val + g_eta_therm_val*spark_angle_plot/90.0))**2)
                                    P_therm0 = H_val*eta_therm0*f0*mo0 #thermal power avaiable as mechanical power (equal to shaft power if neglecting losses)
                                    
                                    #compute the frictional losses
                                    #Kf = 3.37e-3*(rpm*1e-3)**2 + 0.194
                                    Kf = kfa_val*(rpm*1e-3)**2 + kfb_val
                                    Pmf = Kf*np.sqrt(Stroke_val*Dcm_val)/Bore_val  #frictional loss in MPa
                                    Pmf_W = (Pmf*1e6)*Vd_val*(rpm/60.0)/2.0 #frictional loss in watts
                                    Pshaft0 = P_therm0 - Pmf_W #shaft power, including losses
                                    Pshaft0_plot[counter] = Pshaft0/1000.0
                                    counter = counter + 1
                                
                                mdl.info('done')
                                preview_lut(rpm_plot,Pshaft0_plot,'WOT shaft power characterisitc', 'Engine speed [RPM]', 'Shaft power [kW]')
                            ENDCODE
                        }

                        test_plot_torque_speed {
                            label = "Preview torque-speed curve"
                            widget = button
                            type = string
                            default_value = "Preview Torque-Speed Curve"
                            group = "General"
                            no_evaluate

                            CODE button_clicked
                                import numpy as np
                                from scipy.optimize import root as scipy_root
                                from handlers.look_up_table import preview_lut
                                
                                mdl.info('generating preview...')
                                
                                
                                #collect parameter tags
                                cd_tag = mdl.prop(container_handle, "cd")
                                Aeq_max_tag = mdl.prop(container_handle, "Aeq_max")
                                R_gas_cst_tag = mdl.prop(container_handle, "R_gas_cst")
                                H_tag = mdl.prop(container_handle, "H")
                                ncyl_tag = mdl.prop(container_handle, "ncyl")
                                Vd_tag = mdl.prop(container_handle, "Vd")
                                V_tag = mdl.prop(container_handle, "V")
                                Ma_tag = mdl.prop(container_handle, "Ma")
                                Mf_tag = mdl.prop(container_handle, "Mf")
                                lambda_eq_tag = mdl.prop(container_handle, "lambda_eq")
                                Dcm_tag = mdl.prop(container_handle, "Dcm")
                                kfa_tag = mdl.prop(container_handle, "kfa")
                                kfb_tag = mdl.prop(container_handle, "kfb")
                                Stroke_tag = mdl.prop(container_handle, "Stroke")
                                Bore_tag = mdl.prop(container_handle, "Bore")
                                a_eta_therm_tag = mdl.prop(container_handle, "a_eta_therm")
                                b_eta_therm_tag = mdl.prop(container_handle, "b_eta_therm")
                                c_eta_therm_tag = mdl.prop(container_handle, "c_eta_therm")
                                d_eta_therm_tag = mdl.prop(container_handle, "d_eta_therm")
                                e_eta_therm_tag = mdl.prop(container_handle, "e_eta_therm")
                                f_eta_therm_tag = mdl.prop(container_handle, "f_eta_therm")
                                g_eta_therm_tag = mdl.prop(container_handle, "g_eta_therm")
                                a_eta_vol_tag = mdl.prop(container_handle, "a_eta_vol")
                                b_eta_vol_tag = mdl.prop(container_handle, "b_eta_vol")
                                c_eta_vol_tag = mdl.prop(container_handle, "c_eta_vol")
                                n_rpm_pk_tag = mdl.prop(container_handle, "n_rpm_pk")
                                keq_a1_tag = mdl.prop(container_handle, "keq_a1")
                                keq_a2_tag = mdl.prop(container_handle, "keq_a2")
                                keq_a7_tag = mdl.prop(container_handle, "keq_a7")
                                Po_nom_tag = mdl.prop(container_handle, "Po_nom")
                                lambda_sp_nom_tag = mdl.prop(container_handle, "lambda_sp_nom")
                                theta_deg_nom_tag = mdl.prop(container_handle, "theta_deg_nom")
                                To_nom_tag = mdl.prop(container_handle, "To_nom")
                                Tm_nom_tag = mdl.prop(container_handle, "Tm_nom")
                                
                                
                                #get parameter values. Get display values instead of actual values as they may not yet have been validated.
                                #This can be avoided in future if we have an 'Apply' button.
                                cd_val = float(mdl.get_property_disp_value(cd_tag))
                                Aeq_max_val = float(mdl.get_property_disp_value(Aeq_max_tag))
                                R_gas_cst_val = float(mdl.get_property_disp_value(R_gas_cst_tag))
                                H_val = float(mdl.get_property_disp_value(H_tag))
                                ncyl_val = float(mdl.get_property_disp_value(ncyl_tag))
                                Vd_val = float(mdl.get_property_disp_value(Vd_tag))
                                V_val = float(mdl.get_property_disp_value(V_tag))
                                Ma_val = float(mdl.get_property_disp_value(Ma_tag))
                                Mf_val = float(mdl.get_property_disp_value(Mf_tag))
                                lambda_eq_val = float(mdl.get_property_disp_value(lambda_eq_tag))
                                Dcm_val = float(mdl.get_property_disp_value(Dcm_tag))
                                kfa_val = float(mdl.get_property_disp_value(kfa_tag))
                                kfb_val = float(mdl.get_property_disp_value(kfb_tag))
                                Stroke_val = float(mdl.get_property_disp_value(Stroke_tag))
                                Bore_val = float(mdl.get_property_disp_value(Bore_tag))
                                a_eta_therm_val = float(mdl.get_property_disp_value(a_eta_therm_tag))
                                b_eta_therm_val = float(mdl.get_property_disp_value(b_eta_therm_tag))
                                c_eta_therm_val = float(mdl.get_property_disp_value(c_eta_therm_tag))
                                d_eta_therm_val = float(mdl.get_property_disp_value(d_eta_therm_tag))
                                e_eta_therm_val = float(mdl.get_property_disp_value(e_eta_therm_tag))
                                f_eta_therm_val = float(mdl.get_property_disp_value(f_eta_therm_tag))
                                g_eta_therm_val = float(mdl.get_property_disp_value(g_eta_therm_tag))
                                a_eta_vol_val = float(mdl.get_property_disp_value(a_eta_vol_tag))
                                b_eta_vol_val = float(mdl.get_property_disp_value(b_eta_vol_tag))
                                c_eta_vol_val = float(mdl.get_property_disp_value(c_eta_vol_tag))
                                n_rpm_pk_val = float(mdl.get_property_disp_value(n_rpm_pk_tag))
                                keq_a1_val = float(mdl.get_property_disp_value(keq_a1_tag))
                                keq_a2_val = float(mdl.get_property_disp_value(keq_a2_tag))
                                keq_a7_val = float(mdl.get_property_disp_value(keq_a7_tag))
                                Po_nom_val = float(mdl.get_property_disp_value(Po_nom_tag))
                                lambda_sp_nom_val = float(mdl.get_property_disp_value(lambda_sp_nom_tag))
                                theta_deg_nom_val = float(mdl.get_property_disp_value(theta_deg_nom_tag))
                                To_nom_val = float(mdl.get_property_disp_value(To_nom_tag))
                                Tm_nom_val = float(mdl.get_property_disp_value(Tm_nom_tag))
                                
                                #P_shaft_kW_val = float(mdl.get_property_value(P_shaft_kW_tag))
                                
                                #Create a dictionary of inputs
                                all_inputs = {'cd_val':cd_val, 'Aeq_max_val': Aeq_max_val, 'R_gas_cst_val': R_gas_cst_val, \
                                'H_val': H_val, 'ncyl_val': ncyl_val, 'Vd_val': Vd_val, \
                                'V_val': V_val, 'Ma_val': Ma_val, 'Mf_val': Mf_val, 'lambda_eq_val': lambda_eq_val, \
                                'Dcm_val': Dcm_val, 'kfa_val': kfa_val, 'kfb_val': kfb_val, 'Stroke_val': Stroke_val, \
                                'Bore_val': Bore_val, 'a_eta_therm_val': a_eta_therm_val, 'b_eta_therm_val': b_eta_therm_val, \
                                'c_eta_therm_val': c_eta_therm_val, 'd_eta_therm_val': d_eta_therm_val, 'e_eta_therm_val': e_eta_therm_val, \
                                'f_eta_therm_val': f_eta_therm_val, 'g_eta_therm_val': g_eta_therm_val, 'a_eta_vol_val': a_eta_vol_val, \
                                'b_eta_vol_val': b_eta_vol_val, 'c_eta_vol_val': c_eta_vol_val, 'n_rpm_pk_val': n_rpm_pk_val, \
                                'keq_a1_val': keq_a1_val, 'keq_a2_val': keq_a2_val, 'keq_a7_val': keq_a7_val, 'Po_nom_val': Po_nom_val, \
                                'lambda_sp_nom_val': lambda_sp_nom_val, 'theta_deg_nom_val': theta_deg_nom_val, 'To_nom_val': To_nom_val, \
                                'Tm_nom_val': Tm_nom_val}
                                
                                #additional inputs for plotting
                                sonic_flow = 1 #1=sonic flow assumption; 0=subsonic flow
                                lambda_sp_plot = lambda_sp_nom_val #1.2
                                To_plot = To_nom_val #300.0
                                Tm_plot = Tm_nom_val #325.0
                                Po_plot = Po_nom_val
                                spark_angle_plot = theta_deg_nom_val #-19.0
                                
                                mdl.info('Plotting characteristic, assuming: Po = '+str(Po_plot/1000.0)+'kPa; To = '+str(To_plot)+\
                                'K; Tm = '+str(Tm_plot)+'K; Spark adv. angle = '+str(spark_angle_plot)+'°; Specific λ = '+str(lambda_sp_plot))
                                
                                all_inputs['sonic_flow'] = sonic_flow
                                all_inputs['lambda_sp0_val'] = lambda_sp_plot
                                all_inputs['To_nom'] = To_plot
                                all_inputs['Tm_nom'] = Tm_plot
                                all_inputs['Po_nom_val'] = Po_plot
                                all_inputs['spark_angle_val'] = spark_angle_plot
                                
                                
                                def roots_3rd_method_Pm0(x,*all_inputs):
                                    
                                    #helper function (anonymous) for experimenting a way to solve the initial
                                    #Pm0 without any need for the Pm differential equation. It comes from the
                                    #assumption that in steady state, the air mass flow over the throttle mi_dot is equal to the
                                    #air mass flow out of the manifold in to the cylinders.
                                    
                                
                                    cd_val = all_inputs[0]['cd_val']
                                    H_val = all_inputs[0]['H_val']
                                    lambda_sp0_val = all_inputs[0]['lambda_sp0_val']
                                    lambda_eq_val = all_inputs[0]['lambda_eq_val']
                                    To_nom = all_inputs[0]['To_nom']
                                    Tm_nom = all_inputs[0]['Tm_nom']
                                    nominal_rpm_val = all_inputs[0]['nominal_rpm_val']
                                    
                                    
                                    keq_a1_val = all_inputs[0]['keq_a1_val']
                                    keq_a2_val = all_inputs[0]['keq_a2_val']
                                    keq_a7_val = all_inputs[0]['keq_a7_val']
                                    Ma_val = all_inputs[0]['Ma_val']
                                    Mf_val = all_inputs[0]['Mf_val']
                                    R_gas_cst_val = all_inputs[0]['R_gas_cst_val']
                                    V_val = all_inputs[0]['V_val']
                                    Vd_val = all_inputs[0]['Vd_val']
                                    a_eta_vol_val = all_inputs[0]['a_eta_vol_val']
                                    b_eta_vol_val = all_inputs[0]['b_eta_vol_val']
                                    c_eta_vol_val = all_inputs[0]['c_eta_vol_val']
                                    n_rpm_pk_val = all_inputs[0]['n_rpm_pk_val']
                                    Aeq_max_val = all_inputs[0]['Aeq_max_val']
                                    Po_nom_val = all_inputs[0]['Po_nom_val']
                                    sonic_flow = all_inputs[0]['sonic_flow']
                                    
                                    '''
                                    mdl.info('cd_val = '+str(cd_val))
                                    mdl.info('H_val = '+str(H_val))
                                    mdl.info('lambda_sp0_val = '+str(lambda_sp0_val))
                                    mdl.info('lambda_eq_val = '+str(lambda_eq_val))
                                    mdl.info('To_nom = '+str(To_nom))
                                    mdl.info('Tm_nom = '+str(Tm_nom))
                                    mdl.info('nominal_rpm_val = '+str(nominal_rpm_val))
                                    mdl.info('V_val = '+str(V_val))
                                    mdl.info('n_rpm_pk_val = '+str(n_rpm_pk_val))
                                    mdl.info('Po_nom_val = '+str(Po_nom_val))
                                    '''
                                    
                                    Pm = x
                                    #mdl.info('Pm estimate = '+str(Pm))
                                
                                    lambda_val = lambda_sp0_val*lambda_eq_val
                                    Meq0 = (lambda_val*Ma_val + Mf_val)/(lambda_val + 1.0)
                                    Meqm0 = Meq0
                                    keq0 = keq_a1_val + keq_a2_val*To_nom + keq_a7_val/lambda_sp0_val
                                
                                    if (sonic_flow == 1): #sonic flow assumption
                                        mi_dot = cd_val * Aeq_max_val * (Po_nom_val / np.sqrt(R_gas_cst_val * To_nom / Meq0)) * np.sqrt(keq0) * (2.0 / (keq0 + 1.0)) ** (
                                        (keq0 + 1.0) / (2.0 * (keq0 - 1.0)))
                                    if (sonic_flow == 0): #subsonic flow assumption
                                        mi_dot = cd_val * Aeq_max_val * (Po_nom_val / np.sqrt(R_gas_cst_val * To_nom / Meq0)) * (Pm / Po_nom_val) ** (1.0 / keq0) * np.sqrt(
                                            (2.0 * keq0 / (keq0 - 1.0)) * (1.0 - (Pm / Po_nom_val) ** ((keq0 - 1.0) / keq0)))
                                            
                                    '''
                                    mdl.info('Using rpm = '+str(nominal_rpm_val))
                                    mdl.info('Meq0 = '+str(Meq0))
                                    mdl.info('sonic_flow = '+str(sonic_flow))
                                    mdl.info('mi_dot = '+str(mi_dot))
                                    '''
                                    
                                    eta_vol = (1.0 + a_eta_vol_val*(Pm/Po_nom_val - 1.0) + b_eta_vol_val*((Pm/Po_nom_val)**2.0 - 1.0)) * np.exp(
                                        -((nominal_rpm_val - n_rpm_pk_val) / (1000.0 * c_eta_vol_val))**2)
                                    mo_dot = nominal_rpm_val * Vd_val * eta_vol * Pm * Meqm0 / (R_gas_cst_val * Tm_nom * 120.0)
                                    F = mi_dot - mo_dot # the assumption is that in steady state, mi_dot = mo_dot
                                    '''
                                    mdl.info('eta_vol = '+str(eta_vol))
                                    mdl.info('mo_dot = '+str(mo_dot))
                                    mdl.info('F = '+str(F))
                                    mdl.info('**----**')
                                    '''
                                    return F
                                
                                
                                def engine_steady_state(all_inputs):
                                    '''
                                    Use this function to compute the steady state of enging
                                    :param all_inputs:
                                    :return: all_outputs
                                    '''
                                    #mdl.info('after calling function')
                                    
                                    cd_val = all_inputs['cd_val']
                                    H_val = all_inputs['H_val']
                                    lambda_sp0_val = all_inputs['lambda_sp0_val']
                                    lambda_eq_val = all_inputs['lambda_eq_val']
                                    To_nom = all_inputs['To_nom']
                                    Tm_nom = all_inputs['Tm_nom']
                                    nominal_rpm_val = all_inputs['nominal_rpm_val']
                                
                                    keq_a1_val = all_inputs['keq_a1_val']
                                    keq_a2_val = all_inputs['keq_a2_val']
                                    keq_a7_val = all_inputs['keq_a7_val']
                                    Ma_val = all_inputs['Ma_val']
                                    Mf_val = all_inputs['Mf_val']
                                    R_gas_cst_val = all_inputs['R_gas_cst_val']
                                    V_val = all_inputs['V_val']
                                    Vd_val = all_inputs['Vd_val']
                                    a_eta_therm_val = all_inputs['a_eta_therm_val']
                                    b_eta_therm_val = all_inputs['b_eta_therm_val']
                                    c_eta_therm_val = all_inputs['c_eta_therm_val']
                                    d_eta_therm_val = all_inputs['d_eta_therm_val']
                                    e_eta_therm_val = all_inputs['e_eta_therm_val']
                                    f_eta_therm_val = all_inputs['f_eta_therm_val']
                                    g_eta_therm_val = all_inputs['g_eta_therm_val']
                                    a_eta_vol_val = all_inputs['a_eta_vol_val']
                                    b_eta_vol_val = all_inputs['b_eta_vol_val']
                                    c_eta_vol_val = all_inputs['c_eta_vol_val']
                                    n_rpm_pk_val = all_inputs['n_rpm_pk_val']
                                    Aeq_max_val = all_inputs['Aeq_max_val']
                                    Po_nom_val = all_inputs['Po_nom_val']
                                    Bore_val = all_inputs['Bore_val']
                                    Stroke_val = all_inputs['Stroke_val']
                                    Dcm_val = all_inputs['Dcm_val']
                                    #P_shaft_kW_val = all_inputs['P_shaft_kW_val']
                                
                                    # tolerance of imaginary part. Important results will be considered real if value of imaginary part is less than this tolerance.
                                    tol_imag = 1e-3
                                
                                    # fuel fraction steady state value should be a straight calculation
                                    f0 = 1.0/(lambda_sp0_val*lambda_eq_val + 1.0)
                                
                                
                                    lambda_val = lambda_sp0_val*lambda_eq_val
                                    Meq0 = (lambda_val*Ma_val + Mf_val)/(lambda_val + 1.0)
                                    Meqm0 = Meq0
                                    keq0 = keq_a1_val + keq_a2_val*To_nom + keq_a7_val/lambda_sp0_val
                                
                                    #1. start with assuming sonic (or choked) flow because the equation is simpler
                                    all_inputs['sonic_flow'] = 1 #0=subsonic flow; 1=sonic flow; 2=no solution
                                    critical_value = (2.0/(keq0 + 1.0))**(keq0/(keq0 - 1.0))
                                    #mdl.info('critical_value = '+str(critical_value))
                                
                                    mi_dot =  cd_val*Aeq_max_val * (Po_nom_val/np.sqrt(R_gas_cst_val*To_nom/Meq0)) * keq0**0.5 * (2.0/(keq0 + 1.0))**((keq0 + 1.0)/(2.0*(keq0 - 1.0)))
                                    #mdl.info('mi_dot = '+str(mi_dot))
                                    
                                    #the 3 coefficients of eta_vol should be re-defined to be consistent with the expression containing 4 coefficients
                                    a_eta_vol_new = 1.0 - a_eta_vol_val - b_eta_vol_val
                                    b_eta_vol_new = a_eta_vol_val
                                    c_eta_vol_new = b_eta_vol_val
                                    d_eta_vol_new = c_eta_vol_val
                                
                                    k3_Pm = nominal_rpm_val*Vd_val*Meq0*c_eta_vol_new*np.exp(-((nominal_rpm_val - n_rpm_pk_val)/(1000.0*d_eta_vol_new))**2)/(120.0*R_gas_cst_val*Tm_nom*Po_nom_val**2.0)
                                    k2_Pm = nominal_rpm_val*Vd_val*Meq0*b_eta_vol_new*np.exp(-((nominal_rpm_val - n_rpm_pk_val)/(1000.0*d_eta_vol_new))**2)/(120.0*R_gas_cst_val*Tm_nom*Po_nom_val)
                                    k1_Pm = nominal_rpm_val*Vd_val*Meq0*a_eta_vol_new*np.exp(-((nominal_rpm_val - n_rpm_pk_val)/(1000.0*d_eta_vol_new))**2)/(120.0*R_gas_cst_val*Tm_nom)
                                    k0_Pm = -mi_dot
                                
                                    Pm0_values_xx = np.roots([k3_Pm, k2_Pm, k1_Pm, k0_Pm])
                                    #mdl.info('Pm0_values_roots = '+str(Pm0_values_xx))
                                
                                    potential_solutions = []
                                    #in some edge cases, the solution can have a very small imaginary part, which should be ignored
                                    i = 0
                                    while i < 3:
                                        if (np.abs(np.imag(Pm0_values_xx[i])) > 0.0):
                                            if (np.abs((np.imag(Pm0_values_xx[i])/np.real(Pm0_values_xx[i]))) < tol_imag):
                                                potential_solutions.append(np.real(Pm0_values_xx[i]))
                                            i = i+2 #if a complex root exists, there will be exactly 2 of them (for a cubic system). therefore, no need checking the next root
                                        else:
                                            potential_solutions.append(np.real(Pm0_values_xx[i]))
                                            i = i+1 #if root is real, proceed to check next root.
                                
                                    #if there are more than one real solutions that are less than the critical_value boundary condition, then we have problem.
                                    #if there are no solutions we also have a problem :)
                                    Pm0_solution = []
                                    for i in range(len(potential_solutions)):
                                        if ((potential_solutions[i]/Po_nom_val <= critical_value) and (potential_solutions[i] > 0) and potential_solutions[i] <= Po_nom_val): #last check is moot
                                            Pm0_solution.append(np.real(potential_solutions[i])) #this is a sonic flow solution
                                
                                    if (len(Pm0_solution) != 1):
                                        all_inputs['sonic_flow'] = 2  # 0=subsonic flow; 1=sonic flow; 2=no solution
                                        #no solution found with sonic flow assumption
                                    else:
                                        all_inputs['sonic_flow'] = 1  # 0=subsonic flow; 1=sonic flow; 2=no solution
                                        # confirms sonic flow solution is valid
                                        #mdl.info('sonic flow solution found')
                                
                                    if (all_inputs['sonic_flow'] == 2):
                                        #If no solution returned for sonic flow assumption, then compute new Pm0 with subsonic flow assumption
                                        Pm0_guess = Po_nom_val*0.6 #initial guess
                                        all_inputs['sonic_flow'] = 0 #assume subsonic flow
                                        
                                        #Pm0_solution = fsolve(roots_3rd_method_Pm0, Pm0_guess, args = (all_inputs,), maxfev=300) #args must be tuple
                                        #Pm0_solution = newton(roots_3rd_method_Pm0, Pm0_guess, args = (all_inputs,)) #args must be tuple
                                        Pm0_solution_x = scipy_root(roots_3rd_method_Pm0, Pm0_guess, args = (all_inputs,), method='lm') #args must be tuple
                                        Pm0_solution = Pm0_solution_x.x
                                        #mdl.info('Solution of fsolve: '+str(Pm0_solution))
                                        
                                        Pm0_P0 = np.real(Pm0_solution)/Po_nom_val
                                        if (Pm0_P0 >= critical_value) and (abs(np.imag(Pm0_solution)/np.real(Pm0_solution)) < tol_imag) and (np.real(Pm0_solution) <= Po_nom_val):
                                            all_inputs['sonic_flow'] = 0 #confirms subsonic flow
                                            Pm0_solution = np.real(Pm0_solution)
                                        else:
                                            all_inputs['sonic_flow'] = 2  # no solution found (neither subsonic or sonic flow)
                                            Pm0_solution = [np.nan]
                                            mdl.info('no sol. found')
                                
                                    #mdl.info('final computed Pm0_solution = '+str(Pm0_solution[0]))
                                    
                                    #Begin debugging
                                    #mdl.info('What is sonic_flow? = '+str(all_inputs['sonic_flow']))
                                    if (all_inputs['sonic_flow'] == 1): #sonic flow assumption
                                        mi_dot = cd_val * Aeq_max_val * (Po_nom_val / np.sqrt(R_gas_cst_val * To_nom / Meq0)) * np.sqrt(keq0) * (2.0 / (keq0 + 1.0)) ** (\
                                        (keq0 + 1.0) / (2.0 * (keq0 - 1.0)))
                                    if (all_inputs['sonic_flow'] == 0): #subsonic flow assumption
                                        mi_dot = cd_val * Aeq_max_val * (Po_nom_val / np.sqrt(R_gas_cst_val * To_nom / Meq0)) * (Pm0_solution / Po_nom_val) ** (1.0 / keq0) * np.sqrt(\
                                            (2.0 * keq0 / (keq0 - 1.0)) * (1.0 - (Pm0_solution / Po_nom_val) ** ((keq0 - 1.0) / keq0)))
                                            
                                    eta_vol = (1.0 + a_eta_vol_val*(Pm0_solution[0]/Po_nom_val - 1.0) + b_eta_vol_val*((Pm0_solution[0]/Po_nom_val)**2 - 1.0)) * \
                                    np.exp(-((nominal_rpm_val - n_rpm_pk_val) / (1000.0 * c_eta_vol_val)) ** 2)
                                    
                                    mo_dot = nominal_rpm_val * Vd_val * eta_vol * Pm0_solution[0] * Meqm0 / (R_gas_cst_val * Tm_nom * 120.0)
                                    
                                    error_mass_flow = abs(mi_dot - mo_dot)/mo_dot
                                    if (error_mass_flow > 0.001):
                                        mdl.info('Warning: mass flow error greater than 0.1%')
                                
                                    #End debugging
                                
                                    all_outputs = {'Pm0_solution':Pm0_solution, 'f0_solution':f0}
                                
                                    return all_outputs
                                    
                                
                                #main function
                                #==============
                                
                                rpm_plot = np.linspace(200.0,6000.0,30) #x-axis is engine speed (rpm)
                                #Pshaft0_plot = list(range(len(rpm_plot)))
                                Tshaft0_plot = list(range(len(rpm_plot)))
                                #mdl.info(Pshaft0_plot)
                                counter = 0
                                for rpm in rpm_plot:
                                    '''
                                    mdl.info('==================')
                                    mdl.info('counter = '+str(counter))
                                    mdl.info('==================')
                                    mdl.info('lambda_sp = '+str(all_inputs['lambda_sp0_val']))
                                    mdl.info('rpm = '+str(rpm))
                                    '''
                                    
                                    all_inputs['nominal_rpm_val'] = rpm
                                    #mdl.info('before calling function')
                                    all_outputs = engine_steady_state(all_inputs)
                                    #mdl.info('debug 1200')
                                    
                                    Pm0 = all_outputs['Pm0_solution'][0]
                                    f0 = all_outputs['f0_solution']
                                    
                                    Meq0 = (lambda_sp_plot*lambda_eq_val*Ma_val + Mf_val)/(lambda_sp_plot*lambda_eq_val + 1.0) #Equivalent molecular weight of air/fuel mixture
                                    eta_vol = (1.0 + a_eta_vol_val*(Pm0/Po_plot - 1.0) + b_eta_vol_val*((Pm0/Po_plot)**2 - 1.0))\
                                    *np.exp(-((rpm - n_rpm_pk_val)/(1000.0*c_eta_vol_val))**2)
                                    mo0 = rpm*Vd_val*eta_vol*Pm0*Meq0/(R_gas_cst_val*Tm_plot*120.0)  #Steady state Charge flow rate out of manifold into cylinders
                                    Pf0 = Pm0/(1.0 + (Mf_val/Ma_val) * (1.0/f0 - 1.0)) #Steady state partial pressure of fuel in intake manifold
                                    eta_therm0 = (a_eta_therm_val + b_eta_therm_val*spark_angle_plot/90.0 + c_eta_therm_val*(spark_angle_plot/90.0)**2)* \
                                    np.exp(-((lambda_sp_plot + d_eta_therm_val + e_eta_therm_val*spark_angle_plot/90.0)/(f_eta_therm_val + g_eta_therm_val*spark_angle_plot/90.0))**2)
                                    P_therm0 = H_val*eta_therm0*f0*mo0 #thermal power avaiable as mechanical power (equal to shaft power if neglecting losses)
                                    
                                    #compute the frictional losses
                                    #Kf = 3.37e-3*(rpm*1e-3)**2 + 0.194
                                    Kf = kfa_val*(rpm*1e-3)**2 + kfb_val
                                    Pmf = Kf*np.sqrt(Stroke_val*Dcm_val)/Bore_val  #frictional loss in MPa
                                    Pmf_W = (Pmf*1e6)*Vd_val*(rpm/60.0)/2.0 #frictional loss in watts
                                    Pshaft0 = P_therm0 - Pmf_W #shaft power, including losses
                                    #Pshaft0_plot[counter] = Pshaft0/1000.0
                                    Tshaft0_plot[counter] = Pshaft0/(1000.0*2.0*np.pi*rpm/60.0)
                                    counter = counter + 1
                                
                                mdl.info('done')
                                preview_lut(rpm_plot,Tshaft0_plot,'WOT shaft torque characterisitc', 'Engine speed [RPM]', 'Shaft torque [kNm]')
                            ENDCODE
                        }

                        NOx_a {
                            label = "Peak NOx emissions"
                            widget = edit
                            type = generic
                            default_value = "2402.0"
                            unit = "mole fraction ppm"
                            group = "Emissions"
                        }

                        NOx_b {
                            label = "NOx emissions coefficient b"
                            widget = edit
                            type = generic
                            default_value = "1.118"
                            group = "Emissions"
                        }

                        NOx_c {
                            label = "NOx emissions coefficient c"
                            widget = edit
                            type = generic
                            default_value = "0.164"
                            group = "Emissions"

                            CODE property_value_changed
                                if (new_value <= 0.0):
                                    mdl.info('Warning: NOx emissions coefficient "c" be > 0')
                            ENDCODE
                        }

                        test_NOx_emissions {
                            label = "Preview NOx emissions"
                            widget = button
                            type = string
                            default_value = "Preview NOx emissions curve"
                            group = "Emissions"
                            no_evaluate

                            CODE button_clicked
                                import numpy as np
                                from handlers.look_up_table import preview_lut
                                
                                #get handles (or tags) for the emissions coefficients
                                NOx_a_tag = mdl.prop(container_handle, "NOx_a")
                                NOx_b_tag = mdl.prop(container_handle, "NOx_b")
                                NOx_c_tag = mdl.prop(container_handle, "NOx_c")
                                
                                #get values of emissions coefficients
                                NOx_a_val = float(mdl.get_property_disp_value(NOx_a_tag))
                                NOx_b_val = float(mdl.get_property_disp_value(NOx_b_tag))
                                NOx_c_val = float(mdl.get_property_disp_value(NOx_c_tag))
                                
                                lambda_sp_vector = np.linspace(0.5,2.0,50)
                                NOx = NOx_a_val * np.exp(-((lambda_sp_vector - NOx_b_val)/NOx_c_val)**2.0)
                                
                                preview_lut(lambda_sp_vector,NOx,'NOx emissions curve', 'Specific air-fuel ratio (λsp)', 'NOx [mole fraction ppm]')
                            ENDCODE
                        }

                        starter_torque_Nm {
                            label = "Starter torque"
                            widget = edit
                            type = generic
                            default_value = "86.4649736197887"
                            unit = "Nm"
                            group = "Other"

                            CODE property_value_changed
                                if (new_value <= 0.0):
                                    mdl.info('Warning: Starter torque should be > 0')
                            ENDCODE
                        }

                        simulate_engine_roughness {
                            label = "Simulate engine roughness"
                            widget = checkbox
                            type = bool
                            default_value = "False"
                            group = "Other"
                            no_evaluate

                            CODE property_value_edited
                                #collect tags
                                lambda_sp1_tag = mdl.prop(container_handle, "lambda_sp1")
                                sig1_pu_tag = mdl.prop(container_handle, "sig1_pu")
                                lambda_sp2_tag = mdl.prop(container_handle, "lambda_sp2")
                                sig2_pu_tag = mdl.prop(container_handle, "sig2_pu")
                                preview_engine_roughness_tag = mdl.prop(container_handle, "preview_engine_roughness")
                                
                                #The engine roughness variable is not visible but is used in the model to enable/disable engine roughness
                                engine_roughness_enabled_tag = mdl.prop(container_handle, "engine_roughness_enabled")
                                
                                #Enable or disable entries
                                if (new_value):
                                    mdl.set_property_value(engine_roughness_enabled_tag, 1.0)
                                    
                                    mdl.enable_property(lambda_sp1_tag)
                                    mdl.enable_property(sig1_pu_tag)
                                    mdl.enable_property(lambda_sp2_tag)
                                    mdl.enable_property(sig2_pu_tag)
                                    mdl.enable_property(preview_engine_roughness_tag)
                                else:
                                    mdl.set_property_value(engine_roughness_enabled_tag, 0.0)
                                    
                                    mdl.disable_property(lambda_sp1_tag)
                                    mdl.disable_property(sig1_pu_tag)
                                    mdl.disable_property(lambda_sp2_tag)
                                    mdl.disable_property(sig2_pu_tag)
                                    mdl.disable_property(preview_engine_roughness_tag)
                            ENDCODE
                        }

                        lambda_sp1 {
                            label = "Specific air-fuel ratio datapoint 1"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            group = "Other"
                            disabled
                        }

                        sig1_pu {
                            label = "Standard deviation of torque at datapoint 1 "
                            widget = edit
                            type = generic
                            default_value = "0.01"
                            unit = "per unit"
                            group = "Other"
                            disabled
                        }

                        lambda_sp2 {
                            label = "Specific air-fuel ratio datapoint 2"
                            widget = edit
                            type = generic
                            default_value = "1.3"
                            group = "Other"
                            disabled
                        }

                        sig2_pu {
                            label = "Standard deviation of torque at datapoint 2"
                            widget = edit
                            type = generic
                            default_value = "0.1"
                            unit = "per unit"
                            group = "Other"
                            disabled
                        }

                        engine_roughness_enabled {
                            label = "engine_roughness_enabled"
                            widget = edit
                            type = generic
                            default_value = "0.0"
                            group = "Other"
                            nonvisible
                        }

                        k_roughness {
                            label = "k_roughness"
                            widget = edit
                            type = generic
                            default_value = "0.0"
                            group = "Other"
                            nonvisible
                        }

                        xo_roughness {
                            label = "xo_roughness"
                            widget = edit
                            type = generic
                            default_value = "0.0"
                            group = "Other"
                            nonvisible
                        }

                        preview_engine_roughness {
                            label = "Preview engine roughness curve"
                            widget = button
                            type = string
                            default_value = "Preview engine roughness"
                            group = "Other"
                            disabled
                            no_evaluate

                            CODE button_clicked
                                import numpy as np
                                from handlers.look_up_table import preview_lut
                                
                                
                                #collect tags
                                lambda_sp1_tag = mdl.prop(container_handle, "lambda_sp1")
                                sig1_pu_tag = mdl.prop(container_handle, "sig1_pu")
                                lambda_sp2_tag = mdl.prop(container_handle, "lambda_sp2")
                                sig2_pu_tag = mdl.prop(container_handle, "sig2_pu")
                                
                                #collect values
                                lambda_sp1_val = float(mdl.get_property_disp_value(lambda_sp1_tag))
                                lambda_sp2_val = float(mdl.get_property_disp_value(lambda_sp2_tag))
                                sig1_pu_val = float(mdl.get_property_disp_value(sig1_pu_tag))
                                sig2_pu_val = float(mdl.get_property_disp_value(sig2_pu_tag))
                                
                                #check for errors
                                input_error = 0
                                if ((sig1_pu_val > 1.0) or (sig2_pu_val > 1.0)):
                                    mdl.info('Error: Standard deviation [in per unit] must be less than 1')
                                    input_error = 1
                                if ((sig1_pu_val == sig2_pu_val) or (lambda_sp1_val == lambda_sp2_val)):
                                    mdl.info('Error: Inputs must be different')
                                    input_error = 1
                                if (((sig1_pu_val > sig2_pu_val) and (lambda_sp1_val < lambda_sp2_val))\
                                or ((sig1_pu_val < sig2_pu_val) and (lambda_sp1_val > lambda_sp2_val))):
                                    mdl.info('Error: Points must be monotonous')
                                    input_error = 1
                                
                                if not(input_error):
                                    #swap / arrange points such that point2 has higher magnitude than point1
                                    if (sig1_pu_val > sig2_pu_val):
                                        temp = sig2_pu_val
                                        sig2_pu_val = sig1_pu_val
                                        sig1_pu_val = temp
                                        
                                        temp = lambda_sp1_val
                                        lambda_sp1_val = lambda_sp2_val
                                        lambda_sp2_val = temp
                                
                                    k = (np.log(1.0/sig1_pu_val - 1.0) - np.log(1.0/sig2_pu_val - 1.0))/(lambda_sp2_val - lambda_sp1_val)
                                    xo = np.log(1.0/sig1_pu_val - 1.0)/k + lambda_sp1_val
                                
                                    lambda_plot = np.linspace(0.0,2.0,200)
                                    sig_plot = (1.0/(1.0+np.exp(-k*(lambda_plot - xo))))
                                
                                    preview_lut(lambda_plot,sig_plot,'Engine roughness curve', 'Specific air-fuel ratio (λsp)', 'Standard deviation of cyclic variations [per unit]')
                            ENDCODE
                        }

                        crankshaft_angle_internal {
                            label = "Generate crankshaft angle internally"
                            widget = checkbox
                            type = bool
                            default_value = "True"
                            group = "Other"
                            disabled
                            no_evaluate
                        }

                        lambda_sp_nom {
                            label = "Nominal specific air-fuel ratio"
                            widget = edit
                            type = generic
                            default_value = "1.2"
                            group = "Advanced"

                            CODE property_value_changed
                                if (new_value < 0.0):
                                    mdl.info('Warning: Nominal specific air-fuel ratio should be > 0')
                            ENDCODE
                        }

                        theta_deg_nom {
                            label = "Nominal spark advance angle (-90° to 0°)"
                            widget = edit
                            type = generic
                            default_value = "-19.0"
                            unit = "°"
                            group = "Advanced"

                            CODE property_value_changed
                                if (new_value < -90.0 or new_value > 0.0):
                                    mdl.info('Warning: Nominal spark advance angle should be between -90° and 0°')
                            ENDCODE
                        }

                        To_nom {
                            label = "Nominal throttle inlet charge temperature"
                            widget = edit
                            type = generic
                            default_value = "300.0"
                            unit = "K"
                            group = "Advanced"
                        }

                        Tm_nom {
                            label = "Nominal intake manifold temperature"
                            widget = edit
                            type = generic
                            default_value = "325.0"
                            unit = "K"
                            group = "Advanced"
                        }

                        __hidden__ {
                            widget = button
                            type = string
                            default_value = "____________________________________"
                            group = "Advanced"
                            disabled
                            no_evaluate
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE

                        CODE init
                            atmospheric_pressure_tag  = mdl.prop(item_handle, "atmospheric_pressure")
                            #Don't initialized atm. pressure any longer as it is now visible and editable on the mask
                            #mdl.set_property_value(atmospheric_pressure_tag, 1.0e5)
                            
                            k_roughness_tag  = mdl.prop(item_handle, "k_roughness")
                            mdl.set_property_value(k_roughness_tag, 0.0)
                            mdl.set_property_disp_value(k_roughness_tag, 0.0)
                            
                            xo_roughness_tag  = mdl.prop(item_handle, "xo_roughness")
                            mdl.set_property_value(xo_roughness_tag, 0.0)
                            mdl.set_property_disp_value(xo_roughness_tag, 0.0)
                            
                            simulate_engine_roughness_tag = mdl.prop(item_handle, "simulate_engine_roughness")
                            simulate_engine_roughness_val = mdl.get_property_disp_value(simulate_engine_roughness_tag)
                            
                            engine_roughness_enabled_tag  = mdl.prop(item_handle, "engine_roughness_enabled")
                            
                            if (simulate_engine_roughness_val):
                                mdl.set_property_value(engine_roughness_enabled_tag, 1.0)
                                mdl.set_property_disp_value(engine_roughness_enabled_tag, 1.0)
                            else:
                                mdl.set_property_value(engine_roughness_enabled_tag, 0.0)
                                mdl.set_property_disp_value(engine_roughness_enabled_tag, 0.0)
                        ENDCODE

                        CODE pre_compile
                            # HEADER START
                            cd = mdl.get_property_value(mdl.prop(item_handle, "cd"))
                            Aeq_max = mdl.get_property_value(mdl.prop(item_handle, "Aeq_max"))
                            R_gas_cst = mdl.get_property_value(mdl.prop(item_handle, "R_gas_cst"))
                            H = mdl.get_property_value(mdl.prop(item_handle, "H"))
                            ncyl = mdl.get_property_value(mdl.prop(item_handle, "ncyl"))
                            Vd = mdl.get_property_value(mdl.prop(item_handle, "Vd"))
                            V = mdl.get_property_value(mdl.prop(item_handle, "V"))
                            Ma = mdl.get_property_value(mdl.prop(item_handle, "Ma"))
                            Mf = mdl.get_property_value(mdl.prop(item_handle, "Mf"))
                            lambda_eq = mdl.get_property_value(mdl.prop(item_handle, "lambda_eq"))
                            atmospheric_pressure = mdl.get_property_value(mdl.prop(item_handle, "atmospheric_pressure"))
                            Po_nom = mdl.get_property_value(mdl.prop(item_handle, "Po_nom"))
                            Dcm = mdl.get_property_value(mdl.prop(item_handle, "Dcm"))
                            kfa = mdl.get_property_value(mdl.prop(item_handle, "kfa"))
                            kfb = mdl.get_property_value(mdl.prop(item_handle, "kfb"))
                            Stroke = mdl.get_property_value(mdl.prop(item_handle, "Stroke"))
                            Bore = mdl.get_property_value(mdl.prop(item_handle, "Bore"))
                            test_plot_friction = mdl.get_property_value(mdl.prop(item_handle, "test_plot_friction"))
                            a_eta_therm = mdl.get_property_value(mdl.prop(item_handle, "a_eta_therm"))
                            b_eta_therm = mdl.get_property_value(mdl.prop(item_handle, "b_eta_therm"))
                            c_eta_therm = mdl.get_property_value(mdl.prop(item_handle, "c_eta_therm"))
                            d_eta_therm = mdl.get_property_value(mdl.prop(item_handle, "d_eta_therm"))
                            e_eta_therm = mdl.get_property_value(mdl.prop(item_handle, "e_eta_therm"))
                            f_eta_therm = mdl.get_property_value(mdl.prop(item_handle, "f_eta_therm"))
                            g_eta_therm = mdl.get_property_value(mdl.prop(item_handle, "g_eta_therm"))
                            test_plot_eta_therm = mdl.get_property_value(mdl.prop(item_handle, "test_plot_eta_therm"))
                            a_eta_vol = mdl.get_property_value(mdl.prop(item_handle, "a_eta_vol"))
                            b_eta_vol = mdl.get_property_value(mdl.prop(item_handle, "b_eta_vol"))
                            c_eta_vol = mdl.get_property_value(mdl.prop(item_handle, "c_eta_vol"))
                            n_rpm_pk = mdl.get_property_value(mdl.prop(item_handle, "n_rpm_pk"))
                            test_plot_eta_vol = mdl.get_property_value(mdl.prop(item_handle, "test_plot_eta_vol"))
                            keq_a1 = mdl.get_property_value(mdl.prop(item_handle, "keq_a1"))
                            keq_a2 = mdl.get_property_value(mdl.prop(item_handle, "keq_a2"))
                            keq_a7 = mdl.get_property_value(mdl.prop(item_handle, "keq_a7"))
                            test_plot_keq = mdl.get_property_value(mdl.prop(item_handle, "test_plot_keq"))
                            generate_parameters = mdl.get_property_value(mdl.prop(item_handle, "generate_parameters"))
                            P_shaft_kW = mdl.get_property_value(mdl.prop(item_handle, "P_shaft_kW"))
                            nominal_rpm = mdl.get_property_value(mdl.prop(item_handle, "nominal_rpm"))
                            fuel = mdl.get_property_value(mdl.prop(item_handle, "fuel"))
                            compute_params = mdl.get_property_value(mdl.prop(item_handle, "compute_params"))
                            test_plot_power_speed = mdl.get_property_value(mdl.prop(item_handle, "test_plot_power_speed"))
                            test_plot_torque_speed = mdl.get_property_value(mdl.prop(item_handle, "test_plot_torque_speed"))
                            NOx_a = mdl.get_property_value(mdl.prop(item_handle, "NOx_a"))
                            NOx_b = mdl.get_property_value(mdl.prop(item_handle, "NOx_b"))
                            NOx_c = mdl.get_property_value(mdl.prop(item_handle, "NOx_c"))
                            test_NOx_emissions = mdl.get_property_value(mdl.prop(item_handle, "test_NOx_emissions"))
                            starter_torque_Nm = mdl.get_property_value(mdl.prop(item_handle, "starter_torque_Nm"))
                            simulate_engine_roughness = mdl.get_property_value(mdl.prop(item_handle, "simulate_engine_roughness"))
                            lambda_sp1 = mdl.get_property_value(mdl.prop(item_handle, "lambda_sp1"))
                            sig1_pu = mdl.get_property_value(mdl.prop(item_handle, "sig1_pu"))
                            lambda_sp2 = mdl.get_property_value(mdl.prop(item_handle, "lambda_sp2"))
                            sig2_pu = mdl.get_property_value(mdl.prop(item_handle, "sig2_pu"))
                            engine_roughness_enabled = mdl.get_property_value(mdl.prop(item_handle, "engine_roughness_enabled"))
                            k_roughness = mdl.get_property_value(mdl.prop(item_handle, "k_roughness"))
                            xo_roughness = mdl.get_property_value(mdl.prop(item_handle, "xo_roughness"))
                            preview_engine_roughness = mdl.get_property_value(mdl.prop(item_handle, "preview_engine_roughness"))
                            crankshaft_angle_internal = mdl.get_property_value(mdl.prop(item_handle, "crankshaft_angle_internal"))
                            lambda_sp_nom = mdl.get_property_value(mdl.prop(item_handle, "lambda_sp_nom"))
                            theta_deg_nom = mdl.get_property_value(mdl.prop(item_handle, "theta_deg_nom"))
                            To_nom = mdl.get_property_value(mdl.prop(item_handle, "To_nom"))
                            Tm_nom = mdl.get_property_value(mdl.prop(item_handle, "Tm_nom"))
                            __hidden__ = mdl.get_property_value(mdl.prop(item_handle, "__hidden__"))
                            # HEADER STOP
                            import numpy as np
                            from handlers.look_up_table import preview_lut
                            
                            #set atmospheric pressure value
                            atmospheric_pressure_tag  = mdl.prop(item_handle, "atmospheric_pressure")
                            #mdl.set_property_value(atmospheric_pressure_tag, 1.0e5)
                            
                            #check for parameters that can result in div by 0 error during runtime
                            NOx_c_tag = mdl.prop(item_handle, "NOx_c")
                            R_gas_cst_tag = mdl.prop(item_handle, "R_gas_cst")
                            ncyl_tag = mdl.prop(item_handle, "ncyl")
                            lambda_eq_tag = mdl.prop(item_handle, "lambda_eq")
                            Ma_tag = mdl.prop(item_handle, "Ma")
                            Mf_tag = mdl.prop(item_handle, "Mf")
                            Aeq_max_tag = mdl.prop(item_handle, "Aeq_max")
                            V_tag = mdl.prop(item_handle, "V")
                            Vd_tag = mdl.prop(item_handle, "Vd")
                            lambda_sp_nom_tag = mdl.prop(item_handle, "lambda_sp_nom")
                            theta_deg_nom_tag = mdl.prop(item_handle, "theta_deg_nom")
                            To_nom_tag = mdl.prop(item_handle, "To_nom")
                            Tm_nom_tag = mdl.prop(item_handle, "Tm_nom")
                            Po_nom_tag = mdl.prop(item_handle, "Po_nom")
                            
                            NOx_c_val = float(mdl.get_property_value(NOx_c_tag))
                            R_gas_cst_val = float(mdl.get_property_value(R_gas_cst_tag))
                            ncyl_val = float(mdl.get_property_value(ncyl_tag))
                            lambda_eq_val = float(mdl.get_property_value(lambda_eq_tag))
                            Ma_val = float(mdl.get_property_value(Ma_tag))
                            Mf_val = float(mdl.get_property_value(Mf_tag))
                            Aeq_max_val = float(mdl.get_property_value(Aeq_max_tag))
                            V_val = float(mdl.get_property_value(V_tag))
                            Vd_val = float(mdl.get_property_value(Vd_tag))
                            atmospheric_pressure_val = float(mdl.get_property_value(atmospheric_pressure_tag))
                            lambda_sp_nom_val = float(mdl.get_property_value(lambda_sp_nom_tag))
                            theta_deg_nom_val = float(mdl.get_property_value(theta_deg_nom_tag))
                            To_nom_val = float(mdl.get_property_value(To_nom_tag))
                            Tm_nom_val = float(mdl.get_property_value(Tm_nom_tag))
                            Po_nom_val = float(mdl.get_property_value(Po_nom_tag))
                            
                            #compile-time warnings
                            if (Po_nom_val < atmospheric_pressure_val):
                                mdl.info('Warning: Ambient (atmospheric) pressure should be less than nominal throttle intake pressure')
                            
                            #compile-time errors
                            if (NOx_c_val <= 0.0):
                                mdl.error('NOx_c parameter must be > 0', context=NOx_c_tag)
                            if (R_gas_cst_val <= 0.0):
                                mdl.error('R_gas_cst parameter must be > 0', context=R_gas_cst_tag)
                            if (ncyl_val <= 0.0):
                                mdl.error('ncyl parameter must be > 0', context=ncyl_tag)
                            if (lambda_eq_val <= 0.0):
                                mdl.error('lambda_eq parameter must be > 0', context=lambda_eq_tag)
                            if (Ma_val <= 0.0):
                                mdl.error('Ma parameter must be > 0', context=Ma_tag)
                            if (Mf_val <= 0.0):
                                mdl.error('Mf parameter must be > 0', context=Mf_tag)
                            if (Aeq_max_val <= 0.0):
                                mdl.error('Aeq_max parameter must be > 0', context=Aeq_max_tag)
                            if (V_val <= 0.0):
                                mdl.error('V parameter must be > 0', context=V_tag)
                            if (Vd_val <= 0.0):
                                mdl.error('Vd parameter must be > 0', context=Vd_tag)
                            if (atmospheric_pressure_val <= 0.0):
                                mdl.error('ambient pressure parameter must be > 0', context=atmospheric_pressure_tag)
                            if (To_nom_val <= 0.0):
                                mdl.error('Nominal throttle inlet temperature must be > 0', context=To_nom_tag)
                            if (Tm_nom_val <= 0.0):
                                mdl.error('Nominal intake manifold temperature must be > 0', context=Tm_nom_tag)
                            if (theta_deg_nom_val < -90.0 or theta_deg_nom_val > 0.0):
                                mdl.error('Nominal spark advance angle must be between -90° and 0°', context=theta_deg_nom_val)
                            if (lambda_sp_nom_val < 0.0):
                                mdl.error('Nominal specific air-fuel raito must be > 0', context=lambda_sp_nom_tag)
                            
                            #collect tag for enabling engine roughness
                            simulate_eng_roughness_tag  = mdl.prop(item_handle, "simulate_engine_roughness")
                            #simulate_eng_roughness_val = mdl.get_property_value(simulate_eng_roughness_tag)
                            simulate_eng_roughness_val = mdl.get_property_disp_value(simulate_eng_roughness_tag)
                            
                            engine_roughness_enabled_tag  = mdl.prop(item_handle, "engine_roughness_enabled")
                            
                            #collect tags for engine roughness iff engine roughness simulation is enabled
                            if (simulate_eng_roughness_val):
                                mdl.set_property_value(engine_roughness_enabled_tag, 1.0)
                                
                                lambda_sp1_tag = mdl.prop(item_handle, "lambda_sp1")
                                sig1_pu_tag = mdl.prop(item_handle, "sig1_pu")
                                lambda_sp2_tag = mdl.prop(item_handle, "lambda_sp2")
                                sig2_pu_tag = mdl.prop(item_handle, "sig2_pu")
                                k_roughness_tag = mdl.prop(item_handle, "k_roughness")
                                xo_roughness_tag = mdl.prop(item_handle, "xo_roughness")
                            
                                #collect values
                                lambda_sp1_val = float(mdl.get_property_value(lambda_sp1_tag))
                                lambda_sp2_val = float(mdl.get_property_value(lambda_sp2_tag))
                                sig1_pu_val = float(mdl.get_property_value(sig1_pu_tag))
                                sig2_pu_val = float(mdl.get_property_value(sig2_pu_tag))
                            
                                #check for errors
                                input_error = 0
                                if ((sig1_pu_val > 1.0) or (sig2_pu_val > 1.0)):
                                    mdl.error('Error in gas engine model: Standard deviation [in per unit] for engine roughness must be less than 1', context=simulate_eng_roughness_tag)
                                    input_error = 1
                                if ((sig1_pu_val == sig2_pu_val) or (lambda_sp1_val == lambda_sp2_val)):
                                    mdl.error('Error in gas engine model: Coordinates for engine roughness must have different inputs', context=simulate_eng_roughness_tag)
                                    input_error = 1
                                if (((sig1_pu_val > sig2_pu_val) and (lambda_sp1_val < lambda_sp2_val))\
                                or ((sig1_pu_val < sig2_pu_val) and (lambda_sp1_val > lambda_sp2_val))):
                                    mdl.error('Error in gas engine model: Datapoints for engine roughness must be monotonous', context=simulate_eng_roughness_tag)
                                    input_error = 1
                            
                                if not(input_error):
                                    #swap / arrange points such that point2 has higher magnitude than point1
                                    if (sig1_pu_val > sig2_pu_val):
                                        temp = sig2_pu_val
                                        sig2_pu_val = sig1_pu_val
                                        sig1_pu_val = temp
                                        
                                        temp = lambda_sp1_val
                                        lambda_sp1_val = lambda_sp2_val
                                        lambda_sp2_val = temp
                            
                                    k = (np.log(1.0/sig1_pu_val - 1.0) - np.log(1.0/sig2_pu_val - 1.0))/(lambda_sp2_val - lambda_sp1_val)
                                    xo = np.log(1.0/sig1_pu_val - 1.0)/k + lambda_sp1_val
                                    mdl.set_property_value(k_roughness_tag, k)
                                    mdl.set_property_value(xo_roughness_tag, xo)
                            
                            else:
                                mdl.set_property_value(engine_roughness_enabled_tag, 0.0)
                                
                            
                            '''
                            engine_roughness_enabled_tag = mdl.prop(item_handle, "engine_roughness_enabled")
                            mdl.info('eng. roughness enabled'+str(float(mdl.get_property_value(engine_roughness_enabled_tag))))
                            Aeq_max_tag = mdl.prop(item_handle, "Aeq_max")
                            mdl.info('Aeq max='+str(float(mdl.get_property_value(Aeq_max_tag))))
                            '''
                        ENDCODE
                    }
                }
                [
                    position = 7728, 8168
                    size = 120, 264
                ]

                component "core/Rate Transition" "Rate Transition3" {
                    execution_rate = "Tfast"
                }
                [
                    position = 7896, 8056
                    hide_name = True
                    size = 32, 32
                ]

                component "core/Current Measurement" Ic_gen {
                    execution_rate = "Tfast"
                    sig_output = "True"
                }
                [
                    position = 8304, 8456
                    size = 64, 32
                ]

                component "core/Voltage Measurement" v_ab {
                    execution_rate = "Tfast"
                    sig_output = "True"
                }
                [
                    position = 8560, 8312
                    rotation = right
                    size = 64, 32
                ]

                component "core/Constant Impedance Load" snubber {
                    SAB = "500/3"
                    SAn = "500/3"
                    SBC = "500/3"
                    SBn = "500/3"
                    SCA = "500/3"
                    SCn = "500/3"
                    Sn_3ph = "500"
                    VAB = "208"
                    VAn = "208/(3**0.5)"
                    VBC = "208"
                    VBn = "208/(3**0.5)"
                    VCA = "208"
                    VCn = "208/(3**0.5)"
                    Vn_3ph = "208"
                    enable_neutral = "True"
                }
                [
                    position = 9112, 8568
                    size = 96, 48
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "4"
                }
                [
                    position = 7600, 8168
                    hide_name = True
                ]

                component gen_bus_join "Bus Join2" {
                    inputs = "3"
                }
                [
                    position = 7728, 8528
                    hide_name = True
                ]

                component "core/Voltage Measurement" v_bc {
                    execution_rate = "Tfast"
                    sig_output = "True"
                }
                [
                    position = 8560, 8408
                    rotation = right
                    size = 64, 32
                ]

                component "core/Voltage Measurement" v_ab_mains {
                    execution_rate = "Tfast"
                    sig_output = "True"
                }
                [
                    position = 9448, 8312
                    rotation = right
                    size = 64, 32
                ]

                component "core/Voltage Measurement" v_bc_mains {
                    execution_rate = "Tfast"
                    sig_output = "True"
                }
                [
                    position = 9448, 8408
                    rotation = right
                    size = 64, 32
                ]

                component "core/Voltage Measurement" v_ca_mains {
                    execution_rate = "Tfast"
                    sig_output = "True"
                }
                [
                    position = 9664, 8408
                    rotation = right
                    scale = 1, -1
                    size = 64, 32
                ]

                component "core/Triple Pole Single Throw Contactor" GCB {
                    ctrl_src = "Model"
                    enable_fb_out = "True"
                }
                [
                    position = 9328, 8360
                    size = 64, 256
                ]

                component gen_bus_join "Bus Join3" {
                    inputs = "3"
                }
                [
                    position = 7728, 8608
                    hide_name = True
                ]

                component gen_PQ_transform "Power Meter1" {
                }
                [
                    position = 7720, 8808
                    hide_name = True
                ]

                component "core/Voltage Measurement" v_an {
                    execution_rate = "Tfast"
                    sig_output = "True"
                }
                [
                    position = 8960, 8496
                    rotation = right
                    scale = -1, 1
                    size = 64, 32
                ]

                component "core/Voltage Measurement" v_bn {
                    execution_rate = "Tfast"
                    sig_output = "True"
                }
                [
                    position = 9000, 8528
                    rotation = right
                    scale = -1, 1
                    size = 64, 32
                ]

                component "core/Voltage Measurement" v_cn {
                    execution_rate = "Tfast"
                    sig_output = "True"
                }
                [
                    position = 9032, 8560
                    rotation = right
                    scale = -1, 1
                    size = 64, 32
                ]

                component gen_bus_join "Bus Join4" {
                }
                [
                    position = 7968, 8776
                    hide_name = True
                ]

                component gen_terminator Termination1 {
                }
                [
                    position = 7888, 8824
                    hide_name = True
                ]

                component gen_terminator Termination2 {
                }
                [
                    position = 7888, 8856
                    hide_name = True
                ]

                component gen_terminator Termination3 {
                }
                [
                    position = 7888, 8888
                    hide_name = True
                ]

                component gen_terminator Termination5 {
                }
                [
                    position = 7840, 8168
                    hide_name = True
                ]

                component gen_terminator Termination6 {
                }
                [
                    position = 7840, 8280
                    hide_name = True
                ]

                component gen_probe P_gen_kW {
                }
                [
                    position = 7904, 8664
                ]

                component gen_probe Q_gen_kVAr {
                }
                [
                    position = 7904, 8720
                ]

                component gen_gain Gain3 {
                    gain = "1e-3"
                }
                [
                    position = 7840, 8664
                    hide_name = True
                ]

                component gen_gain Gain4 {
                    gain = "1e-3"
                }
                [
                    position = 7840, 8720
                    hide_name = True
                ]

                component "core/Current RMS" Ia_gen_rms {
                }
                [
                    position = 8464, 8264
                    size = 64, 32
                ]

                component gen_probe cos_phi_gen {
                }
                [
                    position = 7888, 8928
                ]

                component "core/Current RMS" Ib_gen_rms {
                }
                [
                    position = 8464, 8360
                    size = 64, 32
                ]

                component "core/Current RMS" Ic_gen_rms {
                }
                [
                    position = 8464, 8456
                    size = 64, 32
                ]

                component "core/Voltage RMS" vab_rms {
                }
                [
                    position = 8832, 8312
                    rotation = right
                    size = 64, 32
                ]

                component "core/Voltage RMS" vbc_rms {
                }
                [
                    position = 8936, 8408
                    rotation = right
                    size = 64, 32
                ]

                component "core/Voltage RMS" vca_rms {
                }
                [
                    position = 9048, 8408
                    rotation = left
                    size = 64, 32
                ]

                component "core/Synchronous Machine with Wound Rotor" Alternator {
                    Jm = "1.0"
                    Llfd = "0.0022369"
                    Llkd = "0.00035675"
                    Llkq = "0.0023782"
                    Lls = "0.0022592"
                    Lmd = "0.059105"
                    Lmq = "0.028881"
                    Rf = "0.049832"
                    Rkd = "0.16713"
                    Rkq = "0.025845"
                    Rs = "0.3706"
                    enb_sig_out = "True"
                    execution_rate = "Tfast"
                    load_src = "Model"
                }
                [
                    position = 8128, 8360
                    scale = -1, 1
                    size = 176, 160
                ]

                component gen_probe n_rpm_pu {
                }
                [
                    position = 7552, 8368
                ]

                component gen_gain Gain5 {
                    gain = "1.0/1800.0"
                }
                [
                    position = 7472, 8368
                    hide_name = True
                ]

                port B {
                    position = top:2
                    kind = pe
                }
                [
                    position = 9936, 8360
                    rotation = down
                ]

                port C {
                    position = top:3
                    kind = pe
                }
                [
                    position = 9936, 8456
                    rotation = down
                ]

                port A {
                    position = top:1
                    kind = pe
                }
                [
                    position = 9936, 8264
                    rotation = down
                ]

                tag Goto6 {
                    value = "v_ab_gen"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8648, 8312
                    hide_name = True
                    size = 72, 20
                ]

                tag From2 {
                    value = "w_radps"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7288, 8496
                    hide_name = True
                ]

                tag From22 {
                    value = "v_ab_gen"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7608, 8504
                    hide_name = True
                ]

                tag Goto20 {
                    value = "Ic_gen"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8360, 8416
                    hide_name = True
                    size = 72, 20
                ]

                tag Goto8 {
                    value = "v_bc_gen"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8648, 8408
                    hide_name = True
                    size = 72, 20
                ]

                tag Goto12 {
                    value = "wt_gen"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8032, 8200
                    rotation = left
                    hide_name = True
                ]

                tag From19 {
                    value = "V_field"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7864, 8360
                    hide_name = True
                ]

                tag Goto3 {
                    value = "n_rpm"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7464, 8496
                    hide_name = True
                ]

                tag Goto9 {
                    value = "ignition"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7160, 8080
                    hide_name = True
                ]

                tag From18 {
                    value = "wt_gen"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7392, 8616
                    hide_name = True
                ]

                tag From4 {
                    value = "n_rpm"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7416, 8160
                    hide_name = True
                    size = 58, 20
                ]

                tag From16 {
                    value = "ignition"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7416, 8232
                    hide_name = True
                ]

                tag Goto11 {
                    value = "T_elec"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8056, 8200
                    rotation = left
                    hide_name = True
                ]

                tag Goto18 {
                    value = "Ia_gen"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8368, 8208
                    hide_name = True
                    size = 72, 20
                ]

                tag Goto10 {
                    value = "v_ca_gen"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8848, 8432
                    hide_name = True
                    size = 72, 20
                ]

                tag Goto4 {
                    value = "starter"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7160, 8056
                    hide_name = True
                ]

                tag Goto13 {
                    value = "V_field"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7160, 8128
                    hide_name = True
                ]

                tag Goto5 {
                    value = "Aeq_pu"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7160, 8104
                    hide_name = True
                ]

                tag From24 {
                    value = "v_ca_gen"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7608, 8552
                    hide_name = True
                ]

                tag From5 {
                    value = "n_rpm"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6824, 8040
                    hide_name = True
                    size = 80, 20
                ]

                tag From21 {
                    value = "vabc_mains_LL"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6824, 8104
                    hide_name = True
                    size = 80, 20
                ]

                tag Goto19 {
                    value = "Ib_gen"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8304, 8312
                    rotation = down
                    hide_name = True
                    size = 72, 20
                ]

                tag From6 {
                    value = "starter"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7416, 8200
                    hide_name = True
                ]

                tag From23 {
                    value = "v_bc_gen"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7608, 8528
                    hide_name = True
                ]

                tag Goto17 {
                    value = "vabc_gen_LL"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7848, 8528
                    hide_name = True
                    size = 72, 20
                ]

                tag From17 {
                    value = "T_elec"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7392, 8552
                    hide_name = True
                ]

                tag Goto1 {
                    value = "T_shaft"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8000, 8056
                    hide_name = True
                ]

                tag From7 {
                    value = "Aeq_pu"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7416, 8128
                    hide_name = True
                    size = 58, 20
                ]

                tag From1 {
                    value = "T_shaft"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8104, 8200
                    rotation = right
                    hide_name = True
                ]

                tag From20 {
                    value = "vabc_gen_LL"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6824, 8072
                    hide_name = True
                    size = 80, 20
                ]

                tag Goto2 {
                    value = "w_radps"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8080, 8200
                    rotation = left
                    hide_name = True
                ]

                tag Goto16 {
                    value = "v_ca_mains"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 9744, 8408
                    hide_name = True
                    size = 72, 20
                ]

                tag Goto14 {
                    value = "v_ab_mains"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 9536, 8312
                    hide_name = True
                    size = 72, 20
                ]

                tag Goto15 {
                    value = "v_bc_mains"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 9536, 8408
                    hide_name = True
                    size = 72, 20
                ]

                tag From25 {
                    value = "v_bc_mains"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7608, 8608
                    hide_name = True
                ]

                tag From26 {
                    value = "v_ca_mains"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7608, 8632
                    hide_name = True
                ]

                tag Goto21 {
                    value = "vabc_mains_LL"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7840, 8608
                    hide_name = True
                    size = 72, 20
                ]

                tag From27 {
                    value = "v_ab_mains"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7608, 8584
                    hide_name = True
                ]

                tag Goto22 {
                    value = "v_an_gen"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8856, 8496
                    rotation = down
                    hide_name = True
                    size = 72, 20
                ]

                tag Goto23 {
                    value = "v_bn_gen"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8856, 8528
                    rotation = down
                    hide_name = True
                    size = 72, 20
                ]

                tag Goto24 {
                    value = "v_cn_gen"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8856, 8560
                    rotation = down
                    hide_name = True
                    size = 72, 20
                ]

                tag From28 {
                    value = "v_an_gen"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7576, 8768
                    hide_name = True
                ]

                tag From29 {
                    value = "v_bn_gen"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7576, 8792
                    hide_name = True
                    size = 60, 20
                ]

                tag From30 {
                    value = "v_cn_gen"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7576, 8816
                    hide_name = True
                    size = 60, 20
                ]

                tag From31 {
                    value = "Ia_gen"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7576, 8840
                    hide_name = True
                    size = 60, 20
                ]

                tag From32 {
                    value = "Ib_gen"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7576, 8864
                    hide_name = True
                    size = 60, 20
                ]

                tag From33 {
                    value = "Ic_gen"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7576, 8888
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto25 {
                    value = "PQ_gen"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8064, 8776
                    hide_name = True
                    size = 72, 20
                ]

                tag From34 {
                    value = "PQ_gen"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6824, 8136
                    hide_name = True
                    size = 80, 20
                ]

                tag Goto26 {
                    value = "GCB_fb"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 9424, 8192
                    hide_name = True
                    size = 72, 20
                ]

                tag From35 {
                    value = "en_GCB"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 9256, 8176
                    hide_name = True
                ]

                tag From36 {
                    value = "GCB_fb"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6816, 8160
                    hide_name = True
                    size = 81, 20
                ]

                tag Goto27 {
                    value = "en_GCB"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7160, 8152
                    hide_name = True
                ]

                tag Goto28 {
                    value = "P_gen_kW"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7968, 8632
                    hide_name = True
                    size = 72, 20
                ]

                junction Junction36 sp
                [
                    position = 7936, 8056
                ]

                junction Junction33 pe
                [
                    position = 8760, 8264
                ]

                junction Junction20 pe
                [
                    position = 8560, 8456
                ]

                junction Junction21 pe
                [
                    position = 8560, 8360
                ]

                junction Junction22 pe
                [
                    position = 8560, 8264
                ]

                junction Junction35 pe
                [
                    position = 8760, 8456
                ]

                junction Junction34 pe
                [
                    position = 8560, 8360
                ]

                junction Junction5 sp
                [
                    position = 7416, 8496
                ]

                junction Junction37 pe
                [
                    position = 9448, 8264
                ]

                junction Junction40 pe
                [
                    position = 9448, 8456
                ]

                junction Junction39 pe
                [
                    position = 9448, 8360
                ]

                junction Junction41 pe
                [
                    position = 9088, 8264
                ]

                junction Junction42 pe
                [
                    position = 9112, 8360
                ]

                junction Junction43 pe
                [
                    position = 9136, 8456
                ]

                junction Junction47 pe
                [
                    position = 8960, 8264
                ]

                junction Junction48 pe
                [
                    position = 9000, 8360
                ]

                junction Junction49 pe
                [
                    position = 9032, 8456
                ]

                junction Junction52 sp
                [
                    position = 7768, 8752
                ]

                junction Junction53 sp
                [
                    position = 7792, 8784
                ]

                junction Junction54 pe
                [
                    position = 9032, 8624
                ]

                junction Junction55 pe
                [
                    position = 9000, 8624
                ]

                junction Junction56 pe
                [
                    position = 8832, 8264
                ]

                junction Junction57 pe
                [
                    position = 8832, 8360
                ]

                junction Junction58 pe
                [
                    position = 8936, 8456
                ]

                junction Junction59 pe
                [
                    position = 8936, 8360
                ]

                junction Junction60 pe
                [
                    position = 9048, 8456
                ]

                junction Junction61 pe
                [
                    position = 9048, 8264
                ]

                junction Junction62 sp
                [
                    position = 7872, 8664
                ]

                junction Junction63 pe
                [
                    position = 9664, 8264
                ]

                junction Junction64 pe
                [
                    position = 9440, 8360
                ]

                junction Junction65 pe
                [
                    position = 9664, 8456
                ]

                junction Junction66 sp
                [
                    position = 7416, 8432
                ]

                connect "Bus Join1.in" From7 as Connection221
                connect From20 controls.vabc_gen_LL as Connection925
                connect v_bc.n_node Junction20 as Connection266
                connect From2 Gain1.in as Connection16
                connect v_ca.n_node Junction33 as Connection900
                connect v_bc.p_node Junction21 as Connection267
                connect "Rate Transition3.in" Gain2.out as Connection914
                connect v_ab.n_node Junction21 as Connection269
                connect Gain1.out Junction5 as Connection51
                connect trq_final.in Junction36 as Connection915
                connect Junction36 Goto1 as Connection916
                [
                    breakpoints = 7936, 8056
                ]
                connect From22 "Bus Join2.in" as Connection948
                connect v_ab.p_node Junction22 as Connection272
                connect Junction5 Goto3 as Connection52
                connect From18 wt_gen.in as Connection922
                connect v_ab.out Goto6 as Connection273
                connect v_ca.p_node Junction35 as Connection906
                connect v_bc.out Goto8 as Connection274
                connect "Gas Engine.T_shaft" Gain2.in as Connection889
                connect v_ca.out Goto10 as Connection281
                connect "Bus Join1.out" "Gas Engine.inputs" as Connection890
                connect controls.V_field Goto13 as Connection923
                connect From17 T_elec.in as Connection921
                connect "Rate Transition3.out" Junction36 as Connection917
                connect Ia_gen.out Goto18 as Connection970
                connect Junction35 Junction20 as Connection907
                connect Goto4 controls.starter as Connection911
                connect "Bus Join2.out" Goto17 as Connection951
                connect "Rate Transition1.in" From4 as Connection130
                connect "Rate Transition1.out" "Bus Join1.in1" as Connection894
                connect From16 "Bus Join1.in3" as Connection896
                [
                    breakpoints = 7544, 8192
                ]
                connect From6 "Bus Join1.in2" as Connection895
                [
                    breakpoints = 7464, 8200; 7528, 8200; 7528, 8176
                ]
                connect From21 controls.vabc_mains_LL as Connection926
                connect Junction34 Junction21 as Connection904
                connect From23 "Bus Join2.in1" as Connection949
                connect From19 Subsystem1.In3 as Connection924
                connect From24 "Bus Join2.in2" as Connection950
                connect Goto9 controls.ignition as Connection909
                connect Ib_gen.out Goto19 as Connection971
                connect Ic_gen.out Goto20 as Connection972
                connect Goto5 controls.Aeq_pu as Connection910
                connect Junction33 Junction22 as Connection901
                connect From5 controls.n_rpm as Connection912
                connect v_ab_mains.out Goto14 as Connection945
                connect v_bc_mains.out Goto15 as Connection946
                connect v_ab_mains.n_node Junction39 as Connection933
                connect v_ca_mains.out Goto16 as Connection947
                connect v_bc_mains.n_node Junction40 as Connection938
                connect GCB.a_out Junction37 as Connection927
                connect GCB.c_out Junction40 as Connection936
                connect v_ab_mains.p_node Junction37 as Connection929
                connect v_bc_mains.p_node Junction39 as Connection935
                connect Junction41 snubber.A as Connection983
                connect Junction42 snubber.B as Connection986
                connect Junction43 snubber.C as Connection989
                connect "Bus Join3.out" Goto21 as Connection1000
                connect From27 "Bus Join3.in" as Connection1001
                connect From25 "Bus Join3.in1" as Connection1002
                connect From26 "Bus Join3.in2" as Connection1003
                connect v_an.p_node Junction47 as Connection1006
                connect Junction48 Junction42 as Connection1008
                connect v_bn.p_node Junction48 as Connection1009
                connect v_cn.p_node Junction49 as Connection1012
                connect Goto22 v_an.out as Connection1020
                connect Goto23 v_bn.out as Connection1021
                connect Goto24 v_cn.out as Connection1022
                connect From28 "Power Meter1.va" as Connection1023
                connect From29 "Power Meter1.vb" as Connection1024
                [
                    breakpoints = 7624, 8784; 7656, 8784
                ]
                connect From30 "Power Meter1.vc" as Connection1025
                [
                    breakpoints = 7624, 8816; 7624, 8800
                ]
                connect From31 "Power Meter1.ia" as Connection1026
                [
                    breakpoints = 7632, 8840; 7632, 8816
                ]
                connect From32 "Power Meter1.ib" as Connection1027
                [
                    breakpoints = 7640, 8840
                ]
                connect From33 "Power Meter1.ic" as Connection1028
                [
                    breakpoints = 7656, 8848
                ]
                connect "Bus Join4.out" Goto25 as Connection1031
                connect "Power Meter1.Pac" Termination1.in as Connection1032
                [
                    breakpoints = 7784, 8800; 7784, 8800; 7856, 8800
                ]
                connect "Power Meter1.Qac" Termination2.in as Connection1033
                [
                    breakpoints = 7840, 8816; 7840, 8856
                ]
                connect "Power Meter1.apparent" Termination3.in as Connection1034
                [
                    breakpoints = 7824, 8832
                ]
                connect "Gas Engine.fuel_used_kg" Termination5.in as Connection1036
                connect "Gas Engine.emissions" Termination6.in as Connection1037
                connect From34 controls.PQ_gen as Connection1038
                connect "Power Meter1.Pdc" Junction52 as Connection1039
                connect Junction52 "Bus Join4.in" as Connection1040
                [
                    breakpoints = 7768, 8760; 7928, 8760
                ]
                connect "Power Meter1.Qdc" Junction53 as Connection1042
                connect Junction53 "Bus Join4.in1" as Connection1043
                connect Gain3.in Junction52 as Connection1046
                connect Q_gen_kVAr.in Gain4.out as Connection1047
                connect Gain4.in Junction53 as Connection1048
                connect v_cn.n_node Junction54 as Connection1052
                connect v_an.n_node Junction55 as Connection1053
                [
                    breakpoints = 8960, 8624
                ]
                connect Junction55 Junction54 as Connection1054
                connect v_bn.n_node Junction55 as Connection1055
                connect GCB.feedback_out Goto26 as Connection1056
                connect From35 GCB.ctrl_in as Connection1057
                connect From36 controls.GCB_fb as Connection1058
                connect controls.en_GCB Goto27 as Connection1059
                connect Ia_gen.n_node Ia_gen_rms.p_node as Connection1060
                connect Ia_gen_rms.n_node Junction22 as Connection1061
                connect "Power Meter1.k_factor" cos_phi_gen.in as Connection1062
                [
                    breakpoints = 7800, 8848
                ]
                connect Ib_gen.n_node Ib_gen_rms.p_node as Connection1063
                connect Ib_gen_rms.n_node Junction34 as Connection1064
                connect Ic_gen.n_node Ic_gen_rms.p_node as Connection1065
                connect Ic_gen_rms.n_node Junction20 as Connection1066
                connect Junction33 Junction56 as Connection1067
                [
                    breakpoints = 8760, 8264
                ]
                connect Junction56 Junction47 as Connection1068
                connect vab_rms.p_node Junction56 as Connection1069
                connect Junction34 Junction57 as Connection1070
                connect vab_rms.n_node Junction57 as Connection1072
                connect Junction35 Junction58 as Connection1073
                [
                    breakpoints = 8760, 8456
                ]
                connect Junction58 Junction49 as Connection1074
                connect vbc_rms.n_node Junction58 as Connection1075
                connect Junction57 Junction59 as Connection1076
                connect Junction59 Junction48 as Connection1077
                connect vbc_rms.p_node Junction59 as Connection1078
                connect Junction49 Junction60 as Connection1079
                connect Junction60 Junction43 as Connection1080
                connect vca_rms.p_node Junction60 as Connection1081
                connect Junction47 Junction61 as Connection1082
                connect Junction61 Junction41 as Connection1083
                connect vca_rms.n_node Junction61 as Connection1084
                connect Junction54 snubber.N as Connection1170
                [
                    breakpoints = 9032, 8624; 9112, 8624; 9112, 8624
                ]
                connect GCB.a_in Junction41 as Connection1215
                [
                    breakpoints = 9232, 8264; 9168, 8264; 9088, 8264
                ]
                connect Junction43 GCB.c_in as Connection1217
                [
                    breakpoints = 9136, 8456; 9168, 8456; 9232, 8456
                ]
                connect GCB.b_in Junction42 as Connection1218
                [
                    breakpoints = 9168, 8360
                ]
                connect P_gen_kW.in Junction62 as Connection1221
                connect Junction62 Gain3.out as Connection1222
                connect Goto28 Junction62 as Connection1223
                connect Subsystem1.P1 Alternator.r_1 as Connection1224
                connect Subsystem1.P2 Alternator.r_2 as Connection1225
                connect Alternator.angle_out Goto12 as Connection1226
                connect Alternator.torque_out Goto11 as Connection1227
                connect Alternator.speed_out Goto2 as Connection1228
                connect Alternator.load_in From1 as Connection1229
                connect Alternator.a_in Ia_gen.p_node as Connection1230
                connect Alternator.b_in Ib_gen.p_node as Connection1231
                connect Alternator.c_in Ic_gen.p_node as Connection1232
                connect v_ca_mains.n_node Junction63 as Connection1236
                connect Junction63 Junction37 as Connection1237
                [
                    breakpoints = 9664, 8264; 9672, 8264
                ]
                connect A Junction63 as Connection1238
                connect Junction39 Junction64 as Connection1239
                connect Junction64 GCB.b_out as Connection1240
                [
                    breakpoints = 9448, 8360; 9448, 8360; 9448, 8360
                ]
                connect B Junction64 as Connection1241
                connect v_ca_mains.p_node Junction65 as Connection1242
                connect Junction65 Junction40 as Connection1243
                [
                    breakpoints = 9664, 8456; 9672, 8456
                ]
                connect C Junction65 as Connection1244
                connect Gain5.out n_rpm_pu.in as Connection1245
                connect n_rpm.in Junction66 as Connection1246
                connect Junction66 Junction5 as Connection1247
                connect Gain5.in Junction66 as Connection1248

                mask {
                    description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Natural Gas Genset Model. Look Under Mask (Ctrl+Enter)</p></body></html>"

                    Tfast {
                        label = "Tfast"
                        widget = edit
                        type = generic
                        default_value = "400e-6"
                    }

                    T_engine {
                        label = "T_engine"
                        widget = edit
                        type = generic
                        default_value = "400e-6"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE

                    CODE define_icon
                        image(r"C:\00 Typhoon SVN\t_misc\00 Project management\90 Demos\0900 EATON-Typhoon Demo 5_26_2020\img\Genset_image_for_scada.png")
                    ENDCODE
                }
            }
            [
                position = 8624, 8560
                size = 224, 296
            ]

            component Subsystem Grid_meter_split {
                layout = dynamic
                component gen_probe POWER_Q {
                }
                [
                    position = 8008, 8208
                    scale = -1, 1
                ]

                component "core/Meter Split" "Meter Split1" {
                    freq = "True"
                    i_rms = "True"
                    power_p = "True"
                    power_pf = "True"
                    power_q = "True"
                    van = "False"
                    vbn = "False"
                    vcn = "False"
                    vll_rms = "True"
                }
                [
                    position = 8208, 8144
                    scale = -1, 1
                    size = 88, 232
                ]

                component gen_z_domain_transfer lpf2 {
                    a_coeff = "[1.0/(2.0*np.pi*5.0), 1.0]"
                    b_coeff = "[1.0]"
                    domain = "S-domain"
                }
                [
                    position = 8088, 8208
                    scale = -1, 1
                ]

                component gen_z_domain_transfer lpf {
                    a_coeff = "[1.0/(2.0*np.pi*5.0), 1.0]"
                    b_coeff = "[1.0]"
                    domain = "S-domain"
                }
                [
                    position = 8088, 8064
                    scale = -1, 1
                ]

                component gen_probe VLL_RMS {
                }
                [
                    position = 8008, 8064
                    scale = -1, 1
                ]

                component gen_z_domain_transfer lpf1 {
                    a_coeff = "[1.0/(2.0*np.pi*5.0), 1.0]"
                    b_coeff = "[1.0]"
                    domain = "S-domain"
                }
                [
                    position = 8088, 8160
                    scale = -1, 1
                ]

                component gen_probe POWER_P {
                }
                [
                    position = 8008, 8160
                    scale = -1, 1
                ]

                component gen_z_domain_transfer lpf3 {
                    a_coeff = "[1.0/(2.0*np.pi*5.0), 1.0]"
                    b_coeff = "[1.0]"
                    domain = "S-domain"
                }
                [
                    position = 8088, 8016
                    scale = -1, 1
                ]

                component gen_probe f_Hz {
                }
                [
                    position = 8008, 8016
                    scale = -1, 1
                ]

                component gen_z_domain_transfer lpf4 {
                    a_coeff = "[1.0/(2.0*np.pi*5.0), 1.0]"
                    b_coeff = "[1.0]"
                    domain = "S-domain"
                }
                [
                    position = 8088, 8112
                    scale = -1, 1
                ]

                component gen_probe I_RMS {
                }
                [
                    position = 8008, 8112
                    scale = -1, 1
                ]

                component gen_probe pf {
                }
                [
                    position = 8008, 8264
                    scale = -1, 1
                ]

                component gen_z_domain_transfer lpf5 {
                    a_coeff = "[1.0/(2.0*np.pi*5.0), 1.0]"
                    b_coeff = "[1.0]"
                    domain = "S-domain"
                }
                [
                    position = 8096, 8264
                    scale = -1, 1
                ]

                component gen_probe f_Hz_pu {
                }
                [
                    position = 7920, 7952
                    scale = -1, 1
                ]

                component gen_gain Gain1 {
                    gain = "1/60.0"
                }
                [
                    position = 7992, 7952
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_gain Gain2 {
                    gain = "1e-3"
                }
                [
                    position = 7912, 8176
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_probe P_kW {
                }
                [
                    position = 7816, 8176
                    scale = -1, 1
                ]

                component gen_gain Gain3 {
                    gain = "1e-3"
                }
                [
                    position = 7928, 8240
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_probe Q_kVAr {
                }
                [
                    position = 7832, 8240
                    scale = -1, 1
                ]

                port In {
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8384, 8144
                    rotation = down
                ]

                junction Junction1 sp
                [
                    position = 8048, 8016
                ]

                junction Junction2 sp
                [
                    position = 8048, 8160
                ]

                junction Junction3 sp
                [
                    position = 8048, 8208
                ]

                connect lpf2.in "Meter Split1.POWER_Q" as Connection3927
                connect lpf.in "Meter Split1.VLL_RMS" as Connection3923
                connect VLL_RMS.in lpf.out as Connection3922
                connect "Meter Split1.Input" In as Connection3921
                connect lpf1.in "Meter Split1.POWER_P" as Connection3925
                connect lpf3.in "Meter Split1.Freq" as Connection3929
                connect I_RMS.in lpf4.out as Connection3930
                connect lpf4.in "Meter Split1.I_RMS" as Connection3931
                connect pf.in lpf5.out as Connection3932
                connect "Meter Split1.POWER_PF" lpf5.in as Connection3933
                connect f_Hz_pu.in Gain1.out as Connection3934
                connect f_Hz.in Junction1 as Connection3935
                connect Junction1 lpf3.out as Connection3936
                connect Gain1.in Junction1 as Connection3937
                connect POWER_P.in Junction2 as Connection3938
                connect Junction2 lpf1.out as Connection3939
                connect Gain2.in Junction2 as Connection3940
                connect P_kW.in Gain2.out as Connection3941
                connect Q_kVAr.in Gain3.out as Connection3942
                connect POWER_Q.in Junction3 as Connection3943
                connect Junction3 lpf2.out as Connection3944
                connect Gain3.in Junction3 as Connection3945
            }
            [
                position = 7808, 7952
                rotation = right
                size = 48, 48
            ]

            component "core/Three-phase Meter" Grid_meter {
                I_avg_rms = "True"
                I_rms = "True"
                P_meas = "True"
                R = "1e4"
                Ts = "T_meter"
                VAB = "True"
                VBC = "True"
                VCA = "True"
                VLL_avg_rms = "True"
                VLL_rms = "True"
                freq = "True"
            }
            [
                position = 7808, 8208
                size = 56, 240
            ]

            component "core/Voltage Measurement" vab_gs {
                execution_rate = "T_meter"
                sig_output = "True"
            }
            [
                position = 7400, 8160
                rotation = right
                size = 64, 32
            ]

            component "core/Voltage Measurement" vbc_gs {
                execution_rate = "T_meter"
                sig_output = "True"
            }
            [
                position = 7400, 8256
                rotation = right
                size = 64, 32
            ]

            component "core/Voltage Measurement" vca_gs {
                execution_rate = "T_meter"
                sig_output = "True"
            }
            [
                position = 7568, 8256
                rotation = right
                scale = 1, -1
                size = 64, 32
            ]

            component "core/Voltage Measurement" vab_ls {
                execution_rate = "T_meter"
                sig_output = "True"
            }
            [
                position = 7896, 8160
                rotation = right
                size = 64, 32
            ]

            component "core/Voltage Measurement" vbc_ls {
                execution_rate = "T_meter"
                sig_output = "True"
            }
            [
                position = 7896, 8256
                rotation = right
                size = 64, 32
            ]

            component "core/Voltage Measurement" vca_ls {
                execution_rate = "T_meter"
                sig_output = "True"
            }
            [
                position = 8056, 8256
                rotation = right
                scale = 1, -1
                size = 64, 32
            ]

            component Subsystem sync_observer {
                layout = dynamic
                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 8024, 8272
                    hide_name = True
                ]

                component Subsystem PLLs {
                    layout = dynamic
                    component gen_gain Gain5 {
                        gain = "1.0/np.sqrt(2.0)"
                    }
                    [
                        position = 8064, 8312
                        rotation = down
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_terminator Termination3 {
                    }
                    [
                        position = 8080, 8152
                        hide_name = True
                    ]

                    component gen_terminator Termination2 {
                    }
                    [
                        position = 8080, 8120
                        hide_name = True
                    ]

                    component gen_terminator Termination5 {
                    }
                    [
                        position = 8080, 8232
                        hide_name = True
                    ]

                    component gen_terminator Termination1 {
                    }
                    [
                        position = 8080, 8088
                        hide_name = True
                    ]

                    component "core/Three phase PLL" "Three phase PLL1" {
                        enable_pk = "True"
                    }
                    [
                        position = 7936, 8168
                        size = 64, 128
                    ]

                    component gen_probe v_ab_rms_gen {
                    }
                    [
                        position = 8608, 8616
                    ]

                    component gen_bus_split "Bus Split1" {
                        outputs = "3"
                    }
                    [
                        position = 7800, 8168
                        hide_name = True
                    ]

                    component gen_bus_split "Bus Split2" {
                        outputs = "3"
                    }
                    [
                        position = 7768, 8512
                        hide_name = True
                    ]

                    component gen_terminator Termination6 {
                    }
                    [
                        position = 8048, 8440
                        hide_name = True
                    ]

                    component gen_terminator Termination7 {
                    }
                    [
                        position = 8048, 8504
                        hide_name = True
                    ]

                    component gen_terminator Termination9 {
                    }
                    [
                        position = 8048, 8472
                        hide_name = True
                    ]

                    component gen_terminator Termination10 {
                    }
                    [
                        position = 8048, 8584
                        hide_name = True
                    ]

                    component gen_probe v_ab_rms_grid {
                    }
                    [
                        position = 8640, 8528
                    ]

                    component gen_gain Gain6 {
                        gain = "1.0/np.sqrt(2.0)"
                    }
                    [
                        position = 8032, 8664
                        rotation = down
                        hide_name = True
                        scale = -1, 1
                    ]

                    component "core/Three phase PLL" "Three phase PLL2" {
                        enable_pk = "True"
                    }
                    [
                        position = 7904, 8520
                        size = 64, 128
                    ]

                    component gen_probe f_Hz_gen_ {
                    }
                    [
                        position = 8592, 7992
                    ]

                    component gen_probe f_Hz_grid_ {
                    }
                    [
                        position = 8632, 8056
                    ]

                    component gen_probe wt_gen_ {
                    }
                    [
                        position = 8768, 8296
                    ]

                    component gen_probe wt_grid_ {
                    }
                    [
                        position = 8776, 8360
                    ]

                    port vabc_LL_gen {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7680, 8168
                    ]

                    port vabc_LL_grid {
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7648, 8512
                    ]

                    port f_Hz_gen {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8656, 8144
                    ]

                    port f_Hz_grid {
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8656, 8200
                    ]

                    port wt_gen {
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8656, 8256
                    ]

                    port wt_grid {
                        position = right:4
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8656, 8320
                    ]

                    port vab_rms_gen {
                        position = right:5
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8656, 8376
                    ]

                    port vab_rms_grid {
                        position = right:6
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8656, 8432
                    ]

                    tag Goto8 {
                        value = "f_Hz_gen"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8144, 8168
                        hide_name = True
                    ]

                    tag Goto7 {
                        value = "v_ab_rms_gen"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8168, 8312
                        hide_name = True
                        size = 109, 20
                    ]

                    tag Goto9 {
                        value = "f_Hz_grid"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8112, 8520
                        hide_name = True
                    ]

                    tag Goto10 {
                        value = "v_ab_rms_grid"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8128, 8664
                        hide_name = True
                        size = 91, 20
                    ]

                    tag Goto11 {
                        value = "wt_gen"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8144, 8192
                        hide_name = True
                    ]

                    tag Goto12 {
                        value = "wt_grid"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8112, 8544
                        hide_name = True
                    ]

                    tag From1 {
                        value = "f_Hz_gen"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8464, 8144
                        hide_name = True
                        size = 73, 20
                    ]

                    tag From2 {
                        value = "f_Hz_grid"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8464, 8200
                        hide_name = True
                        size = 73, 20
                    ]

                    tag From3 {
                        value = "wt_gen"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8472, 8256
                        hide_name = True
                        size = 73, 20
                    ]

                    tag From4 {
                        value = "wt_grid"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8472, 8320
                        hide_name = True
                        size = 73, 20
                    ]

                    tag From5 {
                        value = "v_ab_rms_gen"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8472, 8376
                        hide_name = True
                        size = 73, 20
                    ]

                    tag From6 {
                        value = "v_ab_rms_grid"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8472, 8432
                        hide_name = True
                        size = 73, 20
                    ]

                    junction Junction13 sp
                    [
                        position = 8544, 8376
                    ]

                    junction Junction14 sp
                    [
                        position = 8568, 8432
                    ]

                    junction Junction15 sp
                    [
                        position = 8536, 8144
                    ]

                    junction Junction16 sp
                    [
                        position = 8560, 8200
                    ]

                    junction Junction17 sp
                    [
                        position = 8568, 8256
                    ]

                    junction Junction18 sp
                    [
                        position = 8568, 8320
                    ]

                    connect "Three phase PLL1.q_axis" Termination2.in as Connection2002
                    [
                        breakpoints = 8032, 8136; 8032, 8120
                    ]
                    connect "Three phase PLL1.peak" Gain5.in as Connection142
                    connect "Three phase PLL1.zero_axis" Termination3.in as Connection2003
                    connect "Three phase PLL1.sin_theta" Termination5.in as Connection2005
                    [
                        breakpoints = 8048, 8200
                    ]
                    connect "Three phase PLL1.d_axis" Termination1.in as Connection2001
                    [
                        breakpoints = 8016, 8120; 8016, 8088
                    ]
                    connect "Three phase PLL1.freq" Goto8 as Connection2006
                    connect vabc_LL_gen "Bus Split1.in" as Connection2007
                    connect vabc_LL_grid "Bus Split2.in" as Connection2009
                    connect "Bus Split1.out1" "Three phase PLL1.vb" as Connection2010
                    connect "Bus Split1.out2" "Three phase PLL1.vc" as Connection2011
                    connect "Bus Split1.out" "Three phase PLL1.va" as Connection2012
                    connect "Three phase PLL2.sin_theta" Termination10.in as Connection2014
                    [
                        breakpoints = 8016, 8552
                    ]
                    connect "Three phase PLL2.q_axis" Termination9.in as Connection2015
                    [
                        breakpoints = 8000, 8488; 8000, 8472
                    ]
                    connect "Three phase PLL2.peak" Gain6.in as Connection2016
                    connect "Three phase PLL2.freq" Goto9 as Connection2018
                    connect "Three phase PLL2.zero_axis" Termination7.in as Connection2020
                    connect "Three phase PLL2.d_axis" Termination6.in as Connection2022
                    [
                        breakpoints = 7984, 8472; 7984, 8440
                    ]
                    connect "Bus Split2.out" "Three phase PLL2.va" as Connection2023
                    connect "Three phase PLL2.vb" "Bus Split2.out1" as Connection2024
                    [
                        breakpoints = 7856, 8512; 7808, 8512
                    ]
                    connect "Bus Split2.out2" "Three phase PLL2.vc" as Connection2025
                    [
                        breakpoints = 7840, 8528; 7840, 8568
                    ]
                    connect "Three phase PLL1.theta" Goto11 as Connection2026
                    connect "Three phase PLL2.theta" Goto12 as Connection2027
                    connect Gain5.out Goto7 as Connection2034
                    [
                        breakpoints = 8096, 8312
                    ]
                    connect From5 Junction13 as Connection2035
                    connect Junction13 vab_rms_gen as Connection2036
                    connect v_ab_rms_gen.in Junction13 as Connection2037
                    connect Gain6.out Goto10 as Connection2038
                    connect vab_rms_grid Junction14 as Connection2039
                    connect Junction14 From6 as Connection2040
                    connect v_ab_rms_grid.in Junction14 as Connection2041
                    connect From1 Junction15 as Connection2042
                    connect Junction15 f_Hz_gen as Connection2043
                    connect f_Hz_gen_.in Junction15 as Connection2044
                    connect f_Hz_grid Junction16 as Connection2045
                    connect Junction16 From2 as Connection2046
                    connect f_Hz_grid_.in Junction16 as Connection2047
                    connect From3 Junction17 as Connection2048
                    connect Junction17 wt_gen as Connection2049
                    connect wt_gen_.in Junction17 as Connection2050
                    connect From4 Junction18 as Connection2051
                    connect Junction18 wt_grid as Connection2052
                    connect wt_grid_.in Junction18 as Connection2053
                }
                [
                    position = 8176, 8192
                    size = 144, 200
                ]

                component gen_bus_join "Bus Join2" {
                    inputs = "3"
                }
                [
                    position = 8032, 8112
                    hide_name = True
                ]

                component gen_probe f_Hz_ls {
                }
                [
                    position = 8360, 8016
                ]

                component gen_probe f_Hz_gs {
                }
                [
                    position = 8376, 8064
                ]

                component gen_probe wt_ls {
                }
                [
                    position = 8360, 8176
                ]

                component gen_probe wt_gs {
                }
                [
                    position = 8440, 8208
                ]

                component gen_probe vab_rms_ls {
                }
                [
                    position = 8416, 8296
                ]

                component gen_probe vab_rms_gs {
                }
                [
                    position = 8360, 8352
                ]

                component gen_sum Sum1 {
                    signs = "+-"
                }
                [
                    position = 8520, 8152
                    hide_name = True
                ]

                component gen_probe wt_err_deg {
                }
                [
                    position = 8704, 8152
                ]

                component gen_gain Gain1 {
                    gain = "180.0/np.pi"
                }
                [
                    position = 8632, 8152
                    hide_name = True
                ]

                component gen_z_domain_transfer "Discrete Transfer Function1" {
                    a_coeff = "[1.0/(2.0*np.pi*5.0),1.0]"
                    b_coeff = "[1.0]"
                    domain = "S-domain"
                }
                [
                    position = 8576, 8152
                    hide_name = True
                ]

                component gen_sum Sum2 {
                    signs = "+-"
                }
                [
                    position = 8504, 8072
                    hide_name = True
                ]

                component gen_probe f_err_Hz {
                }
                [
                    position = 8584, 8072
                ]

                component gen_sum Sum3 {
                    signs = "+-"
                }
                [
                    position = 8536, 8320
                    hide_name = True
                ]

                component gen_probe v_err_Vrms {
                }
                [
                    position = 8680, 8320
                ]

                component msr_phasor_3ph "Three Phase Phasor1" {
                }
                [
                    position = 8112, 8488
                    hide_name = True
                ]

                component gen_probe wt_err_deg2 {
                }
                [
                    position = 8440, 8464
                ]

                component gen_terminator Termination1 {
                }
                [
                    position = 8376, 8488
                    hide_name = True
                ]

                component gen_terminator Termination2 {
                }
                [
                    position = 8312, 8496
                    hide_name = True
                ]

                component gen_terminator Termination3 {
                }
                [
                    position = 8272, 8520
                    hide_name = True
                ]

                component gen_terminator Termination4 {
                }
                [
                    position = 8224, 8536
                    hide_name = True
                ]

                component gen_terminator Termination5 {
                }
                [
                    position = 8192, 8440
                    hide_name = True
                ]

                port vca_gs {
                    position = left:6
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7896, 8328
                ]

                port vab_gs {
                    position = left:4
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7888, 8224
                ]

                port vbc_ls {
                    position = left:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7808, 8112
                ]

                port vca_ls {
                    position = left:3
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7808, 8160
                ]

                port vbc_gs {
                    position = left:5
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7896, 8272
                ]

                port vab_ls {
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7808, 8064
                ]

                junction Junction1 sp
                [
                    position = 8320, 8176
                ]

                junction Junction2 sp
                [
                    position = 8408, 8208
                ]

                junction Junction3 sp
                [
                    position = 8328, 8064
                ]

                junction Junction4 sp
                [
                    position = 8304, 8016
                ]

                junction Junction5 sp
                [
                    position = 8320, 8352
                ]

                junction Junction6 sp
                [
                    position = 8360, 8296
                ]

                junction Junction7 sp
                [
                    position = 7848, 8096
                ]

                junction Junction8 sp
                [
                    position = 7984, 8256
                ]

                junction Junction9 sp
                [
                    position = 7968, 8272
                ]

                junction Junction10 sp
                [
                    position = 7952, 8288
                ]

                connect "Bus Join2.in1" vbc_ls as Connection4154
                connect "Bus Join2.in2" vca_ls as Connection4155
                connect "Bus Join1.out" PLLs.vabc_LL_grid as Connection4144
                connect "Bus Join2.out" PLLs.vabc_LL_gen as Connection4145
                connect PLLs.wt_gen Junction1 as Connection4158
                connect Junction1 wt_ls.in as Connection4159
                connect Sum1.in1 Junction1 as Connection4160
                connect PLLs.wt_grid Junction2 as Connection4161
                connect Junction2 wt_gs.in as Connection4162
                connect Sum1.in Junction2 as Connection4163
                connect Gain1.out wt_err_deg.in as Connection4165
                connect Sum1.out "Discrete Transfer Function1.in" as Connection4166
                connect "Discrete Transfer Function1.out" Gain1.in as Connection4167
                connect PLLs.f_Hz_grid Junction3 as Connection4171
                [
                    breakpoints = 8312, 8144; 8312, 8064
                ]
                connect Junction3 f_Hz_gs.in as Connection4172
                connect Sum2.in Junction3 as Connection4173
                connect PLLs.f_Hz_gen Junction4 as Connection4174
                [
                    breakpoints = 8288, 8112; 8288, 8016
                ]
                connect Junction4 f_Hz_ls.in as Connection4175
                connect Sum2.in1 Junction4 as Connection4176
                [
                    breakpoints = 8424, 8080; 8424, 7960; 8376, 7960
                ]
                connect f_err_Hz.in Sum2.out as Connection4177
                connect v_err_Vrms.in Sum3.out as Connection4178
                connect PLLs.vab_rms_grid Junction5 as Connection4179
                [
                    breakpoints = 8288, 8272; 8288, 8352
                ]
                connect Junction5 vab_rms_gs.in as Connection4180
                connect Sum3.in Junction5 as Connection4181
                connect PLLs.vab_rms_gen Junction6 as Connection4182
                [
                    breakpoints = 8312, 8240; 8312, 8296
                ]
                connect Junction6 vab_rms_ls.in as Connection4183
                connect Sum3.in1 Junction6 as Connection4184
                [
                    breakpoints = 8496, 8264; 8360, 8264
                ]
                connect "Bus Join2.in" Junction7 as Connection4185
                connect Junction7 vab_ls as Connection4186
                connect "Three Phase Phasor1.in_ref" Junction7 as Connection4187
                connect "Bus Join1.in" Junction8 as Connection4188
                connect Junction8 vab_gs as Connection4189
                connect "Three Phase Phasor1.in1" Junction8 as Connection4190
                connect "Bus Join1.in1" Junction9 as Connection4191
                connect Junction9 vbc_gs as Connection4192
                connect "Three Phase Phasor1.in2" Junction9 as Connection4193
                connect "Bus Join1.in2" Junction10 as Connection4194
                connect Junction10 vca_gs as Connection4195
                [
                    breakpoints = 7952, 8288; 7928, 8288
                ]
                connect "Three Phase Phasor1.in3" Junction10 as Connection4196
                connect "Three Phase Phasor1.phase1" wt_err_deg2.in as Connection4197
                [
                    breakpoints = 8152, 8464; 8408, 8464
                ]
                connect "Three Phase Phasor1.out2" Termination1.in as Connection4198
                connect Termination2.in "Three Phase Phasor1.phase2" as Connection4199
                connect "Three Phase Phasor1.out3" Termination3.in as Connection4200
                connect Termination4.in "Three Phase Phasor1.phase3" as Connection4201
                connect "Three Phase Phasor1.out1" Termination5.in as Connection4202
            }
            [
                position = 7704, 8472
                size = 56, 200
            ]

            component Subsystem Batt_out1 {
                layout = dynamic
                component gen_probe S {
                }
                [
                    position = 8208, 8136
                    rotation = right
                    scale = 1, -1
                ]

                component gen_probe Vt {
                }
                [
                    position = 8048, 8136
                    rotation = right
                    scale = 1, -1
                ]

                component gen_probe P_kW {
                }
                [
                    position = 8336, 8080
                    rotation = right
                    scale = 1, -1
                ]

                component gen_probe Pf {
                }
                [
                    position = 8160, 8136
                    rotation = right
                    scale = 1, -1
                ]

                component gen_probe f {
                }
                [
                    position = 8096, 8136
                    rotation = right
                    scale = 1, -1
                ]

                component gen_gain Gain2 {
                    gain = "1e-3"
                }
                [
                    position = 8336, 8152
                    rotation = left
                    hide_name = True
                ]

                component gen_bus_split "Bus Split2" {
                    outputs = "6"
                }
                [
                    position = 8192, 8248
                    rotation = left
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_gain Gain1 {
                    gain = "1e-3"
                }
                [
                    position = 8256, 8120
                    rotation = left
                    hide_name = True
                ]

                component gen_probe Q_kVAr {
                }
                [
                    position = 8256, 8048
                    rotation = right
                    scale = 1, -1
                ]

                port In1 {
                    position = bottom:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8192, 8320
                    rotation = left
                ]

                connect Gain2.out P_kW.in as Connection800
                connect "Bus Split2.in" In1 as Connection796
                connect "Bus Split2.out" Gain2.in as Connection799
                connect "Bus Split2.out4" f.in as Connection794
                connect "Bus Split2.out1" Gain1.in as Connection797
                connect "Bus Split2.out5" Vt.in as Connection795
                connect Gain1.out Q_kVAr.in as Connection798
                connect "Bus Split2.out2" S.in as Connection792
                connect "Bus Split2.out3" Pf.in as Connection793
            }
            [
                position = 8848, 8640
                rotation = right
                scale = -1, 1
                size = 48, 48
            ]

            component Subsystem Batt_in1 {
                layout = dynamic
                component src_scada_input en {
                    execution_rate = "Ts"
                    max = "1"
                    min = "0"
                    unit = ""
                }
                [
                    position = 8120, 8304
                ]

                component src_scada_input Pref_kW {
                    execution_rate = "Ts"
                    max = "1000000000.0"
                    min = "-1000000000.0"
                    unit = "kW"
                }
                [
                    position = 8136, 8088
                ]

                component src_scada_input Qref_kVAr {
                    execution_rate = "Ts"
                    max = "1000000000.0"
                    min = "-1000000000.0"
                    unit = "kVAr"
                }
                [
                    position = 8128, 8152
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "5"
                }
                [
                    position = 8376, 8208
                    hide_name = True
                ]

                component gen_gain Gain1 {
                    gain = "1e3"
                }
                [
                    position = 8224, 8088
                    hide_name = True
                ]

                component src_scada_input Limit_type {
                    def_value = "1"
                    execution_rate = "Ts"
                    max = "2"
                    min = "0"
                    unit = ""
                }
                [
                    position = 8112, 8240
                ]

                component gen_gain Gain2 {
                    gain = "1e3"
                }
                [
                    position = 8208, 8192
                    hide_name = True
                ]

                component src_scada_input mode {
                    execution_rate = "Ts"
                    max = "1"
                    min = "0"
                    unit = "0=grid-follow; 1=grid-form"
                }
                [
                    position = 8120, 8384
                ]

                component sys_signal_switch "Signal switch1" {
                    threshold = "0.5"
                }
                [
                    position = 8168, 8584
                    hide_name = True
                ]

                component src_constant Constant1 {
                    execution_rate = "Ts"
                    value = "0"
                }
                [
                    position = 7984, 8568
                    hide_name = True
                ]

                component src_constant Constant2 {
                    execution_rate = "Ts"
                }
                [
                    position = 8056, 8600
                    hide_name = True
                ]

                component gen_terminator Termination1 {
                }
                [
                    position = 8200, 8384
                ]

                port Out1 {
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8448, 8208
                ]

                port mcb_fb {
                    position = auto:auto
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8032, 8496
                ]

                connect Gain2.in Qref_kVAr.out as Connection763
                connect "Bus Join1.out" Out1 as Connection758
                connect "Bus Join1.in" Gain1.out as Connection760
                connect en.out "Bus Join1.in3" as Connection759
                [
                    breakpoints = 8152, 8304; 8256, 8304; 8256, 8304; 8256, 8232
                ]
                connect "Bus Join1.in2" Limit_type.out as Connection757
                [
                    breakpoints = 8240, 8240; 8144, 8240
                ]
                connect "Bus Join1.in1" Gain2.out as Connection762
                connect Pref_kW.out Gain1.in as Connection764
                connect mcb_fb "Signal switch1.in2" as Connection765
                connect Constant1.out "Signal switch1.in" as Connection766
                connect Constant2.out "Signal switch1.in1" as Connection767
                connect "Signal switch1.out" "Bus Join1.in4" as Connection768
                [
                    breakpoints = 8288, 8584; 8288, 8240
                ]
                connect mode.out Termination1.in as Connection769

                Ts = "Tbatt"

                mask {
                    description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                    Ts {
                        label = "Ts"
                        widget = edit
                        type = generic
                        default_value = "0"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE
                }
            }
            [
                position = 8888, 8432
                size = 80, 48
            ]

            component "core/Battery" Battery1 {
                Kdisc_I = "20.0"
                Ke_exp = "103.0"
                Ke_full = "116.0"
                Kq_exp = "85.0"
                Kq_nom = "93.5"
                R_series = "0.33333333333333365"
                battery_type = "Lithium-Ion"
                capacity = "30"
                execution_rate = "Tbatt"
                initial_soc = "80.0"
                nominal_voltage = "400"
                sig_output = "True"
            }
            [
                position = 9072, 8784
                size = 64, 48
            ]

            component gen_probe Batt1_SoC {
            }
            [
                position = 9072, 8712
                rotation = left
            ]

            component Subsystem Lump1_out {
                layout = dynamic
                component gen_probe S {
                }
                [
                    position = 8208, 8136
                    rotation = right
                    scale = 1, -1
                ]

                component gen_probe Vt {
                }
                [
                    position = 8048, 8136
                    rotation = right
                    scale = 1, -1
                ]

                component gen_probe P_kW {
                }
                [
                    position = 8336, 8080
                    rotation = right
                    scale = 1, -1
                ]

                component gen_probe Pf {
                }
                [
                    position = 8160, 8136
                    rotation = right
                    scale = 1, -1
                ]

                component gen_probe f {
                }
                [
                    position = 8096, 8136
                    rotation = right
                    scale = 1, -1
                ]

                component gen_gain Gain2 {
                    gain = "1e-3"
                }
                [
                    position = 8336, 8152
                    rotation = left
                    hide_name = True
                ]

                component gen_bus_split "Bus Split2" {
                    outputs = "6"
                }
                [
                    position = 8192, 8248
                    rotation = left
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_gain Gain1 {
                    gain = "1e-3"
                }
                [
                    position = 8256, 8120
                    rotation = left
                    hide_name = True
                ]

                component gen_probe Q_kVAr {
                }
                [
                    position = 8256, 8048
                    rotation = right
                    scale = 1, -1
                ]

                port In1 {
                    position = bottom:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8192, 8320
                    rotation = left
                ]

                connect Gain2.out P_kW.in as Connection800
                connect "Bus Split2.in" In1 as Connection796
                connect "Bus Split2.out" Gain2.in as Connection799
                connect "Bus Split2.out4" f.in as Connection794
                connect "Bus Split2.out1" Gain1.in as Connection797
                connect "Bus Split2.out5" Vt.in as Connection795
                connect Gain1.out Q_kVAr.in as Connection798
                connect "Bus Split2.out2" S.in as Connection792
                connect "Bus Split2.out3" Pf.in as Connection793
            }
            [
                position = 8128, 8648
                rotation = right
                scale = -1, 1
                size = 48, 48
            ]

            component Subsystem Lump1_in {
                layout = dynamic
                component src_scada_input en {
                    execution_rate = "Ts"
                    max = "1"
                    min = "0"
                    unit = ""
                }
                [
                    position = 8120, 8312
                ]

                component src_scada_input Pref_kW {
                    execution_rate = "Ts"
                    max = "1000000000.0"
                    min = "-1000000000.0"
                    unit = "kW"
                }
                [
                    position = 8136, 8088
                ]

                component src_scada_input Qref_kVAr {
                    execution_rate = "Ts"
                    max = "1000000000.0"
                    min = "-1000000000.0"
                    unit = "kVAr"
                }
                [
                    position = 8128, 8152
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "5"
                }
                [
                    position = 8376, 8208
                    hide_name = True
                ]

                component gen_gain Gain1 {
                    gain = "1e3"
                }
                [
                    position = 8224, 8088
                    hide_name = True
                ]

                component src_scada_input Limit_type {
                    def_value = "1"
                    execution_rate = "Ts"
                    max = "2"
                    min = "0"
                    unit = ""
                }
                [
                    position = 8112, 8240
                ]

                component gen_gain Gain2 {
                    gain = "1e3"
                }
                [
                    position = 8208, 8192
                    hide_name = True
                ]

                component src_scada_input mode {
                    execution_rate = "Ts"
                    max = "1"
                    min = "0"
                    unit = "0=grid-follow; 1=grid-form"
                }
                [
                    position = 8144, 8376
                ]

                port Out1 {
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8448, 8208
                ]

                connect Gain2.in Qref_kVAr.out as Connection763
                connect "Bus Join1.out" Out1 as Connection758
                connect "Bus Join1.in" Gain1.out as Connection760
                connect en.out "Bus Join1.in3" as Connection759
                [
                    breakpoints = 8256, 8304; 8256, 8232
                ]
                connect "Bus Join1.in2" Limit_type.out as Connection757
                connect "Bus Join1.in1" Gain2.out as Connection762
                connect Pref_kW.out Gain1.in as Connection764
                connect mode.out "Bus Join1.in4" as Connection765

                Ts = "T_load"

                mask {
                    description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                    Ts {
                        label = "Ts"
                        widget = edit
                        type = generic
                        default_value = "0"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE
                }
            }
            [
                position = 8120, 8440
                size = 48, 48
            ]

            component Subsystem "Battery inverter (Average)1" {
                layout = dynamic
                component "core/Voltage Measurement" Va {
                    addr = "7"
                    execution_rate = "execution_rate"
                    sig_output = "True"
                }
                [
                    position = 7008, 8368
                    rotation = right
                    size = 64, 32
                ]

                component gen_terminator Termination1 {
                }
                [
                    position = 7704, 7744
                    hide_name = True
                ]

                component pas_resistor R1 {
                    resistance = "R"
                }
                [
                    position = 6880, 8376
                    rotation = left
                ]

                component "core/Voltage RMS" Vrms1 {
                }
                [
                    position = 6760, 8376
                    rotation = right
                    size = 64, 32
                ]

                component Subsystem Control_Inputs {
                    layout = dynamic
                    component gen_bus_split "Bus Split1" {
                        outputs = "5"
                    }
                    [
                        position = 8144, 8112
                        rotation = right
                    ]

                    port In1 {
                        position = top:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8144, 8040
                        rotation = right
                        hide_name = True
                    ]

                    tag Goto23 {
                        value = "Pref"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8240, 8176
                    ]

                    tag Goto24 {
                        value = "Qref"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8240, 8224
                    ]

                    tag Goto25 {
                        value = "Limit_type"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8240, 8272
                    ]

                    tag Goto26 {
                        value = "en"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8240, 8312
                    ]

                    tag Goto27 {
                        value = "mode"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8240, 8352
                    ]

                    connect "Bus Split1.in" In1 as Connection751
                    connect Goto26 "Bus Split1.out3" as Connection752
                    connect "Bus Split1.out2" Goto25 as Connection750
                    connect "Bus Split1.out" Goto23 as Connection748
                    connect "Bus Split1.out1" Goto24 as Connection749
                    connect "Bus Split1.out4" Goto27 as Connection753
                }
                [
                    position = 6472, 8040
                    size = 48, 48
                ]

                component gen_probe P {
                }
                [
                    position = 7632, 8040
                    scale = 1, -1
                ]

                component "core/Voltage Measurement" Vb {
                    addr = "9"
                    execution_rate = "execution_rate"
                    sig_output = "True"
                }
                [
                    position = 7088, 8408
                    rotation = right
                    size = 64, 32
                ]

                component gen_bus_split "Bus Split2" {
                    outputs = "6"
                }
                [
                    position = 7456, 7896
                    rotation = down
                    hide_name = True
                    scale = -1, 1
                ]

                component Subsystem calc_current {
                    layout = dynamic
                    component gen_gain Gain13 {
                        gain = "(1.0/Vnom)*((3.0/2.0)**0.5)"
                    }
                    [
                        position = 7880, 7992
                        hide_name = True
                    ]

                    component gen_c_function "C function3" {
                        in_terminal_dimensions = "inherit;inherit"
                        in_terminal_dimensions_str = "en inherit;f_Hz inherit"
                        in_terminal_labels = "[(\'en\', True), (\'f_Hz\', True)]"
                        in_terminal_properties = "real en;inherit f_Hz;"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "en_out inherit"
                        out_terminal_labels = "[(\'en_out\', True)]"
                        out_terminal_properties = "real en_out;"
                        output_fnc = "/*Begin code section*/
if ((f_Hz  > 70) || (f_Hz < 40))
{
    en_out = 0;
}
else
{
    en_out = en;
}
/*End code section*/"
                    }
                    [
                        position = 7576, 8584
                        size = 64, 48
                    ]

                    component gen_gain Gain15 {
                        gain = "1/Sb"
                    }
                    [
                        position = 7880, 8136
                        hide_name = True
                    ]

                    component gen_gain Gain14 {
                        gain = "1/Sb"
                    }
                    [
                        position = 7880, 8184
                        hide_name = True
                    ]

                    component gen_gain Gain10 {
                        gain = "(1.0/Vnom)*((3.0/2.0)**0.5)"
                    }
                    [
                        position = 7880, 8088
                        hide_name = True
                    ]

                    component gen_limiter Limit2 {
                        lower_limit = "0.001"
                    }
                    [
                        position = 8016, 8088
                        hide_name = True
                    ]

                    component gen_probe Id_ {
                    }
                    [
                        position = 9336, 8400
                    ]

                    component src_constant Constant2 {
                        execution_rate = "execution_rate"
                        value = "0"
                    }
                    [
                        position = 8864, 8576
                        hide_name = True
                    ]

                    component gen_c_function "C function1" {
                        global_variables = "real counter;"
                        in_terminal_dimensions = "inherit"
                        in_terminal_dimensions_str = "en inherit"
                        in_terminal_labels = "[(\'en\', True)]"
                        in_terminal_properties = "real en;"
                        init_fnc = "/*Begin code section*/
counter = 0;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "en_out inherit"
                        out_terminal_labels = "[(\'en_out\', True)]"
                        out_terminal_properties = "real en_out;"
                        output_fnc = "/*Begin code section*/
if (en  > 0.5)
{
    if (counter > 0.1/execution_rate)
    {
        en_out = 1;
    }
    else
    {
        counter = counter + 1;
    }
}

if (en < 0.5)
{
    en_out = 0;
    counter = 0;
}
/*End code section*/"
                    }
                    [
                        position = 7728, 8584
                        size = 64, 48
                    ]

                    component sys_signal_switch "Signal switch1" {
                        threshold = "0.5"
                    }
                    [
                        position = 8992, 8448
                        hide_name = True
                    ]

                    component sys_signal_switch "Signal switch2" {
                        threshold = "0.5"
                    }
                    [
                        position = 9024, 8672
                        hide_name = True
                    ]

                    component gen_terminator Termination1 {
                    }
                    [
                        position = 7848, 8280
                        hide_name = True
                    ]

                    component gen_c_function calc_current {
                        global_variables = "real x;real pf;"
                        in_terminal_dimensions = "inherit;inherit;inherit;inherit;inherit"
                        in_terminal_dimensions_str = "Vd inherit;Vq inherit;Vpk inherit;P inherit;Q inherit"
                        in_terminal_labels = "[(\'Vd\', True), (\'Vq\', True), (\'Vpk\', True), (\'P\', True), (\'Q\', True)]"
                        in_terminal_properties = "real Vd;inherit Vq;inherit Vpk;inherit P;inherit Q;"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit;inherit"
                        out_terminal_dimensions_str = "Id inherit;Iq inherit"
                        out_terminal_labels = "[(\'Id\', True), (\'Iq\', True)]"
                        out_terminal_properties = "real Id;inherit Iq;"
                        output_fnc = "/*Begin code section*/
if(Vpk<0.2 || Vpk>2.0){
    // If the peak voltage is less than 20% of nominal, deactivate load
    Id = 0;
    Iq = 0;
}
else{
    x = Vpk*Vpk;

    // the signs of P and Q are changed to adapt the systems for load reference
    // thus, positive power means that the load is absorbing from the grid.
    // Positive Q is inductive load.

    Id = -(P*Vd+Q*Vq)/x;
    Iq = -(P*Vq-Q*Vd)/x;
}
/*End code section*/"
                    }
                    [
                        position = 8144, 8368
                        rotation = right
                        size = 48, 96
                    ]

                    component gen_limiter Limit3 {
                        lower_limit = "-1"
                        upper_limit = "1"
                    }
                    [
                        position = 8832, 8432
                        hide_name = True
                    ]

                    component gen_probe Iq_ {
                    }
                    [
                        position = 9328, 8672
                    ]

                    component gen_gain Gain9 {
                        gain = "(1.0/Vnom)*((3.0/2.0)**0.5)"
                    }
                    [
                        position = 7880, 8040
                        hide_name = True
                    ]

                    component gen_c_function "C function2" {
                        in_terminal_dimensions = "inherit;inherit"
                        in_terminal_dimensions_str = "Pref inherit;Qref inherit"
                        in_terminal_labels = "[(\'Pref\', True), (\'Qref\', True)]"
                        in_terminal_properties = "real Pref;inherit Qref;"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit;inherit"
                        out_terminal_dimensions_str = "Pref_actual inherit;Qref_actual inherit"
                        out_terminal_labels = "[(\'Pref_actual\', True), (\'Qref_actual\', True)]"
                        out_terminal_properties = "real Pref_actual;inherit Qref_actual;"
                        output_fnc = "/*Begin code section*/
Qref_actual = Qref - 228.3/2400 * Pref;
Pref_actual = Pref + 228.3/2400 * Qref;
/*End code section*/"
                    }
                    [
                        position = 7616, 8160
                        size = 104, 88
                    ]

                    component gen_limiter Limit4 {
                        lower_limit = "-1"
                        upper_limit = "1"
                    }
                    [
                        position = 8880, 8656
                        hide_name = True
                    ]

                    component gen_digital_probe Active {
                    }
                    [
                        position = 7936, 8592
                    ]

                    component gen_rate_limiter "Rate Limiter1" {
                        falling_limit = "-I_Rate/Ib"
                        rising_limit = "I_Rate/Ib"
                    }
                    [
                        position = 8672, 8464
                        hide_name = True
                    ]

                    component gen_gain Gain11 {
                        gain = "Ib"
                    }
                    [
                        position = 8904, 8432
                        hide_name = True
                    ]

                    component gen_gain Gain16 {
                        gain = "Ib"
                    }
                    [
                        position = 8944, 8656
                        hide_name = True
                    ]

                    component Subsystem pid_controller {
                        layout = dynamic
                        component gen_product Product8 {
                        }
                        [
                            position = 8160, 7936
                            hide_name = True
                        ]

                        component gen_sum Sum8 {
                            signs = "+-"
                        }
                        [
                            position = 7488, 7872
                            hide_name = True
                        ]

                        component gen_sum Sum14 {
                            signs = "4"
                        }
                        [
                            position = 8568, 7968
                            hide_name = True
                        ]

                        component src_constant Constant1 {
                            execution_rate = "execution_rate"
                            value = "0"
                        }
                        [
                            position = 8776, 7912
                            hide_name = True
                        ]

                        component gen_product Product9 {
                        }
                        [
                            position = 8168, 8080
                            hide_name = True
                        ]

                        component gen_integrator Integrator1 {
                            limit_lower = "-1"
                            limit_output = "True"
                            limit_upper = "1"
                            show_reset = "level"
                        }
                        [
                            position = 8344, 8088
                            hide_name = True
                        ]

                        component sys_signal_switch "Signal switch1" {
                            threshold = "0.5"
                        }
                        [
                            position = 8840, 7952
                            hide_name = True
                        ]

                        component gen_limiter Limit1 {
                            lower_limit = "-1"
                            upper_limit = "1"
                        }
                        [
                            position = 8296, 7936
                        ]

                        component gen_limiter Limit3 {
                            lower_limit = "-1.0"
                            upper_limit = "1.0"
                        }
                        [
                            position = 8680, 7968
                        ]

                        component gen_logic_op "Logical operator4" {
                            operator = "NOT"
                        }
                        [
                            position = 7240, 8048
                            hide_name = True
                        ]

                        component gen_gain Gain1 {
                            gain = "-1"
                        }
                        [
                            position = 8472, 8288
                            hide_name = True
                        ]

                        port ki {
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7880, 8088
                        ]

                        port "Iq*" {
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9032, 7952
                        ]

                        port Enable {
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7144, 8000
                        ]

                        port kp {
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7880, 7944
                        ]

                        port ref {
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7304, 7824
                        ]

                        port fdbck {
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7392, 7880
                        ]

                        port iq_meas_gs {
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8232, 8328
                        ]

                        port w_Cf_vd {
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8240, 8208
                        ]

                        tag Goto2 {
                            value = "enable"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7240, 8000
                            hide_name = True
                            size = 0, 0
                        ]

                        tag Goto3 {
                            value = "disable"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7328, 8048
                            hide_name = True
                            size = 0, 0
                        ]

                        tag From6 {
                            value = "disable"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8248, 8104
                            hide_name = True
                            size = 0, 0
                        ]

                        tag From7 {
                            value = "disable"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8768, 7880
                            hide_name = True
                            size = 0, 0
                        ]

                        junction Junction359 sp
                        [
                            position = 7176, 8000
                        ]

                        junction Junction366 sp
                        [
                            position = 8112, 7928
                        ]

                        connect fdbck Sum8.in1 as Connection1502
                        connect Product9.out Integrator1.in as Connection288
                        connect Constant1.out "Signal switch1.in" as Connection333
                        connect Limit1.in Product8.out as Connection1993
                        connect kp Product8.in1 as Connection1997
                        connect ki Product9.in1 as Connection1999
                        connect Sum14.out Limit3.in as Connection2000
                        connect Limit3.out "Signal switch1.in1" as Connection2001
                        connect Enable Junction359 as Connection2014
                        connect Junction359 Goto2 as Connection2015
                        connect "Logical operator4.in" Junction359 as Connection2016
                        connect "Logical operator4.out" Goto3 as Connection2017
                        connect From6 Integrator1.reset as Connection2025
                        connect From7 "Signal switch1.in2" as Connection2026
                        connect Junction366 Product8.in as Connection2060
                        [
                            breakpoints = 8112, 7928; 8112, 7928; 8112, 7928; 8112, 7928
                        ]
                        connect "Iq*" "Signal switch1.out" as Connection2068
                        connect Sum8.out Junction366 as Connection2073
                        [
                            breakpoints = 7560, 7872; 7600, 7872; 7600, 7872; 8032, 7872; 8032, 7928
                        ]
                        connect iq_meas_gs Gain1.in as Connection2074
                        connect Sum14.in Limit1.out as Connection2081
                        connect Integrator1.out Sum14.in1 as Connection2082
                        [
                            breakpoints = 8416, 8088; 8416, 7960
                        ]
                        connect ref Sum8.in as Connection2084
                        connect Junction366 Product9.in as Connection2085
                        [
                            breakpoints = 8112, 7928; 8112, 8072; 8112, 8072; 8112, 8072; 8112, 8072
                        ]
                        connect w_Cf_vd Sum14.in2 as Connection2086
                        [
                            breakpoints = 8272, 8200; 8456, 8200; 8456, 7976
                        ]
                        connect Gain1.out Sum14.in3 as Connection2087
                        [
                            breakpoints = 8496, 8288; 8496, 7992
                        ]
                    }
                    [
                        position = 8576, 9016
                        size = 88, 328
                    ]

                    component gen_gain Gain17 {
                        gain = "(1.0/Vnom)*((3.0/2.0)**0.5)"
                    }
                    [
                        position = 8112, 8840
                        hide_name = True
                    ]

                    component src_constant Constant3 {
                        execution_rate = "execution_rate"
                        value = "0"
                    }
                    [
                        position = 8424, 9160
                        hide_name = True
                    ]

                    component gen_logic_op "Logical operator1" {
                    }
                    [
                        position = 8112, 9072
                        hide_name = True
                    ]

                    component gen_product Product15 {
                        signs = "3"
                    }
                    [
                        position = 8112, 9168
                        hide_name = True
                    ]

                    component src_constant Constant4 {
                        execution_rate = "execution_rate"
                        value = "Cf"
                    }
                    [
                        position = 8032, 9192
                    ]

                    component gen_gain Gain20 {
                        gain = "1/Ib"
                    }
                    [
                        position = 8192, 9168
                        hide_name = True
                    ]

                    component gen_gain Gain21 {
                        gain = "(1.0/Vnom)*((3.0/2.0)**0.5)"
                    }
                    [
                        position = 8128, 8912
                        hide_name = True
                    ]

                    component gen_logic_op "Logical operator2" {
                    }
                    [
                        position = 8360, 9472
                        hide_name = True
                    ]

                    component gen_product Product16 {
                        signs = "3"
                    }
                    [
                        position = 8288, 9552
                        hide_name = True
                    ]

                    component src_constant Constant6 {
                        execution_rate = "execution_rate"
                        value = "Cf"
                    }
                    [
                        position = 8208, 9576
                    ]

                    component gen_gain Gain25 {
                        gain = "1/Ib"
                    }
                    [
                        position = 8376, 9552
                        hide_name = True
                    ]

                    component src_constant Constant7 {
                        execution_rate = "execution_rate"
                        value = "0"
                    }
                    [
                        position = 8408, 9592
                        hide_name = True
                    ]

                    component Subsystem pid_controller1 {
                        layout = dynamic
                        component gen_product Product8 {
                        }
                        [
                            position = 8160, 7936
                            hide_name = True
                        ]

                        component gen_sum Sum8 {
                            signs = "+-"
                        }
                        [
                            position = 7488, 7872
                            hide_name = True
                        ]

                        component gen_sum Sum14 {
                            signs = "4"
                        }
                        [
                            position = 8536, 7968
                            hide_name = True
                        ]

                        component src_constant Constant1 {
                            execution_rate = "execution_rate"
                            value = "0"
                        }
                        [
                            position = 8776, 7912
                            hide_name = True
                        ]

                        component gen_product Product9 {
                        }
                        [
                            position = 8168, 8080
                            hide_name = True
                        ]

                        component gen_integrator Integrator1 {
                            limit_lower = "-1"
                            limit_output = "True"
                            limit_upper = "1"
                            show_reset = "level"
                        }
                        [
                            position = 8344, 8088
                            hide_name = True
                        ]

                        component sys_signal_switch "Signal switch1" {
                            threshold = "0.5"
                        }
                        [
                            position = 8840, 7952
                            hide_name = True
                        ]

                        component gen_limiter Limit1 {
                            lower_limit = "-1"
                            upper_limit = "1"
                        }
                        [
                            position = 8296, 7936
                        ]

                        component gen_limiter Limit3 {
                            lower_limit = "-1.0"
                            upper_limit = "1.0"
                        }
                        [
                            position = 8680, 7968
                        ]

                        component gen_logic_op "Logical operator4" {
                            operator = "NOT"
                        }
                        [
                            position = 7240, 8048
                            hide_name = True
                        ]

                        component gen_gain Gain1 {
                            gain = "-1"
                        }
                        [
                            position = 8400, 8464
                            hide_name = True
                        ]

                        port ki {
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7880, 8088
                        ]

                        port "Id*" {
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9032, 7952
                        ]

                        port Enable {
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7144, 8000
                        ]

                        port kp {
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7880, 7944
                        ]

                        port ref {
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7304, 7824
                        ]

                        port fdbck {
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7392, 7880
                        ]

                        port id_meas_gs {
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8168, 8464
                        ]

                        port w_Cf_vq {
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8168, 8384
                        ]

                        tag Goto2 {
                            value = "enable"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7240, 8000
                            hide_name = True
                            size = 0, 0
                        ]

                        tag Goto3 {
                            value = "disable"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7328, 8048
                            hide_name = True
                            size = 0, 0
                        ]

                        tag From6 {
                            value = "disable"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8248, 8104
                            hide_name = True
                            size = 0, 0
                        ]

                        tag From7 {
                            value = "disable"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8768, 7880
                            hide_name = True
                            size = 0, 0
                        ]

                        junction Junction359 sp
                        [
                            position = 7176, 8000
                        ]

                        junction Junction366 sp
                        [
                            position = 8112, 7928
                        ]

                        connect fdbck Sum8.in1 as Connection1502
                        connect Product9.out Integrator1.in as Connection288
                        connect Constant1.out "Signal switch1.in" as Connection333
                        connect kp Product8.in1 as Connection1997
                        connect ki Product9.in1 as Connection1999
                        connect Sum14.out Limit3.in as Connection2000
                        connect Limit3.out "Signal switch1.in1" as Connection2001
                        connect Enable Junction359 as Connection2014
                        connect Junction359 Goto2 as Connection2015
                        connect "Logical operator4.in" Junction359 as Connection2016
                        connect "Logical operator4.out" Goto3 as Connection2017
                        connect From6 Integrator1.reset as Connection2025
                        connect From7 "Signal switch1.in2" as Connection2026
                        connect Junction366 Product8.in as Connection2060
                        [
                            breakpoints = 8112, 7928; 8112, 7928; 8112, 7928; 8112, 7928
                        ]
                        connect "Id*" "Signal switch1.out" as Connection2068
                        connect Sum8.out Junction366 as Connection2073
                        [
                            breakpoints = 7560, 7872; 7600, 7872; 7600, 7872; 8032, 7872; 8032, 7928
                        ]
                        connect id_meas_gs Gain1.in as Connection2074
                        connect Limit1.in Product8.out as Connection2082
                        connect Limit1.out Sum14.in as Connection2083
                        connect Integrator1.out Sum14.in1 as Connection2084
                        [
                            breakpoints = 8432, 8088; 8432, 7952
                        ]
                        connect Sum8.in ref as Connection2086
                        connect Product9.in Junction366 as Connection2087
                        [
                            breakpoints = 8112, 8072; 8112, 8072; 8112, 8072; 8112, 8072; 8112, 7928
                        ]
                        connect w_Cf_vq Sum14.in2 as Connection2088
                        [
                            breakpoints = 8448, 8384; 8448, 7976
                        ]
                        connect Gain1.out Sum14.in3 as Connection2089
                        [
                            breakpoints = 8472, 8464; 8472, 7992
                        ]
                    }
                    [
                        position = 8576, 9408
                        size = 88, 328
                    ]

                    component gen_gain Gain2 {
                        gain = "-1"
                    }
                    [
                        position = 8448, 9552
                        hide_name = True
                    ]

                    component sys_signal_switch "Signal switch3" {
                        threshold = "0.5"
                    }
                    [
                        position = 8736, 8656
                        hide_name = True
                    ]

                    component sys_signal_switch "Signal switch4" {
                        threshold = "0.5"
                    }
                    [
                        position = 8752, 8432
                        hide_name = True
                    ]

                    component sys_signal_switch "Signal switch5" {
                        threshold = "0.5"
                    }
                    [
                        position = 7848, 8552
                        hide_name = True
                    ]

                    component gen_gain Gain26 {
                        gain = "(1.0/Vnom)*((3.0/2.0)**0.5)"
                    }
                    [
                        position = 8424, 9312
                        hide_name = True
                    ]

                    component gen_gain Gain27 {
                        gain = "(1.0/Vnom)*((3.0/2.0)**0.5)"
                    }
                    [
                        position = 8432, 9256
                        hide_name = True
                    ]

                    component src_scada_input Ki_grid_forming_ {
                        def_value = "100.0"
                        execution_rate = "execution_rate"
                        unit = ""
                    }
                    [
                        position = 7944, 8992
                    ]

                    component src_scada_input Kp_grid_forming_ {
                        def_value = "1.0"
                        execution_rate = "execution_rate"
                        unit = ""
                    }
                    [
                        position = 7824, 8944
                    ]

                    component gen_rate_limiter "Rate Limiter3" {
                        falling_limit = "-I_Rate/Ib"
                        rising_limit = "I_Rate/Ib"
                    }
                    [
                        position = 8664, 8680
                        hide_name = True
                    ]

                    component src_constant Constant8 {
                        execution_rate = "execution_rate"
                        value = "Vnom**2*(2.0*np.pi*fnom*Cf)"
                    }
                    [
                        position = 7400, 8240
                        hide_name = True
                    ]

                    component gen_sum Sum1 {
                    }
                    [
                        position = 7472, 8200
                        hide_name = True
                    ]

                    port Pref {
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7464, 8136
                    ]

                    port Iq {
                        position = right:5
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9384, 8728
                    ]

                    port Vd {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7760, 7992
                    ]

                    port Id {
                        position = right:5
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9272, 8448
                    ]

                    port f_Hz {
                        position = left:8
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7472, 8608
                    ]

                    port Qref {
                        position = left:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7400, 8184
                    ]

                    port Vq {
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7760, 8040
                    ]

                    port Limit_type {
                        position = left:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7760, 8280
                    ]

                    port en {
                        position = left:9
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7416, 8576
                    ]

                    port Vpk {
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7760, 8088
                    ]

                    port vq_ref {
                        position = left:10
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7440, 8832
                    ]

                    port id_gs {
                        position = left:11
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7440, 8896
                    ]

                    port iq_gs {
                        position = left:12
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7440, 8952
                    ]

                    port vd_gs {
                        position = left:13
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7440, 9016
                    ]

                    port vq_gs {
                        position = left:14
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7440, 9080
                    ]

                    port mode {
                        position = left:15
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7440, 9144
                    ]

                    port w_grid_form {
                        position = left:16
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7440, 9224
                    ]

                    port vd_ref {
                        position = left:17
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7400, 9304
                    ]

                    tag Goto2 {
                        value = "P_ref_pu"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8016, 8240
                        hide_name = True
                    ]

                    tag Goto1 {
                        value = "en"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7936, 8552
                        hide_name = True
                    ]

                    tag From1 {
                        value = "en"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8888, 8368
                    ]

                    tag Goto3 {
                        value = "Q_ref_pu"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8016, 8264
                        hide_name = True
                    ]

                    tag Goto4 {
                        value = "vq_ref"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7528, 8832
                        hide_name = True
                    ]

                    tag Goto26 {
                        value = "id_meas_gs"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7552, 8896
                        hide_name = True
                        size = 100, 20
                    ]

                    tag Goto27 {
                        value = "iq_meas_gs"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7552, 8952
                        hide_name = True
                        size = 100, 20
                    ]

                    tag Goto28 {
                        value = "vd_meas_gs"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7544, 9016
                        hide_name = True
                        size = 100, 20
                    ]

                    tag Goto29 {
                        value = "vq_meas_gs"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7544, 9080
                        hide_name = True
                        size = 100, 20
                    ]

                    tag Goto30 {
                        value = "mode"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7536, 9144
                        hide_name = True
                        size = 100, 20
                    ]

                    tag From2 {
                        value = "vq_ref"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7936, 8840
                        hide_name = True
                    ]

                    tag From3 {
                        value = "vq_meas_gs"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7984, 8912
                        hide_name = True
                        size = 81, 20
                    ]

                    tag From4 {
                        value = "mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8008, 9056
                        hide_name = True
                        size = 81, 20
                    ]

                    tag From5 {
                        value = "en"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8016, 9080
                    ]

                    tag From6 {
                        value = "vd_meas_gs"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7944, 9136
                        hide_name = True
                        size = 81, 20
                    ]

                    tag Goto31 {
                        value = "f_Hz"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7568, 8664
                        hide_name = True
                    ]

                    tag From8 {
                        value = "w_grid_form"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7944, 9168
                        hide_name = True
                        size = 81, 20
                    ]

                    tag From11 {
                        value = "mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8256, 9456
                        hide_name = True
                        size = 81, 20
                    ]

                    tag From12 {
                        value = "en"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8264, 9480
                        hide_name = True
                    ]

                    tag From13 {
                        value = "vq_meas_gs"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8120, 9520
                        hide_name = True
                        size = 81, 20
                    ]

                    tag From15 {
                        value = "w_grid_form"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8120, 9552
                        hide_name = True
                        size = 81, 20
                    ]

                    tag From16 {
                        value = "mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8600, 8600
                        hide_name = True
                        size = 105, 20
                    ]

                    tag Goto32 {
                        value = "Iq_ref_grid_form"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8792, 9008
                        hide_name = True
                        size = 101, 20
                    ]

                    tag Goto33 {
                        value = "Id_ref_grid_form"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8800, 9408
                        hide_name = True
                        size = 113, 20
                    ]

                    tag From17 {
                        value = "Iq_ref_grid_form"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8600, 8640
                        hide_name = True
                        size = 109, 20
                    ]

                    tag From18 {
                        value = "Iq_ref_grid_follow"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8568, 8680
                        hide_name = True
                        size = 109, 20
                    ]

                    tag Goto34 {
                        value = "Id_ref_grid_follow"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8264, 8416
                        hide_name = True
                        size = 111, 20
                    ]

                    tag Goto35 {
                        value = "Iq_ref_grid_follow"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8264, 8448
                        hide_name = True
                        size = 111, 20
                    ]

                    tag From19 {
                        value = "mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8616, 8376
                        hide_name = True
                        size = 105, 20
                    ]

                    tag From20 {
                        value = "Id_ref_grid_form"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8568, 8416
                        hide_name = True
                        size = 109, 20
                    ]

                    tag From21 {
                        value = "Id_ref_grid_follow"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8576, 8464
                        hide_name = True
                        size = 109, 20
                    ]

                    tag From22 {
                        value = "mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7712, 8496
                        hide_name = True
                        size = 105, 20
                    ]

                    tag Goto36 {
                        value = "w_grid_form"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7536, 9224
                        hide_name = True
                        size = 100, 20
                    ]

                    tag From23 {
                        value = "vd_meas_gs"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8328, 9312
                        hide_name = True
                        size = 81, 20
                    ]

                    tag Goto37 {
                        value = "vd_ref"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7496, 9304
                        hide_name = True
                        size = 100, 20
                    ]

                    tag From24 {
                        value = "vd_ref"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7960, 9296
                        hide_name = True
                    ]

                    junction Junction2 sp
                    [
                        position = 8960, 8576
                    ]

                    junction Junction1 sp
                    [
                        position = 8992, 8368
                    ]

                    junction Junction25 sp
                    [
                        position = 7944, 8136
                    ]

                    junction Junction26 sp
                    [
                        position = 7920, 8184
                    ]

                    junction Junction30 sp
                    [
                        position = 7504, 8608
                    ]

                    junction Junction35 sp
                    [
                        position = 7504, 8576
                    ]

                    junction Junction36 sp
                    [
                        position = 7888, 8552
                    ]

                    junction Junction40 sp
                    [
                        position = 9232, 8448
                    ]

                    junction Junction41 sp
                    [
                        position = 9256, 8672
                    ]

                    junction Junction44 sp
                    [
                        position = 8264, 8976
                    ]

                    junction Junction45 sp
                    [
                        position = 8248, 8944
                    ]

                    comment Comment3 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt;">stop load if f_Hz is out of bounds in grid following mode</span></p></body></html> ENDCOMMENT 
                    [
                        position = 7464, 8424
                    ]

                    comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">delay enable to allow PLL to settle</p></body></html> ENDCOMMENT 
                    [
                        position = 7688, 8632
                    ]

                    comment Comment2 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt;">Adds offsets to compensate for the </span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt;">P, Q errors caused by delay introduced</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt;">by the R-C filter of the current source</span> </p></body></html> ENDCOMMENT 
                    [
                        position = 7472, 8056
                    ]

                    comment Comment4 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Cf = 1e-6</p></body></html> ENDCOMMENT 
                    [
                        position = 8000, 9224
                    ]

                    comment Comment5 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt;">A slight error offset requires to add</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt;">10% of the d-axis ref voltage </span></p></body></html> ENDCOMMENT 
                    [
                        position = 7824, 8768
                    ]

                    comment Comment6 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt;">A slight error offset requires to remove</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt;">10% of the q-axis ref voltage </span> </p></body></html> ENDCOMMENT 
                    [
                        position = 7896, 9360
                    ]

                    comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt;">compensate reactive pwr introduced by</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt;">capacitor Cf</span></p></body></html> ENDCOMMENT 
                    [
                        position = 7336, 8264
                    ]

                    connect "Signal switch2.in2" Junction1 as Connection557
                    connect calc_current.Vd Gain13.out as Connection508
                    connect Constant2.out Junction2 as Connection560
                    connect Gain10.in Vpk as Connection514
                    connect Junction26 Gain14.out as Connection697
                    [
                        breakpoints = 7920, 8184; 7928, 8184; 7912, 8184
                    ]
                    connect Limit2.out calc_current.Vpk as Connection549
                    [
                        breakpoints = 8048, 8088; 8144, 8088
                    ]
                    connect Limit2.in Gain10.out as Connection495
                    connect Junction1 "Signal switch1.in2" as Connection556
                    connect Limit_type Termination1.in as Connection699
                    connect Goto3 Junction26 as Connection696
                    connect Pref "C function2.Pref" as Connection678
                    connect calc_current.Vq Gain9.out as Connection492
                    connect "Signal switch2.in1" Junction2 as Connection562
                    connect Junction2 "Signal switch1.in1" as Connection561
                    connect "C function2.Qref_actual" Gain14.in as Connection702
                    [
                        breakpoints = 7808, 8184; 7808, 8184
                    ]
                    connect Gain13.in Vd as Connection703
                    [
                        breakpoints = 7848, 7992
                    ]
                    connect Goto2 Junction25 as Connection693
                    connect Junction25 Gain15.out as Connection694
                    [
                        breakpoints = 7944, 8136; 7944, 8136
                    ]
                    connect calc_current.Q Junction26 as Connection698
                    connect Gain9.in Vq as Connection700
                    [
                        breakpoints = 7816, 8040
                    ]
                    connect calc_current.P Junction25 as Connection695
                    connect "C function1.en" "C function3.en_out" as Connection688
                    connect Gain15.in "C function2.Pref_actual" as Connection701
                    [
                        breakpoints = 7792, 8136
                    ]
                    connect From1 Junction1 as Connection555
                    connect Limit3.out Gain11.in as Connection712
                    connect Gain11.out "Signal switch1.in" as Connection713
                    connect Limit4.out Gain16.in as Connection720
                    connect Gain16.out "Signal switch2.in" as Connection721
                    connect vq_ref Goto4 as Connection726
                    connect id_gs Goto26 as Connection727
                    connect iq_gs Goto27 as Connection728
                    connect vd_gs Goto28 as Connection729
                    connect vq_gs Goto29 as Connection730
                    connect mode Goto30 as Connection731
                    connect From4 "Logical operator1.in" as Connection742
                    connect "Logical operator1.in1" From5 as Connection743
                    connect "Logical operator1.out" pid_controller.Enable as Connection744
                    connect "C function3.f_Hz" Junction30 as Connection749
                    connect Junction30 f_Hz as Connection750
                    connect Goto31 Junction30 as Connection751
                    connect Constant4.out Product15.in2 as Connection2079
                    connect From6 Product15.in as Connection2080
                    connect Product15.out Gain20.in as Connection2082
                    connect From3 Gain21.in as Connection2083
                    connect Gain20.out pid_controller.w_Cf_vd as Connection2085
                    [
                        breakpoints = 8224, 9104; 8424, 9104; 8424, 9104; 8504, 9104
                    ]
                    connect From11 "Logical operator2.in" as Connection2087
                    connect "Logical operator2.in1" From12 as Connection2088
                    connect Constant6.out Product16.in2 as Connection2091
                    connect From13 Product16.in as Connection2092
                    connect Product16.out Gain25.in as Connection2094
                    connect "Logical operator2.out" pid_controller1.Enable as Connection2125
                    connect Gain25.out Gain2.in as Connection2127
                    connect Gain2.out pid_controller1.w_Cf_vq as Connection2128
                    [
                        breakpoints = 8488, 9552; 8488, 9504
                    ]
                    connect From16 "Signal switch3.in2" as Connection2129
                    connect "Signal switch3.out" Limit4.in as Connection2130
                    connect From17 "Signal switch3.in" as Connection2133
                    connect Goto34 calc_current.Id as Connection2135
                    connect calc_current.Iq Goto35 as Connection2136
                    connect From19 "Signal switch4.in2" as Connection2137
                    connect "Signal switch4.out" Limit3.in as Connection2140
                    connect From22 "Signal switch5.in2" as Connection2141
                    connect "C function3.en" Junction35 as Connection2142
                    connect Junction35 en as Connection2143
                    connect "Signal switch5.in" Junction35 as Connection2144
                    connect "Signal switch5.in1" "C function1.en_out" as Connection2150
                    connect Goto1 Junction36 as Connection2151
                    connect Junction36 "Signal switch5.out" as Connection2152
                    connect Active.in Junction36 as Connection2153
                    connect w_grid_form Goto36 as Connection2154
                    connect From8 Product15.in1 as Connection2155
                    connect From15 Product16.in1 as Connection2156
                    connect Gain17.out pid_controller.ref as Connection2163
                    connect "pid_controller1.Id*" Goto33 as Connection2168
                    connect "pid_controller.Iq*" Goto32 as Connection2173
                    connect Id_.in Junction40 as Connection2186
                    [
                        breakpoints = 9232, 8400
                    ]
                    connect Junction40 Id as Connection2187
                    [
                        breakpoints = 9232, 8448; 9232, 8448; 9232, 8456; 9232, 8456
                    ]
                    connect "Signal switch1.out" Junction40 as Connection2188
                    [
                        breakpoints = 9064, 8448; 9232, 8448
                    ]
                    connect Iq_.in Junction41 as Connection2189
                    connect Junction41 Iq as Connection2190
                    [
                        breakpoints = 9256, 8672
                    ]
                    connect "Signal switch2.out" Junction41 as Connection2191
                    connect pid_controller.fdbck Gain21.out as Connection2198
                    [
                        breakpoints = 8416, 8912
                    ]
                    connect Gain26.out pid_controller1.fdbck as Connection2200
                    connect vd_ref Goto37 as Connection2205
                    connect Gain27.out pid_controller1.ref as Connection2208
                    connect From23 Gain26.in as Connection2215
                    connect pid_controller.ki Junction44 as Connection2227
                    [
                        breakpoints = 8480, 8976
                    ]
                    connect Junction44 pid_controller1.ki as Connection2228
                    [
                        breakpoints = 8264, 8976; 8264, 8976; 8264, 8976; 8264, 9392
                    ]
                    connect Ki_grid_forming_.out Junction44 as Connection2229
                    connect pid_controller.kp Junction45 as Connection2231
                    [
                        breakpoints = 8456, 8944
                    ]
                    connect Junction45 pid_controller1.kp as Connection2232
                    [
                        breakpoints = 8248, 8944; 8248, 8944
                    ]
                    connect Kp_grid_forming_.out Junction45 as Connection2233
                    connect From21 "Rate Limiter1.in" as Connection2246
                    connect "Rate Limiter1.out" "Signal switch4.in1" as Connection2247
                    connect From20 "Signal switch4.in" as Connection2248
                    connect From18 "Rate Limiter3.in" as Connection2249
                    connect "Rate Limiter3.out" "Signal switch3.in1" as Connection2250
                    connect From2 Gain17.in as Connection2251
                    connect Gain27.in From24 as Connection2252
                    [
                        breakpoints = 8400, 9256; 8008, 9256; 8008, 9296
                    ]
                    connect Constant3.out pid_controller.iq_meas_gs as Connection2253
                    connect pid_controller1.id_meas_gs Constant7.out as Connection2254
                    [
                        breakpoints = 8432, 9592
                    ]
                    connect Constant8.out Sum1.in1 as Connection2255
                    connect Qref Sum1.in as Connection2256
                    connect Sum1.out "C function2.Qref" as Connection2257

                    mask {
                        description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Calculate RMS current</p></body></html>"

                        Vnom {
                            label = "Nominal Voltage"
                            widget = edit
                            type = generic
                            default_value = "Vnom"
                            unit = "V"
                        }

                        Sb {
                            label = "Nominal power"
                            widget = edit
                            type = generic
                            default_value = "Sb"
                            unit = "VA"
                        }

                        powerRate {
                            label = "Power rate change"
                            widget = edit
                            type = generic
                            default_value = "powerRate"
                            unit = "VA/s"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE

                        CODE pre_compile
                            # HEADER START
                            Vnom = mdl.get_property_value(mdl.prop(item_handle, "Vnom"))
                            Sb = mdl.get_property_value(mdl.prop(item_handle, "Sb"))
                            powerRate = mdl.get_property_value(mdl.prop(item_handle, "powerRate"))
                            # HEADER STOP
                            Ib = (Sb/Vnom)*((2.0/3.0)**0.5)
                            I_Rate = (powerRate/Vnom)*((2.0/3.0)**0.5)
                        ENDCODE

                        CODE init
                        ENDCODE
                    }
                }
                [
                    position = 7232, 7288
                    size = 80, 536
                ]

                component "core/dq to abc" "dq to abc1" {
                    execution_rate = "inherit"
                }
                [
                    position = 7616, 7696
                    size = 48, 80
                ]

                component pas_resistor R {
                    resistance = "R"
                }
                [
                    position = 6824, 8376
                    rotation = left
                ]

                component "core/Current Measurement" Ic {
                    addr = "16"
                    execution_rate = "execution_rate"
                    sig_output = "True"
                }
                [
                    position = 7824, 8304
                    scale = -1, 1
                    size = 64, 32
                ]

                component src_constant Constant1 {
                    execution_rate = "execution_rate"
                    value = "0"
                }
                [
                    position = 7480, 7712
                    hide_name = True
                ]

                component "core/Three phase PLL" "Three phase PLL1" {
                    enable_pk = "True"
                    enable_sin = "False"
                    enable_zero = "False"
                    low_lim = "-100*2*np.pi"
                    rate_high = "100"
                    rate_low = "-100"
                    up_lim = "100*2*np.pi"
                }
                [
                    position = 6696, 7720
                    size = 64, 128
                ]

                component gen_gain Gain1 {
                    gain = "1/(2**0.5)"
                }
                [
                    position = 6352, 7944
                    hide_name = True
                ]

                component "core/Current Measurement" Ia {
                    addr = "14"
                    execution_rate = "execution_rate"
                    sig_output = "True"
                }
                [
                    position = 7832, 8104
                    scale = -1, 1
                    size = 64, 32
                ]

                component gen_probe Q {
                }
                [
                    position = 7640, 7976
                    scale = 1, -1
                ]

                component gen_probe S {
                }
                [
                    position = 7640, 7912
                    scale = 1, -1
                ]

                component "core/Current Measurement" Ib {
                    addr = "15"
                    execution_rate = "execution_rate"
                    sig_output = "True"
                }
                [
                    position = 7832, 8200
                    scale = -1, 1
                    size = 64, 32
                ]

                component gen_probe f {
                }
                [
                    position = 7608, 7792
                    scale = 1, -1
                ]

                component Subsystem Csp5 {
                    layout = dynamic
                    component pas_capacitor C {
                        capacitance = "Cfilter"
                    }
                    [
                        position = 8000, 8224
                        rotation = right
                    ]

                    component pas_resistor R {
                        resistance = "Rfilter"
                    }
                    [
                        position = 7904, 8168
                    ]

                    component gen_probe SP_value {
                    }
                    [
                        position = 7776, 8312
                    ]

                    component "core/Signal Controlled Voltage Source" Vsp {
                    }
                    [
                        position = 7808, 8224
                        rotation = left
                        scale = 1, -1
                        size = 64, 32
                    ]

                    component "core/Voltage Measurement" Vc {
                    }
                    [
                        position = 8064, 8224
                        rotation = right
                        size = 64, 32
                    ]

                    component "core/Voltage Controlled Current Source" VCCS {
                        control_gain = "1"
                        control_label = "Variable_Load.Csp1.Vc"
                    }
                    [
                        position = 8184, 8224
                        rotation = right
                        size = 64, 48
                    ]

                    port P_node {
                        position = left:1
                        kind = pe
                    }
                    [
                        position = 8344, 8168
                        rotation = down
                    ]

                    port SP_in {
                        position = top:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7728, 8176
                        rotation = right
                        scale = -1, 1
                    ]

                    port n_node {
                        position = right:1
                        kind = pe
                    }
                    [
                        position = 8344, 8288
                        rotation = down
                    ]

                    junction Junction3 pe
                    [
                        position = 8064, 8288
                    ]

                    junction Junction4 pe
                    [
                        position = 8000, 8168
                    ]

                    junction Junction5 sp
                    [
                        position = 7752, 8224
                    ]

                    junction Junction1 pe
                    [
                        position = 8000, 8288
                    ]

                    junction Junction2 pe
                    [
                        position = 8184, 8288
                    ]

                    connect Junction3 Junction2 as Connection15
                    connect SP_in Junction5 as Connection24
                    connect Junction1 Vsp.n_node as Connection10
                    connect Junction4 R.n_node as Connection18
                    connect C.p_node Junction4 as Connection17
                    connect Junction1 Junction3 as Connection14
                    connect Junction5 Vsp.in as Connection25
                    connect C.n_node Junction1 as Connection9
                    connect R.p_node Vsp.p_node as Connection4
                    connect VCCS.p_node P_node as Connection7
                    connect SP_value.in Junction5 as Connection26
                    connect Vc.n_node Junction3 as Connection16
                    connect Vc.p_node Junction4 as Connection19
                    connect VCCS.n_node Junction2 as Connection11
                    connect Junction2 n_node as Connection12

                    mask {
                        description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Signal processing source with low pass filter.</p></body></html>"

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE

                        CODE init
                        ENDCODE

                        CODE pre_compile
                            comp_handle = mdl.get_sub_level_handle(item_handle)
                            vccs = mdl.get_item("VCCS", parent=comp_handle, item_type="component")
                            vc = mdl.get_item("Vc", parent=comp_handle, item_type="component")
                            mdl.set_property_value(mdl.prop(vccs, "control_label"), mdl.get_fqn(vc))
                            SP_value = mdl.get_item("SP_value", parent=comp_handle, item_type="component")
                            Ts = mdl.get_property_value(mdl.prop(SP_value, "execution_rate"))
                            
                            Rfilter = 1.0
                            fs = 1.0/Ts
                            ws = 2.0*np.pi*fs/2.0
                            Cfilter = 1/(0.5*ws*Rfilter)
                            
                            #mdl.info('Cfilter is '+str(Cfilter))
                        ENDCODE
                    }
                }
                [
                    position = 6688, 8104
                    scale = -1, 1
                    size = 48, 48
                ]

                component gen_probe Vt {
                }
                [
                    position = 7544, 7840
                    scale = 1, -1
                ]

                component pas_resistor R2 {
                    resistance = "R"
                }
                [
                    position = 6936, 8376
                    rotation = left
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "6"
                }
                [
                    position = 6448, 7640
                    rotation = left
                    hide_name = True
                ]

                component "core/Voltage Measurement" Vc {
                    addr = "11"
                    execution_rate = "execution_rate"
                    sig_output = "True"
                }
                [
                    position = 7160, 8448
                    rotation = right
                    size = 64, 32
                ]

                component gen_probe Pf {
                }
                [
                    position = 7624, 7848
                    scale = 1, -1
                ]

                component gen_probe wt {
                }
                [
                    position = 7112, 7832
                    scale = 1, -1
                ]

                component Subsystem S_meas {
                    layout = dynamic
                    component gen_terminator Termination2 {
                    }
                    [
                        position = 8152, 8120
                        rotation = left
                        hide_name = True
                    ]

                    component gen_terminator Termination1 {
                    }
                    [
                        position = 8152, 8344
                        rotation = right
                        hide_name = True
                    ]

                    component gen_PQ_transform "Power Meter1" {
                        filter_cutoff_Hz = "5.0"
                        filter_order = "second order"
                    }
                    [
                        position = 8072, 8232
                    ]

                    port Ic {
                        label = "Ic"
                        position = right:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7936, 8376
                        rotation = left
                        scale = -1, 1
                    ]

                    port Q {
                        label = "Q"
                        position = left:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8208, 8120
                        rotation = left
                    ]

                    port pf {
                        label = "pf"
                        position = left:4
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8256, 8344
                        rotation = right
                    ]

                    port Va {
                        label = "Va"
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7912, 8120
                        rotation = right
                        scale = -1, 1
                    ]

                    port Ib {
                        label = "Ib"
                        position = right:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7976, 8344
                        rotation = left
                        scale = -1, 1
                    ]

                    port P {
                        label = "P"
                        position = left:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8256, 8120
                        rotation = left
                    ]

                    port Vb {
                        label = "Vb"
                        position = right:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7960, 8144
                        rotation = right
                        scale = -1, 1
                    ]

                    port Ia {
                        label = "Ia"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8016, 8312
                        rotation = left
                        scale = -1, 1
                    ]

                    port Vc {
                        label = "Vc"
                        position = right:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8000, 8176
                        rotation = right
                        scale = -1, 1
                    ]

                    port S {
                        label = "S"
                        position = left:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8208, 8344
                        rotation = right
                    ]

                    connect "Power Meter1.ib" Ib as Connection3
                    connect "Power Meter1.k_factor" pf as Connection10
                    connect "Power Meter1.ic" Ic as Connection4
                    connect Termination2.in "Power Meter1.Pac" as Connection12
                    connect P "Power Meter1.Pdc" as Connection1
                    connect "Power Meter1.vb" Vb as Connection8
                    connect "Power Meter1.ia" Ia as Connection1039
                    [
                        breakpoints = 8016, 8240; 8016, 8240; 8016, 8240; 8016, 8288
                    ]
                    connect "Power Meter1.vc" Vc as Connection9
                    connect "Power Meter1.va" Va as Connection7
                    connect "Power Meter1.apparent" S as Connection6
                    connect "Power Meter1.Qdc" Q as Connection5
                    connect Termination1.in "Power Meter1.Qac" as Connection11
                }
                [
                    position = 6264, 7760
                    scale = -1, 1
                    size = 96, 224
                ]

                component Subsystem Csp7 {
                    layout = dynamic
                    component pas_capacitor C {
                        capacitance = "Cfilter"
                    }
                    [
                        position = 8000, 8224
                        rotation = right
                    ]

                    component pas_resistor R {
                        resistance = "Rfilter"
                    }
                    [
                        position = 7904, 8168
                    ]

                    component "core/Voltage Measurement" Vc {
                    }
                    [
                        position = 8064, 8224
                        rotation = right
                        size = 64, 32
                    ]

                    component "core/Voltage Controlled Current Source" VCCS {
                        control_gain = "1"
                        control_label = "Variable_Load.Csp1.Vc"
                    }
                    [
                        position = 8184, 8224
                        rotation = right
                        size = 64, 48
                    ]

                    component "core/Signal Controlled Voltage Source" Vsp {
                    }
                    [
                        position = 7808, 8224
                        rotation = left
                        scale = 1, -1
                        size = 64, 32
                    ]

                    component gen_probe SP_value {
                    }
                    [
                        position = 7776, 8312
                    ]

                    port SP_in {
                        position = top:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7728, 8176
                        rotation = right
                        scale = -1, 1
                    ]

                    port n_node {
                        position = right:1
                        kind = pe
                    }
                    [
                        position = 8344, 8288
                        rotation = down
                    ]

                    port P_node {
                        position = left:1
                        kind = pe
                    }
                    [
                        position = 8344, 8168
                        rotation = down
                    ]

                    junction Junction3 pe
                    [
                        position = 8064, 8288
                    ]

                    junction Junction5 sp
                    [
                        position = 7752, 8224
                    ]

                    junction Junction4 pe
                    [
                        position = 8000, 8168
                    ]

                    junction Junction1 pe
                    [
                        position = 8000, 8288
                    ]

                    junction Junction2 pe
                    [
                        position = 8184, 8288
                    ]

                    connect Vc.p_node Junction4 as Connection19
                    connect C.n_node Junction1 as Connection9
                    connect Junction5 Vsp.in as Connection25
                    connect R.p_node Vsp.p_node as Connection4
                    connect Vc.n_node Junction3 as Connection16
                    connect VCCS.n_node Junction2 as Connection11
                    connect SP_value.in Junction5 as Connection26
                    connect Junction4 R.n_node as Connection18
                    connect C.p_node Junction4 as Connection17
                    connect Junction2 n_node as Connection12
                    connect Junction1 Junction3 as Connection14
                    connect VCCS.p_node P_node as Connection7
                    connect SP_in Junction5 as Connection24
                    connect Junction1 Vsp.n_node as Connection10
                    connect Junction3 Junction2 as Connection15

                    mask {
                        description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">Signal processing source with low pass filter.</span></p></body></html>"

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE

                        CODE init
                        ENDCODE

                        CODE pre_compile
                            comp_handle = mdl.get_sub_level_handle(item_handle)
                            vccs = mdl.get_item("VCCS", parent=comp_handle, item_type="component")
                            vc = mdl.get_item("Vc", parent=comp_handle, item_type="component")
                            mdl.set_property_value(mdl.prop(vccs, "control_label"), mdl.get_fqn(vc))
                            SP_value = mdl.get_item("SP_value", parent=comp_handle, item_type="component")
                            Ts = mdl.get_property_value(mdl.prop(SP_value, "execution_rate"))
                            
                            Rfilter = 1.0
                            fs = 1.0/Ts
                            ws = 2.0*np.pi*fs/2.0
                            Cfilter = 1/(0.5*ws*Rfilter)
                        ENDCODE
                    }
                }
                [
                    position = 6688, 8200
                    scale = -1, 1
                    size = 48, 48
                ]

                component gen_sum Sum1 {
                }
                [
                    position = 6896, 7752
                    hide_name = True
                ]

                component src_constant Constant2 {
                    execution_rate = "inherit"
                    value = "-np.pi/2"
                }
                [
                    position = 6800, 7824
                    hide_name = True
                ]

                component gen_c_function w_ref_grid_forming {
                    global_variables = "real wt_ref_grid_forming_var;int trigger;int enable_vf_control_k1;int start_integrator;real pi_on_2;real f_droop_Hz;real one_on_2pi;real dP;real two_pi;"
                    in_terminal_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit"
                    in_terminal_dimensions_str = "wt_PLL inherit;enable_vf_control inherit;w_ref_grid_forming inherit;f_droop_enable inherit;f_droop_gain inherit;P_kW inherit;P_nominal_kW inherit;f_nominal_Hz inherit"
                    in_terminal_labels = "[(\'wt_PLL\', True), (\'enable_vf_control\', True), (\'w_ref_grid_forming\', True), (\'f_droop_enable\', True), (\'f_droop_gain\', True), (\'P_kW\', True), (\'P_nominal_kW\', True), (\'f_nominal_Hz\', True)]"
                    in_terminal_properties = "real wt_PLL;real enable_vf_control;real w_ref_grid_forming;inherit f_droop_enable;inherit f_droop_gain;inherit P_kW;inherit P_nominal_kW;inherit f_nominal_Hz;"
                    init_fnc = "/*Begin code section*/
enable_vf_control_k1 = 0;
wt_ref_grid_forming_var = 0;
pi_on_2 = 1.570796326794897;
one_on_2pi = 1.591549430918954e-01;
two_pi = 6.283185307179586;
/*End code section*/"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit;inherit"
                    out_terminal_dimensions_str = "wt_ref_grid_forming inherit;f_final_Hz inherit"
                    out_terminal_labels = "[(\'wt_ref_grid_forming\', True), (\'f_final_Hz\', True)]"
                    out_terminal_properties = "real wt_ref_grid_forming;inherit f_final_Hz;"
                    output_fnc = "/*Begin code section*/
wt_ref_grid_forming = wt_ref_grid_forming_var;
//angle measurement
/*End code section*/"
                    update_fnc = "/*Begin code section*/
//compute drooped freq. Droop interpreted as: 10% freq droop => a 100% change in power will cause 10% freq. change
if (f_droop_enable > 0.5)
    dP =  -P_kW;
else
    dP = 0;

f_droop_Hz = dP/P_nominal_kW * f_droop_gain * f_nominal_Hz;
f_final_Hz = f_droop_Hz + w_ref_grid_forming*one_on_2pi;
if (f_final_Hz > 100.0)
{
    f_final_Hz = 100.0;
}
if (f_final_Hz < 40.0)
{
    f_final_Hz = 40.0;
}

trigger = enable_vf_control - enable_vf_control_k1;
enable_vf_control_k1 = enable_vf_control;

if (trigger > 0) //if vf control has been enabled
{
    wt_ref_grid_forming_var = wt_PLL; //take over the previous angle from the PLL
    start_integrator = 1;
}
if (trigger < 0) //if vf control has been disabled.
{
    start_integrator = 0;
}

if (start_integrator == 1)
//if (enable_vf_control > 0.5)
{
    wt_ref_grid_forming_var = wt_ref_grid_forming_var + (f_final_Hz*two_pi)*execution_rate;
    if (wt_ref_grid_forming_var >= 6.283185307179586)
    {
        wt_ref_grid_forming_var = wt_ref_grid_forming_var - 6.283185307179586; //rollover
    }
}
/*End code section*/"
                }
                [
                    position = 8344, 7768
                    size = 176, 272
                ]

                component "core/abc to dq" "abc to dq1" {
                }
                [
                    position = 7608, 7432
                    size = 48, 80
                ]

                component gen_terminator Termination2 {
                }
                [
                    position = 7712, 7464
                ]

                component "core/abc to dq" "abc to dq2" {
                }
                [
                    position = 8048, 7424
                    size = 48, 80
                ]

                component gen_terminator Termination3 {
                }
                [
                    position = 8128, 7456
                ]

                component pas_capacitor C1 {
                    capacitance = "Cf"
                }
                [
                    position = 7360, 8424
                    rotation = right
                ]

                component pas_capacitor C2 {
                    capacitance = "Cf"
                }
                [
                    position = 7432, 8424
                    rotation = right
                ]

                component pas_capacitor C3 {
                    capacitance = "Cf"
                }
                [
                    position = 7504, 8424
                    rotation = right
                ]

                component sys_signal_switch "Signal switch1" {
                    threshold = "0.5"
                }
                [
                    position = 6928, 7968
                    hide_name = True
                ]

                component src_scada_input f_ref {
                    def_value = "60.0"
                    execution_rate = "execution_rate"
                    unit = ""
                }
                [
                    position = 7928, 7720
                ]

                component gen_gain Gain3 {
                    gain = "1e-3"
                }
                [
                    position = 8088, 7816
                    hide_name = True
                ]

                component src_constant Constant4 {
                    execution_rate = "execution_rate"
                    value = "Sb*1e-3"
                }
                [
                    position = 8104, 7848
                    hide_name = True
                ]

                component src_constant Constant5 {
                    execution_rate = "execution_rate"
                    value = "60.0"
                }
                [
                    position = 8184, 7880
                    hide_name = True
                ]

                component src_scada_input vq_ref {
                    def_value = "120*np.sqrt(2.0)"
                    execution_rate = "execution_rate"
                    unit = "Vpk"
                }
                [
                    position = 8488, 8016
                ]

                component gen_probe vd_meas {
                }
                [
                    position = 8176, 7264
                    scale = 1, -1
                ]

                component gen_probe vq_meas {
                }
                [
                    position = 8176, 7328
                    scale = 1, -1
                ]

                component gen_probe id_meas {
                }
                [
                    position = 7752, 7344
                    scale = 1, -1
                ]

                component gen_probe iq_meas {
                }
                [
                    position = 7752, 7288
                    scale = 1, -1
                ]

                component src_scada_input ph_offset_grid_forming {
                    execution_rate = "execution_rate"
                    max = "180.0"
                    min = "-180.0"
                    unit = "deg"
                }
                [
                    position = 8512, 7720
                ]

                component gen_sum Sum2 {
                }
                [
                    position = 8712, 7672
                    hide_name = True
                ]

                component gen_gain Gain4 {
                    gain = "np.pi/180.0"
                }
                [
                    position = 8608, 7720
                    hide_name = True
                ]

                component gen_gain Gain5 {
                    gain = "-1"
                }
                [
                    position = 8152, 7816
                    hide_name = True
                ]

                component gen_c_function v_droop {
                    global_variables = "real dQ;real v_droop_LLrms_var;real Q_nominal_kVAr_var;real v_nominal_LLrms_var;real v_droop_gain_var;"
                    in_terminal_dimensions = "inherit;inherit;inherit;inherit;inherit"
                    in_terminal_dimensions_str = "v_droop_gain inherit;v_nominal_LLrms inherit;Q_nominal_kVAr inherit;v_droop_enable inherit;Q_kVAr inherit"
                    in_terminal_labels = "[(\'v_droop_gain\', True), (\'v_nominal_LLrms\', True), (\'Q_nominal_kVAr\', True), (\'v_droop_enable\', True), (\'Q_kVAr\', True)]"
                    in_terminal_properties = "inherit v_droop_gain;inherit v_nominal_LLrms;inherit Q_nominal_kVAr;inherit v_droop_enable;inherit Q_kVAr;"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "v_droop_LLrms inherit"
                    out_terminal_labels = "[(\'v_droop_LLrms\', True)]"
                    out_terminal_properties = "inherit v_droop_LLrms;"
                    output_fnc = "/*Begin code section*/
v_droop_LLrms = v_droop_LLrms_var;
/*End code section*/"
                    update_fnc = "/*Begin code section*/
v_nominal_LLrms_var = v_nominal_LLrms;
if (v_nominal_LLrms_var < 1.0)
{
    v_nominal_LLrms_var = 1.0; //prevent div by 0
}

v_droop_gain_var = v_droop_gain;
if (v_droop_gain_var < 1e-3)
{
    v_droop_gain_var = 1e-3; //prevent div by 0
}

Q_nominal_kVAr_var = Q_nominal_kVAr;
if ((Q_nominal_kVAr_var < 1e-3) && (Q_nominal_kVAr_var >= 0))
{
    Q_nominal_kVAr_var = 1e-3; //prevent div by 0
}
else if ((Q_nominal_kVAr_var > -1e-3) && (Q_nominal_kVAr_var < 0))
{
    Q_nominal_kVAr_var = -1e-3; //prevent div by 0
}

//voltage droop in standalone (or grid forming mode)
if (v_droop_enable > 0.5)
    dQ =  -Q_kVAr;
else
    dQ = 0;
v_droop_LLrms_var = (dQ/Q_nominal_kVAr_var) * v_droop_gain_var * v_nominal_LLrms_var;
/*End code section*/"
                }
                [
                    position = 8352, 8080
                    size = 176, 280
                ]

                component src_constant Constant6 {
                    execution_rate = "execution_rate"
                    value = "Vnom"
                }
                [
                    position = 8160, 8024
                    hide_name = True
                ]

                component src_constant Constant7 {
                    execution_rate = "execution_rate"
                    value = "Sb*1e-3"
                }
                [
                    position = 8160, 8080
                    hide_name = True
                ]

                component gen_gain Gain6 {
                    gain = "1e-3"
                }
                [
                    position = 8112, 8192
                    hide_name = True
                ]

                component gen_gain Gain7 {
                    gain = "-1"
                }
                [
                    position = 8176, 8192
                    hide_name = True
                ]

                component gen_sum Sum3 {
                }
                [
                    position = 8680, 8064
                    hide_name = True
                ]

                component gen_gain "rms->dq" {
                    gain = "np.sqrt(2.0/3.0)"
                }
                [
                    position = 8496, 8080
                ]

                component src_scada_input vd_ref {
                    execution_rate = "execution_rate"
                    unit = "Vpk"
                }
                [
                    position = 8496, 8160
                ]

                component gen_probe v_droop_q {
                }
                [
                    position = 8632, 7968
                    scale = 1, -1
                ]

                component gen_gain Gain8 {
                    gain = "2.0*np.pi"
                }
                [
                    position = 8488, 7880
                    hide_name = True
                ]

                component gen_gain Gain9 {
                    gain = "2.0*np.pi"
                }
                [
                    position = 8016, 7720
                    hide_name = True
                ]

                component "core/Voltage Measurement" Vab {
                    addr = "7"
                    execution_rate = "execution_rate"
                }
                [
                    position = 7264, 8144
                    rotation = right
                    size = 64, 32
                ]

                component "core/Voltage Measurement" Vdc {
                    execution_rate = "execution_rate"
                    feed_forward = "true"
                    sig_output = "True"
                }
                [
                    position = 6104, 8216
                    rotation = right
                    size = 64, 32
                ]

                component "core/Signal Controlled Current Source" Isp1 {
                }
                [
                    position = 6416, 8208
                    rotation = left
                    size = 64, 32
                ]

                component "core/Current Measurement" Idc {
                    addr = "14"
                    execution_rate = "execution_rate"
                }
                [
                    position = 6320, 8112
                    size = 64, 32
                ]

                component gen_product Product1 {
                    signs = "*/"
                }
                [
                    position = 6304, 8208
                    hide_name = True
                ]

                component gen_limiter Limit1 {
                    lower_limit = "[\'1\']"
                }
                [
                    position = 6168, 8216
                    hide_name = True
                ]

                component gen_gain Gain10 {
                    gain = "-1"
                }
                [
                    position = 6224, 8168
                    hide_name = True
                ]

                component src_constant Constant8 {
                    execution_rate = "execution_rate"
                    value = "0"
                }
                [
                    position = 8160, 7752
                    hide_name = True
                ]

                component src_constant Constant9 {
                    execution_rate = "execution_rate"
                    value = "0"
                }
                [
                    position = 8160, 7968
                    hide_name = True
                ]

                component "core/Current RMS" Irms1 {
                    execution_rate = "execution_rate"
                }
                [
                    position = 7728, 8104
                    scale = -1, 1
                    size = 64, 32
                ]

                component pas_resistor R3 {
                    resistance = "rLf"
                }
                [
                    position = 7600, 8104
                ]

                component pas_inductor L1 {
                    inductance = "Lf"
                }
                [
                    position = 7504, 8104
                ]

                component pas_resistor R4 {
                    resistance = "rLf"
                }
                [
                    position = 7632, 8200
                ]

                component pas_inductor L2 {
                    inductance = "Lf"
                }
                [
                    position = 7536, 8200
                ]

                component pas_resistor R5 {
                    resistance = "rLf"
                }
                [
                    position = 7680, 8304
                ]

                component pas_inductor L3 {
                    inductance = "Lf"
                }
                [
                    position = 7584, 8304
                ]

                port C {
                    position = top:7
                    kind = pe
                    direction =  out
                }
                [
                    position = 7920, 8304
                    scale = -1, 1
                ]

                port Output {
                    position = left:11
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 6448, 7560
                    rotation = left
                ]

                port A {
                    position = top:1
                    kind = pe
                    direction =  out
                }
                [
                    position = 7920, 8104
                    scale = -1, 1
                ]

                port B {
                    position = top:2
                    kind = pe
                    direction =  out
                }
                [
                    position = 7920, 8200
                    scale = -1, 1
                ]

                port Input {
                    position = left:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 6472, 7984
                    rotation = right
                ]

                port DC+ {
                    position = bottom:1
                    kind = pe
                }
                [
                    position = 6008, 8112
                ]

                port DC- {
                    position = bottom:2
                    kind = pe
                }
                [
                    position = 6008, 8304
                ]

                tag From16 {
                    value = "Vc"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6128, 7744
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto6 {
                    value = "Ib"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7880, 8168
                    hide_name = True
                    scale = 1, -1
                    size = 60, 20
                ]

                tag Goto14 {
                    value = "Vd"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6816, 7592
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto23 {
                    value = "Output"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 6544, 7592
                    hide_name = True
                ]

                tag Goto5 {
                    value = "Ia"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7944, 8064
                    hide_name = True
                    scale = 1, -1
                    size = 60, 20
                ]

                tag Goto9 {
                    value = "Vb"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7256, 8408
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto18 {
                    value = "Id"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7360, 7536
                    hide_name = True
                    size = 60, 20
                ]

                tag From39 {
                    value = "Qref"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7048, 7176
                    hide_name = True
                    size = 60, 20
                ]

                tag From35 {
                    value = "freq"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6272, 7912
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto17 {
                    value = "Vq"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6896, 7648
                    hide_name = True
                    size = 60, 20
                ]

                tag From36 {
                    value = "Vpk"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6272, 7944
                    hide_name = True
                    size = 60, 20
                ]

                tag From32 {
                    value = "wt_final"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7488, 7752
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto10 {
                    value = "Vc"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7256, 8448
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto8 {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7256, 8368
                    hide_name = True
                    size = 60, 20
                ]

                tag From11 {
                    value = "Ic"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6128, 7840
                    hide_name = True
                    size = 60, 20
                ]

                tag From40 {
                    value = "Limit_type"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7048, 7208
                    hide_name = True
                    size = 60, 20
                ]

                tag From42 {
                    value = "en"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7048, 7272
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto7 {
                    value = "Ic"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7880, 8272
                    hide_name = True
                    scale = 1, -1
                    size = 60, 20
                ]

                tag From44 {
                    value = "freq"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7048, 7240
                    hide_name = True
                    size = 60, 20
                ]

                tag From34 {
                    value = "Ib_out"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6544, 8160
                    hide_name = True
                    size = 60, 20
                ]

                tag From33 {
                    value = "Ia_out"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6544, 8064
                    hide_name = True
                    size = 60, 20
                ]

                tag From13 {
                    value = "Ib"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6128, 7808
                    hide_name = True
                    size = 60, 20
                ]

                tag From15 {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6128, 7680
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto21 {
                    value = "Ib_out"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7712, 7696
                    hide_name = True
                    size = 60, 20
                ]

                tag From12 {
                    value = "Ia"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6128, 7776
                    hide_name = True
                    size = 60, 20
                ]

                tag From25 {
                    value = "Vc"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6576, 7792
                    hide_name = True
                    size = 60, 20
                ]

                tag From27 {
                    value = "Vd"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7056, 7048
                    hide_name = True
                    size = 60, 20
                ]

                tag From24 {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6576, 7664
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto19 {
                    value = "Iq"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7352, 7040
                    hide_name = True
                    size = 60, 20
                ]

                tag From31 {
                    value = "Iq"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7488, 7680
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto25 {
                    value = "Q"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6392, 7752
                    hide_name = True
                    size = 37, 20
                ]

                tag Goto16 {
                    value = "freq"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6896, 7680
                    hide_name = True
                    size = 60, 20
                ]

                tag From29 {
                    value = "Vpk"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7048, 7112
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto15 {
                    value = "Vpk"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6784, 7768
                    hide_name = True
                    size = 60, 20
                ]

                tag From14 {
                    value = "Vb"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6128, 7712
                    hide_name = True
                    size = 60, 20
                ]

                tag From23 {
                    value = "Vb"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6576, 7728
                    hide_name = True
                    size = 60, 20
                ]

                tag From43 {
                    value = "Pref"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7048, 7144
                    hide_name = True
                    size = 60, 20
                ]

                tag From30 {
                    value = "Id"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7488, 7648
                    hide_name = True
                    size = 60, 20
                ]

                tag From41 {
                    value = "Output"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7376, 7896
                    hide_name = True
                ]

                tag From28 {
                    value = "Vq"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7056, 7080
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto24 {
                    value = "P"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6392, 7704
                    hide_name = True
                    size = 37, 20
                ]

                tag Goto22 {
                    value = "Ia_out"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7712, 7648
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto20 {
                    value = "wt_PLL"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7032, 7752
                    hide_name = True
                    size = 60, 20
                ]

                tag From45 {
                    value = "Ic"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7480, 7456
                    hide_name = True
                    size = 60, 20
                ]

                tag From46 {
                    value = "Ib"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7480, 7424
                    hide_name = True
                    size = 60, 20
                ]

                tag From47 {
                    value = "Ia"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7480, 7392
                    hide_name = True
                    size = 60, 20
                ]

                tag From48 {
                    value = "wt_final"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7472, 7488
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto26 {
                    value = "id_meas_gs"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7752, 7408
                    hide_name = True
                    size = 100, 20
                ]

                tag Goto27 {
                    value = "iq_meas_gs"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7752, 7432
                    hide_name = True
                    size = 100, 20
                ]

                tag From49 {
                    value = "Vc"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7920, 7448
                    hide_name = True
                    size = 60, 20
                ]

                tag From50 {
                    value = "Vb"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7920, 7416
                    hide_name = True
                    size = 60, 20
                ]

                tag From51 {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7920, 7384
                    hide_name = True
                    size = 60, 20
                ]

                tag From52 {
                    value = "wt_final"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7912, 7480
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto28 {
                    value = "vd_meas_gs"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8168, 7400
                    hide_name = True
                    size = 100, 20
                ]

                tag Goto29 {
                    value = "vq_meas_gs"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8168, 7424
                    hide_name = True
                    size = 100, 20
                ]

                tag From53 {
                    value = "wt_PLL"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6832, 7984
                    hide_name = True
                    size = 60, 20
                ]

                tag From1 {
                    value = "mode"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 6824, 7912
                    hide_name = True
                ]

                tag From54 {
                    value = "wt_grid_forming"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6824, 7952
                    hide_name = True
                    size = 87, 20
                ]

                tag Goto30 {
                    value = "wt_final"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7032, 7968
                    hide_name = True
                    size = 60, 20
                ]

                tag From55 {
                    value = "wt_PLL"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8120, 7656
                    hide_name = True
                    size = 60, 20
                ]

                tag From56 {
                    value = "mode"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8120, 7688
                    hide_name = True
                    size = 60, 20
                ]

                tag From57 {
                    value = "P"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7952, 7816
                    hide_name = True
                    size = 35, 20
                ]

                tag Goto31 {
                    value = "wt_grid_forming"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8864, 7672
                    hide_name = True
                    size = 94, 20
                ]

                tag From58 {
                    value = "id_meas_gs"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7048, 7336
                    hide_name = True
                    size = 60, 20
                ]

                tag From59 {
                    value = "iq_meas_gs"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7048, 7368
                    hide_name = True
                    size = 60, 20
                ]

                tag From60 {
                    value = "vq_meas_gs"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7048, 7432
                    hide_name = True
                    size = 60, 20
                ]

                tag From61 {
                    value = "vd_meas_gs"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7048, 7400
                    hide_name = True
                    size = 60, 20
                ]

                tag From62 {
                    value = "mode"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7048, 7464
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto32 {
                    value = "w_ref_grid_form"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8592, 7880
                    hide_name = True
                    size = 81, 20
                ]

                tag From63 {
                    value = "w_ref_grid_form"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7040, 7496
                    hide_name = True
                    size = 116, 20
                ]

                tag From64 {
                    value = "Q"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7976, 8192
                    hide_name = True
                    size = 35, 20
                ]

                tag Goto33 {
                    value = "vq_ref_grid_forming"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8832, 8064
                    hide_name = True
                    size = 148, 20
                ]

                tag Goto34 {
                    value = "vd_ref_grid_forming"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8744, 8160
                    hide_name = True
                    size = 153, 20
                ]

                tag From65 {
                    value = "vq_ref_grid_forming"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7040, 7304
                    hide_name = True
                    size = 116, 20
                ]

                tag From66 {
                    value = "vd_ref_grid_forming"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7040, 7528
                    hide_name = True
                    size = 116, 20
                ]

                tag From3 {
                    value = "P"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6136, 8168
                    rotation = down
                    hide_name = True
                    scale = -1, 1
                    size = 0, 0
                ]

                tag Goto3 {
                    value = "VDC"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6328, 8272
                    hide_name = True
                    size = 0, 0
                ]

                junction Junction239 sp
                [
                    position = 6344, 7728
                ]

                junction Junction207 pe
                [
                    position = 6824, 8104
                ]

                junction Junction132 pe
                [
                    position = 7088, 8520
                ]

                junction Junction205 pe
                [
                    position = 7088, 8200
                ]

                junction Junction211 pe
                [
                    position = 7008, 8520
                ]

                junction Junction238 sp
                [
                    position = 6336, 7680
                ]

                junction Junction235 pe
                [
                    position = 6936, 8304
                ]

                junction Junction236 pe
                [
                    position = 6600, 8200
                ]

                junction Junction223 sp
                [
                    position = 6448, 7584
                ]

                junction Junction233 pe
                [
                    position = 6880, 8200
                ]

                junction Junction206 pe
                [
                    position = 7160, 8304
                ]

                junction Junction215 pe
                [
                    position = 6824, 8520
                ]

                junction Junction212 pe
                [
                    position = 6880, 8520
                ]

                junction Junction234 pe
                [
                    position = 6760, 8104
                ]

                junction Junction213 pe
                [
                    position = 6936, 8520
                ]

                junction Junction240 sp
                [
                    position = 6968, 7752
                ]

                junction Junction244 pe
                [
                    position = 7160, 8520
                ]

                junction Junction245 pe
                [
                    position = 7360, 8520
                ]

                junction Junction246 pe
                [
                    position = 7432, 8520
                ]

                junction Junction249 sp
                [
                    position = 8088, 7400
                ]

                junction Junction250 sp
                [
                    position = 8104, 7424
                ]

                junction Junction251 sp
                [
                    position = 7680, 7408
                ]

                junction Junction252 sp
                [
                    position = 7656, 7432
                ]

                junction Junction254 sp
                [
                    position = 8560, 8080
                ]

                junction Junction256 pe
                [
                    position = 7264, 8200
                ]

                junction Junction510 pe
                [
                    position = 6416, 8304
                ]

                junction Junction516 sp
                [
                    position = 6208, 8216
                ]

                junction Junction519 pe
                [
                    position = 6600, 8304
                ]

                junction Junction520 pe
                [
                    position = 6104, 8112
                ]

                junction Junction521 pe
                [
                    position = 6104, 8304
                ]

                junction Junction522 sp
                [
                    position = 8224, 7752
                ]

                junction Junction523 sp
                [
                    position = 8232, 7968
                ]

                junction Junction524 pe
                [
                    position = 7008, 8104
                ]

                junction Junction525 pe
                [
                    position = 7264, 8104
                ]

                junction Junction526 pe
                [
                    position = 7504, 8304
                ]

                junction Junction527 pe
                [
                    position = 7432, 8200
                ]

                junction Junction528 pe
                [
                    position = 7360, 8104
                ]

                comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt;">-1 due to direction of </span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt;">current (motor-direction)</span> </p></body></html> ENDCOMMENT 
                [
                    position = 7880, 7824
                ]

                comment Comment2 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt;">-1 due to direction of </span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt;">current (motor-direction)</span> </p></body></html> ENDCOMMENT 
                [
                    position = 8000, 8216
                ]

                comment Comment3 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt;">By choice, the droop is applied only </span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt;">to q-axis, since d-axis voltage is expected </span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt;">to be usually set to 0 in grid-forming</span>  </p></body></html> ENDCOMMENT 
                [
                    position = 8648, 8088
                ]

                connect From40 calc_current.Limit_type as Connection751
                connect Junction215 Junction212 as Connection944
                connect Csp5.P_node Junction234 as Connection1178
                connect Csp5.n_node Junction236 as Connection1182
                [
                    breakpoints = 6600, 8136
                ]
                connect From44 calc_current.f_Hz as Connection1200
                connect Junction235 Junction206 as Connection1180
                [
                    breakpoints = 6936, 8304; 6936, 8304; 6936, 8304; 6936, 8304; 7160, 8304
                ]
                connect From42 calc_current.en as Connection1064
                connect Goto24 Junction238 as Connection1196
                connect From23 "Three phase PLL1.vb" as Connection1038
                connect Junction223 "Bus Join1.out" as Connection999
                connect Junction205 Vb.p_node as Connection868
                connect From24 "Three phase PLL1.va" as Connection1037
                connect From33 Csp5.SP_in as Connection1186
                connect calc_current.Vpk From29 as Connection660
                connect Ib.p_node B as Connection862
                connect "dq to abc1.phase_a" Goto22 as Connection1068
                connect From12 S_meas.Ia as Connection588
                connect From27 calc_current.Vd as Connection1187
                connect Vrms1.p_node Junction234 as Connection1176
                connect R2.p_node Junction213 as Connection939
                connect "dq to abc1.phase_c" Termination1.in as Connection1070
                connect Junction238 "Bus Join1.in" as Connection1195
                connect Goto15 "Three phase PLL1.peak" as Connection1087
                connect "dq to abc1.zero_input" Constant1.out as Connection1073
                connect Ib.out Goto6 as Connection699
                connect S_meas.Vb From14 as Connection654
                connect "Bus Split2.out" P.in as Connection790
                connect Gain1.in From36 as Connection641
                connect S_meas.Ib From13 as Connection589
                connect Csp7.n_node Junction236 as Connection1184
                connect From39 calc_current.Qref as Connection752
                connect Gain1.out "Bus Join1.in5" as Connection847
                connect Csp7.P_node Junction233 as Connection1175
                connect Junction132 Junction211 as Connection931
                [
                    breakpoints = 7088, 8520
                ]
                connect Vb.out Goto9 as Connection703
                connect "Bus Split2.out2" S.in as Connection792
                connect R.p_node Junction215 as Connection943
                connect Vc.p_node Junction206 as Connection870
                connect Goto8 Va.out as Connection736
                [
                    breakpoints = 7208, 8368; 7040, 8368
                ]
                connect Vrms1.n_node Junction215 as Connection1136
                [
                    breakpoints = 6760, 8520
                ]
                connect Junction239 "Bus Join1.in1" as Connection1198
                connect Goto18 calc_current.Id as Connection928
                connect R1.n_node Junction233 as Connection1173
                [
                    breakpoints = 6880, 8272
                ]
                connect Goto25 Junction239 as Connection1199
                connect "Bus Split2.out1" Q.in as Connection791
                connect "Three phase PLL1.vc" From25 as Connection1039
                connect From35 "Bus Join1.in4" as Connection846
                connect Goto7 Ic.out as Connection700
                connect S_meas.pf "Bus Join1.in3" as Connection842
                connect Vc.out Goto10 as Connection701
                connect "dq to abc1.phase_b" Goto21 as Connection1069
                connect Junction233 Junction205 as Connection1174
                [
                    breakpoints = 6880, 8200; 6880, 8200; 6880, 8200; 6880, 8200; 6880, 8200; 6880, 8200; 6880, 8200; 7088, 8200; 7088, 8200; 7088, 8200; 7088, 8200
                ]
                connect "Bus Split2.out4" f.in as Connection794
                connect From30 "dq to abc1.d_input" as Connection1071
                connect Ia.out Goto5 as Connection1036
                connect From16 S_meas.Vc as Connection655
                connect From11 S_meas.Ic as Connection590
                connect From34 Csp7.SP_in as Connection1185
                connect Ic.p_node C as Connection863
                connect Junction212 Junction213 as Connection937
                connect S_meas.P Junction238 as Connection1194
                connect "Bus Split2.out5" Vt.in as Connection795
                connect S_meas.S "Bus Join1.in2" as Connection841
                connect Junction213 Junction211 as Connection938
                connect Junction207 R.n_node as Connection1133
                [
                    breakpoints = 6824, 8104; 6824, 8248
                ]
                connect Input Control_Inputs.In1 as Connection753
                connect Goto23 Junction223 as Connection1000
                connect "dq to abc1.wt" From32 as Connection1074
                connect Output Junction223 as Connection998
                connect "Three phase PLL1.freq" Goto16 as Connection1042
                connect S_meas.Q Junction239 as Connection1197
                connect Junction234 Junction207 as Connection1177
                [
                    breakpoints = 6760, 8104; 6760, 8104; 6760, 8104; 6824, 8104
                ]
                connect Goto19 calc_current.Iq as Connection929
                connect Ia.p_node A as Connection861
                connect "Bus Split2.out3" Pf.in as Connection793
                connect From15 S_meas.Va as Connection653
                connect From43 calc_current.Pref as Connection1067
                connect R2.n_node Junction235 as Connection1179
                [
                    breakpoints = 6936, 8320
                ]
                connect R1.p_node Junction212 as Connection936
                connect From31 "dq to abc1.q_input" as Connection1072
                [
                    breakpoints = 7576, 7696
                ]
                connect calc_current.Vq From28 as Connection1188
                connect From41 "Bus Split2.in" as Connection1001
                connect Vb.n_node Junction132 as Connection294
                connect Junction211 Va.n_node as Connection932
                [
                    breakpoints = 7008, 8520
                ]
                connect "Three phase PLL1.theta" Sum1.in as Connection1202
                connect Sum1.out Junction240 as Connection1204
                connect Junction240 Goto20 as Connection1205
                connect Constant2.out Sum1.in1 as Connection1207
                connect "Three phase PLL1.q_axis" Goto14 as Connection1208
                connect Goto17 "Three phase PLL1.d_axis" as Connection1209
                connect "abc to dq1.va" From47 as Connection1210
                connect From46 "abc to dq1.vb" as Connection1211
                connect From45 "abc to dq1.vc" as Connection1212
                [
                    breakpoints = 7528, 7440; 7568, 7440
                ]
                connect From48 "abc to dq1.wt" as Connection1213
                [
                    breakpoints = 7552, 7488; 7552, 7456
                ]
                connect "abc to dq1.zero_axis" Termination2.in as Connection1216
                connect "abc to dq2.va" From51 as Connection1217
                connect From50 "abc to dq2.vb" as Connection1218
                connect From49 "abc to dq2.vc" as Connection1219
                [
                    breakpoints = 7968, 7432; 8008, 7432
                ]
                connect From52 "abc to dq2.wt" as Connection1220
                [
                    breakpoints = 7992, 7480; 7992, 7448
                ]
                connect "abc to dq2.zero_axis" Termination3.in as Connection1223
                connect Vc.n_node Junction244 as Connection1233
                connect Junction244 Junction132 as Connection1234
                connect C1.n_node Junction245 as Connection1236
                connect Junction245 Junction244 as Connection1237
                connect C2.n_node Junction246 as Connection1239
                connect Junction246 Junction245 as Connection1240
                connect C3.n_node Junction246 as Connection1241
                connect "Signal switch1.in2" From1 as Connection1242
                connect From54 "Signal switch1.in" as Connection1246
                connect From53 "Signal switch1.in1" as Connection1247
                connect From55 w_ref_grid_forming.wt_PLL as Connection1248
                connect From56 w_ref_grid_forming.enable_vf_control as Connection1249
                connect Constant4.out w_ref_grid_forming.P_nominal_kW as Connection1263
                connect Constant5.out w_ref_grid_forming.f_nominal_Hz as Connection1264
                connect From58 calc_current.id_gs as Connection1267
                connect From59 calc_current.iq_gs as Connection1268
                connect From60 calc_current.vq_gs as Connection1269
                connect calc_current.vd_gs From61 as Connection1270
                connect From62 calc_current.mode as Connection1271
                connect From63 calc_current.w_grid_form as Connection1275
                connect "abc to dq2.d_axis" Junction249 as Connection1276
                connect Junction249 Goto28 as Connection1277
                connect vd_meas.in Junction249 as Connection1278
                connect "abc to dq2.q_axis" Junction250 as Connection1279
                connect Junction250 Goto29 as Connection1280
                connect vq_meas.in Junction250 as Connection1281
                connect "abc to dq1.d_axis" Junction251 as Connection1282
                connect Junction251 Goto26 as Connection1283
                connect id_meas.in Junction251 as Connection1284
                connect "abc to dq1.q_axis" Junction252 as Connection1285
                connect Junction252 Goto27 as Connection1286
                connect iq_meas.in Junction252 as Connection1287
                connect w_ref_grid_forming.wt_ref_grid_forming Sum2.in as Connection1289
                connect Sum2.out Goto31 as Connection1291
                connect ph_offset_grid_forming.out Gain4.in as Connection1292
                connect Gain4.out Sum2.in1 as Connection1293
                connect Gain3.out Gain5.in as Connection1295
                connect Gain5.out w_ref_grid_forming.P_kW as Connection1296
                connect Constant6.out v_droop.v_nominal_LLrms as Connection1299
                connect Constant7.out v_droop.Q_nominal_kVAr as Connection1300
                connect Gain6.out Gain7.in as Connection1305
                connect Gain7.out v_droop.Q_kVAr as Connection1306
                connect vd_ref.out Goto34 as Connection1312
                connect From65 calc_current.vq_ref as Connection1313
                connect From66 calc_current.vd_ref as Connection1314
                connect Sum3.in vq_ref.out as Connection1318
                [
                    breakpoints = 8520, 8016
                ]
                connect Goto33 Sum3.out as Connection1319
                connect Junction240 wt.in as Connection1325
                [
                    breakpoints = 6968, 7752; 6968, 7792
                ]
                connect Goto30 "Signal switch1.out" as Connection1326
                connect "rms->dq.in" v_droop.v_droop_LLrms as Connection1330
                [
                    breakpoints = 8464, 8080
                ]
                connect "rms->dq.out" Junction254 as Connection1332
                connect Junction254 Sum3.in1 as Connection1333
                connect v_droop_q.in Junction254 as Connection1334
                connect w_ref_grid_forming.f_final_Hz Gain8.in as Connection1341
                connect Gain8.out Goto32 as Connection1342
                connect f_ref.out Gain9.in as Connection1344
                connect Gain9.out w_ref_grid_forming.w_ref_grid_forming as Connection1345
                connect Junction256 Junction205 as Connection1350
                [
                    breakpoints = 7264, 8200; 7088, 8200
                ]
                connect Vab.n_node Junction256 as Connection1351
                connect From57 Gain3.in as Connection1364
                connect From64 Gain6.in as Connection1365
                connect Junction516 Product1.in1 as Connection2523
                connect Limit1.out Junction516 as Connection2522
                connect Limit1.in Vdc.out as Connection2518
                connect Isp1.n_node Idc.n_node as Connection2831
                connect Goto3 Junction516 as Connection2524
                connect Isp1.p_node Junction510 as Connection2439
                connect Isp1.in Product1.out as Connection2520
                connect Junction236 Junction519 as Connection2834
                [
                    breakpoints = 6600, 8200
                ]
                connect Junction519 Junction235 as Connection2835
                [
                    breakpoints = 6600, 8304
                ]
                connect Junction510 Junction519 as Connection2836
                [
                    breakpoints = 6416, 8304; 6600, 8304
                ]
                connect Vdc.p_node Junction520 as Connection2839
                connect Junction520 Idc.p_node as Connection2840
                [
                    breakpoints = 6144, 8112
                ]
                connect DC+ Junction520 as Connection2841
                connect Junction510 Junction521 as Connection2842
                [
                    breakpoints = 6416, 8304
                ]
                connect Junction521 Vdc.n_node as Connection2843
                [
                    breakpoints = 6104, 8304
                ]
                connect DC- Junction521 as Connection2844
                connect From3 Gain10.in as Connection2845
                connect Gain10.out Product1.in as Connection2846
                connect Constant8.out Junction522 as Connection2848
                connect Junction522 w_ref_grid_forming.f_droop_enable as Connection2849
                connect w_ref_grid_forming.f_droop_gain Junction522 as Connection2850
                connect Constant9.out Junction523 as Connection2852
                connect Junction523 v_droop.v_droop_gain as Connection2853
                connect v_droop.v_droop_enable Junction523 as Connection2854
                connect Ia.n_node Irms1.p_node as Connection2857
                connect Va.p_node Junction524 as Connection2859
                connect Junction524 Junction207 as Connection2860
                [
                    breakpoints = 7008, 8104; 7008, 8104; 7008, 8104
                ]
                connect Vab.p_node Junction525 as Connection2861
                connect R3.p_node L1.n_node as Connection2867
                connect Junction525 Junction524 as Connection2868
                [
                    breakpoints = 7264, 8104; 7264, 8104
                ]
                connect R4.p_node L2.n_node as Connection2872
                connect R5.p_node L3.n_node as Connection2873
                connect C3.p_node Junction526 as Connection2874
                connect Junction526 Junction206 as Connection2875
                [
                    breakpoints = 7504, 8304
                ]
                connect L3.p_node Junction526 as Connection2876
                connect Junction256 Junction527 as Connection2877
                [
                    breakpoints = 7264, 8200
                ]
                connect Junction527 C2.p_node as Connection2878
                [
                    breakpoints = 7432, 8200
                ]
                connect L2.p_node Junction527 as Connection2879
                connect Junction525 Junction528 as Connection2880
                [
                    breakpoints = 7264, 8104; 7264, 8104
                ]
                connect Junction528 C1.p_node as Connection2881
                [
                    breakpoints = 7360, 8104
                ]
                connect L1.p_node Junction528 as Connection2882
                connect R3.n_node Irms1.n_node as Connection2883
                connect R4.n_node Ib.n_node as Connection2884
                connect R5.n_node Ic.n_node as Connection2885

                Lf = "1e-5"
                rLf = "1e-2"

                mask {
                    description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Current Source Variable Load</p><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">The number of inputs is 3 and of outputs is 6 per output port. They are organized as an array on the following order:</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Inputs: 0 - Pref; 1 - Qref1; 2 - Limit_type</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Outputs (1) = 0 - Active Power P; 1 - Reactive Power Q; 2 - Apparent Power S; 3 - Power Factor Pf; 4 - Frequency; 5 - Vt;</p></body></html>"

                    Vnom {
                        label = "Nominal Line to Line Voltage"
                        widget = edit
                        type = generic
                        default_value = "208"
                        unit = "V"
                        group = "General:1"
                    }

                    fnom {
                        label = "Nominal Frequency"
                        widget = edit
                        type = generic
                        default_value = "60"
                        unit = "Hz"
                        group = "General:1"
                    }

                    Sb {
                        label = "Nominal Load"
                        widget = edit
                        type = generic
                        default_value = "20e3"
                        unit = "VA"
                        group = "General:1"
                    }

                    powerRate {
                        label = "Power change rate"
                        widget = edit
                        type = generic
                        default_value = "2e3"
                        unit = "VA/s"
                        group = "General:1"
                    }

                    execution_rate {
                        label = "Execution rate"
                        widget = edit
                        type = generic
                        default_value = "Tbatt"
                        unit = "s"
                        group = "General:1"
                    }

                    R {
                        label = "Resistor"
                        widget = edit
                        type = generic
                        default_value = "1e6"
                        unit = "Ohms"
                        group = "Snubber:2"
                    }

                    Cf {
                        label = "Cf"
                        widget = edit
                        type = generic
                        default_value = "100e-6"
                        unit = "F"
                        group = "Snubber:2"
                    }

                    Lf {
                        label = "Lf"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "H"
                        group = "Snubber:2"
                    }

                    rLf {
                        label = "rLf"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "Ohms"
                        group = "Snubber:2"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE

                    CODE init
                    ENDCODE

                    CODE pre_compile
                        # HEADER START
                        Vnom = mdl.get_property_value(mdl.prop(item_handle, "Vnom"))
                        fnom = mdl.get_property_value(mdl.prop(item_handle, "fnom"))
                        Sb = mdl.get_property_value(mdl.prop(item_handle, "Sb"))
                        powerRate = mdl.get_property_value(mdl.prop(item_handle, "powerRate"))
                        execution_rate = mdl.get_property_value(mdl.prop(item_handle, "execution_rate"))
                        R = mdl.get_property_value(mdl.prop(item_handle, "R"))
                        Cf = mdl.get_property_value(mdl.prop(item_handle, "Cf"))
                        Lf = mdl.get_property_value(mdl.prop(item_handle, "Lf"))
                        rLf = mdl.get_property_value(mdl.prop(item_handle, "rLf"))
                        # HEADER STOP
                        Ib = (Sb/Vnom)*((2.0/3.0)**0.5)
                        Vdqbase = (1/Vnom)*((2.0/3.0)**0.5)
                    ENDCODE

                    CODE define_icon
                        image(r"C:\00 Typhoon SVN\t_misc\00 Project management\90 Demos\0900 EATON-Typhoon Demo 5_26_2020\img\ess_for_scada_png.png")
                    ENDCODE
                }
            }
            [
                position = 9056, 8536
                size = 192, 248
            ]

            component Subsystem Lump1 {
                layout = dynamic
                component "core/Voltage Measurement" Va {
                    addr = "7"
                    execution_rate = "execution_rate"
                    sig_output = "True"
                }
                [
                    position = 7008, 8368
                    rotation = right
                    size = 64, 32
                ]

                component gen_terminator Termination1 {
                }
                [
                    position = 7704, 7744
                    hide_name = True
                ]

                component pas_resistor R1 {
                    resistance = "R"
                }
                [
                    position = 6880, 8376
                    rotation = left
                ]

                component "core/Voltage RMS" Vrms1 {
                }
                [
                    position = 6760, 8376
                    rotation = right
                    size = 64, 32
                ]

                component Subsystem Control_Inputs {
                    layout = dynamic
                    component gen_bus_split "Bus Split1" {
                        outputs = "5"
                    }
                    [
                        position = 8144, 8112
                        rotation = right
                    ]

                    port In1 {
                        position = top:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8144, 8040
                        rotation = right
                        hide_name = True
                    ]

                    tag Goto23 {
                        value = "Pref"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8240, 8176
                    ]

                    tag Goto24 {
                        value = "Qref"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8240, 8224
                    ]

                    tag Goto25 {
                        value = "Limit_type"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8240, 8272
                    ]

                    tag Goto26 {
                        value = "en"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8240, 8312
                    ]

                    tag Goto27 {
                        value = "mode"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8240, 8352
                    ]

                    connect "Bus Split1.in" In1 as Connection751
                    connect Goto26 "Bus Split1.out3" as Connection752
                    connect "Bus Split1.out2" Goto25 as Connection750
                    connect "Bus Split1.out" Goto23 as Connection748
                    connect "Bus Split1.out1" Goto24 as Connection749
                    connect "Bus Split1.out4" Goto27 as Connection753
                }
                [
                    position = 6472, 8040
                    size = 48, 48
                ]

                component gen_probe P {
                }
                [
                    position = 7632, 8040
                    scale = 1, -1
                ]

                component "core/Voltage Measurement" Vb {
                    addr = "9"
                    execution_rate = "execution_rate"
                    sig_output = "True"
                }
                [
                    position = 7088, 8408
                    rotation = right
                    size = 64, 32
                ]

                component gen_bus_split "Bus Split2" {
                    outputs = "6"
                }
                [
                    position = 7456, 7896
                    rotation = down
                    hide_name = True
                    scale = -1, 1
                ]

                component Subsystem calc_current {
                    layout = dynamic
                    component gen_gain Gain13 {
                        gain = "(1.0/Vnom)*((3.0/2.0)**0.5)"
                    }
                    [
                        position = 7880, 7992
                        hide_name = True
                    ]

                    component gen_c_function "C function3" {
                        in_terminal_dimensions = "inherit;inherit"
                        in_terminal_dimensions_str = "en inherit;f_Hz inherit"
                        in_terminal_labels = "[(\'en\', True), (\'f_Hz\', True)]"
                        in_terminal_properties = "real en;inherit f_Hz;"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "en_out inherit"
                        out_terminal_labels = "[(\'en_out\', True)]"
                        out_terminal_properties = "real en_out;"
                        output_fnc = "/*Begin code section*/
if ((f_Hz  > 70) || (f_Hz < 40))
{
    en_out = 0;
}
else
{
    en_out = en;
}
/*End code section*/"
                    }
                    [
                        position = 7576, 8584
                        size = 64, 48
                    ]

                    component gen_gain Gain15 {
                        gain = "1/Sb"
                    }
                    [
                        position = 7880, 8136
                        hide_name = True
                    ]

                    component gen_gain Gain14 {
                        gain = "1/Sb"
                    }
                    [
                        position = 7880, 8184
                        hide_name = True
                    ]

                    component gen_gain Gain10 {
                        gain = "(1.0/Vnom)*((3.0/2.0)**0.5)"
                    }
                    [
                        position = 7880, 8088
                        hide_name = True
                    ]

                    component gen_limiter Limit2 {
                        lower_limit = "0.001"
                    }
                    [
                        position = 8016, 8088
                        hide_name = True
                    ]

                    component gen_probe Id_ {
                    }
                    [
                        position = 9336, 8400
                    ]

                    component src_constant Constant2 {
                        execution_rate = "execution_rate"
                        value = "0"
                    }
                    [
                        position = 8864, 8576
                        hide_name = True
                    ]

                    component gen_c_function "C function1" {
                        global_variables = "real counter;"
                        in_terminal_dimensions = "inherit"
                        in_terminal_dimensions_str = "en inherit"
                        in_terminal_labels = "[(\'en\', True)]"
                        in_terminal_properties = "real en;"
                        init_fnc = "/*Begin code section*/
counter = 0;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "en_out inherit"
                        out_terminal_labels = "[(\'en_out\', True)]"
                        out_terminal_properties = "real en_out;"
                        output_fnc = "/*Begin code section*/
if (en  > 0.5)
{
    if (counter > 0.1/execution_rate)
    {
        en_out = 1;
    }
    else
    {
        counter = counter + 1;
    }
}

if (en < 0.5)
{
    en_out = 0;
    counter = 0;
}
/*End code section*/"
                    }
                    [
                        position = 7728, 8584
                        size = 64, 48
                    ]

                    component sys_signal_switch "Signal switch1" {
                        threshold = "0.5"
                    }
                    [
                        position = 8992, 8448
                        hide_name = True
                    ]

                    component sys_signal_switch "Signal switch2" {
                        threshold = "0.5"
                    }
                    [
                        position = 9024, 8672
                        hide_name = True
                    ]

                    component gen_terminator Termination1 {
                    }
                    [
                        position = 7848, 8280
                        hide_name = True
                    ]

                    component gen_c_function calc_current {
                        global_variables = "real x;real pf;"
                        in_terminal_dimensions = "inherit;inherit;inherit;inherit;inherit"
                        in_terminal_dimensions_str = "Vd inherit;Vq inherit;Vpk inherit;P inherit;Q inherit"
                        in_terminal_labels = "[(\'Vd\', True), (\'Vq\', True), (\'Vpk\', True), (\'P\', True), (\'Q\', True)]"
                        in_terminal_properties = "real Vd;inherit Vq;inherit Vpk;inherit P;inherit Q;"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit;inherit"
                        out_terminal_dimensions_str = "Id inherit;Iq inherit"
                        out_terminal_labels = "[(\'Id\', True), (\'Iq\', True)]"
                        out_terminal_properties = "real Id;inherit Iq;"
                        output_fnc = "/*Begin code section*/
if(Vpk<0.2 || Vpk>2.0){
    // If the peak voltage is less than 20% of nominal, deactivate load
    Id = 0;
    Iq = 0;
}
else{
    x = Vpk*Vpk;

    // the signs of P and Q are changed to adapt the systems for load reference
    // thus, positive power means that the load is absorbing from the grid.
    // Positive Q is inductive load.

    Id = -(P*Vd+Q*Vq)/x;
    Iq = -(P*Vq-Q*Vd)/x;
}
/*End code section*/"
                    }
                    [
                        position = 8144, 8368
                        rotation = right
                        size = 48, 96
                    ]

                    component gen_limiter Limit3 {
                        lower_limit = "-1"
                        upper_limit = "1"
                    }
                    [
                        position = 8832, 8432
                        hide_name = True
                    ]

                    component gen_probe Iq_ {
                    }
                    [
                        position = 9328, 8672
                    ]

                    component gen_gain Gain9 {
                        gain = "(1.0/Vnom)*((3.0/2.0)**0.5)"
                    }
                    [
                        position = 7880, 8040
                        hide_name = True
                    ]

                    component gen_c_function "C function2" {
                        in_terminal_dimensions = "inherit;inherit"
                        in_terminal_dimensions_str = "Pref inherit;Qref inherit"
                        in_terminal_labels = "[(\'Pref\', True), (\'Qref\', True)]"
                        in_terminal_properties = "real Pref;inherit Qref;"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit;inherit"
                        out_terminal_dimensions_str = "Pref_actual inherit;Qref_actual inherit"
                        out_terminal_labels = "[(\'Pref_actual\', True), (\'Qref_actual\', True)]"
                        out_terminal_properties = "real Pref_actual;inherit Qref_actual;"
                        output_fnc = "/*Begin code section*/
Qref_actual = Qref - 228.3/2400 * Pref;
Pref_actual = Pref + 228.3/2400 * Qref;
/*End code section*/"
                    }
                    [
                        position = 7616, 8160
                        size = 104, 88
                    ]

                    component gen_limiter Limit4 {
                        lower_limit = "-1"
                        upper_limit = "1"
                    }
                    [
                        position = 8880, 8656
                        hide_name = True
                    ]

                    component gen_digital_probe Active {
                    }
                    [
                        position = 7936, 8592
                    ]

                    component gen_rate_limiter "Rate Limiter1" {
                        falling_limit = "-I_Rate/Ib"
                        rising_limit = "I_Rate/Ib"
                    }
                    [
                        position = 8672, 8464
                        hide_name = True
                    ]

                    component gen_gain Gain11 {
                        gain = "Ib"
                    }
                    [
                        position = 8904, 8432
                        hide_name = True
                    ]

                    component gen_gain Gain16 {
                        gain = "Ib"
                    }
                    [
                        position = 8944, 8656
                        hide_name = True
                    ]

                    component Subsystem pid_controller {
                        layout = dynamic
                        component gen_product Product8 {
                        }
                        [
                            position = 8160, 7936
                            hide_name = True
                        ]

                        component gen_sum Sum8 {
                            signs = "+-"
                        }
                        [
                            position = 7488, 7872
                            hide_name = True
                        ]

                        component gen_sum Sum14 {
                            signs = "4"
                        }
                        [
                            position = 8568, 7968
                            hide_name = True
                        ]

                        component src_constant Constant1 {
                            execution_rate = "execution_rate"
                            value = "0"
                        }
                        [
                            position = 8776, 7912
                            hide_name = True
                        ]

                        component gen_product Product9 {
                        }
                        [
                            position = 8168, 8080
                            hide_name = True
                        ]

                        component gen_integrator Integrator1 {
                            limit_lower = "-1"
                            limit_output = "True"
                            limit_upper = "1"
                            show_reset = "level"
                        }
                        [
                            position = 8344, 8088
                            hide_name = True
                        ]

                        component sys_signal_switch "Signal switch1" {
                            threshold = "0.5"
                        }
                        [
                            position = 8840, 7952
                            hide_name = True
                        ]

                        component gen_limiter Limit1 {
                            lower_limit = "-1"
                            upper_limit = "1"
                        }
                        [
                            position = 8296, 7936
                        ]

                        component gen_limiter Limit3 {
                            lower_limit = "-1.0"
                            upper_limit = "1.0"
                        }
                        [
                            position = 8680, 7968
                        ]

                        component gen_logic_op "Logical operator4" {
                            operator = "NOT"
                        }
                        [
                            position = 7240, 8048
                            hide_name = True
                        ]

                        component gen_gain Gain1 {
                            gain = "-1"
                        }
                        [
                            position = 8472, 8288
                            hide_name = True
                        ]

                        port ki {
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7880, 8088
                        ]

                        port "Iq*" {
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9032, 7952
                        ]

                        port Enable {
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7144, 8000
                        ]

                        port kp {
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7880, 7944
                        ]

                        port ref {
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7304, 7824
                        ]

                        port fdbck {
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7392, 7880
                        ]

                        port iq_meas_gs {
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8232, 8328
                        ]

                        port w_Cf_vd {
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8240, 8208
                        ]

                        tag Goto2 {
                            value = "enable"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7240, 8000
                            hide_name = True
                            size = 0, 0
                        ]

                        tag Goto3 {
                            value = "disable"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7328, 8048
                            hide_name = True
                            size = 0, 0
                        ]

                        tag From6 {
                            value = "disable"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8248, 8104
                            hide_name = True
                            size = 0, 0
                        ]

                        tag From7 {
                            value = "disable"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8768, 7880
                            hide_name = True
                            size = 0, 0
                        ]

                        junction Junction359 sp
                        [
                            position = 7176, 8000
                        ]

                        junction Junction366 sp
                        [
                            position = 8112, 7928
                        ]

                        connect fdbck Sum8.in1 as Connection1502
                        connect Product9.out Integrator1.in as Connection288
                        connect Constant1.out "Signal switch1.in" as Connection333
                        connect Limit1.in Product8.out as Connection1993
                        connect kp Product8.in1 as Connection1997
                        connect ki Product9.in1 as Connection1999
                        connect Sum14.out Limit3.in as Connection2000
                        connect Limit3.out "Signal switch1.in1" as Connection2001
                        connect Enable Junction359 as Connection2014
                        connect Junction359 Goto2 as Connection2015
                        connect "Logical operator4.in" Junction359 as Connection2016
                        connect "Logical operator4.out" Goto3 as Connection2017
                        connect From6 Integrator1.reset as Connection2025
                        connect From7 "Signal switch1.in2" as Connection2026
                        connect Junction366 Product8.in as Connection2060
                        [
                            breakpoints = 8112, 7928; 8112, 7928; 8112, 7928; 8112, 7928
                        ]
                        connect "Iq*" "Signal switch1.out" as Connection2068
                        connect Sum8.out Junction366 as Connection2073
                        [
                            breakpoints = 7560, 7872; 7600, 7872; 7600, 7872; 8032, 7872; 8032, 7928
                        ]
                        connect iq_meas_gs Gain1.in as Connection2074
                        connect Sum14.in Limit1.out as Connection2081
                        connect Integrator1.out Sum14.in1 as Connection2082
                        [
                            breakpoints = 8416, 8088; 8416, 7960
                        ]
                        connect ref Sum8.in as Connection2084
                        connect Junction366 Product9.in as Connection2085
                        [
                            breakpoints = 8112, 7928; 8112, 8072; 8112, 8072; 8112, 8072; 8112, 8072
                        ]
                        connect w_Cf_vd Sum14.in2 as Connection2086
                        [
                            breakpoints = 8272, 8200; 8456, 8200; 8456, 7976
                        ]
                        connect Gain1.out Sum14.in3 as Connection2087
                        [
                            breakpoints = 8496, 8288; 8496, 7992
                        ]
                    }
                    [
                        position = 8576, 9016
                        size = 88, 328
                    ]

                    component gen_gain Gain17 {
                        gain = "(1.0/Vnom)*((3.0/2.0)**0.5)"
                    }
                    [
                        position = 8112, 8840
                        hide_name = True
                    ]

                    component src_constant Constant3 {
                        execution_rate = "execution_rate"
                        value = "0"
                    }
                    [
                        position = 8424, 9160
                        hide_name = True
                    ]

                    component gen_logic_op "Logical operator1" {
                    }
                    [
                        position = 8112, 9072
                        hide_name = True
                    ]

                    component gen_product Product15 {
                        signs = "3"
                    }
                    [
                        position = 8112, 9168
                        hide_name = True
                    ]

                    component src_constant Constant4 {
                        execution_rate = "execution_rate"
                        value = "Cf"
                    }
                    [
                        position = 8032, 9192
                    ]

                    component gen_gain Gain20 {
                        gain = "1/Ib"
                    }
                    [
                        position = 8192, 9168
                        hide_name = True
                    ]

                    component gen_gain Gain21 {
                        gain = "(1.0/Vnom)*((3.0/2.0)**0.5)"
                    }
                    [
                        position = 8128, 8912
                        hide_name = True
                    ]

                    component gen_logic_op "Logical operator2" {
                    }
                    [
                        position = 8360, 9472
                        hide_name = True
                    ]

                    component gen_product Product16 {
                        signs = "3"
                    }
                    [
                        position = 8288, 9552
                        hide_name = True
                    ]

                    component src_constant Constant6 {
                        execution_rate = "execution_rate"
                        value = "Cf"
                    }
                    [
                        position = 8208, 9576
                    ]

                    component gen_gain Gain25 {
                        gain = "1/Ib"
                    }
                    [
                        position = 8376, 9552
                        hide_name = True
                    ]

                    component src_constant Constant7 {
                        execution_rate = "execution_rate"
                        value = "0"
                    }
                    [
                        position = 8408, 9592
                        hide_name = True
                    ]

                    component Subsystem pid_controller1 {
                        layout = dynamic
                        component gen_product Product8 {
                        }
                        [
                            position = 8160, 7936
                            hide_name = True
                        ]

                        component gen_sum Sum8 {
                            signs = "+-"
                        }
                        [
                            position = 7488, 7872
                            hide_name = True
                        ]

                        component gen_sum Sum14 {
                            signs = "4"
                        }
                        [
                            position = 8536, 7968
                            hide_name = True
                        ]

                        component src_constant Constant1 {
                            execution_rate = "execution_rate"
                            value = "0"
                        }
                        [
                            position = 8776, 7912
                            hide_name = True
                        ]

                        component gen_product Product9 {
                        }
                        [
                            position = 8168, 8080
                            hide_name = True
                        ]

                        component gen_integrator Integrator1 {
                            limit_lower = "-1"
                            limit_output = "True"
                            limit_upper = "1"
                            show_reset = "level"
                        }
                        [
                            position = 8344, 8088
                            hide_name = True
                        ]

                        component sys_signal_switch "Signal switch1" {
                            threshold = "0.5"
                        }
                        [
                            position = 8840, 7952
                            hide_name = True
                        ]

                        component gen_limiter Limit1 {
                            lower_limit = "-1"
                            upper_limit = "1"
                        }
                        [
                            position = 8296, 7936
                        ]

                        component gen_limiter Limit3 {
                            lower_limit = "-1.0"
                            upper_limit = "1.0"
                        }
                        [
                            position = 8680, 7968
                        ]

                        component gen_logic_op "Logical operator4" {
                            operator = "NOT"
                        }
                        [
                            position = 7240, 8048
                            hide_name = True
                        ]

                        component gen_gain Gain1 {
                            gain = "-1"
                        }
                        [
                            position = 8400, 8464
                            hide_name = True
                        ]

                        port ki {
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7880, 8088
                        ]

                        port "Id*" {
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9032, 7952
                        ]

                        port Enable {
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7144, 8000
                        ]

                        port kp {
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7880, 7944
                        ]

                        port ref {
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7304, 7824
                        ]

                        port fdbck {
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7392, 7880
                        ]

                        port id_meas_gs {
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8168, 8464
                        ]

                        port w_Cf_vq {
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8168, 8384
                        ]

                        tag Goto2 {
                            value = "enable"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7240, 8000
                            hide_name = True
                            size = 0, 0
                        ]

                        tag Goto3 {
                            value = "disable"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7328, 8048
                            hide_name = True
                            size = 0, 0
                        ]

                        tag From6 {
                            value = "disable"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8248, 8104
                            hide_name = True
                            size = 0, 0
                        ]

                        tag From7 {
                            value = "disable"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8768, 7880
                            hide_name = True
                            size = 0, 0
                        ]

                        junction Junction359 sp
                        [
                            position = 7176, 8000
                        ]

                        junction Junction366 sp
                        [
                            position = 8112, 7928
                        ]

                        connect fdbck Sum8.in1 as Connection1502
                        connect Product9.out Integrator1.in as Connection288
                        connect Constant1.out "Signal switch1.in" as Connection333
                        connect kp Product8.in1 as Connection1997
                        connect ki Product9.in1 as Connection1999
                        connect Sum14.out Limit3.in as Connection2000
                        connect Limit3.out "Signal switch1.in1" as Connection2001
                        connect Enable Junction359 as Connection2014
                        connect Junction359 Goto2 as Connection2015
                        connect "Logical operator4.in" Junction359 as Connection2016
                        connect "Logical operator4.out" Goto3 as Connection2017
                        connect From6 Integrator1.reset as Connection2025
                        connect From7 "Signal switch1.in2" as Connection2026
                        connect Junction366 Product8.in as Connection2060
                        [
                            breakpoints = 8112, 7928; 8112, 7928; 8112, 7928; 8112, 7928
                        ]
                        connect "Id*" "Signal switch1.out" as Connection2068
                        connect Sum8.out Junction366 as Connection2073
                        [
                            breakpoints = 7560, 7872; 7600, 7872; 7600, 7872; 8032, 7872; 8032, 7928
                        ]
                        connect id_meas_gs Gain1.in as Connection2074
                        connect Limit1.in Product8.out as Connection2082
                        connect Limit1.out Sum14.in as Connection2083
                        connect Integrator1.out Sum14.in1 as Connection2084
                        [
                            breakpoints = 8432, 8088; 8432, 7952
                        ]
                        connect Sum8.in ref as Connection2086
                        connect Product9.in Junction366 as Connection2087
                        [
                            breakpoints = 8112, 8072; 8112, 8072; 8112, 8072; 8112, 8072; 8112, 7928
                        ]
                        connect w_Cf_vq Sum14.in2 as Connection2088
                        [
                            breakpoints = 8448, 8384; 8448, 7976
                        ]
                        connect Gain1.out Sum14.in3 as Connection2089
                        [
                            breakpoints = 8472, 8464; 8472, 7992
                        ]
                    }
                    [
                        position = 8576, 9408
                        size = 88, 328
                    ]

                    component gen_gain Gain2 {
                        gain = "-1"
                    }
                    [
                        position = 8448, 9552
                        hide_name = True
                    ]

                    component sys_signal_switch "Signal switch3" {
                        threshold = "0.5"
                    }
                    [
                        position = 8736, 8656
                        hide_name = True
                    ]

                    component sys_signal_switch "Signal switch4" {
                        threshold = "0.5"
                    }
                    [
                        position = 8752, 8432
                        hide_name = True
                    ]

                    component sys_signal_switch "Signal switch5" {
                        threshold = "0.5"
                    }
                    [
                        position = 7848, 8552
                        hide_name = True
                    ]

                    component gen_gain Gain26 {
                        gain = "(1.0/Vnom)*((3.0/2.0)**0.5)"
                    }
                    [
                        position = 8424, 9312
                        hide_name = True
                    ]

                    component gen_gain Gain27 {
                        gain = "(1.0/Vnom)*((3.0/2.0)**0.5)"
                    }
                    [
                        position = 8432, 9256
                        hide_name = True
                    ]

                    component src_scada_input Ki_grid_forming_ {
                        def_value = "50"
                        execution_rate = "execution_rate"
                        unit = ""
                    }
                    [
                        position = 7944, 8992
                    ]

                    component src_scada_input Kp_grid_forming_ {
                        def_value = "0.01"
                        execution_rate = "execution_rate"
                        unit = ""
                    }
                    [
                        position = 7824, 8944
                    ]

                    component gen_rate_limiter "Rate Limiter3" {
                        falling_limit = "-I_Rate/Ib"
                        rising_limit = "I_Rate/Ib"
                    }
                    [
                        position = 8664, 8680
                        hide_name = True
                    ]

                    component src_constant Constant8 {
                        execution_rate = "execution_rate"
                        value = "Vnom**2*(2.0*np.pi*fnom*Cf)"
                    }
                    [
                        position = 7400, 8240
                        hide_name = True
                    ]

                    component gen_sum Sum1 {
                    }
                    [
                        position = 7472, 8200
                        hide_name = True
                    ]

                    port Pref {
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7464, 8136
                    ]

                    port Iq {
                        position = right:5
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9384, 8728
                    ]

                    port Vd {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7760, 7992
                    ]

                    port Id {
                        position = right:5
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9272, 8448
                    ]

                    port f_Hz {
                        position = left:8
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7472, 8608
                    ]

                    port Qref {
                        position = left:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7400, 8184
                    ]

                    port Vq {
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7760, 8040
                    ]

                    port Limit_type {
                        position = left:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7760, 8280
                    ]

                    port en {
                        position = left:9
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7416, 8576
                    ]

                    port Vpk {
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7760, 8088
                    ]

                    port vq_ref {
                        position = left:10
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7440, 8832
                    ]

                    port id_gs {
                        position = left:11
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7440, 8896
                    ]

                    port iq_gs {
                        position = left:12
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7440, 8952
                    ]

                    port vd_gs {
                        position = left:13
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7440, 9016
                    ]

                    port vq_gs {
                        position = left:14
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7440, 9080
                    ]

                    port mode {
                        position = left:15
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7440, 9144
                    ]

                    port w_grid_form {
                        position = left:16
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7440, 9224
                    ]

                    port vd_ref {
                        position = left:17
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7400, 9304
                    ]

                    tag Goto2 {
                        value = "P_ref_pu"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8016, 8240
                        hide_name = True
                    ]

                    tag Goto1 {
                        value = "en"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7936, 8552
                        hide_name = True
                    ]

                    tag From1 {
                        value = "en"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8888, 8368
                    ]

                    tag Goto3 {
                        value = "Q_ref_pu"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8016, 8264
                        hide_name = True
                    ]

                    tag Goto4 {
                        value = "vq_ref"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7528, 8832
                        hide_name = True
                    ]

                    tag Goto26 {
                        value = "id_meas_gs"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7552, 8896
                        hide_name = True
                        size = 100, 20
                    ]

                    tag Goto27 {
                        value = "iq_meas_gs"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7552, 8952
                        hide_name = True
                        size = 100, 20
                    ]

                    tag Goto28 {
                        value = "vd_meas_gs"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7544, 9016
                        hide_name = True
                        size = 100, 20
                    ]

                    tag Goto29 {
                        value = "vq_meas_gs"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7544, 9080
                        hide_name = True
                        size = 100, 20
                    ]

                    tag Goto30 {
                        value = "mode"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7536, 9144
                        hide_name = True
                        size = 100, 20
                    ]

                    tag From2 {
                        value = "vq_ref"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7936, 8840
                        hide_name = True
                    ]

                    tag From3 {
                        value = "vq_meas_gs"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7984, 8912
                        hide_name = True
                        size = 81, 20
                    ]

                    tag From4 {
                        value = "mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8008, 9056
                        hide_name = True
                        size = 81, 20
                    ]

                    tag From5 {
                        value = "en"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8016, 9080
                    ]

                    tag From6 {
                        value = "vd_meas_gs"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7944, 9136
                        hide_name = True
                        size = 81, 20
                    ]

                    tag Goto31 {
                        value = "f_Hz"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7568, 8664
                        hide_name = True
                    ]

                    tag From8 {
                        value = "w_grid_form"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7944, 9168
                        hide_name = True
                        size = 81, 20
                    ]

                    tag From11 {
                        value = "mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8256, 9456
                        hide_name = True
                        size = 81, 20
                    ]

                    tag From12 {
                        value = "en"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8264, 9480
                        hide_name = True
                    ]

                    tag From13 {
                        value = "vq_meas_gs"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8120, 9520
                        hide_name = True
                        size = 81, 20
                    ]

                    tag From15 {
                        value = "w_grid_form"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8120, 9552
                        hide_name = True
                        size = 81, 20
                    ]

                    tag From16 {
                        value = "mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8600, 8600
                        hide_name = True
                        size = 105, 20
                    ]

                    tag Goto32 {
                        value = "Iq_ref_grid_form"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8792, 9008
                        hide_name = True
                        size = 101, 20
                    ]

                    tag Goto33 {
                        value = "Id_ref_grid_form"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8800, 9408
                        hide_name = True
                        size = 113, 20
                    ]

                    tag From17 {
                        value = "Iq_ref_grid_form"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8600, 8640
                        hide_name = True
                        size = 109, 20
                    ]

                    tag From18 {
                        value = "Iq_ref_grid_follow"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8568, 8680
                        hide_name = True
                        size = 109, 20
                    ]

                    tag Goto34 {
                        value = "Id_ref_grid_follow"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8264, 8416
                        hide_name = True
                        size = 111, 20
                    ]

                    tag Goto35 {
                        value = "Iq_ref_grid_follow"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8264, 8448
                        hide_name = True
                        size = 111, 20
                    ]

                    tag From19 {
                        value = "mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8616, 8376
                        hide_name = True
                        size = 105, 20
                    ]

                    tag From20 {
                        value = "Id_ref_grid_form"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8568, 8416
                        hide_name = True
                        size = 109, 20
                    ]

                    tag From21 {
                        value = "Id_ref_grid_follow"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8576, 8464
                        hide_name = True
                        size = 109, 20
                    ]

                    tag From22 {
                        value = "mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7712, 8496
                        hide_name = True
                        size = 105, 20
                    ]

                    tag Goto36 {
                        value = "w_grid_form"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7536, 9224
                        hide_name = True
                        size = 100, 20
                    ]

                    tag From23 {
                        value = "vd_meas_gs"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8328, 9312
                        hide_name = True
                        size = 81, 20
                    ]

                    tag Goto37 {
                        value = "vd_ref"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7496, 9304
                        hide_name = True
                        size = 100, 20
                    ]

                    tag From24 {
                        value = "vd_ref"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7960, 9296
                        hide_name = True
                    ]

                    junction Junction2 sp
                    [
                        position = 8960, 8576
                    ]

                    junction Junction1 sp
                    [
                        position = 8992, 8368
                    ]

                    junction Junction25 sp
                    [
                        position = 7944, 8136
                    ]

                    junction Junction26 sp
                    [
                        position = 7920, 8184
                    ]

                    junction Junction30 sp
                    [
                        position = 7504, 8608
                    ]

                    junction Junction35 sp
                    [
                        position = 7504, 8576
                    ]

                    junction Junction36 sp
                    [
                        position = 7888, 8552
                    ]

                    junction Junction40 sp
                    [
                        position = 9232, 8448
                    ]

                    junction Junction41 sp
                    [
                        position = 9256, 8672
                    ]

                    junction Junction44 sp
                    [
                        position = 8264, 8976
                    ]

                    junction Junction45 sp
                    [
                        position = 8248, 8944
                    ]

                    comment Comment3 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt;">stop load if f_Hz is out of bounds in grid following mode</span></p></body></html> ENDCOMMENT 
                    [
                        position = 7464, 8424
                    ]

                    comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">delay enable to allow PLL to settle</p></body></html> ENDCOMMENT 
                    [
                        position = 7688, 8632
                    ]

                    comment Comment2 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt;">Adds offsets to compensate for the </span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt;">P, Q errors caused by delay introduced</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt;">by the R-C filter of the current source</span> </p></body></html> ENDCOMMENT 
                    [
                        position = 7472, 8056
                    ]

                    comment Comment4 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Cf = 1e-6</p></body></html> ENDCOMMENT 
                    [
                        position = 8000, 9224
                    ]

                    comment Comment5 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt;">A slight error offset requires to add</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt;">10% of the d-axis ref voltage </span></p></body></html> ENDCOMMENT 
                    [
                        position = 7824, 8768
                    ]

                    comment Comment6 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt;">A slight error offset requires to remove</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt;">10% of the q-axis ref voltage </span> </p></body></html> ENDCOMMENT 
                    [
                        position = 7896, 9360
                    ]

                    comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt;">compensate reactive pwr introduced by</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt;">capacitor Cf</span></p></body></html> ENDCOMMENT 
                    [
                        position = 7336, 8264
                    ]

                    connect "Signal switch2.in2" Junction1 as Connection557
                    connect calc_current.Vd Gain13.out as Connection508
                    connect Constant2.out Junction2 as Connection560
                    connect Gain10.in Vpk as Connection514
                    connect Junction26 Gain14.out as Connection697
                    [
                        breakpoints = 7920, 8184; 7928, 8184; 7912, 8184
                    ]
                    connect Limit2.out calc_current.Vpk as Connection549
                    [
                        breakpoints = 8048, 8088; 8144, 8088
                    ]
                    connect Limit2.in Gain10.out as Connection495
                    connect Junction1 "Signal switch1.in2" as Connection556
                    connect Limit_type Termination1.in as Connection699
                    connect Goto3 Junction26 as Connection696
                    connect Pref "C function2.Pref" as Connection678
                    connect calc_current.Vq Gain9.out as Connection492
                    connect "Signal switch2.in1" Junction2 as Connection562
                    connect Junction2 "Signal switch1.in1" as Connection561
                    connect "C function2.Qref_actual" Gain14.in as Connection702
                    [
                        breakpoints = 7808, 8184; 7808, 8184
                    ]
                    connect Gain13.in Vd as Connection703
                    [
                        breakpoints = 7848, 7992
                    ]
                    connect Goto2 Junction25 as Connection693
                    connect Junction25 Gain15.out as Connection694
                    [
                        breakpoints = 7944, 8136; 7944, 8136
                    ]
                    connect calc_current.Q Junction26 as Connection698
                    connect Gain9.in Vq as Connection700
                    [
                        breakpoints = 7816, 8040
                    ]
                    connect calc_current.P Junction25 as Connection695
                    connect "C function1.en" "C function3.en_out" as Connection688
                    connect Gain15.in "C function2.Pref_actual" as Connection701
                    [
                        breakpoints = 7792, 8136
                    ]
                    connect From1 Junction1 as Connection555
                    connect Limit3.out Gain11.in as Connection712
                    connect Gain11.out "Signal switch1.in" as Connection713
                    connect Limit4.out Gain16.in as Connection720
                    connect Gain16.out "Signal switch2.in" as Connection721
                    connect vq_ref Goto4 as Connection726
                    connect id_gs Goto26 as Connection727
                    connect iq_gs Goto27 as Connection728
                    connect vd_gs Goto28 as Connection729
                    connect vq_gs Goto29 as Connection730
                    connect mode Goto30 as Connection731
                    connect From4 "Logical operator1.in" as Connection742
                    connect "Logical operator1.in1" From5 as Connection743
                    connect "Logical operator1.out" pid_controller.Enable as Connection744
                    connect "C function3.f_Hz" Junction30 as Connection749
                    connect Junction30 f_Hz as Connection750
                    connect Goto31 Junction30 as Connection751
                    connect Constant4.out Product15.in2 as Connection2079
                    connect From6 Product15.in as Connection2080
                    connect Product15.out Gain20.in as Connection2082
                    connect From3 Gain21.in as Connection2083
                    connect Gain20.out pid_controller.w_Cf_vd as Connection2085
                    [
                        breakpoints = 8224, 9104; 8424, 9104; 8424, 9104; 8504, 9104
                    ]
                    connect From11 "Logical operator2.in" as Connection2087
                    connect "Logical operator2.in1" From12 as Connection2088
                    connect Constant6.out Product16.in2 as Connection2091
                    connect From13 Product16.in as Connection2092
                    connect Product16.out Gain25.in as Connection2094
                    connect "Logical operator2.out" pid_controller1.Enable as Connection2125
                    connect Gain25.out Gain2.in as Connection2127
                    connect Gain2.out pid_controller1.w_Cf_vq as Connection2128
                    [
                        breakpoints = 8488, 9552; 8488, 9504
                    ]
                    connect From16 "Signal switch3.in2" as Connection2129
                    connect "Signal switch3.out" Limit4.in as Connection2130
                    connect From17 "Signal switch3.in" as Connection2133
                    connect Goto34 calc_current.Id as Connection2135
                    connect calc_current.Iq Goto35 as Connection2136
                    connect From19 "Signal switch4.in2" as Connection2137
                    connect "Signal switch4.out" Limit3.in as Connection2140
                    connect From22 "Signal switch5.in2" as Connection2141
                    connect "C function3.en" Junction35 as Connection2142
                    connect Junction35 en as Connection2143
                    connect "Signal switch5.in" Junction35 as Connection2144
                    connect "Signal switch5.in1" "C function1.en_out" as Connection2150
                    connect Goto1 Junction36 as Connection2151
                    connect Junction36 "Signal switch5.out" as Connection2152
                    connect Active.in Junction36 as Connection2153
                    connect w_grid_form Goto36 as Connection2154
                    connect From8 Product15.in1 as Connection2155
                    connect From15 Product16.in1 as Connection2156
                    connect Gain17.out pid_controller.ref as Connection2163
                    connect "pid_controller1.Id*" Goto33 as Connection2168
                    connect "pid_controller.Iq*" Goto32 as Connection2173
                    connect Id_.in Junction40 as Connection2186
                    [
                        breakpoints = 9232, 8400
                    ]
                    connect Junction40 Id as Connection2187
                    [
                        breakpoints = 9232, 8448; 9232, 8448; 9232, 8456; 9232, 8456
                    ]
                    connect "Signal switch1.out" Junction40 as Connection2188
                    [
                        breakpoints = 9064, 8448; 9232, 8448
                    ]
                    connect Iq_.in Junction41 as Connection2189
                    connect Junction41 Iq as Connection2190
                    [
                        breakpoints = 9256, 8672
                    ]
                    connect "Signal switch2.out" Junction41 as Connection2191
                    connect pid_controller.fdbck Gain21.out as Connection2198
                    [
                        breakpoints = 8416, 8912
                    ]
                    connect Gain26.out pid_controller1.fdbck as Connection2200
                    connect vd_ref Goto37 as Connection2205
                    connect Gain27.out pid_controller1.ref as Connection2208
                    connect From23 Gain26.in as Connection2215
                    connect pid_controller.ki Junction44 as Connection2227
                    [
                        breakpoints = 8480, 8976
                    ]
                    connect Junction44 pid_controller1.ki as Connection2228
                    [
                        breakpoints = 8264, 8976; 8264, 8976; 8264, 8976; 8264, 9392
                    ]
                    connect Ki_grid_forming_.out Junction44 as Connection2229
                    connect pid_controller.kp Junction45 as Connection2231
                    [
                        breakpoints = 8456, 8944
                    ]
                    connect Junction45 pid_controller1.kp as Connection2232
                    [
                        breakpoints = 8248, 8944; 8248, 8944
                    ]
                    connect Kp_grid_forming_.out Junction45 as Connection2233
                    connect From21 "Rate Limiter1.in" as Connection2246
                    connect "Rate Limiter1.out" "Signal switch4.in1" as Connection2247
                    connect From20 "Signal switch4.in" as Connection2248
                    connect From18 "Rate Limiter3.in" as Connection2249
                    connect "Rate Limiter3.out" "Signal switch3.in1" as Connection2250
                    connect From2 Gain17.in as Connection2251
                    connect Gain27.in From24 as Connection2252
                    [
                        breakpoints = 8400, 9256; 8008, 9256; 8008, 9296
                    ]
                    connect Constant3.out pid_controller.iq_meas_gs as Connection2253
                    connect pid_controller1.id_meas_gs Constant7.out as Connection2254
                    [
                        breakpoints = 8432, 9592
                    ]
                    connect Constant8.out Sum1.in1 as Connection2255
                    connect Qref Sum1.in as Connection2256
                    connect Sum1.out "C function2.Qref" as Connection2257

                    mask {
                        description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Calculate RMS current</p></body></html>"

                        Vnom {
                            label = "Nominal Voltage"
                            widget = edit
                            type = generic
                            default_value = "Vnom"
                            unit = "V"
                        }

                        Sb {
                            label = "Nominal power"
                            widget = edit
                            type = generic
                            default_value = "Sb"
                            unit = "VA"
                        }

                        powerRate {
                            label = "Power rate change"
                            widget = edit
                            type = generic
                            default_value = "powerRate"
                            unit = "VA/s"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE

                        CODE pre_compile
                            # HEADER START
                            Vnom = mdl.get_property_value(mdl.prop(item_handle, "Vnom"))
                            Sb = mdl.get_property_value(mdl.prop(item_handle, "Sb"))
                            powerRate = mdl.get_property_value(mdl.prop(item_handle, "powerRate"))
                            # HEADER STOP
                            Ib = (Sb/Vnom)*((2.0/3.0)**0.5)
                            I_Rate = (powerRate/Vnom)*((2.0/3.0)**0.5)
                        ENDCODE

                        CODE init
                        ENDCODE
                    }
                }
                [
                    position = 7232, 7288
                    size = 80, 536
                ]

                component "core/dq to abc" "dq to abc1" {
                    execution_rate = "inherit"
                }
                [
                    position = 7616, 7696
                    size = 48, 80
                ]

                component pas_resistor R {
                    resistance = "R"
                }
                [
                    position = 6824, 8376
                    rotation = left
                ]

                component "core/Current Measurement" Ic {
                    addr = "16"
                    execution_rate = "execution_rate"
                    sig_output = "True"
                }
                [
                    position = 7824, 8304
                    scale = -1, 1
                    size = 64, 32
                ]

                component src_constant Constant1 {
                    execution_rate = "execution_rate"
                    value = "0"
                }
                [
                    position = 7480, 7712
                    hide_name = True
                ]

                component "core/Three phase PLL" "Three phase PLL1" {
                    enable_pk = "True"
                    enable_sin = "False"
                    enable_zero = "False"
                    low_lim = "-100*2*np.pi"
                    rate_high = "100"
                    rate_low = "-100"
                    up_lim = "100*2*np.pi"
                }
                [
                    position = 6696, 7720
                    size = 64, 128
                ]

                component gen_gain Gain1 {
                    gain = "1/(2**0.5)"
                }
                [
                    position = 6352, 7944
                    hide_name = True
                ]

                component "core/Current Measurement" Ia {
                    addr = "14"
                    execution_rate = "execution_rate"
                    sig_output = "True"
                }
                [
                    position = 7832, 8104
                    scale = -1, 1
                    size = 64, 32
                ]

                component gen_probe Q {
                }
                [
                    position = 7640, 7976
                    scale = 1, -1
                ]

                component gen_probe S {
                }
                [
                    position = 7640, 7912
                    scale = 1, -1
                ]

                component "core/Current Measurement" Ib {
                    addr = "15"
                    execution_rate = "execution_rate"
                    sig_output = "True"
                }
                [
                    position = 7832, 8200
                    scale = -1, 1
                    size = 64, 32
                ]

                component gen_probe f {
                }
                [
                    position = 7608, 7792
                    scale = 1, -1
                ]

                component Subsystem Csp5 {
                    layout = dynamic
                    component pas_capacitor C {
                        capacitance = "Cfilter"
                    }
                    [
                        position = 8000, 8224
                        rotation = right
                    ]

                    component pas_resistor R {
                        resistance = "Rfilter"
                    }
                    [
                        position = 7904, 8168
                    ]

                    component gen_probe SP_value {
                    }
                    [
                        position = 7776, 8312
                    ]

                    component "core/Signal Controlled Voltage Source" Vsp {
                    }
                    [
                        position = 7808, 8224
                        rotation = left
                        scale = 1, -1
                        size = 64, 32
                    ]

                    component "core/Voltage Measurement" Vc {
                    }
                    [
                        position = 8064, 8224
                        rotation = right
                        size = 64, 32
                    ]

                    component "core/Voltage Controlled Current Source" VCCS {
                        control_gain = "1"
                        control_label = "Variable_Load.Csp1.Vc"
                    }
                    [
                        position = 8184, 8224
                        rotation = right
                        size = 64, 48
                    ]

                    port P_node {
                        position = left:1
                        kind = pe
                    }
                    [
                        position = 8344, 8168
                        rotation = down
                    ]

                    port SP_in {
                        position = top:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7728, 8176
                        rotation = right
                        scale = -1, 1
                    ]

                    port n_node {
                        position = right:1
                        kind = pe
                    }
                    [
                        position = 8344, 8288
                        rotation = down
                    ]

                    junction Junction3 pe
                    [
                        position = 8064, 8288
                    ]

                    junction Junction4 pe
                    [
                        position = 8000, 8168
                    ]

                    junction Junction5 sp
                    [
                        position = 7752, 8224
                    ]

                    junction Junction1 pe
                    [
                        position = 8000, 8288
                    ]

                    junction Junction2 pe
                    [
                        position = 8184, 8288
                    ]

                    connect Junction3 Junction2 as Connection15
                    connect SP_in Junction5 as Connection24
                    connect Junction1 Vsp.n_node as Connection10
                    connect Junction4 R.n_node as Connection18
                    connect C.p_node Junction4 as Connection17
                    connect Junction1 Junction3 as Connection14
                    connect Junction5 Vsp.in as Connection25
                    connect C.n_node Junction1 as Connection9
                    connect R.p_node Vsp.p_node as Connection4
                    connect VCCS.p_node P_node as Connection7
                    connect SP_value.in Junction5 as Connection26
                    connect Vc.n_node Junction3 as Connection16
                    connect Vc.p_node Junction4 as Connection19
                    connect VCCS.n_node Junction2 as Connection11
                    connect Junction2 n_node as Connection12

                    mask {
                        description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Signal processing source with low pass filter.</p></body></html>"

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE

                        CODE init
                        ENDCODE

                        CODE pre_compile
                            comp_handle = mdl.get_sub_level_handle(item_handle)
                            vccs = mdl.get_item("VCCS", parent=comp_handle, item_type="component")
                            vc = mdl.get_item("Vc", parent=comp_handle, item_type="component")
                            mdl.set_property_value(mdl.prop(vccs, "control_label"), mdl.get_fqn(vc))
                            SP_value = mdl.get_item("SP_value", parent=comp_handle, item_type="component")
                            Ts = mdl.get_property_value(mdl.prop(SP_value, "execution_rate"))
                            
                            Rfilter = 1.0
                            fs = 1.0/Ts
                            ws = 2.0*np.pi*fs/2.0
                            Cfilter = 1/(0.5*ws*Rfilter)
                            
                            #mdl.info('Cfilter is '+str(Cfilter))
                        ENDCODE
                    }
                }
                [
                    position = 6688, 8104
                    scale = -1, 1
                    size = 48, 48
                ]

                component gen_probe Vt {
                }
                [
                    position = 7544, 7840
                    scale = 1, -1
                ]

                component pas_resistor R2 {
                    resistance = "R"
                }
                [
                    position = 6936, 8376
                    rotation = left
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "6"
                }
                [
                    position = 6448, 7640
                    rotation = left
                    hide_name = True
                ]

                component "core/Voltage Measurement" Vc {
                    addr = "11"
                    execution_rate = "execution_rate"
                    sig_output = "True"
                }
                [
                    position = 7160, 8448
                    rotation = right
                    size = 64, 32
                ]

                component gen_probe Pf {
                }
                [
                    position = 7624, 7848
                    scale = 1, -1
                ]

                component gen_probe wt {
                }
                [
                    position = 7112, 7832
                    scale = 1, -1
                ]

                component Subsystem S_meas {
                    layout = dynamic
                    component gen_terminator Termination2 {
                    }
                    [
                        position = 8152, 8120
                        rotation = left
                        hide_name = True
                    ]

                    component gen_terminator Termination1 {
                    }
                    [
                        position = 8152, 8344
                        rotation = right
                        hide_name = True
                    ]

                    component gen_PQ_transform "Power Meter1" {
                        filter_cutoff_Hz = "5.0"
                        filter_order = "second order"
                    }
                    [
                        position = 8072, 8232
                    ]

                    port Ic {
                        label = "Ic"
                        position = right:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7936, 8376
                        rotation = left
                        scale = -1, 1
                    ]

                    port Q {
                        label = "Q"
                        position = left:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8208, 8120
                        rotation = left
                    ]

                    port pf {
                        label = "pf"
                        position = left:4
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8256, 8344
                        rotation = right
                    ]

                    port Va {
                        label = "Va"
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7912, 8120
                        rotation = right
                        scale = -1, 1
                    ]

                    port Ib {
                        label = "Ib"
                        position = right:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7976, 8344
                        rotation = left
                        scale = -1, 1
                    ]

                    port P {
                        label = "P"
                        position = left:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8256, 8120
                        rotation = left
                    ]

                    port Vb {
                        label = "Vb"
                        position = right:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7960, 8144
                        rotation = right
                        scale = -1, 1
                    ]

                    port Ia {
                        label = "Ia"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8016, 8312
                        rotation = left
                        scale = -1, 1
                    ]

                    port Vc {
                        label = "Vc"
                        position = right:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8000, 8176
                        rotation = right
                        scale = -1, 1
                    ]

                    port S {
                        label = "S"
                        position = left:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8208, 8344
                        rotation = right
                    ]

                    connect "Power Meter1.ib" Ib as Connection3
                    connect "Power Meter1.k_factor" pf as Connection10
                    connect "Power Meter1.ic" Ic as Connection4
                    connect Termination2.in "Power Meter1.Pac" as Connection12
                    connect P "Power Meter1.Pdc" as Connection1
                    connect "Power Meter1.vb" Vb as Connection8
                    connect "Power Meter1.ia" Ia as Connection1039
                    [
                        breakpoints = 8016, 8240; 8016, 8240; 8016, 8240; 8016, 8288
                    ]
                    connect "Power Meter1.vc" Vc as Connection9
                    connect "Power Meter1.va" Va as Connection7
                    connect "Power Meter1.apparent" S as Connection6
                    connect "Power Meter1.Qdc" Q as Connection5
                    connect Termination1.in "Power Meter1.Qac" as Connection11
                }
                [
                    position = 6264, 7760
                    scale = -1, 1
                    size = 96, 224
                ]

                component Subsystem Csp7 {
                    layout = dynamic
                    component pas_capacitor C {
                        capacitance = "Cfilter"
                    }
                    [
                        position = 8000, 8224
                        rotation = right
                    ]

                    component pas_resistor R {
                        resistance = "Rfilter"
                    }
                    [
                        position = 7904, 8168
                    ]

                    component "core/Voltage Measurement" Vc {
                    }
                    [
                        position = 8064, 8224
                        rotation = right
                        size = 64, 32
                    ]

                    component "core/Voltage Controlled Current Source" VCCS {
                        control_gain = "1"
                        control_label = "Variable_Load.Csp1.Vc"
                    }
                    [
                        position = 8184, 8224
                        rotation = right
                        size = 64, 48
                    ]

                    component "core/Signal Controlled Voltage Source" Vsp {
                    }
                    [
                        position = 7808, 8224
                        rotation = left
                        scale = 1, -1
                        size = 64, 32
                    ]

                    component gen_probe SP_value {
                    }
                    [
                        position = 7776, 8312
                    ]

                    port SP_in {
                        position = top:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7728, 8176
                        rotation = right
                        scale = -1, 1
                    ]

                    port n_node {
                        position = right:1
                        kind = pe
                    }
                    [
                        position = 8344, 8288
                        rotation = down
                    ]

                    port P_node {
                        position = left:1
                        kind = pe
                    }
                    [
                        position = 8344, 8168
                        rotation = down
                    ]

                    junction Junction3 pe
                    [
                        position = 8064, 8288
                    ]

                    junction Junction5 sp
                    [
                        position = 7752, 8224
                    ]

                    junction Junction4 pe
                    [
                        position = 8000, 8168
                    ]

                    junction Junction1 pe
                    [
                        position = 8000, 8288
                    ]

                    junction Junction2 pe
                    [
                        position = 8184, 8288
                    ]

                    connect Vc.p_node Junction4 as Connection19
                    connect C.n_node Junction1 as Connection9
                    connect Junction5 Vsp.in as Connection25
                    connect R.p_node Vsp.p_node as Connection4
                    connect Vc.n_node Junction3 as Connection16
                    connect VCCS.n_node Junction2 as Connection11
                    connect SP_value.in Junction5 as Connection26
                    connect Junction4 R.n_node as Connection18
                    connect C.p_node Junction4 as Connection17
                    connect Junction2 n_node as Connection12
                    connect Junction1 Junction3 as Connection14
                    connect VCCS.p_node P_node as Connection7
                    connect SP_in Junction5 as Connection24
                    connect Junction1 Vsp.n_node as Connection10
                    connect Junction3 Junction2 as Connection15

                    mask {
                        description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\"\">Signal processing source with low pass filter.</span></p></body></html>"

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE

                        CODE init
                        ENDCODE

                        CODE pre_compile
                            comp_handle = mdl.get_sub_level_handle(item_handle)
                            vccs = mdl.get_item("VCCS", parent=comp_handle, item_type="component")
                            vc = mdl.get_item("Vc", parent=comp_handle, item_type="component")
                            mdl.set_property_value(mdl.prop(vccs, "control_label"), mdl.get_fqn(vc))
                            SP_value = mdl.get_item("SP_value", parent=comp_handle, item_type="component")
                            Ts = mdl.get_property_value(mdl.prop(SP_value, "execution_rate"))
                            
                            Rfilter = 1.0
                            fs = 1.0/Ts
                            ws = 2.0*np.pi*fs/2.0
                            Cfilter = 1/(0.5*ws*Rfilter)
                        ENDCODE
                    }
                }
                [
                    position = 6688, 8200
                    scale = -1, 1
                    size = 48, 48
                ]

                component gen_sum Sum1 {
                }
                [
                    position = 6896, 7752
                    hide_name = True
                ]

                component src_constant Constant2 {
                    execution_rate = "inherit"
                    value = "-np.pi/2"
                }
                [
                    position = 6800, 7824
                    hide_name = True
                ]

                component gen_c_function w_ref_grid_forming {
                    global_variables = "real wt_ref_grid_forming_var;int trigger;int enable_vf_control_k1;int start_integrator;real pi_on_2;real f_droop_Hz;real one_on_2pi;real dP;real two_pi;"
                    in_terminal_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit"
                    in_terminal_dimensions_str = "wt_PLL inherit;enable_vf_control inherit;w_ref_grid_forming inherit;f_droop_enable inherit;f_droop_gain inherit;P_kW inherit;P_nominal_kW inherit;f_nominal_Hz inherit"
                    in_terminal_labels = "[(\'wt_PLL\', True), (\'enable_vf_control\', True), (\'w_ref_grid_forming\', True), (\'f_droop_enable\', True), (\'f_droop_gain\', True), (\'P_kW\', True), (\'P_nominal_kW\', True), (\'f_nominal_Hz\', True)]"
                    in_terminal_properties = "real wt_PLL;real enable_vf_control;real w_ref_grid_forming;inherit f_droop_enable;inherit f_droop_gain;inherit P_kW;inherit P_nominal_kW;inherit f_nominal_Hz;"
                    init_fnc = "/*Begin code section*/
enable_vf_control_k1 = 0;
wt_ref_grid_forming_var = 0;
pi_on_2 = 1.570796326794897;
one_on_2pi = 1.591549430918954e-01;
two_pi = 6.283185307179586;
/*End code section*/"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit;inherit"
                    out_terminal_dimensions_str = "wt_ref_grid_forming inherit;f_final_Hz inherit"
                    out_terminal_labels = "[(\'wt_ref_grid_forming\', True), (\'f_final_Hz\', True)]"
                    out_terminal_properties = "real wt_ref_grid_forming;inherit f_final_Hz;"
                    output_fnc = "/*Begin code section*/
wt_ref_grid_forming = wt_ref_grid_forming_var;
//angle measurement
/*End code section*/"
                    update_fnc = "/*Begin code section*/
//compute drooped freq. Droop interpreted as: 10% freq droop => a 100% change in power will cause 10% freq. change
if (f_droop_enable > 0.5)
    dP =  -P_kW;
else
    dP = 0;

f_droop_Hz = dP/P_nominal_kW * f_droop_gain * f_nominal_Hz;
f_final_Hz = f_droop_Hz + w_ref_grid_forming*one_on_2pi;
if (f_final_Hz > 100.0)
{
    f_final_Hz = 100.0;
}
if (f_final_Hz < 40.0)
{
    f_final_Hz = 40.0;
}

trigger = enable_vf_control - enable_vf_control_k1;
enable_vf_control_k1 = enable_vf_control;

if (trigger > 0) //if vf control has been enabled
{
    wt_ref_grid_forming_var = wt_PLL; //take over the previous angle from the PLL
    start_integrator = 1;
}
if (trigger < 0) //if vf control has been disabled.
{
    start_integrator = 0;
}

if (start_integrator == 1)
//if (enable_vf_control > 0.5)
{
    wt_ref_grid_forming_var = wt_ref_grid_forming_var + (f_final_Hz*two_pi)*execution_rate;
    if (wt_ref_grid_forming_var >= 6.283185307179586)
    {
        wt_ref_grid_forming_var = wt_ref_grid_forming_var - 6.283185307179586; //rollover
    }
}
/*End code section*/"
                }
                [
                    position = 8344, 7768
                    size = 176, 272
                ]

                component "core/abc to dq" "abc to dq1" {
                }
                [
                    position = 7608, 7432
                    size = 48, 80
                ]

                component gen_terminator Termination2 {
                }
                [
                    position = 7712, 7464
                ]

                component "core/abc to dq" "abc to dq2" {
                }
                [
                    position = 8048, 7424
                    size = 48, 80
                ]

                component gen_terminator Termination3 {
                }
                [
                    position = 8128, 7456
                ]

                component pas_capacitor C1 {
                    capacitance = "Cf"
                }
                [
                    position = 7360, 8424
                    rotation = right
                ]

                component pas_capacitor C2 {
                    capacitance = "Cf"
                }
                [
                    position = 7432, 8424
                    rotation = right
                ]

                component pas_capacitor C3 {
                    capacitance = "Cf"
                }
                [
                    position = 7504, 8424
                    rotation = right
                ]

                component sys_signal_switch "Signal switch1" {
                    threshold = "0.5"
                }
                [
                    position = 6928, 7968
                    hide_name = True
                ]

                component src_scada_input f_ref {
                    def_value = "60.0"
                    execution_rate = "execution_rate"
                    unit = ""
                }
                [
                    position = 7928, 7720
                ]

                component gen_gain Gain3 {
                    gain = "1e-3"
                }
                [
                    position = 8088, 7816
                    hide_name = True
                ]

                component src_constant Constant4 {
                    execution_rate = "execution_rate"
                    value = "Sb*1e-3"
                }
                [
                    position = 8104, 7848
                    hide_name = True
                ]

                component src_constant Constant5 {
                    execution_rate = "execution_rate"
                    value = "60.0"
                }
                [
                    position = 8184, 7880
                    hide_name = True
                ]

                component src_scada_input vq_ref {
                    def_value = "120*np.sqrt(2.0)"
                    execution_rate = "execution_rate"
                    unit = "Vpk"
                }
                [
                    position = 8488, 8016
                ]

                component gen_probe vd_meas {
                }
                [
                    position = 8176, 7264
                    scale = 1, -1
                ]

                component gen_probe vq_meas {
                }
                [
                    position = 8176, 7328
                    scale = 1, -1
                ]

                component gen_probe id_meas {
                }
                [
                    position = 7752, 7344
                    scale = 1, -1
                ]

                component gen_probe iq_meas {
                }
                [
                    position = 7752, 7288
                    scale = 1, -1
                ]

                component src_scada_input ph_offset_grid_forming {
                    execution_rate = "execution_rate"
                    max = "180.0"
                    min = "-180.0"
                    unit = "deg"
                }
                [
                    position = 8512, 7720
                ]

                component gen_sum Sum2 {
                }
                [
                    position = 8712, 7672
                    hide_name = True
                ]

                component gen_gain Gain4 {
                    gain = "np.pi/180.0"
                }
                [
                    position = 8608, 7720
                    hide_name = True
                ]

                component gen_gain Gain5 {
                    gain = "-1"
                }
                [
                    position = 8152, 7816
                    hide_name = True
                ]

                component gen_c_function v_droop {
                    global_variables = "real dQ;real v_droop_LLrms_var;real Q_nominal_kVAr_var;real v_nominal_LLrms_var;real v_droop_gain_var;"
                    in_terminal_dimensions = "inherit;inherit;inherit;inherit;inherit"
                    in_terminal_dimensions_str = "v_droop_gain inherit;v_nominal_LLrms inherit;Q_nominal_kVAr inherit;v_droop_enable inherit;Q_kVAr inherit"
                    in_terminal_labels = "[(\'v_droop_gain\', True), (\'v_nominal_LLrms\', True), (\'Q_nominal_kVAr\', True), (\'v_droop_enable\', True), (\'Q_kVAr\', True)]"
                    in_terminal_properties = "inherit v_droop_gain;inherit v_nominal_LLrms;inherit Q_nominal_kVAr;inherit v_droop_enable;inherit Q_kVAr;"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "v_droop_LLrms inherit"
                    out_terminal_labels = "[(\'v_droop_LLrms\', True)]"
                    out_terminal_properties = "inherit v_droop_LLrms;"
                    output_fnc = "/*Begin code section*/
v_droop_LLrms = v_droop_LLrms_var;
/*End code section*/"
                    update_fnc = "/*Begin code section*/
v_nominal_LLrms_var = v_nominal_LLrms;
if (v_nominal_LLrms_var < 1.0)
{
    v_nominal_LLrms_var = 1.0; //prevent div by 0
}

v_droop_gain_var = v_droop_gain;
if (v_droop_gain_var < 1e-3)
{
    v_droop_gain_var = 1e-3; //prevent div by 0
}

Q_nominal_kVAr_var = Q_nominal_kVAr;
if ((Q_nominal_kVAr_var < 1e-3) && (Q_nominal_kVAr_var >= 0))
{
    Q_nominal_kVAr_var = 1e-3; //prevent div by 0
}
else if ((Q_nominal_kVAr_var > -1e-3) && (Q_nominal_kVAr_var < 0))
{
    Q_nominal_kVAr_var = -1e-3; //prevent div by 0
}

//voltage droop in standalone (or grid forming mode)
if (v_droop_enable > 0.5)
    dQ =  -Q_kVAr;
else
    dQ = 0;
v_droop_LLrms_var = (dQ/Q_nominal_kVAr_var) * v_droop_gain_var * v_nominal_LLrms_var;
/*End code section*/"
                }
                [
                    position = 8352, 8080
                    size = 176, 280
                ]

                component src_constant Constant6 {
                    execution_rate = "execution_rate"
                    value = "Vnom"
                }
                [
                    position = 8160, 8024
                    hide_name = True
                ]

                component src_constant Constant7 {
                    execution_rate = "execution_rate"
                    value = "Sb*1e-3"
                }
                [
                    position = 8160, 8080
                    hide_name = True
                ]

                component gen_gain Gain6 {
                    gain = "1e-3"
                }
                [
                    position = 8112, 8192
                    hide_name = True
                ]

                component gen_gain Gain7 {
                    gain = "-1"
                }
                [
                    position = 8176, 8192
                    hide_name = True
                ]

                component gen_sum Sum3 {
                }
                [
                    position = 8680, 8064
                    hide_name = True
                ]

                component gen_gain "rms->dq" {
                    gain = "np.sqrt(2.0/3.0)"
                }
                [
                    position = 8496, 8080
                ]

                component src_scada_input vd_ref {
                    execution_rate = "execution_rate"
                    unit = "Vpk"
                }
                [
                    position = 8496, 8160
                ]

                component gen_probe v_droop_q {
                }
                [
                    position = 8632, 7968
                    scale = 1, -1
                ]

                component gen_gain Gain8 {
                    gain = "2.0*np.pi"
                }
                [
                    position = 8488, 7880
                    hide_name = True
                ]

                component gen_gain Gain9 {
                    gain = "2.0*np.pi"
                }
                [
                    position = 8016, 7720
                    hide_name = True
                ]

                component "core/Voltage Measurement" Vab {
                    addr = "7"
                    execution_rate = "execution_rate"
                }
                [
                    position = 7264, 8144
                    rotation = right
                    size = 64, 32
                ]

                component src_constant Constant8 {
                    execution_rate = "execution_rate"
                    value = "0"
                }
                [
                    position = 8160, 7752
                    hide_name = True
                ]

                component src_constant Constant9 {
                    execution_rate = "execution_rate"
                    value = "0"
                }
                [
                    position = 8160, 7968
                    hide_name = True
                ]

                component "core/Current RMS" Irms1 {
                    execution_rate = "execution_rate"
                }
                [
                    position = 7728, 8104
                    scale = -1, 1
                    size = 64, 32
                ]

                component pas_resistor R3 {
                    resistance = "rLf"
                }
                [
                    position = 7600, 8104
                ]

                component pas_inductor L1 {
                    inductance = "Lf"
                }
                [
                    position = 7504, 8104
                ]

                component pas_resistor R4 {
                    resistance = "rLf"
                }
                [
                    position = 7632, 8200
                ]

                component pas_inductor L2 {
                    inductance = "Lf"
                }
                [
                    position = 7536, 8200
                ]

                component pas_resistor R5 {
                    resistance = "rLf"
                }
                [
                    position = 7680, 8304
                ]

                component pas_inductor L3 {
                    inductance = "Lf"
                }
                [
                    position = 7584, 8304
                ]

                port C {
                    position = top:7
                    kind = pe
                    direction =  out
                }
                [
                    position = 7920, 8304
                    scale = -1, 1
                ]

                port Output {
                    position = left:11
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 6448, 7560
                    rotation = left
                ]

                port A {
                    position = top:1
                    kind = pe
                    direction =  out
                }
                [
                    position = 7920, 8104
                    scale = -1, 1
                ]

                port B {
                    position = top:2
                    kind = pe
                    direction =  out
                }
                [
                    position = 7920, 8200
                    scale = -1, 1
                ]

                port Input {
                    position = left:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 6472, 7984
                    rotation = right
                ]

                tag From16 {
                    value = "Vc"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6128, 7744
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto6 {
                    value = "Ib"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7880, 8168
                    hide_name = True
                    scale = 1, -1
                    size = 60, 20
                ]

                tag Goto14 {
                    value = "Vd"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6816, 7592
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto23 {
                    value = "Output"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 6544, 7592
                    hide_name = True
                ]

                tag Goto5 {
                    value = "Ia"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7944, 8064
                    hide_name = True
                    scale = 1, -1
                    size = 60, 20
                ]

                tag Goto9 {
                    value = "Vb"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7256, 8408
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto18 {
                    value = "Id"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7360, 7536
                    hide_name = True
                    size = 60, 20
                ]

                tag From39 {
                    value = "Qref"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7048, 7176
                    hide_name = True
                    size = 60, 20
                ]

                tag From35 {
                    value = "freq"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6272, 7912
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto17 {
                    value = "Vq"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6896, 7648
                    hide_name = True
                    size = 60, 20
                ]

                tag From36 {
                    value = "Vpk"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6272, 7944
                    hide_name = True
                    size = 60, 20
                ]

                tag From32 {
                    value = "wt_final"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7488, 7752
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto10 {
                    value = "Vc"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7256, 8448
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto8 {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7256, 8368
                    hide_name = True
                    size = 60, 20
                ]

                tag From11 {
                    value = "Ic"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6128, 7840
                    hide_name = True
                    size = 60, 20
                ]

                tag From40 {
                    value = "Limit_type"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7048, 7208
                    hide_name = True
                    size = 60, 20
                ]

                tag From42 {
                    value = "en"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7048, 7272
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto7 {
                    value = "Ic"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7880, 8272
                    hide_name = True
                    scale = 1, -1
                    size = 60, 20
                ]

                tag From44 {
                    value = "freq"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7048, 7240
                    hide_name = True
                    size = 60, 20
                ]

                tag From34 {
                    value = "Ib_out"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6544, 8160
                    hide_name = True
                    size = 60, 20
                ]

                tag From33 {
                    value = "Ia_out"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6544, 8064
                    hide_name = True
                    size = 60, 20
                ]

                tag From13 {
                    value = "Ib"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6128, 7808
                    hide_name = True
                    size = 60, 20
                ]

                tag From15 {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6128, 7680
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto21 {
                    value = "Ib_out"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7712, 7696
                    hide_name = True
                    size = 60, 20
                ]

                tag From12 {
                    value = "Ia"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6128, 7776
                    hide_name = True
                    size = 60, 20
                ]

                tag From25 {
                    value = "Vc"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6576, 7792
                    hide_name = True
                    size = 60, 20
                ]

                tag From27 {
                    value = "Vd"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7056, 7048
                    hide_name = True
                    size = 60, 20
                ]

                tag From24 {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6576, 7664
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto19 {
                    value = "Iq"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7352, 7040
                    hide_name = True
                    size = 60, 20
                ]

                tag From31 {
                    value = "Iq"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7488, 7680
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto25 {
                    value = "Q"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6392, 7752
                    hide_name = True
                    size = 37, 20
                ]

                tag Goto16 {
                    value = "freq"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6896, 7680
                    hide_name = True
                    size = 60, 20
                ]

                tag From29 {
                    value = "Vpk"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7048, 7112
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto15 {
                    value = "Vpk"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6784, 7768
                    hide_name = True
                    size = 60, 20
                ]

                tag From14 {
                    value = "Vb"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6128, 7712
                    hide_name = True
                    size = 60, 20
                ]

                tag From23 {
                    value = "Vb"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6576, 7728
                    hide_name = True
                    size = 60, 20
                ]

                tag From43 {
                    value = "Pref"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7048, 7144
                    hide_name = True
                    size = 60, 20
                ]

                tag From30 {
                    value = "Id"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7488, 7648
                    hide_name = True
                    size = 60, 20
                ]

                tag From41 {
                    value = "Output"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7376, 7896
                    hide_name = True
                ]

                tag From28 {
                    value = "Vq"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7056, 7080
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto24 {
                    value = "P"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6392, 7704
                    hide_name = True
                    size = 37, 20
                ]

                tag Goto22 {
                    value = "Ia_out"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7712, 7648
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto20 {
                    value = "wt_PLL"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7032, 7752
                    hide_name = True
                    size = 60, 20
                ]

                tag From45 {
                    value = "Ic"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7480, 7456
                    hide_name = True
                    size = 60, 20
                ]

                tag From46 {
                    value = "Ib"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7480, 7424
                    hide_name = True
                    size = 60, 20
                ]

                tag From47 {
                    value = "Ia"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7480, 7392
                    hide_name = True
                    size = 60, 20
                ]

                tag From48 {
                    value = "wt_final"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7472, 7488
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto26 {
                    value = "id_meas_gs"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7752, 7408
                    hide_name = True
                    size = 100, 20
                ]

                tag Goto27 {
                    value = "iq_meas_gs"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7752, 7432
                    hide_name = True
                    size = 100, 20
                ]

                tag From49 {
                    value = "Vc"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7920, 7448
                    hide_name = True
                    size = 60, 20
                ]

                tag From50 {
                    value = "Vb"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7920, 7416
                    hide_name = True
                    size = 60, 20
                ]

                tag From51 {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7920, 7384
                    hide_name = True
                    size = 60, 20
                ]

                tag From52 {
                    value = "wt_final"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7912, 7480
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto28 {
                    value = "vd_meas_gs"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8168, 7400
                    hide_name = True
                    size = 100, 20
                ]

                tag Goto29 {
                    value = "vq_meas_gs"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8168, 7424
                    hide_name = True
                    size = 100, 20
                ]

                tag From53 {
                    value = "wt_PLL"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6832, 7984
                    hide_name = True
                    size = 60, 20
                ]

                tag From1 {
                    value = "mode"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 6824, 7912
                    hide_name = True
                ]

                tag From54 {
                    value = "wt_grid_forming"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6824, 7952
                    hide_name = True
                    size = 87, 20
                ]

                tag Goto30 {
                    value = "wt_final"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7032, 7968
                    hide_name = True
                    size = 60, 20
                ]

                tag From55 {
                    value = "wt_PLL"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8120, 7656
                    hide_name = True
                    size = 60, 20
                ]

                tag From56 {
                    value = "mode"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8120, 7688
                    hide_name = True
                    size = 60, 20
                ]

                tag From57 {
                    value = "P"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7952, 7816
                    hide_name = True
                    size = 35, 20
                ]

                tag Goto31 {
                    value = "wt_grid_forming"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8864, 7672
                    hide_name = True
                    size = 94, 20
                ]

                tag From58 {
                    value = "id_meas_gs"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7048, 7336
                    hide_name = True
                    size = 60, 20
                ]

                tag From59 {
                    value = "iq_meas_gs"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7048, 7368
                    hide_name = True
                    size = 60, 20
                ]

                tag From60 {
                    value = "vq_meas_gs"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7048, 7432
                    hide_name = True
                    size = 60, 20
                ]

                tag From61 {
                    value = "vd_meas_gs"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7048, 7400
                    hide_name = True
                    size = 60, 20
                ]

                tag From62 {
                    value = "mode"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7048, 7464
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto32 {
                    value = "w_ref_grid_form"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8592, 7880
                    hide_name = True
                    size = 81, 20
                ]

                tag From63 {
                    value = "w_ref_grid_form"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7040, 7496
                    hide_name = True
                    size = 116, 20
                ]

                tag From64 {
                    value = "Q"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7976, 8192
                    hide_name = True
                    size = 35, 20
                ]

                tag Goto33 {
                    value = "vq_ref_grid_forming"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8832, 8064
                    hide_name = True
                    size = 148, 20
                ]

                tag Goto34 {
                    value = "vd_ref_grid_forming"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8744, 8160
                    hide_name = True
                    size = 153, 20
                ]

                tag From65 {
                    value = "vq_ref_grid_forming"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7040, 7304
                    hide_name = True
                    size = 116, 20
                ]

                tag From66 {
                    value = "vd_ref_grid_forming"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7040, 7528
                    hide_name = True
                    size = 116, 20
                ]

                junction Junction239 sp
                [
                    position = 6344, 7728
                ]

                junction Junction207 pe
                [
                    position = 6824, 8104
                ]

                junction Junction132 pe
                [
                    position = 7088, 8520
                ]

                junction Junction205 pe
                [
                    position = 7088, 8200
                ]

                junction Junction211 pe
                [
                    position = 7008, 8520
                ]

                junction Junction238 sp
                [
                    position = 6336, 7680
                ]

                junction Junction235 pe
                [
                    position = 6936, 8304
                ]

                junction Junction236 pe
                [
                    position = 6600, 8200
                ]

                junction Junction223 sp
                [
                    position = 6448, 7584
                ]

                junction Junction233 pe
                [
                    position = 6880, 8200
                ]

                junction Junction206 pe
                [
                    position = 7160, 8304
                ]

                junction Junction215 pe
                [
                    position = 6824, 8520
                ]

                junction Junction212 pe
                [
                    position = 6880, 8520
                ]

                junction Junction234 pe
                [
                    position = 6760, 8104
                ]

                junction Junction213 pe
                [
                    position = 6936, 8520
                ]

                junction Junction240 sp
                [
                    position = 6968, 7752
                ]

                junction Junction244 pe
                [
                    position = 7160, 8520
                ]

                junction Junction245 pe
                [
                    position = 7360, 8520
                ]

                junction Junction246 pe
                [
                    position = 7432, 8520
                ]

                junction Junction249 sp
                [
                    position = 8088, 7400
                ]

                junction Junction250 sp
                [
                    position = 8104, 7424
                ]

                junction Junction251 sp
                [
                    position = 7680, 7408
                ]

                junction Junction252 sp
                [
                    position = 7656, 7432
                ]

                junction Junction254 sp
                [
                    position = 8560, 8080
                ]

                junction Junction256 pe
                [
                    position = 7264, 8200
                ]

                junction Junction522 sp
                [
                    position = 8224, 7752
                ]

                junction Junction523 sp
                [
                    position = 8232, 7968
                ]

                junction Junction524 pe
                [
                    position = 7008, 8104
                ]

                junction Junction525 pe
                [
                    position = 7264, 8104
                ]

                junction Junction526 pe
                [
                    position = 7504, 8304
                ]

                junction Junction527 pe
                [
                    position = 7432, 8200
                ]

                junction Junction528 pe
                [
                    position = 7360, 8104
                ]

                comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt;">-1 due to direction of </span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt;">current (motor-direction)</span> </p></body></html> ENDCOMMENT 
                [
                    position = 7880, 7824
                ]

                comment Comment2 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt;">-1 due to direction of </span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt;">current (motor-direction)</span> </p></body></html> ENDCOMMENT 
                [
                    position = 8000, 8216
                ]

                comment Comment3 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt;">By choice, the droop is applied only </span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt;">to q-axis, since d-axis voltage is expected </span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt;">to be usually set to 0 in grid-forming</span>  </p></body></html> ENDCOMMENT 
                [
                    position = 8648, 8088
                ]

                connect From40 calc_current.Limit_type as Connection751
                connect Junction215 Junction212 as Connection944
                connect Csp5.P_node Junction234 as Connection1178
                connect Csp5.n_node Junction236 as Connection1182
                [
                    breakpoints = 6600, 8136
                ]
                connect From44 calc_current.f_Hz as Connection1200
                connect Junction235 Junction206 as Connection1180
                [
                    breakpoints = 6936, 8304; 6936, 8304; 6936, 8304; 6936, 8304; 7160, 8304
                ]
                connect From42 calc_current.en as Connection1064
                connect Goto24 Junction238 as Connection1196
                connect From23 "Three phase PLL1.vb" as Connection1038
                connect Junction223 "Bus Join1.out" as Connection999
                connect Junction205 Vb.p_node as Connection868
                connect From24 "Three phase PLL1.va" as Connection1037
                connect From33 Csp5.SP_in as Connection1186
                connect calc_current.Vpk From29 as Connection660
                connect Ib.p_node B as Connection862
                connect "dq to abc1.phase_a" Goto22 as Connection1068
                connect From12 S_meas.Ia as Connection588
                connect From27 calc_current.Vd as Connection1187
                connect Vrms1.p_node Junction234 as Connection1176
                connect R2.p_node Junction213 as Connection939
                connect "dq to abc1.phase_c" Termination1.in as Connection1070
                connect Junction238 "Bus Join1.in" as Connection1195
                connect Goto15 "Three phase PLL1.peak" as Connection1087
                connect "dq to abc1.zero_input" Constant1.out as Connection1073
                connect Ib.out Goto6 as Connection699
                connect S_meas.Vb From14 as Connection654
                connect "Bus Split2.out" P.in as Connection790
                connect Gain1.in From36 as Connection641
                connect S_meas.Ib From13 as Connection589
                connect Csp7.n_node Junction236 as Connection1184
                connect From39 calc_current.Qref as Connection752
                connect Gain1.out "Bus Join1.in5" as Connection847
                connect Csp7.P_node Junction233 as Connection1175
                connect Junction132 Junction211 as Connection931
                [
                    breakpoints = 7088, 8520
                ]
                connect Vb.out Goto9 as Connection703
                connect "Bus Split2.out2" S.in as Connection792
                connect R.p_node Junction215 as Connection943
                connect Vc.p_node Junction206 as Connection870
                connect Goto8 Va.out as Connection736
                [
                    breakpoints = 7208, 8368; 7040, 8368
                ]
                connect Vrms1.n_node Junction215 as Connection1136
                [
                    breakpoints = 6760, 8520
                ]
                connect Junction239 "Bus Join1.in1" as Connection1198
                connect Goto18 calc_current.Id as Connection928
                connect R1.n_node Junction233 as Connection1173
                [
                    breakpoints = 6880, 8272
                ]
                connect Goto25 Junction239 as Connection1199
                connect "Bus Split2.out1" Q.in as Connection791
                connect "Three phase PLL1.vc" From25 as Connection1039
                connect From35 "Bus Join1.in4" as Connection846
                connect Goto7 Ic.out as Connection700
                connect S_meas.pf "Bus Join1.in3" as Connection842
                connect Vc.out Goto10 as Connection701
                connect "dq to abc1.phase_b" Goto21 as Connection1069
                connect Junction233 Junction205 as Connection1174
                [
                    breakpoints = 6880, 8200; 6880, 8200; 6880, 8200; 6880, 8200; 6880, 8200; 6880, 8200; 6880, 8200; 7088, 8200; 7088, 8200; 7088, 8200; 7088, 8200
                ]
                connect "Bus Split2.out4" f.in as Connection794
                connect From30 "dq to abc1.d_input" as Connection1071
                connect Ia.out Goto5 as Connection1036
                connect From16 S_meas.Vc as Connection655
                connect From11 S_meas.Ic as Connection590
                connect From34 Csp7.SP_in as Connection1185
                connect Ic.p_node C as Connection863
                connect Junction212 Junction213 as Connection937
                connect S_meas.P Junction238 as Connection1194
                connect "Bus Split2.out5" Vt.in as Connection795
                connect S_meas.S "Bus Join1.in2" as Connection841
                connect Junction213 Junction211 as Connection938
                connect Junction207 R.n_node as Connection1133
                [
                    breakpoints = 6824, 8104; 6824, 8248
                ]
                connect Input Control_Inputs.In1 as Connection753
                connect Goto23 Junction223 as Connection1000
                connect "dq to abc1.wt" From32 as Connection1074
                connect Output Junction223 as Connection998
                connect "Three phase PLL1.freq" Goto16 as Connection1042
                connect S_meas.Q Junction239 as Connection1197
                connect Junction234 Junction207 as Connection1177
                [
                    breakpoints = 6760, 8104; 6760, 8104; 6760, 8104; 6824, 8104
                ]
                connect Goto19 calc_current.Iq as Connection929
                connect Ia.p_node A as Connection861
                connect "Bus Split2.out3" Pf.in as Connection793
                connect From15 S_meas.Va as Connection653
                connect From43 calc_current.Pref as Connection1067
                connect R2.n_node Junction235 as Connection1179
                [
                    breakpoints = 6936, 8320
                ]
                connect R1.p_node Junction212 as Connection936
                connect From31 "dq to abc1.q_input" as Connection1072
                [
                    breakpoints = 7576, 7696
                ]
                connect calc_current.Vq From28 as Connection1188
                connect From41 "Bus Split2.in" as Connection1001
                connect Vb.n_node Junction132 as Connection294
                connect Junction211 Va.n_node as Connection932
                [
                    breakpoints = 7008, 8520
                ]
                connect "Three phase PLL1.theta" Sum1.in as Connection1202
                connect Sum1.out Junction240 as Connection1204
                connect Junction240 Goto20 as Connection1205
                connect Constant2.out Sum1.in1 as Connection1207
                connect "Three phase PLL1.q_axis" Goto14 as Connection1208
                connect Goto17 "Three phase PLL1.d_axis" as Connection1209
                connect "abc to dq1.va" From47 as Connection1210
                connect From46 "abc to dq1.vb" as Connection1211
                connect From45 "abc to dq1.vc" as Connection1212
                [
                    breakpoints = 7528, 7440; 7568, 7440
                ]
                connect From48 "abc to dq1.wt" as Connection1213
                [
                    breakpoints = 7552, 7488; 7552, 7456
                ]
                connect "abc to dq1.zero_axis" Termination2.in as Connection1216
                connect "abc to dq2.va" From51 as Connection1217
                connect From50 "abc to dq2.vb" as Connection1218
                connect From49 "abc to dq2.vc" as Connection1219
                [
                    breakpoints = 7968, 7432; 8008, 7432
                ]
                connect From52 "abc to dq2.wt" as Connection1220
                [
                    breakpoints = 7992, 7480; 7992, 7448
                ]
                connect "abc to dq2.zero_axis" Termination3.in as Connection1223
                connect Vc.n_node Junction244 as Connection1233
                connect Junction244 Junction132 as Connection1234
                connect C1.n_node Junction245 as Connection1236
                connect Junction245 Junction244 as Connection1237
                connect C2.n_node Junction246 as Connection1239
                connect Junction246 Junction245 as Connection1240
                connect C3.n_node Junction246 as Connection1241
                connect "Signal switch1.in2" From1 as Connection1242
                connect From54 "Signal switch1.in" as Connection1246
                connect From53 "Signal switch1.in1" as Connection1247
                connect From55 w_ref_grid_forming.wt_PLL as Connection1248
                connect From56 w_ref_grid_forming.enable_vf_control as Connection1249
                connect Constant4.out w_ref_grid_forming.P_nominal_kW as Connection1263
                connect Constant5.out w_ref_grid_forming.f_nominal_Hz as Connection1264
                connect From58 calc_current.id_gs as Connection1267
                connect From59 calc_current.iq_gs as Connection1268
                connect From60 calc_current.vq_gs as Connection1269
                connect calc_current.vd_gs From61 as Connection1270
                connect From62 calc_current.mode as Connection1271
                connect From63 calc_current.w_grid_form as Connection1275
                connect "abc to dq2.d_axis" Junction249 as Connection1276
                connect Junction249 Goto28 as Connection1277
                connect vd_meas.in Junction249 as Connection1278
                connect "abc to dq2.q_axis" Junction250 as Connection1279
                connect Junction250 Goto29 as Connection1280
                connect vq_meas.in Junction250 as Connection1281
                connect "abc to dq1.d_axis" Junction251 as Connection1282
                connect Junction251 Goto26 as Connection1283
                connect id_meas.in Junction251 as Connection1284
                connect "abc to dq1.q_axis" Junction252 as Connection1285
                connect Junction252 Goto27 as Connection1286
                connect iq_meas.in Junction252 as Connection1287
                connect w_ref_grid_forming.wt_ref_grid_forming Sum2.in as Connection1289
                connect Sum2.out Goto31 as Connection1291
                connect ph_offset_grid_forming.out Gain4.in as Connection1292
                connect Gain4.out Sum2.in1 as Connection1293
                connect Gain3.out Gain5.in as Connection1295
                connect Gain5.out w_ref_grid_forming.P_kW as Connection1296
                connect Constant6.out v_droop.v_nominal_LLrms as Connection1299
                connect Constant7.out v_droop.Q_nominal_kVAr as Connection1300
                connect Gain6.out Gain7.in as Connection1305
                connect Gain7.out v_droop.Q_kVAr as Connection1306
                connect vd_ref.out Goto34 as Connection1312
                connect From65 calc_current.vq_ref as Connection1313
                connect From66 calc_current.vd_ref as Connection1314
                connect Sum3.in vq_ref.out as Connection1318
                [
                    breakpoints = 8520, 8016
                ]
                connect Goto33 Sum3.out as Connection1319
                connect Junction240 wt.in as Connection1325
                [
                    breakpoints = 6968, 7752; 6968, 7792
                ]
                connect Goto30 "Signal switch1.out" as Connection1326
                connect "rms->dq.in" v_droop.v_droop_LLrms as Connection1330
                [
                    breakpoints = 8464, 8080
                ]
                connect "rms->dq.out" Junction254 as Connection1332
                connect Junction254 Sum3.in1 as Connection1333
                connect v_droop_q.in Junction254 as Connection1334
                connect w_ref_grid_forming.f_final_Hz Gain8.in as Connection1341
                connect Gain8.out Goto32 as Connection1342
                connect f_ref.out Gain9.in as Connection1344
                connect Gain9.out w_ref_grid_forming.w_ref_grid_forming as Connection1345
                connect Junction256 Junction205 as Connection1350
                [
                    breakpoints = 7264, 8200; 7088, 8200
                ]
                connect Vab.n_node Junction256 as Connection1351
                connect From57 Gain3.in as Connection1364
                connect From64 Gain6.in as Connection1365
                connect Constant8.out Junction522 as Connection2848
                connect Junction522 w_ref_grid_forming.f_droop_enable as Connection2849
                connect w_ref_grid_forming.f_droop_gain Junction522 as Connection2850
                connect Constant9.out Junction523 as Connection2852
                connect Junction523 v_droop.v_droop_gain as Connection2853
                connect v_droop.v_droop_enable Junction523 as Connection2854
                connect Ia.n_node Irms1.p_node as Connection2857
                connect Va.p_node Junction524 as Connection2859
                connect Junction524 Junction207 as Connection2860
                [
                    breakpoints = 7008, 8104; 7008, 8104; 7008, 8104
                ]
                connect Vab.p_node Junction525 as Connection2861
                connect R3.p_node L1.n_node as Connection2867
                connect Junction525 Junction524 as Connection2868
                [
                    breakpoints = 7264, 8104; 7264, 8104
                ]
                connect Junction235 Junction236 as Connection2887
                [
                    breakpoints = 6936, 8304; 6600, 8304; 6600, 8304; 6600, 8200
                ]
                connect R4.p_node L2.n_node as Connection2872
                connect R5.p_node L3.n_node as Connection2873
                connect C3.p_node Junction526 as Connection2874
                connect Junction526 Junction206 as Connection2875
                [
                    breakpoints = 7504, 8304
                ]
                connect L3.p_node Junction526 as Connection2876
                connect Junction256 Junction527 as Connection2877
                [
                    breakpoints = 7264, 8200
                ]
                connect Junction527 C2.p_node as Connection2878
                [
                    breakpoints = 7432, 8200
                ]
                connect L2.p_node Junction527 as Connection2879
                connect Junction525 Junction528 as Connection2880
                [
                    breakpoints = 7264, 8104; 7264, 8104
                ]
                connect Junction528 C1.p_node as Connection2881
                [
                    breakpoints = 7360, 8104
                ]
                connect L1.p_node Junction528 as Connection2882
                connect R3.n_node Irms1.n_node as Connection2883
                connect R4.n_node Ib.n_node as Connection2884
                connect R5.n_node Ic.n_node as Connection2885

                Cf = "10e-6"
                Lf = "1e-5"
                execution_rate = "T_load"

                mask {
                    description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Current Source Variable Load</p><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">The number of inputs is 3 and of outputs is 6 per output port. They are organized as an array on the following order:</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Inputs: 0 - Pref; 1 - Qref1; 2 - Limit_type</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Outputs (1) = 0 - Active Power P; 1 - Reactive Power Q; 2 - Apparent Power S; 3 - Power Factor Pf; 4 - Frequency; 5 - Vt;</p></body></html>"

                    Vnom {
                        label = "Nominal Line to Line Voltage"
                        widget = edit
                        type = generic
                        default_value = "208"
                        unit = "V"
                        group = "General:1"
                    }

                    fnom {
                        label = "Nominal Frequency"
                        widget = edit
                        type = generic
                        default_value = "60"
                        unit = "Hz"
                        group = "General:1"
                    }

                    Sb {
                        label = "Nominal Load"
                        widget = edit
                        type = generic
                        default_value = "20e3"
                        unit = "VA"
                        group = "General:1"
                    }

                    powerRate {
                        label = "Power change rate"
                        widget = edit
                        type = generic
                        default_value = "2e3"
                        unit = "VA/s"
                        group = "General:1"
                    }

                    execution_rate {
                        label = "Execution rate"
                        widget = edit
                        type = generic
                        default_value = "Tbatt"
                        unit = "s"
                        group = "General:1"
                    }

                    R {
                        label = "Resistor"
                        widget = edit
                        type = generic
                        default_value = "1e6"
                        unit = "Ohms"
                        group = "Snubber:2"
                    }

                    Cf {
                        label = "Cf"
                        widget = edit
                        type = generic
                        default_value = "100e-6"
                        unit = "F"
                        group = "Snubber:2"
                    }

                    Lf {
                        label = "Lf"
                        widget = edit
                        type = generic
                        default_value = "1e-6"
                        unit = "H"
                        group = "Snubber:2"
                    }

                    rLf {
                        label = "rLf"
                        widget = edit
                        type = generic
                        default_value = "1e-2"
                        unit = "Ohms"
                        group = "Snubber:2"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE

                    CODE init
                    ENDCODE

                    CODE pre_compile
                        # HEADER START
                        Vnom = mdl.get_property_value(mdl.prop(item_handle, "Vnom"))
                        fnom = mdl.get_property_value(mdl.prop(item_handle, "fnom"))
                        Sb = mdl.get_property_value(mdl.prop(item_handle, "Sb"))
                        powerRate = mdl.get_property_value(mdl.prop(item_handle, "powerRate"))
                        execution_rate = mdl.get_property_value(mdl.prop(item_handle, "execution_rate"))
                        R = mdl.get_property_value(mdl.prop(item_handle, "R"))
                        Cf = mdl.get_property_value(mdl.prop(item_handle, "Cf"))
                        Lf = mdl.get_property_value(mdl.prop(item_handle, "Lf"))
                        rLf = mdl.get_property_value(mdl.prop(item_handle, "rLf"))
                        # HEADER STOP
                        Ib = (Sb/Vnom)*((2.0/3.0)**0.5)
                        Vdqbase = (1/Vnom)*((2.0/3.0)**0.5)
                    ENDCODE

                    CODE define_icon
                        image(r"C:\00 Typhoon SVN\t_misc\00 Project management\90 Demos\0900 EATON-Typhoon Demo 5_26_2020\img\light_bulb.png")
                    ENDCODE
                }
            }
            [
                position = 8320, 8544
                size = 192, 248
            ]

            port B {
                position = left:2
                kind = pe
                direction =  in
            }
            [
                position = 7200, 8208
            ]

            port A {
                position = left:1
                kind = pe
                direction =  in
            }
            [
                position = 7200, 8112
            ]

            port c {
                position = right:3
                kind = pe
                direction =  in
            }
            [
                position = 9296, 8304
                rotation = down
            ]

            port C {
                position = left:3
                kind = pe
                direction =  in
            }
            [
                position = 7200, 8304
            ]

            port a {
                position = right:1
                kind = pe
                direction =  in
            }
            [
                position = 9288, 8112
                rotation = down
            ]

            port b {
                position = right:2
                kind = pe
                direction =  in
            }
            [
                position = 9296, 8208
                rotation = down
            ]

            tag Goto12 {
                value = "vab_gs"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7480, 8160
                hide_name = True
            ]

            tag Goto13 {
                value = "vbc_gs"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7472, 8256
                hide_name = True
            ]

            tag Goto14 {
                value = "vca_gs"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7640, 8256
                hide_name = True
            ]

            tag Goto15 {
                value = "vab_ls"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7976, 8160
                hide_name = True
            ]

            tag Goto16 {
                value = "vbc_ls"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7968, 8256
                hide_name = True
            ]

            tag Goto17 {
                value = "vca_ls"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8136, 8256
                hide_name = True
            ]

            tag From22 {
                value = "vab_gs"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7600, 8488
                hide_name = True
                size = 71, 20
            ]

            tag From33 {
                value = "vbc_gs"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7600, 8520
                hide_name = True
                size = 71, 20
            ]

            tag From34 {
                value = "vca_gs"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7600, 8552
                hide_name = True
                size = 71, 20
            ]

            tag From35 {
                value = "vab_ls"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7600, 8392
                hide_name = True
                size = 71, 20
            ]

            tag From36 {
                value = "vbc_ls"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7600, 8424
                hide_name = True
                size = 71, 20
            ]

            tag From37 {
                value = "vca_ls"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7600, 8456
                hide_name = True
                size = 71, 20
            ]

            tag mcb_fb_ {
                value = "mcb_fb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7616, 7992
                rotation = down
            ]

            tag From38 {
                value = "mcb_fb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8792, 8432
                hide_name = True
                size = 71, 20
            ]

            junction Junction13 pe
            [
                position = 7400, 8112
            ]

            junction Junction14 pe
            [
                position = 7400, 8208
            ]

            junction Junction15 pe
            [
                position = 7400, 8208
            ]

            junction Junction16 pe
            [
                position = 7400, 8304
            ]

            junction Junction19 pe
            [
                position = 7896, 8112
            ]

            junction Junction20 pe
            [
                position = 7896, 8208
            ]

            junction Junction21 pe
            [
                position = 7896, 8208
            ]

            junction Junction22 pe
            [
                position = 7896, 8304
            ]

            junction Junction23 pe
            [
                position = 8056, 8304
            ]

            junction Junction24 pe
            [
                position = 8056, 8112
            ]

            junction Junction25 pe
            [
                position = 7568, 8112
            ]

            junction Junction26 pe
            [
                position = 7568, 8304
            ]

            junction Junction45 sp
            [
                position = 7696, 8048
            ]

            junction Junction46 pe
            [
                position = 8536, 8112
            ]

            junction Junction47 pe
            [
                position = 8624, 8208
            ]

            junction Junction48 pe
            [
                position = 8712, 8304
            ]

            junction Junction53 pe
            [
                position = 8248, 8112
            ]

            junction Junction54 pe
            [
                position = 8320, 8208
            ]

            junction Junction55 pe
            [
                position = 8392, 8304
            ]

            junction Junction56 pe
            [
                position = 9128, 8304
            ]

            junction Junction57 pe
            [
                position = 9056, 8208
            ]

            junction Junction58 pe
            [
                position = 8984, 8112
            ]

            connect Grid_meter.A+ S1.a_out as Connection4021
            connect S1.c_out Grid_meter.C+ as Connection4022
            connect S1.b_out Grid_meter.B+ as Connection4024
            connect Grid_meter_split.In Grid_meter.Out as Connection4026
            connect A Junction13 as Connection4066
            connect vab_gs.p_node Junction13 as Connection4068
            connect B Junction14 as Connection4069
            connect Junction14 S1.b_in as Connection4070
            [
                breakpoints = 7400, 8208; 7648, 8208
            ]
            connect vab_gs.n_node Junction15 as Connection4072
            connect Junction15 Junction14 as Connection4073
            connect vbc_gs.p_node Junction15 as Connection4074
            connect C Junction16 as Connection4075
            connect vbc_gs.n_node Junction16 as Connection4077
            connect vab_gs.out Goto12 as Connection4084
            connect vbc_gs.out Goto13 as Connection4085
            connect vab_ls.out Goto15 as Connection4099
            connect vbc_ls.out Goto16 as Connection4100
            connect Grid_meter.A- Junction19 as Connection4117
            connect vab_ls.p_node Junction19 as Connection4119
            connect Grid_meter.B- Junction20 as Connection4120
            connect vab_ls.n_node Junction21 as Connection4123
            connect Junction21 Junction20 as Connection4124
            connect vbc_ls.p_node Junction21 as Connection4125
            connect Grid_meter.C- Junction22 as Connection4126
            connect vbc_ls.n_node Junction22 as Connection4128
            connect Junction22 Junction23 as Connection4129
            connect vca_ls.p_node Junction23 as Connection4131
            connect Junction19 Junction24 as Connection4132
            connect vca_ls.n_node Junction24 as Connection4134
            connect vca_ls.out Goto17 as Connection4135
            connect vca_gs.out Goto14 as Connection4154
            connect Junction13 Junction25 as Connection4155
            [
                breakpoints = 7400, 8112; 7536, 8112
            ]
            connect Junction25 S1.a_in as Connection4156
            connect vca_gs.n_node Junction25 as Connection4157
            connect S1.c_in Junction26 as Connection4158
            connect Junction26 Junction16 as Connection4159
            [
                breakpoints = 7536, 8304
            ]
            connect vca_gs.p_node Junction26 as Connection4160
            connect From22 sync_observer.vab_gs as Connection4162
            connect From33 sync_observer.vbc_gs as Connection4165
            connect From34 sync_observer.vca_gs as Connection4161
            connect From37 sync_observer.vca_ls as Connection4164
            connect From35 sync_observer.vab_ls as Connection4166
            connect From36 sync_observer.vbc_ls as Connection4163
            connect Battery1.out Batt1_SoC.in as Connection4184
            connect "Battery inverter (Average)1.Output" Batt_out1.In1 as Connection4276
            connect Batt_in1.Out1 "Battery inverter (Average)1.Input" as Connection4277
            connect "Battery inverter (Average)1.DC+" Battery1.p_node as Connection4287
            connect "Battery inverter (Average)1.DC-" Battery1.n_node as Connection4288
            connect Lump1_in.Out1 Lump1.Input as Connection4292
            connect Lump1_out.In1 Lump1.Output as Connection4293
            connect S1.feedback_out Junction45 as Connection4303
            connect Junction45 mcb_fb.in as Connection4304
            connect mcb_fb_ Junction45 as Connection4305
            connect From38 Batt_in1.mcb_fb as Connection4306
            connect "Natural Gas Genset.A" Junction46 as Connection4333
            connect "Natural Gas Genset.B" Junction47 as Connection4336
            connect Junction48 "Natural Gas Genset.C" as Connection4340
            [
                breakpoints = 8712, 8304; 8712, 8304; 8712, 8304; 8712, 8304
            ]
            connect Junction24 Junction53 as Connection4384
            connect Junction53 Junction46 as Connection4385
            connect Lump1.A Junction53 as Connection4386
            connect Junction20 Junction54 as Connection4387
            connect Junction54 Junction47 as Connection4388
            connect Lump1.B Junction54 as Connection4389
            connect Junction23 Junction55 as Connection4390
            connect Junction55 Junction48 as Connection4391
            connect Lump1.C Junction55 as Connection4392
            connect "Battery inverter (Average)1.C" Junction56 as Connection4413
            connect Junction56 Junction48 as Connection4414
            [
                breakpoints = 9128, 8304; 9128, 8304; 9120, 8304; 8712, 8304
            ]
            connect "Battery inverter (Average)1.B" Junction57 as Connection4416
            connect Junction57 Junction47 as Connection4417
            [
                breakpoints = 9056, 8208; 9056, 8208; 9048, 8208; 8624, 8208
            ]
            connect Junction46 Junction58 as Connection4419
            [
                breakpoints = 8536, 8112
            ]
            connect Junction58 "Battery inverter (Average)1.A" as Connection4420
            [
                breakpoints = 8984, 8112; 8984, 8112; 8984, 8112
            ]
            connect Junction56 c as Connection4458
            connect b Junction57 as Connection4459
            connect Junction58 a as Connection4457

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Residential load model with 20kVA controllable load, 10kW BESS, and 25kW natural gas genset for emergency backup power. In case of blackout, the home BESS will switch to grid-forming while the genset is starting. If the load is suitable, home BESS will turn off after genset has picked up the load. If available, the EV can switch to grid-forming mode and supply the residence.</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Look under mask (Ctrl+Enter)</p></body></html>"

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE

                CODE define_icon
                    image(r"C:\00 Typhoon SVN\t_misc\00 Project management\90 Demos\0900 EATON-Typhoon Demo 5_26_2020\img\home2.png")
                ENDCODE
            }
        }
        [
            position = 7832, 8144
            size = 240, 240
        ]

        component Subsystem "Electric Vehicle" {
            layout = dynamic
            component "core/Current Measurement" Ia {
            }
            [
                position = 8688, 8448
                size = 64, 32
            ]

            component gen_scada_output "battery soc" {
                unit = ""
            }
            [
                position = 7824, 8536
            ]

            component "core/Current Measurement" Ic {
            }
            [
                position = 8688, 8640
                size = 64, 32
            ]

            component pas_capacitor C1 {
                capacitance = "Cf"
            }
            [
                position = 8256, 8704
                rotation = right
            ]

            component "core/Current Measurement" Ib {
            }
            [
                position = 8688, 8544
                size = 64, 32
            ]

            component "core/Three Phase Inverter" 3ph_inverter {
                ctrl_src = "Internal modulator"
                d_time = "1e-6"
            }
            [
                position = 7968, 8544
                size = 127, 256
            ]

            component pas_capacitor C2 {
                capacitance = "Cf"
            }
            [
                position = 8328, 8704
                rotation = right
            ]

            component pas_capacitor C3 {
                capacitance = "Cf"
            }
            [
                position = 8400, 8704
                rotation = right
            ]

            component "core/Battery" Battery {
                Kdisc_I = "20.0"
                Ke_exp = "103.0"
                Ke_full = "116.0"
                Kq_exp = "85.0"
                Kq_nom = "93.5"
                R_series = "0.06666666666666672"
                battery_type = "Lithium-Ion"
                capacity = "150"
                execution_rate = "Ts"
                initial_soc = "80"
                nominal_voltage = "400"
                sig_output = "True"
            }
            [
                position = 7744, 8536
                rotation = right
                size = 64, 48
            ]

            component "core/Voltage Measurement" Vab {
            }
            [
                position = 8432, 8496
                rotation = right
                size = 64, 32
            ]

            component "core/Voltage Measurement" Vbc {
            }
            [
                position = 8432, 8592
                rotation = right
                size = 64, 32
            ]

            component pas_inductor L2 {
                inductance = "Lf"
            }
            [
                position = 8200, 8544
            ]

            component pas_inductor L3 {
                inductance = "Lf"
            }
            [
                position = 8200, 8640
            ]

            component "core/Three-phase Meter" "Three-phase Meter1" {
                P_meas = "True"
                R = "10e3"
                Ts = "Ts"
            }
            [
                position = 8576, 8544
                hide_name = True
                size = 56, 240
            ]

            component pas_inductor L1 {
                inductance = "Lf"
            }
            [
                position = 8200, 8448
            ]

            component "core/Induction Machine with Squirrel Cage" "Induction motor" {
                Jm = "1.2"
                Llr = "Llr"
                Lls = "Lls"
                Lm = "Lm"
                Rr = "Rr"
                Rs = "Rs"
                Rsnb_stator = "5e3"
                enb_sig_out = "True"
                execution_rate = "Ts"
                friction_coeff = "0.01"
                load_src = "Model"
                unconstrained_angle = "enabled"
            }
            [
                position = 8880, 8544
                size = 160, 160
            ]

            component gen_probe P {
            }
            [
                position = 8280, 8352
                rotation = down
            ]

            component "core/Meter Split" "Meter Split" {
                power_p = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8496, 8352
                rotation = down
                hide_name = True
                size = 104, 48
            ]

            component gen_digital_probe "motor started" {
            }
            [
                position = 7464, 8112
            ]

            component Subsystem "Powertrain Control Module (PCM)" {
                layout = dynamic
                component Subsystem "Reference signal generator" {
                    layout = dynamic
                    component gen_product Product6 {
                        signs = "/*"
                    }
                    [
                        position = 8160, 8048
                        hide_name = True
                    ]

                    component gen_product Product9 {
                        signs = "**"
                    }
                    [
                        position = 8336, 8344
                        hide_name = True
                    ]

                    component src_constant "Base voltage" {
                        execution_rate = "Ts"
                        value = "Vb"
                    }
                    [
                        position = 7952, 8016
                    ]

                    component gen_sum Sum2 {
                    }
                    [
                        position = 8056, 8336
                        hide_name = True
                    ]

                    component gen_sum Sum1 {
                    }
                    [
                        position = 8056, 8232
                        hide_name = True
                    ]

                    component gen_trigonometric sin1 {
                    }
                    [
                        position = 8160, 8136
                        hide_name = True
                    ]

                    component gen_trigonometric sin2 {
                    }
                    [
                        position = 8160, 8232
                        hide_name = True
                    ]

                    component gen_trigonometric sin3 {
                    }
                    [
                        position = 8160, 8336
                        hide_name = True
                    ]

                    component gen_product Product8 {
                        signs = "**"
                    }
                    [
                        position = 8336, 8240
                        hide_name = True
                    ]

                    component src_constant Constant5 {
                        execution_rate = "Ts"
                        value = "-2*np.pi/3"
                    }
                    [
                        position = 7952, 8240
                        hide_name = True
                    ]

                    component src_constant Constant6 {
                        execution_rate = "Ts"
                        value = "2*np.pi/3"
                    }
                    [
                        position = 7952, 8344
                        hide_name = True
                    ]

                    component gen_product Product7 {
                        signs = "**"
                    }
                    [
                        position = 8336, 8144
                        hide_name = True
                    ]

                    port "Angle(w*t)" {
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7952, 8136
                    ]

                    port ma {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8440, 8144
                    ]

                    port mc {
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8440, 8344
                    ]

                    port Voltage {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7952, 8080
                    ]

                    port mb {
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8440, 8240
                    ]

                    junction Junction12 sp
                    [
                        position = 8000, 8224
                    ]

                    junction Junction123 sp
                    [
                        position = 8256, 8152
                    ]

                    junction Junction124 sp
                    [
                        position = 8256, 8248
                    ]

                    junction Junction62 sp
                    [
                        position = 8000, 8136
                    ]

                    connect Product6.in "Base voltage.out" as Connection479
                    [
                        breakpoints = 8064, 8040; 8064, 8016
                    ]
                    connect Constant5.out Sum1.in1 as Connection18
                    connect Product7.in sin1.out as Connection702
                    connect Constant6.out Sum2.in1 as Connection19
                    connect Sum2.in Junction12 as Connection57
                    connect Product9.in1 Junction124 as Connection502
                    connect Junction123 Product7.in1 as Connection498
                    connect Product8.in sin2.out as Connection706
                    connect sin3.out Product9.in as Connection714
                    connect Product6.out Junction123 as Connection497
                    connect Product8.in1 Junction124 as Connection500
                    connect Junction124 Junction123 as Connection501
                    connect Junction62 Junction12 as Connection112
                    connect sin3.in Sum2.out as Connection83
                    connect sin1.in Junction62 as Connection111
                    connect sin2.in Sum1.out as Connection81
                    connect Sum1.in Junction12 as Connection56
                    connect Product8.out mb as Connection719
                    connect Junction62 "Angle(w*t)" as Connection715
                    connect Product6.in1 Voltage as Connection718
                    [
                        breakpoints = 8064, 8056; 8064, 8080
                    ]
                    connect Product9.out mc as Connection717
                    connect Product7.out ma as Connection716
                }
                [
                    position = 7824, 8056
                    size = 176, 80
                ]

                component Subsystem "Voltage control" {
                    layout = dynamic
                    component gen_logic_op "Logical operator1" {
                        operator = "NOT"
                    }
                    [
                        position = 8168, 8064
                        hide_name = True
                    ]

                    component tm_delay "Unit Delay" {
                        init_value = "20"
                    }
                    [
                        position = 8312, 8144
                        rotation = down
                        hide_name = True
                    ]

                    component gen_sum Sum7 {
                        signs = "+-"
                    }
                    [
                        position = 7792, 8224
                        hide_name = True
                    ]

                    component gen_product Pref {
                        signs = "*/*"
                    }
                    [
                        position = 7664, 8160
                    ]

                    component gen_product Product11 {
                        signs = "**/"
                    }
                    [
                        position = 7984, 8224
                        hide_name = True
                    ]

                    component gen_digital_probe "regenerative breaking signal" {
                    }
                    [
                        position = 8288, 8064
                    ]

                    component src_constant "Base power" {
                        execution_rate = "Ts"
                        value = "Pb"
                    }
                    [
                        position = 7552, 8224
                    ]

                    component gen_c_function "regenerative breaking voltage" {
                        global_variables = "real voltage_buffer;real w_buffer;"
                        in_terminal_dimensions = "inherit;inherit;inherit"
                        in_terminal_dimensions_str = "voltage inherit;w_el_machine inherit;throttle inherit"
                        in_terminal_labels = "[(\'voltage\', True), (\'w_el_machine\', True), (\'throttle\', True)]"
                        in_terminal_properties = "real voltage;inherit w_el_machine;inherit throttle;"
                        init_fnc = "/*Begin code section*/
out = 0;
if (throttle>0.01)
{
    out = voltage;
    voltage_buffer = voltage;
    w_buffer = w_el_machine;
}
else 
{
    if (w_buffer == 0)
    {
        out = 0;
    }
    else
    {
        out = voltage_buffer - (w_buffer-w_el_machine)*voltage_buffer/w_buffer;
    }
}
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "out inherit"
                        out_terminal_labels = "[(\'out\', True)]"
                        output_fnc = "/*Begin code section*/
if (throttle>0.01)
{
    out = voltage;
    voltage_buffer = voltage;
    w_buffer = w_el_machine;
}
else 
{
    if (w_buffer == 0)
    {
        out = 0;
    }
    else
    {
        out = voltage_buffer - (w_buffer-w_el_machine)*voltage_buffer/w_buffer;
    }
}
/*End code section*/"
                    }
                    [
                        position = 8368, 8240
                        size = 88, 64
                    ]

                    component src_constant Constant12 {
                        execution_rate = "Ts"
                        value = "100"
                    }
                    [
                        position = 7552, 8160
                        hide_name = True
                    ]

                    component src_constant Constant16 {
                        execution_rate = "Ts"
                        value = "1e-3"
                    }
                    [
                        position = 7904, 8160
                        hide_name = True
                    ]

                    component Subsystem "PI controller" {
                        layout = dynamic
                        component gen_gain Ki {
                            execution_rate = "Ts"
                            gain = "Ki"
                        }
                        [
                            position = 8136, 8128
                        ]

                        component gen_integrator Integrator {
                            execution_rate = "Ts"
                            show_init_condition = "external"
                            show_reset = "rising"
                        }
                        [
                            position = 8240, 8144
                        ]

                        component gen_gain Kp {
                            execution_rate = "Ts"
                            gain = "Kp"
                        }
                        [
                            position = 8136, 8256
                        ]

                        component gen_sum Sum {
                            execution_rate = "Ts"
                        }
                        [
                            position = 8352, 8192
                        ]

                        component gen_limiter Limit {
                            execution_rate = "Ts"
                            lower_limit = "PIDmin"
                            upper_limit = "PIDmax"
                        }
                        [
                            position = 8440, 8192
                        ]

                        port out {
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8504, 8192
                            hide_name = True
                        ]

                        port in {
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8008, 8192
                            hide_name = True
                        ]

                        port reset {
                            position = top:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8152, 8048
                        ]

                        port initial {
                            position = top:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8192, 8216
                            rotation = left
                        ]

                        junction Junction1 sp
                        [
                            position = 8064, 8192
                        ]

                        connect Sum.out Limit.in as Connection15
                        connect Integrator.out Sum.in as Connection10
                        connect Limit.out out as Connection16
                        connect Junction1 in as Connection7
                        connect reset Integrator.reset as Connection14
                        [
                            breakpoints = 8192, 8048; 8192, 8144
                        ]
                        connect Integrator.in Ki.out as Connection4
                        connect initial Integrator.init_condition_port as Connection13
                        connect Kp.in Junction1 as Connection8
                        connect Kp.out Sum.in1 as Connection11
                        connect Ki.in Junction1 as Connection6

                        mask {
                            description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">This block implements discrete-time PI control algorithm.</p></body></html>"

                            Kp {
                                label = "Kp"
                                widget = edit
                                type = generic
                                default_value = "5"
                            }

                            Ki {
                                label = "Ki"
                                widget = edit
                                type = generic
                                default_value = "1000"
                            }

                            init {
                                label = "Integrator initial condition"
                                widget = edit
                                type = generic
                                default_value = "20"
                            }

                            Ts {
                                label = "Execution rate"
                                widget = edit
                                type = generic
                                default_value = "Ts"
                            }

                            PIDmax {
                                label = "Upper limit"
                                widget = edit
                                type = generic
                                default_value = "400"
                            }

                            PIDmin {
                                label = "Lower limit"
                                widget = edit
                                type = generic
                                default_value = "0"
                            }

                            CODE open
                                from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                            
                                dialog = RegularComponentPropertiesDialog(
                                    component=component,
                                    property_container=component.masks[-1],
                                    current_diagram=current_diagram
                                )
                                dialog.exec_()
                                
                            ENDCODE
                        }
                    }
                    [
                        position = 8112, 8224
                        size = 96, 48
                    ]

                    component gen_comparator Comparator1 {
                    }
                    [
                        position = 8000, 8128
                        hide_name = True
                    ]

                    port "Voltage ref" {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8624, 8240
                    ]

                    port Throttle {
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7328, 8096
                    ]

                    port "Start motor" {
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7328, 8160
                    ]

                    port "Electrical speed" {
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7328, 8224
                    ]

                    port "output power" {
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7328, 8280
                    ]

                    tag From8 {
                        value = "Throttle"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7552, 8096
                        hide_name = True
                    ]

                    tag From9 {
                        value = "Throttle"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8240, 8272
                        hide_name = True
                    ]

                    tag From13 {
                        value = "Throttle"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7904, 8096
                        hide_name = True
                    ]

                    tag From12 {
                        value = "w_electrical"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8240, 8240
                        hide_name = True
                        scale = 1, -1
                    ]

                    tag From7 {
                        value = "start_motor"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7888, 8208
                        hide_name = True
                    ]

                    tag Goto1 {
                        value = "Throttle"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7440, 8096
                        hide_name = True
                    ]

                    tag Goto2 {
                        value = "start_motor"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7440, 8160
                        hide_name = True
                    ]

                    tag Goto3 {
                        value = "w_electrical"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7440, 8224
                        hide_name = True
                    ]

                    tag Goto4 {
                        value = "output_power"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7456, 8280
                        hide_name = True
                        size = 84, 20
                    ]

                    tag From14 {
                        value = "output_power"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7680, 8232
                        hide_name = True
                        size = 84, 20
                    ]

                    junction Junction148 sp
                    [
                        position = 7600, 8224
                    ]

                    junction Junction182 sp
                    [
                        position = 8080, 8128
                    ]

                    junction Junction180 sp
                    [
                        position = 8464, 8240
                    ]

                    connect Pref.in From8 as Connection845
                    [
                        breakpoints = 7616, 8144; 7600, 8144; 7600, 8096
                    ]
                    connect Constant12.out Pref.in1 as Connection665
                    connect Comparator1.out Junction182 as Connection928
                    connect From7 Product11.in as Connection687
                    connect From12 "regenerative breaking voltage.w_el_machine" as Connection900
                    connect "Unit Delay.in" Junction180 as Connection921
                    connect Product11.in1 Sum7.out as Connection686
                    connect Junction148 Pref.in2 as Connection695
                    [
                        breakpoints = 7600, 8208; 7600, 8176
                    ]
                    connect Product11.in2 Junction148 as Connection696
                    connect "Unit Delay.out" "PI controller.initial" as Connection918
                    connect Constant16.out Comparator1.in2 as Connection926
                    connect "Base power.out" Junction148 as Connection694
                    connect Sum7.in Pref.out as Connection667
                    connect "regenerative breaking voltage.out" Junction180 as Connection919
                    connect "regenerative breaking signal.in" "Logical operator1.out" as Connection931
                    connect From13 Comparator1.in1 as Connection925
                    connect Junction182 "PI controller.reset" as Connection929
                    connect Product11.out "PI controller.in" as Connection905
                    connect "Logical operator1.in" Junction182 as Connection930
                    connect From9 "regenerative breaking voltage.throttle" as Connection927
                    connect Throttle Goto1 as Connection933
                    connect "Start motor" Goto2 as Connection934
                    connect "Electrical speed" Goto3 as Connection935
                    connect Junction180 "Voltage ref" as Connection936
                    [
                        breakpoints = 8464, 8240; 8512, 8240
                    ]
                    connect "PI controller.out" "regenerative breaking voltage.voltage" as Connection938
                    [
                        breakpoints = 8208, 8224; 8272, 8224
                    ]
                    connect "output power" Goto4 as Connection939
                    connect From14 Sum7.in1 as Connection940
                }
                [
                    position = 7536, 7984
                    size = 176, 80
                ]

                component Subsystem "Frequency control" {
                    layout = dynamic
                    component gen_product Ws {
                        signs = "*/"
                    }
                    [
                        position = 7552, 8088
                        hide_name = True
                    ]

                    component gen_gain w_to_f {
                        gain = "1/(2*np.pi)"
                    }
                    [
                        position = 7680, 8088
                    ]

                    component gen_limiter "Frequency Limit" {
                        lower_limit = "6"
                        upper_limit = "600"
                    }
                    [
                        position = 7792, 8088
                    ]

                    component gen_sum "1 - s" {
                        signs = "+-"
                    }
                    [
                        position = 7384, 8096
                        hide_name = True
                    ]

                    component gen_gain w_meh_to_w_elec {
                        gain = "pms"
                    }
                    [
                        position = 7248, 8016
                    ]

                    component tm_delay "Unit Delay1" {
                        init_value = "6"
                    }
                    [
                        position = 7808, 8200
                        rotation = down
                        hide_name = True
                    ]

                    component lut_1d "slip reference" {
                        ext_mode = "Linear"
                        in_vec_x = "f"
                        out_vec_f_x = "sp"
                        table_impl = "Non-equidistant"
                    }
                    [
                        position = 7304, 8120
                    ]

                    component src_constant Constant13 {
                        execution_rate = "Ts"
                    }
                    [
                        position = 7304, 8072
                        hide_name = True
                    ]

                    component gen_gain f_to_w {
                        gain = "2*np.pi"
                    }
                    [
                        position = 7888, 8088
                    ]

                    component gen_c_function "regenerative breaking frequency" {
                        in_terminal_dimensions = "inherit;inherit;inherit"
                        in_terminal_dimensions_str = "throttle inherit;w_field inherit;w_el_machine inherit"
                        in_terminal_labels = "[(\'throttle\', True), (\'w_field\', True), (\'w_el_machine\', True)]"
                        in_terminal_properties = "inherit throttle;real w_field;inherit w_el_machine;"
                        init_fnc = "/*Begin code section*/
out = 10;
if (throttle>0.01)
{
    out = (out+w_field)/2;
}
else 
{
    out = 0.9*w_el_machine;
}
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "out inherit"
                        out_terminal_labels = "[(\'out\', False)]"
                        output_fnc = "/*Begin code section*/
if (throttle>0.01)
{
    out = (out+w_field)/2;
}
else 
{
    out = 0.95*w_el_machine;
}
/*End code section*/"
                    }
                    [
                        position = 8168, 8088
                        size = 176, 80
                    ]

                    component gen_c_function "C function1" {
                        global_variables = "real teta;"
                        in_terminal_dimensions = "inherit"
                        in_terminal_dimensions_str = "w inherit"
                        in_terminal_labels = "False;"
                        in_terminal_properties = "real w;"
                        init_fnc = "/*Begin code section*/
teta = 0.0;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "wt inherit"
                        out_terminal_labels = "False;"
                        out_terminal_properties = "real wt;"
                        output_fnc = "/*Begin code section*/
wt = teta;
/*End code section*/"
                        update_fnc = "/*Begin code section*/
teta = w*execution_rate + teta;
if (teta >= 2*3.1416)
    teta = teta - (2*3.1416);
/*End code section*/"
                    }
                    [
                        position = 8344, 8088
                        hide_name = True
                        size = 48, 48
                    ]

                    port "Machine speed" {
                        position = left:auto
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7152, 8016
                        rotation = down
                        scale = -1, 1
                    ]

                    port "Angle(w*t)" {
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8488, 8088
                    ]

                    port Throttle {
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7960, 8032
                    ]

                    port "Electrical speed" {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 7368, 7912
                    ]

                    tag From11 {
                        value = "w_electrical"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7976, 8128
                        hide_name = True
                        scale = 1, -1
                    ]

                    tag Goto8 {
                        value = "w_electrical"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7368, 7968
                        rotation = down
                        hide_name = True
                        scale = -1, 1
                    ]

                    junction Junction191 sp
                    [
                        position = 7304, 8016
                    ]

                    junction Junction194 sp
                    [
                        position = 7304, 7968
                    ]

                    junction Junction200 sp
                    [
                        position = 8416, 8088
                    ]

                    connect w_to_f.out "Frequency Limit.in" as Connection767
                    connect "1 - s.in" Constant13.out as Connection758
                    [
                        breakpoints = 7344, 8088; 7344, 8072
                    ]
                    connect w_meh_to_w_elec.out Junction191 as Connection996
                    connect Ws.in1 "1 - s.out" as Connection763
                    connect "slip reference.addr" "Unit Delay1.out" as Connection776
                    [
                        breakpoints = 7240, 8120
                    ]
                    connect "slip reference.value" "1 - s.in1" as Connection773
                    [
                        breakpoints = 7344, 8120; 7344, 8104
                    ]
                    connect "Machine speed" w_meh_to_w_elec.in as Connection1007
                    connect Junction191 Junction194 as Connection1019
                    [
                        breakpoints = 7304, 8016
                    ]
                    connect Goto8 Junction194 as Connection1021
                    connect From11 "regenerative breaking frequency.w_el_machine" as Connection889
                    connect Throttle "regenerative breaking frequency.throttle" as Connection1017
                    connect Junction200 "Unit Delay1.in" as Connection1043
                    [
                        breakpoints = 8416, 8088; 8416, 8088
                    ]
                    connect "C function1.wt" Junction200 as Connection1044
                    connect Junction200 "Angle(w*t)" as Connection1062
                    connect Ws.in Junction191 as Connection1070
                    [
                        breakpoints = 7440, 8016
                    ]
                    connect "Electrical speed" Junction194 as Connection1071
                    [
                        breakpoints = 7304, 7912
                    ]
                    connect "regenerative breaking frequency.w_field" f_to_w.out as Connection1072
                    connect w_to_f.in Ws.out as Connection1074
                    connect f_to_w.in "Frequency Limit.out" as Connection1075
                    connect "C function1.w" "regenerative breaking frequency.out" as Connection1076
                }
                [
                    position = 7544, 8160
                    scale = 1, -1
                    size = 176, 80
                ]

                component gen_c_function "Throttle limitter" {
                    in_terminal_dimensions = "inherit;inherit"
                    in_terminal_dimensions_str = "w_electrical inherit;throttle inherit"
                    in_terminal_labels = "[(\'w_electrical\', True), (\'throttle\', True)]"
                    in_terminal_properties = "inherit w_electrical;real throttle;"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "out inherit"
                    out_terminal_labels = "[(\'out\', False)]"
                    output_fnc = "/*Begin code section*/
if ((w_electrical < 50) & (throttle > 2))
{
    out = 2;
}
else
{
    out = throttle;
}
/*End code section*/"
                }
                [
                    position = 7096, 7968
                    size = 120, 48
                ]

                port mc {
                    position = auto:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8008, 8112
                ]

                port mb {
                    position = auto:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8008, 8056
                ]

                port ma {
                    position = auto:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8008, 8000
                ]

                port "Machine speed" {
                    position = left:3
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7352, 8144
                    rotation = down
                    scale = -1, 1
                ]

                port On {
                    position = left:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 6936, 8048
                ]

                port Throttle {
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 6936, 7992
                ]

                port "output power" {
                    position = left:4
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 6944, 8224
                    rotation = down
                    scale = -1, 1
                ]

                tag From10 {
                    value = "Throttle"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7352, 8176
                    hide_name = True
                    scale = 1, -1
                ]

                tag Goto8 {
                    value = "w_electrical"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7712, 8176
                    hide_name = True
                ]

                tag From11 {
                    value = "Throttle"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7352, 7928
                    hide_name = True
                    scale = 1, -1
                ]

                tag From12 {
                    value = "w_electrical"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7352, 7992
                    hide_name = True
                    scale = 1, -1
                ]

                tag From13 {
                    value = "start_motor"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7352, 7960
                    hide_name = True
                    scale = 1, -1
                ]

                tag Goto6 {
                    value = "start_motor"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7224, 8048
                    hide_name = True
                ]

                tag From14 {
                    value = "w_electrical"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6944, 7944
                    hide_name = True
                ]

                tag Goto7 {
                    value = "Throttle"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7224, 7968
                    hide_name = True
                ]

                tag Goto9 {
                    value = "output_power"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7048, 8224
                    hide_name = True
                    size = 99, 20
                ]

                tag From15 {
                    value = "output_power"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7344, 8016
                    hide_name = True
                    scale = 1, -1
                    size = 85, 20
                ]

                connect "Reference signal generator.mb" mb as Connection979
                connect "Reference signal generator.ma" ma as Connection980
                [
                    breakpoints = 7944, 8040
                ]
                connect "Reference signal generator.mc" mc as Connection981
                [
                    breakpoints = 7944, 8072
                ]
                connect "Reference signal generator.Voltage" "Voltage control.Voltage ref" as Connection987
                [
                    breakpoints = 7696, 8040; 7696, 7984
                ]
                connect "Frequency control.Angle(w*t)" "Reference signal generator.Angle(w*t)" as Connection988
                [
                    breakpoints = 7696, 8144; 7696, 8072
                ]
                connect Goto8 "Frequency control.Electrical speed" as Connection989
                connect "Machine speed" "Frequency control.Machine speed" as Connection990
                connect From10 "Frequency control.Throttle" as Connection991
                connect From11 "Voltage control.Throttle" as Connection992
                connect From12 "Voltage control.Electrical speed" as Connection993
                connect From13 "Voltage control.Start motor" as Connection994
                [
                    breakpoints = 7400, 7976; 7432, 7976
                ]
                connect Goto6 On as Connection952
                connect From14 "Throttle limitter.w_electrical" as Connection1000
                [
                    breakpoints = 7000, 7944
                ]
                connect "Throttle limitter.throttle" Throttle as Connection999
                [
                    breakpoints = 7000, 7976; 7000, 7992
                ]
                connect "Throttle limitter.out" Goto7 as Connection997
                connect "output power" Goto9 as Connection1001
                connect From15 "Voltage control.output power" as Connection1002
            }
            [
                position = 7800, 8128
                size = 144, 168
            ]

            component src_scada_input Throttle {
                execution_rate = "Ts"
                unit = ""
            }
            [
                position = 7632, 8064
            ]

            component Subsystem Load {
                layout = dynamic
                component gen_gain Gain1 {
                    gain = "1/3600"
                }
                [
                    position = 7904, 8048
                    hide_name = True
                ]

                component gen_gain "speed mps" {
                    gain = "0.668/2/9.73"
                }
                [
                    position = 7968, 8304
                    rotation = left
                ]

                component gen_sum Sum8 {
                }
                [
                    position = 8480, 8192
                    hide_name = True
                ]

                component gen_integrator Integrator1 {
                }
                [
                    position = 7968, 8048
                    hide_name = True
                ]

                component gen_product Product12 {
                }
                [
                    position = 8384, 8048
                    hide_name = True
                ]

                component gen_probe Distance {
                }
                [
                    position = 8048, 8048
                ]

                component src_scada_input Brake {
                    execution_rate = "Ts"
                    unit = ""
                }
                [
                    position = 8256, 8112
                ]

                component gen_probe "speed kmph" {
                    signal_type = "speed"
                }
                [
                    position = 7808, 8184
                    rotation = down
                ]

                component Subsystem "Torque calculator" {
                    layout = dynamic
                    component gen_trigonometric "Trigonometric function1" {
                    }
                    [
                        position = 8032, 7936
                        hide_name = True
                    ]

                    component gen_math_fnc "Mathematical function1" {
                        mathematical_fn = "power"
                    }
                    [
                        position = 8016, 8192
                    ]

                    component gen_product "Drag area" {
                    }
                    [
                        position = 8048, 8360
                    ]

                    component src_constant "Drag coefficient" {
                        execution_rate = "Ts"
                        value = "0.24"
                    }
                    [
                        position = 7936, 8328
                        scale = 1, -1
                    ]

                    component gen_product "Rolling resistance" {
                    }
                    [
                        position = 8144, 8080
                        scale = 1, -1
                    ]

                    component src_constant constant {
                        execution_rate = "Ts"
                        value = "2"
                    }
                    [
                        position = 7888, 8224
                        hide_name = True
                        scale = 1, -1
                    ]

                    component gen_product "Sum torque" {
                        signs = "**//"
                    }
                    [
                        position = 8496, 8224
                    ]

                    component gen_product "Grade resistance" {
                    }
                    [
                        position = 8160, 7944
                        scale = 1, -1
                    ]

                    component src_constant Area {
                        execution_rate = "Ts"
                        value = "2.22"
                    }
                    [
                        position = 7936, 8392
                        scale = 1, -1
                    ]

                    component src_constant "gear ratio" {
                        execution_rate = "Ts"
                        value = "9.73"
                    }
                    [
                        position = 8320, 8360
                        scale = 1, -1
                    ]

                    component gen_product "Wind resistance" {
                        signs = "*/**"
                    }
                    [
                        position = 8144, 8256
                    ]

                    component src_constant "wheel diameter" {
                        execution_rate = "Ts"
                        value = "0.668"
                    }
                    [
                        position = 8320, 8208
                        scale = 1, -1
                    ]

                    component src_constant "Air density" {
                        execution_rate = "Ts"
                        value = "1.2754"
                    }
                    [
                        position = 7936, 8272
                        scale = 1, -1
                    ]

                    component src_constant Weight {
                        execution_rate = "Ts"
                        value = "2000"
                    }
                    [
                        position = 7936, 8008
                        scale = 1, -1
                    ]

                    component gen_probe "wind resss" {
                    }
                    [
                        position = 8240, 8168
                    ]

                    component src_scada_input angle {
                        execution_rate = "Ts"
                        unit = ""
                    }
                    [
                        position = 7936, 7936
                        scale = 1, -1
                    ]

                    component gen_probe "rol res" {
                    }
                    [
                        position = 8376, 8008
                    ]

                    component gen_sum "Sum Force" {
                        signs = "3"
                    }
                    [
                        position = 8320, 8112
                    ]

                    component lut_1d "rolling coefficient" {
                        ext_mode = "Linear"
                        in_vec_x = "[0, 1, 40, 80, 120, 160, 200]"
                        out_vec_f_x = "[0, 0.01, 0.012, 0.015, 0.02, 0.03, 0.04]"
                        table_impl = "Non-equidistant"
                    }
                    [
                        position = 7936, 8088
                    ]

                    component src_constant constant1 {
                        execution_rate = "Ts"
                        value = "2"
                    }
                    [
                        position = 8320, 8296
                        hide_name = True
                        scale = 1, -1
                    ]

                    port "speed kmph" {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7776, 8088
                    ]

                    port "speed mps" {
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7800, 8184
                    ]

                    port load_torque {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8568, 8224
                    ]

                    junction Junction10 sp
                    [
                        position = 7920, 8224
                    ]

                    junction Junction9 sp
                    [
                        position = 8192, 8168
                    ]

                    junction Junction4 sp
                    [
                        position = 8104, 8008
                    ]

                    junction Junction11 sp
                    [
                        position = 8208, 8080
                    ]

                    connect "Rolling resistance.in1" Junction4 as Connection73
                    [
                        breakpoints = 8104, 8056; 8104, 8008
                    ]
                    connect "Trigonometric function1.in" angle.out as Connection68
                    connect "Sum torque.in1" "wheel diameter.out" as Connection103
                    connect Junction4 "Grade resistance.in" as Connection72
                    [
                        breakpoints = 8104, 8008; 8104, 7960
                    ]
                    connect Junction9 "Wind resistance.out" as Connection113
                    connect "rolling coefficient.addr" "speed kmph" as Connection507
                    connect "wind resss.in" Junction9 as Connection114
                    connect "Mathematical function1.in1" Junction10 as Connection117
                    connect "Sum Force.in" "Grade resistance.out" as Connection99
                    [
                        breakpoints = 8256, 8096; 8256, 7968
                    ]
                    connect "Drag coefficient.out" "Drag area.in" as Connection132
                    connect "Rolling resistance.out" Junction11 as Connection509
                    connect Junction10 constant.out as Connection118
                    [
                        breakpoints = 7920, 8224
                    ]
                    connect "Sum torque.out" load_torque as Connection506
                    connect "Sum torque.in" "Sum Force.out" as Connection102
                    [
                        breakpoints = 8448, 8192
                    ]
                    connect "rol res.in" Junction11 as Connection511
                    connect "Mathematical function1.in" "speed mps" as Connection508
                    connect "Wind resistance.in1" Junction10 as Connection119
                    connect "Trigonometric function1.out" "Grade resistance.in1" as Connection70
                    connect Junction11 "Sum Force.in1" as Connection510
                    [
                        breakpoints = 8240, 8112
                    ]
                    connect Weight.out Junction4 as Connection71
                    connect "Sum Force.in2" Junction9 as Connection505
                    connect "Drag area.in1" Area.out as Connection133
                    [
                        breakpoints = 8000, 8368; 8000, 8392
                    ]
                    connect "Wind resistance.in3" "Drag area.out" as Connection134
                    [
                        breakpoints = 8096, 8280; 8096, 8360
                    ]
                    connect "Mathematical function1.out" "Wind resistance.in" as Connection116
                    connect "rolling coefficient.value" "Rolling resistance.in" as Connection74
                    connect "Air density.out" "Wind resistance.in2" as Connection131
                    [
                        breakpoints = 8064, 8272
                    ]
                    connect constant1.out "Sum torque.in2" as Connection520
                    [
                        breakpoints = 8368, 8288
                    ]
                    connect "gear ratio.out" "Sum torque.in3" as Connection521
                    [
                        breakpoints = 8400, 8360
                    ]
                }
                [
                    position = 8288, 8200
                    scale = 1, -1
                    size = 112, 64
                ]

                component gen_gain "mps to kmph" {
                    gain = "3.6"
                }
                [
                    position = 7920, 8184
                    rotation = down
                ]

                component gen_scada_output "machine Wr" {
                    unit = ""
                }
                [
                    position = 8112, 8344
                ]

                port torque {
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8552, 8192
                ]

                port w_speed {
                    position = right:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7968, 8480
                    rotation = left
                ]

                port speedkmh {
                    position = right:3
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7800, 8328
                    rotation = down
                ]

                junction Junction188 sp
                [
                    position = 7888, 8224
                ]

                junction Junction191 sp
                [
                    position = 7968, 8344
                ]

                junction Junction170 sp
                [
                    position = 7872, 8184
                ]

                junction Junction6 sp
                [
                    position = 7968, 8184
                ]

                junction Junction5 sp
                [
                    position = 7888, 8184
                ]

                junction Junction193 sp
                [
                    position = 8008, 8184
                ]

                connect Sum8.in1 "Torque calculator.load_torque" as Connection830
                connect "speed mps.in" Junction191 as Connection1047
                [
                    breakpoints = 7968, 8344
                ]
                connect Junction191 "machine Wr.in" as Connection1043
                connect "mps to kmph.in" Junction6 as Connection88
                [
                    breakpoints = 7968, 8216
                ]
                connect Product12.out Sum8.in as Connection838
                connect Integrator1.out Distance.in as Connection829
                connect Product12.in1 Brake.out as Connection837
                connect Junction5 "mps to kmph.out" as Connection82
                connect Gain1.in Junction170 as Connection828
                connect Junction5 Junction188 as Connection997
                connect torque Sum8.out as Connection1049
                connect Junction6 "speed mps.out" as Connection89
                connect "speed kmph.in" Junction170 as Connection825
                connect Integrator1.in Gain1.out as Connection827
                connect Junction188 "Torque calculator.speed kmph" as Connection998
                connect Junction170 Junction5 as Connection826
                [
                    breakpoints = 7872, 8184
                ]
                connect Junction6 Junction193 as Connection1051
                [
                    breakpoints = 7968, 8184
                ]
                connect Junction193 "Torque calculator.speed mps" as Connection1052
                [
                    breakpoints = 8016, 8184
                ]
                connect Product12.in Junction193 as Connection1053
                [
                    breakpoints = 8008, 8152; 8008, 8184
                ]
                connect Junction191 w_speed as Connection1054
                [
                    breakpoints = 7968, 8344; 7968, 8432
                ]
                connect speedkmh Junction188 as Connection1058
                [
                    breakpoints = 7888, 8272
                ]
            }
            [
                position = 9008, 8320
                rotation = down
                size = 80, 64
            ]

            component "core/Current Measurement" I_battery {
                override_signal_name = "True"
                signal_name = "I_battery"
            }
            [
                position = 7816, 8448
                size = 64, 32
            ]

            component sys_signal_switch "Signal switch" {
                threshold = "0.5"
            }
            [
                position = 7344, 8144
            ]

            component src_constant Constant1 {
                execution_rate = "inherit"
                value = "0"
            }
            [
                position = 7224, 8104
                hide_name = True
            ]

            component src_scada_input "start motor" {
                execution_rate = "Ts"
                max = "1"
                min = "0"
                unit = ""
            }
            [
                position = 7224, 8184
            ]

            component "core/Voltage Measurement" Vbc0 {
            }
            [
                position = 8112, 8592
                rotation = right
                size = 64, 32
            ]

            component "core/Voltage Measurement" Vab0 {
            }
            [
                position = 8112, 8496
                rotation = right
                size = 64, 32
            ]

            component gen_terminator Termination1 {
            }
            [
                position = 8984, 8440
                hide_name = True
            ]

            component gen_bus_join "Bus Join1" {
            }
            [
                position = 7408, 8312
            ]

            component "core/Single Phase Core Coupling" "Core Coupling 2" {
                C1 = "0.05e-6"
                L1 = "0.001"
                R1 = "1"
                fixed_snb_i = "true"
                fixed_snb_u = "true"
            }
            [
                position = 7640, 8544
                size = 12, 256
            ]

            component "core/Rate Transition" "Rate Transition1" {
                execution_rate = "Tev"
            }
            [
                position = 7376, 8384
                size = 32, 32
            ]

            port DC- {
                position = right:2
                kind = pe
                direction =  out
            }
            [
                position = 7504, 8640
                rotation = down
                scale = -1, 1
            ]

            port DC+ {
                position = right:1
                kind = pe
                direction =  out
            }
            [
                position = 7504, 8448
                rotation = down
                scale = -1, 1
            ]

            port out_extras {
                position = top:1
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 7496, 8312
            ]

            port in_extras {
                position = top:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7272, 8384
            ]

            tag Goto8 {
                value = "mc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7928, 8064
                hide_name = True
                size = 60, 20
            ]

            tag From16 {
                value = "start_motor"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7640, 8112
                hide_name = True
            ]

            tag Goto6 {
                value = "start_motor"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7464, 8176
                hide_name = True
            ]

            tag Goto7 {
                value = "mb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7928, 8128
                hide_name = True
                size = 60, 20
            ]

            tag Goto1 {
                value = "ma"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7928, 8192
                hide_name = True
                size = 60, 20
            ]

            tag From17 {
                value = "start_motor"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8384
                hide_name = True
            ]

            tag From18 {
                value = "mb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8336
                hide_name = True
            ]

            tag From19 {
                value = "ma"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8360
                hide_name = True
            ]

            tag From20 {
                value = "mc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8312
                hide_name = True
            ]

            tag From21 {
                value = "start_motor"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7312, 8296
                hide_name = True
                size = 58, 20
            ]

            tag From22 {
                value = "output_power"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7632, 8192
                hide_name = True
                size = 93, 20
            ]

            tag Goto9 {
                value = "output_power"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8304, 8288
                rotation = down
                hide_name = True
                size = 86, 20
            ]

            tag Goto10 {
                value = "charger_connected"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7512, 8384
                hide_name = True
                size = 92, 20
            ]

            tag From24 {
                value = "charger_connected"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7256, 8072
                hide_name = True
                size = 98, 20
            ]

            tag Goto11 {
                value = "w_speed"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9024, 8392
                hide_name = True
                size = 60, 20
            ]

            tag From25 {
                value = "w_speed"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7640, 8144
                hide_name = True
            ]

            tag Goto12 {
                value = "speedkmh"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8888, 8304
                rotation = down
                hide_name = True
                size = 58, 20
            ]

            tag From26 {
                value = "speedkmh"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7312, 8320
                hide_name = True
                size = 68, 20
            ]

            junction Junction157 pe
            [
                position = 8328, 8744
            ]

            junction Junction116 pe
            [
                position = 8432, 8544
            ]

            junction Junction139 pe
            [
                position = 8400, 8640
            ]

            junction Junction160 pe
            [
                position = 8432, 8640
            ]

            junction Junction159 pe
            [
                position = 8432, 8544
            ]

            junction Junction138 pe
            [
                position = 8328, 8544
            ]

            junction Junction158 pe
            [
                position = 8432, 8448
            ]

            junction Junction134 pe
            [
                position = 8256, 8448
            ]

            junction Junction199 sp
            [
                position = 7392, 8144
            ]

            junction Junction194 pe
            [
                position = 8112, 8640
            ]

            junction Junction200 pe
            [
                position = 8112, 8544
            ]

            junction Junction193 pe
            [
                position = 8112, 8448
            ]

            junction Junction201 pe
            [
                position = 8112, 8544
            ]

            junction Junction204 sp
            [
                position = 8368, 8352
            ]

            junction Junction205 sp
            [
                position = 8936, 8392
            ]

            junction Junction206 pe
            [
                position = 7744, 8640
            ]

            junction Junction207 pe
            [
                position = 7744, 8448
            ]

            connect Vab.n_node Junction116 as Connection442
            connect Ic.n_node "Induction motor.c_in" as Connection404
            [
                breakpoints = 8752, 8640; 8752, 8576
            ]
            connect Ib.p_node "Three-phase Meter1.B-" as Connection737
            connect Ia.n_node "Induction motor.a_in" as Connection191
            [
                breakpoints = 8752, 8448; 8752, 8512
            ]
            connect Vbc.p_node Junction116 as Connection444
            connect "Three-phase Meter1.A-" Ia.p_node as Connection738
            connect "Three-phase Meter1.C-" Ic.p_node as Connection739
            connect "battery soc.in" Battery.out as Connection192
            connect C1.n_node Junction157 as Connection744
            connect Junction157 C2.n_node as Connection745
            connect C3.n_node Junction157 as Connection746
            connect Ib.n_node "Induction motor.b_in" as Connection402
            connect "Meter Split.Input" "Three-phase Meter1.Out" as Connection1053
            connect Goto1 "Powertrain Control Module (PCM).ma" as Connection1057
            connect Goto7 "Powertrain Control Module (PCM).mb" as Connection1068
            connect Goto8 "Powertrain Control Module (PCM).mc" as Connection1067
            connect From17 3ph_inverter.En as Connection1070
            connect From19 3ph_inverter.InA as Connection1071
            connect From18 3ph_inverter.InB as Connection1072
            connect From20 3ph_inverter.InC as Connection1073
            connect Junction139 C3.p_node as Connection641
            connect Junction160 Junction139 as Connection754
            [
                breakpoints = 8432, 8640
            ]
            connect L3.n_node Junction139 as Connection642
            [
                breakpoints = 8248, 8640; 8400, 8640
            ]
            connect "Three-phase Meter1.C+" Junction160 as Connection755
            connect Vbc.n_node Junction160 as Connection753
            connect "Three-phase Meter1.B+" Junction159 as Connection752
            connect Junction159 Junction116 as Connection751
            [
                breakpoints = 8432, 8544
            ]
            connect L2.n_node Junction138 as Connection638
            connect Junction138 Junction159 as Connection750
            [
                breakpoints = 8328, 8544
            ]
            connect C2.p_node Junction138 as Connection636
            connect L1.n_node Junction134 as Connection632
            connect Vab.p_node Junction158 as Connection747
            connect C1.p_node Junction134 as Connection620
            connect "Three-phase Meter1.A+" Junction158 as Connection749
            connect Junction158 Junction134 as Connection748
            [
                breakpoints = 8432, 8448
            ]
            connect I_battery.n_node 3ph_inverter.pos_out as Connection1124
            [
                breakpoints = 7888, 8448
            ]
            connect Junction199 "motor started.in" as Connection1149
            [
                breakpoints = 7392, 8112
            ]
            connect "Signal switch.out" Junction199 as Connection1150
            connect Constant1.out "Signal switch.in" as Connection1152
            [
                breakpoints = 7272, 8128
            ]
            connect "start motor.out" "Signal switch.in1" as Connection1153
            [
                breakpoints = 7272, 8160
            ]
            connect Vbc0.n_node Junction194 as Connection1123
            connect 3ph_inverter.c_in Junction194 as Connection1121
            connect L3.p_node Junction194 as Connection1168
            connect L2.p_node Junction200 as Connection1170
            connect 3ph_inverter.a_in Junction193 as Connection1118
            connect Vab0.p_node Junction193 as Connection1120
            connect Junction193 L1.p_node as Connection1166
            [
                breakpoints = 8112, 8448
            ]
            connect Vab0.n_node Junction200 as Connection1176
            [
                breakpoints = 8112, 8544
            ]
            connect Junction200 Junction201 as Connection1177
            connect Junction201 3ph_inverter.b_in as Connection1178
            connect Vbc0.p_node Junction201 as Connection1179
            connect From16 "Powertrain Control Module (PCM).On" as Connection1180
            connect Throttle.out "Powertrain Control Module (PCM).Throttle" as Connection1181
            connect Load.torque "Induction motor.load_in" as Connection1188
            connect Termination1.in "Induction motor.torque_out" as Connection1189
            connect Junction199 Goto6 as Connection1217
            [
                breakpoints = 7392, 8144; 7392, 8144; 7392, 8176; 7392, 8176; 7392, 8176
            ]
            connect From22 "Powertrain Control Module (PCM).output power" as Connection1220
            connect "Meter Split.POWER_P" Junction204 as Connection1222
            [
                breakpoints = 8408, 8352; 8392, 8352
            ]
            connect Junction204 P.in as Connection1223
            connect Goto9 Junction204 as Connection1224
            connect "Bus Join1.out" out_extras as Connection1225
            connect From24 "Signal switch.in2" as Connection1229
            connect From21 "Bus Join1.in" as Connection1231
            connect "Induction motor.speed_out" Junction205 as Connection1232
            connect Junction205 Load.w_speed as Connection1233
            [
                breakpoints = 8936, 8392; 8936, 8344
            ]
            connect Goto11 Junction205 as Connection1234
            connect "Powertrain Control Module (PCM).Machine speed" From25 as Connection1235
            connect Goto12 Load.speedkmh as Connection1236
            connect From26 "Bus Join1.in1" as Connection1237
            connect "Core Coupling 2.a_in" DC+ as Connection1251
            connect DC- "Core Coupling 2.b_in" as Connection1252
            connect Battery.n_node Junction206 as Connection1253
            connect Junction206 3ph_inverter.neg_out as Connection1254
            [
                breakpoints = 7744, 8648; 7744, 8640; 7744, 8640
            ]
            connect "Core Coupling 2.b_out" Junction206 as Connection1255
            connect Battery.p_node Junction207 as Connection1256
            connect Junction207 I_battery.p_node as Connection1257
            [
                breakpoints = 7744, 8448; 7744, 8448; 7744, 8448; 7744, 8448
            ]
            connect "Core Coupling 2.a_out" Junction207 as Connection1258
            connect in_extras "Rate Transition1.in" as Connection1259
            connect "Rate Transition1.out" Goto10 as Connection1260

            Ts = "Tev"

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Electric vehicle with 250kW induction motor and 150Ah Li-ion battery. The 22kVA on-board battery charger is implemented using \"Battery inverter\" component from the microgrid library. Supports grid forming/following, vehicle-to-grid and grid-to-vehicle operation. The powertrain control module (PCM) implements regenerative breaking.</p></body></html>"

                Ts {
                    label = "Ts"
                    widget = edit
                    type = generic
                    default_value = "0"
                }

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE

                CODE define_icon
                    mdl.set_component_icon_image(item_handle, r"C:\00 Typhoon SVN\t_misc\00 Project management\90 Demos\0900 EATON-Typhoon Demo 5_26_2020\img\EVredcar.jpg")
                ENDCODE
            }
        }
        [
            position = 8688, 8144
            scale = -1, 1
            size = 528, 240
        ]

        tag Goto1 {
            value = "EV_out_extras"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 8928, 7944
            rotation = left
            hide_name = True
            size = 74, 20
        ]

        tag From1 {
            value = "EV_out_extras"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8072, 7960
            rotation = right
            hide_name = True
            size = 73, 20
        ]

        tag Goto2 {
            value = "CS_out_extras"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 8232, 7960
            rotation = left
            hide_name = True
            size = 74, 20
        ]

        tag From2 {
            value = "CS_out_extras"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8448, 7960
            rotation = right
            hide_name = True
            size = 73, 20
        ]

        comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">Compiled and tested with:</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">HIL604 @ 2us</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">Code = ext. memory</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">Data = int. memory</span> </p></body></html> ENDCOMMENT 
        [
            position = 7376, 8320
        ]

        connect Home.a "Charging Station.A" as Connection7
        connect Home.b "Charging Station.B" as Connection8
        connect Home.c "Charging Station.C" as Connection9
        connect From1 "Charging Station.in_extras" as Connection11
        connect Goto2 "Charging Station.out_extras" as Connection12
        connect From2 "Electric Vehicle.in_extras" as Connection13
        connect "Electric Vehicle.DC-" "Charging Station.DC-" as Connection27
        [
            breakpoints = 8328, 8240
        ]
        connect "Charging Station.DC+" "Electric Vehicle.DC+" as Connection28
        [
            breakpoints = 8328, 8048
        ]
        connect Goto1 "Electric Vehicle.out_extras" as Connection29
        connect Grid.A Home.A as Connection30
        connect Grid.B Home.B as Connection31
        connect Home.C Grid.C as Connection32
    }

    logically_deleted {
        "Home.Natural Gas Genset.Gas Engine.Goto9"
        "Home.Natural Gas Genset.Gas Engine.From65"
        "Home.Natural Gas Genset.Gas Engine.From66"
        "Home.Natural Gas Genset.Gas Engine.Goto8"
    }

    default {
        gen_PQ_transform {
            filter_order = "first order"
            filter_cutoff_Hz = "30"
            initial_filter_input = "0"
            initial_filter_output = "0"
            enable_inst_ports = "True"
            enable_zero_ports = "False"
            execution_rate = "inherit"
        }

        gen_abs {
            execution_rate = "inherit"
        }

        gen_bus_join {
            inputs = "2"
            execution_rate = "inherit"
        }

        gen_bus_split {
            outputs = "2"
            execution_rate = "inherit"
        }

        gen_c_function {
            in_terminal_properties = "real in;"
            in_terminal_labels = ""
            out_terminal_properties = "real out;"
            out_terminal_labels = ""
            no_feed_inputs = ""
            no_feed_outputs = ""
            in_terminal_dimensions = ""
            in_terminal_dimensions_str = ""
            out_terminal_dimensions = ""
            out_terminal_dimensions_str = ""
            output_fnc = ""
            update_fnc = ""
            init_fnc = ""
            global_variables = ""
            parameters = ""
            execution_rate = "inherit"
        }

        gen_comparator {
            execution_rate = "inherit"
        }

        gen_data_type_conversion {
            output_type = "real"
            execution_rate = "inherit"
        }

        gen_delay {
            delay_type = "Fixed delay"
            del_length = "2"
            max_delay_length = "20"
            init_value = "0"
            signal_out_type = "inherit"
            execution_rate = "inherit"
        }

        gen_digital_probe {
            override_signal_name = "False"
            signal_name = ""
            streaming_en = "False"
            addr = "0"
            streaming_er_idx = "0"
            execution_rate = "inherit"
        }

        gen_gain {
            gain = "1"
            multiplication = "Element-wise(K.*u)"
            execution_rate = "inherit"
        }

        gen_gain {
            gain = "1"
            multiplication = "Element-wise(K.*u)"
            execution_rate = "inherit"
        }

        gen_integrator {
            show_reset = "none"
            reset_type = "asynchronous"
            show_init_condition = "internal"
            init_value = "0"
            limit_output = "False"
            limit_upper = "inf"
            limit_lower = "-inf"
            show_state = "False"
            state_port_type = "inherit"
            execution_rate = "inherit"
        }

        gen_limiter {
            upper_limit = "[\'inf\']"
            lower_limit = "[\'-inf\']"
            execution_rate = "inherit"
        }

        gen_logic_op {
            operator = "AND"
            inputs = "2"
            execution_rate = "inherit"
        }

        gen_math_fnc {
            mathematical_fn = "exponential"
            execution_rate = "inherit"
        }

        gen_minmax {
            operation = "min"
            inputs = "2"
            execution_rate = "inherit"
        }

        gen_probe {
            addr = "0"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "generic"
            streaming_en = "False"
            streaming_er_idx = "0"
            execution_rate = "inherit"
        }

        gen_product {
            signs = "2"
            execution_rate = "inherit"
        }

        gen_rate_limiter {
            rising_limit = "1"
            falling_limit = "-1"
            execution_rate = "inherit"
        }

        gen_rms_value {
            op_mode = "PLL based"
            frequency = "50"
            period_timeout = "0.5"
            execution_rate = "inherit"
        }

        gen_round {
            round_fn = "floor"
            execution_rate = "inherit"
        }

        gen_scada_output {
            addr = "0"
            format = "real"
            unit = " "
            override_signal_name = "False"
            signal_name = ""
            execution_rate = "inherit"
        }

        gen_sign {
            execution_rate = "inherit"
        }

        gen_sum {
            signs = "2"
            execution_rate = "inherit"
        }

        gen_terminator {
            execution_rate = "inherit"
        }

        gen_trigonometric {
            trigonometric_fn = "sin"
            execution_rate = "inherit"
        }

        gen_z_domain_transfer {
            domain = "Z-domain"
            method = "Zero-order hold"
            b_coeff = "[1]"
            a_coeff = "[1,-1]"
            init_states = "0"
            signal_out_type = "inherit"
            execution_rate = "inherit"
        }

        lut_1d {
            in_vec_x = "np.arange(-5,6)"
            out_vec_f_x = "np.arange(-5,6)**2"
            table_impl = "Equidistant"
            ext_mode = "Clip"
            execution_rate = "inherit"
        }

        msr_phase {
            period_timeout = "0.5"
            lpf_checkbox = "True"
            f3db = "500.0"
            execution_rate = "inherit"
        }

        msr_phasor_3ph {
            period_timeout = "0.5"
            execution_rate = "inherit"
        }

        pas_capacitor {
            capacitance = "1e-6"
            initial_voltage = "0"
            pole_shift_ignore = "False"
            visible = "True"
        }

        pas_inductor {
            inductance = "1e-3"
            initial_current = "0.0"
            pole_shift_ignore = "False"
            visible = "True"
        }

        pas_resistor {
            resistance = "1"
        }

        src_constant {
            value = "1"
            signal_type = "real"
            execution_rate = "100e-6"
        }

        src_scada_input {
            addr = "0"
            format = "real"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "real"
            min = "-1e6"
            max = "1e6"
            def_value = "0"
            unit = " "
            execution_rate = "100e-6"
        }

        sys_signal_switch {
            criterion = "ctrl >= threshold"
            threshold = "0"
            execution_rate = "inherit"
        }

        tm_delay {
            init_value = "0"
            signal_out_type = "inherit"
            execution_rate = "inherit"
        }

        "core/(50) Instantaneous Overcurrent" {
            In = "2000"
            OC_thresh = "5.0"
            execution_rate = "100e-6"
        }

        "core/Battery" {
            sig_output = "False"
            lut = "False"
            battery_type = "Lead-Acid"
            nominal_voltage = "12.0"
            capacity = "1.2"
            initial_soc = "100.0"
            execution_rate = "100e-6"
            Ke_full = "108.0"
            Kdisc_I = "5.0"
            R_series = "0.25"
            Kq_nom = "50.0"
            Kq_exp = "0.9"
            Ke_exp = "102.5"
            preview = "Preview SOC Curve"
        }

        "core/Constant Impedance Load" {
            fn = "60"
            conn_type = "Y"
            enable_neutral = "False"
            set_balanced = "True"
            Vn_3ph = "480"
            Sn_3ph = "1.0e6"
            pf_mode_3ph = "Unit"
            pf_3ph = "0.9"
            VAn = "480/(3**0.5)"
            VAB = "480"
            SAn = "1.0e6/3"
            SAB = "1.0e6/3"
            pf_modeA = "Unit"
            pfA = "0.9"
            VBn = "480/(3**0.5)"
            VBC = "480"
            SBn = "1.0e6/3"
            SBC = "1.0e6/3"
            pf_modeB = "Unit"
            pfB = "0.9"
            VCn = "480/(3**0.5)"
            VCA = "480"
            SCn = "1.0e6/3"
            SCA = "1.0e6/3"
            pf_modeC = "Unit"
            pfC = "0.9"
        }

        "core/Counter" {
            ext_reset = "level"
            init_val = "0"
            state_type = "real"
            execution_rate = "inherit"
        }

        "core/Current Measurement" {
            bw_limit = "False"
            frequency = "10e3"
            comparator_enable = "False"
            operator = "greater"
            threshold = "0"
            cmp_abs_value = "False"
            feed_forward = "false"
            sig_output = "False"
            execution_rate = "100e-6"
            addr = "0"
            nd_msr_estimation = "false"
            dev_cpl_msr = "false"
            host_device = "0"
            output_to_device = "0"
            dev_cpl_index = "0"
            dev_cpl_var_nb = "0"
            visible = "True"
            override_signal_name = "False"
            signal_name = ""
        }

        "core/Current RMS" {
            op_mode = "PLL based"
            frequency = "50"
            sig_output = "False"
            execution_rate = "inherit"
            feed_forward = "false"
            nd_msr_estimation = "false"
        }

        "core/DC Energy Calculation" {
            C_dc = "0"
        }

        "core/Edge Detection" {
            edge = "both"
            execution_rate = "inherit"
        }

        "core/Generic UL 1741 ride-through" {
            Nom = "0"
            L1val = "0"
            L1duration = "0"
            L1cessation = "True"
            L2val = "0"
            L2duration = "0"
            L2cessation = "True"
            L3val = "0"
            L3duration = "0"
            L3cessation = "True"
            H2val = "0"
            H2duration = "0"
            H2cessation = "True"
            H1val = "0"
            H1duration = "0"
            H1cessation = "True"
        }

        "core/Grid Fault" {
            resistance = "0.0"
            fault_type = "A-GND"
        }

        "core/Induction Machine with Squirrel Cage" {
            model_type = "linear"
            Rs = "13.12"
            Rr = "11.202"
            Lls = "0.0276"
            Llr = "0.0194"
            Lm = "0.3482"
            curve_type = "flux vs current"
            im_vector = "[0.0, 0.0]"
            psim_vector = "[0.0, 0.0]"
            Lm_vector = "[0.0, 0.0]"
            pms = "2"
            Jm = "10e-6"
            friction_coeff = "0"
            unconstrained_angle = "disabled"
            load_src = "SCADA / external"
            ext_mdl_load_type = "torque"
            load_ai_pin_addr = "1"
            load_ai_offset = "0"
            load_ai_gain = "1"
            enc_ppr = "1024"
            res_pole_pairs = "1"
            res_carr_source = "internal"
            res_int_carr_f = "5e+3"
            res_ai_pin_addr = "1"
            res_ai_offset = "0"
            res_ai_gain = "1"
            absenc_type = "None"
            endat_clock_di_addr = "1"
            endat_clock_di_logic = "active high"
            endat_data_di_addr = "2"
            endat_data_di_logic = "active high"
            biss_clock_di_addr = "1"
            biss_clock_di_logic = "active high"
            biss_data_di_addr = "2"
            ssi_clock_di_addr = "1"
            ssi_clock_di_logic = "active high"
            ssi_data_di_addr = "2"
            Rsnb_stator = "20e3"
            calculate_max_snubber = "Calculate"
            enb_sig_out = "False"
            execution_rate = "100e-6"
        }

        "core/Meter Split" {
            van = "True"
            vbn = "True"
            vcn = "True"
            van_rms = "False"
            vbn_rms = "False"
            vcn_rms = "False"
            vln_rms = "False"
            vab = "False"
            vbc = "False"
            vca = "False"
            vab_rms = "False"
            vbc_rms = "False"
            vca_rms = "False"
            vll_rms = "False"
            ia = "False"
            ib = "False"
            ic = "False"
            ia_rms = "False"
            ib_rms = "False"
            ic_rms = "False"
            i_rms = "False"
            freq = "False"
            power_p = "False"
            power_q = "False"
            power_s = "False"
            power_pf = "False"
            enable_extra_in = "No"
            power_pa = "False"
            power_pb = "False"
            power_pc = "False"
            power_qa = "False"
            power_qb = "False"
            power_qc = "False"
            power_sa = "False"
            power_sb = "False"
            power_sc = "False"
            power_pfa = "False"
            power_pfb = "False"
            power_pfc = "False"
        }

        "core/NPC Leg" {
            ctrl_src = "Digital input per switch"
            op_mode = "Fixed carrier frequency"
            carrier_freq = "10000.0"
            carr_ph_offset = "0.0"
            d_time = "5e-6"
            ref_sig_min_max = "[0, 1.0]"
            load_mode = "on min"
            execution_rate = "inherit"
            S1 = "1"
            S1_logic = "active high"
            S2 = "2"
            S2_logic = "active high"
            S3 = "3"
            S3_logic = "active high"
            S4 = "4"
            S4_logic = "active high"
            control_property = "all high"
            pwm_enabling = "False"
            pwm_enable_di = "13"
            pwm_enable_inv = "active high"
            dtv_flag_en = "True"
            delay_enabled = "False"
            fixed_delay = "1e-6"
            var_delay_lut = "[-10.0, 1e-6, 10.0, 1e-6]"
            preview_var_delay = "Preview"
            PESB_Optimization = "True"
            show_monitoring = "false"
            losses_estimation = "False"
            losses_groups = "Group1"
            Import_igbt_xml_g1 = "not selected"
            Import_diode_xml_g1 = "not selected"
            Import_igbt_xml_g2 = "not selected"
            Import_diode_xml_g2 = "not selected"
            Import_diode_xml_g3 = "not selected"
            Vce_g1 = "1.3"
            Rce_g1 = "0"
            Vd_g1 = "1.2"
            Rd_g1 = "0"
            i_sw_g1 = "[0.0, 6.0, 12.0, 18.0, 24.0]"
            v_sw_g1 = "[0.0, 600.0]"
            temp_sw_g1 = "[25.0, 50.0, 75.0, 100.0, 125.0]"
            et_on_table_out_g1 = "[[0.0, 0.0275e-3, 0.15e-3, 0.275e-3, 0.3e-3], [0.35*3.8e-3, 0.4*3.8e-3, 0.8*3.8e-3, 0.68*3.8e-3, 0.9*3.8e-3], [0.65*3.8e-3, 0.9*3.8e-3, 1.2*3.8e-3, 1.5*3.8e-3, 1.7*3.8e-3], [0.9*3.8e-3, 1.3*3.8e-3, 1.7*3.8e-3, 1.9*3.8e-3, 2.25*3.8e-3], [1.1*3.8e-3, 1.7*3.8e-3, 2.1*3.8e-3, 2.3*3.8e-3, 2.5*3.8e-3]]"
            et_off_table_out_g1 = "[[0.0, 0.0275e-3, 0.15e-3, 0.275e-3, 0.3e-3], [0.35*2.1e-3, 0.4*2.1e-3, 0.8*2.1e-3, 0.68*2.1e-3, 0.9*2.1e-3], [0.65*2.1e-3, 0.9*2.1e-3, 1.2*2.1e-3, 1.5*2.1e-3, 1.7*2.1e-3], [0.9*2.1e-3, 1.3*2.1e-3, 1.7*2.1e-3, 1.9*2.1e-3, 2.25*2.1e-3], [1.1*2.1e-3, 1.7*2.1e-3, 2.1*2.1e-3, 2.3*2.1e-3, 2.5*2.1e-3]]"
            ed_off_table_out_g1 = "[[0.0, 0.0275e-3, 0.15e-3, 0.275e-3, 0.3e-3], [0.35*2.2e-3, 0.4*2.2e-3, 0.8*2.2e-3, 0.68*2.2e-3, 0.9*2.2e-3], [0.65*2.2e-3, 0.9*2.2e-3, 1.2*2.2e-3, 1.5*2.2e-3, 1.7*2.2e-3], [0.9*2.2e-3, 1.3*2.2e-3, 1.7*2.2e-3, 1.9*2.2e-3, 2.25*2.2e-3], [1.1*2.2e-3, 1.7*2.2e-3, 2.1*2.2e-3, 2.3*2.2e-3, 2.5*2.2e-3]]"
            Vce_g2 = "1.3"
            Rce_g2 = "0"
            Vd_g2 = "1.2"
            Rd_g2 = "0"
            i_sw_g2 = "[0.0, 6.0, 12.0, 18.0, 24.0]"
            v_sw_g2 = "[0.0, 600.0]"
            temp_sw_g2 = "[25.0, 50.0, 75.0, 100.0, 125.0]"
            et_on_table_out_g2 = "[[0.0, 0.0275e-3, 0.15e-3, 0.275e-3, 0.3e-3], [0.35*3.8e-3, 0.4*3.8e-3, 0.8*3.8e-3, 0.68*3.8e-3, 0.9*3.8e-3], [0.65*3.8e-3, 0.9*3.8e-3, 1.2*3.8e-3, 1.5*3.8e-3, 1.7*3.8e-3], [0.9*3.8e-3, 1.3*3.8e-3, 1.7*3.8e-3, 1.9*3.8e-3, 2.25*3.8e-3], [1.1*3.8e-3, 1.7*3.8e-3, 2.1*3.8e-3, 2.3*3.8e-3, 2.5*3.8e-3]]"
            et_off_table_out_g2 = "[[0.0, 0.0275e-3, 0.15e-3, 0.275e-3, 0.3e-3], [0.35*2.1e-3, 0.4*2.1e-3, 0.8*2.1e-3, 0.68*2.1e-3, 0.9*2.1e-3], [0.65*2.1e-3, 0.9*2.1e-3, 1.2*2.1e-3, 1.5*2.1e-3, 1.7*2.1e-3], [0.9*2.1e-3, 1.3*2.1e-3, 1.7*2.1e-3, 1.9*2.1e-3, 2.25*2.1e-3], [1.1*2.1e-3, 1.7*2.1e-3, 2.1*2.1e-3, 2.3*2.1e-3, 2.5*2.1e-3]]"
            ed_off_table_out_g2 = "[[0.0, 0.0275e-3, 0.15e-3, 0.275e-3, 0.3e-3], [0.35*2.2e-3, 0.4*2.2e-3, 0.8*2.2e-3, 0.68*2.2e-3, 0.9*2.2e-3], [0.65*2.2e-3, 0.9*2.2e-3, 1.2*2.2e-3, 1.5*2.2e-3, 1.7*2.2e-3], [0.9*2.2e-3, 1.3*2.2e-3, 1.7*2.2e-3, 1.9*2.2e-3, 2.25*2.2e-3], [1.1*2.2e-3, 1.7*2.2e-3, 2.1*2.2e-3, 2.3*2.2e-3, 2.5*2.2e-3]]"
            Vd_g3 = "1.2"
            Rd_g3 = "0"
            i_sw_g3 = "[0.0, 6.0, 12.0, 18.0, 24.0]"
            v_sw_g3 = "[0.0, 600.0]"
            temp_sw_g3 = "[25.0, 50.0, 75.0, 100.0, 125.0]"
            ed_off_table_out_g3 = "[[0.0, 0.0275e-3, 0.15e-3, 0.275e-3, 0.3e-3], [0.35*2.2e-3, 0.4*2.2e-3, 0.8*2.2e-3, 0.68*2.2e-3, 0.9*2.2e-3], [0.65*2.2e-3, 0.9*2.2e-3, 1.2*2.2e-3, 1.5*2.2e-3, 1.7*2.2e-3], [0.9*2.2e-3, 1.3*2.2e-3, 1.7*2.2e-3, 1.9*2.2e-3, 2.25*2.2e-3], [1.1*2.2e-3, 1.7*2.2e-3, 2.1*2.2e-3, 2.3*2.2e-3, 2.5*2.2e-3]]"
            temp_estimation = "False"
            thermal_networks_type_g1 = "Foster"
            switch_Rth_g1 = "[0.159, 0.133, 0.120, 0.038]"
            switch_Tth_g1 = "[1.1e-1, 1.56e-2, 1.35e-3, 1.51e-4]"
            switch_Cth_g1 = "[0.0029, 0.0097, 0.1068, 0.8500]"
            diode_Rth_g1 = "[0.159, 0.133, 0.120, 0.038]"
            diode_Tth_g1 = "[1.1e-1, 1.56e-2, 1.35e-3, 1.51e-4]"
            diode_Cth_g1 = "[0.0029, 0.0097, 0.1068, 0.8500]"
            thermal_networks_type_g2 = "Foster"
            switch_Rth_g2 = "[0.159, 0.133, 0.120, 0.038]"
            switch_Tth_g2 = "[1.1e-1, 1.56e-2, 1.35e-3, 1.51e-4]"
            switch_Cth_g2 = "[0.0029, 0.0097, 0.1068, 0.8500]"
            diode_Rth_g2 = "[0.159, 0.133, 0.120, 0.038]"
            diode_Tth_g2 = "[1.1e-1, 1.56e-2, 1.35e-3, 1.51e-4]"
            diode_Cth_g2 = "[0.0029, 0.0097, 0.1068, 0.8500]"
            thermal_networks_type_g3 = "Foster"
            diode_Rth_g3 = "[0.159, 0.133, 0.120, 0.038]"
            diode_Tth_g3 = "[1.1e-1, 1.56e-2, 1.35e-3, 1.51e-4]"
            diode_Cth_g3 = "[0.0029, 0.0097, 0.1068, 0.8500]"
            loss_exec_rate = "100e-6"
        }

        "core/Open-loop Power Controller" {
            imax = "1000"
            ratemax = "50000"
        }

        "core/Photovoltaic Panel" {
            Cpv = "1e-6"
            initial_voltage = "0"
        }

        "core/Rate Transition" {
            init_value = "0.0"
            execution_rate = "100e-6"
        }

        "core/Resistive Neutral" {
            R = "1e6"
        }

        "core/Signal Controlled Current Source" {
            execution_rate = "inherit"
        }

        "core/Signal Controlled Voltage Source" {
            execution_rate = "inherit"
        }

        "core/Single Phase Core Coupling" {
            snb_type_i = "none"
            R1 = "100000.0"
            C1 = "1e-06"
            C2 = "1e-06"
            fixed_snb_i = "false"
            snb_type_u = "none"
            R2 = "0.1"
            L1 = "0.1"
            L2 = "0.1"
            fixed_snb_u = "false"
        }

        "core/Synchronous Machine with Wound Rotor" {
            model_type = "linear"
            rated_speed = "1.0"
            Rs = "1.62"
            Lls = "0.004527"
            Lmd = "0.1086"
            Lmq = "0.1086"
            curve_type = "no load curve"
            if_vector = "[0.0, 0.0]"
            vs_vector = "[0.0, 0.0]"
            imd_vector = "[0.0, 0.0]"
            imq_vector = "[0.0, 0.0]"
            psimd_table = "[[0.0, 0.0], [0.0, 0.0]]"
            psimq_table = "[[0.0, 0.0], [0.0, 0.0]]"
            Rf = "1.208"
            Llfd = "0.01132"
            Rkd = "3.142"
            Rkq = "4.772"
            Llkd = "0.007334"
            Llkq = "0.01015"
            Ns_div_Nfd = "1.0"
            Ns_div_Nkd = "1.0"
            Ns_div_Nkq = "1.0"
            pms = "2"
            star_delta = "star"
            Jm = "0.0923"
            friction_coeff = "0"
            unconstrained_angle = "disabled"
            load_src = "SCADA / external"
            ext_mdl_load_type = "torque"
            load_ai_pin_addr = "1"
            load_ai_offset = "0"
            load_ai_gain = "1"
            enc_ppr = "1024"
            res_pole_pairs = "1"
            res_carr_source = "internal"
            res_int_carr_f = "5e+3"
            res_ai_pin_addr = "1"
            res_ai_offset = "0"
            res_ai_gain = "1"
            absenc_type = "None"
            endat_clock_di_addr = "1"
            endat_clock_di_logic = "active high"
            endat_data_di_addr = "2"
            endat_data_di_logic = "active high"
            biss_clock_di_addr = "1"
            biss_clock_di_logic = "active high"
            biss_data_di_addr = "2"
            ssi_clock_di_addr = "1"
            ssi_clock_di_logic = "active high"
            ssi_data_di_addr = "2"
            theta_ab = "-pi/2"
            field_input = "voltage"
            Rsnb_rotor = "inf"
            Rsnb_stator = "inf"
            enb_sig_out = "False"
            execution_rate = "100e-6"
            machine_id = "0"
            me_speed_out_addr = "0"
            el_torque_out_addr = "0"
            me_angle_out_addr = "0"
        }

        "core/Three Phase Core Coupling" {
            snb_type_i = "none"
            R1 = "100e3"
            C1 = "1e-06"
            C2 = "1e-06"
            fixed_snb_i = "false"
            snb_type_u = "none"
            R2 = "0.1"
            L1 = "0.1"
            L2 = "0.1"
            fixed_snb_u = "false"
            cpl_connection = "star"
        }

        "core/Three Phase Inverter" {
            ctrl_src = "Digital input per switch"
            op_mode = "Fixed carrier frequency"
            carrier_freq = "10000.0"
            carr_ph_offset = "0.0"
            d_time = "5e-6"
            ref_sig_min_max = "[-1.0, 1.0]"
            load_mode = "on min"
            execution_rate = "inherit"
            Sa_top = "1"
            Sa_top_logic = "active high"
            Sa_bot = "2"
            Sa_bot_logic = "active high"
            Sb_top = "3"
            Sb_top_logic = "active high"
            Sb_bot = "4"
            Sb_bot_logic = "active high"
            Sc_top = "5"
            Sc_top_logic = "active high"
            Sc_bot = "6"
            Sc_bot_logic = "active high"
            delay_enabled = "False"
            fixed_delay = "1e-6"
            var_delay_lut = "[-10.0, 1e-6, 10.0, 1e-6]"
            preview_var_delay = "Preview"
            Sa_top_I = "False"
            Sa_bot_I = "False"
            Sb_top_I = "False"
            Sb_bot_I = "False"
            Sc_top_I = "False"
            Sc_bot_I = "False"
            losses_estimation = "False"
            Import_igbt_xml = "not selected"
            Import_diode_xml = "not selected"
            Vce = "1.3"
            Rce = "0"
            Vd = "1.2"
            Rd = "0"
            i_sw = "[0.0, 6.0, 12.0, 18.0, 24.0]"
            v_sw = "[0.0, 600.0]"
            temp_sw = "[25.0, 50.0, 75.0, 100.0, 125.0]"
            et_on_table_out = "[[0.0, 0.0275e-3, 0.15e-3, 0.275e-3, 0.3e-3], [0.35*3.8e-3, 0.4*3.8e-3, 0.8*3.8e-3, 0.68*3.8e-3, 0.9*3.8e-3], [0.65*3.8e-3, 0.9*3.8e-3, 1.2*3.8e-3, 1.5*3.8e-3, 1.7*3.8e-3], [0.9*3.8e-3, 1.3*3.8e-3, 1.7*3.8e-3, 1.9*3.8e-3, 2.25*3.8e-3], [1.1*3.8e-3, 1.7*3.8e-3, 2.1*3.8e-3, 2.3*3.8e-3, 2.5*3.8e-3]]"
            et_off_table_out = "[[0.0, 0.0275e-3, 0.15e-3, 0.275e-3, 0.3e-3], [0.35*2.1e-3, 0.4*2.1e-3, 0.8*2.1e-3, 0.68*2.1e-3, 0.9*2.1e-3], [0.65*2.1e-3, 0.9*2.1e-3, 1.2*2.1e-3, 1.5*2.1e-3, 1.7*2.1e-3], [0.9*2.1e-3, 1.3*2.1e-3, 1.7*2.1e-3, 1.9*2.1e-3, 2.25*2.1e-3], [1.1*2.1e-3, 1.7*2.1e-3, 2.1*2.1e-3, 2.3*2.1e-3, 2.5*2.1e-3]]"
            ed_off_table_out = "[[0.0, 0.0275e-3, 0.15e-3, 0.275e-3, 0.3e-3], [0.35*2.2e-3, 0.4*2.2e-3, 0.8*2.2e-3, 0.68*2.2e-3, 0.9*2.2e-3], [0.65*2.2e-3, 0.9*2.2e-3, 1.2*2.2e-3, 1.5*2.2e-3, 1.7*2.2e-3], [0.9*2.2e-3, 1.3*2.2e-3, 1.7*2.2e-3, 1.9*2.2e-3, 2.25*2.2e-3], [1.1*2.2e-3, 1.7*2.2e-3, 2.1*2.2e-3, 2.3*2.2e-3, 2.5*2.2e-3]]"
            temp_estimation = "False"
            thermal_networks_type = "Foster"
            switch_Rth = "[0.159, 0.133, 0.120, 0.038]"
            switch_Tth = "[1.1e-1, 1.56e-2, 1.35e-3, 1.51e-4]"
            switch_Cth = "[0.0029, 0.0097, 0.1068, 0.8500]"
            diode_Rth = "[0.159, 0.133, 0.120, 0.038]"
            diode_Tth = "[1.1e-1, 1.56e-2, 1.35e-3, 1.51e-4]"
            diode_Cth = "[0.0029, 0.0097, 0.1068, 0.8500]"
            loss_exec_rate = "100e-6"
            vout_cmp_pullup_mode = "False"
            show_cnt_out = "False"
            show_monitoring = "false"
            _control_property = "all high"
            dtv_flag_en = "True"
            pwm_enabling = "False"
            pwm_enable_di = "13"
            pwm_enable_inv = "active high"
        }

        "core/Three Phase Two Winding Transformer" {
            input = "SC and OC tests"
            core_sat = "False"
            Sn = "160000.0"
            f = "50.0"
            V1 = "10000.0"
            V2 = "400.0"
            usc1 = "4.0"
            Psc1 = "2350.0"
            ioc1 = "0.7"
            Poc1 = "460.0"
            R1 = "4.58984375"
            L1 = ".0370093710364"
            R2 = ".00734375"
            L2 = "5.92149936583e-05"
            Rm = "217391.304348"
            Lm = "311.709196788"
            flux_vals_SI = "[1910.3, 2419.7]"
            current_vals_SI = "[0.66653, 277.72]"
            r1 = ".00734375"
            l1 = ".0186029389059"
            r2 = ".00734375"
            l2 = ".0186029389059"
            rm = "347.826086957"
            lm = "156.68213163"
            flux_vals_pu = "[1.2, 1.52]"
            current_vals_pu = "[0.0024, 1]"
            flux_vals_SCOC = "[1.2, 1.52]"
            current_vals_SCOC = "[0.0024, 1]"
            import_from_SI2SCOC = "Import from SI"
            import_from_pu2SCOC = "Import from PU"
            import_from_SCOC2SI = "Import from SC OC"
            import_from_pu2SI = "Import from PU"
            import_from_SCOC2pu = "Import from SC OC"
            import_from_SI2pu = "Import from SI"
            winding_1_connection = "Y"
            winding_2_connection = "Y"
            clock_number = "0"
            embedded_cpl = "false"
            coupling_type = "core"
            Rshunt = "inf"
        }

        "core/Three Phase Voltage Source" {
            init_rms_value = "0.0"
            init_frequency = "50.0"
            init_phase = "0.0"
        }

        "core/Three phase PLL" {
            initial_filter_output = "60"
            wn = "157.0796"
            zeta = "0.707"
            rate_high = "12"
            rate_low = "-12"
            freq_unit = "Hz"
            kp = "100"
            ki = "3200"
            kd = "1"
            N = "714.2857"
            initial_pid_output = "376.99111843"
            up_lim = "1e4"
            low_lim = "-1e4"
            kb = "1"
            power_form = "variant - Clarke\'s original"
            alignment = "-pi/2"
            disable_filter = "False"
            wn_LPFdq = "62.83185307"
            execution_rate = "inherit"
            enable_pk = "False"
            enable_zero = "True"
            enable_sin = "True"
        }

        "core/Three-phase Meter" {
            R = "1e5"
            n_cycles = "1"
            Ts = "100e-6"
            enable_probes = "True"
            enable_out = "True"
            remove_snubber = "False"
            VAn = "True"
            VBn = "True"
            VCn = "True"
            VAB = "False"
            VBC = "False"
            VCA = "False"
            IA = "True"
            IB = "True"
            IC = "True"
            freq = "False"
            VLn_rms = "False"
            VLL_rms = "False"
            VLn_avg_rms = "False"
            VLL_avg_rms = "False"
            I_rms = "False"
            I_avg_rms = "False"
            P_method = "alpha-beta"
            enable_extra_out = "False"
            P_meas = "False"
        }

        "core/Three-phase UL 1741 voltage ride-through" {
            Vnom = "0"
        }

        "core/Transmission Line" {
            model = "RL coupled"
            num_of_phases = "3"
            model_def = "Geometry"
            unit_sys = "imperial"
            Length_metric = "100.0"
            Length_miles = "62.1371"
            Frequency = "60.0"
            Earth_resistivity = "100"
            X_axis_1_metric = "-1.0668"
            Y_axis_1_metric = "8.5344"
            GMR_1_metric = "0.00743712"
            RD_1_metric = "0.009156192"
            Rs_1_metric = "0.19013958482462417"
            X_axis_1_imperial = "-3.5"
            Y_axis_1_imperial = "28.0"
            GMR_1_imperial = "0.0244"
            RD_1_imperial = "0.03004"
            Rs_1_imperial = "0.306"
            X_axis_2_metric = "-0.3048"
            Y_axis_2_metric = "8.5344"
            GMR_2_metric = "0.00743712"
            RD_2_metric = "0.009156192"
            Rs_2_metric = "0.19013958482462417"
            X_axis_2_imperial = "-1.0"
            Y_axis_2_imperial = "28.0"
            GMR_2_imperial = "0.0244"
            RD_2_imperial = "0.03004"
            Rs_2_imperial = "0.306"
            X_axis_3_metric = "1.0668"
            Y_axis_3_metric = "8.5344"
            GMR_3_metric = "0.00743712"
            RD_3_metric = "0.009156192"
            Rs_3_metric = "0.19013958482462417"
            X_axis_3_imperial = "3.5"
            Y_axis_3_imperial = "28.0"
            GMR_3_imperial = "0.0244"
            RD_3_imperial = "0.03004"
            Rs_3_imperial = "0.306"
            X_axis_4_metric = "0.1524"
            Y_axis_4_metric = "7.3152"
            GMR_4_metric = "0.00248"
            RD_4_metric = "0.00714"
            Rs_4_metric = "0.3678"
            X_axis_4_imperial = "0.5"
            Y_axis_4_imperial = "24.0"
            GMR_4_imperial = "0.00814"
            RD_4_imperial = "0.02345"
            Rs_4_imperial = "0.592"
            R_metric = "[[0.2481, 0.0579, 0.0579], [0.0579, 0.2481, 0.0579], [0.0579, 0.0579, 0.2481]]"
            R_imperial = "[[0.4, 0.093, 0.093], [0.093, 0.4, 0.093], [0.093, 0.093, 0.4]]"
            L_metric = "[[0.00233, 0.00140, 0.00140], [0.00140, 0.00233, 0.00140], [0.00140, 0.00140, 0.00233]]"
            L_imperial = "[[0.00374, 0.0022, 0.0022], [0.0022, 0.00374, 0.0022], [0.0022, 0.0022, 0.00374]]"
            C_metric = "[[8.546e-9, 0, 0], [0, 8.546e-9, 0], [0, 0, 8.546e-9]]"
            C_imperial = "[[1.471e-8, 0, 0], [0, 1.530e-8, 0], [0, 0, 1.375e-8]]"
            R_sequence_metric = "[[0.3864, 0, 0],[0, 0.01273, 0], [0, 0, 0.01273]]"
            L_sequence_metric = "[[4.1264e-3, 0, 0],[0, 0.9337e-3, 0], [0, 0, 0.9337e-3]]"
            C_sequence_metric = "[[7.751e-9, 0, 0],[0, 12.74e-9, 0], [0, 0, 12.74e-9]]"
            R_sequence_imperial = "[[0.6218, 0, 0],[0, 0.0204, 0], [0, 0, 0.0204]]"
            L_sequence_imperial = "[[0.00664, 0, 0],[0, 0.00150, 0], [0, 0, 0.00150]]"
            C_sequence_imperial = "[[1.247e-8, 0, 0],[0, 2.0503e-8, 0], [0, 0, 2.0503e-8]]"
            import_from_geometry = "Import from Geometry"
            import_from_RLC = "Import from RLC"
        }

        "core/Triple Pole MP Circuit Breaker" {
            en_input = "1"
            en_input_logic = "active high"
            on_input = "1"
            on_input_logic = "active high"
            rtc_on_delay = "60e-3"
            rtc_off_delay = "35e-3"
            closed_delay = "60e-3"
            open_delay = "25e-3"
            initial_state = "off"
            enable_output = "True"
            output_type = "real"
        }

        "core/Triple Pole Single Throw Contactor" {
            ctrl_src = "Digital input"
            Sa = "1"
            Sa_logic = "active high"
            enable_fb_out = "False"
            fb_out_type = "real"
            execution_rate = "inherit"
            initial_state = "off"
            on_delay = "0"
            off_delay = "0"
        }

        "core/Voltage Controlled Current Source" {
            control_label = ".control_component_name"
            control_gain = ""
            measurement_enable = "True"
        }

        "core/Voltage Measurement" {
            bw_limit = "False"
            frequency = "10e3"
            comparator_enable = "False"
            operator = "greater"
            threshold = "0"
            cmp_abs_value = "False"
            feed_forward = "false"
            sig_output = "False"
            execution_rate = "100e-6"
            addr = "0"
            nd_msr_estimation = "false"
            dev_cpl_msr = "false"
            host_device = "0"
            output_to_device = "0"
            dev_cpl_index = "0"
            dev_cpl_var_nb = "0"
            visible = "True"
            override_signal_name = "False"
            signal_name = ""
        }

        "core/Voltage RMS" {
            op_mode = "PLL based"
            frequency = "50"
            sig_output = "False"
            execution_rate = "inherit"
            feed_forward = "false"
            nd_msr_estimation = "false"
        }

        "core/abc to dq" {
            power_form = "variant - Clarke\'s original"
            alignment = "-pi/2"
            disable_filter = "True"
            initial_filter_output = "0"
            wn_LPFdq = "1000"
            execution_rate = "inherit"
        }

        "core/dq to abc" {
            power_form = "variant - Clarke\'s original"
            alignment = "-pi/2"
            execution_rate = "0"
        }
    }

    CODE model_init
        # Numpy module is imported as 'np'
        # Scipy module is imported as 'sp'
        # The Schematic API is imported as 'mdl'
        # To get the model file path, use 'mdl.get_model_file_path()'
        # To print information to the console, use info()
        Ts = 400e-6  #s
        Tev = 400e-6
        Tbatt = 200e-6
        T_meter = 400e-6
        Tpv = 200e-6
        T_charging_station = 200e-6
        T_load = 200e-6
        
        ex_rate=400e-6
        Tprotection = 400e-6
        
        #Genset base values
        nominal_rpm = 1800.0
        nominal_rms_voltage_LL = 208.0
        P_gen_rating_kW = 25.0
        
        #base values
        Vb = 400     #V
        Pb = 250e3   #W
        fb = 600     #Hz
        
        #filter parameters
        Lf = 1e-6    #H
        Cf = 2000e-6 #F
        
        #machine parameters
        pms = 2      #number of pole pairs 
        Rs = 9e-3    #Ω
        Rr = 15e-3   #Ω
        Lls = 1e-5   #H
        Llr = 1e-5   #H
        Lm = 8e-3    #H
        
        #maximum torque slip lookup table
        f =  [5,   100, 110,  120,   130,  140,  150,   160,   180 , 200,   225,  250,  275,   300,   350,  400,    450,   500  , 550,   600]
        sp = [0.5, 0.5, 0.6, 0.655, 0.804, 0.76, 0.72, 0.681, 0.616, 0.56, 0.506, 0.46, 0.42, 0.387, 0.334, 0.294, 0.262, 0.236, 0.215, 0.197]
        
        # Numpy module is imported as 'np'
        # Scipy module is imported as 'sp'
        
        # RMS, phase and power calculation execuiton rate
        Rshunt_msr = 1e4
        
        
        # -------- Calculating R and L values for load ----------
        # --------- Functions definition ---------
        def calc_R(V,P,S):
            R = V**2*P/S**2
            return R
            
        def calc_L(V,Q,S):
            XL = V**2*Q/S**2
            L = XL/(2*np.pi*freq)
            return L
        
        # Constants
        freq = 60.0
        # Phase 1 load configuration
        P1 = 1800000.0/3.0
        pf1 = 0.9
        S1 = P1/pf1
        Q1 = np.sqrt(S1**2-P1**2)
        # Phase 2 load configuration
        P2 = 1800000.0/3.0
        pf2 = 0.9
        S2 = P2/pf2
        Q2 = np.sqrt(S2**2-P2**2)
        # Phase 3 load configuration
        P3 = 1800000.0/3.0
        pf3 = 0.9
        S3 = P3/pf3
        Q3 = np.sqrt(S3**2-P3**2)
        
        # Voltages measured at node 4
        V1_node4 = 1920.0
        V2_node4 = 2054.0
        V3_node4 = 1986.0
        
        # Calulating R and L values 
        R1 = calc_R(V1_node4, P1, S1)
        R2 = calc_R(V2_node4, P2, S2)
        R3 = calc_R(V3_node4, P3, S3)
        
        L1 = calc_L(V1_node4, Q1, S1)
        L2 = calc_L(V2_node4, Q2, S2)
        L3 = calc_L(V3_node4, Q3, S3)
    ENDCODE
}
