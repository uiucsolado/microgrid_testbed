// generated using template: cop_main.template---------------------------------------------
/******************************************************************************************
**
**  Module Name: cop_main.c
**  NOTE: Automatically generated file. DO NOT MODIFY!
**  Description:
**            Main file
**
******************************************************************************************/
// generated using template: arm/custom_include.template-----------------------------------

#include "math.h"
#include <stdint.h>

// x86 libraries:
#include "../include/sp_functions_dev0.h"

// H files from Advanced C Function components

// Header files from additional sources (Advanced C Function)

// ----------------------------------------------------------------------------------------                
// generated using template: VirtualHIL/custom_defines.template----------------------------

typedef unsigned char X_UnInt8;
typedef char X_Int8;
typedef signed short X_Int16;
typedef unsigned short X_UnInt16;
typedef int X_Int32;
typedef unsigned int X_UnInt32;
typedef unsigned int uint;
typedef double real;

// ----------------------------------------------------------------------------------------                
// generated using template: custom_consts.template----------------------------------------

// arithmetic constants
#define C_SQRT_2                    1.4142135623730950488016887242097f
#define C_SQRT_3                    1.7320508075688772935274463415059f
#define C_PI                        3.1415926535897932384626433832795f
#define C_E                         2.7182818284590452353602874713527f
#define C_2PI                       6.283185307179586476925286766559f

//@cmp.def.start
//component defines
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    

    

    

    

    


    
    
    


    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    

    

    

    

    
    
    
    


    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    

    

    

    

    
    
    
    


    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    

    

    

    

    
    
    
    


    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    

    

    

    

    
    
    
    


    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    

    
    #define _grid_vs_tdf_sg_ctrl_sine1__no_of_points 1000
    #define _grid_vs_tdf_sg_ctrl_sine1__max_int40 (1099511627775)
    #define _grid_vs_tdf_sg_ctrl_sine1__max_int32 (4294967295)

    
    
    
    
    

    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    


    
    
    

    
    
    
    

    
    
    
    
    

    
    
    
    


    
    
    

    
    
    
    


    
    
    
    
    
    

    
    
    
    


    
    
    

    
    
    
    


    
    
    
    
    
    

    
    
    
    


    
    
    

    
    
    
    


    
    
    
    
    
    

    
    
    
    


    
    
    

    
    
    
    


    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    


    
    
    
    
    
    

    
    
    
    
    
    

    
    
    
    
    
    

    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    

    
    
    
    
    

    
    
    
    
    

    
    
    
    
    

    
    
    
    
    

    

    
    

    

    
    

    

    
    

    

    
    

    

    
    
    

    

    
    

    

    
    

    

    
    

    

    
    

    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    

    
    

    

    
    

    

    
    

    

    
    

    

    


    


    


    


    


    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
//@cmp.def.end


//-----------------------------------------------------------------------------------------                 
// generated using template: common_variables.template-------------------------------------
// true global variables


//@cmp.var.start
// variables

    

                        double _ess_c_function3__RegD;
                                double _ess_c_function3__time;
            
    

                        double _ess_inverter_controller_c_function3__Pref;
                         double _ess_inverter_controller_constant2__out = 1.0;
                 double _ess_inverter_controller_constant3__out = 3.141592653589793;
                 double _ess_inverter_controller_constant4__out = 0.0002;
                 double _ess_inverter_controller_constant5__out = 0.0;
    double _ess_inverter_controller_gain23__out;            double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__out;
        double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__b_coeff[2] = {0.0006279239944363413, 0.0006279239944364523};
        double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__a_coeff[2] = {1.0, -0.9987441520111273};
        double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__a_sum;
        double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__b_sum;
        double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__delay_line_in;      double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit3__out;
               double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_limit_zero__out = 0.1;
                 double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_one__out = 1.0;
                 X_Int32 _ess_inverter_controller_single_phase_pll1_constant2__out = 2;
        double _ess_inverter_controller_single_phase_pll1_i__out;
    double _ess_inverter_controller_single_phase_pll1_i__pi_reg_out_int;
                double _ess_inverter_controller_single_phase_pll1_integrator1__out;
                double _ess_inverter_controller_single_phase_pll1_integrator10__out;
                double _ess_inverter_controller_single_phase_pll1_integrator2__out;
                double _ess_inverter_controller_single_phase_pll1_integrator3__out;
                double _ess_inverter_controller_single_phase_pll1_integrator4__out;
                double _ess_inverter_controller_single_phase_pll1_integrator5__out;
                double _ess_inverter_controller_single_phase_pll1_integrator6__out;
                double _ess_inverter_controller_single_phase_pll1_integrator7__out;
                double _ess_inverter_controller_single_phase_pll1_integrator8__out;
                double _ess_inverter_controller_single_phase_pll1_integrator9__out;
          double _ess_inverter_controller_single_phase_pll1_trigonometric_function1__out;
               double _ess_inverter_controller_single_phase_pll1_const__out = 376.99111843077515;
        X_Int32 _ess_inverter_controller_charge__out;
    double _ess_inverter_e_va1__out;
    double _ess_inverter_i_ia1__out;
    double _ess_inverter_io_ia1__out;
double _ess_inverter_power_meas_gain4__out;double _ess_inverter_power_meas_gain5__out;
                        double _ess_inverter_power_meas_power_meas_dqpu_s_and_pf__P;
                                double _ess_inverter_power_meas_power_meas_dqpu_s_and_pf__Q;
            

                        double _ess_inverter_power_meas_power_meas_dqpu_s_and_pf__S;
                                double _ess_inverter_power_meas_power_meas_dqpu_s_and_pf__pf;
                double _ess_inverter_vdc_va1__out;
                    double _ess_modbus_bus_split1__out;                     double _ess_modbus_bus_split1__out1;                  double _ess_modbus_c_u11__out = 1.0;
                 double _ess_modbus_c_u12__out = 1.0;
                 double _ess_modbus_c_u13__out = 50.0;
                 double _grid_constant1__out = 240.0;
                 double _grid_constant2__out = 60.0;
                 double _grid_constant3__out = 0.0;
        double _measurement_ia_ia1__out;
             double _measurement_single_phase_power_meter1_radian__out = 0.0174533;
        double _measurement_va_va1__out;

    

                        double _solarhouse1_inverter_controller_c_function3__Pref;
                         double _solarhouse1_inverter_controller_constant2__out = 1.0;
                 double _solarhouse1_inverter_controller_constant3__out = 3.141592653589793;
                 double _solarhouse1_inverter_controller_constant4__out = 0.0002;
                 double _solarhouse1_inverter_controller_constant5__out = 0.0;
    double _solarhouse1_inverter_controller_gain23__out;            double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__out;
        double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__b_coeff[2] = {0.0006279239944363413, 0.0006279239944364523};
        double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__a_coeff[2] = {1.0, -0.9987441520111273};
        double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__a_sum;
        double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__b_sum;
        double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__delay_line_in;      double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit3__out;
               double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_limit_zero__out = 0.1;
                 double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_one__out = 1.0;
                 X_Int32 _solarhouse1_inverter_controller_single_phase_pll1_constant2__out = 2;
        double _solarhouse1_inverter_controller_single_phase_pll1_i__out;
    double _solarhouse1_inverter_controller_single_phase_pll1_i__pi_reg_out_int;
                double _solarhouse1_inverter_controller_single_phase_pll1_integrator1__out;
                double _solarhouse1_inverter_controller_single_phase_pll1_integrator10__out;
                double _solarhouse1_inverter_controller_single_phase_pll1_integrator2__out;
                double _solarhouse1_inverter_controller_single_phase_pll1_integrator3__out;
                double _solarhouse1_inverter_controller_single_phase_pll1_integrator4__out;
                double _solarhouse1_inverter_controller_single_phase_pll1_integrator5__out;
                double _solarhouse1_inverter_controller_single_phase_pll1_integrator6__out;
                double _solarhouse1_inverter_controller_single_phase_pll1_integrator7__out;
                double _solarhouse1_inverter_controller_single_phase_pll1_integrator8__out;
                double _solarhouse1_inverter_controller_single_phase_pll1_integrator9__out;
          double _solarhouse1_inverter_controller_single_phase_pll1_trigonometric_function1__out;
               double _solarhouse1_inverter_controller_single_phase_pll1_const__out = 376.99111843077515;
        X_Int32 _solarhouse1_inverter_controller_charge__out;
    double _solarhouse1_inverter_e_va1__out;
    double _solarhouse1_inverter_i_ia1__out;
    double _solarhouse1_inverter_io_ia1__out;
double _solarhouse1_inverter_power_meas_gain4__out;double _solarhouse1_inverter_power_meas_gain5__out;
                        double _solarhouse1_inverter_power_meas_power_meas_dqpu_s_and_pf__P;
                                double _solarhouse1_inverter_power_meas_power_meas_dqpu_s_and_pf__Q;
            

                        double _solarhouse1_inverter_power_meas_power_meas_dqpu_s_and_pf__S;
                                double _solarhouse1_inverter_power_meas_power_meas_dqpu_s_and_pf__pf;
                double _solarhouse1_inverter_vdc_va1__out;
    double _solarhouse1_measurement_ia_ia1__out;
             double _solarhouse1_measurement_single_phase_power_meter1_radian__out = 0.0174533;
        double _solarhouse1_measurement_va_va1__out;
                    double _solarhouse1_modbus_bus_split1__out;                     double _solarhouse1_modbus_bus_split1__out1;                  double _solarhouse1_modbus_c_u11__out = 1.0;
                 double _solarhouse1_modbus_c_u12__out = 1.0;
                 double _solarhouse1_modbus_c_u13__out = 50.0;
    
    

                        double _solarhouse2_inverter_controller_c_function3__Pref;
                         double _solarhouse2_inverter_controller_constant2__out = 1.0;
                 double _solarhouse2_inverter_controller_constant3__out = 3.141592653589793;
                 double _solarhouse2_inverter_controller_constant4__out = 0.0002;
                 double _solarhouse2_inverter_controller_constant5__out = 0.0;
    double _solarhouse2_inverter_controller_gain23__out;            double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__out;
        double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__b_coeff[2] = {0.0006279239944363413, 0.0006279239944364523};
        double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__a_coeff[2] = {1.0, -0.9987441520111273};
        double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__a_sum;
        double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__b_sum;
        double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__delay_line_in;      double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit3__out;
               double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_limit_zero__out = 0.1;
                 double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_one__out = 1.0;
                 X_Int32 _solarhouse2_inverter_controller_single_phase_pll1_constant2__out = 2;
        double _solarhouse2_inverter_controller_single_phase_pll1_i__out;
    double _solarhouse2_inverter_controller_single_phase_pll1_i__pi_reg_out_int;
                double _solarhouse2_inverter_controller_single_phase_pll1_integrator1__out;
                double _solarhouse2_inverter_controller_single_phase_pll1_integrator10__out;
                double _solarhouse2_inverter_controller_single_phase_pll1_integrator2__out;
                double _solarhouse2_inverter_controller_single_phase_pll1_integrator3__out;
                double _solarhouse2_inverter_controller_single_phase_pll1_integrator4__out;
                double _solarhouse2_inverter_controller_single_phase_pll1_integrator5__out;
                double _solarhouse2_inverter_controller_single_phase_pll1_integrator6__out;
                double _solarhouse2_inverter_controller_single_phase_pll1_integrator7__out;
                double _solarhouse2_inverter_controller_single_phase_pll1_integrator8__out;
                double _solarhouse2_inverter_controller_single_phase_pll1_integrator9__out;
          double _solarhouse2_inverter_controller_single_phase_pll1_trigonometric_function1__out;
               double _solarhouse2_inverter_controller_single_phase_pll1_const__out = 376.99111843077515;
        X_Int32 _solarhouse2_inverter_controller_charge__out;
    double _solarhouse2_inverter_e_va1__out;
    double _solarhouse2_inverter_i_ia1__out;
    double _solarhouse2_inverter_io_ia1__out;
double _solarhouse2_inverter_power_meas_gain4__out;double _solarhouse2_inverter_power_meas_gain5__out;
                        double _solarhouse2_inverter_power_meas_power_meas_dqpu_s_and_pf__P;
                                double _solarhouse2_inverter_power_meas_power_meas_dqpu_s_and_pf__Q;
            

                        double _solarhouse2_inverter_power_meas_power_meas_dqpu_s_and_pf__S;
                                double _solarhouse2_inverter_power_meas_power_meas_dqpu_s_and_pf__pf;
                double _solarhouse2_inverter_vdc_va1__out;
    double _solarhouse2_measurement_ia_ia1__out;
             double _solarhouse2_measurement_single_phase_power_meter1_radian__out = 0.0174533;
        double _solarhouse2_measurement_va_va1__out;
                    double _solarhouse2_modbus_bus_split1__out;                     double _solarhouse2_modbus_bus_split1__out1;                  double _solarhouse2_modbus_c_u11__out = 1.0;
                 double _solarhouse2_modbus_c_u12__out = 1.0;
                 double _solarhouse2_modbus_c_u13__out = 50.0;
    
    

                        double _solarhouse3_inverter_controller_c_function3__Pref;
                         double _solarhouse3_inverter_controller_constant2__out = 1.0;
                 double _solarhouse3_inverter_controller_constant3__out = 3.141592653589793;
                 double _solarhouse3_inverter_controller_constant4__out = 0.0002;
                 double _solarhouse3_inverter_controller_constant5__out = 0.0;
    double _solarhouse3_inverter_controller_gain23__out;            double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__out;
        double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__b_coeff[2] = {0.0006279239944363413, 0.0006279239944364523};
        double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__a_coeff[2] = {1.0, -0.9987441520111273};
        double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__a_sum;
        double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__b_sum;
        double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__delay_line_in;      double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit3__out;
               double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_limit_zero__out = 0.1;
                 double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_one__out = 1.0;
                 X_Int32 _solarhouse3_inverter_controller_single_phase_pll1_constant2__out = 2;
        double _solarhouse3_inverter_controller_single_phase_pll1_i__out;
    double _solarhouse3_inverter_controller_single_phase_pll1_i__pi_reg_out_int;
                double _solarhouse3_inverter_controller_single_phase_pll1_integrator1__out;
                double _solarhouse3_inverter_controller_single_phase_pll1_integrator10__out;
                double _solarhouse3_inverter_controller_single_phase_pll1_integrator2__out;
                double _solarhouse3_inverter_controller_single_phase_pll1_integrator3__out;
                double _solarhouse3_inverter_controller_single_phase_pll1_integrator4__out;
                double _solarhouse3_inverter_controller_single_phase_pll1_integrator5__out;
                double _solarhouse3_inverter_controller_single_phase_pll1_integrator6__out;
                double _solarhouse3_inverter_controller_single_phase_pll1_integrator7__out;
                double _solarhouse3_inverter_controller_single_phase_pll1_integrator8__out;
                double _solarhouse3_inverter_controller_single_phase_pll1_integrator9__out;
          double _solarhouse3_inverter_controller_single_phase_pll1_trigonometric_function1__out;
               double _solarhouse3_inverter_controller_single_phase_pll1_const__out = 376.99111843077515;
        X_Int32 _solarhouse3_inverter_controller_charge__out;
    double _solarhouse3_inverter_e_va1__out;
    double _solarhouse3_inverter_i_ia1__out;
    double _solarhouse3_inverter_io_ia1__out;
double _solarhouse3_inverter_power_meas_gain4__out;double _solarhouse3_inverter_power_meas_gain5__out;
                        double _solarhouse3_inverter_power_meas_power_meas_dqpu_s_and_pf__P;
                                double _solarhouse3_inverter_power_meas_power_meas_dqpu_s_and_pf__Q;
            

                        double _solarhouse3_inverter_power_meas_power_meas_dqpu_s_and_pf__S;
                                double _solarhouse3_inverter_power_meas_power_meas_dqpu_s_and_pf__pf;
                double _solarhouse3_inverter_vdc_va1__out;
    double _solarhouse3_measurement_ia_ia1__out;
             double _solarhouse3_measurement_single_phase_power_meter1_radian__out = 0.0174533;
        double _solarhouse3_measurement_va_va1__out;
                    double _solarhouse3_modbus_bus_split1__out;                     double _solarhouse3_modbus_bus_split1__out1;                  double _solarhouse3_modbus_c_u11__out = 1.0;
                 double _solarhouse3_modbus_c_u12__out = 1.0;
                 double _solarhouse3_modbus_c_u13__out = 50.0;
    
    

                        double _solarhouse4_inverter_controller_c_function3__Pref;
                         double _solarhouse4_inverter_controller_constant2__out = 1.0;
                 double _solarhouse4_inverter_controller_constant3__out = 3.141592653589793;
                 double _solarhouse4_inverter_controller_constant4__out = 0.0002;
                 double _solarhouse4_inverter_controller_constant5__out = 0.0;
    double _solarhouse4_inverter_controller_gain23__out;            double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__out;
        double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__b_coeff[2] = {0.0006279239944363413, 0.0006279239944364523};
        double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__a_coeff[2] = {1.0, -0.9987441520111273};
        double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__a_sum;
        double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__b_sum;
        double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__delay_line_in;      double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit3__out;
               double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_limit_zero__out = 0.1;
                 double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_one__out = 1.0;
                 X_Int32 _solarhouse4_inverter_controller_single_phase_pll1_constant2__out = 2;
        double _solarhouse4_inverter_controller_single_phase_pll1_i__out;
    double _solarhouse4_inverter_controller_single_phase_pll1_i__pi_reg_out_int;
                double _solarhouse4_inverter_controller_single_phase_pll1_integrator1__out;
                double _solarhouse4_inverter_controller_single_phase_pll1_integrator10__out;
                double _solarhouse4_inverter_controller_single_phase_pll1_integrator2__out;
                double _solarhouse4_inverter_controller_single_phase_pll1_integrator3__out;
                double _solarhouse4_inverter_controller_single_phase_pll1_integrator4__out;
                double _solarhouse4_inverter_controller_single_phase_pll1_integrator5__out;
                double _solarhouse4_inverter_controller_single_phase_pll1_integrator6__out;
                double _solarhouse4_inverter_controller_single_phase_pll1_integrator7__out;
                double _solarhouse4_inverter_controller_single_phase_pll1_integrator8__out;
                double _solarhouse4_inverter_controller_single_phase_pll1_integrator9__out;
          double _solarhouse4_inverter_controller_single_phase_pll1_trigonometric_function1__out;
               double _solarhouse4_inverter_controller_single_phase_pll1_const__out = 376.99111843077515;
        X_Int32 _solarhouse4_inverter_controller_charge__out;
    double _solarhouse4_inverter_e_va1__out;
    double _solarhouse4_inverter_i_ia1__out;
    double _solarhouse4_inverter_io_ia1__out;
double _solarhouse4_inverter_power_meas_gain4__out;double _solarhouse4_inverter_power_meas_gain5__out;
                        double _solarhouse4_inverter_power_meas_power_meas_dqpu_s_and_pf__P;
                                double _solarhouse4_inverter_power_meas_power_meas_dqpu_s_and_pf__Q;
            

                        double _solarhouse4_inverter_power_meas_power_meas_dqpu_s_and_pf__S;
                                double _solarhouse4_inverter_power_meas_power_meas_dqpu_s_and_pf__pf;
                double _solarhouse4_inverter_vdc_va1__out;
    double _solarhouse4_measurement_ia_ia1__out;
             double _solarhouse4_measurement_single_phase_power_meter1_radian__out = 0.0174533;
        double _solarhouse4_measurement_va_va1__out;
                    double _solarhouse4_modbus_bus_split1__out;                     double _solarhouse4_modbus_bus_split1__out1;                  double _solarhouse4_modbus_c_u11__out = 1.0;
                 double _solarhouse4_modbus_c_u12__out = 1.0;
                 double _solarhouse4_modbus_c_u13__out = 50.0;
      double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain5__out;
                        X_Int32 _ess_inverter_controller_c_function1__charge;
                                double _ess_inverter_controller_c_function1__ref;
            

                        double _ess_inverter_controller_c_function1__out;
            double _ess_inverter_controller_gain25__out;
                        double _ess_inverter_controller_single_phase_pll1_c_function1__theta_dq;
                                double _ess_inverter_controller_single_phase_pll1_c_function1__va;
                                double _ess_inverter_controller_single_phase_pll1_c_function1__vb;
            

                        double _ess_inverter_controller_single_phase_pll1_c_function1__vd;
                                double _ess_inverter_controller_single_phase_pll1_c_function1__vq;
                  double _ess_inverter_controller_single_phase_pll1_sum4__out;
  double _ess_inverter_controller_single_phase_pll1_product2__out;
double _ess_inverter_controller_single_phase_pll1_w_to_f__out;      double _ess_inverter_controller_single_phase_pll1_sum9__out;
        double _ess_inverter_controller_single_phase_pll1_sum11__out;
        double _ess_inverter_controller_single_phase_pll1_sum13__out;
        double _ess_inverter_controller_single_phase_pll1_sum14__out;
              double _ess_inverter_controller_hilbert_transform__out;
        double _ess_inverter_controller_hilbert_transform__b_coeff[2] = {-0.9273409576767984, 1.0};
        double _ess_inverter_controller_hilbert_transform__a_coeff[2] = {1.0, -0.9273409576767981};
        double _ess_inverter_controller_hilbert_transform__a_sum;
        double _ess_inverter_controller_hilbert_transform__b_sum;
        double _ess_inverter_controller_hilbert_transform__delay_line_in;      double _ess_inverter_controller_single_phase_pll1_sum1__out;
                double _ess_inverter_controller_hilbert_transform1__out;
        double _ess_inverter_controller_hilbert_transform1__b_coeff[2] = {-0.9273409576767984, 1.0};
        double _ess_inverter_controller_hilbert_transform1__a_coeff[2] = {1.0, -0.9273409576767981};
        double _ess_inverter_controller_hilbert_transform1__a_sum;
        double _ess_inverter_controller_hilbert_transform1__b_sum;
        double _ess_inverter_controller_hilbert_transform1__delay_line_in;    double _ess_inverter_power_meas_gain6__out;              double _ess_inverter_lpf_dc__out;
        double _ess_inverter_lpf_dc__b_coeff[2] = {0.0006279239944363413, 0.0006279239944364523};
        double _ess_inverter_lpf_dc__a_coeff[2] = {1.0, -0.9987441520111273};
        double _ess_inverter_lpf_dc__a_sum;
        double _ess_inverter_lpf_dc__b_sum;
        double _ess_inverter_lpf_dc__delay_line_in;                            double _ess_modbus_modbus_device__config__comp_coil_in_out__out;
                                        double _ess_modbus_modbus_device__config__comp_holding_in_out__out[2];
                	    	double _ess_modbus_bus_join1__out[3];
	      double _grid_vs_limit1__out;
        double _grid_vs_limit2__out;
              double _measurement_single_phase_power_meter1_ia_rms__out;
                    double _measurement_single_phase_power_meter1_va_rms__out;
        
    double _measurement_single_phase_power_meter1_phi__correction_ref;
    X_UnInt32 _measurement_single_phase_power_meter1_phi__zc_flag_ref;
    double _measurement_single_phase_power_meter1_phi__filtered_ref;

            double _measurement_single_phase_power_meter1_phi__phase_diff;
        double _measurement_single_phase_power_meter1_phi__correction_in;
        X_UnInt32 _measurement_single_phase_power_meter1_phi__zc_flag_in;
        X_UnInt32 _measurement_single_phase_power_meter1_phi__no_zc_flag_in;
        double _measurement_single_phase_power_meter1_phi__filtered_in;
  double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain5__out;
                        X_Int32 _solarhouse1_inverter_controller_c_function1__charge;
                                double _solarhouse1_inverter_controller_c_function1__ref;
            

                        double _solarhouse1_inverter_controller_c_function1__out;
            double _solarhouse1_inverter_controller_gain25__out;
                        double _solarhouse1_inverter_controller_single_phase_pll1_c_function1__theta_dq;
                                double _solarhouse1_inverter_controller_single_phase_pll1_c_function1__va;
                                double _solarhouse1_inverter_controller_single_phase_pll1_c_function1__vb;
            

                        double _solarhouse1_inverter_controller_single_phase_pll1_c_function1__vd;
                                double _solarhouse1_inverter_controller_single_phase_pll1_c_function1__vq;
                  double _solarhouse1_inverter_controller_single_phase_pll1_sum4__out;
  double _solarhouse1_inverter_controller_single_phase_pll1_product2__out;
double _solarhouse1_inverter_controller_single_phase_pll1_w_to_f__out;      double _solarhouse1_inverter_controller_single_phase_pll1_sum9__out;
        double _solarhouse1_inverter_controller_single_phase_pll1_sum11__out;
        double _solarhouse1_inverter_controller_single_phase_pll1_sum13__out;
        double _solarhouse1_inverter_controller_single_phase_pll1_sum14__out;
              double _solarhouse1_inverter_controller_hilbert_transform__out;
        double _solarhouse1_inverter_controller_hilbert_transform__b_coeff[2] = {-0.9273409576767984, 1.0};
        double _solarhouse1_inverter_controller_hilbert_transform__a_coeff[2] = {1.0, -0.9273409576767981};
        double _solarhouse1_inverter_controller_hilbert_transform__a_sum;
        double _solarhouse1_inverter_controller_hilbert_transform__b_sum;
        double _solarhouse1_inverter_controller_hilbert_transform__delay_line_in;      double _solarhouse1_inverter_controller_single_phase_pll1_sum1__out;
                double _solarhouse1_inverter_controller_hilbert_transform1__out;
        double _solarhouse1_inverter_controller_hilbert_transform1__b_coeff[2] = {-0.9273409576767984, 1.0};
        double _solarhouse1_inverter_controller_hilbert_transform1__a_coeff[2] = {1.0, -0.9273409576767981};
        double _solarhouse1_inverter_controller_hilbert_transform1__a_sum;
        double _solarhouse1_inverter_controller_hilbert_transform1__b_sum;
        double _solarhouse1_inverter_controller_hilbert_transform1__delay_line_in;    double _solarhouse1_inverter_power_meas_gain6__out;              double _solarhouse1_inverter_lpf_dc__out;
        double _solarhouse1_inverter_lpf_dc__b_coeff[2] = {0.0006279239944363413, 0.0006279239944364523};
        double _solarhouse1_inverter_lpf_dc__a_coeff[2] = {1.0, -0.9987441520111273};
        double _solarhouse1_inverter_lpf_dc__a_sum;
        double _solarhouse1_inverter_lpf_dc__b_sum;
        double _solarhouse1_inverter_lpf_dc__delay_line_in;            double _solarhouse1_measurement_single_phase_power_meter1_ia_rms__out;
                    double _solarhouse1_measurement_single_phase_power_meter1_va_rms__out;
        
    double _solarhouse1_measurement_single_phase_power_meter1_phi__correction_ref;
    X_UnInt32 _solarhouse1_measurement_single_phase_power_meter1_phi__zc_flag_ref;
    double _solarhouse1_measurement_single_phase_power_meter1_phi__filtered_ref;

            double _solarhouse1_measurement_single_phase_power_meter1_phi__phase_diff;
        double _solarhouse1_measurement_single_phase_power_meter1_phi__correction_in;
        X_UnInt32 _solarhouse1_measurement_single_phase_power_meter1_phi__zc_flag_in;
        X_UnInt32 _solarhouse1_measurement_single_phase_power_meter1_phi__no_zc_flag_in;
        double _solarhouse1_measurement_single_phase_power_meter1_phi__filtered_in;
                            double _solarhouse1_modbus_modbus_device1__config1__comp_coil_in_out__out;
                                        double _solarhouse1_modbus_modbus_device1__config1__comp_holding_in_out__out[2];
            	    	double _solarhouse1_modbus_bus_join1__out[2];
	  double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain5__out;
                        X_Int32 _solarhouse2_inverter_controller_c_function1__charge;
                                double _solarhouse2_inverter_controller_c_function1__ref;
            

                        double _solarhouse2_inverter_controller_c_function1__out;
            double _solarhouse2_inverter_controller_gain25__out;
                        double _solarhouse2_inverter_controller_single_phase_pll1_c_function1__theta_dq;
                                double _solarhouse2_inverter_controller_single_phase_pll1_c_function1__va;
                                double _solarhouse2_inverter_controller_single_phase_pll1_c_function1__vb;
            

                        double _solarhouse2_inverter_controller_single_phase_pll1_c_function1__vd;
                                double _solarhouse2_inverter_controller_single_phase_pll1_c_function1__vq;
                  double _solarhouse2_inverter_controller_single_phase_pll1_sum4__out;
  double _solarhouse2_inverter_controller_single_phase_pll1_product2__out;
double _solarhouse2_inverter_controller_single_phase_pll1_w_to_f__out;      double _solarhouse2_inverter_controller_single_phase_pll1_sum9__out;
        double _solarhouse2_inverter_controller_single_phase_pll1_sum11__out;
        double _solarhouse2_inverter_controller_single_phase_pll1_sum13__out;
        double _solarhouse2_inverter_controller_single_phase_pll1_sum14__out;
              double _solarhouse2_inverter_controller_hilbert_transform__out;
        double _solarhouse2_inverter_controller_hilbert_transform__b_coeff[2] = {-0.9273409576767984, 1.0};
        double _solarhouse2_inverter_controller_hilbert_transform__a_coeff[2] = {1.0, -0.9273409576767981};
        double _solarhouse2_inverter_controller_hilbert_transform__a_sum;
        double _solarhouse2_inverter_controller_hilbert_transform__b_sum;
        double _solarhouse2_inverter_controller_hilbert_transform__delay_line_in;      double _solarhouse2_inverter_controller_single_phase_pll1_sum1__out;
                double _solarhouse2_inverter_controller_hilbert_transform1__out;
        double _solarhouse2_inverter_controller_hilbert_transform1__b_coeff[2] = {-0.9273409576767984, 1.0};
        double _solarhouse2_inverter_controller_hilbert_transform1__a_coeff[2] = {1.0, -0.9273409576767981};
        double _solarhouse2_inverter_controller_hilbert_transform1__a_sum;
        double _solarhouse2_inverter_controller_hilbert_transform1__b_sum;
        double _solarhouse2_inverter_controller_hilbert_transform1__delay_line_in;    double _solarhouse2_inverter_power_meas_gain6__out;              double _solarhouse2_inverter_lpf_dc__out;
        double _solarhouse2_inverter_lpf_dc__b_coeff[2] = {0.0006279239944363413, 0.0006279239944364523};
        double _solarhouse2_inverter_lpf_dc__a_coeff[2] = {1.0, -0.9987441520111273};
        double _solarhouse2_inverter_lpf_dc__a_sum;
        double _solarhouse2_inverter_lpf_dc__b_sum;
        double _solarhouse2_inverter_lpf_dc__delay_line_in;            double _solarhouse2_measurement_single_phase_power_meter1_ia_rms__out;
                    double _solarhouse2_measurement_single_phase_power_meter1_va_rms__out;
        
    double _solarhouse2_measurement_single_phase_power_meter1_phi__correction_ref;
    X_UnInt32 _solarhouse2_measurement_single_phase_power_meter1_phi__zc_flag_ref;
    double _solarhouse2_measurement_single_phase_power_meter1_phi__filtered_ref;

            double _solarhouse2_measurement_single_phase_power_meter1_phi__phase_diff;
        double _solarhouse2_measurement_single_phase_power_meter1_phi__correction_in;
        X_UnInt32 _solarhouse2_measurement_single_phase_power_meter1_phi__zc_flag_in;
        X_UnInt32 _solarhouse2_measurement_single_phase_power_meter1_phi__no_zc_flag_in;
        double _solarhouse2_measurement_single_phase_power_meter1_phi__filtered_in;
                            double _solarhouse2_modbus_modbus_device2__config2__comp_coil_in_out__out;
                                        double _solarhouse2_modbus_modbus_device2__config2__comp_holding_in_out__out[2];
            	    	double _solarhouse2_modbus_bus_join1__out[2];
	  double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain5__out;
                        X_Int32 _solarhouse3_inverter_controller_c_function1__charge;
                                double _solarhouse3_inverter_controller_c_function1__ref;
            

                        double _solarhouse3_inverter_controller_c_function1__out;
            double _solarhouse3_inverter_controller_gain25__out;
                        double _solarhouse3_inverter_controller_single_phase_pll1_c_function1__theta_dq;
                                double _solarhouse3_inverter_controller_single_phase_pll1_c_function1__va;
                                double _solarhouse3_inverter_controller_single_phase_pll1_c_function1__vb;
            

                        double _solarhouse3_inverter_controller_single_phase_pll1_c_function1__vd;
                                double _solarhouse3_inverter_controller_single_phase_pll1_c_function1__vq;
                  double _solarhouse3_inverter_controller_single_phase_pll1_sum4__out;
  double _solarhouse3_inverter_controller_single_phase_pll1_product2__out;
double _solarhouse3_inverter_controller_single_phase_pll1_w_to_f__out;      double _solarhouse3_inverter_controller_single_phase_pll1_sum9__out;
        double _solarhouse3_inverter_controller_single_phase_pll1_sum11__out;
        double _solarhouse3_inverter_controller_single_phase_pll1_sum13__out;
        double _solarhouse3_inverter_controller_single_phase_pll1_sum14__out;
              double _solarhouse3_inverter_controller_hilbert_transform__out;
        double _solarhouse3_inverter_controller_hilbert_transform__b_coeff[2] = {-0.9273409576767984, 1.0};
        double _solarhouse3_inverter_controller_hilbert_transform__a_coeff[2] = {1.0, -0.9273409576767981};
        double _solarhouse3_inverter_controller_hilbert_transform__a_sum;
        double _solarhouse3_inverter_controller_hilbert_transform__b_sum;
        double _solarhouse3_inverter_controller_hilbert_transform__delay_line_in;      double _solarhouse3_inverter_controller_single_phase_pll1_sum1__out;
                double _solarhouse3_inverter_controller_hilbert_transform1__out;
        double _solarhouse3_inverter_controller_hilbert_transform1__b_coeff[2] = {-0.9273409576767984, 1.0};
        double _solarhouse3_inverter_controller_hilbert_transform1__a_coeff[2] = {1.0, -0.9273409576767981};
        double _solarhouse3_inverter_controller_hilbert_transform1__a_sum;
        double _solarhouse3_inverter_controller_hilbert_transform1__b_sum;
        double _solarhouse3_inverter_controller_hilbert_transform1__delay_line_in;    double _solarhouse3_inverter_power_meas_gain6__out;              double _solarhouse3_inverter_lpf_dc__out;
        double _solarhouse3_inverter_lpf_dc__b_coeff[2] = {0.0006279239944363413, 0.0006279239944364523};
        double _solarhouse3_inverter_lpf_dc__a_coeff[2] = {1.0, -0.9987441520111273};
        double _solarhouse3_inverter_lpf_dc__a_sum;
        double _solarhouse3_inverter_lpf_dc__b_sum;
        double _solarhouse3_inverter_lpf_dc__delay_line_in;            double _solarhouse3_measurement_single_phase_power_meter1_ia_rms__out;
                    double _solarhouse3_measurement_single_phase_power_meter1_va_rms__out;
        
    double _solarhouse3_measurement_single_phase_power_meter1_phi__correction_ref;
    X_UnInt32 _solarhouse3_measurement_single_phase_power_meter1_phi__zc_flag_ref;
    double _solarhouse3_measurement_single_phase_power_meter1_phi__filtered_ref;

            double _solarhouse3_measurement_single_phase_power_meter1_phi__phase_diff;
        double _solarhouse3_measurement_single_phase_power_meter1_phi__correction_in;
        X_UnInt32 _solarhouse3_measurement_single_phase_power_meter1_phi__zc_flag_in;
        X_UnInt32 _solarhouse3_measurement_single_phase_power_meter1_phi__no_zc_flag_in;
        double _solarhouse3_measurement_single_phase_power_meter1_phi__filtered_in;
                            double _solarhouse3_modbus_modbus_device3__config3__comp_coil_in_out__out;
                                        double _solarhouse3_modbus_modbus_device3__config3__comp_holding_in_out__out[2];
            	    	double _solarhouse3_modbus_bus_join1__out[2];
	  double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain5__out;
                        X_Int32 _solarhouse4_inverter_controller_c_function1__charge;
                                double _solarhouse4_inverter_controller_c_function1__ref;
            

                        double _solarhouse4_inverter_controller_c_function1__out;
            double _solarhouse4_inverter_controller_gain25__out;
                        double _solarhouse4_inverter_controller_single_phase_pll1_c_function1__theta_dq;
                                double _solarhouse4_inverter_controller_single_phase_pll1_c_function1__va;
                                double _solarhouse4_inverter_controller_single_phase_pll1_c_function1__vb;
            

                        double _solarhouse4_inverter_controller_single_phase_pll1_c_function1__vd;
                                double _solarhouse4_inverter_controller_single_phase_pll1_c_function1__vq;
                  double _solarhouse4_inverter_controller_single_phase_pll1_sum4__out;
  double _solarhouse4_inverter_controller_single_phase_pll1_product2__out;
double _solarhouse4_inverter_controller_single_phase_pll1_w_to_f__out;      double _solarhouse4_inverter_controller_single_phase_pll1_sum9__out;
        double _solarhouse4_inverter_controller_single_phase_pll1_sum11__out;
        double _solarhouse4_inverter_controller_single_phase_pll1_sum13__out;
        double _solarhouse4_inverter_controller_single_phase_pll1_sum14__out;
              double _solarhouse4_inverter_controller_hilbert_transform__out;
        double _solarhouse4_inverter_controller_hilbert_transform__b_coeff[2] = {-0.9273409576767984, 1.0};
        double _solarhouse4_inverter_controller_hilbert_transform__a_coeff[2] = {1.0, -0.9273409576767981};
        double _solarhouse4_inverter_controller_hilbert_transform__a_sum;
        double _solarhouse4_inverter_controller_hilbert_transform__b_sum;
        double _solarhouse4_inverter_controller_hilbert_transform__delay_line_in;      double _solarhouse4_inverter_controller_single_phase_pll1_sum1__out;
                double _solarhouse4_inverter_controller_hilbert_transform1__out;
        double _solarhouse4_inverter_controller_hilbert_transform1__b_coeff[2] = {-0.9273409576767984, 1.0};
        double _solarhouse4_inverter_controller_hilbert_transform1__a_coeff[2] = {1.0, -0.9273409576767981};
        double _solarhouse4_inverter_controller_hilbert_transform1__a_sum;
        double _solarhouse4_inverter_controller_hilbert_transform1__b_sum;
        double _solarhouse4_inverter_controller_hilbert_transform1__delay_line_in;    double _solarhouse4_inverter_power_meas_gain6__out;              double _solarhouse4_inverter_lpf_dc__out;
        double _solarhouse4_inverter_lpf_dc__b_coeff[2] = {0.0006279239944363413, 0.0006279239944364523};
        double _solarhouse4_inverter_lpf_dc__a_coeff[2] = {1.0, -0.9987441520111273};
        double _solarhouse4_inverter_lpf_dc__a_sum;
        double _solarhouse4_inverter_lpf_dc__b_sum;
        double _solarhouse4_inverter_lpf_dc__delay_line_in;            double _solarhouse4_measurement_single_phase_power_meter1_ia_rms__out;
                    double _solarhouse4_measurement_single_phase_power_meter1_va_rms__out;
        
    double _solarhouse4_measurement_single_phase_power_meter1_phi__correction_ref;
    X_UnInt32 _solarhouse4_measurement_single_phase_power_meter1_phi__zc_flag_ref;
    double _solarhouse4_measurement_single_phase_power_meter1_phi__filtered_ref;

            double _solarhouse4_measurement_single_phase_power_meter1_phi__phase_diff;
        double _solarhouse4_measurement_single_phase_power_meter1_phi__correction_in;
        X_UnInt32 _solarhouse4_measurement_single_phase_power_meter1_phi__zc_flag_in;
        X_UnInt32 _solarhouse4_measurement_single_phase_power_meter1_phi__no_zc_flag_in;
        double _solarhouse4_measurement_single_phase_power_meter1_phi__filtered_in;
                            double _solarhouse4_modbus_modbus_device4__config4__comp_coil_in_out__out;
                                        double _solarhouse4_modbus_modbus_device4__config4__comp_holding_in_out__out[2];
            	    	double _solarhouse4_modbus_bus_join1__out[2];
	double _ess_inverter_controller_gain22__out;double _ess_inverter_controller_gain33__out;
                        double _ess_inverter_controller_c_function4__Ts;
                                double _ess_inverter_controller_c_function4__in;
                                double _ess_inverter_controller_c_function4__pi;
            

                        double _ess_inverter_controller_c_function4__out;
              double _ess_inverter_controller_single_phase_pll1_gain3__out;      double _ess_inverter_controller_single_phase_pll1_math_f1__out;
        double _ess_inverter_controller_single_phase_pll1_math_f2__out;
  double _ess_inverter_controller_single_phase_pll1_gain5__out;      double _ess_inverter_controller_single_phase_pll1_sum12__out;
  double _ess_inverter_controller_single_phase_pll1_gain7__out;double _ess_inverter_controller_single_phase_pll1_gain8__out;double _ess_inverter_controller_single_phase_pll1_gain10__out;double _ess_inverter_controller_single_phase_pll1_gain11__out;double _ess_inverter_controller_single_phase_pll1_gain2__out;          X_UnInt32 _grid_vs_tdf_sg_ctrl_sine1__channels[1] = {0};
    double _grid_vs_tdf_sg_ctrl_sine1__gain;
    double _grid_vs_tdf_sg_ctrl_sine1__period;
    double _grid_vs_tdf_sg_ctrl_sine1__shift;
    double _grid_vs_tdf_sg_ctrl_sine1__phase_pu;
    double _grid_vs_tdf_sg_ctrl_sine1__offset;
    X_UnInt32 _grid_vs_tdf_sg_ctrl_sine1__offset_uint;
    X_UnInt32 _grid_vs_tdf_sg_ctrl_sine1__sample_cnt_inc_lo;
    X_UnInt32 _grid_vs_tdf_sg_ctrl_sine1__sample_cnt_inc_hi;
    double _grid_vs_tdf_sg_ctrl_sine1__sample_cnt_inc_real;
    X_UnInt32 _grid_vs_tdf_sg_ctrl_sine1__sg_update_value;
    double _grid_vs_tdf_sg_ctrl_sine1__xn;
    double _grid_vs_tdf_sg_ctrl_sine1__xn_1;
    double _grid_vs_tdf_sg_ctrl_sine1__yn;
    double _grid_vs_tdf_sg_ctrl_sine1__yn_1;
    double _grid_vs_tdf_sg_ctrl_sine1__k;
double _measurement_single_phase_power_meter1_calc_s__out;
double _measurement_single_phase_power_meter1_degree_to_radians__out;
double _solarhouse1_inverter_controller_gain22__out;double _solarhouse1_inverter_controller_gain33__out;
                        double _solarhouse1_inverter_controller_c_function4__Ts;
                                double _solarhouse1_inverter_controller_c_function4__in;
                                double _solarhouse1_inverter_controller_c_function4__pi;
            

                        double _solarhouse1_inverter_controller_c_function4__out;
              double _solarhouse1_inverter_controller_single_phase_pll1_gain3__out;      double _solarhouse1_inverter_controller_single_phase_pll1_math_f1__out;
        double _solarhouse1_inverter_controller_single_phase_pll1_math_f2__out;
  double _solarhouse1_inverter_controller_single_phase_pll1_gain5__out;      double _solarhouse1_inverter_controller_single_phase_pll1_sum12__out;
  double _solarhouse1_inverter_controller_single_phase_pll1_gain7__out;double _solarhouse1_inverter_controller_single_phase_pll1_gain8__out;double _solarhouse1_inverter_controller_single_phase_pll1_gain10__out;double _solarhouse1_inverter_controller_single_phase_pll1_gain11__out;double _solarhouse1_inverter_controller_single_phase_pll1_gain2__out;  double _solarhouse1_measurement_single_phase_power_meter1_calc_s__out;
double _solarhouse1_measurement_single_phase_power_meter1_degree_to_radians__out;
    double _solarhouse2_inverter_controller_gain22__out;double _solarhouse2_inverter_controller_gain33__out;
                        double _solarhouse2_inverter_controller_c_function4__Ts;
                                double _solarhouse2_inverter_controller_c_function4__in;
                                double _solarhouse2_inverter_controller_c_function4__pi;
            

                        double _solarhouse2_inverter_controller_c_function4__out;
              double _solarhouse2_inverter_controller_single_phase_pll1_gain3__out;      double _solarhouse2_inverter_controller_single_phase_pll1_math_f1__out;
        double _solarhouse2_inverter_controller_single_phase_pll1_math_f2__out;
  double _solarhouse2_inverter_controller_single_phase_pll1_gain5__out;      double _solarhouse2_inverter_controller_single_phase_pll1_sum12__out;
  double _solarhouse2_inverter_controller_single_phase_pll1_gain7__out;double _solarhouse2_inverter_controller_single_phase_pll1_gain8__out;double _solarhouse2_inverter_controller_single_phase_pll1_gain10__out;double _solarhouse2_inverter_controller_single_phase_pll1_gain11__out;double _solarhouse2_inverter_controller_single_phase_pll1_gain2__out;  double _solarhouse2_measurement_single_phase_power_meter1_calc_s__out;
double _solarhouse2_measurement_single_phase_power_meter1_degree_to_radians__out;
    double _solarhouse3_inverter_controller_gain22__out;double _solarhouse3_inverter_controller_gain33__out;
                        double _solarhouse3_inverter_controller_c_function4__Ts;
                                double _solarhouse3_inverter_controller_c_function4__in;
                                double _solarhouse3_inverter_controller_c_function4__pi;
            

                        double _solarhouse3_inverter_controller_c_function4__out;
              double _solarhouse3_inverter_controller_single_phase_pll1_gain3__out;      double _solarhouse3_inverter_controller_single_phase_pll1_math_f1__out;
        double _solarhouse3_inverter_controller_single_phase_pll1_math_f2__out;
  double _solarhouse3_inverter_controller_single_phase_pll1_gain5__out;      double _solarhouse3_inverter_controller_single_phase_pll1_sum12__out;
  double _solarhouse3_inverter_controller_single_phase_pll1_gain7__out;double _solarhouse3_inverter_controller_single_phase_pll1_gain8__out;double _solarhouse3_inverter_controller_single_phase_pll1_gain10__out;double _solarhouse3_inverter_controller_single_phase_pll1_gain11__out;double _solarhouse3_inverter_controller_single_phase_pll1_gain2__out;  double _solarhouse3_measurement_single_phase_power_meter1_calc_s__out;
double _solarhouse3_measurement_single_phase_power_meter1_degree_to_radians__out;
    double _solarhouse4_inverter_controller_gain22__out;double _solarhouse4_inverter_controller_gain33__out;
                        double _solarhouse4_inverter_controller_c_function4__Ts;
                                double _solarhouse4_inverter_controller_c_function4__in;
                                double _solarhouse4_inverter_controller_c_function4__pi;
            

                        double _solarhouse4_inverter_controller_c_function4__out;
              double _solarhouse4_inverter_controller_single_phase_pll1_gain3__out;      double _solarhouse4_inverter_controller_single_phase_pll1_math_f1__out;
        double _solarhouse4_inverter_controller_single_phase_pll1_math_f2__out;
  double _solarhouse4_inverter_controller_single_phase_pll1_gain5__out;      double _solarhouse4_inverter_controller_single_phase_pll1_sum12__out;
  double _solarhouse4_inverter_controller_single_phase_pll1_gain7__out;double _solarhouse4_inverter_controller_single_phase_pll1_gain8__out;double _solarhouse4_inverter_controller_single_phase_pll1_gain10__out;double _solarhouse4_inverter_controller_single_phase_pll1_gain11__out;double _solarhouse4_inverter_controller_single_phase_pll1_gain2__out;  double _solarhouse4_measurement_single_phase_power_meter1_calc_s__out;
double _solarhouse4_measurement_single_phase_power_meter1_degree_to_radians__out;
        double _ess_inverter_controller_alpha_beta_to_dq1__d;
    double _ess_inverter_controller_alpha_beta_to_dq1__q;
    double _ess_inverter_controller_alpha_beta_to_dq1__k1;
    double _ess_inverter_controller_alpha_beta_to_dq1__k2;
    double _ess_inverter_controller_alpha_beta_to_dq2__d;
    double _ess_inverter_controller_alpha_beta_to_dq2__q;
    double _ess_inverter_controller_alpha_beta_to_dq2__k1;
    double _ess_inverter_controller_alpha_beta_to_dq2__k2;
      double _ess_inverter_controller_single_phase_pll1_sum7__out;
        double _ess_inverter_controller_single_phase_pll1_sum6__out;
  double _ess_inverter_controller_single_phase_pll1_gain9__out;      double _ess_inverter_controller_single_phase_pll1_sum2__out;
        double _measurement_single_phase_power_meter1_cos__out;
        double _measurement_single_phase_power_meter1_sin__out;
      double _solarhouse1_inverter_controller_alpha_beta_to_dq1__d;
    double _solarhouse1_inverter_controller_alpha_beta_to_dq1__q;
    double _solarhouse1_inverter_controller_alpha_beta_to_dq1__k1;
    double _solarhouse1_inverter_controller_alpha_beta_to_dq1__k2;
    double _solarhouse1_inverter_controller_alpha_beta_to_dq2__d;
    double _solarhouse1_inverter_controller_alpha_beta_to_dq2__q;
    double _solarhouse1_inverter_controller_alpha_beta_to_dq2__k1;
    double _solarhouse1_inverter_controller_alpha_beta_to_dq2__k2;
      double _solarhouse1_inverter_controller_single_phase_pll1_sum7__out;
        double _solarhouse1_inverter_controller_single_phase_pll1_sum6__out;
  double _solarhouse1_inverter_controller_single_phase_pll1_gain9__out;      double _solarhouse1_inverter_controller_single_phase_pll1_sum2__out;
        double _solarhouse1_measurement_single_phase_power_meter1_cos__out;
        double _solarhouse1_measurement_single_phase_power_meter1_sin__out;
      double _solarhouse2_inverter_controller_alpha_beta_to_dq1__d;
    double _solarhouse2_inverter_controller_alpha_beta_to_dq1__q;
    double _solarhouse2_inverter_controller_alpha_beta_to_dq1__k1;
    double _solarhouse2_inverter_controller_alpha_beta_to_dq1__k2;
    double _solarhouse2_inverter_controller_alpha_beta_to_dq2__d;
    double _solarhouse2_inverter_controller_alpha_beta_to_dq2__q;
    double _solarhouse2_inverter_controller_alpha_beta_to_dq2__k1;
    double _solarhouse2_inverter_controller_alpha_beta_to_dq2__k2;
      double _solarhouse2_inverter_controller_single_phase_pll1_sum7__out;
        double _solarhouse2_inverter_controller_single_phase_pll1_sum6__out;
  double _solarhouse2_inverter_controller_single_phase_pll1_gain9__out;      double _solarhouse2_inverter_controller_single_phase_pll1_sum2__out;
        double _solarhouse2_measurement_single_phase_power_meter1_cos__out;
        double _solarhouse2_measurement_single_phase_power_meter1_sin__out;
      double _solarhouse3_inverter_controller_alpha_beta_to_dq1__d;
    double _solarhouse3_inverter_controller_alpha_beta_to_dq1__q;
    double _solarhouse3_inverter_controller_alpha_beta_to_dq1__k1;
    double _solarhouse3_inverter_controller_alpha_beta_to_dq1__k2;
    double _solarhouse3_inverter_controller_alpha_beta_to_dq2__d;
    double _solarhouse3_inverter_controller_alpha_beta_to_dq2__q;
    double _solarhouse3_inverter_controller_alpha_beta_to_dq2__k1;
    double _solarhouse3_inverter_controller_alpha_beta_to_dq2__k2;
      double _solarhouse3_inverter_controller_single_phase_pll1_sum7__out;
        double _solarhouse3_inverter_controller_single_phase_pll1_sum6__out;
  double _solarhouse3_inverter_controller_single_phase_pll1_gain9__out;      double _solarhouse3_inverter_controller_single_phase_pll1_sum2__out;
        double _solarhouse3_measurement_single_phase_power_meter1_cos__out;
        double _solarhouse3_measurement_single_phase_power_meter1_sin__out;
      double _solarhouse4_inverter_controller_alpha_beta_to_dq1__d;
    double _solarhouse4_inverter_controller_alpha_beta_to_dq1__q;
    double _solarhouse4_inverter_controller_alpha_beta_to_dq1__k1;
    double _solarhouse4_inverter_controller_alpha_beta_to_dq1__k2;
    double _solarhouse4_inverter_controller_alpha_beta_to_dq2__d;
    double _solarhouse4_inverter_controller_alpha_beta_to_dq2__q;
    double _solarhouse4_inverter_controller_alpha_beta_to_dq2__k1;
    double _solarhouse4_inverter_controller_alpha_beta_to_dq2__k2;
      double _solarhouse4_inverter_controller_single_phase_pll1_sum7__out;
        double _solarhouse4_inverter_controller_single_phase_pll1_sum6__out;
  double _solarhouse4_inverter_controller_single_phase_pll1_gain9__out;      double _solarhouse4_inverter_controller_single_phase_pll1_sum2__out;
        double _solarhouse4_measurement_single_phase_power_meter1_cos__out;
        double _solarhouse4_measurement_single_phase_power_meter1_sin__out;
  double _ess_inverter_controller_gain28__out;double _ess_inverter_controller_gain29__out;double _ess_inverter_controller_gain30__out;double _ess_inverter_controller_gain31__out;double _ess_inverter_controller_single_phase_pll1_gain4__out;      double _ess_inverter_controller_single_phase_pll1_math1__out;
  double _ess_inverter_controller_single_phase_pll1_product1__out;
double _measurement_single_phase_power_meter1_pmult__out;
double _measurement_single_phase_power_meter1_conjugate__out;double _solarhouse1_inverter_controller_gain28__out;double _solarhouse1_inverter_controller_gain29__out;double _solarhouse1_inverter_controller_gain30__out;double _solarhouse1_inverter_controller_gain31__out;double _solarhouse1_inverter_controller_single_phase_pll1_gain4__out;      double _solarhouse1_inverter_controller_single_phase_pll1_math1__out;
  double _solarhouse1_inverter_controller_single_phase_pll1_product1__out;
double _solarhouse1_measurement_single_phase_power_meter1_pmult__out;
double _solarhouse1_measurement_single_phase_power_meter1_conjugate__out;double _solarhouse2_inverter_controller_gain28__out;double _solarhouse2_inverter_controller_gain29__out;double _solarhouse2_inverter_controller_gain30__out;double _solarhouse2_inverter_controller_gain31__out;double _solarhouse2_inverter_controller_single_phase_pll1_gain4__out;      double _solarhouse2_inverter_controller_single_phase_pll1_math1__out;
  double _solarhouse2_inverter_controller_single_phase_pll1_product1__out;
double _solarhouse2_measurement_single_phase_power_meter1_pmult__out;
double _solarhouse2_measurement_single_phase_power_meter1_conjugate__out;double _solarhouse3_inverter_controller_gain28__out;double _solarhouse3_inverter_controller_gain29__out;double _solarhouse3_inverter_controller_gain30__out;double _solarhouse3_inverter_controller_gain31__out;double _solarhouse3_inverter_controller_single_phase_pll1_gain4__out;      double _solarhouse3_inverter_controller_single_phase_pll1_math1__out;
  double _solarhouse3_inverter_controller_single_phase_pll1_product1__out;
double _solarhouse3_measurement_single_phase_power_meter1_pmult__out;
double _solarhouse3_measurement_single_phase_power_meter1_conjugate__out;double _solarhouse4_inverter_controller_gain28__out;double _solarhouse4_inverter_controller_gain29__out;double _solarhouse4_inverter_controller_gain30__out;double _solarhouse4_inverter_controller_gain31__out;double _solarhouse4_inverter_controller_single_phase_pll1_gain4__out;      double _solarhouse4_inverter_controller_single_phase_pll1_math1__out;
  double _solarhouse4_inverter_controller_single_phase_pll1_product1__out;
double _solarhouse4_measurement_single_phase_power_meter1_pmult__out;
double _solarhouse4_measurement_single_phase_power_meter1_conjugate__out;            double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__out;
        double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__b_coeff[2] = {0.0006279239944363413, 0.0006279239944364523};
        double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__a_coeff[2] = {1.0, -0.9987441520111273};
        double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__a_sum;
        double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__b_sum;
        double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__delay_line_in;double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product4__out;
double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product5__out;
double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_product1__out;
              double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__out;
        double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__b_coeff[2] = {0.0006279239944363413, 0.0006279239944364523};
        double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__a_coeff[2] = {1.0, -0.9987441520111273};
        double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__a_sum;
        double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__b_sum;
        double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__delay_line_in;double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product3__out;
double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product6__out;
double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_product2__out;
    double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain7__out;double _ess_inverter_power_meas_power_meas_dqpu_product1__out;
double _ess_inverter_power_meas_power_meas_dqpu_product4__out;
  double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain6__out;double _ess_inverter_power_meas_power_meas_dqpu_product2__out;
double _ess_inverter_power_meas_power_meas_dqpu_product3__out;
      double _ess_inverter_controller_single_phase_pll1_limit1__out;
    double _measurement_single_phase_power_meter1_qmult__out;
            double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__out;
        double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__b_coeff[2] = {0.0006279239944363413, 0.0006279239944364523};
        double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__a_coeff[2] = {1.0, -0.9987441520111273};
        double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__a_sum;
        double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__b_sum;
        double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__delay_line_in;double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product4__out;
double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product5__out;
double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_product1__out;
              double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__out;
        double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__b_coeff[2] = {0.0006279239944363413, 0.0006279239944364523};
        double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__a_coeff[2] = {1.0, -0.9987441520111273};
        double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__a_sum;
        double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__b_sum;
        double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__delay_line_in;double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product3__out;
double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product6__out;
double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_product2__out;
    double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain7__out;double _solarhouse1_inverter_power_meas_power_meas_dqpu_product1__out;
double _solarhouse1_inverter_power_meas_power_meas_dqpu_product4__out;
  double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain6__out;double _solarhouse1_inverter_power_meas_power_meas_dqpu_product2__out;
double _solarhouse1_inverter_power_meas_power_meas_dqpu_product3__out;
      double _solarhouse1_inverter_controller_single_phase_pll1_limit1__out;
      double _solarhouse1_measurement_single_phase_power_meter1_qmult__out;
            double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__out;
        double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__b_coeff[2] = {0.0006279239944363413, 0.0006279239944364523};
        double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__a_coeff[2] = {1.0, -0.9987441520111273};
        double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__a_sum;
        double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__b_sum;
        double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__delay_line_in;double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product4__out;
double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product5__out;
double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_product1__out;
              double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__out;
        double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__b_coeff[2] = {0.0006279239944363413, 0.0006279239944364523};
        double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__a_coeff[2] = {1.0, -0.9987441520111273};
        double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__a_sum;
        double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__b_sum;
        double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__delay_line_in;double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product3__out;
double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product6__out;
double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_product2__out;
    double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain7__out;double _solarhouse2_inverter_power_meas_power_meas_dqpu_product1__out;
double _solarhouse2_inverter_power_meas_power_meas_dqpu_product4__out;
  double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain6__out;double _solarhouse2_inverter_power_meas_power_meas_dqpu_product2__out;
double _solarhouse2_inverter_power_meas_power_meas_dqpu_product3__out;
      double _solarhouse2_inverter_controller_single_phase_pll1_limit1__out;
      double _solarhouse2_measurement_single_phase_power_meter1_qmult__out;
            double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__out;
        double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__b_coeff[2] = {0.0006279239944363413, 0.0006279239944364523};
        double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__a_coeff[2] = {1.0, -0.9987441520111273};
        double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__a_sum;
        double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__b_sum;
        double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__delay_line_in;double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product4__out;
double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product5__out;
double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_product1__out;
              double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__out;
        double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__b_coeff[2] = {0.0006279239944363413, 0.0006279239944364523};
        double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__a_coeff[2] = {1.0, -0.9987441520111273};
        double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__a_sum;
        double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__b_sum;
        double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__delay_line_in;double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product3__out;
double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product6__out;
double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_product2__out;
    double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain7__out;double _solarhouse3_inverter_power_meas_power_meas_dqpu_product1__out;
double _solarhouse3_inverter_power_meas_power_meas_dqpu_product4__out;
  double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain6__out;double _solarhouse3_inverter_power_meas_power_meas_dqpu_product2__out;
double _solarhouse3_inverter_power_meas_power_meas_dqpu_product3__out;
      double _solarhouse3_inverter_controller_single_phase_pll1_limit1__out;
      double _solarhouse3_measurement_single_phase_power_meter1_qmult__out;
            double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__out;
        double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__b_coeff[2] = {0.0006279239944363413, 0.0006279239944364523};
        double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__a_coeff[2] = {1.0, -0.9987441520111273};
        double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__a_sum;
        double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__b_sum;
        double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__delay_line_in;double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product4__out;
double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product5__out;
double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_product1__out;
              double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__out;
        double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__b_coeff[2] = {0.0006279239944363413, 0.0006279239944364523};
        double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__a_coeff[2] = {1.0, -0.9987441520111273};
        double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__a_sum;
        double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__b_sum;
        double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__delay_line_in;double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product3__out;
double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product6__out;
double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_product2__out;
    double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain7__out;double _solarhouse4_inverter_power_meas_power_meas_dqpu_product1__out;
double _solarhouse4_inverter_power_meas_power_meas_dqpu_product4__out;
  double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain6__out;double _solarhouse4_inverter_power_meas_power_meas_dqpu_product2__out;
double _solarhouse4_inverter_power_meas_power_meas_dqpu_product3__out;
      double _solarhouse4_inverter_controller_single_phase_pll1_limit1__out;
      double _solarhouse4_measurement_single_phase_power_meter1_qmult__out;
      double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_sum3__out;
        double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_sum4__out;
        double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_sum3__out;
  double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product2__out;
double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product1__out;
      double _ess_inverter_power_meas_power_meas_dqpu_sum1__out;
        double _ess_inverter_power_meas_power_meas_dqpu_sum2__out;
  double _ess_inverter_controller_single_phase_pll1_product8__out;
        double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_sum3__out;
        double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_sum4__out;
        double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_sum3__out;
  double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product2__out;
double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product1__out;
      double _solarhouse1_inverter_power_meas_power_meas_dqpu_sum1__out;
        double _solarhouse1_inverter_power_meas_power_meas_dqpu_sum2__out;
  double _solarhouse1_inverter_controller_single_phase_pll1_product8__out;
        double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_sum3__out;
        double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_sum4__out;
        double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_sum3__out;
  double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product2__out;
double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product1__out;
      double _solarhouse2_inverter_power_meas_power_meas_dqpu_sum1__out;
        double _solarhouse2_inverter_power_meas_power_meas_dqpu_sum2__out;
  double _solarhouse2_inverter_controller_single_phase_pll1_product8__out;
        double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_sum3__out;
        double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_sum4__out;
        double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_sum3__out;
  double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product2__out;
double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product1__out;
      double _solarhouse3_inverter_power_meas_power_meas_dqpu_sum1__out;
        double _solarhouse3_inverter_power_meas_power_meas_dqpu_sum2__out;
  double _solarhouse3_inverter_controller_single_phase_pll1_product8__out;
        double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_sum3__out;
        double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_sum4__out;
        double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_sum3__out;
  double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product2__out;
double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product1__out;
      double _solarhouse4_inverter_power_meas_power_meas_dqpu_sum1__out;
        double _solarhouse4_inverter_power_meas_power_meas_dqpu_sum2__out;
  double _solarhouse4_inverter_controller_single_phase_pll1_product8__out;
        double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__out;
      double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum6__out;
        double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum5__out;
              double _ess_inverter_power_meas_power_meas_dqpu_lpf_p__out;
        double _ess_inverter_power_meas_power_meas_dqpu_lpf_p__b_coeff[2] = {0.0006279239944363413, 0.0006279239944364523};
        double _ess_inverter_power_meas_power_meas_dqpu_lpf_p__a_coeff[2] = {1.0, -0.9987441520111273};
        double _ess_inverter_power_meas_power_meas_dqpu_lpf_p__a_sum;
        double _ess_inverter_power_meas_power_meas_dqpu_lpf_p__b_sum;
        double _ess_inverter_power_meas_power_meas_dqpu_lpf_p__delay_line_in;            double _ess_inverter_power_meas_power_meas_dqpu_lpf_q__out;
        double _ess_inverter_power_meas_power_meas_dqpu_lpf_q__b_coeff[2] = {0.0006279239944363413, 0.0006279239944364523};
        double _ess_inverter_power_meas_power_meas_dqpu_lpf_q__a_coeff[2] = {1.0, -0.9987441520111273};
        double _ess_inverter_power_meas_power_meas_dqpu_lpf_q__a_sum;
        double _ess_inverter_power_meas_power_meas_dqpu_lpf_q__b_sum;
        double _ess_inverter_power_meas_power_meas_dqpu_lpf_q__delay_line_in;      double _ess_inverter_controller_single_phase_pll1_abs1__out;
        double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__out;
      double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum6__out;
        double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum5__out;
              double _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_p__out;
        double _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_p__b_coeff[2] = {0.0006279239944363413, 0.0006279239944364523};
        double _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_p__a_coeff[2] = {1.0, -0.9987441520111273};
        double _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_p__a_sum;
        double _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_p__b_sum;
        double _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_p__delay_line_in;            double _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_q__out;
        double _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_q__b_coeff[2] = {0.0006279239944363413, 0.0006279239944364523};
        double _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_q__a_coeff[2] = {1.0, -0.9987441520111273};
        double _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_q__a_sum;
        double _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_q__b_sum;
        double _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_q__delay_line_in;      double _solarhouse1_inverter_controller_single_phase_pll1_abs1__out;
        double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__out;
      double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum6__out;
        double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum5__out;
              double _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_p__out;
        double _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_p__b_coeff[2] = {0.0006279239944363413, 0.0006279239944364523};
        double _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_p__a_coeff[2] = {1.0, -0.9987441520111273};
        double _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_p__a_sum;
        double _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_p__b_sum;
        double _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_p__delay_line_in;            double _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_q__out;
        double _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_q__b_coeff[2] = {0.0006279239944363413, 0.0006279239944364523};
        double _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_q__a_coeff[2] = {1.0, -0.9987441520111273};
        double _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_q__a_sum;
        double _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_q__b_sum;
        double _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_q__delay_line_in;      double _solarhouse2_inverter_controller_single_phase_pll1_abs1__out;
        double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__out;
      double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum6__out;
        double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum5__out;
              double _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_p__out;
        double _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_p__b_coeff[2] = {0.0006279239944363413, 0.0006279239944364523};
        double _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_p__a_coeff[2] = {1.0, -0.9987441520111273};
        double _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_p__a_sum;
        double _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_p__b_sum;
        double _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_p__delay_line_in;            double _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_q__out;
        double _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_q__b_coeff[2] = {0.0006279239944363413, 0.0006279239944364523};
        double _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_q__a_coeff[2] = {1.0, -0.9987441520111273};
        double _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_q__a_sum;
        double _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_q__b_sum;
        double _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_q__delay_line_in;      double _solarhouse3_inverter_controller_single_phase_pll1_abs1__out;
        double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__out;
      double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum6__out;
        double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum5__out;
              double _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_p__out;
        double _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_p__b_coeff[2] = {0.0006279239944363413, 0.0006279239944364523};
        double _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_p__a_coeff[2] = {1.0, -0.9987441520111273};
        double _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_p__a_sum;
        double _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_p__b_sum;
        double _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_p__delay_line_in;            double _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_q__out;
        double _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_q__b_coeff[2] = {0.0006279239944363413, 0.0006279239944364523};
        double _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_q__a_coeff[2] = {1.0, -0.9987441520111273};
        double _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_q__a_sum;
        double _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_q__b_sum;
        double _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_q__delay_line_in;      double _solarhouse4_inverter_controller_single_phase_pll1_abs1__out;
        double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_signal_switch1__out;
      double _ess_inverter_controller_single_phase_pll1_kd_lut__lut_table[100] = { -5.19,-5.142818181818182,-5.095636363636364,-5.048454545454546,-5.0012727272727275,-4.954090909090909,-4.9069090909090916,-4.859727272727273,-4.812545454545455,-4.765363636363636,-4.718181818181819,-4.671,-4.623818181818182,-4.576636363636364,-4.529454545454546,-4.482272727272727,-4.43509090909091,-4.387909090909091,-4.340727272727273,-4.2935454545454546,-4.246363636363637,-4.199181818181819,-4.152,-4.104818181818182,-4.057636363636364,-4.010454545454546,-3.9632727272727273,-3.9160909090909093,-3.8689090909090913,-3.821727272727273,-3.774545454545455,-3.727363636363637,-3.6801818181818184,-3.633,-3.585818181818182,-3.538636363636364,-3.4914545454545456,-3.4442727272727276,-3.3970909090909096,-3.349909090909091,-3.3027272727272727,-3.2555454545454547,-3.2083636363636368,-3.1611818181818183,-3.1140000000000003,-3.066818181818182,-3.019636363636364,-2.9724545454545455,-2.9252727272727275,-2.8780909090909095,-2.830909090909091,-2.783727272727273,-2.7365454545454546,-2.6893636363636366,-2.642181818181818,-2.595,-2.547818181818182,-2.5006363636363638,-2.4534545454545458,-2.4062727272727273,-2.3590909090909093,-2.311909090909091,-2.264727272727273,-2.2175454545454545,-2.1703636363636365,-2.1231818181818185,-2.076,-2.028818181818182,-1.9816363636363636,-1.9344545454545456,-1.8872727272727272,-1.8400909090909092,-1.7929090909090908,-1.7457272727272728,-1.6985454545454548,-1.6513636363636364,-1.6041818181818184,-1.557,-1.509818181818182,-1.4626363636363635,-1.4154545454545455,-1.3682727272727275,-1.321090909090909,-1.273909090909091,-1.2267272727272727,-1.1795454545454547,-1.1323636363636362,-1.0851818181818178,-1.0380000000000003,-0.9908181818181818,-0.9436363636363634,-0.8964545454545458,-0.8492727272727274,-0.802090909090909,-0.7549090909090905,-0.707727272727273,-0.6605454545454545,-0.6133636363636361,-0.5661818181818186,-0.519 };
    double _ess_inverter_controller_single_phase_pll1_kd_lut__value;        double _ess_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[100] = { 0.0,0.010101010101010102,0.020202020202020204,0.030303030303030304,0.04040404040404041,0.05050505050505051,0.06060606060606061,0.07070707070707072,0.08080808080808081,0.09090909090909091,0.10101010101010102,0.11111111111111112,0.12121212121212122,0.13131313131313133,0.14141414141414144,0.15151515151515152,0.16161616161616163,0.17171717171717174,0.18181818181818182,0.19191919191919193,0.20202020202020204,0.21212121212121213,0.22222222222222224,0.23232323232323235,0.24242424242424243,0.25252525252525254,0.26262626262626265,0.27272727272727276,0.2828282828282829,0.29292929292929293,0.30303030303030304,0.31313131313131315,0.32323232323232326,0.33333333333333337,0.3434343434343435,0.3535353535353536,0.36363636363636365,0.37373737373737376,0.38383838383838387,0.393939393939394,0.4040404040404041,0.4141414141414142,0.42424242424242425,0.43434343434343436,0.4444444444444445,0.4545454545454546,0.4646464646464647,0.4747474747474748,0.48484848484848486,0.494949494949495,0.5050505050505051,0.5151515151515152,0.5252525252525253,0.5353535353535354,0.5454545454545455,0.5555555555555556,0.5656565656565657,0.5757575757575758,0.5858585858585859,0.595959595959596,0.6060606060606061,0.6161616161616162,0.6262626262626263,0.6363636363636365,0.6464646464646465,0.6565656565656566,0.6666666666666667,0.6767676767676768,0.686868686868687,0.696969696969697,0.7070707070707072,0.7171717171717172,0.7272727272727273,0.7373737373737375,0.7474747474747475,0.7575757575757577,0.7676767676767677,0.7777777777777778,0.787878787878788,0.797979797979798,0.8080808080808082,0.8181818181818182,0.8282828282828284,0.8383838383838385,0.8484848484848485,0.8585858585858587,0.8686868686868687,0.8787878787878789,0.888888888888889,0.8989898989898991,0.9090909090909092,0.9191919191919192,0.9292929292929294,0.9393939393939394,0.9494949494949496,0.9595959595959597,0.9696969696969697,0.9797979797979799,0.98989898989899,1.0 };
        X_Int32 _ess_inverter_controller_single_phase_pll1_kd_lut__leftIndex;
        X_Int32 _ess_inverter_controller_single_phase_pll1_kd_lut__rightIndex;
        X_Int32 _ess_inverter_controller_single_phase_pll1_kd_lut__curAddr;
        double _ess_inverter_controller_single_phase_pll1_kd_lut__fraction;
    
    double _ess_inverter_controller_single_phase_pll1_ki_lut__lut_table[100] = { 18400.0,18236.565656565657,18073.131313131315,17909.696969696968,17746.262626262625,17582.828282828283,17419.39393939394,17255.959595959597,17092.52525252525,16929.090909090908,16765.656565656565,16602.222222222223,16438.78787878788,16275.353535353535,16111.91919191919,15948.484848484848,15785.050505050505,15621.61616161616,15458.181818181818,15294.747474747473,15131.31313131313,14967.878787878788,14804.444444444445,14641.0101010101,14477.575757575756,14314.141414141413,14150.70707070707,13987.272727272728,13823.838383838383,13660.404040404039,13496.969696969696,13333.535353535353,13170.10101010101,13006.666666666666,12843.232323232322,12679.797979797979,12516.363636363636,12352.929292929293,12189.494949494949,12026.060606060606,11862.626262626261,11699.191919191919,11535.757575757576,11372.323232323231,11208.888888888889,11045.454545454544,10882.020202020201,10718.585858585859,10555.151515151514,10391.717171717171,10228.282828282827,10064.848484848484,9901.414141414141,9737.979797979797,9574.545454545454,9411.111111111111,9247.676767676767,9084.242424242424,8920.80808080808,8757.373737373737,8593.939393939394,8430.50505050505,8267.070707070707,8103.636363636362,7940.202020202019,7776.767676767677,7613.333333333332,7449.898989898989,7286.464646464645,7123.030303030302,6959.595959595959,6796.161616161615,6632.727272727272,6469.2929292929275,6305.858585858585,6142.424242424242,5978.9898989898975,5815.555555555555,5652.121212121212,5488.6868686868675,5325.252525252525,5161.81818181818,4998.383838383837,4834.949494949495,4671.51515151515,4508.080808080807,4344.646464646463,4181.21212121212,4017.7777777777774,3854.343434343433,3690.90909090909,3527.4747474747455,3364.040404040403,3200.60606060606,3037.1717171717155,2873.7373737373728,2710.303030303028,2546.8686868686855,2383.4343434343427,2220.0 };
    double _ess_inverter_controller_single_phase_pll1_ki_lut__value;        double _ess_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[100] = { 0.0,0.010101010101010102,0.020202020202020204,0.030303030303030304,0.04040404040404041,0.05050505050505051,0.06060606060606061,0.07070707070707072,0.08080808080808081,0.09090909090909091,0.10101010101010102,0.11111111111111112,0.12121212121212122,0.13131313131313133,0.14141414141414144,0.15151515151515152,0.16161616161616163,0.17171717171717174,0.18181818181818182,0.19191919191919193,0.20202020202020204,0.21212121212121213,0.22222222222222224,0.23232323232323235,0.24242424242424243,0.25252525252525254,0.26262626262626265,0.27272727272727276,0.2828282828282829,0.29292929292929293,0.30303030303030304,0.31313131313131315,0.32323232323232326,0.33333333333333337,0.3434343434343435,0.3535353535353536,0.36363636363636365,0.37373737373737376,0.38383838383838387,0.393939393939394,0.4040404040404041,0.4141414141414142,0.42424242424242425,0.43434343434343436,0.4444444444444445,0.4545454545454546,0.4646464646464647,0.4747474747474748,0.48484848484848486,0.494949494949495,0.5050505050505051,0.5151515151515152,0.5252525252525253,0.5353535353535354,0.5454545454545455,0.5555555555555556,0.5656565656565657,0.5757575757575758,0.5858585858585859,0.595959595959596,0.6060606060606061,0.6161616161616162,0.6262626262626263,0.6363636363636365,0.6464646464646465,0.6565656565656566,0.6666666666666667,0.6767676767676768,0.686868686868687,0.696969696969697,0.7070707070707072,0.7171717171717172,0.7272727272727273,0.7373737373737375,0.7474747474747475,0.7575757575757577,0.7676767676767677,0.7777777777777778,0.787878787878788,0.797979797979798,0.8080808080808082,0.8181818181818182,0.8282828282828284,0.8383838383838385,0.8484848484848485,0.8585858585858587,0.8686868686868687,0.8787878787878789,0.888888888888889,0.8989898989898991,0.9090909090909092,0.9191919191919192,0.9292929292929294,0.9393939393939394,0.9494949494949496,0.9595959595959597,0.9696969696969697,0.9797979797979799,0.98989898989899,1.0 };
        X_Int32 _ess_inverter_controller_single_phase_pll1_ki_lut__leftIndex;
        X_Int32 _ess_inverter_controller_single_phase_pll1_ki_lut__rightIndex;
        X_Int32 _ess_inverter_controller_single_phase_pll1_ki_lut__curAddr;
        double _ess_inverter_controller_single_phase_pll1_ki_lut__fraction;
    
    double _ess_inverter_controller_single_phase_pll1_kp_lut__lut_table[100] = { 4810.0,4766.737373737374,4723.474747474747,4680.212121212121,4636.949494949495,4593.686868686868,4550.424242424242,4507.161616161617,4463.89898989899,4420.636363636364,4377.373737373738,4334.111111111111,4290.848484848485,4247.585858585859,4204.323232323232,4161.060606060606,4117.79797979798,4074.5353535353534,4031.272727272727,3988.010101010101,3944.747474747475,3901.4848484848485,3858.222222222222,3814.959595959596,3771.69696969697,3728.4343434343436,3685.1717171717173,3641.909090909091,3598.6464646464647,3555.3838383838383,3512.121212121212,3468.8585858585857,3425.5959595959594,3382.333333333333,3339.070707070707,3295.808080808081,3252.5454545454545,3209.282828282828,3166.0202020202023,3122.757575757576,3079.4949494949497,3036.2323232323233,2992.969696969697,2949.7070707070707,2906.4444444444443,2863.181818181818,2819.9191919191917,2776.6565656565654,2733.3939393939395,2690.131313131313,2646.868686868687,2603.6060606060605,2560.343434343434,2517.080808080808,2473.818181818182,2430.5555555555557,2387.2929292929293,2344.030303030303,2300.7676767676767,2257.5050505050503,2214.242424242424,2170.979797979798,2127.717171717172,2084.4545454545455,2041.1919191919192,1997.9292929292928,1954.6666666666665,1911.4040404040402,1868.1414141414143,1824.878787878788,1781.6161616161617,1738.3535353535353,1695.090909090909,1651.8282828282827,1608.5656565656564,1565.3030303030305,1522.0404040404042,1478.7777777777778,1435.5151515151515,1392.2525252525252,1348.9898989898988,1305.7272727272725,1262.4646464646466,1219.2020202020203,1175.939393939394,1132.6767676767677,1089.4141414141413,1046.151515151515,1002.8888888888887,959.6262626262628,916.3636363636365,873.1010101010102,829.8383838383838,786.5757575757575,743.3131313131312,700.0505050505053,656.787878787879,613.5252525252527,570.2626262626263,527.0 };
    double _ess_inverter_controller_single_phase_pll1_kp_lut__value;        double _ess_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[100] = { 0.0,0.010101010101010102,0.020202020202020204,0.030303030303030304,0.04040404040404041,0.05050505050505051,0.06060606060606061,0.07070707070707072,0.08080808080808081,0.09090909090909091,0.10101010101010102,0.11111111111111112,0.12121212121212122,0.13131313131313133,0.14141414141414144,0.15151515151515152,0.16161616161616163,0.17171717171717174,0.18181818181818182,0.19191919191919193,0.20202020202020204,0.21212121212121213,0.22222222222222224,0.23232323232323235,0.24242424242424243,0.25252525252525254,0.26262626262626265,0.27272727272727276,0.2828282828282829,0.29292929292929293,0.30303030303030304,0.31313131313131315,0.32323232323232326,0.33333333333333337,0.3434343434343435,0.3535353535353536,0.36363636363636365,0.37373737373737376,0.38383838383838387,0.393939393939394,0.4040404040404041,0.4141414141414142,0.42424242424242425,0.43434343434343436,0.4444444444444445,0.4545454545454546,0.4646464646464647,0.4747474747474748,0.48484848484848486,0.494949494949495,0.5050505050505051,0.5151515151515152,0.5252525252525253,0.5353535353535354,0.5454545454545455,0.5555555555555556,0.5656565656565657,0.5757575757575758,0.5858585858585859,0.595959595959596,0.6060606060606061,0.6161616161616162,0.6262626262626263,0.6363636363636365,0.6464646464646465,0.6565656565656566,0.6666666666666667,0.6767676767676768,0.686868686868687,0.696969696969697,0.7070707070707072,0.7171717171717172,0.7272727272727273,0.7373737373737375,0.7474747474747475,0.7575757575757577,0.7676767676767677,0.7777777777777778,0.787878787878788,0.797979797979798,0.8080808080808082,0.8181818181818182,0.8282828282828284,0.8383838383838385,0.8484848484848485,0.8585858585858587,0.8686868686868687,0.8787878787878789,0.888888888888889,0.8989898989898991,0.9090909090909092,0.9191919191919192,0.9292929292929294,0.9393939393939394,0.9494949494949496,0.9595959595959597,0.9696969696969697,0.9797979797979799,0.98989898989899,1.0 };
        X_Int32 _ess_inverter_controller_single_phase_pll1_kp_lut__leftIndex;
        X_Int32 _ess_inverter_controller_single_phase_pll1_kp_lut__rightIndex;
        X_Int32 _ess_inverter_controller_single_phase_pll1_kp_lut__curAddr;
        double _ess_inverter_controller_single_phase_pll1_kp_lut__fraction;
    
      double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_signal_switch1__out;
      double _solarhouse1_inverter_controller_single_phase_pll1_kd_lut__lut_table[100] = { -5.19,-5.142818181818182,-5.095636363636364,-5.048454545454546,-5.0012727272727275,-4.954090909090909,-4.9069090909090916,-4.859727272727273,-4.812545454545455,-4.765363636363636,-4.718181818181819,-4.671,-4.623818181818182,-4.576636363636364,-4.529454545454546,-4.482272727272727,-4.43509090909091,-4.387909090909091,-4.340727272727273,-4.2935454545454546,-4.246363636363637,-4.199181818181819,-4.152,-4.104818181818182,-4.057636363636364,-4.010454545454546,-3.9632727272727273,-3.9160909090909093,-3.8689090909090913,-3.821727272727273,-3.774545454545455,-3.727363636363637,-3.6801818181818184,-3.633,-3.585818181818182,-3.538636363636364,-3.4914545454545456,-3.4442727272727276,-3.3970909090909096,-3.349909090909091,-3.3027272727272727,-3.2555454545454547,-3.2083636363636368,-3.1611818181818183,-3.1140000000000003,-3.066818181818182,-3.019636363636364,-2.9724545454545455,-2.9252727272727275,-2.8780909090909095,-2.830909090909091,-2.783727272727273,-2.7365454545454546,-2.6893636363636366,-2.642181818181818,-2.595,-2.547818181818182,-2.5006363636363638,-2.4534545454545458,-2.4062727272727273,-2.3590909090909093,-2.311909090909091,-2.264727272727273,-2.2175454545454545,-2.1703636363636365,-2.1231818181818185,-2.076,-2.028818181818182,-1.9816363636363636,-1.9344545454545456,-1.8872727272727272,-1.8400909090909092,-1.7929090909090908,-1.7457272727272728,-1.6985454545454548,-1.6513636363636364,-1.6041818181818184,-1.557,-1.509818181818182,-1.4626363636363635,-1.4154545454545455,-1.3682727272727275,-1.321090909090909,-1.273909090909091,-1.2267272727272727,-1.1795454545454547,-1.1323636363636362,-1.0851818181818178,-1.0380000000000003,-0.9908181818181818,-0.9436363636363634,-0.8964545454545458,-0.8492727272727274,-0.802090909090909,-0.7549090909090905,-0.707727272727273,-0.6605454545454545,-0.6133636363636361,-0.5661818181818186,-0.519 };
    double _solarhouse1_inverter_controller_single_phase_pll1_kd_lut__value;        double _solarhouse1_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[100] = { 0.0,0.010101010101010102,0.020202020202020204,0.030303030303030304,0.04040404040404041,0.05050505050505051,0.06060606060606061,0.07070707070707072,0.08080808080808081,0.09090909090909091,0.10101010101010102,0.11111111111111112,0.12121212121212122,0.13131313131313133,0.14141414141414144,0.15151515151515152,0.16161616161616163,0.17171717171717174,0.18181818181818182,0.19191919191919193,0.20202020202020204,0.21212121212121213,0.22222222222222224,0.23232323232323235,0.24242424242424243,0.25252525252525254,0.26262626262626265,0.27272727272727276,0.2828282828282829,0.29292929292929293,0.30303030303030304,0.31313131313131315,0.32323232323232326,0.33333333333333337,0.3434343434343435,0.3535353535353536,0.36363636363636365,0.37373737373737376,0.38383838383838387,0.393939393939394,0.4040404040404041,0.4141414141414142,0.42424242424242425,0.43434343434343436,0.4444444444444445,0.4545454545454546,0.4646464646464647,0.4747474747474748,0.48484848484848486,0.494949494949495,0.5050505050505051,0.5151515151515152,0.5252525252525253,0.5353535353535354,0.5454545454545455,0.5555555555555556,0.5656565656565657,0.5757575757575758,0.5858585858585859,0.595959595959596,0.6060606060606061,0.6161616161616162,0.6262626262626263,0.6363636363636365,0.6464646464646465,0.6565656565656566,0.6666666666666667,0.6767676767676768,0.686868686868687,0.696969696969697,0.7070707070707072,0.7171717171717172,0.7272727272727273,0.7373737373737375,0.7474747474747475,0.7575757575757577,0.7676767676767677,0.7777777777777778,0.787878787878788,0.797979797979798,0.8080808080808082,0.8181818181818182,0.8282828282828284,0.8383838383838385,0.8484848484848485,0.8585858585858587,0.8686868686868687,0.8787878787878789,0.888888888888889,0.8989898989898991,0.9090909090909092,0.9191919191919192,0.9292929292929294,0.9393939393939394,0.9494949494949496,0.9595959595959597,0.9696969696969697,0.9797979797979799,0.98989898989899,1.0 };
        X_Int32 _solarhouse1_inverter_controller_single_phase_pll1_kd_lut__leftIndex;
        X_Int32 _solarhouse1_inverter_controller_single_phase_pll1_kd_lut__rightIndex;
        X_Int32 _solarhouse1_inverter_controller_single_phase_pll1_kd_lut__curAddr;
        double _solarhouse1_inverter_controller_single_phase_pll1_kd_lut__fraction;
    
    double _solarhouse1_inverter_controller_single_phase_pll1_ki_lut__lut_table[100] = { 18400.0,18236.565656565657,18073.131313131315,17909.696969696968,17746.262626262625,17582.828282828283,17419.39393939394,17255.959595959597,17092.52525252525,16929.090909090908,16765.656565656565,16602.222222222223,16438.78787878788,16275.353535353535,16111.91919191919,15948.484848484848,15785.050505050505,15621.61616161616,15458.181818181818,15294.747474747473,15131.31313131313,14967.878787878788,14804.444444444445,14641.0101010101,14477.575757575756,14314.141414141413,14150.70707070707,13987.272727272728,13823.838383838383,13660.404040404039,13496.969696969696,13333.535353535353,13170.10101010101,13006.666666666666,12843.232323232322,12679.797979797979,12516.363636363636,12352.929292929293,12189.494949494949,12026.060606060606,11862.626262626261,11699.191919191919,11535.757575757576,11372.323232323231,11208.888888888889,11045.454545454544,10882.020202020201,10718.585858585859,10555.151515151514,10391.717171717171,10228.282828282827,10064.848484848484,9901.414141414141,9737.979797979797,9574.545454545454,9411.111111111111,9247.676767676767,9084.242424242424,8920.80808080808,8757.373737373737,8593.939393939394,8430.50505050505,8267.070707070707,8103.636363636362,7940.202020202019,7776.767676767677,7613.333333333332,7449.898989898989,7286.464646464645,7123.030303030302,6959.595959595959,6796.161616161615,6632.727272727272,6469.2929292929275,6305.858585858585,6142.424242424242,5978.9898989898975,5815.555555555555,5652.121212121212,5488.6868686868675,5325.252525252525,5161.81818181818,4998.383838383837,4834.949494949495,4671.51515151515,4508.080808080807,4344.646464646463,4181.21212121212,4017.7777777777774,3854.343434343433,3690.90909090909,3527.4747474747455,3364.040404040403,3200.60606060606,3037.1717171717155,2873.7373737373728,2710.303030303028,2546.8686868686855,2383.4343434343427,2220.0 };
    double _solarhouse1_inverter_controller_single_phase_pll1_ki_lut__value;        double _solarhouse1_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[100] = { 0.0,0.010101010101010102,0.020202020202020204,0.030303030303030304,0.04040404040404041,0.05050505050505051,0.06060606060606061,0.07070707070707072,0.08080808080808081,0.09090909090909091,0.10101010101010102,0.11111111111111112,0.12121212121212122,0.13131313131313133,0.14141414141414144,0.15151515151515152,0.16161616161616163,0.17171717171717174,0.18181818181818182,0.19191919191919193,0.20202020202020204,0.21212121212121213,0.22222222222222224,0.23232323232323235,0.24242424242424243,0.25252525252525254,0.26262626262626265,0.27272727272727276,0.2828282828282829,0.29292929292929293,0.30303030303030304,0.31313131313131315,0.32323232323232326,0.33333333333333337,0.3434343434343435,0.3535353535353536,0.36363636363636365,0.37373737373737376,0.38383838383838387,0.393939393939394,0.4040404040404041,0.4141414141414142,0.42424242424242425,0.43434343434343436,0.4444444444444445,0.4545454545454546,0.4646464646464647,0.4747474747474748,0.48484848484848486,0.494949494949495,0.5050505050505051,0.5151515151515152,0.5252525252525253,0.5353535353535354,0.5454545454545455,0.5555555555555556,0.5656565656565657,0.5757575757575758,0.5858585858585859,0.595959595959596,0.6060606060606061,0.6161616161616162,0.6262626262626263,0.6363636363636365,0.6464646464646465,0.6565656565656566,0.6666666666666667,0.6767676767676768,0.686868686868687,0.696969696969697,0.7070707070707072,0.7171717171717172,0.7272727272727273,0.7373737373737375,0.7474747474747475,0.7575757575757577,0.7676767676767677,0.7777777777777778,0.787878787878788,0.797979797979798,0.8080808080808082,0.8181818181818182,0.8282828282828284,0.8383838383838385,0.8484848484848485,0.8585858585858587,0.8686868686868687,0.8787878787878789,0.888888888888889,0.8989898989898991,0.9090909090909092,0.9191919191919192,0.9292929292929294,0.9393939393939394,0.9494949494949496,0.9595959595959597,0.9696969696969697,0.9797979797979799,0.98989898989899,1.0 };
        X_Int32 _solarhouse1_inverter_controller_single_phase_pll1_ki_lut__leftIndex;
        X_Int32 _solarhouse1_inverter_controller_single_phase_pll1_ki_lut__rightIndex;
        X_Int32 _solarhouse1_inverter_controller_single_phase_pll1_ki_lut__curAddr;
        double _solarhouse1_inverter_controller_single_phase_pll1_ki_lut__fraction;
    
    double _solarhouse1_inverter_controller_single_phase_pll1_kp_lut__lut_table[100] = { 4810.0,4766.737373737374,4723.474747474747,4680.212121212121,4636.949494949495,4593.686868686868,4550.424242424242,4507.161616161617,4463.89898989899,4420.636363636364,4377.373737373738,4334.111111111111,4290.848484848485,4247.585858585859,4204.323232323232,4161.060606060606,4117.79797979798,4074.5353535353534,4031.272727272727,3988.010101010101,3944.747474747475,3901.4848484848485,3858.222222222222,3814.959595959596,3771.69696969697,3728.4343434343436,3685.1717171717173,3641.909090909091,3598.6464646464647,3555.3838383838383,3512.121212121212,3468.8585858585857,3425.5959595959594,3382.333333333333,3339.070707070707,3295.808080808081,3252.5454545454545,3209.282828282828,3166.0202020202023,3122.757575757576,3079.4949494949497,3036.2323232323233,2992.969696969697,2949.7070707070707,2906.4444444444443,2863.181818181818,2819.9191919191917,2776.6565656565654,2733.3939393939395,2690.131313131313,2646.868686868687,2603.6060606060605,2560.343434343434,2517.080808080808,2473.818181818182,2430.5555555555557,2387.2929292929293,2344.030303030303,2300.7676767676767,2257.5050505050503,2214.242424242424,2170.979797979798,2127.717171717172,2084.4545454545455,2041.1919191919192,1997.9292929292928,1954.6666666666665,1911.4040404040402,1868.1414141414143,1824.878787878788,1781.6161616161617,1738.3535353535353,1695.090909090909,1651.8282828282827,1608.5656565656564,1565.3030303030305,1522.0404040404042,1478.7777777777778,1435.5151515151515,1392.2525252525252,1348.9898989898988,1305.7272727272725,1262.4646464646466,1219.2020202020203,1175.939393939394,1132.6767676767677,1089.4141414141413,1046.151515151515,1002.8888888888887,959.6262626262628,916.3636363636365,873.1010101010102,829.8383838383838,786.5757575757575,743.3131313131312,700.0505050505053,656.787878787879,613.5252525252527,570.2626262626263,527.0 };
    double _solarhouse1_inverter_controller_single_phase_pll1_kp_lut__value;        double _solarhouse1_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[100] = { 0.0,0.010101010101010102,0.020202020202020204,0.030303030303030304,0.04040404040404041,0.05050505050505051,0.06060606060606061,0.07070707070707072,0.08080808080808081,0.09090909090909091,0.10101010101010102,0.11111111111111112,0.12121212121212122,0.13131313131313133,0.14141414141414144,0.15151515151515152,0.16161616161616163,0.17171717171717174,0.18181818181818182,0.19191919191919193,0.20202020202020204,0.21212121212121213,0.22222222222222224,0.23232323232323235,0.24242424242424243,0.25252525252525254,0.26262626262626265,0.27272727272727276,0.2828282828282829,0.29292929292929293,0.30303030303030304,0.31313131313131315,0.32323232323232326,0.33333333333333337,0.3434343434343435,0.3535353535353536,0.36363636363636365,0.37373737373737376,0.38383838383838387,0.393939393939394,0.4040404040404041,0.4141414141414142,0.42424242424242425,0.43434343434343436,0.4444444444444445,0.4545454545454546,0.4646464646464647,0.4747474747474748,0.48484848484848486,0.494949494949495,0.5050505050505051,0.5151515151515152,0.5252525252525253,0.5353535353535354,0.5454545454545455,0.5555555555555556,0.5656565656565657,0.5757575757575758,0.5858585858585859,0.595959595959596,0.6060606060606061,0.6161616161616162,0.6262626262626263,0.6363636363636365,0.6464646464646465,0.6565656565656566,0.6666666666666667,0.6767676767676768,0.686868686868687,0.696969696969697,0.7070707070707072,0.7171717171717172,0.7272727272727273,0.7373737373737375,0.7474747474747475,0.7575757575757577,0.7676767676767677,0.7777777777777778,0.787878787878788,0.797979797979798,0.8080808080808082,0.8181818181818182,0.8282828282828284,0.8383838383838385,0.8484848484848485,0.8585858585858587,0.8686868686868687,0.8787878787878789,0.888888888888889,0.8989898989898991,0.9090909090909092,0.9191919191919192,0.9292929292929294,0.9393939393939394,0.9494949494949496,0.9595959595959597,0.9696969696969697,0.9797979797979799,0.98989898989899,1.0 };
        X_Int32 _solarhouse1_inverter_controller_single_phase_pll1_kp_lut__leftIndex;
        X_Int32 _solarhouse1_inverter_controller_single_phase_pll1_kp_lut__rightIndex;
        X_Int32 _solarhouse1_inverter_controller_single_phase_pll1_kp_lut__curAddr;
        double _solarhouse1_inverter_controller_single_phase_pll1_kp_lut__fraction;
    
      double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_signal_switch1__out;
      double _solarhouse2_inverter_controller_single_phase_pll1_kd_lut__lut_table[100] = { -5.19,-5.142818181818182,-5.095636363636364,-5.048454545454546,-5.0012727272727275,-4.954090909090909,-4.9069090909090916,-4.859727272727273,-4.812545454545455,-4.765363636363636,-4.718181818181819,-4.671,-4.623818181818182,-4.576636363636364,-4.529454545454546,-4.482272727272727,-4.43509090909091,-4.387909090909091,-4.340727272727273,-4.2935454545454546,-4.246363636363637,-4.199181818181819,-4.152,-4.104818181818182,-4.057636363636364,-4.010454545454546,-3.9632727272727273,-3.9160909090909093,-3.8689090909090913,-3.821727272727273,-3.774545454545455,-3.727363636363637,-3.6801818181818184,-3.633,-3.585818181818182,-3.538636363636364,-3.4914545454545456,-3.4442727272727276,-3.3970909090909096,-3.349909090909091,-3.3027272727272727,-3.2555454545454547,-3.2083636363636368,-3.1611818181818183,-3.1140000000000003,-3.066818181818182,-3.019636363636364,-2.9724545454545455,-2.9252727272727275,-2.8780909090909095,-2.830909090909091,-2.783727272727273,-2.7365454545454546,-2.6893636363636366,-2.642181818181818,-2.595,-2.547818181818182,-2.5006363636363638,-2.4534545454545458,-2.4062727272727273,-2.3590909090909093,-2.311909090909091,-2.264727272727273,-2.2175454545454545,-2.1703636363636365,-2.1231818181818185,-2.076,-2.028818181818182,-1.9816363636363636,-1.9344545454545456,-1.8872727272727272,-1.8400909090909092,-1.7929090909090908,-1.7457272727272728,-1.6985454545454548,-1.6513636363636364,-1.6041818181818184,-1.557,-1.509818181818182,-1.4626363636363635,-1.4154545454545455,-1.3682727272727275,-1.321090909090909,-1.273909090909091,-1.2267272727272727,-1.1795454545454547,-1.1323636363636362,-1.0851818181818178,-1.0380000000000003,-0.9908181818181818,-0.9436363636363634,-0.8964545454545458,-0.8492727272727274,-0.802090909090909,-0.7549090909090905,-0.707727272727273,-0.6605454545454545,-0.6133636363636361,-0.5661818181818186,-0.519 };
    double _solarhouse2_inverter_controller_single_phase_pll1_kd_lut__value;        double _solarhouse2_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[100] = { 0.0,0.010101010101010102,0.020202020202020204,0.030303030303030304,0.04040404040404041,0.05050505050505051,0.06060606060606061,0.07070707070707072,0.08080808080808081,0.09090909090909091,0.10101010101010102,0.11111111111111112,0.12121212121212122,0.13131313131313133,0.14141414141414144,0.15151515151515152,0.16161616161616163,0.17171717171717174,0.18181818181818182,0.19191919191919193,0.20202020202020204,0.21212121212121213,0.22222222222222224,0.23232323232323235,0.24242424242424243,0.25252525252525254,0.26262626262626265,0.27272727272727276,0.2828282828282829,0.29292929292929293,0.30303030303030304,0.31313131313131315,0.32323232323232326,0.33333333333333337,0.3434343434343435,0.3535353535353536,0.36363636363636365,0.37373737373737376,0.38383838383838387,0.393939393939394,0.4040404040404041,0.4141414141414142,0.42424242424242425,0.43434343434343436,0.4444444444444445,0.4545454545454546,0.4646464646464647,0.4747474747474748,0.48484848484848486,0.494949494949495,0.5050505050505051,0.5151515151515152,0.5252525252525253,0.5353535353535354,0.5454545454545455,0.5555555555555556,0.5656565656565657,0.5757575757575758,0.5858585858585859,0.595959595959596,0.6060606060606061,0.6161616161616162,0.6262626262626263,0.6363636363636365,0.6464646464646465,0.6565656565656566,0.6666666666666667,0.6767676767676768,0.686868686868687,0.696969696969697,0.7070707070707072,0.7171717171717172,0.7272727272727273,0.7373737373737375,0.7474747474747475,0.7575757575757577,0.7676767676767677,0.7777777777777778,0.787878787878788,0.797979797979798,0.8080808080808082,0.8181818181818182,0.8282828282828284,0.8383838383838385,0.8484848484848485,0.8585858585858587,0.8686868686868687,0.8787878787878789,0.888888888888889,0.8989898989898991,0.9090909090909092,0.9191919191919192,0.9292929292929294,0.9393939393939394,0.9494949494949496,0.9595959595959597,0.9696969696969697,0.9797979797979799,0.98989898989899,1.0 };
        X_Int32 _solarhouse2_inverter_controller_single_phase_pll1_kd_lut__leftIndex;
        X_Int32 _solarhouse2_inverter_controller_single_phase_pll1_kd_lut__rightIndex;
        X_Int32 _solarhouse2_inverter_controller_single_phase_pll1_kd_lut__curAddr;
        double _solarhouse2_inverter_controller_single_phase_pll1_kd_lut__fraction;
    
    double _solarhouse2_inverter_controller_single_phase_pll1_ki_lut__lut_table[100] = { 18400.0,18236.565656565657,18073.131313131315,17909.696969696968,17746.262626262625,17582.828282828283,17419.39393939394,17255.959595959597,17092.52525252525,16929.090909090908,16765.656565656565,16602.222222222223,16438.78787878788,16275.353535353535,16111.91919191919,15948.484848484848,15785.050505050505,15621.61616161616,15458.181818181818,15294.747474747473,15131.31313131313,14967.878787878788,14804.444444444445,14641.0101010101,14477.575757575756,14314.141414141413,14150.70707070707,13987.272727272728,13823.838383838383,13660.404040404039,13496.969696969696,13333.535353535353,13170.10101010101,13006.666666666666,12843.232323232322,12679.797979797979,12516.363636363636,12352.929292929293,12189.494949494949,12026.060606060606,11862.626262626261,11699.191919191919,11535.757575757576,11372.323232323231,11208.888888888889,11045.454545454544,10882.020202020201,10718.585858585859,10555.151515151514,10391.717171717171,10228.282828282827,10064.848484848484,9901.414141414141,9737.979797979797,9574.545454545454,9411.111111111111,9247.676767676767,9084.242424242424,8920.80808080808,8757.373737373737,8593.939393939394,8430.50505050505,8267.070707070707,8103.636363636362,7940.202020202019,7776.767676767677,7613.333333333332,7449.898989898989,7286.464646464645,7123.030303030302,6959.595959595959,6796.161616161615,6632.727272727272,6469.2929292929275,6305.858585858585,6142.424242424242,5978.9898989898975,5815.555555555555,5652.121212121212,5488.6868686868675,5325.252525252525,5161.81818181818,4998.383838383837,4834.949494949495,4671.51515151515,4508.080808080807,4344.646464646463,4181.21212121212,4017.7777777777774,3854.343434343433,3690.90909090909,3527.4747474747455,3364.040404040403,3200.60606060606,3037.1717171717155,2873.7373737373728,2710.303030303028,2546.8686868686855,2383.4343434343427,2220.0 };
    double _solarhouse2_inverter_controller_single_phase_pll1_ki_lut__value;        double _solarhouse2_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[100] = { 0.0,0.010101010101010102,0.020202020202020204,0.030303030303030304,0.04040404040404041,0.05050505050505051,0.06060606060606061,0.07070707070707072,0.08080808080808081,0.09090909090909091,0.10101010101010102,0.11111111111111112,0.12121212121212122,0.13131313131313133,0.14141414141414144,0.15151515151515152,0.16161616161616163,0.17171717171717174,0.18181818181818182,0.19191919191919193,0.20202020202020204,0.21212121212121213,0.22222222222222224,0.23232323232323235,0.24242424242424243,0.25252525252525254,0.26262626262626265,0.27272727272727276,0.2828282828282829,0.29292929292929293,0.30303030303030304,0.31313131313131315,0.32323232323232326,0.33333333333333337,0.3434343434343435,0.3535353535353536,0.36363636363636365,0.37373737373737376,0.38383838383838387,0.393939393939394,0.4040404040404041,0.4141414141414142,0.42424242424242425,0.43434343434343436,0.4444444444444445,0.4545454545454546,0.4646464646464647,0.4747474747474748,0.48484848484848486,0.494949494949495,0.5050505050505051,0.5151515151515152,0.5252525252525253,0.5353535353535354,0.5454545454545455,0.5555555555555556,0.5656565656565657,0.5757575757575758,0.5858585858585859,0.595959595959596,0.6060606060606061,0.6161616161616162,0.6262626262626263,0.6363636363636365,0.6464646464646465,0.6565656565656566,0.6666666666666667,0.6767676767676768,0.686868686868687,0.696969696969697,0.7070707070707072,0.7171717171717172,0.7272727272727273,0.7373737373737375,0.7474747474747475,0.7575757575757577,0.7676767676767677,0.7777777777777778,0.787878787878788,0.797979797979798,0.8080808080808082,0.8181818181818182,0.8282828282828284,0.8383838383838385,0.8484848484848485,0.8585858585858587,0.8686868686868687,0.8787878787878789,0.888888888888889,0.8989898989898991,0.9090909090909092,0.9191919191919192,0.9292929292929294,0.9393939393939394,0.9494949494949496,0.9595959595959597,0.9696969696969697,0.9797979797979799,0.98989898989899,1.0 };
        X_Int32 _solarhouse2_inverter_controller_single_phase_pll1_ki_lut__leftIndex;
        X_Int32 _solarhouse2_inverter_controller_single_phase_pll1_ki_lut__rightIndex;
        X_Int32 _solarhouse2_inverter_controller_single_phase_pll1_ki_lut__curAddr;
        double _solarhouse2_inverter_controller_single_phase_pll1_ki_lut__fraction;
    
    double _solarhouse2_inverter_controller_single_phase_pll1_kp_lut__lut_table[100] = { 4810.0,4766.737373737374,4723.474747474747,4680.212121212121,4636.949494949495,4593.686868686868,4550.424242424242,4507.161616161617,4463.89898989899,4420.636363636364,4377.373737373738,4334.111111111111,4290.848484848485,4247.585858585859,4204.323232323232,4161.060606060606,4117.79797979798,4074.5353535353534,4031.272727272727,3988.010101010101,3944.747474747475,3901.4848484848485,3858.222222222222,3814.959595959596,3771.69696969697,3728.4343434343436,3685.1717171717173,3641.909090909091,3598.6464646464647,3555.3838383838383,3512.121212121212,3468.8585858585857,3425.5959595959594,3382.333333333333,3339.070707070707,3295.808080808081,3252.5454545454545,3209.282828282828,3166.0202020202023,3122.757575757576,3079.4949494949497,3036.2323232323233,2992.969696969697,2949.7070707070707,2906.4444444444443,2863.181818181818,2819.9191919191917,2776.6565656565654,2733.3939393939395,2690.131313131313,2646.868686868687,2603.6060606060605,2560.343434343434,2517.080808080808,2473.818181818182,2430.5555555555557,2387.2929292929293,2344.030303030303,2300.7676767676767,2257.5050505050503,2214.242424242424,2170.979797979798,2127.717171717172,2084.4545454545455,2041.1919191919192,1997.9292929292928,1954.6666666666665,1911.4040404040402,1868.1414141414143,1824.878787878788,1781.6161616161617,1738.3535353535353,1695.090909090909,1651.8282828282827,1608.5656565656564,1565.3030303030305,1522.0404040404042,1478.7777777777778,1435.5151515151515,1392.2525252525252,1348.9898989898988,1305.7272727272725,1262.4646464646466,1219.2020202020203,1175.939393939394,1132.6767676767677,1089.4141414141413,1046.151515151515,1002.8888888888887,959.6262626262628,916.3636363636365,873.1010101010102,829.8383838383838,786.5757575757575,743.3131313131312,700.0505050505053,656.787878787879,613.5252525252527,570.2626262626263,527.0 };
    double _solarhouse2_inverter_controller_single_phase_pll1_kp_lut__value;        double _solarhouse2_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[100] = { 0.0,0.010101010101010102,0.020202020202020204,0.030303030303030304,0.04040404040404041,0.05050505050505051,0.06060606060606061,0.07070707070707072,0.08080808080808081,0.09090909090909091,0.10101010101010102,0.11111111111111112,0.12121212121212122,0.13131313131313133,0.14141414141414144,0.15151515151515152,0.16161616161616163,0.17171717171717174,0.18181818181818182,0.19191919191919193,0.20202020202020204,0.21212121212121213,0.22222222222222224,0.23232323232323235,0.24242424242424243,0.25252525252525254,0.26262626262626265,0.27272727272727276,0.2828282828282829,0.29292929292929293,0.30303030303030304,0.31313131313131315,0.32323232323232326,0.33333333333333337,0.3434343434343435,0.3535353535353536,0.36363636363636365,0.37373737373737376,0.38383838383838387,0.393939393939394,0.4040404040404041,0.4141414141414142,0.42424242424242425,0.43434343434343436,0.4444444444444445,0.4545454545454546,0.4646464646464647,0.4747474747474748,0.48484848484848486,0.494949494949495,0.5050505050505051,0.5151515151515152,0.5252525252525253,0.5353535353535354,0.5454545454545455,0.5555555555555556,0.5656565656565657,0.5757575757575758,0.5858585858585859,0.595959595959596,0.6060606060606061,0.6161616161616162,0.6262626262626263,0.6363636363636365,0.6464646464646465,0.6565656565656566,0.6666666666666667,0.6767676767676768,0.686868686868687,0.696969696969697,0.7070707070707072,0.7171717171717172,0.7272727272727273,0.7373737373737375,0.7474747474747475,0.7575757575757577,0.7676767676767677,0.7777777777777778,0.787878787878788,0.797979797979798,0.8080808080808082,0.8181818181818182,0.8282828282828284,0.8383838383838385,0.8484848484848485,0.8585858585858587,0.8686868686868687,0.8787878787878789,0.888888888888889,0.8989898989898991,0.9090909090909092,0.9191919191919192,0.9292929292929294,0.9393939393939394,0.9494949494949496,0.9595959595959597,0.9696969696969697,0.9797979797979799,0.98989898989899,1.0 };
        X_Int32 _solarhouse2_inverter_controller_single_phase_pll1_kp_lut__leftIndex;
        X_Int32 _solarhouse2_inverter_controller_single_phase_pll1_kp_lut__rightIndex;
        X_Int32 _solarhouse2_inverter_controller_single_phase_pll1_kp_lut__curAddr;
        double _solarhouse2_inverter_controller_single_phase_pll1_kp_lut__fraction;
    
      double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_signal_switch1__out;
      double _solarhouse3_inverter_controller_single_phase_pll1_kd_lut__lut_table[100] = { -5.19,-5.142818181818182,-5.095636363636364,-5.048454545454546,-5.0012727272727275,-4.954090909090909,-4.9069090909090916,-4.859727272727273,-4.812545454545455,-4.765363636363636,-4.718181818181819,-4.671,-4.623818181818182,-4.576636363636364,-4.529454545454546,-4.482272727272727,-4.43509090909091,-4.387909090909091,-4.340727272727273,-4.2935454545454546,-4.246363636363637,-4.199181818181819,-4.152,-4.104818181818182,-4.057636363636364,-4.010454545454546,-3.9632727272727273,-3.9160909090909093,-3.8689090909090913,-3.821727272727273,-3.774545454545455,-3.727363636363637,-3.6801818181818184,-3.633,-3.585818181818182,-3.538636363636364,-3.4914545454545456,-3.4442727272727276,-3.3970909090909096,-3.349909090909091,-3.3027272727272727,-3.2555454545454547,-3.2083636363636368,-3.1611818181818183,-3.1140000000000003,-3.066818181818182,-3.019636363636364,-2.9724545454545455,-2.9252727272727275,-2.8780909090909095,-2.830909090909091,-2.783727272727273,-2.7365454545454546,-2.6893636363636366,-2.642181818181818,-2.595,-2.547818181818182,-2.5006363636363638,-2.4534545454545458,-2.4062727272727273,-2.3590909090909093,-2.311909090909091,-2.264727272727273,-2.2175454545454545,-2.1703636363636365,-2.1231818181818185,-2.076,-2.028818181818182,-1.9816363636363636,-1.9344545454545456,-1.8872727272727272,-1.8400909090909092,-1.7929090909090908,-1.7457272727272728,-1.6985454545454548,-1.6513636363636364,-1.6041818181818184,-1.557,-1.509818181818182,-1.4626363636363635,-1.4154545454545455,-1.3682727272727275,-1.321090909090909,-1.273909090909091,-1.2267272727272727,-1.1795454545454547,-1.1323636363636362,-1.0851818181818178,-1.0380000000000003,-0.9908181818181818,-0.9436363636363634,-0.8964545454545458,-0.8492727272727274,-0.802090909090909,-0.7549090909090905,-0.707727272727273,-0.6605454545454545,-0.6133636363636361,-0.5661818181818186,-0.519 };
    double _solarhouse3_inverter_controller_single_phase_pll1_kd_lut__value;        double _solarhouse3_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[100] = { 0.0,0.010101010101010102,0.020202020202020204,0.030303030303030304,0.04040404040404041,0.05050505050505051,0.06060606060606061,0.07070707070707072,0.08080808080808081,0.09090909090909091,0.10101010101010102,0.11111111111111112,0.12121212121212122,0.13131313131313133,0.14141414141414144,0.15151515151515152,0.16161616161616163,0.17171717171717174,0.18181818181818182,0.19191919191919193,0.20202020202020204,0.21212121212121213,0.22222222222222224,0.23232323232323235,0.24242424242424243,0.25252525252525254,0.26262626262626265,0.27272727272727276,0.2828282828282829,0.29292929292929293,0.30303030303030304,0.31313131313131315,0.32323232323232326,0.33333333333333337,0.3434343434343435,0.3535353535353536,0.36363636363636365,0.37373737373737376,0.38383838383838387,0.393939393939394,0.4040404040404041,0.4141414141414142,0.42424242424242425,0.43434343434343436,0.4444444444444445,0.4545454545454546,0.4646464646464647,0.4747474747474748,0.48484848484848486,0.494949494949495,0.5050505050505051,0.5151515151515152,0.5252525252525253,0.5353535353535354,0.5454545454545455,0.5555555555555556,0.5656565656565657,0.5757575757575758,0.5858585858585859,0.595959595959596,0.6060606060606061,0.6161616161616162,0.6262626262626263,0.6363636363636365,0.6464646464646465,0.6565656565656566,0.6666666666666667,0.6767676767676768,0.686868686868687,0.696969696969697,0.7070707070707072,0.7171717171717172,0.7272727272727273,0.7373737373737375,0.7474747474747475,0.7575757575757577,0.7676767676767677,0.7777777777777778,0.787878787878788,0.797979797979798,0.8080808080808082,0.8181818181818182,0.8282828282828284,0.8383838383838385,0.8484848484848485,0.8585858585858587,0.8686868686868687,0.8787878787878789,0.888888888888889,0.8989898989898991,0.9090909090909092,0.9191919191919192,0.9292929292929294,0.9393939393939394,0.9494949494949496,0.9595959595959597,0.9696969696969697,0.9797979797979799,0.98989898989899,1.0 };
        X_Int32 _solarhouse3_inverter_controller_single_phase_pll1_kd_lut__leftIndex;
        X_Int32 _solarhouse3_inverter_controller_single_phase_pll1_kd_lut__rightIndex;
        X_Int32 _solarhouse3_inverter_controller_single_phase_pll1_kd_lut__curAddr;
        double _solarhouse3_inverter_controller_single_phase_pll1_kd_lut__fraction;
    
    double _solarhouse3_inverter_controller_single_phase_pll1_ki_lut__lut_table[100] = { 18400.0,18236.565656565657,18073.131313131315,17909.696969696968,17746.262626262625,17582.828282828283,17419.39393939394,17255.959595959597,17092.52525252525,16929.090909090908,16765.656565656565,16602.222222222223,16438.78787878788,16275.353535353535,16111.91919191919,15948.484848484848,15785.050505050505,15621.61616161616,15458.181818181818,15294.747474747473,15131.31313131313,14967.878787878788,14804.444444444445,14641.0101010101,14477.575757575756,14314.141414141413,14150.70707070707,13987.272727272728,13823.838383838383,13660.404040404039,13496.969696969696,13333.535353535353,13170.10101010101,13006.666666666666,12843.232323232322,12679.797979797979,12516.363636363636,12352.929292929293,12189.494949494949,12026.060606060606,11862.626262626261,11699.191919191919,11535.757575757576,11372.323232323231,11208.888888888889,11045.454545454544,10882.020202020201,10718.585858585859,10555.151515151514,10391.717171717171,10228.282828282827,10064.848484848484,9901.414141414141,9737.979797979797,9574.545454545454,9411.111111111111,9247.676767676767,9084.242424242424,8920.80808080808,8757.373737373737,8593.939393939394,8430.50505050505,8267.070707070707,8103.636363636362,7940.202020202019,7776.767676767677,7613.333333333332,7449.898989898989,7286.464646464645,7123.030303030302,6959.595959595959,6796.161616161615,6632.727272727272,6469.2929292929275,6305.858585858585,6142.424242424242,5978.9898989898975,5815.555555555555,5652.121212121212,5488.6868686868675,5325.252525252525,5161.81818181818,4998.383838383837,4834.949494949495,4671.51515151515,4508.080808080807,4344.646464646463,4181.21212121212,4017.7777777777774,3854.343434343433,3690.90909090909,3527.4747474747455,3364.040404040403,3200.60606060606,3037.1717171717155,2873.7373737373728,2710.303030303028,2546.8686868686855,2383.4343434343427,2220.0 };
    double _solarhouse3_inverter_controller_single_phase_pll1_ki_lut__value;        double _solarhouse3_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[100] = { 0.0,0.010101010101010102,0.020202020202020204,0.030303030303030304,0.04040404040404041,0.05050505050505051,0.06060606060606061,0.07070707070707072,0.08080808080808081,0.09090909090909091,0.10101010101010102,0.11111111111111112,0.12121212121212122,0.13131313131313133,0.14141414141414144,0.15151515151515152,0.16161616161616163,0.17171717171717174,0.18181818181818182,0.19191919191919193,0.20202020202020204,0.21212121212121213,0.22222222222222224,0.23232323232323235,0.24242424242424243,0.25252525252525254,0.26262626262626265,0.27272727272727276,0.2828282828282829,0.29292929292929293,0.30303030303030304,0.31313131313131315,0.32323232323232326,0.33333333333333337,0.3434343434343435,0.3535353535353536,0.36363636363636365,0.37373737373737376,0.38383838383838387,0.393939393939394,0.4040404040404041,0.4141414141414142,0.42424242424242425,0.43434343434343436,0.4444444444444445,0.4545454545454546,0.4646464646464647,0.4747474747474748,0.48484848484848486,0.494949494949495,0.5050505050505051,0.5151515151515152,0.5252525252525253,0.5353535353535354,0.5454545454545455,0.5555555555555556,0.5656565656565657,0.5757575757575758,0.5858585858585859,0.595959595959596,0.6060606060606061,0.6161616161616162,0.6262626262626263,0.6363636363636365,0.6464646464646465,0.6565656565656566,0.6666666666666667,0.6767676767676768,0.686868686868687,0.696969696969697,0.7070707070707072,0.7171717171717172,0.7272727272727273,0.7373737373737375,0.7474747474747475,0.7575757575757577,0.7676767676767677,0.7777777777777778,0.787878787878788,0.797979797979798,0.8080808080808082,0.8181818181818182,0.8282828282828284,0.8383838383838385,0.8484848484848485,0.8585858585858587,0.8686868686868687,0.8787878787878789,0.888888888888889,0.8989898989898991,0.9090909090909092,0.9191919191919192,0.9292929292929294,0.9393939393939394,0.9494949494949496,0.9595959595959597,0.9696969696969697,0.9797979797979799,0.98989898989899,1.0 };
        X_Int32 _solarhouse3_inverter_controller_single_phase_pll1_ki_lut__leftIndex;
        X_Int32 _solarhouse3_inverter_controller_single_phase_pll1_ki_lut__rightIndex;
        X_Int32 _solarhouse3_inverter_controller_single_phase_pll1_ki_lut__curAddr;
        double _solarhouse3_inverter_controller_single_phase_pll1_ki_lut__fraction;
    
    double _solarhouse3_inverter_controller_single_phase_pll1_kp_lut__lut_table[100] = { 4810.0,4766.737373737374,4723.474747474747,4680.212121212121,4636.949494949495,4593.686868686868,4550.424242424242,4507.161616161617,4463.89898989899,4420.636363636364,4377.373737373738,4334.111111111111,4290.848484848485,4247.585858585859,4204.323232323232,4161.060606060606,4117.79797979798,4074.5353535353534,4031.272727272727,3988.010101010101,3944.747474747475,3901.4848484848485,3858.222222222222,3814.959595959596,3771.69696969697,3728.4343434343436,3685.1717171717173,3641.909090909091,3598.6464646464647,3555.3838383838383,3512.121212121212,3468.8585858585857,3425.5959595959594,3382.333333333333,3339.070707070707,3295.808080808081,3252.5454545454545,3209.282828282828,3166.0202020202023,3122.757575757576,3079.4949494949497,3036.2323232323233,2992.969696969697,2949.7070707070707,2906.4444444444443,2863.181818181818,2819.9191919191917,2776.6565656565654,2733.3939393939395,2690.131313131313,2646.868686868687,2603.6060606060605,2560.343434343434,2517.080808080808,2473.818181818182,2430.5555555555557,2387.2929292929293,2344.030303030303,2300.7676767676767,2257.5050505050503,2214.242424242424,2170.979797979798,2127.717171717172,2084.4545454545455,2041.1919191919192,1997.9292929292928,1954.6666666666665,1911.4040404040402,1868.1414141414143,1824.878787878788,1781.6161616161617,1738.3535353535353,1695.090909090909,1651.8282828282827,1608.5656565656564,1565.3030303030305,1522.0404040404042,1478.7777777777778,1435.5151515151515,1392.2525252525252,1348.9898989898988,1305.7272727272725,1262.4646464646466,1219.2020202020203,1175.939393939394,1132.6767676767677,1089.4141414141413,1046.151515151515,1002.8888888888887,959.6262626262628,916.3636363636365,873.1010101010102,829.8383838383838,786.5757575757575,743.3131313131312,700.0505050505053,656.787878787879,613.5252525252527,570.2626262626263,527.0 };
    double _solarhouse3_inverter_controller_single_phase_pll1_kp_lut__value;        double _solarhouse3_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[100] = { 0.0,0.010101010101010102,0.020202020202020204,0.030303030303030304,0.04040404040404041,0.05050505050505051,0.06060606060606061,0.07070707070707072,0.08080808080808081,0.09090909090909091,0.10101010101010102,0.11111111111111112,0.12121212121212122,0.13131313131313133,0.14141414141414144,0.15151515151515152,0.16161616161616163,0.17171717171717174,0.18181818181818182,0.19191919191919193,0.20202020202020204,0.21212121212121213,0.22222222222222224,0.23232323232323235,0.24242424242424243,0.25252525252525254,0.26262626262626265,0.27272727272727276,0.2828282828282829,0.29292929292929293,0.30303030303030304,0.31313131313131315,0.32323232323232326,0.33333333333333337,0.3434343434343435,0.3535353535353536,0.36363636363636365,0.37373737373737376,0.38383838383838387,0.393939393939394,0.4040404040404041,0.4141414141414142,0.42424242424242425,0.43434343434343436,0.4444444444444445,0.4545454545454546,0.4646464646464647,0.4747474747474748,0.48484848484848486,0.494949494949495,0.5050505050505051,0.5151515151515152,0.5252525252525253,0.5353535353535354,0.5454545454545455,0.5555555555555556,0.5656565656565657,0.5757575757575758,0.5858585858585859,0.595959595959596,0.6060606060606061,0.6161616161616162,0.6262626262626263,0.6363636363636365,0.6464646464646465,0.6565656565656566,0.6666666666666667,0.6767676767676768,0.686868686868687,0.696969696969697,0.7070707070707072,0.7171717171717172,0.7272727272727273,0.7373737373737375,0.7474747474747475,0.7575757575757577,0.7676767676767677,0.7777777777777778,0.787878787878788,0.797979797979798,0.8080808080808082,0.8181818181818182,0.8282828282828284,0.8383838383838385,0.8484848484848485,0.8585858585858587,0.8686868686868687,0.8787878787878789,0.888888888888889,0.8989898989898991,0.9090909090909092,0.9191919191919192,0.9292929292929294,0.9393939393939394,0.9494949494949496,0.9595959595959597,0.9696969696969697,0.9797979797979799,0.98989898989899,1.0 };
        X_Int32 _solarhouse3_inverter_controller_single_phase_pll1_kp_lut__leftIndex;
        X_Int32 _solarhouse3_inverter_controller_single_phase_pll1_kp_lut__rightIndex;
        X_Int32 _solarhouse3_inverter_controller_single_phase_pll1_kp_lut__curAddr;
        double _solarhouse3_inverter_controller_single_phase_pll1_kp_lut__fraction;
    
      double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_signal_switch1__out;
      double _solarhouse4_inverter_controller_single_phase_pll1_kd_lut__lut_table[100] = { -5.19,-5.142818181818182,-5.095636363636364,-5.048454545454546,-5.0012727272727275,-4.954090909090909,-4.9069090909090916,-4.859727272727273,-4.812545454545455,-4.765363636363636,-4.718181818181819,-4.671,-4.623818181818182,-4.576636363636364,-4.529454545454546,-4.482272727272727,-4.43509090909091,-4.387909090909091,-4.340727272727273,-4.2935454545454546,-4.246363636363637,-4.199181818181819,-4.152,-4.104818181818182,-4.057636363636364,-4.010454545454546,-3.9632727272727273,-3.9160909090909093,-3.8689090909090913,-3.821727272727273,-3.774545454545455,-3.727363636363637,-3.6801818181818184,-3.633,-3.585818181818182,-3.538636363636364,-3.4914545454545456,-3.4442727272727276,-3.3970909090909096,-3.349909090909091,-3.3027272727272727,-3.2555454545454547,-3.2083636363636368,-3.1611818181818183,-3.1140000000000003,-3.066818181818182,-3.019636363636364,-2.9724545454545455,-2.9252727272727275,-2.8780909090909095,-2.830909090909091,-2.783727272727273,-2.7365454545454546,-2.6893636363636366,-2.642181818181818,-2.595,-2.547818181818182,-2.5006363636363638,-2.4534545454545458,-2.4062727272727273,-2.3590909090909093,-2.311909090909091,-2.264727272727273,-2.2175454545454545,-2.1703636363636365,-2.1231818181818185,-2.076,-2.028818181818182,-1.9816363636363636,-1.9344545454545456,-1.8872727272727272,-1.8400909090909092,-1.7929090909090908,-1.7457272727272728,-1.6985454545454548,-1.6513636363636364,-1.6041818181818184,-1.557,-1.509818181818182,-1.4626363636363635,-1.4154545454545455,-1.3682727272727275,-1.321090909090909,-1.273909090909091,-1.2267272727272727,-1.1795454545454547,-1.1323636363636362,-1.0851818181818178,-1.0380000000000003,-0.9908181818181818,-0.9436363636363634,-0.8964545454545458,-0.8492727272727274,-0.802090909090909,-0.7549090909090905,-0.707727272727273,-0.6605454545454545,-0.6133636363636361,-0.5661818181818186,-0.519 };
    double _solarhouse4_inverter_controller_single_phase_pll1_kd_lut__value;        double _solarhouse4_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[100] = { 0.0,0.010101010101010102,0.020202020202020204,0.030303030303030304,0.04040404040404041,0.05050505050505051,0.06060606060606061,0.07070707070707072,0.08080808080808081,0.09090909090909091,0.10101010101010102,0.11111111111111112,0.12121212121212122,0.13131313131313133,0.14141414141414144,0.15151515151515152,0.16161616161616163,0.17171717171717174,0.18181818181818182,0.19191919191919193,0.20202020202020204,0.21212121212121213,0.22222222222222224,0.23232323232323235,0.24242424242424243,0.25252525252525254,0.26262626262626265,0.27272727272727276,0.2828282828282829,0.29292929292929293,0.30303030303030304,0.31313131313131315,0.32323232323232326,0.33333333333333337,0.3434343434343435,0.3535353535353536,0.36363636363636365,0.37373737373737376,0.38383838383838387,0.393939393939394,0.4040404040404041,0.4141414141414142,0.42424242424242425,0.43434343434343436,0.4444444444444445,0.4545454545454546,0.4646464646464647,0.4747474747474748,0.48484848484848486,0.494949494949495,0.5050505050505051,0.5151515151515152,0.5252525252525253,0.5353535353535354,0.5454545454545455,0.5555555555555556,0.5656565656565657,0.5757575757575758,0.5858585858585859,0.595959595959596,0.6060606060606061,0.6161616161616162,0.6262626262626263,0.6363636363636365,0.6464646464646465,0.6565656565656566,0.6666666666666667,0.6767676767676768,0.686868686868687,0.696969696969697,0.7070707070707072,0.7171717171717172,0.7272727272727273,0.7373737373737375,0.7474747474747475,0.7575757575757577,0.7676767676767677,0.7777777777777778,0.787878787878788,0.797979797979798,0.8080808080808082,0.8181818181818182,0.8282828282828284,0.8383838383838385,0.8484848484848485,0.8585858585858587,0.8686868686868687,0.8787878787878789,0.888888888888889,0.8989898989898991,0.9090909090909092,0.9191919191919192,0.9292929292929294,0.9393939393939394,0.9494949494949496,0.9595959595959597,0.9696969696969697,0.9797979797979799,0.98989898989899,1.0 };
        X_Int32 _solarhouse4_inverter_controller_single_phase_pll1_kd_lut__leftIndex;
        X_Int32 _solarhouse4_inverter_controller_single_phase_pll1_kd_lut__rightIndex;
        X_Int32 _solarhouse4_inverter_controller_single_phase_pll1_kd_lut__curAddr;
        double _solarhouse4_inverter_controller_single_phase_pll1_kd_lut__fraction;
    
    double _solarhouse4_inverter_controller_single_phase_pll1_ki_lut__lut_table[100] = { 18400.0,18236.565656565657,18073.131313131315,17909.696969696968,17746.262626262625,17582.828282828283,17419.39393939394,17255.959595959597,17092.52525252525,16929.090909090908,16765.656565656565,16602.222222222223,16438.78787878788,16275.353535353535,16111.91919191919,15948.484848484848,15785.050505050505,15621.61616161616,15458.181818181818,15294.747474747473,15131.31313131313,14967.878787878788,14804.444444444445,14641.0101010101,14477.575757575756,14314.141414141413,14150.70707070707,13987.272727272728,13823.838383838383,13660.404040404039,13496.969696969696,13333.535353535353,13170.10101010101,13006.666666666666,12843.232323232322,12679.797979797979,12516.363636363636,12352.929292929293,12189.494949494949,12026.060606060606,11862.626262626261,11699.191919191919,11535.757575757576,11372.323232323231,11208.888888888889,11045.454545454544,10882.020202020201,10718.585858585859,10555.151515151514,10391.717171717171,10228.282828282827,10064.848484848484,9901.414141414141,9737.979797979797,9574.545454545454,9411.111111111111,9247.676767676767,9084.242424242424,8920.80808080808,8757.373737373737,8593.939393939394,8430.50505050505,8267.070707070707,8103.636363636362,7940.202020202019,7776.767676767677,7613.333333333332,7449.898989898989,7286.464646464645,7123.030303030302,6959.595959595959,6796.161616161615,6632.727272727272,6469.2929292929275,6305.858585858585,6142.424242424242,5978.9898989898975,5815.555555555555,5652.121212121212,5488.6868686868675,5325.252525252525,5161.81818181818,4998.383838383837,4834.949494949495,4671.51515151515,4508.080808080807,4344.646464646463,4181.21212121212,4017.7777777777774,3854.343434343433,3690.90909090909,3527.4747474747455,3364.040404040403,3200.60606060606,3037.1717171717155,2873.7373737373728,2710.303030303028,2546.8686868686855,2383.4343434343427,2220.0 };
    double _solarhouse4_inverter_controller_single_phase_pll1_ki_lut__value;        double _solarhouse4_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[100] = { 0.0,0.010101010101010102,0.020202020202020204,0.030303030303030304,0.04040404040404041,0.05050505050505051,0.06060606060606061,0.07070707070707072,0.08080808080808081,0.09090909090909091,0.10101010101010102,0.11111111111111112,0.12121212121212122,0.13131313131313133,0.14141414141414144,0.15151515151515152,0.16161616161616163,0.17171717171717174,0.18181818181818182,0.19191919191919193,0.20202020202020204,0.21212121212121213,0.22222222222222224,0.23232323232323235,0.24242424242424243,0.25252525252525254,0.26262626262626265,0.27272727272727276,0.2828282828282829,0.29292929292929293,0.30303030303030304,0.31313131313131315,0.32323232323232326,0.33333333333333337,0.3434343434343435,0.3535353535353536,0.36363636363636365,0.37373737373737376,0.38383838383838387,0.393939393939394,0.4040404040404041,0.4141414141414142,0.42424242424242425,0.43434343434343436,0.4444444444444445,0.4545454545454546,0.4646464646464647,0.4747474747474748,0.48484848484848486,0.494949494949495,0.5050505050505051,0.5151515151515152,0.5252525252525253,0.5353535353535354,0.5454545454545455,0.5555555555555556,0.5656565656565657,0.5757575757575758,0.5858585858585859,0.595959595959596,0.6060606060606061,0.6161616161616162,0.6262626262626263,0.6363636363636365,0.6464646464646465,0.6565656565656566,0.6666666666666667,0.6767676767676768,0.686868686868687,0.696969696969697,0.7070707070707072,0.7171717171717172,0.7272727272727273,0.7373737373737375,0.7474747474747475,0.7575757575757577,0.7676767676767677,0.7777777777777778,0.787878787878788,0.797979797979798,0.8080808080808082,0.8181818181818182,0.8282828282828284,0.8383838383838385,0.8484848484848485,0.8585858585858587,0.8686868686868687,0.8787878787878789,0.888888888888889,0.8989898989898991,0.9090909090909092,0.9191919191919192,0.9292929292929294,0.9393939393939394,0.9494949494949496,0.9595959595959597,0.9696969696969697,0.9797979797979799,0.98989898989899,1.0 };
        X_Int32 _solarhouse4_inverter_controller_single_phase_pll1_ki_lut__leftIndex;
        X_Int32 _solarhouse4_inverter_controller_single_phase_pll1_ki_lut__rightIndex;
        X_Int32 _solarhouse4_inverter_controller_single_phase_pll1_ki_lut__curAddr;
        double _solarhouse4_inverter_controller_single_phase_pll1_ki_lut__fraction;
    
    double _solarhouse4_inverter_controller_single_phase_pll1_kp_lut__lut_table[100] = { 4810.0,4766.737373737374,4723.474747474747,4680.212121212121,4636.949494949495,4593.686868686868,4550.424242424242,4507.161616161617,4463.89898989899,4420.636363636364,4377.373737373738,4334.111111111111,4290.848484848485,4247.585858585859,4204.323232323232,4161.060606060606,4117.79797979798,4074.5353535353534,4031.272727272727,3988.010101010101,3944.747474747475,3901.4848484848485,3858.222222222222,3814.959595959596,3771.69696969697,3728.4343434343436,3685.1717171717173,3641.909090909091,3598.6464646464647,3555.3838383838383,3512.121212121212,3468.8585858585857,3425.5959595959594,3382.333333333333,3339.070707070707,3295.808080808081,3252.5454545454545,3209.282828282828,3166.0202020202023,3122.757575757576,3079.4949494949497,3036.2323232323233,2992.969696969697,2949.7070707070707,2906.4444444444443,2863.181818181818,2819.9191919191917,2776.6565656565654,2733.3939393939395,2690.131313131313,2646.868686868687,2603.6060606060605,2560.343434343434,2517.080808080808,2473.818181818182,2430.5555555555557,2387.2929292929293,2344.030303030303,2300.7676767676767,2257.5050505050503,2214.242424242424,2170.979797979798,2127.717171717172,2084.4545454545455,2041.1919191919192,1997.9292929292928,1954.6666666666665,1911.4040404040402,1868.1414141414143,1824.878787878788,1781.6161616161617,1738.3535353535353,1695.090909090909,1651.8282828282827,1608.5656565656564,1565.3030303030305,1522.0404040404042,1478.7777777777778,1435.5151515151515,1392.2525252525252,1348.9898989898988,1305.7272727272725,1262.4646464646466,1219.2020202020203,1175.939393939394,1132.6767676767677,1089.4141414141413,1046.151515151515,1002.8888888888887,959.6262626262628,916.3636363636365,873.1010101010102,829.8383838383838,786.5757575757575,743.3131313131312,700.0505050505053,656.787878787879,613.5252525252527,570.2626262626263,527.0 };
    double _solarhouse4_inverter_controller_single_phase_pll1_kp_lut__value;        double _solarhouse4_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[100] = { 0.0,0.010101010101010102,0.020202020202020204,0.030303030303030304,0.04040404040404041,0.05050505050505051,0.06060606060606061,0.07070707070707072,0.08080808080808081,0.09090909090909091,0.10101010101010102,0.11111111111111112,0.12121212121212122,0.13131313131313133,0.14141414141414144,0.15151515151515152,0.16161616161616163,0.17171717171717174,0.18181818181818182,0.19191919191919193,0.20202020202020204,0.21212121212121213,0.22222222222222224,0.23232323232323235,0.24242424242424243,0.25252525252525254,0.26262626262626265,0.27272727272727276,0.2828282828282829,0.29292929292929293,0.30303030303030304,0.31313131313131315,0.32323232323232326,0.33333333333333337,0.3434343434343435,0.3535353535353536,0.36363636363636365,0.37373737373737376,0.38383838383838387,0.393939393939394,0.4040404040404041,0.4141414141414142,0.42424242424242425,0.43434343434343436,0.4444444444444445,0.4545454545454546,0.4646464646464647,0.4747474747474748,0.48484848484848486,0.494949494949495,0.5050505050505051,0.5151515151515152,0.5252525252525253,0.5353535353535354,0.5454545454545455,0.5555555555555556,0.5656565656565657,0.5757575757575758,0.5858585858585859,0.595959595959596,0.6060606060606061,0.6161616161616162,0.6262626262626263,0.6363636363636365,0.6464646464646465,0.6565656565656566,0.6666666666666667,0.6767676767676768,0.686868686868687,0.696969696969697,0.7070707070707072,0.7171717171717172,0.7272727272727273,0.7373737373737375,0.7474747474747475,0.7575757575757577,0.7676767676767677,0.7777777777777778,0.787878787878788,0.797979797979798,0.8080808080808082,0.8181818181818182,0.8282828282828284,0.8383838383838385,0.8484848484848485,0.8585858585858587,0.8686868686868687,0.8787878787878789,0.888888888888889,0.8989898989898991,0.9090909090909092,0.9191919191919192,0.9292929292929294,0.9393939393939394,0.9494949494949496,0.9595959595959597,0.9696969696969697,0.9797979797979799,0.98989898989899,1.0 };
        X_Int32 _solarhouse4_inverter_controller_single_phase_pll1_kp_lut__leftIndex;
        X_Int32 _solarhouse4_inverter_controller_single_phase_pll1_kp_lut__rightIndex;
        X_Int32 _solarhouse4_inverter_controller_single_phase_pll1_kp_lut__curAddr;
        double _solarhouse4_inverter_controller_single_phase_pll1_kp_lut__fraction;
    
  double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product1__out;
double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product2__out;
double _ess_inverter_controller_single_phase_pll1_product6__out;
double _ess_inverter_controller_single_phase_pll1_product5__out;
double _ess_inverter_controller_single_phase_pll1_product7__out;
  double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product1__out;
double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product2__out;
double _solarhouse1_inverter_controller_single_phase_pll1_product6__out;
double _solarhouse1_inverter_controller_single_phase_pll1_product5__out;
double _solarhouse1_inverter_controller_single_phase_pll1_product7__out;
  double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product1__out;
double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product2__out;
double _solarhouse2_inverter_controller_single_phase_pll1_product6__out;
double _solarhouse2_inverter_controller_single_phase_pll1_product5__out;
double _solarhouse2_inverter_controller_single_phase_pll1_product7__out;
  double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product1__out;
double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product2__out;
double _solarhouse3_inverter_controller_single_phase_pll1_product6__out;
double _solarhouse3_inverter_controller_single_phase_pll1_product5__out;
double _solarhouse3_inverter_controller_single_phase_pll1_product7__out;
  double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product1__out;
double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product2__out;
double _solarhouse4_inverter_controller_single_phase_pll1_product6__out;
double _solarhouse4_inverter_controller_single_phase_pll1_product5__out;
double _solarhouse4_inverter_controller_single_phase_pll1_product7__out;
        double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum9__out;
          double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum8__out;
              double _ess_inverter_controller_single_phase_pll1_discrete_transfer_function1__out;
        double _ess_inverter_controller_single_phase_pll1_discrete_transfer_function1__b_coeff[2] = {1.0, -1.0};
        double _ess_inverter_controller_single_phase_pll1_discrete_transfer_function1__a_coeff[2] = {1.0, -0.31237439248248716};
        double _ess_inverter_controller_single_phase_pll1_discrete_transfer_function1__a_sum;
        double _ess_inverter_controller_single_phase_pll1_discrete_transfer_function1__b_sum;
        double _ess_inverter_controller_single_phase_pll1_discrete_transfer_function1__delay_line_in;        double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum9__out;
          double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum8__out;
              double _solarhouse1_inverter_controller_single_phase_pll1_discrete_transfer_function1__out;
        double _solarhouse1_inverter_controller_single_phase_pll1_discrete_transfer_function1__b_coeff[2] = {1.0, -1.0};
        double _solarhouse1_inverter_controller_single_phase_pll1_discrete_transfer_function1__a_coeff[2] = {1.0, -0.31237439248248716};
        double _solarhouse1_inverter_controller_single_phase_pll1_discrete_transfer_function1__a_sum;
        double _solarhouse1_inverter_controller_single_phase_pll1_discrete_transfer_function1__b_sum;
        double _solarhouse1_inverter_controller_single_phase_pll1_discrete_transfer_function1__delay_line_in;        double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum9__out;
          double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum8__out;
              double _solarhouse2_inverter_controller_single_phase_pll1_discrete_transfer_function1__out;
        double _solarhouse2_inverter_controller_single_phase_pll1_discrete_transfer_function1__b_coeff[2] = {1.0, -1.0};
        double _solarhouse2_inverter_controller_single_phase_pll1_discrete_transfer_function1__a_coeff[2] = {1.0, -0.31237439248248716};
        double _solarhouse2_inverter_controller_single_phase_pll1_discrete_transfer_function1__a_sum;
        double _solarhouse2_inverter_controller_single_phase_pll1_discrete_transfer_function1__b_sum;
        double _solarhouse2_inverter_controller_single_phase_pll1_discrete_transfer_function1__delay_line_in;        double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum9__out;
          double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum8__out;
              double _solarhouse3_inverter_controller_single_phase_pll1_discrete_transfer_function1__out;
        double _solarhouse3_inverter_controller_single_phase_pll1_discrete_transfer_function1__b_coeff[2] = {1.0, -1.0};
        double _solarhouse3_inverter_controller_single_phase_pll1_discrete_transfer_function1__a_coeff[2] = {1.0, -0.31237439248248716};
        double _solarhouse3_inverter_controller_single_phase_pll1_discrete_transfer_function1__a_sum;
        double _solarhouse3_inverter_controller_single_phase_pll1_discrete_transfer_function1__b_sum;
        double _solarhouse3_inverter_controller_single_phase_pll1_discrete_transfer_function1__delay_line_in;        double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum9__out;
          double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum8__out;
              double _solarhouse4_inverter_controller_single_phase_pll1_discrete_transfer_function1__out;
        double _solarhouse4_inverter_controller_single_phase_pll1_discrete_transfer_function1__b_coeff[2] = {1.0, -1.0};
        double _solarhouse4_inverter_controller_single_phase_pll1_discrete_transfer_function1__a_coeff[2] = {1.0, -0.31237439248248716};
        double _solarhouse4_inverter_controller_single_phase_pll1_discrete_transfer_function1__a_sum;
        double _solarhouse4_inverter_controller_single_phase_pll1_discrete_transfer_function1__b_sum;
        double _solarhouse4_inverter_controller_single_phase_pll1_discrete_transfer_function1__delay_line_in;    double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__out;
    double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__pi_reg_out_int;
          double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__out;
    double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__pi_reg_out_int;
            double _ess_inverter_controller_single_phase_pll1_sum8__out;
      double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__out;
    double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__pi_reg_out_int;
          double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__out;
    double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__pi_reg_out_int;
            double _solarhouse1_inverter_controller_single_phase_pll1_sum8__out;
      double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__out;
    double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__pi_reg_out_int;
          double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__out;
    double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__pi_reg_out_int;
            double _solarhouse2_inverter_controller_single_phase_pll1_sum8__out;
      double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__out;
    double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__pi_reg_out_int;
          double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__out;
    double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__pi_reg_out_int;
            double _solarhouse3_inverter_controller_single_phase_pll1_sum8__out;
      double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__out;
    double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__pi_reg_out_int;
          double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__out;
    double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__pi_reg_out_int;
            double _solarhouse4_inverter_controller_single_phase_pll1_sum8__out;
        double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum7__out;
        double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum3__out;
        double _ess_inverter_controller_single_phase_pll1_limit2__out;
        double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum7__out;
        double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum3__out;
        double _solarhouse1_inverter_controller_single_phase_pll1_limit2__out;
        double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum7__out;
        double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum3__out;
        double _solarhouse2_inverter_controller_single_phase_pll1_limit2__out;
        double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum7__out;
        double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum3__out;
        double _solarhouse3_inverter_controller_single_phase_pll1_limit2__out;
        double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum7__out;
        double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum3__out;
        double _solarhouse4_inverter_controller_single_phase_pll1_limit2__out;
  double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product6__out;
double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product5__out;
      double _ess_inverter_controller_single_phase_pll1_sum5__out;
  double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product6__out;
double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product5__out;
      double _solarhouse1_inverter_controller_single_phase_pll1_sum5__out;
  double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product6__out;
double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product5__out;
      double _solarhouse2_inverter_controller_single_phase_pll1_sum5__out;
  double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product6__out;
double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product5__out;
      double _solarhouse3_inverter_controller_single_phase_pll1_sum5__out;
  double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product6__out;
double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product5__out;
      double _solarhouse4_inverter_controller_single_phase_pll1_sum5__out;
        double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit2__out;
        double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit1__out;
        double _ess_inverter_controller_single_phase_pll1_sum10__out;
  
                        double _ess_inverter_controller_single_phase_pll1_integrator_with_reset__in;
            

                        double _ess_inverter_controller_single_phase_pll1_integrator_with_reset__out;
                  double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit2__out;
        double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit1__out;
        double _solarhouse1_inverter_controller_single_phase_pll1_sum10__out;
  
                        double _solarhouse1_inverter_controller_single_phase_pll1_integrator_with_reset__in;
            

                        double _solarhouse1_inverter_controller_single_phase_pll1_integrator_with_reset__out;
                  double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit2__out;
        double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit1__out;
        double _solarhouse2_inverter_controller_single_phase_pll1_sum10__out;
  
                        double _solarhouse2_inverter_controller_single_phase_pll1_integrator_with_reset__in;
            

                        double _solarhouse2_inverter_controller_single_phase_pll1_integrator_with_reset__out;
                  double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit2__out;
        double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit1__out;
        double _solarhouse3_inverter_controller_single_phase_pll1_sum10__out;
  
                        double _solarhouse3_inverter_controller_single_phase_pll1_integrator_with_reset__in;
            

                        double _solarhouse3_inverter_controller_single_phase_pll1_integrator_with_reset__out;
                  double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit2__out;
        double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit1__out;
        double _solarhouse4_inverter_controller_single_phase_pll1_sum10__out;
  
                        double _solarhouse4_inverter_controller_single_phase_pll1_integrator_with_reset__in;
            

                        double _solarhouse4_inverter_controller_single_phase_pll1_integrator_with_reset__out;
            double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_gain6__out;  double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_gain5__out;  double _ess_inverter_controller_single_phase_pll1_gain6__out;double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_gain6__out;  double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_gain5__out;  double _solarhouse1_inverter_controller_single_phase_pll1_gain6__out;double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_gain6__out;  double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_gain5__out;  double _solarhouse2_inverter_controller_single_phase_pll1_gain6__out;double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_gain6__out;  double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_gain5__out;  double _solarhouse3_inverter_controller_single_phase_pll1_gain6__out;double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_gain6__out;  double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_gain5__out;  double _solarhouse4_inverter_controller_single_phase_pll1_gain6__out;        double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__alpha;
    double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__beta;
    double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__k1;
    double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__k2;
        double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__alpha;
    double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__beta;
    double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__k1;
    double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__k2;
        double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__alpha;
    double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__beta;
    double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__k1;
    double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__k2;
        double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__alpha;
    double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__beta;
    double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__k1;
    double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__k2;
        double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__alpha;
    double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__beta;
    double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__k1;
    double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__k2;
	    	double _ess_inverter_controller_bus_join1__out[2];
		    	double _solarhouse1_inverter_controller_bus_join1__out[2];
		    	double _solarhouse2_inverter_controller_bus_join1__out[2];
		    	double _solarhouse3_inverter_controller_bus_join1__out[2];
		    	double _solarhouse4_inverter_controller_bus_join1__out[2];
	                    double _ess_inverter_controller_bus_split1__out;                     double _ess_inverter_controller_bus_split1__out1;                         double _solarhouse1_inverter_controller_bus_split1__out;                     double _solarhouse1_inverter_controller_bus_split1__out1;                         double _solarhouse2_inverter_controller_bus_split1__out;                     double _solarhouse2_inverter_controller_bus_split1__out1;                         double _solarhouse3_inverter_controller_bus_split1__out;                     double _solarhouse3_inverter_controller_bus_split1__out1;                         double _solarhouse4_inverter_controller_bus_split1__out;                     double _solarhouse4_inverter_controller_bus_split1__out1;     double _ess_inverter_controller_gain20__out;double _solarhouse1_inverter_controller_gain20__out;double _solarhouse2_inverter_controller_gain20__out;double _solarhouse3_inverter_controller_gain20__out;double _solarhouse4_inverter_controller_gain20__out;    X_UnInt32 _ess_inverter_single_phase_inverter1_pwm_modulator__channels[2] = {0, 1};
    double _ess_inverter_single_phase_inverter1_pwm_modulator__limited_in[2];
    X_UnInt32 _ess_inverter_single_phase_inverter1_pwm_modulator__update_mask;
    X_UnInt32 _ess_inverter_single_phase_inverter1_pwm_modulator__sig_dir[2];

                X_UnInt32 _solarhouse1_inverter_single_phase_inverter1_pwm_modulator__channels[2] = {2, 3};
    double _solarhouse1_inverter_single_phase_inverter1_pwm_modulator__limited_in[2];
    X_UnInt32 _solarhouse1_inverter_single_phase_inverter1_pwm_modulator__update_mask;
    X_UnInt32 _solarhouse1_inverter_single_phase_inverter1_pwm_modulator__sig_dir[2];

                X_UnInt32 _solarhouse2_inverter_single_phase_inverter1_pwm_modulator__channels[2] = {4, 5};
    double _solarhouse2_inverter_single_phase_inverter1_pwm_modulator__limited_in[2];
    X_UnInt32 _solarhouse2_inverter_single_phase_inverter1_pwm_modulator__update_mask;
    X_UnInt32 _solarhouse2_inverter_single_phase_inverter1_pwm_modulator__sig_dir[2];

                X_UnInt32 _solarhouse3_inverter_single_phase_inverter1_pwm_modulator__channels[2] = {6, 7};
    double _solarhouse3_inverter_single_phase_inverter1_pwm_modulator__limited_in[2];
    X_UnInt32 _solarhouse3_inverter_single_phase_inverter1_pwm_modulator__update_mask;
    X_UnInt32 _solarhouse3_inverter_single_phase_inverter1_pwm_modulator__sig_dir[2];

                X_UnInt32 _solarhouse4_inverter_single_phase_inverter1_pwm_modulator__channels[2] = {8, 9};
    double _solarhouse4_inverter_single_phase_inverter1_pwm_modulator__limited_in[2];
    X_UnInt32 _solarhouse4_inverter_single_phase_inverter1_pwm_modulator__update_mask;
    X_UnInt32 _solarhouse4_inverter_single_phase_inverter1_pwm_modulator__sig_dir[2];

            //@cmp.var.end

//@cmp.svar.start
// state variables
    X_Int32 _ess_c_function3__k;
        double _ess_c_function3__t;
        X_Int32 _ess_inverter_controller_c_function3__k;
        double _ess_inverter_controller_c_function3__t;
                            double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__states[1];
                    X_Int32 _ess_inverter_controller_rate_transition8_output__out = (X_Int32) 0.0;
                        double _ess_inverter_controller_rate_transition9_output__out =  0.0;
                double _ess_inverter_controller_single_phase_pll1_i__integrator_state;
            X_UnInt32 _ess_inverter_controller_single_phase_pll1_i__av_active;
        double _ess_inverter_controller_single_phase_pll1_i__filter_state;        double _ess_inverter_controller_single_phase_pll1_integrator1__state;        double _ess_inverter_controller_single_phase_pll1_integrator10__state;        double _ess_inverter_controller_single_phase_pll1_integrator2__state;        double _ess_inverter_controller_single_phase_pll1_integrator3__state;        double _ess_inverter_controller_single_phase_pll1_integrator4__state;        double _ess_inverter_controller_single_phase_pll1_integrator5__state;        double _ess_inverter_controller_single_phase_pll1_integrator6__state;        double _ess_inverter_controller_single_phase_pll1_integrator7__state;        double _ess_inverter_controller_single_phase_pll1_integrator8__state;        double _ess_inverter_controller_single_phase_pll1_integrator9__state;            double _ess_modbus_rate_transition2_output__out =  0.0;
                        double _ess_modbus_rate_transition3_output__out =  0.0;
                        double _ess_modbus_rate_transition4_output__out =  0.0;
                X_Int32 _solarhouse1_inverter_controller_c_function3__k;
        double _solarhouse1_inverter_controller_c_function3__t;
                            double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__states[1];
                    X_Int32 _solarhouse1_inverter_controller_rate_transition8_output__out = (X_Int32) 0.0;
                        double _solarhouse1_inverter_controller_rate_transition9_output__out =  0.0;
                double _solarhouse1_inverter_controller_single_phase_pll1_i__integrator_state;
            X_UnInt32 _solarhouse1_inverter_controller_single_phase_pll1_i__av_active;
        double _solarhouse1_inverter_controller_single_phase_pll1_i__filter_state;        double _solarhouse1_inverter_controller_single_phase_pll1_integrator1__state;        double _solarhouse1_inverter_controller_single_phase_pll1_integrator10__state;        double _solarhouse1_inverter_controller_single_phase_pll1_integrator2__state;        double _solarhouse1_inverter_controller_single_phase_pll1_integrator3__state;        double _solarhouse1_inverter_controller_single_phase_pll1_integrator4__state;        double _solarhouse1_inverter_controller_single_phase_pll1_integrator5__state;        double _solarhouse1_inverter_controller_single_phase_pll1_integrator6__state;        double _solarhouse1_inverter_controller_single_phase_pll1_integrator7__state;        double _solarhouse1_inverter_controller_single_phase_pll1_integrator8__state;        double _solarhouse1_inverter_controller_single_phase_pll1_integrator9__state;            double _solarhouse1_modbus_rate_transition1_output__out =  0.0;
                        double _solarhouse1_modbus_rate_transition4_output__out =  0.0;
                X_Int32 _solarhouse2_inverter_controller_c_function3__k;
        double _solarhouse2_inverter_controller_c_function3__t;
                            double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__states[1];
                    X_Int32 _solarhouse2_inverter_controller_rate_transition8_output__out = (X_Int32) 0.0;
                        double _solarhouse2_inverter_controller_rate_transition9_output__out =  0.0;
                double _solarhouse2_inverter_controller_single_phase_pll1_i__integrator_state;
            X_UnInt32 _solarhouse2_inverter_controller_single_phase_pll1_i__av_active;
        double _solarhouse2_inverter_controller_single_phase_pll1_i__filter_state;        double _solarhouse2_inverter_controller_single_phase_pll1_integrator1__state;        double _solarhouse2_inverter_controller_single_phase_pll1_integrator10__state;        double _solarhouse2_inverter_controller_single_phase_pll1_integrator2__state;        double _solarhouse2_inverter_controller_single_phase_pll1_integrator3__state;        double _solarhouse2_inverter_controller_single_phase_pll1_integrator4__state;        double _solarhouse2_inverter_controller_single_phase_pll1_integrator5__state;        double _solarhouse2_inverter_controller_single_phase_pll1_integrator6__state;        double _solarhouse2_inverter_controller_single_phase_pll1_integrator7__state;        double _solarhouse2_inverter_controller_single_phase_pll1_integrator8__state;        double _solarhouse2_inverter_controller_single_phase_pll1_integrator9__state;            double _solarhouse2_modbus_rate_transition1_output__out =  0.0;
                        double _solarhouse2_modbus_rate_transition4_output__out =  0.0;
                X_Int32 _solarhouse3_inverter_controller_c_function3__k;
        double _solarhouse3_inverter_controller_c_function3__t;
                            double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__states[1];
                    X_Int32 _solarhouse3_inverter_controller_rate_transition8_output__out = (X_Int32) 0.0;
                        double _solarhouse3_inverter_controller_rate_transition9_output__out =  0.0;
                double _solarhouse3_inverter_controller_single_phase_pll1_i__integrator_state;
            X_UnInt32 _solarhouse3_inverter_controller_single_phase_pll1_i__av_active;
        double _solarhouse3_inverter_controller_single_phase_pll1_i__filter_state;        double _solarhouse3_inverter_controller_single_phase_pll1_integrator1__state;        double _solarhouse3_inverter_controller_single_phase_pll1_integrator10__state;        double _solarhouse3_inverter_controller_single_phase_pll1_integrator2__state;        double _solarhouse3_inverter_controller_single_phase_pll1_integrator3__state;        double _solarhouse3_inverter_controller_single_phase_pll1_integrator4__state;        double _solarhouse3_inverter_controller_single_phase_pll1_integrator5__state;        double _solarhouse3_inverter_controller_single_phase_pll1_integrator6__state;        double _solarhouse3_inverter_controller_single_phase_pll1_integrator7__state;        double _solarhouse3_inverter_controller_single_phase_pll1_integrator8__state;        double _solarhouse3_inverter_controller_single_phase_pll1_integrator9__state;            double _solarhouse3_modbus_rate_transition1_output__out =  0.0;
                        double _solarhouse3_modbus_rate_transition4_output__out =  0.0;
                X_Int32 _solarhouse4_inverter_controller_c_function3__k;
        double _solarhouse4_inverter_controller_c_function3__t;
                            double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__states[1];
                    X_Int32 _solarhouse4_inverter_controller_rate_transition8_output__out = (X_Int32) 0.0;
                        double _solarhouse4_inverter_controller_rate_transition9_output__out =  0.0;
                double _solarhouse4_inverter_controller_single_phase_pll1_i__integrator_state;
            X_UnInt32 _solarhouse4_inverter_controller_single_phase_pll1_i__av_active;
        double _solarhouse4_inverter_controller_single_phase_pll1_i__filter_state;        double _solarhouse4_inverter_controller_single_phase_pll1_integrator1__state;        double _solarhouse4_inverter_controller_single_phase_pll1_integrator10__state;        double _solarhouse4_inverter_controller_single_phase_pll1_integrator2__state;        double _solarhouse4_inverter_controller_single_phase_pll1_integrator3__state;        double _solarhouse4_inverter_controller_single_phase_pll1_integrator4__state;        double _solarhouse4_inverter_controller_single_phase_pll1_integrator5__state;        double _solarhouse4_inverter_controller_single_phase_pll1_integrator6__state;        double _solarhouse4_inverter_controller_single_phase_pll1_integrator7__state;        double _solarhouse4_inverter_controller_single_phase_pll1_integrator8__state;        double _solarhouse4_inverter_controller_single_phase_pll1_integrator9__state;            double _solarhouse4_modbus_rate_transition1_output__out =  0.0;
                        double _solarhouse4_modbus_rate_transition4_output__out =  0.0;
                                    double _ess_inverter_controller_hilbert_transform__states[1];
                                double _ess_inverter_controller_hilbert_transform1__states[1];
                                double _ess_inverter_lpf_dc__states[1];
                    double _measurement_single_phase_power_meter1_ia_rms__square_sum;
        double _measurement_single_phase_power_meter1_ia_rms__sample_cnt;
                    double _measurement_single_phase_power_meter1_va_rms__square_sum;
        double _measurement_single_phase_power_meter1_va_rms__sample_cnt;
        
    double _measurement_single_phase_power_meter1_phi__previous_correction_ref;
    double _measurement_single_phase_power_meter1_phi__sample_cnt_ref;
    double _measurement_single_phase_power_meter1_phi__previous_filtered_ref;

            double _measurement_single_phase_power_meter1_phi__phase_state;
        double _measurement_single_phase_power_meter1_phi__previous_correction_in;
        double _measurement_single_phase_power_meter1_phi__sample_cnt_in;
        double _measurement_single_phase_power_meter1_phi__previous_filtered_in;
                        double _solarhouse1_inverter_controller_hilbert_transform__states[1];
                                double _solarhouse1_inverter_controller_hilbert_transform1__states[1];
                                double _solarhouse1_inverter_lpf_dc__states[1];
                    double _solarhouse1_measurement_single_phase_power_meter1_ia_rms__square_sum;
        double _solarhouse1_measurement_single_phase_power_meter1_ia_rms__sample_cnt;
                    double _solarhouse1_measurement_single_phase_power_meter1_va_rms__square_sum;
        double _solarhouse1_measurement_single_phase_power_meter1_va_rms__sample_cnt;
        
    double _solarhouse1_measurement_single_phase_power_meter1_phi__previous_correction_ref;
    double _solarhouse1_measurement_single_phase_power_meter1_phi__sample_cnt_ref;
    double _solarhouse1_measurement_single_phase_power_meter1_phi__previous_filtered_ref;

            double _solarhouse1_measurement_single_phase_power_meter1_phi__phase_state;
        double _solarhouse1_measurement_single_phase_power_meter1_phi__previous_correction_in;
        double _solarhouse1_measurement_single_phase_power_meter1_phi__sample_cnt_in;
        double _solarhouse1_measurement_single_phase_power_meter1_phi__previous_filtered_in;
                        double _solarhouse2_inverter_controller_hilbert_transform__states[1];
                                double _solarhouse2_inverter_controller_hilbert_transform1__states[1];
                                double _solarhouse2_inverter_lpf_dc__states[1];
                    double _solarhouse2_measurement_single_phase_power_meter1_ia_rms__square_sum;
        double _solarhouse2_measurement_single_phase_power_meter1_ia_rms__sample_cnt;
                    double _solarhouse2_measurement_single_phase_power_meter1_va_rms__square_sum;
        double _solarhouse2_measurement_single_phase_power_meter1_va_rms__sample_cnt;
        
    double _solarhouse2_measurement_single_phase_power_meter1_phi__previous_correction_ref;
    double _solarhouse2_measurement_single_phase_power_meter1_phi__sample_cnt_ref;
    double _solarhouse2_measurement_single_phase_power_meter1_phi__previous_filtered_ref;

            double _solarhouse2_measurement_single_phase_power_meter1_phi__phase_state;
        double _solarhouse2_measurement_single_phase_power_meter1_phi__previous_correction_in;
        double _solarhouse2_measurement_single_phase_power_meter1_phi__sample_cnt_in;
        double _solarhouse2_measurement_single_phase_power_meter1_phi__previous_filtered_in;
                        double _solarhouse3_inverter_controller_hilbert_transform__states[1];
                                double _solarhouse3_inverter_controller_hilbert_transform1__states[1];
                                double _solarhouse3_inverter_lpf_dc__states[1];
                    double _solarhouse3_measurement_single_phase_power_meter1_ia_rms__square_sum;
        double _solarhouse3_measurement_single_phase_power_meter1_ia_rms__sample_cnt;
                    double _solarhouse3_measurement_single_phase_power_meter1_va_rms__square_sum;
        double _solarhouse3_measurement_single_phase_power_meter1_va_rms__sample_cnt;
        
    double _solarhouse3_measurement_single_phase_power_meter1_phi__previous_correction_ref;
    double _solarhouse3_measurement_single_phase_power_meter1_phi__sample_cnt_ref;
    double _solarhouse3_measurement_single_phase_power_meter1_phi__previous_filtered_ref;

            double _solarhouse3_measurement_single_phase_power_meter1_phi__phase_state;
        double _solarhouse3_measurement_single_phase_power_meter1_phi__previous_correction_in;
        double _solarhouse3_measurement_single_phase_power_meter1_phi__sample_cnt_in;
        double _solarhouse3_measurement_single_phase_power_meter1_phi__previous_filtered_in;
                        double _solarhouse4_inverter_controller_hilbert_transform__states[1];
                                double _solarhouse4_inverter_controller_hilbert_transform1__states[1];
                                double _solarhouse4_inverter_lpf_dc__states[1];
                    double _solarhouse4_measurement_single_phase_power_meter1_ia_rms__square_sum;
        double _solarhouse4_measurement_single_phase_power_meter1_ia_rms__sample_cnt;
                    double _solarhouse4_measurement_single_phase_power_meter1_va_rms__square_sum;
        double _solarhouse4_measurement_single_phase_power_meter1_va_rms__sample_cnt;
        
    double _solarhouse4_measurement_single_phase_power_meter1_phi__previous_correction_ref;
    double _solarhouse4_measurement_single_phase_power_meter1_phi__sample_cnt_ref;
    double _solarhouse4_measurement_single_phase_power_meter1_phi__previous_filtered_ref;

            double _solarhouse4_measurement_single_phase_power_meter1_phi__phase_state;
        double _solarhouse4_measurement_single_phase_power_meter1_phi__previous_correction_in;
        double _solarhouse4_measurement_single_phase_power_meter1_phi__sample_cnt_in;
        double _solarhouse4_measurement_single_phase_power_meter1_phi__previous_filtered_in;
                        double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__states[1];
                                double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__states[1];
                                double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__states[1];
                                double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__states[1];
                                double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__states[1];
                                double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__states[1];
                                double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__states[1];
                                double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__states[1];
                                double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__states[1];
                                double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__states[1];
            double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__state;
                        double _ess_inverter_power_meas_power_meas_dqpu_lpf_p__states[1];
                                double _ess_inverter_power_meas_power_meas_dqpu_lpf_q__states[1];
            double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__state;
                        double _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_p__states[1];
                                double _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_q__states[1];
            double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__state;
                        double _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_p__states[1];
                                double _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_q__states[1];
            double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__state;
                        double _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_p__states[1];
                                double _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_q__states[1];
            double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__state;
                        double _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_p__states[1];
                                double _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_q__states[1];
                                double _ess_inverter_controller_single_phase_pll1_discrete_transfer_function1__states[1];
                                double _solarhouse1_inverter_controller_single_phase_pll1_discrete_transfer_function1__states[1];
                                double _solarhouse2_inverter_controller_single_phase_pll1_discrete_transfer_function1__states[1];
                                double _solarhouse3_inverter_controller_single_phase_pll1_discrete_transfer_function1__states[1];
                                double _solarhouse4_inverter_controller_single_phase_pll1_discrete_transfer_function1__states[1];
            double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__integrator_state;
            X_UnInt32 _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__av_active;
        double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__filter_state;    double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__integrator_state;
            X_UnInt32 _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__av_active;
        double _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__filter_state;    double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__integrator_state;
            X_UnInt32 _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__av_active;
        double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__filter_state;    double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__integrator_state;
            X_UnInt32 _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__av_active;
        double _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__filter_state;    double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__integrator_state;
            X_UnInt32 _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__av_active;
        double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__filter_state;    double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__integrator_state;
            X_UnInt32 _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__av_active;
        double _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__filter_state;    double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__integrator_state;
            X_UnInt32 _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__av_active;
        double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__filter_state;    double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__integrator_state;
            X_UnInt32 _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__av_active;
        double _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__filter_state;    double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__integrator_state;
            X_UnInt32 _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__av_active;
        double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__filter_state;    double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__integrator_state;
            X_UnInt32 _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__av_active;
        double _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__filter_state;    double _ess_inverter_controller_single_phase_pll1_integrator_with_reset__out_calc;
        double _ess_inverter_controller_single_phase_pll1_integrator_with_reset__reset_value;
        double _solarhouse1_inverter_controller_single_phase_pll1_integrator_with_reset__out_calc;
        double _solarhouse1_inverter_controller_single_phase_pll1_integrator_with_reset__reset_value;
        double _solarhouse2_inverter_controller_single_phase_pll1_integrator_with_reset__out_calc;
        double _solarhouse2_inverter_controller_single_phase_pll1_integrator_with_reset__reset_value;
        double _solarhouse3_inverter_controller_single_phase_pll1_integrator_with_reset__out_calc;
        double _solarhouse3_inverter_controller_single_phase_pll1_integrator_with_reset__reset_value;
        double _solarhouse4_inverter_controller_single_phase_pll1_integrator_with_reset__out_calc;
        double _solarhouse4_inverter_controller_single_phase_pll1_integrator_with_reset__reset_value;
    //@cmp.svar.end




              
// generated using template: virtual_hil/custom_functions.template---------------------------------
void ReInit_user_sp_cpu0_dev0(){

#if DEBUG_MODE
    printf("\n\rReInitTimer");
#endif
    //@cmp.init.block.start
        _ess_c_function3__k=0;_ess_c_function3__t=0;_ess_c_function3__time=1;_ess_c_function3__RegD=2000;

        _ess_inverter_controller_c_function3__k=0;_ess_inverter_controller_c_function3__t=1;

    
    
    
    
    
                            X_UnInt32 _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i;    
                                                                                          

                        for (_ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i = 0; _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i < 1; _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i++) {
                _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__states[_ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i] = 0;
            }
            
    
    
    
                _ess_inverter_controller_rate_transition8_output__out = (X_Int32) 0.0;
            
    
                _ess_inverter_controller_rate_transition9_output__out =  0.0;
            
    
        _ess_inverter_controller_single_phase_pll1_i__integrator_state =  0.0;
    _ess_inverter_controller_single_phase_pll1_i__filter_state =  0.0;

                                                                    

                            _ess_inverter_controller_single_phase_pll1_integrator1__state = 0.0;
            
                                                                    

                            _ess_inverter_controller_single_phase_pll1_integrator10__state = 60.0;
            
                                                                    

                            _ess_inverter_controller_single_phase_pll1_integrator2__state = -339.4112549695428;
            
                                                                    

                            _ess_inverter_controller_single_phase_pll1_integrator3__state = 339.4112549695428;
            
                                                                    

                            _ess_inverter_controller_single_phase_pll1_integrator4__state = 339.4112549695428;
            
                                                                    

                            _ess_inverter_controller_single_phase_pll1_integrator5__state = 376.99111843077515;
            
                                                                    

                            _ess_inverter_controller_single_phase_pll1_integrator6__state = 376.99111843077515;
            
                                                                    

                            _ess_inverter_controller_single_phase_pll1_integrator7__state = 60.0;
            
                                                                    

                            _ess_inverter_controller_single_phase_pll1_integrator8__state = 60.0;
            
                                                                    

                            _ess_inverter_controller_single_phase_pll1_integrator9__state = 60.0;
            
    
    
    
    
    
    
    
    
        _ess_inverter_power_meas_power_meas_dqpu_s_and_pf__P=0;_ess_inverter_power_meas_power_meas_dqpu_s_and_pf__Q=0;_ess_inverter_power_meas_power_meas_dqpu_s_and_pf__S=0;_ess_inverter_power_meas_power_meas_dqpu_s_and_pf__pf=0;

    
    
    
    
    
    
                _ess_modbus_rate_transition2_output__out =  0.0;
            
                _ess_modbus_rate_transition3_output__out =  0.0;
            
                _ess_modbus_rate_transition4_output__out =  0.0;
            
    
    
    
    
    
    
    
        _solarhouse1_inverter_controller_c_function3__k=0;_solarhouse1_inverter_controller_c_function3__t=1;

    
    
    
    
    
                            X_UnInt32 _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i;    
                                                                                          

                        for (_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i = 0; _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i < 1; _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i++) {
                _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__states[_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i] = 0;
            }
            
    
    
    
                _solarhouse1_inverter_controller_rate_transition8_output__out = (X_Int32) 0.0;
            
    
                _solarhouse1_inverter_controller_rate_transition9_output__out =  0.0;
            
    
        _solarhouse1_inverter_controller_single_phase_pll1_i__integrator_state =  0.0;
    _solarhouse1_inverter_controller_single_phase_pll1_i__filter_state =  0.0;

                                                                    

                            _solarhouse1_inverter_controller_single_phase_pll1_integrator1__state = 0.0;
            
                                                                    

                            _solarhouse1_inverter_controller_single_phase_pll1_integrator10__state = 60.0;
            
                                                                    

                            _solarhouse1_inverter_controller_single_phase_pll1_integrator2__state = -339.4112549695428;
            
                                                                    

                            _solarhouse1_inverter_controller_single_phase_pll1_integrator3__state = 339.4112549695428;
            
                                                                    

                            _solarhouse1_inverter_controller_single_phase_pll1_integrator4__state = 339.4112549695428;
            
                                                                    

                            _solarhouse1_inverter_controller_single_phase_pll1_integrator5__state = 376.99111843077515;
            
                                                                    

                            _solarhouse1_inverter_controller_single_phase_pll1_integrator6__state = 376.99111843077515;
            
                                                                    

                            _solarhouse1_inverter_controller_single_phase_pll1_integrator7__state = 60.0;
            
                                                                    

                            _solarhouse1_inverter_controller_single_phase_pll1_integrator8__state = 60.0;
            
                                                                    

                            _solarhouse1_inverter_controller_single_phase_pll1_integrator9__state = 60.0;
            
    
    
    
    
    
    
    
    
        _solarhouse1_inverter_power_meas_power_meas_dqpu_s_and_pf__P=0;_solarhouse1_inverter_power_meas_power_meas_dqpu_s_and_pf__Q=0;_solarhouse1_inverter_power_meas_power_meas_dqpu_s_and_pf__S=0;_solarhouse1_inverter_power_meas_power_meas_dqpu_s_and_pf__pf=0;

    
    
    
    
    
    
    
    
                _solarhouse1_modbus_rate_transition1_output__out =  0.0;
            
                _solarhouse1_modbus_rate_transition4_output__out =  0.0;
            
    
        _solarhouse2_inverter_controller_c_function3__k=0;_solarhouse2_inverter_controller_c_function3__t=1;

    
    
    
    
    
                            X_UnInt32 _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i;    
                                                                                          

                        for (_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i = 0; _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i < 1; _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i++) {
                _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__states[_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i] = 0;
            }
            
    
    
    
                _solarhouse2_inverter_controller_rate_transition8_output__out = (X_Int32) 0.0;
            
    
                _solarhouse2_inverter_controller_rate_transition9_output__out =  0.0;
            
    
        _solarhouse2_inverter_controller_single_phase_pll1_i__integrator_state =  0.0;
    _solarhouse2_inverter_controller_single_phase_pll1_i__filter_state =  0.0;

                                                                    

                            _solarhouse2_inverter_controller_single_phase_pll1_integrator1__state = 0.0;
            
                                                                    

                            _solarhouse2_inverter_controller_single_phase_pll1_integrator10__state = 60.0;
            
                                                                    

                            _solarhouse2_inverter_controller_single_phase_pll1_integrator2__state = -339.4112549695428;
            
                                                                    

                            _solarhouse2_inverter_controller_single_phase_pll1_integrator3__state = 339.4112549695428;
            
                                                                    

                            _solarhouse2_inverter_controller_single_phase_pll1_integrator4__state = 339.4112549695428;
            
                                                                    

                            _solarhouse2_inverter_controller_single_phase_pll1_integrator5__state = 376.99111843077515;
            
                                                                    

                            _solarhouse2_inverter_controller_single_phase_pll1_integrator6__state = 376.99111843077515;
            
                                                                    

                            _solarhouse2_inverter_controller_single_phase_pll1_integrator7__state = 60.0;
            
                                                                    

                            _solarhouse2_inverter_controller_single_phase_pll1_integrator8__state = 60.0;
            
                                                                    

                            _solarhouse2_inverter_controller_single_phase_pll1_integrator9__state = 60.0;
            
    
    
    
    
    
    
    
    
        _solarhouse2_inverter_power_meas_power_meas_dqpu_s_and_pf__P=0;_solarhouse2_inverter_power_meas_power_meas_dqpu_s_and_pf__Q=0;_solarhouse2_inverter_power_meas_power_meas_dqpu_s_and_pf__S=0;_solarhouse2_inverter_power_meas_power_meas_dqpu_s_and_pf__pf=0;

    
    
    
    
    
    
    
    
                _solarhouse2_modbus_rate_transition1_output__out =  0.0;
            
                _solarhouse2_modbus_rate_transition4_output__out =  0.0;
            
    
        _solarhouse3_inverter_controller_c_function3__k=0;_solarhouse3_inverter_controller_c_function3__t=1;

    
    
    
    
    
                            X_UnInt32 _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i;    
                                                                                          

                        for (_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i = 0; _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i < 1; _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i++) {
                _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__states[_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i] = 0;
            }
            
    
    
    
                _solarhouse3_inverter_controller_rate_transition8_output__out = (X_Int32) 0.0;
            
    
                _solarhouse3_inverter_controller_rate_transition9_output__out =  0.0;
            
    
        _solarhouse3_inverter_controller_single_phase_pll1_i__integrator_state =  0.0;
    _solarhouse3_inverter_controller_single_phase_pll1_i__filter_state =  0.0;

                                                                    

                            _solarhouse3_inverter_controller_single_phase_pll1_integrator1__state = 0.0;
            
                                                                    

                            _solarhouse3_inverter_controller_single_phase_pll1_integrator10__state = 60.0;
            
                                                                    

                            _solarhouse3_inverter_controller_single_phase_pll1_integrator2__state = -339.4112549695428;
            
                                                                    

                            _solarhouse3_inverter_controller_single_phase_pll1_integrator3__state = 339.4112549695428;
            
                                                                    

                            _solarhouse3_inverter_controller_single_phase_pll1_integrator4__state = 339.4112549695428;
            
                                                                    

                            _solarhouse3_inverter_controller_single_phase_pll1_integrator5__state = 376.99111843077515;
            
                                                                    

                            _solarhouse3_inverter_controller_single_phase_pll1_integrator6__state = 376.99111843077515;
            
                                                                    

                            _solarhouse3_inverter_controller_single_phase_pll1_integrator7__state = 60.0;
            
                                                                    

                            _solarhouse3_inverter_controller_single_phase_pll1_integrator8__state = 60.0;
            
                                                                    

                            _solarhouse3_inverter_controller_single_phase_pll1_integrator9__state = 60.0;
            
    
    
    
    
    
    
    
    
        _solarhouse3_inverter_power_meas_power_meas_dqpu_s_and_pf__P=0;_solarhouse3_inverter_power_meas_power_meas_dqpu_s_and_pf__Q=0;_solarhouse3_inverter_power_meas_power_meas_dqpu_s_and_pf__S=0;_solarhouse3_inverter_power_meas_power_meas_dqpu_s_and_pf__pf=0;

    
    
    
    
    
    
    
    
                _solarhouse3_modbus_rate_transition1_output__out =  0.0;
            
                _solarhouse3_modbus_rate_transition4_output__out =  0.0;
            
    
        _solarhouse4_inverter_controller_c_function3__k=0;_solarhouse4_inverter_controller_c_function3__t=1;

    
    
    
    
    
                            X_UnInt32 _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i;    
                                                                                          

                        for (_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i = 0; _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i < 1; _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i++) {
                _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__states[_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i] = 0;
            }
            
    
    
    
                _solarhouse4_inverter_controller_rate_transition8_output__out = (X_Int32) 0.0;
            
    
                _solarhouse4_inverter_controller_rate_transition9_output__out =  0.0;
            
    
        _solarhouse4_inverter_controller_single_phase_pll1_i__integrator_state =  0.0;
    _solarhouse4_inverter_controller_single_phase_pll1_i__filter_state =  0.0;

                                                                    

                            _solarhouse4_inverter_controller_single_phase_pll1_integrator1__state = 0.0;
            
                                                                    

                            _solarhouse4_inverter_controller_single_phase_pll1_integrator10__state = 60.0;
            
                                                                    

                            _solarhouse4_inverter_controller_single_phase_pll1_integrator2__state = -339.4112549695428;
            
                                                                    

                            _solarhouse4_inverter_controller_single_phase_pll1_integrator3__state = 339.4112549695428;
            
                                                                    

                            _solarhouse4_inverter_controller_single_phase_pll1_integrator4__state = 339.4112549695428;
            
                                                                    

                            _solarhouse4_inverter_controller_single_phase_pll1_integrator5__state = 376.99111843077515;
            
                                                                    

                            _solarhouse4_inverter_controller_single_phase_pll1_integrator6__state = 376.99111843077515;
            
                                                                    

                            _solarhouse4_inverter_controller_single_phase_pll1_integrator7__state = 60.0;
            
                                                                    

                            _solarhouse4_inverter_controller_single_phase_pll1_integrator8__state = 60.0;
            
                                                                    

                            _solarhouse4_inverter_controller_single_phase_pll1_integrator9__state = 60.0;
            
    
    
    
    
    
    
    
    
        _solarhouse4_inverter_power_meas_power_meas_dqpu_s_and_pf__P=0;_solarhouse4_inverter_power_meas_power_meas_dqpu_s_and_pf__Q=0;_solarhouse4_inverter_power_meas_power_meas_dqpu_s_and_pf__S=0;_solarhouse4_inverter_power_meas_power_meas_dqpu_s_and_pf__pf=0;

    
    
    
    
    
    
    
    
                _solarhouse4_modbus_rate_transition1_output__out =  0.0;
            
                _solarhouse4_modbus_rate_transition4_output__out =  0.0;
            
    
    
              HIL_OutAO(0x4016, 0.0f);
        
    
        

    
        

    
    
    
    
    
    
    
    
                            X_UnInt32 _ess_inverter_controller_hilbert_transform__i;    
                                                                                          

                        for (_ess_inverter_controller_hilbert_transform__i = 0; _ess_inverter_controller_hilbert_transform__i < 1; _ess_inverter_controller_hilbert_transform__i++) {
                _ess_inverter_controller_hilbert_transform__states[_ess_inverter_controller_hilbert_transform__i] = 0;
            }
            
    
              HIL_OutAO(0x401d, 0.0f);
        
                            X_UnInt32 _ess_inverter_controller_hilbert_transform1__i;    
                                                                                          

                        for (_ess_inverter_controller_hilbert_transform1__i = 0; _ess_inverter_controller_hilbert_transform1__i < 1; _ess_inverter_controller_hilbert_transform1__i++) {
                _ess_inverter_controller_hilbert_transform1__states[_ess_inverter_controller_hilbert_transform1__i] = 0;
            }
            
              HIL_OutAO(0x401a, 0.0f);
        
    
              HIL_OutAO(0x401b, 0.0f);
        
    
              HIL_OutAO(0x401e, 0.0f);
        
                            X_UnInt32 _ess_inverter_lpf_dc__i;    
                                                                                          

                        for (_ess_inverter_lpf_dc__i = 0; _ess_inverter_lpf_dc__i < 1; _ess_inverter_lpf_dc__i++) {
                _ess_inverter_lpf_dc__states[_ess_inverter_lpf_dc__i] = 0;
            }
            
              HIL_OutAO(0x4021, 0.0f);
        
              HIL_OutAO(0x4022, 0.0f);
        
    
    
    
              HIL_OutAO(0x401f, 0.0f);
        
              HIL_OutAO(0x4020, 0.0f);
        
    
    
    
                                                                                                                                                  

            _measurement_single_phase_power_meter1_ia_rms__square_sum = 0x0;
        _measurement_single_phase_power_meter1_ia_rms__sample_cnt = 0x0;
            
                                                                                                                                                  

            _measurement_single_phase_power_meter1_va_rms__square_sum = 0x0;
        _measurement_single_phase_power_meter1_va_rms__sample_cnt = 0x0;
            
    
                                                                                                                                 

            _measurement_single_phase_power_meter1_phi__phase_diff = 0x0;
        _measurement_single_phase_power_meter1_phi__phase_state = 0x0;
        _measurement_single_phase_power_meter1_phi__correction_in = 0x0;
        _measurement_single_phase_power_meter1_phi__previous_correction_in = 0x0;
        _measurement_single_phase_power_meter1_phi__sample_cnt_in = 0x0;
        _measurement_single_phase_power_meter1_phi__filtered_in = 0x0;
        _measurement_single_phase_power_meter1_phi__previous_filtered_in = 0x0;
        _measurement_single_phase_power_meter1_phi__zc_flag_in = 0x0;
        _measurement_single_phase_power_meter1_phi__no_zc_flag_in = 0x0;
    
    _measurement_single_phase_power_meter1_phi__previous_correction_ref = 0x0;
    _measurement_single_phase_power_meter1_phi__sample_cnt_ref = 0x0;
    _measurement_single_phase_power_meter1_phi__previous_filtered_ref = 0x0;


              HIL_OutAO(0x4031, 0.0f);
        
    
        

    
        

    
    
    
    
    
    
    
    
                            X_UnInt32 _solarhouse1_inverter_controller_hilbert_transform__i;    
                                                                                          

                        for (_solarhouse1_inverter_controller_hilbert_transform__i = 0; _solarhouse1_inverter_controller_hilbert_transform__i < 1; _solarhouse1_inverter_controller_hilbert_transform__i++) {
                _solarhouse1_inverter_controller_hilbert_transform__states[_solarhouse1_inverter_controller_hilbert_transform__i] = 0;
            }
            
    
              HIL_OutAO(0x4038, 0.0f);
        
                            X_UnInt32 _solarhouse1_inverter_controller_hilbert_transform1__i;    
                                                                                          

                        for (_solarhouse1_inverter_controller_hilbert_transform1__i = 0; _solarhouse1_inverter_controller_hilbert_transform1__i < 1; _solarhouse1_inverter_controller_hilbert_transform1__i++) {
                _solarhouse1_inverter_controller_hilbert_transform1__states[_solarhouse1_inverter_controller_hilbert_transform1__i] = 0;
            }
            
              HIL_OutAO(0x4035, 0.0f);
        
    
              HIL_OutAO(0x4036, 0.0f);
        
    
              HIL_OutAO(0x4039, 0.0f);
        
                            X_UnInt32 _solarhouse1_inverter_lpf_dc__i;    
                                                                                          

                        for (_solarhouse1_inverter_lpf_dc__i = 0; _solarhouse1_inverter_lpf_dc__i < 1; _solarhouse1_inverter_lpf_dc__i++) {
                _solarhouse1_inverter_lpf_dc__states[_solarhouse1_inverter_lpf_dc__i] = 0;
            }
            
                                                                                                                                                  

            _solarhouse1_measurement_single_phase_power_meter1_ia_rms__square_sum = 0x0;
        _solarhouse1_measurement_single_phase_power_meter1_ia_rms__sample_cnt = 0x0;
            
                                                                                                                                                  

            _solarhouse1_measurement_single_phase_power_meter1_va_rms__square_sum = 0x0;
        _solarhouse1_measurement_single_phase_power_meter1_va_rms__sample_cnt = 0x0;
            
    
                                                                                                                                 

            _solarhouse1_measurement_single_phase_power_meter1_phi__phase_diff = 0x0;
        _solarhouse1_measurement_single_phase_power_meter1_phi__phase_state = 0x0;
        _solarhouse1_measurement_single_phase_power_meter1_phi__correction_in = 0x0;
        _solarhouse1_measurement_single_phase_power_meter1_phi__previous_correction_in = 0x0;
        _solarhouse1_measurement_single_phase_power_meter1_phi__sample_cnt_in = 0x0;
        _solarhouse1_measurement_single_phase_power_meter1_phi__filtered_in = 0x0;
        _solarhouse1_measurement_single_phase_power_meter1_phi__previous_filtered_in = 0x0;
        _solarhouse1_measurement_single_phase_power_meter1_phi__zc_flag_in = 0x0;
        _solarhouse1_measurement_single_phase_power_meter1_phi__no_zc_flag_in = 0x0;
    
    _solarhouse1_measurement_single_phase_power_meter1_phi__previous_correction_ref = 0x0;
    _solarhouse1_measurement_single_phase_power_meter1_phi__sample_cnt_ref = 0x0;
    _solarhouse1_measurement_single_phase_power_meter1_phi__previous_filtered_ref = 0x0;


              HIL_OutAO(0x403d, 0.0f);
        
              HIL_OutAO(0x403e, 0.0f);
        
    
    
    
    
              HIL_OutAO(0x404b, 0.0f);
        
    
        

    
        

    
    
    
    
    
    
    
    
                            X_UnInt32 _solarhouse2_inverter_controller_hilbert_transform__i;    
                                                                                          

                        for (_solarhouse2_inverter_controller_hilbert_transform__i = 0; _solarhouse2_inverter_controller_hilbert_transform__i < 1; _solarhouse2_inverter_controller_hilbert_transform__i++) {
                _solarhouse2_inverter_controller_hilbert_transform__states[_solarhouse2_inverter_controller_hilbert_transform__i] = 0;
            }
            
    
              HIL_OutAO(0x4052, 0.0f);
        
                            X_UnInt32 _solarhouse2_inverter_controller_hilbert_transform1__i;    
                                                                                          

                        for (_solarhouse2_inverter_controller_hilbert_transform1__i = 0; _solarhouse2_inverter_controller_hilbert_transform1__i < 1; _solarhouse2_inverter_controller_hilbert_transform1__i++) {
                _solarhouse2_inverter_controller_hilbert_transform1__states[_solarhouse2_inverter_controller_hilbert_transform1__i] = 0;
            }
            
              HIL_OutAO(0x404f, 0.0f);
        
    
              HIL_OutAO(0x4050, 0.0f);
        
    
              HIL_OutAO(0x4053, 0.0f);
        
                            X_UnInt32 _solarhouse2_inverter_lpf_dc__i;    
                                                                                          

                        for (_solarhouse2_inverter_lpf_dc__i = 0; _solarhouse2_inverter_lpf_dc__i < 1; _solarhouse2_inverter_lpf_dc__i++) {
                _solarhouse2_inverter_lpf_dc__states[_solarhouse2_inverter_lpf_dc__i] = 0;
            }
            
                                                                                                                                                  

            _solarhouse2_measurement_single_phase_power_meter1_ia_rms__square_sum = 0x0;
        _solarhouse2_measurement_single_phase_power_meter1_ia_rms__sample_cnt = 0x0;
            
                                                                                                                                                  

            _solarhouse2_measurement_single_phase_power_meter1_va_rms__square_sum = 0x0;
        _solarhouse2_measurement_single_phase_power_meter1_va_rms__sample_cnt = 0x0;
            
    
                                                                                                                                 

            _solarhouse2_measurement_single_phase_power_meter1_phi__phase_diff = 0x0;
        _solarhouse2_measurement_single_phase_power_meter1_phi__phase_state = 0x0;
        _solarhouse2_measurement_single_phase_power_meter1_phi__correction_in = 0x0;
        _solarhouse2_measurement_single_phase_power_meter1_phi__previous_correction_in = 0x0;
        _solarhouse2_measurement_single_phase_power_meter1_phi__sample_cnt_in = 0x0;
        _solarhouse2_measurement_single_phase_power_meter1_phi__filtered_in = 0x0;
        _solarhouse2_measurement_single_phase_power_meter1_phi__previous_filtered_in = 0x0;
        _solarhouse2_measurement_single_phase_power_meter1_phi__zc_flag_in = 0x0;
        _solarhouse2_measurement_single_phase_power_meter1_phi__no_zc_flag_in = 0x0;
    
    _solarhouse2_measurement_single_phase_power_meter1_phi__previous_correction_ref = 0x0;
    _solarhouse2_measurement_single_phase_power_meter1_phi__sample_cnt_ref = 0x0;
    _solarhouse2_measurement_single_phase_power_meter1_phi__previous_filtered_ref = 0x0;


              HIL_OutAO(0x4057, 0.0f);
        
              HIL_OutAO(0x4058, 0.0f);
        
    
    
    
    
              HIL_OutAO(0x4065, 0.0f);
        
    
        

    
        

    
    
    
    
    
    
    
    
                            X_UnInt32 _solarhouse3_inverter_controller_hilbert_transform__i;    
                                                                                          

                        for (_solarhouse3_inverter_controller_hilbert_transform__i = 0; _solarhouse3_inverter_controller_hilbert_transform__i < 1; _solarhouse3_inverter_controller_hilbert_transform__i++) {
                _solarhouse3_inverter_controller_hilbert_transform__states[_solarhouse3_inverter_controller_hilbert_transform__i] = 0;
            }
            
    
              HIL_OutAO(0x406c, 0.0f);
        
                            X_UnInt32 _solarhouse3_inverter_controller_hilbert_transform1__i;    
                                                                                          

                        for (_solarhouse3_inverter_controller_hilbert_transform1__i = 0; _solarhouse3_inverter_controller_hilbert_transform1__i < 1; _solarhouse3_inverter_controller_hilbert_transform1__i++) {
                _solarhouse3_inverter_controller_hilbert_transform1__states[_solarhouse3_inverter_controller_hilbert_transform1__i] = 0;
            }
            
              HIL_OutAO(0x4069, 0.0f);
        
    
              HIL_OutAO(0x406a, 0.0f);
        
    
              HIL_OutAO(0x406d, 0.0f);
        
                            X_UnInt32 _solarhouse3_inverter_lpf_dc__i;    
                                                                                          

                        for (_solarhouse3_inverter_lpf_dc__i = 0; _solarhouse3_inverter_lpf_dc__i < 1; _solarhouse3_inverter_lpf_dc__i++) {
                _solarhouse3_inverter_lpf_dc__states[_solarhouse3_inverter_lpf_dc__i] = 0;
            }
            
                                                                                                                                                  

            _solarhouse3_measurement_single_phase_power_meter1_ia_rms__square_sum = 0x0;
        _solarhouse3_measurement_single_phase_power_meter1_ia_rms__sample_cnt = 0x0;
            
                                                                                                                                                  

            _solarhouse3_measurement_single_phase_power_meter1_va_rms__square_sum = 0x0;
        _solarhouse3_measurement_single_phase_power_meter1_va_rms__sample_cnt = 0x0;
            
    
                                                                                                                                 

            _solarhouse3_measurement_single_phase_power_meter1_phi__phase_diff = 0x0;
        _solarhouse3_measurement_single_phase_power_meter1_phi__phase_state = 0x0;
        _solarhouse3_measurement_single_phase_power_meter1_phi__correction_in = 0x0;
        _solarhouse3_measurement_single_phase_power_meter1_phi__previous_correction_in = 0x0;
        _solarhouse3_measurement_single_phase_power_meter1_phi__sample_cnt_in = 0x0;
        _solarhouse3_measurement_single_phase_power_meter1_phi__filtered_in = 0x0;
        _solarhouse3_measurement_single_phase_power_meter1_phi__previous_filtered_in = 0x0;
        _solarhouse3_measurement_single_phase_power_meter1_phi__zc_flag_in = 0x0;
        _solarhouse3_measurement_single_phase_power_meter1_phi__no_zc_flag_in = 0x0;
    
    _solarhouse3_measurement_single_phase_power_meter1_phi__previous_correction_ref = 0x0;
    _solarhouse3_measurement_single_phase_power_meter1_phi__sample_cnt_ref = 0x0;
    _solarhouse3_measurement_single_phase_power_meter1_phi__previous_filtered_ref = 0x0;


              HIL_OutAO(0x4071, 0.0f);
        
              HIL_OutAO(0x4072, 0.0f);
        
    
    
    
    
              HIL_OutAO(0x407f, 0.0f);
        
    
        

    
        

    
    
    
    
    
    
    
    
                            X_UnInt32 _solarhouse4_inverter_controller_hilbert_transform__i;    
                                                                                          

                        for (_solarhouse4_inverter_controller_hilbert_transform__i = 0; _solarhouse4_inverter_controller_hilbert_transform__i < 1; _solarhouse4_inverter_controller_hilbert_transform__i++) {
                _solarhouse4_inverter_controller_hilbert_transform__states[_solarhouse4_inverter_controller_hilbert_transform__i] = 0;
            }
            
    
              HIL_OutAO(0x4086, 0.0f);
        
                            X_UnInt32 _solarhouse4_inverter_controller_hilbert_transform1__i;    
                                                                                          

                        for (_solarhouse4_inverter_controller_hilbert_transform1__i = 0; _solarhouse4_inverter_controller_hilbert_transform1__i < 1; _solarhouse4_inverter_controller_hilbert_transform1__i++) {
                _solarhouse4_inverter_controller_hilbert_transform1__states[_solarhouse4_inverter_controller_hilbert_transform1__i] = 0;
            }
            
              HIL_OutAO(0x4083, 0.0f);
        
    
              HIL_OutAO(0x4084, 0.0f);
        
    
              HIL_OutAO(0x4087, 0.0f);
        
                            X_UnInt32 _solarhouse4_inverter_lpf_dc__i;    
                                                                                          

                        for (_solarhouse4_inverter_lpf_dc__i = 0; _solarhouse4_inverter_lpf_dc__i < 1; _solarhouse4_inverter_lpf_dc__i++) {
                _solarhouse4_inverter_lpf_dc__states[_solarhouse4_inverter_lpf_dc__i] = 0;
            }
            
                                                                                                                                                  

            _solarhouse4_measurement_single_phase_power_meter1_ia_rms__square_sum = 0x0;
        _solarhouse4_measurement_single_phase_power_meter1_ia_rms__sample_cnt = 0x0;
            
                                                                                                                                                  

            _solarhouse4_measurement_single_phase_power_meter1_va_rms__square_sum = 0x0;
        _solarhouse4_measurement_single_phase_power_meter1_va_rms__sample_cnt = 0x0;
            
    
                                                                                                                                 

            _solarhouse4_measurement_single_phase_power_meter1_phi__phase_diff = 0x0;
        _solarhouse4_measurement_single_phase_power_meter1_phi__phase_state = 0x0;
        _solarhouse4_measurement_single_phase_power_meter1_phi__correction_in = 0x0;
        _solarhouse4_measurement_single_phase_power_meter1_phi__previous_correction_in = 0x0;
        _solarhouse4_measurement_single_phase_power_meter1_phi__sample_cnt_in = 0x0;
        _solarhouse4_measurement_single_phase_power_meter1_phi__filtered_in = 0x0;
        _solarhouse4_measurement_single_phase_power_meter1_phi__previous_filtered_in = 0x0;
        _solarhouse4_measurement_single_phase_power_meter1_phi__zc_flag_in = 0x0;
        _solarhouse4_measurement_single_phase_power_meter1_phi__no_zc_flag_in = 0x0;
    
    _solarhouse4_measurement_single_phase_power_meter1_phi__previous_correction_ref = 0x0;
    _solarhouse4_measurement_single_phase_power_meter1_phi__sample_cnt_ref = 0x0;
    _solarhouse4_measurement_single_phase_power_meter1_phi__previous_filtered_ref = 0x0;


              HIL_OutAO(0x408b, 0.0f);
        
              HIL_OutAO(0x408c, 0.0f);
        
    
    
    
    
    
    
        

              HIL_OutAO(0x4019, 0.0f);
        
    
    
    
    
    
    
    
    
    
    
              HIL_OutAO(0x401c, 0.0f);
        
    
                                        
    // write initial SG parameters

    X_UnInt32 _grid_vs_tdf_sg_ctrl_sine1__i;
    X_UnInt32 _grid_vs_tdf_sg_ctrl_sine1__j;

    for (_grid_vs_tdf_sg_ctrl_sine1__i=0; _grid_vs_tdf_sg_ctrl_sine1__i<1; _grid_vs_tdf_sg_ctrl_sine1__i++){
        HIL_OutFloat(0x400200 + _grid_vs_tdf_sg_ctrl_sine1__channels[_grid_vs_tdf_sg_ctrl_sine1__i], 0.0f);  // set gain to 0 (initial value)
        HIL_OutInt32(0x400180 + _grid_vs_tdf_sg_ctrl_sine1__channels[_grid_vs_tdf_sg_ctrl_sine1__i], 0);      // set offset to 0 (initial value)
        HIL_OutInt32(0x400000 + _grid_vs_tdf_sg_ctrl_sine1__channels[_grid_vs_tdf_sg_ctrl_sine1__i], 1);
        HIL_OutInt32(0x400280 + _grid_vs_tdf_sg_ctrl_sine1__channels[_grid_vs_tdf_sg_ctrl_sine1__i], 0);
        HIL_OutFloat(0x400100 + _grid_vs_tdf_sg_ctrl_sine1__channels[_grid_vs_tdf_sg_ctrl_sine1__i], 2.0f);
        HIL_OutInt32(0x400300 + _grid_vs_tdf_sg_ctrl_sine1__channels[_grid_vs_tdf_sg_ctrl_sine1__i], 1);   // enable wave update
        _grid_vs_tdf_sg_ctrl_sine1__sg_update_value += 1<<_grid_vs_tdf_sg_ctrl_sine1__channels[_grid_vs_tdf_sg_ctrl_sine1__i];
    }
    // calculate and write waveform data
    _grid_vs_tdf_sg_ctrl_sine1__k = 2.0f * M_PI / _grid_vs_tdf_sg_ctrl_sine1__no_of_points;
    // oscillator based sine implementation
    // oscillator init
    _grid_vs_tdf_sg_ctrl_sine1__xn_1 = sin(0.0f);
    _grid_vs_tdf_sg_ctrl_sine1__yn_1 = cos(0.0f);
    // oscillator
    for (_grid_vs_tdf_sg_ctrl_sine1__i = 0; _grid_vs_tdf_sg_ctrl_sine1__i < _grid_vs_tdf_sg_ctrl_sine1__no_of_points; _grid_vs_tdf_sg_ctrl_sine1__i++){
        _grid_vs_tdf_sg_ctrl_sine1__xn = _grid_vs_tdf_sg_ctrl_sine1__xn_1 + _grid_vs_tdf_sg_ctrl_sine1__k*_grid_vs_tdf_sg_ctrl_sine1__yn_1;
        _grid_vs_tdf_sg_ctrl_sine1__yn = _grid_vs_tdf_sg_ctrl_sine1__yn_1 - _grid_vs_tdf_sg_ctrl_sine1__k*_grid_vs_tdf_sg_ctrl_sine1__xn;
        // write the same data to all the channels
        for (_grid_vs_tdf_sg_ctrl_sine1__j=0; _grid_vs_tdf_sg_ctrl_sine1__j<1; _grid_vs_tdf_sg_ctrl_sine1__j++){
            HIL_OutFloat(0x600000 + _grid_vs_tdf_sg_ctrl_sine1__channels[_grid_vs_tdf_sg_ctrl_sine1__j]*0x800 + _grid_vs_tdf_sg_ctrl_sine1__i, (float) _grid_vs_tdf_sg_ctrl_sine1__xn_1);
        }
        _grid_vs_tdf_sg_ctrl_sine1__xn_1 = _grid_vs_tdf_sg_ctrl_sine1__xn;
        _grid_vs_tdf_sg_ctrl_sine1__yn_1 = _grid_vs_tdf_sg_ctrl_sine1__yn;
    }
    HIL_OutInt32(0x400080, _grid_vs_tdf_sg_ctrl_sine1__sg_update_value);  // update both parameters and waveforms on all channels

    
    
    
    
        

              HIL_OutAO(0x4034, 0.0f);
        
    
    
    
    
    
    
    
    
    
    
              HIL_OutAO(0x4037, 0.0f);
        
    
    
    
    
    
        

              HIL_OutAO(0x404e, 0.0f);
        
    
    
    
    
    
    
    
    
    
    
              HIL_OutAO(0x4051, 0.0f);
        
    
    
    
    
    
        

              HIL_OutAO(0x4068, 0.0f);
        
    
    
    
    
    
    
    
    
    
    
              HIL_OutAO(0x406b, 0.0f);
        
    
    
    
    
    
        

              HIL_OutAO(0x4082, 0.0f);
        
    
    
    
    
    
    
    
    
    
    
              HIL_OutAO(0x4085, 0.0f);
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
                            X_UnInt32 _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i;    
                                                                                          

                        for (_ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i = 0; _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i < 1; _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i++) {
                _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__states[_ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i] = 0;
            }
            
    
    
    
              HIL_OutAO(0x4017, 0.0f);
        
                            X_UnInt32 _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i;    
                                                                                          

                        for (_ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i = 0; _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i < 1; _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i++) {
                _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__states[_ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i] = 0;
            }
            
    
    
    
              HIL_OutAO(0x4018, 0.0f);
        
              HIL_OutAO(0x400a, 0.0f);
        
    
    
    
              HIL_OutAO(0x400b, 0.0f);
        
    
    
    
    
              HIL_OutAO(0x4023, 0.0f);
        
    
                            X_UnInt32 _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i;    
                                                                                          

                        for (_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i = 0; _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i < 1; _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i++) {
                _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__states[_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i] = 0;
            }
            
    
    
    
              HIL_OutAO(0x4032, 0.0f);
        
                            X_UnInt32 _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i;    
                                                                                          

                        for (_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i = 0; _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i < 1; _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i++) {
                _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__states[_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i] = 0;
            }
            
    
    
    
              HIL_OutAO(0x4033, 0.0f);
        
              HIL_OutAO(0x4025, 0.0f);
        
    
    
    
              HIL_OutAO(0x4026, 0.0f);
        
    
    
    
    
              HIL_OutAO(0x403a, 0.0f);
        
              HIL_OutAO(0x403c, 0.0f);
        
    
    
                            X_UnInt32 _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i;    
                                                                                          

                        for (_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i = 0; _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i < 1; _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i++) {
                _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__states[_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i] = 0;
            }
            
    
    
    
              HIL_OutAO(0x404c, 0.0f);
        
                            X_UnInt32 _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i;    
                                                                                          

                        for (_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i = 0; _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i < 1; _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i++) {
                _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__states[_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i] = 0;
            }
            
    
    
    
              HIL_OutAO(0x404d, 0.0f);
        
              HIL_OutAO(0x403f, 0.0f);
        
    
    
    
              HIL_OutAO(0x4040, 0.0f);
        
    
    
    
    
              HIL_OutAO(0x4054, 0.0f);
        
              HIL_OutAO(0x4056, 0.0f);
        
    
    
                            X_UnInt32 _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i;    
                                                                                          

                        for (_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i = 0; _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i < 1; _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i++) {
                _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__states[_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i] = 0;
            }
            
    
    
    
              HIL_OutAO(0x4066, 0.0f);
        
                            X_UnInt32 _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i;    
                                                                                          

                        for (_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i = 0; _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i < 1; _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i++) {
                _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__states[_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i] = 0;
            }
            
    
    
    
              HIL_OutAO(0x4067, 0.0f);
        
              HIL_OutAO(0x4059, 0.0f);
        
    
    
    
              HIL_OutAO(0x405a, 0.0f);
        
    
    
    
    
              HIL_OutAO(0x406e, 0.0f);
        
              HIL_OutAO(0x4070, 0.0f);
        
    
    
                            X_UnInt32 _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i;    
                                                                                          

                        for (_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i = 0; _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i < 1; _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i++) {
                _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__states[_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i] = 0;
            }
            
    
    
    
              HIL_OutAO(0x4080, 0.0f);
        
                            X_UnInt32 _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i;    
                                                                                          

                        for (_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i = 0; _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i < 1; _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i++) {
                _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__states[_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i] = 0;
            }
            
    
    
    
              HIL_OutAO(0x4081, 0.0f);
        
              HIL_OutAO(0x4073, 0.0f);
        
    
    
    
              HIL_OutAO(0x4074, 0.0f);
        
    
    
    
    
              HIL_OutAO(0x4088, 0.0f);
        
              HIL_OutAO(0x408a, 0.0f);
        
    
    
    
    
    
    
    
    
    
    
              HIL_OutAO(0x4024, 0.0f);
        
    
    
    
    
    
    
    
    
              HIL_OutAO(0x403b, 0.0f);
        
    
    
    
    
    
    
    
    
              HIL_OutAO(0x4055, 0.0f);
        
    
    
    
    
    
    
    
    
              HIL_OutAO(0x406f, 0.0f);
        
    
    
    
    
    
    
    
    
              HIL_OutAO(0x4089, 0.0f);
        
              HIL_OutAO(0x400c, 0.0f);
        
                _ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__state = 0.0f;
    
    
                            X_UnInt32 _ess_inverter_power_meas_power_meas_dqpu_lpf_p__i;    
                                                                                          

                        for (_ess_inverter_power_meas_power_meas_dqpu_lpf_p__i = 0; _ess_inverter_power_meas_power_meas_dqpu_lpf_p__i < 1; _ess_inverter_power_meas_power_meas_dqpu_lpf_p__i++) {
                _ess_inverter_power_meas_power_meas_dqpu_lpf_p__states[_ess_inverter_power_meas_power_meas_dqpu_lpf_p__i] = 0;
            }
            
                            X_UnInt32 _ess_inverter_power_meas_power_meas_dqpu_lpf_q__i;    
                                                                                          

                        for (_ess_inverter_power_meas_power_meas_dqpu_lpf_q__i = 0; _ess_inverter_power_meas_power_meas_dqpu_lpf_q__i < 1; _ess_inverter_power_meas_power_meas_dqpu_lpf_q__i++) {
                _ess_inverter_power_meas_power_meas_dqpu_lpf_q__states[_ess_inverter_power_meas_power_meas_dqpu_lpf_q__i] = 0;
            }
            
    
              HIL_OutAO(0x4027, 0.0f);
        
                _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__state = 0.0f;
    
    
                            X_UnInt32 _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_p__i;    
                                                                                          

                        for (_solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_p__i = 0; _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_p__i < 1; _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_p__i++) {
                _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_p__states[_solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_p__i] = 0;
            }
            
                            X_UnInt32 _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_q__i;    
                                                                                          

                        for (_solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_q__i = 0; _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_q__i < 1; _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_q__i++) {
                _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_q__states[_solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_q__i] = 0;
            }
            
    
              HIL_OutAO(0x4041, 0.0f);
        
                _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__state = 0.0f;
    
    
                            X_UnInt32 _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_p__i;    
                                                                                          

                        for (_solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_p__i = 0; _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_p__i < 1; _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_p__i++) {
                _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_p__states[_solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_p__i] = 0;
            }
            
                            X_UnInt32 _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_q__i;    
                                                                                          

                        for (_solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_q__i = 0; _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_q__i < 1; _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_q__i++) {
                _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_q__states[_solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_q__i] = 0;
            }
            
    
              HIL_OutAO(0x405b, 0.0f);
        
                _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__state = 0.0f;
    
    
                            X_UnInt32 _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_p__i;    
                                                                                          

                        for (_solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_p__i = 0; _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_p__i < 1; _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_p__i++) {
                _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_p__states[_solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_p__i] = 0;
            }
            
                            X_UnInt32 _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_q__i;    
                                                                                          

                        for (_solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_q__i = 0; _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_q__i < 1; _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_q__i++) {
                _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_q__states[_solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_q__i] = 0;
            }
            
    
              HIL_OutAO(0x4075, 0.0f);
        
                _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__state = 0.0f;
    
    
                            X_UnInt32 _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_p__i;    
                                                                                          

                        for (_solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_p__i = 0; _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_p__i < 1; _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_p__i++) {
                _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_p__states[_solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_p__i] = 0;
            }
            
                            X_UnInt32 _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_q__i;    
                                                                                          

                        for (_solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_q__i = 0; _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_q__i < 1; _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_q__i++) {
                _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_q__states[_solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_q__i] = 0;
            }
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
              HIL_OutAO(0x4013, 0.0f);
        
    
    
    
    
    
              HIL_OutAO(0x402e, 0.0f);
        
    
    
    
    
    
              HIL_OutAO(0x4048, 0.0f);
        
    
    
    
    
    
              HIL_OutAO(0x4062, 0.0f);
        
    
    
    
    
    
              HIL_OutAO(0x407c, 0.0f);
        
    
    
    
    
    
              HIL_OutAO(0x400e, 0.0f);
        
    
              HIL_OutAO(0x400d, 0.0f);
        
    
                            X_UnInt32 _ess_inverter_controller_single_phase_pll1_discrete_transfer_function1__i;    
                                                                                          

                        for (_ess_inverter_controller_single_phase_pll1_discrete_transfer_function1__i = 0; _ess_inverter_controller_single_phase_pll1_discrete_transfer_function1__i < 1; _ess_inverter_controller_single_phase_pll1_discrete_transfer_function1__i++) {
                _ess_inverter_controller_single_phase_pll1_discrete_transfer_function1__states[_ess_inverter_controller_single_phase_pll1_discrete_transfer_function1__i] = 0;
            }
            
              HIL_OutAO(0x4029, 0.0f);
        
    
              HIL_OutAO(0x4028, 0.0f);
        
    
                            X_UnInt32 _solarhouse1_inverter_controller_single_phase_pll1_discrete_transfer_function1__i;    
                                                                                          

                        for (_solarhouse1_inverter_controller_single_phase_pll1_discrete_transfer_function1__i = 0; _solarhouse1_inverter_controller_single_phase_pll1_discrete_transfer_function1__i < 1; _solarhouse1_inverter_controller_single_phase_pll1_discrete_transfer_function1__i++) {
                _solarhouse1_inverter_controller_single_phase_pll1_discrete_transfer_function1__states[_solarhouse1_inverter_controller_single_phase_pll1_discrete_transfer_function1__i] = 0;
            }
            
              HIL_OutAO(0x4043, 0.0f);
        
    
              HIL_OutAO(0x4042, 0.0f);
        
    
                            X_UnInt32 _solarhouse2_inverter_controller_single_phase_pll1_discrete_transfer_function1__i;    
                                                                                          

                        for (_solarhouse2_inverter_controller_single_phase_pll1_discrete_transfer_function1__i = 0; _solarhouse2_inverter_controller_single_phase_pll1_discrete_transfer_function1__i < 1; _solarhouse2_inverter_controller_single_phase_pll1_discrete_transfer_function1__i++) {
                _solarhouse2_inverter_controller_single_phase_pll1_discrete_transfer_function1__states[_solarhouse2_inverter_controller_single_phase_pll1_discrete_transfer_function1__i] = 0;
            }
            
              HIL_OutAO(0x405d, 0.0f);
        
    
              HIL_OutAO(0x405c, 0.0f);
        
    
                            X_UnInt32 _solarhouse3_inverter_controller_single_phase_pll1_discrete_transfer_function1__i;    
                                                                                          

                        for (_solarhouse3_inverter_controller_single_phase_pll1_discrete_transfer_function1__i = 0; _solarhouse3_inverter_controller_single_phase_pll1_discrete_transfer_function1__i < 1; _solarhouse3_inverter_controller_single_phase_pll1_discrete_transfer_function1__i++) {
                _solarhouse3_inverter_controller_single_phase_pll1_discrete_transfer_function1__states[_solarhouse3_inverter_controller_single_phase_pll1_discrete_transfer_function1__i] = 0;
            }
            
              HIL_OutAO(0x4077, 0.0f);
        
    
              HIL_OutAO(0x4076, 0.0f);
        
    
                            X_UnInt32 _solarhouse4_inverter_controller_single_phase_pll1_discrete_transfer_function1__i;    
                                                                                          

                        for (_solarhouse4_inverter_controller_single_phase_pll1_discrete_transfer_function1__i = 0; _solarhouse4_inverter_controller_single_phase_pll1_discrete_transfer_function1__i < 1; _solarhouse4_inverter_controller_single_phase_pll1_discrete_transfer_function1__i++) {
                _solarhouse4_inverter_controller_single_phase_pll1_discrete_transfer_function1__states[_solarhouse4_inverter_controller_single_phase_pll1_discrete_transfer_function1__i] = 0;
            }
            
        _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__integrator_state =  0.0;
    _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__filter_state =  0.0;

              HIL_OutAO(0x4012, 0.0f);
        
        _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__integrator_state =  0.0;
    _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__filter_state =  0.0;

              HIL_OutAO(0x4011, 0.0f);
        
    
        _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__integrator_state =  0.0;
    _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__filter_state =  0.0;

              HIL_OutAO(0x402d, 0.0f);
        
        _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__integrator_state =  0.0;
    _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__filter_state =  0.0;

              HIL_OutAO(0x402c, 0.0f);
        
    
        _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__integrator_state =  0.0;
    _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__filter_state =  0.0;

              HIL_OutAO(0x4047, 0.0f);
        
        _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__integrator_state =  0.0;
    _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__filter_state =  0.0;

              HIL_OutAO(0x4046, 0.0f);
        
    
        _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__integrator_state =  0.0;
    _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__filter_state =  0.0;

              HIL_OutAO(0x4061, 0.0f);
        
        _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__integrator_state =  0.0;
    _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__filter_state =  0.0;

              HIL_OutAO(0x4060, 0.0f);
        
    
        _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__integrator_state =  0.0;
    _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__filter_state =  0.0;

              HIL_OutAO(0x407b, 0.0f);
        
        _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__integrator_state =  0.0;
    _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__filter_state =  0.0;

              HIL_OutAO(0x407a, 0.0f);
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        _ess_inverter_controller_single_phase_pll1_integrator_with_reset__out_calc=0.0;_ess_inverter_controller_single_phase_pll1_integrator_with_reset__reset_value=2*M_PI;

    
    
    
        _solarhouse1_inverter_controller_single_phase_pll1_integrator_with_reset__out_calc=0.0;_solarhouse1_inverter_controller_single_phase_pll1_integrator_with_reset__reset_value=2*M_PI;

    
    
    
        _solarhouse2_inverter_controller_single_phase_pll1_integrator_with_reset__out_calc=0.0;_solarhouse2_inverter_controller_single_phase_pll1_integrator_with_reset__reset_value=2*M_PI;

    
    
    
        _solarhouse3_inverter_controller_single_phase_pll1_integrator_with_reset__out_calc=0.0;_solarhouse3_inverter_controller_single_phase_pll1_integrator_with_reset__reset_value=2*M_PI;

    
    
    
        _solarhouse4_inverter_controller_single_phase_pll1_integrator_with_reset__out_calc=0.0;_solarhouse4_inverter_controller_single_phase_pll1_integrator_with_reset__reset_value=2*M_PI;

    
              HIL_OutAO(0x4015, 0.0f);
        
    
              HIL_OutAO(0x4014, 0.0f);
        
    
    
              HIL_OutAO(0x4030, 0.0f);
        
    
              HIL_OutAO(0x402f, 0.0f);
        
    
    
              HIL_OutAO(0x404a, 0.0f);
        
    
              HIL_OutAO(0x4049, 0.0f);
        
    
    
              HIL_OutAO(0x4064, 0.0f);
        
    
              HIL_OutAO(0x4063, 0.0f);
        
    
    
              HIL_OutAO(0x407e, 0.0f);
        
    
              HIL_OutAO(0x407d, 0.0f);
        
    
              HIL_OutAO(0x4010, 0.0f);
        
              HIL_OutAO(0x400f, 0.0f);
        
    
              HIL_OutAO(0x402b, 0.0f);
        
              HIL_OutAO(0x402a, 0.0f);
        
    
              HIL_OutAO(0x4045, 0.0f);
        
              HIL_OutAO(0x4044, 0.0f);
        
    
              HIL_OutAO(0x405f, 0.0f);
        
              HIL_OutAO(0x405e, 0.0f);
        
    
              HIL_OutAO(0x4079, 0.0f);
        
              HIL_OutAO(0x4078, 0.0f);
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
                                                    _ess_inverter_single_phase_inverter1_pwm_modulator__update_mask = 3;
                                HIL_OutInt32(0x2000080 + _ess_inverter_single_phase_inverter1_pwm_modulator__channels[0], 2500);// divide by 2 is already implemented in hw
                HIL_OutInt32(0x20000c0 + _ess_inverter_single_phase_inverter1_pwm_modulator__channels[0], 250);
                        HIL_OutInt32(0x2000080 + _ess_inverter_single_phase_inverter1_pwm_modulator__channels[1], 2500);// divide by 2 is already implemented in hw
                HIL_OutInt32(0x20000c0 + _ess_inverter_single_phase_inverter1_pwm_modulator__channels[1], 250);
                            HIL_OutInt32(0x20001c0 + _ess_inverter_single_phase_inverter1_pwm_modulator__channels[0], 0);
                HIL_OutInt32(0x2000200 + _ess_inverter_single_phase_inverter1_pwm_modulator__channels[0], 0);
                            HIL_OutInt32(0x20001c0 + _ess_inverter_single_phase_inverter1_pwm_modulator__channels[1], 2500);
                HIL_OutInt32(0x2000200 + _ess_inverter_single_phase_inverter1_pwm_modulator__channels[1], 1);
                        HIL_OutInt32(0x2000240 + _ess_inverter_single_phase_inverter1_pwm_modulator__channels[0], 0);
                    HIL_OutInt32(0x2000240 + _ess_inverter_single_phase_inverter1_pwm_modulator__channels[1], 0);
                    HIL_OutInt32(0x2000300 + _ess_inverter_single_phase_inverter1_pwm_modulator__channels[0], 1);
            HIL_OutInt32(0x2000300 + _ess_inverter_single_phase_inverter1_pwm_modulator__channels[1], 1);
    HIL_OutInt32(0x2000140, _ess_inverter_single_phase_inverter1_pwm_modulator__update_mask);


                                                    _solarhouse1_inverter_single_phase_inverter1_pwm_modulator__update_mask = 12;
                                HIL_OutInt32(0x2000080 + _solarhouse1_inverter_single_phase_inverter1_pwm_modulator__channels[0], 2500);// divide by 2 is already implemented in hw
                HIL_OutInt32(0x20000c0 + _solarhouse1_inverter_single_phase_inverter1_pwm_modulator__channels[0], 250);
                        HIL_OutInt32(0x2000080 + _solarhouse1_inverter_single_phase_inverter1_pwm_modulator__channels[1], 2500);// divide by 2 is already implemented in hw
                HIL_OutInt32(0x20000c0 + _solarhouse1_inverter_single_phase_inverter1_pwm_modulator__channels[1], 250);
                            HIL_OutInt32(0x20001c0 + _solarhouse1_inverter_single_phase_inverter1_pwm_modulator__channels[0], 0);
                HIL_OutInt32(0x2000200 + _solarhouse1_inverter_single_phase_inverter1_pwm_modulator__channels[0], 0);
                            HIL_OutInt32(0x20001c0 + _solarhouse1_inverter_single_phase_inverter1_pwm_modulator__channels[1], 2500);
                HIL_OutInt32(0x2000200 + _solarhouse1_inverter_single_phase_inverter1_pwm_modulator__channels[1], 1);
                        HIL_OutInt32(0x2000240 + _solarhouse1_inverter_single_phase_inverter1_pwm_modulator__channels[0], 0);
                    HIL_OutInt32(0x2000240 + _solarhouse1_inverter_single_phase_inverter1_pwm_modulator__channels[1], 0);
                    HIL_OutInt32(0x2000300 + _solarhouse1_inverter_single_phase_inverter1_pwm_modulator__channels[0], 1);
            HIL_OutInt32(0x2000300 + _solarhouse1_inverter_single_phase_inverter1_pwm_modulator__channels[1], 1);
    HIL_OutInt32(0x2000140, _solarhouse1_inverter_single_phase_inverter1_pwm_modulator__update_mask);


                                                    _solarhouse2_inverter_single_phase_inverter1_pwm_modulator__update_mask = 48;
                                HIL_OutInt32(0x2000080 + _solarhouse2_inverter_single_phase_inverter1_pwm_modulator__channels[0], 2500);// divide by 2 is already implemented in hw
                HIL_OutInt32(0x20000c0 + _solarhouse2_inverter_single_phase_inverter1_pwm_modulator__channels[0], 250);
                        HIL_OutInt32(0x2000080 + _solarhouse2_inverter_single_phase_inverter1_pwm_modulator__channels[1], 2500);// divide by 2 is already implemented in hw
                HIL_OutInt32(0x20000c0 + _solarhouse2_inverter_single_phase_inverter1_pwm_modulator__channels[1], 250);
                            HIL_OutInt32(0x20001c0 + _solarhouse2_inverter_single_phase_inverter1_pwm_modulator__channels[0], 0);
                HIL_OutInt32(0x2000200 + _solarhouse2_inverter_single_phase_inverter1_pwm_modulator__channels[0], 0);
                            HIL_OutInt32(0x20001c0 + _solarhouse2_inverter_single_phase_inverter1_pwm_modulator__channels[1], 2500);
                HIL_OutInt32(0x2000200 + _solarhouse2_inverter_single_phase_inverter1_pwm_modulator__channels[1], 1);
                        HIL_OutInt32(0x2000240 + _solarhouse2_inverter_single_phase_inverter1_pwm_modulator__channels[0], 0);
                    HIL_OutInt32(0x2000240 + _solarhouse2_inverter_single_phase_inverter1_pwm_modulator__channels[1], 0);
                    HIL_OutInt32(0x2000300 + _solarhouse2_inverter_single_phase_inverter1_pwm_modulator__channels[0], 1);
            HIL_OutInt32(0x2000300 + _solarhouse2_inverter_single_phase_inverter1_pwm_modulator__channels[1], 1);
    HIL_OutInt32(0x2000140, _solarhouse2_inverter_single_phase_inverter1_pwm_modulator__update_mask);


                                                    _solarhouse3_inverter_single_phase_inverter1_pwm_modulator__update_mask = 192;
                                HIL_OutInt32(0x2000080 + _solarhouse3_inverter_single_phase_inverter1_pwm_modulator__channels[0], 2500);// divide by 2 is already implemented in hw
                HIL_OutInt32(0x20000c0 + _solarhouse3_inverter_single_phase_inverter1_pwm_modulator__channels[0], 250);
                        HIL_OutInt32(0x2000080 + _solarhouse3_inverter_single_phase_inverter1_pwm_modulator__channels[1], 2500);// divide by 2 is already implemented in hw
                HIL_OutInt32(0x20000c0 + _solarhouse3_inverter_single_phase_inverter1_pwm_modulator__channels[1], 250);
                            HIL_OutInt32(0x20001c0 + _solarhouse3_inverter_single_phase_inverter1_pwm_modulator__channels[0], 0);
                HIL_OutInt32(0x2000200 + _solarhouse3_inverter_single_phase_inverter1_pwm_modulator__channels[0], 0);
                            HIL_OutInt32(0x20001c0 + _solarhouse3_inverter_single_phase_inverter1_pwm_modulator__channels[1], 2500);
                HIL_OutInt32(0x2000200 + _solarhouse3_inverter_single_phase_inverter1_pwm_modulator__channels[1], 1);
                        HIL_OutInt32(0x2000240 + _solarhouse3_inverter_single_phase_inverter1_pwm_modulator__channels[0], 0);
                    HIL_OutInt32(0x2000240 + _solarhouse3_inverter_single_phase_inverter1_pwm_modulator__channels[1], 0);
                    HIL_OutInt32(0x2000300 + _solarhouse3_inverter_single_phase_inverter1_pwm_modulator__channels[0], 1);
            HIL_OutInt32(0x2000300 + _solarhouse3_inverter_single_phase_inverter1_pwm_modulator__channels[1], 1);
    HIL_OutInt32(0x2000140, _solarhouse3_inverter_single_phase_inverter1_pwm_modulator__update_mask);


                                                    _solarhouse4_inverter_single_phase_inverter1_pwm_modulator__update_mask = 768;
                                HIL_OutInt32(0x2000080 + _solarhouse4_inverter_single_phase_inverter1_pwm_modulator__channels[0], 2500);// divide by 2 is already implemented in hw
                HIL_OutInt32(0x20000c0 + _solarhouse4_inverter_single_phase_inverter1_pwm_modulator__channels[0], 250);
                        HIL_OutInt32(0x2000080 + _solarhouse4_inverter_single_phase_inverter1_pwm_modulator__channels[1], 2500);// divide by 2 is already implemented in hw
                HIL_OutInt32(0x20000c0 + _solarhouse4_inverter_single_phase_inverter1_pwm_modulator__channels[1], 250);
                            HIL_OutInt32(0x20001c0 + _solarhouse4_inverter_single_phase_inverter1_pwm_modulator__channels[0], 0);
                HIL_OutInt32(0x2000200 + _solarhouse4_inverter_single_phase_inverter1_pwm_modulator__channels[0], 0);
                            HIL_OutInt32(0x20001c0 + _solarhouse4_inverter_single_phase_inverter1_pwm_modulator__channels[1], 2500);
                HIL_OutInt32(0x2000200 + _solarhouse4_inverter_single_phase_inverter1_pwm_modulator__channels[1], 1);
                        HIL_OutInt32(0x2000240 + _solarhouse4_inverter_single_phase_inverter1_pwm_modulator__channels[0], 0);
                    HIL_OutInt32(0x2000240 + _solarhouse4_inverter_single_phase_inverter1_pwm_modulator__channels[1], 0);
                    HIL_OutInt32(0x2000300 + _solarhouse4_inverter_single_phase_inverter1_pwm_modulator__channels[0], 1);
            HIL_OutInt32(0x2000300 + _solarhouse4_inverter_single_phase_inverter1_pwm_modulator__channels[1], 1);
    HIL_OutInt32(0x2000140, _solarhouse4_inverter_single_phase_inverter1_pwm_modulator__update_mask);


    //@cmp.init.block.end
}

void ReInit_sp_scope_user_sp_cpu0_dev0(){
    // initialise SP Scope buffer pointer
    }

void load_fmi_libraries_user_sp_cpu0_dev0(void) {
    #if defined(_WIN64)
            #else
            #endif
}
              // generated using template:generic_macros.template-----------------------------------------
/*********************** Macros (Inline Functions) Definitions ***************************/

// ----------------------------------------------------------------------------------------

#ifndef MAX
#define MAX(value, limit) (((value) > (limit)) ? (value) : (limit))
#endif
#ifndef MIN
#define MIN(value, limit) (((value) < (limit)) ? (value) : (limit))
#endif

// generated using template: common_timer_counter_handler.template-------------------------

/*****************************************************************************************/
/**
* This function is the handler which performs processing for the timer counter.
* It is called from an interrupt context such that the amount of processing
* performed should be minimized.  It is called when the timer counter expires
* if interrupts are enabled.
*
*
* @param    None
*
* @return   None
*
* @note     None
*
*****************************************************************************************/

void TimerCounterHandler_0_user_sp_cpu0_dev0() {

#if DEBUG_MODE
    printf("\n\rTimerCounterHandler_0");
#endif

    //////////////////////////////////////////////////////////////////////////
    // Output block
    //////////////////////////////////////////////////////////////////////////
    //@cmp.out.block.start
         // Generated from the component: ESS.Modbus.Bus Split1
                                     _ess_modbus_bus_split1__out=_ess_modbus_modbus_device__config__comp_holding_in_out__out[0];
                 
                                _ess_modbus_bus_split1__out1=_ess_modbus_modbus_device__config__comp_holding_in_out__out[1];
                 
    
             // Generated from the component: ESS.Modbus.C_u11
        
             // Generated from the component: ESS.Modbus.C_u12
        
             // Generated from the component: ESS.Modbus.C_u13
        
                         // Generated from the component: ESS.Modbus.Termination1
    

             // Generated from the component: Grid.Constant1
        
             // Generated from the component: Grid.Constant2
        
             // Generated from the component: Grid.Constant3
        
             // Generated from the component: SolarHouse1.Modbus.Bus Split1
                                     _solarhouse1_modbus_bus_split1__out=_solarhouse1_modbus_modbus_device1__config1__comp_holding_in_out__out[0];
                 
                                _solarhouse1_modbus_bus_split1__out1=_solarhouse1_modbus_modbus_device1__config1__comp_holding_in_out__out[1];
                 
    
             // Generated from the component: SolarHouse1.Modbus.C_u11
        
             // Generated from the component: SolarHouse1.Modbus.C_u12
        
             // Generated from the component: SolarHouse1.Modbus.C_u13
        
                     // Generated from the component: SolarHouse1.Modbus.Termination1
    

             // Generated from the component: SolarHouse2.Modbus.Bus Split1
                                     _solarhouse2_modbus_bus_split1__out=_solarhouse2_modbus_modbus_device2__config2__comp_holding_in_out__out[0];
                 
                                _solarhouse2_modbus_bus_split1__out1=_solarhouse2_modbus_modbus_device2__config2__comp_holding_in_out__out[1];
                 
    
             // Generated from the component: SolarHouse2.Modbus.C_u11
        
             // Generated from the component: SolarHouse2.Modbus.C_u12
        
             // Generated from the component: SolarHouse2.Modbus.C_u13
        
                     // Generated from the component: SolarHouse2.Modbus.Termination1
    

             // Generated from the component: SolarHouse3.Modbus.Bus Split1
                                     _solarhouse3_modbus_bus_split1__out=_solarhouse3_modbus_modbus_device3__config3__comp_holding_in_out__out[0];
                 
                                _solarhouse3_modbus_bus_split1__out1=_solarhouse3_modbus_modbus_device3__config3__comp_holding_in_out__out[1];
                 
    
             // Generated from the component: SolarHouse3.Modbus.C_u11
        
             // Generated from the component: SolarHouse3.Modbus.C_u12
        
             // Generated from the component: SolarHouse3.Modbus.C_u13
        
                     // Generated from the component: SolarHouse3.Modbus.Termination1
    

             // Generated from the component: SolarHouse4.Modbus.Bus Split1
                                     _solarhouse4_modbus_bus_split1__out=_solarhouse4_modbus_modbus_device4__config4__comp_holding_in_out__out[0];
                 
                                _solarhouse4_modbus_bus_split1__out1=_solarhouse4_modbus_modbus_device4__config4__comp_holding_in_out__out[1];
                 
    
             // Generated from the component: SolarHouse4.Modbus.C_u11
        
             // Generated from the component: SolarHouse4.Modbus.C_u12
        
             // Generated from the component: SolarHouse4.Modbus.C_u13
        
                     // Generated from the component: SolarHouse4.Modbus.Termination1
    

             // Generated from the component: ESS.Pref_ed
          HIL_OutAO(0x4021, (float)_ess_modbus_bus_split1__out);
  
             // Generated from the component: ESS.Pref_reg
          HIL_OutAO(0x4022, (float)_ess_modbus_bus_split1__out1);
  
             // Generated from the component: ESS.Modbus.ModBus Device (config).comp_coil_in_out
        // Component not supported for this platform. Outputs are zeroed.
                         _ess_modbus_modbus_device__config__comp_coil_in_out__out = 0;
            
             // Generated from the component: ESS.Modbus.ModBus Device (config).comp_discrete_in
        // Component not supported for this platform. Outputs are zeroed.
    
             // Generated from the component: ESS.Modbus.ModBus Device (config).comp_holding_in_out
        // Component not supported for this platform. Outputs are zeroed.
                                    _ess_modbus_modbus_device__config__comp_holding_in_out__out[0] = 0;
                        _ess_modbus_modbus_device__config__comp_holding_in_out__out[1] = 0;
                        
             // Generated from the component: ESS.Modbus.RegD_probe
          HIL_OutAO(0x401f, (float)_ess_modbus_rate_transition2_output__out);
  
             // Generated from the component: ESS.Modbus.Time_probe
          HIL_OutAO(0x4020, (float)_ess_modbus_rate_transition3_output__out);
  
             // Generated from the component: ESS.Modbus.Bus Join1
            	
    	    	        				        	_ess_modbus_bus_join1__out[0] = _ess_modbus_rate_transition2_output__out;
								 										    	        	            	        				        	_ess_modbus_bus_join1__out[1] = _ess_modbus_rate_transition3_output__out;
								 										    	        	            	        				        	_ess_modbus_bus_join1__out[2] = _ess_modbus_rate_transition4_output__out;
								 										        
             // Generated from the component: Grid.Vs.Limit1
      _grid_vs_limit1__out = MAX(_grid_constant1__out, 0.0);  
             // Generated from the component: Grid.Vs.Limit2
            _grid_vs_limit2__out = MIN(MAX(_grid_constant2__out, 0.1), 10000.0);
      
             // Generated from the component: SolarHouse1.Pref_ed
          HIL_OutAO(0x403d, (float)_solarhouse1_modbus_bus_split1__out);
  
             // Generated from the component: SolarHouse1.Pref_reg
          HIL_OutAO(0x403e, (float)_solarhouse1_modbus_bus_split1__out1);
  
             // Generated from the component: SolarHouse1.Modbus.ModBus Device1 (config1).comp_coil_in_out
        // Component not supported for this platform. Outputs are zeroed.
                         _solarhouse1_modbus_modbus_device1__config1__comp_coil_in_out__out = 0;
            
             // Generated from the component: SolarHouse1.Modbus.ModBus Device1 (config1).comp_discrete_in
        // Component not supported for this platform. Outputs are zeroed.
    
             // Generated from the component: SolarHouse1.Modbus.ModBus Device1 (config1).comp_holding_in_out
        // Component not supported for this platform. Outputs are zeroed.
                                    _solarhouse1_modbus_modbus_device1__config1__comp_holding_in_out__out[0] = 0;
                        _solarhouse1_modbus_modbus_device1__config1__comp_holding_in_out__out[1] = 0;
                        
             // Generated from the component: SolarHouse1.Modbus.Bus Join1
            	
    	    	        				        	_solarhouse1_modbus_bus_join1__out[0] = _solarhouse1_modbus_rate_transition1_output__out;
								 										    	        	            	        				        	_solarhouse1_modbus_bus_join1__out[1] = _solarhouse1_modbus_rate_transition4_output__out;
								 										        
             // Generated from the component: SolarHouse2.Pref_ed
          HIL_OutAO(0x4057, (float)_solarhouse2_modbus_bus_split1__out);
  
             // Generated from the component: SolarHouse2.Pref_reg
          HIL_OutAO(0x4058, (float)_solarhouse2_modbus_bus_split1__out1);
  
             // Generated from the component: SolarHouse2.Modbus.ModBus Device2 (config2).comp_coil_in_out
        // Component not supported for this platform. Outputs are zeroed.
                         _solarhouse2_modbus_modbus_device2__config2__comp_coil_in_out__out = 0;
            
             // Generated from the component: SolarHouse2.Modbus.ModBus Device2 (config2).comp_discrete_in
        // Component not supported for this platform. Outputs are zeroed.
    
             // Generated from the component: SolarHouse2.Modbus.ModBus Device2 (config2).comp_holding_in_out
        // Component not supported for this platform. Outputs are zeroed.
                                    _solarhouse2_modbus_modbus_device2__config2__comp_holding_in_out__out[0] = 0;
                        _solarhouse2_modbus_modbus_device2__config2__comp_holding_in_out__out[1] = 0;
                        
             // Generated from the component: SolarHouse2.Modbus.Bus Join1
            	
    	    	        				        	_solarhouse2_modbus_bus_join1__out[0] = _solarhouse2_modbus_rate_transition1_output__out;
								 										    	        	            	        				        	_solarhouse2_modbus_bus_join1__out[1] = _solarhouse2_modbus_rate_transition4_output__out;
								 										        
             // Generated from the component: SolarHouse3.Pref_ed
          HIL_OutAO(0x4071, (float)_solarhouse3_modbus_bus_split1__out);
  
             // Generated from the component: SolarHouse3.Pref_reg
          HIL_OutAO(0x4072, (float)_solarhouse3_modbus_bus_split1__out1);
  
             // Generated from the component: SolarHouse3.Modbus.ModBus Device3 (config3).comp_coil_in_out
        // Component not supported for this platform. Outputs are zeroed.
                         _solarhouse3_modbus_modbus_device3__config3__comp_coil_in_out__out = 0;
            
             // Generated from the component: SolarHouse3.Modbus.ModBus Device3 (config3).comp_discrete_in
        // Component not supported for this platform. Outputs are zeroed.
    
             // Generated from the component: SolarHouse3.Modbus.ModBus Device3 (config3).comp_holding_in_out
        // Component not supported for this platform. Outputs are zeroed.
                                    _solarhouse3_modbus_modbus_device3__config3__comp_holding_in_out__out[0] = 0;
                        _solarhouse3_modbus_modbus_device3__config3__comp_holding_in_out__out[1] = 0;
                        
             // Generated from the component: SolarHouse3.Modbus.Bus Join1
            	
    	    	        				        	_solarhouse3_modbus_bus_join1__out[0] = _solarhouse3_modbus_rate_transition1_output__out;
								 										    	        	            	        				        	_solarhouse3_modbus_bus_join1__out[1] = _solarhouse3_modbus_rate_transition4_output__out;
								 										        
             // Generated from the component: SolarHouse4.Pref_ed
          HIL_OutAO(0x408b, (float)_solarhouse4_modbus_bus_split1__out);
  
             // Generated from the component: SolarHouse4.Pref_reg
          HIL_OutAO(0x408c, (float)_solarhouse4_modbus_bus_split1__out1);
  
             // Generated from the component: SolarHouse4.Modbus.ModBus Device4 (config4).comp_coil_in_out
        // Component not supported for this platform. Outputs are zeroed.
                         _solarhouse4_modbus_modbus_device4__config4__comp_coil_in_out__out = 0;
            
             // Generated from the component: SolarHouse4.Modbus.ModBus Device4 (config4).comp_discrete_in
        // Component not supported for this platform. Outputs are zeroed.
    
             // Generated from the component: SolarHouse4.Modbus.ModBus Device4 (config4).comp_holding_in_out
        // Component not supported for this platform. Outputs are zeroed.
                                    _solarhouse4_modbus_modbus_device4__config4__comp_holding_in_out__out[0] = 0;
                        _solarhouse4_modbus_modbus_device4__config4__comp_holding_in_out__out[1] = 0;
                        
             // Generated from the component: SolarHouse4.Modbus.Bus Join1
            	
    	    	        				        	_solarhouse4_modbus_bus_join1__out[0] = _solarhouse4_modbus_rate_transition1_output__out;
								 										    	        	            	        				        	_solarhouse4_modbus_bus_join1__out[1] = _solarhouse4_modbus_rate_transition4_output__out;
								 										        
             // Generated from the component: ESS.Modbus.ModBus Device (config).comp_reg_in
        // Component not supported for this platform. Outputs are zeroed.
    
             // Generated from the component: Grid.Vs.tdf_sg_ctrl_sine1
                            
    // calculate and write SG parameters
    // calculate amplitude
    _grid_vs_tdf_sg_ctrl_sine1__gain = _grid_vs_limit1__out * M_SQRT2;
    // calculate period
    _grid_vs_tdf_sg_ctrl_sine1__period = 1.0f/_grid_vs_limit2__out;
    // calculate sample_cnt increment value
    _grid_vs_tdf_sg_ctrl_sine1__sample_cnt_inc_real = _grid_vs_tdf_sg_ctrl_sine1__max_int40 / (_grid_vs_tdf_sg_ctrl_sine1__period/4e-06);
    _grid_vs_tdf_sg_ctrl_sine1__sample_cnt_inc_lo = (X_UnInt32)(fmod(_grid_vs_tdf_sg_ctrl_sine1__sample_cnt_inc_real, _grid_vs_tdf_sg_ctrl_sine1__max_int32));
    _grid_vs_tdf_sg_ctrl_sine1__sample_cnt_inc_hi = (X_UnInt32)(_grid_vs_tdf_sg_ctrl_sine1__sample_cnt_inc_real / _grid_vs_tdf_sg_ctrl_sine1__max_int32);
    _grid_vs_tdf_sg_ctrl_sine1__sg_update_value = 0;

    X_UnInt32 _grid_vs_tdf_sg_ctrl_sine1__i;
    for (_grid_vs_tdf_sg_ctrl_sine1__i=0; _grid_vs_tdf_sg_ctrl_sine1__i<1; _grid_vs_tdf_sg_ctrl_sine1__i++){
        //calculate offset for each channel
        _grid_vs_tdf_sg_ctrl_sine1__shift = (double)(_grid_vs_tdf_sg_ctrl_sine1__i) * 0.0;
        _grid_vs_tdf_sg_ctrl_sine1__phase_pu = fmod((_grid_constant3__out/360.0f + _grid_vs_tdf_sg_ctrl_sine1__shift/(2.0f * M_PI)),1.0f);
        if (_grid_vs_tdf_sg_ctrl_sine1__phase_pu < 0.0f) {
            _grid_vs_tdf_sg_ctrl_sine1__phase_pu = _grid_vs_tdf_sg_ctrl_sine1__phase_pu + 1.0f;
        }
        _grid_vs_tdf_sg_ctrl_sine1__offset = (_grid_vs_tdf_sg_ctrl_sine1__max_int32 * _grid_vs_tdf_sg_ctrl_sine1__phase_pu);  // offset in SP
        _grid_vs_tdf_sg_ctrl_sine1__offset_uint = (X_UnInt32)_grid_vs_tdf_sg_ctrl_sine1__offset;  // offset in fp32
        // write parameters
        HIL_OutFloat(0x400200 + _grid_vs_tdf_sg_ctrl_sine1__channels[_grid_vs_tdf_sg_ctrl_sine1__i], (float) _grid_vs_tdf_sg_ctrl_sine1__gain);
        HIL_OutInt32(0x400180 + _grid_vs_tdf_sg_ctrl_sine1__channels[_grid_vs_tdf_sg_ctrl_sine1__i], _grid_vs_tdf_sg_ctrl_sine1__offset_uint); // offset in fp32
        HIL_OutInt32(0x400000 + _grid_vs_tdf_sg_ctrl_sine1__channels[_grid_vs_tdf_sg_ctrl_sine1__i], _grid_vs_tdf_sg_ctrl_sine1__sample_cnt_inc_lo);
        HIL_OutInt32(0x400280 + _grid_vs_tdf_sg_ctrl_sine1__channels[_grid_vs_tdf_sg_ctrl_sine1__i], _grid_vs_tdf_sg_ctrl_sine1__sample_cnt_inc_hi);
        HIL_OutFloat(0x400100 + _grid_vs_tdf_sg_ctrl_sine1__channels[_grid_vs_tdf_sg_ctrl_sine1__i], (float) _grid_vs_tdf_sg_ctrl_sine1__no_of_points);
        _grid_vs_tdf_sg_ctrl_sine1__sg_update_value += 1<<_grid_vs_tdf_sg_ctrl_sine1__channels[_grid_vs_tdf_sg_ctrl_sine1__i];
    }
    HIL_OutInt32(0x400080, _grid_vs_tdf_sg_ctrl_sine1__sg_update_value);  // update SG parameters for all channels

             // Generated from the component: SolarHouse1.Modbus.ModBus Device1 (config1).comp_reg_in
        // Component not supported for this platform. Outputs are zeroed.
    
             // Generated from the component: SolarHouse2.Modbus.ModBus Device2 (config2).comp_reg_in
        // Component not supported for this platform. Outputs are zeroed.
    
             // Generated from the component: SolarHouse3.Modbus.ModBus Device3 (config3).comp_reg_in
        // Component not supported for this platform. Outputs are zeroed.
    
             // Generated from the component: SolarHouse4.Modbus.ModBus Device4 (config4).comp_reg_in
        // Component not supported for this platform. Outputs are zeroed.
    
    //@cmp.out.block.end


    //////////////////////////////////////////////////////////////////////////
    // Update block
    //////////////////////////////////////////////////////////////////////////
    //@cmp.update.block.start
                                                                                                                                                                                                                                                                                                                                //@cmp.update.block.end
}
void TimerCounterHandler_1_user_sp_cpu0_dev0() {

#if DEBUG_MODE
    printf("\n\rTimerCounterHandler_1");
#endif

    //////////////////////////////////////////////////////////////////////////
    // Output block
    //////////////////////////////////////////////////////////////////////////
    //@cmp.out.block.start
         // Generated from the component: ESS.Inverter.Controller.Constant2
        
             // Generated from the component: ESS.Inverter.Controller.Constant3
        
             // Generated from the component: ESS.Inverter.Controller.Constant4
        
             // Generated from the component: ESS.Inverter.Controller.Constant5
        
             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.LPF_dc
                            X_UnInt32 _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i;    
                                                                                          

                _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__a_sum = 0.0f;
        _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__b_sum = 0.0f;
        _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__delay_line_in = 0.0f;
                    for (_ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i = 0; _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i < 1; _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i++){
                                     _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__b_sum += _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__b_coeff[_ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i+1] * _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__states[_ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i];
                            }
                                    _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__a_sum += _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__states[0] * _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__a_coeff[1];
                            _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__delay_line_in = _ess_inverter_lpf_dc__out - _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__a_sum;
                            _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__b_sum += _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__b_coeff[0] * _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__delay_line_in;
                _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__out = _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__b_sum;

    
             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Limit3
      _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit3__out = MAX(_ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__out, 10.0);  
             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Limit_zero
        
             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.one
        
                     // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Constant2
        
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.I
                                _ess_inverter_controller_single_phase_pll1_i__pi_reg_out_int = _ess_inverter_controller_single_phase_pll1_i__integrator_state;
    

            if (_ess_inverter_controller_single_phase_pll1_i__pi_reg_out_int < -62.83185307179586)
            _ess_inverter_controller_single_phase_pll1_i__av_active = 1;
        else if (_ess_inverter_controller_single_phase_pll1_i__pi_reg_out_int > 62.83185307179586)
            _ess_inverter_controller_single_phase_pll1_i__av_active = 1;
        else
            _ess_inverter_controller_single_phase_pll1_i__av_active = 0;

        _ess_inverter_controller_single_phase_pll1_i__out = MIN(MAX(_ess_inverter_controller_single_phase_pll1_i__pi_reg_out_int, -62.83185307179586), 62.83185307179586);
    
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Integrator1
                                                                            _ess_inverter_controller_single_phase_pll1_integrator1__out = _ess_inverter_controller_single_phase_pll1_integrator1__state;
    
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Integrator10
                                                                            _ess_inverter_controller_single_phase_pll1_integrator10__out = _ess_inverter_controller_single_phase_pll1_integrator10__state;
    
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Integrator2
                                                                            _ess_inverter_controller_single_phase_pll1_integrator2__out = _ess_inverter_controller_single_phase_pll1_integrator2__state;
    
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Integrator3
                                                                            _ess_inverter_controller_single_phase_pll1_integrator3__out = _ess_inverter_controller_single_phase_pll1_integrator3__state;
    
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Integrator4
                                                                            _ess_inverter_controller_single_phase_pll1_integrator4__out = _ess_inverter_controller_single_phase_pll1_integrator4__state;
    
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Integrator5
                                                                            _ess_inverter_controller_single_phase_pll1_integrator5__out = _ess_inverter_controller_single_phase_pll1_integrator5__state;
    
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Integrator6
                                                                            _ess_inverter_controller_single_phase_pll1_integrator6__out = _ess_inverter_controller_single_phase_pll1_integrator6__state;
    
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Integrator7
                                                                            _ess_inverter_controller_single_phase_pll1_integrator7__out = _ess_inverter_controller_single_phase_pll1_integrator7__state;
    
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Integrator8
                                                                            _ess_inverter_controller_single_phase_pll1_integrator8__out = _ess_inverter_controller_single_phase_pll1_integrator8__state;
    
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Integrator9
                                                                            _ess_inverter_controller_single_phase_pll1_integrator9__out = _ess_inverter_controller_single_phase_pll1_integrator9__state;
    
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Trigonometric function1
    
                      _ess_inverter_controller_single_phase_pll1_trigonometric_function1__out = sin(_ess_inverter_controller_single_phase_pll1_integrator_with_reset__out);
        

             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.const
        
             // Generated from the component: ESS.Inverter.Controller.charge
                _ess_inverter_controller_charge__out = XIo_InInt32(0x55000150);
    
             // Generated from the component: ESS.Inverter.E.Va1
        _ess_inverter_e_va1__out = (HIL_InFloat(0xc80000+0x202));

             // Generated from the component: ESS.Inverter.I.Ia1
        _ess_inverter_i_ia1__out = (HIL_InFloat(0xc80000+0x205));

             // Generated from the component: ESS.Inverter.Io.Ia1
        _ess_inverter_io_ia1__out = (HIL_InFloat(0xc80000+0x206));

             // Generated from the component: ESS.Inverter.Power_Meas.Gain4
                                _ess_inverter_power_meas_gain4__out = 50000.0 * _ess_inverter_power_meas_power_meas_dqpu_lpf_p__out;
        
             // Generated from the component: ESS.Inverter.Power_Meas.Gain5
                                _ess_inverter_power_meas_gain5__out = 50000.0 * _ess_inverter_power_meas_power_meas_dqpu_lpf_q__out;
        
             // Generated from the component: ESS.Inverter.Power_Meas.Power_Meas_DQpu.S_and_pf
                _ess_inverter_power_meas_power_meas_dqpu_s_and_pf__P = _ess_inverter_power_meas_power_meas_dqpu_lpf_p__out;
                    _ess_inverter_power_meas_power_meas_dqpu_s_and_pf__Q = _ess_inverter_power_meas_power_meas_dqpu_lpf_q__out;
        
    _ess_inverter_power_meas_power_meas_dqpu_s_and_pf__S=sqrt(_ess_inverter_power_meas_power_meas_dqpu_s_and_pf__P*_ess_inverter_power_meas_power_meas_dqpu_s_and_pf__P+_ess_inverter_power_meas_power_meas_dqpu_s_and_pf__Q*_ess_inverter_power_meas_power_meas_dqpu_s_and_pf__Q);if (_ess_inverter_power_meas_power_meas_dqpu_s_and_pf__S>0){_ess_inverter_power_meas_power_meas_dqpu_s_and_pf__pf=_ess_inverter_power_meas_power_meas_dqpu_s_and_pf__P/_ess_inverter_power_meas_power_meas_dqpu_s_and_pf__S;}else {_ess_inverter_power_meas_power_meas_dqpu_s_and_pf__pf=0;}

             // Generated from the component: ESS.Inverter.VDC.Va1
        _ess_inverter_vdc_va1__out = (HIL_InFloat(0xc80000+0x203));

             // Generated from the component: SolarHouse1.Inverter.Controller.Constant2
        
             // Generated from the component: SolarHouse1.Inverter.Controller.Constant3
        
             // Generated from the component: SolarHouse1.Inverter.Controller.Constant4
        
             // Generated from the component: SolarHouse1.Inverter.Controller.Constant5
        
             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.LPF_dc
                            X_UnInt32 _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i;    
                                                                                          

                _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__a_sum = 0.0f;
        _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__b_sum = 0.0f;
        _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__delay_line_in = 0.0f;
                    for (_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i = 0; _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i < 1; _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i++){
                                     _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__b_sum += _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__b_coeff[_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i+1] * _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__states[_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i];
                            }
                                    _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__a_sum += _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__states[0] * _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__a_coeff[1];
                            _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__delay_line_in = _solarhouse1_inverter_lpf_dc__out - _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__a_sum;
                            _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__b_sum += _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__b_coeff[0] * _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__delay_line_in;
                _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__out = _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__b_sum;

    
             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Limit3
      _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit3__out = MAX(_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__out, 10.0);  
             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Limit_zero
        
             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.one
        
                     // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Constant2
        
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.I
                                _solarhouse1_inverter_controller_single_phase_pll1_i__pi_reg_out_int = _solarhouse1_inverter_controller_single_phase_pll1_i__integrator_state;
    

            if (_solarhouse1_inverter_controller_single_phase_pll1_i__pi_reg_out_int < -62.83185307179586)
            _solarhouse1_inverter_controller_single_phase_pll1_i__av_active = 1;
        else if (_solarhouse1_inverter_controller_single_phase_pll1_i__pi_reg_out_int > 62.83185307179586)
            _solarhouse1_inverter_controller_single_phase_pll1_i__av_active = 1;
        else
            _solarhouse1_inverter_controller_single_phase_pll1_i__av_active = 0;

        _solarhouse1_inverter_controller_single_phase_pll1_i__out = MIN(MAX(_solarhouse1_inverter_controller_single_phase_pll1_i__pi_reg_out_int, -62.83185307179586), 62.83185307179586);
    
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Integrator1
                                                                            _solarhouse1_inverter_controller_single_phase_pll1_integrator1__out = _solarhouse1_inverter_controller_single_phase_pll1_integrator1__state;
    
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Integrator10
                                                                            _solarhouse1_inverter_controller_single_phase_pll1_integrator10__out = _solarhouse1_inverter_controller_single_phase_pll1_integrator10__state;
    
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Integrator2
                                                                            _solarhouse1_inverter_controller_single_phase_pll1_integrator2__out = _solarhouse1_inverter_controller_single_phase_pll1_integrator2__state;
    
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Integrator3
                                                                            _solarhouse1_inverter_controller_single_phase_pll1_integrator3__out = _solarhouse1_inverter_controller_single_phase_pll1_integrator3__state;
    
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Integrator4
                                                                            _solarhouse1_inverter_controller_single_phase_pll1_integrator4__out = _solarhouse1_inverter_controller_single_phase_pll1_integrator4__state;
    
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Integrator5
                                                                            _solarhouse1_inverter_controller_single_phase_pll1_integrator5__out = _solarhouse1_inverter_controller_single_phase_pll1_integrator5__state;
    
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Integrator6
                                                                            _solarhouse1_inverter_controller_single_phase_pll1_integrator6__out = _solarhouse1_inverter_controller_single_phase_pll1_integrator6__state;
    
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Integrator7
                                                                            _solarhouse1_inverter_controller_single_phase_pll1_integrator7__out = _solarhouse1_inverter_controller_single_phase_pll1_integrator7__state;
    
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Integrator8
                                                                            _solarhouse1_inverter_controller_single_phase_pll1_integrator8__out = _solarhouse1_inverter_controller_single_phase_pll1_integrator8__state;
    
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Integrator9
                                                                            _solarhouse1_inverter_controller_single_phase_pll1_integrator9__out = _solarhouse1_inverter_controller_single_phase_pll1_integrator9__state;
    
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Trigonometric function1
    
                      _solarhouse1_inverter_controller_single_phase_pll1_trigonometric_function1__out = sin(_solarhouse1_inverter_controller_single_phase_pll1_integrator_with_reset__out);
        

             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.const
        
             // Generated from the component: SolarHouse1.Inverter.Controller.charge
                _solarhouse1_inverter_controller_charge__out = XIo_InInt32(0x55000154);
    
             // Generated from the component: SolarHouse1.Inverter.E.Va1
        _solarhouse1_inverter_e_va1__out = (HIL_InFloat(0xc80000+0x404));

             // Generated from the component: SolarHouse1.Inverter.I.Ia1
        _solarhouse1_inverter_i_ia1__out = (HIL_InFloat(0xc80000+0x409));

             // Generated from the component: SolarHouse1.Inverter.Io.Ia1
        _solarhouse1_inverter_io_ia1__out = (HIL_InFloat(0xc80000+0x40a));

             // Generated from the component: SolarHouse1.Inverter.Power_Meas.Gain4
                                _solarhouse1_inverter_power_meas_gain4__out = 50000.0 * _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_p__out;
        
             // Generated from the component: SolarHouse1.Inverter.Power_Meas.Gain5
                                _solarhouse1_inverter_power_meas_gain5__out = 50000.0 * _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_q__out;
        
             // Generated from the component: SolarHouse1.Inverter.Power_Meas.Power_Meas_DQpu.S_and_pf
                _solarhouse1_inverter_power_meas_power_meas_dqpu_s_and_pf__P = _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_p__out;
                    _solarhouse1_inverter_power_meas_power_meas_dqpu_s_and_pf__Q = _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_q__out;
        
    _solarhouse1_inverter_power_meas_power_meas_dqpu_s_and_pf__S=sqrt(_solarhouse1_inverter_power_meas_power_meas_dqpu_s_and_pf__P*_solarhouse1_inverter_power_meas_power_meas_dqpu_s_and_pf__P+_solarhouse1_inverter_power_meas_power_meas_dqpu_s_and_pf__Q*_solarhouse1_inverter_power_meas_power_meas_dqpu_s_and_pf__Q);if (_solarhouse1_inverter_power_meas_power_meas_dqpu_s_and_pf__S>0){_solarhouse1_inverter_power_meas_power_meas_dqpu_s_and_pf__pf=_solarhouse1_inverter_power_meas_power_meas_dqpu_s_and_pf__P/_solarhouse1_inverter_power_meas_power_meas_dqpu_s_and_pf__S;}else {_solarhouse1_inverter_power_meas_power_meas_dqpu_s_and_pf__pf=0;}

             // Generated from the component: SolarHouse1.Inverter.VDC.Va1
        _solarhouse1_inverter_vdc_va1__out = (HIL_InFloat(0xc80000+0x405));

             // Generated from the component: SolarHouse2.Inverter.Controller.Constant2
        
             // Generated from the component: SolarHouse2.Inverter.Controller.Constant3
        
             // Generated from the component: SolarHouse2.Inverter.Controller.Constant4
        
             // Generated from the component: SolarHouse2.Inverter.Controller.Constant5
        
             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.LPF_dc
                            X_UnInt32 _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i;    
                                                                                          

                _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__a_sum = 0.0f;
        _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__b_sum = 0.0f;
        _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__delay_line_in = 0.0f;
                    for (_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i = 0; _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i < 1; _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i++){
                                     _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__b_sum += _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__b_coeff[_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i+1] * _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__states[_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i];
                            }
                                    _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__a_sum += _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__states[0] * _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__a_coeff[1];
                            _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__delay_line_in = _solarhouse2_inverter_lpf_dc__out - _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__a_sum;
                            _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__b_sum += _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__b_coeff[0] * _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__delay_line_in;
                _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__out = _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__b_sum;

    
             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Limit3
      _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit3__out = MAX(_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__out, 10.0);  
             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Limit_zero
        
             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.one
        
                     // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Constant2
        
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.I
                                _solarhouse2_inverter_controller_single_phase_pll1_i__pi_reg_out_int = _solarhouse2_inverter_controller_single_phase_pll1_i__integrator_state;
    

            if (_solarhouse2_inverter_controller_single_phase_pll1_i__pi_reg_out_int < -62.83185307179586)
            _solarhouse2_inverter_controller_single_phase_pll1_i__av_active = 1;
        else if (_solarhouse2_inverter_controller_single_phase_pll1_i__pi_reg_out_int > 62.83185307179586)
            _solarhouse2_inverter_controller_single_phase_pll1_i__av_active = 1;
        else
            _solarhouse2_inverter_controller_single_phase_pll1_i__av_active = 0;

        _solarhouse2_inverter_controller_single_phase_pll1_i__out = MIN(MAX(_solarhouse2_inverter_controller_single_phase_pll1_i__pi_reg_out_int, -62.83185307179586), 62.83185307179586);
    
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Integrator1
                                                                            _solarhouse2_inverter_controller_single_phase_pll1_integrator1__out = _solarhouse2_inverter_controller_single_phase_pll1_integrator1__state;
    
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Integrator10
                                                                            _solarhouse2_inverter_controller_single_phase_pll1_integrator10__out = _solarhouse2_inverter_controller_single_phase_pll1_integrator10__state;
    
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Integrator2
                                                                            _solarhouse2_inverter_controller_single_phase_pll1_integrator2__out = _solarhouse2_inverter_controller_single_phase_pll1_integrator2__state;
    
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Integrator3
                                                                            _solarhouse2_inverter_controller_single_phase_pll1_integrator3__out = _solarhouse2_inverter_controller_single_phase_pll1_integrator3__state;
    
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Integrator4
                                                                            _solarhouse2_inverter_controller_single_phase_pll1_integrator4__out = _solarhouse2_inverter_controller_single_phase_pll1_integrator4__state;
    
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Integrator5
                                                                            _solarhouse2_inverter_controller_single_phase_pll1_integrator5__out = _solarhouse2_inverter_controller_single_phase_pll1_integrator5__state;
    
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Integrator6
                                                                            _solarhouse2_inverter_controller_single_phase_pll1_integrator6__out = _solarhouse2_inverter_controller_single_phase_pll1_integrator6__state;
    
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Integrator7
                                                                            _solarhouse2_inverter_controller_single_phase_pll1_integrator7__out = _solarhouse2_inverter_controller_single_phase_pll1_integrator7__state;
    
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Integrator8
                                                                            _solarhouse2_inverter_controller_single_phase_pll1_integrator8__out = _solarhouse2_inverter_controller_single_phase_pll1_integrator8__state;
    
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Integrator9
                                                                            _solarhouse2_inverter_controller_single_phase_pll1_integrator9__out = _solarhouse2_inverter_controller_single_phase_pll1_integrator9__state;
    
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Trigonometric function1
    
                      _solarhouse2_inverter_controller_single_phase_pll1_trigonometric_function1__out = sin(_solarhouse2_inverter_controller_single_phase_pll1_integrator_with_reset__out);
        

             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.const
        
             // Generated from the component: SolarHouse2.Inverter.Controller.charge
                _solarhouse2_inverter_controller_charge__out = XIo_InInt32(0x55000158);
    
             // Generated from the component: SolarHouse2.Inverter.E.Va1
        _solarhouse2_inverter_e_va1__out = (HIL_InFloat(0xc80000+0x604));

             // Generated from the component: SolarHouse2.Inverter.I.Ia1
        _solarhouse2_inverter_i_ia1__out = (HIL_InFloat(0xc80000+0x609));

             // Generated from the component: SolarHouse2.Inverter.Io.Ia1
        _solarhouse2_inverter_io_ia1__out = (HIL_InFloat(0xc80000+0x60a));

             // Generated from the component: SolarHouse2.Inverter.Power_Meas.Gain4
                                _solarhouse2_inverter_power_meas_gain4__out = 50000.0 * _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_p__out;
        
             // Generated from the component: SolarHouse2.Inverter.Power_Meas.Gain5
                                _solarhouse2_inverter_power_meas_gain5__out = 50000.0 * _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_q__out;
        
             // Generated from the component: SolarHouse2.Inverter.Power_Meas.Power_Meas_DQpu.S_and_pf
                _solarhouse2_inverter_power_meas_power_meas_dqpu_s_and_pf__P = _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_p__out;
                    _solarhouse2_inverter_power_meas_power_meas_dqpu_s_and_pf__Q = _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_q__out;
        
    _solarhouse2_inverter_power_meas_power_meas_dqpu_s_and_pf__S=sqrt(_solarhouse2_inverter_power_meas_power_meas_dqpu_s_and_pf__P*_solarhouse2_inverter_power_meas_power_meas_dqpu_s_and_pf__P+_solarhouse2_inverter_power_meas_power_meas_dqpu_s_and_pf__Q*_solarhouse2_inverter_power_meas_power_meas_dqpu_s_and_pf__Q);if (_solarhouse2_inverter_power_meas_power_meas_dqpu_s_and_pf__S>0){_solarhouse2_inverter_power_meas_power_meas_dqpu_s_and_pf__pf=_solarhouse2_inverter_power_meas_power_meas_dqpu_s_and_pf__P/_solarhouse2_inverter_power_meas_power_meas_dqpu_s_and_pf__S;}else {_solarhouse2_inverter_power_meas_power_meas_dqpu_s_and_pf__pf=0;}

             // Generated from the component: SolarHouse2.Inverter.VDC.Va1
        _solarhouse2_inverter_vdc_va1__out = (HIL_InFloat(0xc80000+0x605));

             // Generated from the component: SolarHouse3.Inverter.Controller.Constant2
        
             // Generated from the component: SolarHouse3.Inverter.Controller.Constant3
        
             // Generated from the component: SolarHouse3.Inverter.Controller.Constant4
        
             // Generated from the component: SolarHouse3.Inverter.Controller.Constant5
        
             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.LPF_dc
                            X_UnInt32 _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i;    
                                                                                          

                _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__a_sum = 0.0f;
        _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__b_sum = 0.0f;
        _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__delay_line_in = 0.0f;
                    for (_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i = 0; _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i < 1; _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i++){
                                     _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__b_sum += _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__b_coeff[_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i+1] * _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__states[_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i];
                            }
                                    _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__a_sum += _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__states[0] * _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__a_coeff[1];
                            _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__delay_line_in = _solarhouse3_inverter_lpf_dc__out - _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__a_sum;
                            _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__b_sum += _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__b_coeff[0] * _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__delay_line_in;
                _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__out = _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__b_sum;

    
             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Limit3
      _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit3__out = MAX(_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__out, 10.0);  
             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Limit_zero
        
             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.one
        
                     // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Constant2
        
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.I
                                _solarhouse3_inverter_controller_single_phase_pll1_i__pi_reg_out_int = _solarhouse3_inverter_controller_single_phase_pll1_i__integrator_state;
    

            if (_solarhouse3_inverter_controller_single_phase_pll1_i__pi_reg_out_int < -62.83185307179586)
            _solarhouse3_inverter_controller_single_phase_pll1_i__av_active = 1;
        else if (_solarhouse3_inverter_controller_single_phase_pll1_i__pi_reg_out_int > 62.83185307179586)
            _solarhouse3_inverter_controller_single_phase_pll1_i__av_active = 1;
        else
            _solarhouse3_inverter_controller_single_phase_pll1_i__av_active = 0;

        _solarhouse3_inverter_controller_single_phase_pll1_i__out = MIN(MAX(_solarhouse3_inverter_controller_single_phase_pll1_i__pi_reg_out_int, -62.83185307179586), 62.83185307179586);
    
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Integrator1
                                                                            _solarhouse3_inverter_controller_single_phase_pll1_integrator1__out = _solarhouse3_inverter_controller_single_phase_pll1_integrator1__state;
    
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Integrator10
                                                                            _solarhouse3_inverter_controller_single_phase_pll1_integrator10__out = _solarhouse3_inverter_controller_single_phase_pll1_integrator10__state;
    
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Integrator2
                                                                            _solarhouse3_inverter_controller_single_phase_pll1_integrator2__out = _solarhouse3_inverter_controller_single_phase_pll1_integrator2__state;
    
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Integrator3
                                                                            _solarhouse3_inverter_controller_single_phase_pll1_integrator3__out = _solarhouse3_inverter_controller_single_phase_pll1_integrator3__state;
    
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Integrator4
                                                                            _solarhouse3_inverter_controller_single_phase_pll1_integrator4__out = _solarhouse3_inverter_controller_single_phase_pll1_integrator4__state;
    
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Integrator5
                                                                            _solarhouse3_inverter_controller_single_phase_pll1_integrator5__out = _solarhouse3_inverter_controller_single_phase_pll1_integrator5__state;
    
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Integrator6
                                                                            _solarhouse3_inverter_controller_single_phase_pll1_integrator6__out = _solarhouse3_inverter_controller_single_phase_pll1_integrator6__state;
    
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Integrator7
                                                                            _solarhouse3_inverter_controller_single_phase_pll1_integrator7__out = _solarhouse3_inverter_controller_single_phase_pll1_integrator7__state;
    
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Integrator8
                                                                            _solarhouse3_inverter_controller_single_phase_pll1_integrator8__out = _solarhouse3_inverter_controller_single_phase_pll1_integrator8__state;
    
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Integrator9
                                                                            _solarhouse3_inverter_controller_single_phase_pll1_integrator9__out = _solarhouse3_inverter_controller_single_phase_pll1_integrator9__state;
    
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Trigonometric function1
    
                      _solarhouse3_inverter_controller_single_phase_pll1_trigonometric_function1__out = sin(_solarhouse3_inverter_controller_single_phase_pll1_integrator_with_reset__out);
        

             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.const
        
             // Generated from the component: SolarHouse3.Inverter.Controller.charge
                _solarhouse3_inverter_controller_charge__out = XIo_InInt32(0x5500015c);
    
             // Generated from the component: SolarHouse3.Inverter.E.Va1
        _solarhouse3_inverter_e_va1__out = (HIL_InFloat(0xc80000+0x804));

             // Generated from the component: SolarHouse3.Inverter.I.Ia1
        _solarhouse3_inverter_i_ia1__out = (HIL_InFloat(0xc80000+0x809));

             // Generated from the component: SolarHouse3.Inverter.Io.Ia1
        _solarhouse3_inverter_io_ia1__out = (HIL_InFloat(0xc80000+0x80a));

             // Generated from the component: SolarHouse3.Inverter.Power_Meas.Gain4
                                _solarhouse3_inverter_power_meas_gain4__out = 50000.0 * _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_p__out;
        
             // Generated from the component: SolarHouse3.Inverter.Power_Meas.Gain5
                                _solarhouse3_inverter_power_meas_gain5__out = 50000.0 * _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_q__out;
        
             // Generated from the component: SolarHouse3.Inverter.Power_Meas.Power_Meas_DQpu.S_and_pf
                _solarhouse3_inverter_power_meas_power_meas_dqpu_s_and_pf__P = _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_p__out;
                    _solarhouse3_inverter_power_meas_power_meas_dqpu_s_and_pf__Q = _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_q__out;
        
    _solarhouse3_inverter_power_meas_power_meas_dqpu_s_and_pf__S=sqrt(_solarhouse3_inverter_power_meas_power_meas_dqpu_s_and_pf__P*_solarhouse3_inverter_power_meas_power_meas_dqpu_s_and_pf__P+_solarhouse3_inverter_power_meas_power_meas_dqpu_s_and_pf__Q*_solarhouse3_inverter_power_meas_power_meas_dqpu_s_and_pf__Q);if (_solarhouse3_inverter_power_meas_power_meas_dqpu_s_and_pf__S>0){_solarhouse3_inverter_power_meas_power_meas_dqpu_s_and_pf__pf=_solarhouse3_inverter_power_meas_power_meas_dqpu_s_and_pf__P/_solarhouse3_inverter_power_meas_power_meas_dqpu_s_and_pf__S;}else {_solarhouse3_inverter_power_meas_power_meas_dqpu_s_and_pf__pf=0;}

             // Generated from the component: SolarHouse3.Inverter.VDC.Va1
        _solarhouse3_inverter_vdc_va1__out = (HIL_InFloat(0xc80000+0x805));

             // Generated from the component: SolarHouse4.Inverter.Controller.Constant2
        
             // Generated from the component: SolarHouse4.Inverter.Controller.Constant3
        
             // Generated from the component: SolarHouse4.Inverter.Controller.Constant4
        
             // Generated from the component: SolarHouse4.Inverter.Controller.Constant5
        
             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.LPF_dc
                            X_UnInt32 _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i;    
                                                                                          

                _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__a_sum = 0.0f;
        _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__b_sum = 0.0f;
        _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__delay_line_in = 0.0f;
                    for (_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i = 0; _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i < 1; _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i++){
                                     _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__b_sum += _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__b_coeff[_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i+1] * _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__states[_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__i];
                            }
                                    _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__a_sum += _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__states[0] * _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__a_coeff[1];
                            _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__delay_line_in = _solarhouse4_inverter_lpf_dc__out - _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__a_sum;
                            _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__b_sum += _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__b_coeff[0] * _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__delay_line_in;
                _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__out = _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__b_sum;

    
             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Limit3
      _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit3__out = MAX(_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__out, 10.0);  
             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Limit_zero
        
             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.one
        
                     // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Constant2
        
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.I
                                _solarhouse4_inverter_controller_single_phase_pll1_i__pi_reg_out_int = _solarhouse4_inverter_controller_single_phase_pll1_i__integrator_state;
    

            if (_solarhouse4_inverter_controller_single_phase_pll1_i__pi_reg_out_int < -62.83185307179586)
            _solarhouse4_inverter_controller_single_phase_pll1_i__av_active = 1;
        else if (_solarhouse4_inverter_controller_single_phase_pll1_i__pi_reg_out_int > 62.83185307179586)
            _solarhouse4_inverter_controller_single_phase_pll1_i__av_active = 1;
        else
            _solarhouse4_inverter_controller_single_phase_pll1_i__av_active = 0;

        _solarhouse4_inverter_controller_single_phase_pll1_i__out = MIN(MAX(_solarhouse4_inverter_controller_single_phase_pll1_i__pi_reg_out_int, -62.83185307179586), 62.83185307179586);
    
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Integrator1
                                                                            _solarhouse4_inverter_controller_single_phase_pll1_integrator1__out = _solarhouse4_inverter_controller_single_phase_pll1_integrator1__state;
    
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Integrator10
                                                                            _solarhouse4_inverter_controller_single_phase_pll1_integrator10__out = _solarhouse4_inverter_controller_single_phase_pll1_integrator10__state;
    
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Integrator2
                                                                            _solarhouse4_inverter_controller_single_phase_pll1_integrator2__out = _solarhouse4_inverter_controller_single_phase_pll1_integrator2__state;
    
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Integrator3
                                                                            _solarhouse4_inverter_controller_single_phase_pll1_integrator3__out = _solarhouse4_inverter_controller_single_phase_pll1_integrator3__state;
    
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Integrator4
                                                                            _solarhouse4_inverter_controller_single_phase_pll1_integrator4__out = _solarhouse4_inverter_controller_single_phase_pll1_integrator4__state;
    
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Integrator5
                                                                            _solarhouse4_inverter_controller_single_phase_pll1_integrator5__out = _solarhouse4_inverter_controller_single_phase_pll1_integrator5__state;
    
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Integrator6
                                                                            _solarhouse4_inverter_controller_single_phase_pll1_integrator6__out = _solarhouse4_inverter_controller_single_phase_pll1_integrator6__state;
    
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Integrator7
                                                                            _solarhouse4_inverter_controller_single_phase_pll1_integrator7__out = _solarhouse4_inverter_controller_single_phase_pll1_integrator7__state;
    
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Integrator8
                                                                            _solarhouse4_inverter_controller_single_phase_pll1_integrator8__out = _solarhouse4_inverter_controller_single_phase_pll1_integrator8__state;
    
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Integrator9
                                                                            _solarhouse4_inverter_controller_single_phase_pll1_integrator9__out = _solarhouse4_inverter_controller_single_phase_pll1_integrator9__state;
    
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Trigonometric function1
    
                      _solarhouse4_inverter_controller_single_phase_pll1_trigonometric_function1__out = sin(_solarhouse4_inverter_controller_single_phase_pll1_integrator_with_reset__out);
        

             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.const
        
             // Generated from the component: SolarHouse4.Inverter.Controller.charge
                _solarhouse4_inverter_controller_charge__out = XIo_InInt32(0x55000160);
    
             // Generated from the component: SolarHouse4.Inverter.E.Va1
        _solarhouse4_inverter_e_va1__out = (HIL_InFloat(0xc80000+0xa04));

             // Generated from the component: SolarHouse4.Inverter.I.Ia1
        _solarhouse4_inverter_i_ia1__out = (HIL_InFloat(0xc80000+0xa09));

             // Generated from the component: SolarHouse4.Inverter.Io.Ia1
        _solarhouse4_inverter_io_ia1__out = (HIL_InFloat(0xc80000+0xa0a));

             // Generated from the component: SolarHouse4.Inverter.Power_Meas.Gain4
                                _solarhouse4_inverter_power_meas_gain4__out = 50000.0 * _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_p__out;
        
             // Generated from the component: SolarHouse4.Inverter.Power_Meas.Gain5
                                _solarhouse4_inverter_power_meas_gain5__out = 50000.0 * _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_q__out;
        
             // Generated from the component: SolarHouse4.Inverter.Power_Meas.Power_Meas_DQpu.S_and_pf
                _solarhouse4_inverter_power_meas_power_meas_dqpu_s_and_pf__P = _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_p__out;
                    _solarhouse4_inverter_power_meas_power_meas_dqpu_s_and_pf__Q = _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_q__out;
        
    _solarhouse4_inverter_power_meas_power_meas_dqpu_s_and_pf__S=sqrt(_solarhouse4_inverter_power_meas_power_meas_dqpu_s_and_pf__P*_solarhouse4_inverter_power_meas_power_meas_dqpu_s_and_pf__P+_solarhouse4_inverter_power_meas_power_meas_dqpu_s_and_pf__Q*_solarhouse4_inverter_power_meas_power_meas_dqpu_s_and_pf__Q);if (_solarhouse4_inverter_power_meas_power_meas_dqpu_s_and_pf__S>0){_solarhouse4_inverter_power_meas_power_meas_dqpu_s_and_pf__pf=_solarhouse4_inverter_power_meas_power_meas_dqpu_s_and_pf__P/_solarhouse4_inverter_power_meas_power_meas_dqpu_s_and_pf__S;}else {_solarhouse4_inverter_power_meas_power_meas_dqpu_s_and_pf__pf=0;}

             // Generated from the component: SolarHouse4.Inverter.VDC.Va1
        _solarhouse4_inverter_vdc_va1__out = (HIL_InFloat(0xc80000+0xa05));

             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Gain5
                                _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain5__out = 1.0 * _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit3__out;
        
             // Generated from the component: ESS.Inverter.Controller.C function1
                _ess_inverter_controller_c_function1__charge = _ess_inverter_controller_rate_transition8_output__out;
                    _ess_inverter_controller_c_function1__ref = _ess_inverter_controller_rate_transition9_output__out;
        
    if (_ess_inverter_controller_c_function1__charge>0)_ess_inverter_controller_c_function1__out=-1;else _ess_inverter_controller_c_function1__out=_ess_inverter_controller_c_function1__ref;

             // Generated from the component: ESS.Inverter.Controller.Gain25
                                _ess_inverter_controller_gain25__out = 6.283185307179586 * _ess_inverter_controller_single_phase_pll1_integrator10__out;
        
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.C function1
                _ess_inverter_controller_single_phase_pll1_c_function1__theta_dq = _ess_inverter_controller_single_phase_pll1_integrator_with_reset__out;
                    _ess_inverter_controller_single_phase_pll1_c_function1__va = _ess_inverter_controller_single_phase_pll1_integrator1__out;
                    _ess_inverter_controller_single_phase_pll1_c_function1__vb = _ess_inverter_controller_single_phase_pll1_integrator2__out;
        
    _ess_inverter_controller_single_phase_pll1_c_function1__vq=cos(_ess_inverter_controller_single_phase_pll1_c_function1__theta_dq)*_ess_inverter_controller_single_phase_pll1_c_function1__va+sin(_ess_inverter_controller_single_phase_pll1_c_function1__theta_dq)*_ess_inverter_controller_single_phase_pll1_c_function1__vb;_ess_inverter_controller_single_phase_pll1_c_function1__vd=-sin(_ess_inverter_controller_single_phase_pll1_c_function1__theta_dq)*_ess_inverter_controller_single_phase_pll1_c_function1__va+cos(_ess_inverter_controller_single_phase_pll1_c_function1__theta_dq)*_ess_inverter_controller_single_phase_pll1_c_function1__vb;

             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Sum4
                                              _ess_inverter_controller_single_phase_pll1_sum4__out = _ess_inverter_controller_single_phase_pll1_integrator3__out-_ess_inverter_controller_single_phase_pll1_integrator4__out;    
  
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Product2
    _ess_inverter_controller_single_phase_pll1_product2__out = (_ess_inverter_controller_single_phase_pll1_integrator5__out * _ess_inverter_controller_single_phase_pll1_integrator1__out);

             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.w_to_f
                                _ess_inverter_controller_single_phase_pll1_w_to_f__out = 0.15915494309189535 * _ess_inverter_controller_single_phase_pll1_integrator5__out;
        
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Sum9
                                              _ess_inverter_controller_single_phase_pll1_sum9__out = _ess_inverter_controller_single_phase_pll1_integrator6__out-_ess_inverter_controller_single_phase_pll1_integrator5__out;    
  
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Sum11
                                              _ess_inverter_controller_single_phase_pll1_sum11__out = _ess_inverter_controller_single_phase_pll1_integrator7__out-_ess_inverter_controller_single_phase_pll1_integrator8__out;    
  
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Sum13
                                              _ess_inverter_controller_single_phase_pll1_sum13__out = _ess_inverter_controller_single_phase_pll1_integrator8__out-_ess_inverter_controller_single_phase_pll1_integrator9__out;    
  
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Sum14
                                              _ess_inverter_controller_single_phase_pll1_sum14__out = _ess_inverter_controller_single_phase_pll1_integrator9__out-_ess_inverter_controller_single_phase_pll1_integrator10__out;    
  
             // Generated from the component: ESS.Inverter.Controller.Rate Transition8.Input
    _ess_inverter_controller_rate_transition8_output__out = _ess_inverter_controller_charge__out;
             // Generated from the component: ESS.Inverter.Controller.Hilbert Transform
                            X_UnInt32 _ess_inverter_controller_hilbert_transform__i;    
                                                                                          

                _ess_inverter_controller_hilbert_transform__a_sum = 0.0f;
        _ess_inverter_controller_hilbert_transform__b_sum = 0.0f;
        _ess_inverter_controller_hilbert_transform__delay_line_in = 0.0f;
                    for (_ess_inverter_controller_hilbert_transform__i = 0; _ess_inverter_controller_hilbert_transform__i < 1; _ess_inverter_controller_hilbert_transform__i++){
                                     _ess_inverter_controller_hilbert_transform__b_sum += _ess_inverter_controller_hilbert_transform__b_coeff[_ess_inverter_controller_hilbert_transform__i+1] * _ess_inverter_controller_hilbert_transform__states[_ess_inverter_controller_hilbert_transform__i];
                            }
                                    _ess_inverter_controller_hilbert_transform__a_sum += _ess_inverter_controller_hilbert_transform__states[0] * _ess_inverter_controller_hilbert_transform__a_coeff[1];
                            _ess_inverter_controller_hilbert_transform__delay_line_in = _ess_inverter_e_va1__out - _ess_inverter_controller_hilbert_transform__a_sum;
                            _ess_inverter_controller_hilbert_transform__b_sum += _ess_inverter_controller_hilbert_transform__b_coeff[0] * _ess_inverter_controller_hilbert_transform__delay_line_in;
                _ess_inverter_controller_hilbert_transform__out = _ess_inverter_controller_hilbert_transform__b_sum;

    
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Sum1
                                              _ess_inverter_controller_single_phase_pll1_sum1__out =  - _ess_inverter_controller_single_phase_pll1_integrator1__out+_ess_inverter_e_va1__out;    
  
             // Generated from the component: ESS.Inverter.V
          HIL_OutAO(0x401d, (float)_ess_inverter_e_va1__out);
  
             // Generated from the component: ESS.Inverter.Controller.Hilbert Transform1
                            X_UnInt32 _ess_inverter_controller_hilbert_transform1__i;    
                                                                                          

                _ess_inverter_controller_hilbert_transform1__a_sum = 0.0f;
        _ess_inverter_controller_hilbert_transform1__b_sum = 0.0f;
        _ess_inverter_controller_hilbert_transform1__delay_line_in = 0.0f;
                    for (_ess_inverter_controller_hilbert_transform1__i = 0; _ess_inverter_controller_hilbert_transform1__i < 1; _ess_inverter_controller_hilbert_transform1__i++){
                                     _ess_inverter_controller_hilbert_transform1__b_sum += _ess_inverter_controller_hilbert_transform1__b_coeff[_ess_inverter_controller_hilbert_transform1__i+1] * _ess_inverter_controller_hilbert_transform1__states[_ess_inverter_controller_hilbert_transform1__i];
                            }
                                    _ess_inverter_controller_hilbert_transform1__a_sum += _ess_inverter_controller_hilbert_transform1__states[0] * _ess_inverter_controller_hilbert_transform1__a_coeff[1];
                            _ess_inverter_controller_hilbert_transform1__delay_line_in = _ess_inverter_i_ia1__out - _ess_inverter_controller_hilbert_transform1__a_sum;
                            _ess_inverter_controller_hilbert_transform1__b_sum += _ess_inverter_controller_hilbert_transform1__b_coeff[0] * _ess_inverter_controller_hilbert_transform1__delay_line_in;
                _ess_inverter_controller_hilbert_transform1__out = _ess_inverter_controller_hilbert_transform1__b_sum;

    
             // Generated from the component: ESS.Inverter.P
          HIL_OutAO(0x401a, (float)_ess_inverter_power_meas_gain4__out);
  
             // Generated from the component: ESS.Modbus.Rate Transition4.Input
    _ess_modbus_rate_transition4_output__out = _ess_inverter_power_meas_gain4__out;
             // Generated from the component: ESS.Inverter.Q
          HIL_OutAO(0x401b, (float)_ess_inverter_power_meas_gain5__out);
  
             // Generated from the component: ESS.Inverter.Power_Meas.Gain6
                                _ess_inverter_power_meas_gain6__out = 50000.0 * _ess_inverter_power_meas_power_meas_dqpu_s_and_pf__S;
        
             // Generated from the component: ESS.Inverter.pf
          HIL_OutAO(0x401e, (float)_ess_inverter_power_meas_power_meas_dqpu_s_and_pf__pf);
  
             // Generated from the component: ESS.Inverter.LPF_dc
                            X_UnInt32 _ess_inverter_lpf_dc__i;    
                                                                                          

                _ess_inverter_lpf_dc__a_sum = 0.0f;
        _ess_inverter_lpf_dc__b_sum = 0.0f;
        _ess_inverter_lpf_dc__delay_line_in = 0.0f;
                    for (_ess_inverter_lpf_dc__i = 0; _ess_inverter_lpf_dc__i < 1; _ess_inverter_lpf_dc__i++){
                                     _ess_inverter_lpf_dc__b_sum += _ess_inverter_lpf_dc__b_coeff[_ess_inverter_lpf_dc__i+1] * _ess_inverter_lpf_dc__states[_ess_inverter_lpf_dc__i];
                            }
                                    _ess_inverter_lpf_dc__a_sum += _ess_inverter_lpf_dc__states[0] * _ess_inverter_lpf_dc__a_coeff[1];
                            _ess_inverter_lpf_dc__delay_line_in = _ess_inverter_vdc_va1__out - _ess_inverter_lpf_dc__a_sum;
                            _ess_inverter_lpf_dc__b_sum += _ess_inverter_lpf_dc__b_coeff[0] * _ess_inverter_lpf_dc__delay_line_in;
                _ess_inverter_lpf_dc__out = _ess_inverter_lpf_dc__b_sum;

    
             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Gain5
                                _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain5__out = 1.0 * _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit3__out;
        
             // Generated from the component: SolarHouse1.Inverter.Controller.C function1
                _solarhouse1_inverter_controller_c_function1__charge = _solarhouse1_inverter_controller_rate_transition8_output__out;
                    _solarhouse1_inverter_controller_c_function1__ref = _solarhouse1_inverter_controller_rate_transition9_output__out;
        
    if (_solarhouse1_inverter_controller_c_function1__charge>0)_solarhouse1_inverter_controller_c_function1__out=-1;else _solarhouse1_inverter_controller_c_function1__out=_solarhouse1_inverter_controller_c_function1__ref;

             // Generated from the component: SolarHouse1.Inverter.Controller.Gain25
                                _solarhouse1_inverter_controller_gain25__out = 6.283185307179586 * _solarhouse1_inverter_controller_single_phase_pll1_integrator10__out;
        
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.C function1
                _solarhouse1_inverter_controller_single_phase_pll1_c_function1__theta_dq = _solarhouse1_inverter_controller_single_phase_pll1_integrator_with_reset__out;
                    _solarhouse1_inverter_controller_single_phase_pll1_c_function1__va = _solarhouse1_inverter_controller_single_phase_pll1_integrator1__out;
                    _solarhouse1_inverter_controller_single_phase_pll1_c_function1__vb = _solarhouse1_inverter_controller_single_phase_pll1_integrator2__out;
        
    _solarhouse1_inverter_controller_single_phase_pll1_c_function1__vq=cos(_solarhouse1_inverter_controller_single_phase_pll1_c_function1__theta_dq)*_solarhouse1_inverter_controller_single_phase_pll1_c_function1__va+sin(_solarhouse1_inverter_controller_single_phase_pll1_c_function1__theta_dq)*_solarhouse1_inverter_controller_single_phase_pll1_c_function1__vb;_solarhouse1_inverter_controller_single_phase_pll1_c_function1__vd=-sin(_solarhouse1_inverter_controller_single_phase_pll1_c_function1__theta_dq)*_solarhouse1_inverter_controller_single_phase_pll1_c_function1__va+cos(_solarhouse1_inverter_controller_single_phase_pll1_c_function1__theta_dq)*_solarhouse1_inverter_controller_single_phase_pll1_c_function1__vb;

             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Sum4
                                              _solarhouse1_inverter_controller_single_phase_pll1_sum4__out = _solarhouse1_inverter_controller_single_phase_pll1_integrator3__out-_solarhouse1_inverter_controller_single_phase_pll1_integrator4__out;    
  
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Product2
    _solarhouse1_inverter_controller_single_phase_pll1_product2__out = (_solarhouse1_inverter_controller_single_phase_pll1_integrator5__out * _solarhouse1_inverter_controller_single_phase_pll1_integrator1__out);

             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.w_to_f
                                _solarhouse1_inverter_controller_single_phase_pll1_w_to_f__out = 0.15915494309189535 * _solarhouse1_inverter_controller_single_phase_pll1_integrator5__out;
        
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Sum9
                                              _solarhouse1_inverter_controller_single_phase_pll1_sum9__out = _solarhouse1_inverter_controller_single_phase_pll1_integrator6__out-_solarhouse1_inverter_controller_single_phase_pll1_integrator5__out;    
  
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Sum11
                                              _solarhouse1_inverter_controller_single_phase_pll1_sum11__out = _solarhouse1_inverter_controller_single_phase_pll1_integrator7__out-_solarhouse1_inverter_controller_single_phase_pll1_integrator8__out;    
  
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Sum13
                                              _solarhouse1_inverter_controller_single_phase_pll1_sum13__out = _solarhouse1_inverter_controller_single_phase_pll1_integrator8__out-_solarhouse1_inverter_controller_single_phase_pll1_integrator9__out;    
  
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Sum14
                                              _solarhouse1_inverter_controller_single_phase_pll1_sum14__out = _solarhouse1_inverter_controller_single_phase_pll1_integrator9__out-_solarhouse1_inverter_controller_single_phase_pll1_integrator10__out;    
  
             // Generated from the component: SolarHouse1.Inverter.Controller.Rate Transition8.Input
    _solarhouse1_inverter_controller_rate_transition8_output__out = _solarhouse1_inverter_controller_charge__out;
             // Generated from the component: SolarHouse1.Inverter.Controller.Hilbert Transform
                            X_UnInt32 _solarhouse1_inverter_controller_hilbert_transform__i;    
                                                                                          

                _solarhouse1_inverter_controller_hilbert_transform__a_sum = 0.0f;
        _solarhouse1_inverter_controller_hilbert_transform__b_sum = 0.0f;
        _solarhouse1_inverter_controller_hilbert_transform__delay_line_in = 0.0f;
                    for (_solarhouse1_inverter_controller_hilbert_transform__i = 0; _solarhouse1_inverter_controller_hilbert_transform__i < 1; _solarhouse1_inverter_controller_hilbert_transform__i++){
                                     _solarhouse1_inverter_controller_hilbert_transform__b_sum += _solarhouse1_inverter_controller_hilbert_transform__b_coeff[_solarhouse1_inverter_controller_hilbert_transform__i+1] * _solarhouse1_inverter_controller_hilbert_transform__states[_solarhouse1_inverter_controller_hilbert_transform__i];
                            }
                                    _solarhouse1_inverter_controller_hilbert_transform__a_sum += _solarhouse1_inverter_controller_hilbert_transform__states[0] * _solarhouse1_inverter_controller_hilbert_transform__a_coeff[1];
                            _solarhouse1_inverter_controller_hilbert_transform__delay_line_in = _solarhouse1_inverter_e_va1__out - _solarhouse1_inverter_controller_hilbert_transform__a_sum;
                            _solarhouse1_inverter_controller_hilbert_transform__b_sum += _solarhouse1_inverter_controller_hilbert_transform__b_coeff[0] * _solarhouse1_inverter_controller_hilbert_transform__delay_line_in;
                _solarhouse1_inverter_controller_hilbert_transform__out = _solarhouse1_inverter_controller_hilbert_transform__b_sum;

    
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Sum1
                                              _solarhouse1_inverter_controller_single_phase_pll1_sum1__out =  - _solarhouse1_inverter_controller_single_phase_pll1_integrator1__out+_solarhouse1_inverter_e_va1__out;    
  
             // Generated from the component: SolarHouse1.Inverter.V
          HIL_OutAO(0x4038, (float)_solarhouse1_inverter_e_va1__out);
  
             // Generated from the component: SolarHouse1.Inverter.Controller.Hilbert Transform1
                            X_UnInt32 _solarhouse1_inverter_controller_hilbert_transform1__i;    
                                                                                          

                _solarhouse1_inverter_controller_hilbert_transform1__a_sum = 0.0f;
        _solarhouse1_inverter_controller_hilbert_transform1__b_sum = 0.0f;
        _solarhouse1_inverter_controller_hilbert_transform1__delay_line_in = 0.0f;
                    for (_solarhouse1_inverter_controller_hilbert_transform1__i = 0; _solarhouse1_inverter_controller_hilbert_transform1__i < 1; _solarhouse1_inverter_controller_hilbert_transform1__i++){
                                     _solarhouse1_inverter_controller_hilbert_transform1__b_sum += _solarhouse1_inverter_controller_hilbert_transform1__b_coeff[_solarhouse1_inverter_controller_hilbert_transform1__i+1] * _solarhouse1_inverter_controller_hilbert_transform1__states[_solarhouse1_inverter_controller_hilbert_transform1__i];
                            }
                                    _solarhouse1_inverter_controller_hilbert_transform1__a_sum += _solarhouse1_inverter_controller_hilbert_transform1__states[0] * _solarhouse1_inverter_controller_hilbert_transform1__a_coeff[1];
                            _solarhouse1_inverter_controller_hilbert_transform1__delay_line_in = _solarhouse1_inverter_i_ia1__out - _solarhouse1_inverter_controller_hilbert_transform1__a_sum;
                            _solarhouse1_inverter_controller_hilbert_transform1__b_sum += _solarhouse1_inverter_controller_hilbert_transform1__b_coeff[0] * _solarhouse1_inverter_controller_hilbert_transform1__delay_line_in;
                _solarhouse1_inverter_controller_hilbert_transform1__out = _solarhouse1_inverter_controller_hilbert_transform1__b_sum;

    
             // Generated from the component: SolarHouse1.Inverter.P
          HIL_OutAO(0x4035, (float)_solarhouse1_inverter_power_meas_gain4__out);
  
             // Generated from the component: SolarHouse1.Modbus.Rate Transition4.Input
    _solarhouse1_modbus_rate_transition4_output__out = _solarhouse1_inverter_power_meas_gain4__out;
             // Generated from the component: SolarHouse1.Inverter.Q
          HIL_OutAO(0x4036, (float)_solarhouse1_inverter_power_meas_gain5__out);
  
             // Generated from the component: SolarHouse1.Inverter.Power_Meas.Gain6
                                _solarhouse1_inverter_power_meas_gain6__out = 50000.0 * _solarhouse1_inverter_power_meas_power_meas_dqpu_s_and_pf__S;
        
             // Generated from the component: SolarHouse1.Inverter.pf
          HIL_OutAO(0x4039, (float)_solarhouse1_inverter_power_meas_power_meas_dqpu_s_and_pf__pf);
  
             // Generated from the component: SolarHouse1.Inverter.LPF_dc
                            X_UnInt32 _solarhouse1_inverter_lpf_dc__i;    
                                                                                          

                _solarhouse1_inverter_lpf_dc__a_sum = 0.0f;
        _solarhouse1_inverter_lpf_dc__b_sum = 0.0f;
        _solarhouse1_inverter_lpf_dc__delay_line_in = 0.0f;
                    for (_solarhouse1_inverter_lpf_dc__i = 0; _solarhouse1_inverter_lpf_dc__i < 1; _solarhouse1_inverter_lpf_dc__i++){
                                     _solarhouse1_inverter_lpf_dc__b_sum += _solarhouse1_inverter_lpf_dc__b_coeff[_solarhouse1_inverter_lpf_dc__i+1] * _solarhouse1_inverter_lpf_dc__states[_solarhouse1_inverter_lpf_dc__i];
                            }
                                    _solarhouse1_inverter_lpf_dc__a_sum += _solarhouse1_inverter_lpf_dc__states[0] * _solarhouse1_inverter_lpf_dc__a_coeff[1];
                            _solarhouse1_inverter_lpf_dc__delay_line_in = _solarhouse1_inverter_vdc_va1__out - _solarhouse1_inverter_lpf_dc__a_sum;
                            _solarhouse1_inverter_lpf_dc__b_sum += _solarhouse1_inverter_lpf_dc__b_coeff[0] * _solarhouse1_inverter_lpf_dc__delay_line_in;
                _solarhouse1_inverter_lpf_dc__out = _solarhouse1_inverter_lpf_dc__b_sum;

    
             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Gain5
                                _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain5__out = 1.0 * _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit3__out;
        
             // Generated from the component: SolarHouse2.Inverter.Controller.C function1
                _solarhouse2_inverter_controller_c_function1__charge = _solarhouse2_inverter_controller_rate_transition8_output__out;
                    _solarhouse2_inverter_controller_c_function1__ref = _solarhouse2_inverter_controller_rate_transition9_output__out;
        
    if (_solarhouse2_inverter_controller_c_function1__charge>0)_solarhouse2_inverter_controller_c_function1__out=-1;else _solarhouse2_inverter_controller_c_function1__out=_solarhouse2_inverter_controller_c_function1__ref;

             // Generated from the component: SolarHouse2.Inverter.Controller.Gain25
                                _solarhouse2_inverter_controller_gain25__out = 6.283185307179586 * _solarhouse2_inverter_controller_single_phase_pll1_integrator10__out;
        
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.C function1
                _solarhouse2_inverter_controller_single_phase_pll1_c_function1__theta_dq = _solarhouse2_inverter_controller_single_phase_pll1_integrator_with_reset__out;
                    _solarhouse2_inverter_controller_single_phase_pll1_c_function1__va = _solarhouse2_inverter_controller_single_phase_pll1_integrator1__out;
                    _solarhouse2_inverter_controller_single_phase_pll1_c_function1__vb = _solarhouse2_inverter_controller_single_phase_pll1_integrator2__out;
        
    _solarhouse2_inverter_controller_single_phase_pll1_c_function1__vq=cos(_solarhouse2_inverter_controller_single_phase_pll1_c_function1__theta_dq)*_solarhouse2_inverter_controller_single_phase_pll1_c_function1__va+sin(_solarhouse2_inverter_controller_single_phase_pll1_c_function1__theta_dq)*_solarhouse2_inverter_controller_single_phase_pll1_c_function1__vb;_solarhouse2_inverter_controller_single_phase_pll1_c_function1__vd=-sin(_solarhouse2_inverter_controller_single_phase_pll1_c_function1__theta_dq)*_solarhouse2_inverter_controller_single_phase_pll1_c_function1__va+cos(_solarhouse2_inverter_controller_single_phase_pll1_c_function1__theta_dq)*_solarhouse2_inverter_controller_single_phase_pll1_c_function1__vb;

             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Sum4
                                              _solarhouse2_inverter_controller_single_phase_pll1_sum4__out = _solarhouse2_inverter_controller_single_phase_pll1_integrator3__out-_solarhouse2_inverter_controller_single_phase_pll1_integrator4__out;    
  
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Product2
    _solarhouse2_inverter_controller_single_phase_pll1_product2__out = (_solarhouse2_inverter_controller_single_phase_pll1_integrator5__out * _solarhouse2_inverter_controller_single_phase_pll1_integrator1__out);

             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.w_to_f
                                _solarhouse2_inverter_controller_single_phase_pll1_w_to_f__out = 0.15915494309189535 * _solarhouse2_inverter_controller_single_phase_pll1_integrator5__out;
        
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Sum9
                                              _solarhouse2_inverter_controller_single_phase_pll1_sum9__out = _solarhouse2_inverter_controller_single_phase_pll1_integrator6__out-_solarhouse2_inverter_controller_single_phase_pll1_integrator5__out;    
  
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Sum11
                                              _solarhouse2_inverter_controller_single_phase_pll1_sum11__out = _solarhouse2_inverter_controller_single_phase_pll1_integrator7__out-_solarhouse2_inverter_controller_single_phase_pll1_integrator8__out;    
  
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Sum13
                                              _solarhouse2_inverter_controller_single_phase_pll1_sum13__out = _solarhouse2_inverter_controller_single_phase_pll1_integrator8__out-_solarhouse2_inverter_controller_single_phase_pll1_integrator9__out;    
  
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Sum14
                                              _solarhouse2_inverter_controller_single_phase_pll1_sum14__out = _solarhouse2_inverter_controller_single_phase_pll1_integrator9__out-_solarhouse2_inverter_controller_single_phase_pll1_integrator10__out;    
  
             // Generated from the component: SolarHouse2.Inverter.Controller.Rate Transition8.Input
    _solarhouse2_inverter_controller_rate_transition8_output__out = _solarhouse2_inverter_controller_charge__out;
             // Generated from the component: SolarHouse2.Inverter.Controller.Hilbert Transform
                            X_UnInt32 _solarhouse2_inverter_controller_hilbert_transform__i;    
                                                                                          

                _solarhouse2_inverter_controller_hilbert_transform__a_sum = 0.0f;
        _solarhouse2_inverter_controller_hilbert_transform__b_sum = 0.0f;
        _solarhouse2_inverter_controller_hilbert_transform__delay_line_in = 0.0f;
                    for (_solarhouse2_inverter_controller_hilbert_transform__i = 0; _solarhouse2_inverter_controller_hilbert_transform__i < 1; _solarhouse2_inverter_controller_hilbert_transform__i++){
                                     _solarhouse2_inverter_controller_hilbert_transform__b_sum += _solarhouse2_inverter_controller_hilbert_transform__b_coeff[_solarhouse2_inverter_controller_hilbert_transform__i+1] * _solarhouse2_inverter_controller_hilbert_transform__states[_solarhouse2_inverter_controller_hilbert_transform__i];
                            }
                                    _solarhouse2_inverter_controller_hilbert_transform__a_sum += _solarhouse2_inverter_controller_hilbert_transform__states[0] * _solarhouse2_inverter_controller_hilbert_transform__a_coeff[1];
                            _solarhouse2_inverter_controller_hilbert_transform__delay_line_in = _solarhouse2_inverter_e_va1__out - _solarhouse2_inverter_controller_hilbert_transform__a_sum;
                            _solarhouse2_inverter_controller_hilbert_transform__b_sum += _solarhouse2_inverter_controller_hilbert_transform__b_coeff[0] * _solarhouse2_inverter_controller_hilbert_transform__delay_line_in;
                _solarhouse2_inverter_controller_hilbert_transform__out = _solarhouse2_inverter_controller_hilbert_transform__b_sum;

    
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Sum1
                                              _solarhouse2_inverter_controller_single_phase_pll1_sum1__out =  - _solarhouse2_inverter_controller_single_phase_pll1_integrator1__out+_solarhouse2_inverter_e_va1__out;    
  
             // Generated from the component: SolarHouse2.Inverter.V
          HIL_OutAO(0x4052, (float)_solarhouse2_inverter_e_va1__out);
  
             // Generated from the component: SolarHouse2.Inverter.Controller.Hilbert Transform1
                            X_UnInt32 _solarhouse2_inverter_controller_hilbert_transform1__i;    
                                                                                          

                _solarhouse2_inverter_controller_hilbert_transform1__a_sum = 0.0f;
        _solarhouse2_inverter_controller_hilbert_transform1__b_sum = 0.0f;
        _solarhouse2_inverter_controller_hilbert_transform1__delay_line_in = 0.0f;
                    for (_solarhouse2_inverter_controller_hilbert_transform1__i = 0; _solarhouse2_inverter_controller_hilbert_transform1__i < 1; _solarhouse2_inverter_controller_hilbert_transform1__i++){
                                     _solarhouse2_inverter_controller_hilbert_transform1__b_sum += _solarhouse2_inverter_controller_hilbert_transform1__b_coeff[_solarhouse2_inverter_controller_hilbert_transform1__i+1] * _solarhouse2_inverter_controller_hilbert_transform1__states[_solarhouse2_inverter_controller_hilbert_transform1__i];
                            }
                                    _solarhouse2_inverter_controller_hilbert_transform1__a_sum += _solarhouse2_inverter_controller_hilbert_transform1__states[0] * _solarhouse2_inverter_controller_hilbert_transform1__a_coeff[1];
                            _solarhouse2_inverter_controller_hilbert_transform1__delay_line_in = _solarhouse2_inverter_i_ia1__out - _solarhouse2_inverter_controller_hilbert_transform1__a_sum;
                            _solarhouse2_inverter_controller_hilbert_transform1__b_sum += _solarhouse2_inverter_controller_hilbert_transform1__b_coeff[0] * _solarhouse2_inverter_controller_hilbert_transform1__delay_line_in;
                _solarhouse2_inverter_controller_hilbert_transform1__out = _solarhouse2_inverter_controller_hilbert_transform1__b_sum;

    
             // Generated from the component: SolarHouse2.Inverter.P
          HIL_OutAO(0x404f, (float)_solarhouse2_inverter_power_meas_gain4__out);
  
             // Generated from the component: SolarHouse2.Modbus.Rate Transition4.Input
    _solarhouse2_modbus_rate_transition4_output__out = _solarhouse2_inverter_power_meas_gain4__out;
             // Generated from the component: SolarHouse2.Inverter.Q
          HIL_OutAO(0x4050, (float)_solarhouse2_inverter_power_meas_gain5__out);
  
             // Generated from the component: SolarHouse2.Inverter.Power_Meas.Gain6
                                _solarhouse2_inverter_power_meas_gain6__out = 50000.0 * _solarhouse2_inverter_power_meas_power_meas_dqpu_s_and_pf__S;
        
             // Generated from the component: SolarHouse2.Inverter.pf
          HIL_OutAO(0x4053, (float)_solarhouse2_inverter_power_meas_power_meas_dqpu_s_and_pf__pf);
  
             // Generated from the component: SolarHouse2.Inverter.LPF_dc
                            X_UnInt32 _solarhouse2_inverter_lpf_dc__i;    
                                                                                          

                _solarhouse2_inverter_lpf_dc__a_sum = 0.0f;
        _solarhouse2_inverter_lpf_dc__b_sum = 0.0f;
        _solarhouse2_inverter_lpf_dc__delay_line_in = 0.0f;
                    for (_solarhouse2_inverter_lpf_dc__i = 0; _solarhouse2_inverter_lpf_dc__i < 1; _solarhouse2_inverter_lpf_dc__i++){
                                     _solarhouse2_inverter_lpf_dc__b_sum += _solarhouse2_inverter_lpf_dc__b_coeff[_solarhouse2_inverter_lpf_dc__i+1] * _solarhouse2_inverter_lpf_dc__states[_solarhouse2_inverter_lpf_dc__i];
                            }
                                    _solarhouse2_inverter_lpf_dc__a_sum += _solarhouse2_inverter_lpf_dc__states[0] * _solarhouse2_inverter_lpf_dc__a_coeff[1];
                            _solarhouse2_inverter_lpf_dc__delay_line_in = _solarhouse2_inverter_vdc_va1__out - _solarhouse2_inverter_lpf_dc__a_sum;
                            _solarhouse2_inverter_lpf_dc__b_sum += _solarhouse2_inverter_lpf_dc__b_coeff[0] * _solarhouse2_inverter_lpf_dc__delay_line_in;
                _solarhouse2_inverter_lpf_dc__out = _solarhouse2_inverter_lpf_dc__b_sum;

    
             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Gain5
                                _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain5__out = 1.0 * _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit3__out;
        
             // Generated from the component: SolarHouse3.Inverter.Controller.C function1
                _solarhouse3_inverter_controller_c_function1__charge = _solarhouse3_inverter_controller_rate_transition8_output__out;
                    _solarhouse3_inverter_controller_c_function1__ref = _solarhouse3_inverter_controller_rate_transition9_output__out;
        
    if (_solarhouse3_inverter_controller_c_function1__charge>0)_solarhouse3_inverter_controller_c_function1__out=-1;else _solarhouse3_inverter_controller_c_function1__out=_solarhouse3_inverter_controller_c_function1__ref;

             // Generated from the component: SolarHouse3.Inverter.Controller.Gain25
                                _solarhouse3_inverter_controller_gain25__out = 6.283185307179586 * _solarhouse3_inverter_controller_single_phase_pll1_integrator10__out;
        
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.C function1
                _solarhouse3_inverter_controller_single_phase_pll1_c_function1__theta_dq = _solarhouse3_inverter_controller_single_phase_pll1_integrator_with_reset__out;
                    _solarhouse3_inverter_controller_single_phase_pll1_c_function1__va = _solarhouse3_inverter_controller_single_phase_pll1_integrator1__out;
                    _solarhouse3_inverter_controller_single_phase_pll1_c_function1__vb = _solarhouse3_inverter_controller_single_phase_pll1_integrator2__out;
        
    _solarhouse3_inverter_controller_single_phase_pll1_c_function1__vq=cos(_solarhouse3_inverter_controller_single_phase_pll1_c_function1__theta_dq)*_solarhouse3_inverter_controller_single_phase_pll1_c_function1__va+sin(_solarhouse3_inverter_controller_single_phase_pll1_c_function1__theta_dq)*_solarhouse3_inverter_controller_single_phase_pll1_c_function1__vb;_solarhouse3_inverter_controller_single_phase_pll1_c_function1__vd=-sin(_solarhouse3_inverter_controller_single_phase_pll1_c_function1__theta_dq)*_solarhouse3_inverter_controller_single_phase_pll1_c_function1__va+cos(_solarhouse3_inverter_controller_single_phase_pll1_c_function1__theta_dq)*_solarhouse3_inverter_controller_single_phase_pll1_c_function1__vb;

             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Sum4
                                              _solarhouse3_inverter_controller_single_phase_pll1_sum4__out = _solarhouse3_inverter_controller_single_phase_pll1_integrator3__out-_solarhouse3_inverter_controller_single_phase_pll1_integrator4__out;    
  
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Product2
    _solarhouse3_inverter_controller_single_phase_pll1_product2__out = (_solarhouse3_inverter_controller_single_phase_pll1_integrator5__out * _solarhouse3_inverter_controller_single_phase_pll1_integrator1__out);

             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.w_to_f
                                _solarhouse3_inverter_controller_single_phase_pll1_w_to_f__out = 0.15915494309189535 * _solarhouse3_inverter_controller_single_phase_pll1_integrator5__out;
        
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Sum9
                                              _solarhouse3_inverter_controller_single_phase_pll1_sum9__out = _solarhouse3_inverter_controller_single_phase_pll1_integrator6__out-_solarhouse3_inverter_controller_single_phase_pll1_integrator5__out;    
  
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Sum11
                                              _solarhouse3_inverter_controller_single_phase_pll1_sum11__out = _solarhouse3_inverter_controller_single_phase_pll1_integrator7__out-_solarhouse3_inverter_controller_single_phase_pll1_integrator8__out;    
  
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Sum13
                                              _solarhouse3_inverter_controller_single_phase_pll1_sum13__out = _solarhouse3_inverter_controller_single_phase_pll1_integrator8__out-_solarhouse3_inverter_controller_single_phase_pll1_integrator9__out;    
  
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Sum14
                                              _solarhouse3_inverter_controller_single_phase_pll1_sum14__out = _solarhouse3_inverter_controller_single_phase_pll1_integrator9__out-_solarhouse3_inverter_controller_single_phase_pll1_integrator10__out;    
  
             // Generated from the component: SolarHouse3.Inverter.Controller.Rate Transition8.Input
    _solarhouse3_inverter_controller_rate_transition8_output__out = _solarhouse3_inverter_controller_charge__out;
             // Generated from the component: SolarHouse3.Inverter.Controller.Hilbert Transform
                            X_UnInt32 _solarhouse3_inverter_controller_hilbert_transform__i;    
                                                                                          

                _solarhouse3_inverter_controller_hilbert_transform__a_sum = 0.0f;
        _solarhouse3_inverter_controller_hilbert_transform__b_sum = 0.0f;
        _solarhouse3_inverter_controller_hilbert_transform__delay_line_in = 0.0f;
                    for (_solarhouse3_inverter_controller_hilbert_transform__i = 0; _solarhouse3_inverter_controller_hilbert_transform__i < 1; _solarhouse3_inverter_controller_hilbert_transform__i++){
                                     _solarhouse3_inverter_controller_hilbert_transform__b_sum += _solarhouse3_inverter_controller_hilbert_transform__b_coeff[_solarhouse3_inverter_controller_hilbert_transform__i+1] * _solarhouse3_inverter_controller_hilbert_transform__states[_solarhouse3_inverter_controller_hilbert_transform__i];
                            }
                                    _solarhouse3_inverter_controller_hilbert_transform__a_sum += _solarhouse3_inverter_controller_hilbert_transform__states[0] * _solarhouse3_inverter_controller_hilbert_transform__a_coeff[1];
                            _solarhouse3_inverter_controller_hilbert_transform__delay_line_in = _solarhouse3_inverter_e_va1__out - _solarhouse3_inverter_controller_hilbert_transform__a_sum;
                            _solarhouse3_inverter_controller_hilbert_transform__b_sum += _solarhouse3_inverter_controller_hilbert_transform__b_coeff[0] * _solarhouse3_inverter_controller_hilbert_transform__delay_line_in;
                _solarhouse3_inverter_controller_hilbert_transform__out = _solarhouse3_inverter_controller_hilbert_transform__b_sum;

    
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Sum1
                                              _solarhouse3_inverter_controller_single_phase_pll1_sum1__out =  - _solarhouse3_inverter_controller_single_phase_pll1_integrator1__out+_solarhouse3_inverter_e_va1__out;    
  
             // Generated from the component: SolarHouse3.Inverter.V
          HIL_OutAO(0x406c, (float)_solarhouse3_inverter_e_va1__out);
  
             // Generated from the component: SolarHouse3.Inverter.Controller.Hilbert Transform1
                            X_UnInt32 _solarhouse3_inverter_controller_hilbert_transform1__i;    
                                                                                          

                _solarhouse3_inverter_controller_hilbert_transform1__a_sum = 0.0f;
        _solarhouse3_inverter_controller_hilbert_transform1__b_sum = 0.0f;
        _solarhouse3_inverter_controller_hilbert_transform1__delay_line_in = 0.0f;
                    for (_solarhouse3_inverter_controller_hilbert_transform1__i = 0; _solarhouse3_inverter_controller_hilbert_transform1__i < 1; _solarhouse3_inverter_controller_hilbert_transform1__i++){
                                     _solarhouse3_inverter_controller_hilbert_transform1__b_sum += _solarhouse3_inverter_controller_hilbert_transform1__b_coeff[_solarhouse3_inverter_controller_hilbert_transform1__i+1] * _solarhouse3_inverter_controller_hilbert_transform1__states[_solarhouse3_inverter_controller_hilbert_transform1__i];
                            }
                                    _solarhouse3_inverter_controller_hilbert_transform1__a_sum += _solarhouse3_inverter_controller_hilbert_transform1__states[0] * _solarhouse3_inverter_controller_hilbert_transform1__a_coeff[1];
                            _solarhouse3_inverter_controller_hilbert_transform1__delay_line_in = _solarhouse3_inverter_i_ia1__out - _solarhouse3_inverter_controller_hilbert_transform1__a_sum;
                            _solarhouse3_inverter_controller_hilbert_transform1__b_sum += _solarhouse3_inverter_controller_hilbert_transform1__b_coeff[0] * _solarhouse3_inverter_controller_hilbert_transform1__delay_line_in;
                _solarhouse3_inverter_controller_hilbert_transform1__out = _solarhouse3_inverter_controller_hilbert_transform1__b_sum;

    
             // Generated from the component: SolarHouse3.Inverter.P
          HIL_OutAO(0x4069, (float)_solarhouse3_inverter_power_meas_gain4__out);
  
             // Generated from the component: SolarHouse3.Modbus.Rate Transition4.Input
    _solarhouse3_modbus_rate_transition4_output__out = _solarhouse3_inverter_power_meas_gain4__out;
             // Generated from the component: SolarHouse3.Inverter.Q
          HIL_OutAO(0x406a, (float)_solarhouse3_inverter_power_meas_gain5__out);
  
             // Generated from the component: SolarHouse3.Inverter.Power_Meas.Gain6
                                _solarhouse3_inverter_power_meas_gain6__out = 50000.0 * _solarhouse3_inverter_power_meas_power_meas_dqpu_s_and_pf__S;
        
             // Generated from the component: SolarHouse3.Inverter.pf
          HIL_OutAO(0x406d, (float)_solarhouse3_inverter_power_meas_power_meas_dqpu_s_and_pf__pf);
  
             // Generated from the component: SolarHouse3.Inverter.LPF_dc
                            X_UnInt32 _solarhouse3_inverter_lpf_dc__i;    
                                                                                          

                _solarhouse3_inverter_lpf_dc__a_sum = 0.0f;
        _solarhouse3_inverter_lpf_dc__b_sum = 0.0f;
        _solarhouse3_inverter_lpf_dc__delay_line_in = 0.0f;
                    for (_solarhouse3_inverter_lpf_dc__i = 0; _solarhouse3_inverter_lpf_dc__i < 1; _solarhouse3_inverter_lpf_dc__i++){
                                     _solarhouse3_inverter_lpf_dc__b_sum += _solarhouse3_inverter_lpf_dc__b_coeff[_solarhouse3_inverter_lpf_dc__i+1] * _solarhouse3_inverter_lpf_dc__states[_solarhouse3_inverter_lpf_dc__i];
                            }
                                    _solarhouse3_inverter_lpf_dc__a_sum += _solarhouse3_inverter_lpf_dc__states[0] * _solarhouse3_inverter_lpf_dc__a_coeff[1];
                            _solarhouse3_inverter_lpf_dc__delay_line_in = _solarhouse3_inverter_vdc_va1__out - _solarhouse3_inverter_lpf_dc__a_sum;
                            _solarhouse3_inverter_lpf_dc__b_sum += _solarhouse3_inverter_lpf_dc__b_coeff[0] * _solarhouse3_inverter_lpf_dc__delay_line_in;
                _solarhouse3_inverter_lpf_dc__out = _solarhouse3_inverter_lpf_dc__b_sum;

    
             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Gain5
                                _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain5__out = 1.0 * _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit3__out;
        
             // Generated from the component: SolarHouse4.Inverter.Controller.C function1
                _solarhouse4_inverter_controller_c_function1__charge = _solarhouse4_inverter_controller_rate_transition8_output__out;
                    _solarhouse4_inverter_controller_c_function1__ref = _solarhouse4_inverter_controller_rate_transition9_output__out;
        
    if (_solarhouse4_inverter_controller_c_function1__charge>0)_solarhouse4_inverter_controller_c_function1__out=-1;else _solarhouse4_inverter_controller_c_function1__out=_solarhouse4_inverter_controller_c_function1__ref;

             // Generated from the component: SolarHouse4.Inverter.Controller.Gain25
                                _solarhouse4_inverter_controller_gain25__out = 6.283185307179586 * _solarhouse4_inverter_controller_single_phase_pll1_integrator10__out;
        
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.C function1
                _solarhouse4_inverter_controller_single_phase_pll1_c_function1__theta_dq = _solarhouse4_inverter_controller_single_phase_pll1_integrator_with_reset__out;
                    _solarhouse4_inverter_controller_single_phase_pll1_c_function1__va = _solarhouse4_inverter_controller_single_phase_pll1_integrator1__out;
                    _solarhouse4_inverter_controller_single_phase_pll1_c_function1__vb = _solarhouse4_inverter_controller_single_phase_pll1_integrator2__out;
        
    _solarhouse4_inverter_controller_single_phase_pll1_c_function1__vq=cos(_solarhouse4_inverter_controller_single_phase_pll1_c_function1__theta_dq)*_solarhouse4_inverter_controller_single_phase_pll1_c_function1__va+sin(_solarhouse4_inverter_controller_single_phase_pll1_c_function1__theta_dq)*_solarhouse4_inverter_controller_single_phase_pll1_c_function1__vb;_solarhouse4_inverter_controller_single_phase_pll1_c_function1__vd=-sin(_solarhouse4_inverter_controller_single_phase_pll1_c_function1__theta_dq)*_solarhouse4_inverter_controller_single_phase_pll1_c_function1__va+cos(_solarhouse4_inverter_controller_single_phase_pll1_c_function1__theta_dq)*_solarhouse4_inverter_controller_single_phase_pll1_c_function1__vb;

             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Sum4
                                              _solarhouse4_inverter_controller_single_phase_pll1_sum4__out = _solarhouse4_inverter_controller_single_phase_pll1_integrator3__out-_solarhouse4_inverter_controller_single_phase_pll1_integrator4__out;    
  
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Product2
    _solarhouse4_inverter_controller_single_phase_pll1_product2__out = (_solarhouse4_inverter_controller_single_phase_pll1_integrator5__out * _solarhouse4_inverter_controller_single_phase_pll1_integrator1__out);

             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.w_to_f
                                _solarhouse4_inverter_controller_single_phase_pll1_w_to_f__out = 0.15915494309189535 * _solarhouse4_inverter_controller_single_phase_pll1_integrator5__out;
        
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Sum9
                                              _solarhouse4_inverter_controller_single_phase_pll1_sum9__out = _solarhouse4_inverter_controller_single_phase_pll1_integrator6__out-_solarhouse4_inverter_controller_single_phase_pll1_integrator5__out;    
  
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Sum11
                                              _solarhouse4_inverter_controller_single_phase_pll1_sum11__out = _solarhouse4_inverter_controller_single_phase_pll1_integrator7__out-_solarhouse4_inverter_controller_single_phase_pll1_integrator8__out;    
  
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Sum13
                                              _solarhouse4_inverter_controller_single_phase_pll1_sum13__out = _solarhouse4_inverter_controller_single_phase_pll1_integrator8__out-_solarhouse4_inverter_controller_single_phase_pll1_integrator9__out;    
  
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Sum14
                                              _solarhouse4_inverter_controller_single_phase_pll1_sum14__out = _solarhouse4_inverter_controller_single_phase_pll1_integrator9__out-_solarhouse4_inverter_controller_single_phase_pll1_integrator10__out;    
  
             // Generated from the component: SolarHouse4.Inverter.Controller.Rate Transition8.Input
    _solarhouse4_inverter_controller_rate_transition8_output__out = _solarhouse4_inverter_controller_charge__out;
             // Generated from the component: SolarHouse4.Inverter.Controller.Hilbert Transform
                            X_UnInt32 _solarhouse4_inverter_controller_hilbert_transform__i;    
                                                                                          

                _solarhouse4_inverter_controller_hilbert_transform__a_sum = 0.0f;
        _solarhouse4_inverter_controller_hilbert_transform__b_sum = 0.0f;
        _solarhouse4_inverter_controller_hilbert_transform__delay_line_in = 0.0f;
                    for (_solarhouse4_inverter_controller_hilbert_transform__i = 0; _solarhouse4_inverter_controller_hilbert_transform__i < 1; _solarhouse4_inverter_controller_hilbert_transform__i++){
                                     _solarhouse4_inverter_controller_hilbert_transform__b_sum += _solarhouse4_inverter_controller_hilbert_transform__b_coeff[_solarhouse4_inverter_controller_hilbert_transform__i+1] * _solarhouse4_inverter_controller_hilbert_transform__states[_solarhouse4_inverter_controller_hilbert_transform__i];
                            }
                                    _solarhouse4_inverter_controller_hilbert_transform__a_sum += _solarhouse4_inverter_controller_hilbert_transform__states[0] * _solarhouse4_inverter_controller_hilbert_transform__a_coeff[1];
                            _solarhouse4_inverter_controller_hilbert_transform__delay_line_in = _solarhouse4_inverter_e_va1__out - _solarhouse4_inverter_controller_hilbert_transform__a_sum;
                            _solarhouse4_inverter_controller_hilbert_transform__b_sum += _solarhouse4_inverter_controller_hilbert_transform__b_coeff[0] * _solarhouse4_inverter_controller_hilbert_transform__delay_line_in;
                _solarhouse4_inverter_controller_hilbert_transform__out = _solarhouse4_inverter_controller_hilbert_transform__b_sum;

    
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Sum1
                                              _solarhouse4_inverter_controller_single_phase_pll1_sum1__out =  - _solarhouse4_inverter_controller_single_phase_pll1_integrator1__out+_solarhouse4_inverter_e_va1__out;    
  
             // Generated from the component: SolarHouse4.Inverter.V
          HIL_OutAO(0x4086, (float)_solarhouse4_inverter_e_va1__out);
  
             // Generated from the component: SolarHouse4.Inverter.Controller.Hilbert Transform1
                            X_UnInt32 _solarhouse4_inverter_controller_hilbert_transform1__i;    
                                                                                          

                _solarhouse4_inverter_controller_hilbert_transform1__a_sum = 0.0f;
        _solarhouse4_inverter_controller_hilbert_transform1__b_sum = 0.0f;
        _solarhouse4_inverter_controller_hilbert_transform1__delay_line_in = 0.0f;
                    for (_solarhouse4_inverter_controller_hilbert_transform1__i = 0; _solarhouse4_inverter_controller_hilbert_transform1__i < 1; _solarhouse4_inverter_controller_hilbert_transform1__i++){
                                     _solarhouse4_inverter_controller_hilbert_transform1__b_sum += _solarhouse4_inverter_controller_hilbert_transform1__b_coeff[_solarhouse4_inverter_controller_hilbert_transform1__i+1] * _solarhouse4_inverter_controller_hilbert_transform1__states[_solarhouse4_inverter_controller_hilbert_transform1__i];
                            }
                                    _solarhouse4_inverter_controller_hilbert_transform1__a_sum += _solarhouse4_inverter_controller_hilbert_transform1__states[0] * _solarhouse4_inverter_controller_hilbert_transform1__a_coeff[1];
                            _solarhouse4_inverter_controller_hilbert_transform1__delay_line_in = _solarhouse4_inverter_i_ia1__out - _solarhouse4_inverter_controller_hilbert_transform1__a_sum;
                            _solarhouse4_inverter_controller_hilbert_transform1__b_sum += _solarhouse4_inverter_controller_hilbert_transform1__b_coeff[0] * _solarhouse4_inverter_controller_hilbert_transform1__delay_line_in;
                _solarhouse4_inverter_controller_hilbert_transform1__out = _solarhouse4_inverter_controller_hilbert_transform1__b_sum;

    
             // Generated from the component: SolarHouse4.Inverter.P
          HIL_OutAO(0x4083, (float)_solarhouse4_inverter_power_meas_gain4__out);
  
             // Generated from the component: SolarHouse4.Modbus.Rate Transition4.Input
    _solarhouse4_modbus_rate_transition4_output__out = _solarhouse4_inverter_power_meas_gain4__out;
             // Generated from the component: SolarHouse4.Inverter.Q
          HIL_OutAO(0x4084, (float)_solarhouse4_inverter_power_meas_gain5__out);
  
             // Generated from the component: SolarHouse4.Inverter.Power_Meas.Gain6
                                _solarhouse4_inverter_power_meas_gain6__out = 50000.0 * _solarhouse4_inverter_power_meas_power_meas_dqpu_s_and_pf__S;
        
             // Generated from the component: SolarHouse4.Inverter.pf
          HIL_OutAO(0x4087, (float)_solarhouse4_inverter_power_meas_power_meas_dqpu_s_and_pf__pf);
  
             // Generated from the component: SolarHouse4.Inverter.LPF_dc
                            X_UnInt32 _solarhouse4_inverter_lpf_dc__i;    
                                                                                          

                _solarhouse4_inverter_lpf_dc__a_sum = 0.0f;
        _solarhouse4_inverter_lpf_dc__b_sum = 0.0f;
        _solarhouse4_inverter_lpf_dc__delay_line_in = 0.0f;
                    for (_solarhouse4_inverter_lpf_dc__i = 0; _solarhouse4_inverter_lpf_dc__i < 1; _solarhouse4_inverter_lpf_dc__i++){
                                     _solarhouse4_inverter_lpf_dc__b_sum += _solarhouse4_inverter_lpf_dc__b_coeff[_solarhouse4_inverter_lpf_dc__i+1] * _solarhouse4_inverter_lpf_dc__states[_solarhouse4_inverter_lpf_dc__i];
                            }
                                    _solarhouse4_inverter_lpf_dc__a_sum += _solarhouse4_inverter_lpf_dc__states[0] * _solarhouse4_inverter_lpf_dc__a_coeff[1];
                            _solarhouse4_inverter_lpf_dc__delay_line_in = _solarhouse4_inverter_vdc_va1__out - _solarhouse4_inverter_lpf_dc__a_sum;
                            _solarhouse4_inverter_lpf_dc__b_sum += _solarhouse4_inverter_lpf_dc__b_coeff[0] * _solarhouse4_inverter_lpf_dc__delay_line_in;
                _solarhouse4_inverter_lpf_dc__out = _solarhouse4_inverter_lpf_dc__b_sum;

    
             // Generated from the component: ESS.Inverter.Controller.Gain22
                                _ess_inverter_controller_gain22__out = 0.02 * _ess_inverter_controller_c_function1__out;
        
             // Generated from the component: ESS.Inverter.Controller.Gain33
                                _ess_inverter_controller_gain33__out = 1000.0 * _ess_inverter_controller_c_function1__out;
        
             // Generated from the component: ESS.Inverter.Controller.C function4
                _ess_inverter_controller_c_function4__Ts = _ess_inverter_controller_constant4__out;
                    _ess_inverter_controller_c_function4__in = _ess_inverter_controller_gain25__out;
                    _ess_inverter_controller_c_function4__pi = _ess_inverter_controller_constant3__out;
        
    _ess_inverter_controller_c_function4__out=_ess_inverter_controller_c_function4__out+_ess_inverter_controller_c_function4__in*_ess_inverter_controller_c_function4__Ts;if (_ess_inverter_controller_c_function4__out>=2*_ess_inverter_controller_c_function4__pi){_ess_inverter_controller_c_function4__out=_ess_inverter_controller_c_function4__out-2*_ess_inverter_controller_c_function4__pi;}

             // Generated from the component: ESS.Inverter.Controller.w
          HIL_OutAO(0x4019, (float)_ess_inverter_controller_gain25__out);
  
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Gain3
                                _ess_inverter_controller_single_phase_pll1_gain3__out = -1.0 * _ess_inverter_controller_single_phase_pll1_c_function1__vd;
        
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Math_f1
            _ess_inverter_controller_single_phase_pll1_math_f1__out = pow(_ess_inverter_controller_single_phase_pll1_c_function1__vq, _ess_inverter_controller_single_phase_pll1_constant2__out);  

             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Math_f2
            _ess_inverter_controller_single_phase_pll1_math_f2__out = pow(_ess_inverter_controller_single_phase_pll1_c_function1__vd, _ess_inverter_controller_single_phase_pll1_constant2__out);  

             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Gain5
                                _ess_inverter_controller_single_phase_pll1_gain5__out = 125.66370614359172 * _ess_inverter_controller_single_phase_pll1_sum4__out;
        
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Sum12
                                              _ess_inverter_controller_single_phase_pll1_sum12__out = _ess_inverter_controller_single_phase_pll1_w_to_f__out-_ess_inverter_controller_single_phase_pll1_integrator7__out;    
  
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Gain7
                                _ess_inverter_controller_single_phase_pll1_gain7__out = 628.3185307179587 * _ess_inverter_controller_single_phase_pll1_sum9__out;
        
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Gain8
                                _ess_inverter_controller_single_phase_pll1_gain8__out = 62.83185307179586 * _ess_inverter_controller_single_phase_pll1_sum11__out;
        
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Gain10
                                _ess_inverter_controller_single_phase_pll1_gain10__out = 62.83185307179586 * _ess_inverter_controller_single_phase_pll1_sum13__out;
        
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Gain11
                                _ess_inverter_controller_single_phase_pll1_gain11__out = 62.83185307179586 * _ess_inverter_controller_single_phase_pll1_sum14__out;
        
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Gain2
                                _ess_inverter_controller_single_phase_pll1_gain2__out = 0.4 * _ess_inverter_controller_single_phase_pll1_sum1__out;
        
             // Generated from the component: ESS.Inverter.S
          HIL_OutAO(0x401c, (float)_ess_inverter_power_meas_gain6__out);
  
             // Generated from the component: SolarHouse1.Inverter.Controller.Gain22
                                _solarhouse1_inverter_controller_gain22__out = 0.02 * _solarhouse1_inverter_controller_c_function1__out;
        
             // Generated from the component: SolarHouse1.Inverter.Controller.Gain33
                                _solarhouse1_inverter_controller_gain33__out = 1000.0 * _solarhouse1_inverter_controller_c_function1__out;
        
             // Generated from the component: SolarHouse1.Inverter.Controller.C function4
                _solarhouse1_inverter_controller_c_function4__Ts = _solarhouse1_inverter_controller_constant4__out;
                    _solarhouse1_inverter_controller_c_function4__in = _solarhouse1_inverter_controller_gain25__out;
                    _solarhouse1_inverter_controller_c_function4__pi = _solarhouse1_inverter_controller_constant3__out;
        
    _solarhouse1_inverter_controller_c_function4__out=_solarhouse1_inverter_controller_c_function4__out+_solarhouse1_inverter_controller_c_function4__in*_solarhouse1_inverter_controller_c_function4__Ts;if (_solarhouse1_inverter_controller_c_function4__out>=2*_solarhouse1_inverter_controller_c_function4__pi){_solarhouse1_inverter_controller_c_function4__out=_solarhouse1_inverter_controller_c_function4__out-2*_solarhouse1_inverter_controller_c_function4__pi;}

             // Generated from the component: SolarHouse1.Inverter.Controller.w
          HIL_OutAO(0x4034, (float)_solarhouse1_inverter_controller_gain25__out);
  
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Gain3
                                _solarhouse1_inverter_controller_single_phase_pll1_gain3__out = -1.0 * _solarhouse1_inverter_controller_single_phase_pll1_c_function1__vd;
        
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Math_f1
            _solarhouse1_inverter_controller_single_phase_pll1_math_f1__out = pow(_solarhouse1_inverter_controller_single_phase_pll1_c_function1__vq, _solarhouse1_inverter_controller_single_phase_pll1_constant2__out);  

             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Math_f2
            _solarhouse1_inverter_controller_single_phase_pll1_math_f2__out = pow(_solarhouse1_inverter_controller_single_phase_pll1_c_function1__vd, _solarhouse1_inverter_controller_single_phase_pll1_constant2__out);  

             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Gain5
                                _solarhouse1_inverter_controller_single_phase_pll1_gain5__out = 125.66370614359172 * _solarhouse1_inverter_controller_single_phase_pll1_sum4__out;
        
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Sum12
                                              _solarhouse1_inverter_controller_single_phase_pll1_sum12__out = _solarhouse1_inverter_controller_single_phase_pll1_w_to_f__out-_solarhouse1_inverter_controller_single_phase_pll1_integrator7__out;    
  
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Gain7
                                _solarhouse1_inverter_controller_single_phase_pll1_gain7__out = 628.3185307179587 * _solarhouse1_inverter_controller_single_phase_pll1_sum9__out;
        
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Gain8
                                _solarhouse1_inverter_controller_single_phase_pll1_gain8__out = 62.83185307179586 * _solarhouse1_inverter_controller_single_phase_pll1_sum11__out;
        
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Gain10
                                _solarhouse1_inverter_controller_single_phase_pll1_gain10__out = 62.83185307179586 * _solarhouse1_inverter_controller_single_phase_pll1_sum13__out;
        
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Gain11
                                _solarhouse1_inverter_controller_single_phase_pll1_gain11__out = 62.83185307179586 * _solarhouse1_inverter_controller_single_phase_pll1_sum14__out;
        
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Gain2
                                _solarhouse1_inverter_controller_single_phase_pll1_gain2__out = 0.4 * _solarhouse1_inverter_controller_single_phase_pll1_sum1__out;
        
             // Generated from the component: SolarHouse1.Inverter.S
          HIL_OutAO(0x4037, (float)_solarhouse1_inverter_power_meas_gain6__out);
  
             // Generated from the component: SolarHouse2.Inverter.Controller.Gain22
                                _solarhouse2_inverter_controller_gain22__out = 0.02 * _solarhouse2_inverter_controller_c_function1__out;
        
             // Generated from the component: SolarHouse2.Inverter.Controller.Gain33
                                _solarhouse2_inverter_controller_gain33__out = 1000.0 * _solarhouse2_inverter_controller_c_function1__out;
        
             // Generated from the component: SolarHouse2.Inverter.Controller.C function4
                _solarhouse2_inverter_controller_c_function4__Ts = _solarhouse2_inverter_controller_constant4__out;
                    _solarhouse2_inverter_controller_c_function4__in = _solarhouse2_inverter_controller_gain25__out;
                    _solarhouse2_inverter_controller_c_function4__pi = _solarhouse2_inverter_controller_constant3__out;
        
    _solarhouse2_inverter_controller_c_function4__out=_solarhouse2_inverter_controller_c_function4__out+_solarhouse2_inverter_controller_c_function4__in*_solarhouse2_inverter_controller_c_function4__Ts;if (_solarhouse2_inverter_controller_c_function4__out>=2*_solarhouse2_inverter_controller_c_function4__pi){_solarhouse2_inverter_controller_c_function4__out=_solarhouse2_inverter_controller_c_function4__out-2*_solarhouse2_inverter_controller_c_function4__pi;}

             // Generated from the component: SolarHouse2.Inverter.Controller.w
          HIL_OutAO(0x404e, (float)_solarhouse2_inverter_controller_gain25__out);
  
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Gain3
                                _solarhouse2_inverter_controller_single_phase_pll1_gain3__out = -1.0 * _solarhouse2_inverter_controller_single_phase_pll1_c_function1__vd;
        
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Math_f1
            _solarhouse2_inverter_controller_single_phase_pll1_math_f1__out = pow(_solarhouse2_inverter_controller_single_phase_pll1_c_function1__vq, _solarhouse2_inverter_controller_single_phase_pll1_constant2__out);  

             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Math_f2
            _solarhouse2_inverter_controller_single_phase_pll1_math_f2__out = pow(_solarhouse2_inverter_controller_single_phase_pll1_c_function1__vd, _solarhouse2_inverter_controller_single_phase_pll1_constant2__out);  

             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Gain5
                                _solarhouse2_inverter_controller_single_phase_pll1_gain5__out = 125.66370614359172 * _solarhouse2_inverter_controller_single_phase_pll1_sum4__out;
        
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Sum12
                                              _solarhouse2_inverter_controller_single_phase_pll1_sum12__out = _solarhouse2_inverter_controller_single_phase_pll1_w_to_f__out-_solarhouse2_inverter_controller_single_phase_pll1_integrator7__out;    
  
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Gain7
                                _solarhouse2_inverter_controller_single_phase_pll1_gain7__out = 628.3185307179587 * _solarhouse2_inverter_controller_single_phase_pll1_sum9__out;
        
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Gain8
                                _solarhouse2_inverter_controller_single_phase_pll1_gain8__out = 62.83185307179586 * _solarhouse2_inverter_controller_single_phase_pll1_sum11__out;
        
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Gain10
                                _solarhouse2_inverter_controller_single_phase_pll1_gain10__out = 62.83185307179586 * _solarhouse2_inverter_controller_single_phase_pll1_sum13__out;
        
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Gain11
                                _solarhouse2_inverter_controller_single_phase_pll1_gain11__out = 62.83185307179586 * _solarhouse2_inverter_controller_single_phase_pll1_sum14__out;
        
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Gain2
                                _solarhouse2_inverter_controller_single_phase_pll1_gain2__out = 0.4 * _solarhouse2_inverter_controller_single_phase_pll1_sum1__out;
        
             // Generated from the component: SolarHouse2.Inverter.S
          HIL_OutAO(0x4051, (float)_solarhouse2_inverter_power_meas_gain6__out);
  
             // Generated from the component: SolarHouse3.Inverter.Controller.Gain22
                                _solarhouse3_inverter_controller_gain22__out = 0.02 * _solarhouse3_inverter_controller_c_function1__out;
        
             // Generated from the component: SolarHouse3.Inverter.Controller.Gain33
                                _solarhouse3_inverter_controller_gain33__out = 1000.0 * _solarhouse3_inverter_controller_c_function1__out;
        
             // Generated from the component: SolarHouse3.Inverter.Controller.C function4
                _solarhouse3_inverter_controller_c_function4__Ts = _solarhouse3_inverter_controller_constant4__out;
                    _solarhouse3_inverter_controller_c_function4__in = _solarhouse3_inverter_controller_gain25__out;
                    _solarhouse3_inverter_controller_c_function4__pi = _solarhouse3_inverter_controller_constant3__out;
        
    _solarhouse3_inverter_controller_c_function4__out=_solarhouse3_inverter_controller_c_function4__out+_solarhouse3_inverter_controller_c_function4__in*_solarhouse3_inverter_controller_c_function4__Ts;if (_solarhouse3_inverter_controller_c_function4__out>=2*_solarhouse3_inverter_controller_c_function4__pi){_solarhouse3_inverter_controller_c_function4__out=_solarhouse3_inverter_controller_c_function4__out-2*_solarhouse3_inverter_controller_c_function4__pi;}

             // Generated from the component: SolarHouse3.Inverter.Controller.w
          HIL_OutAO(0x4068, (float)_solarhouse3_inverter_controller_gain25__out);
  
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Gain3
                                _solarhouse3_inverter_controller_single_phase_pll1_gain3__out = -1.0 * _solarhouse3_inverter_controller_single_phase_pll1_c_function1__vd;
        
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Math_f1
            _solarhouse3_inverter_controller_single_phase_pll1_math_f1__out = pow(_solarhouse3_inverter_controller_single_phase_pll1_c_function1__vq, _solarhouse3_inverter_controller_single_phase_pll1_constant2__out);  

             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Math_f2
            _solarhouse3_inverter_controller_single_phase_pll1_math_f2__out = pow(_solarhouse3_inverter_controller_single_phase_pll1_c_function1__vd, _solarhouse3_inverter_controller_single_phase_pll1_constant2__out);  

             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Gain5
                                _solarhouse3_inverter_controller_single_phase_pll1_gain5__out = 125.66370614359172 * _solarhouse3_inverter_controller_single_phase_pll1_sum4__out;
        
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Sum12
                                              _solarhouse3_inverter_controller_single_phase_pll1_sum12__out = _solarhouse3_inverter_controller_single_phase_pll1_w_to_f__out-_solarhouse3_inverter_controller_single_phase_pll1_integrator7__out;    
  
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Gain7
                                _solarhouse3_inverter_controller_single_phase_pll1_gain7__out = 628.3185307179587 * _solarhouse3_inverter_controller_single_phase_pll1_sum9__out;
        
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Gain8
                                _solarhouse3_inverter_controller_single_phase_pll1_gain8__out = 62.83185307179586 * _solarhouse3_inverter_controller_single_phase_pll1_sum11__out;
        
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Gain10
                                _solarhouse3_inverter_controller_single_phase_pll1_gain10__out = 62.83185307179586 * _solarhouse3_inverter_controller_single_phase_pll1_sum13__out;
        
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Gain11
                                _solarhouse3_inverter_controller_single_phase_pll1_gain11__out = 62.83185307179586 * _solarhouse3_inverter_controller_single_phase_pll1_sum14__out;
        
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Gain2
                                _solarhouse3_inverter_controller_single_phase_pll1_gain2__out = 0.4 * _solarhouse3_inverter_controller_single_phase_pll1_sum1__out;
        
             // Generated from the component: SolarHouse3.Inverter.S
          HIL_OutAO(0x406b, (float)_solarhouse3_inverter_power_meas_gain6__out);
  
             // Generated from the component: SolarHouse4.Inverter.Controller.Gain22
                                _solarhouse4_inverter_controller_gain22__out = 0.02 * _solarhouse4_inverter_controller_c_function1__out;
        
             // Generated from the component: SolarHouse4.Inverter.Controller.Gain33
                                _solarhouse4_inverter_controller_gain33__out = 1000.0 * _solarhouse4_inverter_controller_c_function1__out;
        
             // Generated from the component: SolarHouse4.Inverter.Controller.C function4
                _solarhouse4_inverter_controller_c_function4__Ts = _solarhouse4_inverter_controller_constant4__out;
                    _solarhouse4_inverter_controller_c_function4__in = _solarhouse4_inverter_controller_gain25__out;
                    _solarhouse4_inverter_controller_c_function4__pi = _solarhouse4_inverter_controller_constant3__out;
        
    _solarhouse4_inverter_controller_c_function4__out=_solarhouse4_inverter_controller_c_function4__out+_solarhouse4_inverter_controller_c_function4__in*_solarhouse4_inverter_controller_c_function4__Ts;if (_solarhouse4_inverter_controller_c_function4__out>=2*_solarhouse4_inverter_controller_c_function4__pi){_solarhouse4_inverter_controller_c_function4__out=_solarhouse4_inverter_controller_c_function4__out-2*_solarhouse4_inverter_controller_c_function4__pi;}

             // Generated from the component: SolarHouse4.Inverter.Controller.w
          HIL_OutAO(0x4082, (float)_solarhouse4_inverter_controller_gain25__out);
  
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Gain3
                                _solarhouse4_inverter_controller_single_phase_pll1_gain3__out = -1.0 * _solarhouse4_inverter_controller_single_phase_pll1_c_function1__vd;
        
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Math_f1
            _solarhouse4_inverter_controller_single_phase_pll1_math_f1__out = pow(_solarhouse4_inverter_controller_single_phase_pll1_c_function1__vq, _solarhouse4_inverter_controller_single_phase_pll1_constant2__out);  

             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Math_f2
            _solarhouse4_inverter_controller_single_phase_pll1_math_f2__out = pow(_solarhouse4_inverter_controller_single_phase_pll1_c_function1__vd, _solarhouse4_inverter_controller_single_phase_pll1_constant2__out);  

             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Gain5
                                _solarhouse4_inverter_controller_single_phase_pll1_gain5__out = 125.66370614359172 * _solarhouse4_inverter_controller_single_phase_pll1_sum4__out;
        
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Sum12
                                              _solarhouse4_inverter_controller_single_phase_pll1_sum12__out = _solarhouse4_inverter_controller_single_phase_pll1_w_to_f__out-_solarhouse4_inverter_controller_single_phase_pll1_integrator7__out;    
  
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Gain7
                                _solarhouse4_inverter_controller_single_phase_pll1_gain7__out = 628.3185307179587 * _solarhouse4_inverter_controller_single_phase_pll1_sum9__out;
        
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Gain8
                                _solarhouse4_inverter_controller_single_phase_pll1_gain8__out = 62.83185307179586 * _solarhouse4_inverter_controller_single_phase_pll1_sum11__out;
        
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Gain10
                                _solarhouse4_inverter_controller_single_phase_pll1_gain10__out = 62.83185307179586 * _solarhouse4_inverter_controller_single_phase_pll1_sum13__out;
        
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Gain11
                                _solarhouse4_inverter_controller_single_phase_pll1_gain11__out = 62.83185307179586 * _solarhouse4_inverter_controller_single_phase_pll1_sum14__out;
        
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Gain2
                                _solarhouse4_inverter_controller_single_phase_pll1_gain2__out = 0.4 * _solarhouse4_inverter_controller_single_phase_pll1_sum1__out;
        
             // Generated from the component: SolarHouse4.Inverter.S
          HIL_OutAO(0x4085, (float)_solarhouse4_inverter_power_meas_gain6__out);
  
             // Generated from the component: ESS.Inverter.Controller.alpha beta to dq1
                _ess_inverter_controller_alpha_beta_to_dq1__k1 = cos(_ess_inverter_controller_c_function4__out);
        _ess_inverter_controller_alpha_beta_to_dq1__k2 = sin(_ess_inverter_controller_c_function4__out);
    
	_ess_inverter_controller_alpha_beta_to_dq1__d = _ess_inverter_controller_alpha_beta_to_dq1__k2*_ess_inverter_e_va1__out - _ess_inverter_controller_alpha_beta_to_dq1__k1*_ess_inverter_controller_hilbert_transform__out;
	_ess_inverter_controller_alpha_beta_to_dq1__q = _ess_inverter_controller_alpha_beta_to_dq1__k1*_ess_inverter_e_va1__out + _ess_inverter_controller_alpha_beta_to_dq1__k2*_ess_inverter_controller_hilbert_transform__out;

             // Generated from the component: ESS.Inverter.Controller.alpha beta to dq2
                _ess_inverter_controller_alpha_beta_to_dq2__k1 = cos(_ess_inverter_controller_c_function4__out);
        _ess_inverter_controller_alpha_beta_to_dq2__k2 = sin(_ess_inverter_controller_c_function4__out);
    
	_ess_inverter_controller_alpha_beta_to_dq2__d = _ess_inverter_controller_alpha_beta_to_dq2__k2*_ess_inverter_i_ia1__out - _ess_inverter_controller_alpha_beta_to_dq2__k1*_ess_inverter_controller_hilbert_transform1__out;
	_ess_inverter_controller_alpha_beta_to_dq2__q = _ess_inverter_controller_alpha_beta_to_dq2__k1*_ess_inverter_i_ia1__out + _ess_inverter_controller_alpha_beta_to_dq2__k2*_ess_inverter_controller_hilbert_transform1__out;

             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Sum7
                                              _ess_inverter_controller_single_phase_pll1_sum7__out = _ess_inverter_controller_single_phase_pll1_gain3__out-_ess_inverter_controller_single_phase_pll1_integrator3__out;    
  
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Sum6
                                              _ess_inverter_controller_single_phase_pll1_sum6__out = _ess_inverter_controller_single_phase_pll1_math_f1__out+_ess_inverter_controller_single_phase_pll1_math_f2__out;    
  
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Gain9
                                _ess_inverter_controller_single_phase_pll1_gain9__out = 62.83185307179586 * _ess_inverter_controller_single_phase_pll1_sum12__out;
        
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Sum2
                                              _ess_inverter_controller_single_phase_pll1_sum2__out = _ess_inverter_controller_single_phase_pll1_gain2__out-_ess_inverter_controller_single_phase_pll1_integrator2__out;    
  
             // Generated from the component: SolarHouse1.Inverter.Controller.alpha beta to dq1
                _solarhouse1_inverter_controller_alpha_beta_to_dq1__k1 = cos(_solarhouse1_inverter_controller_c_function4__out);
        _solarhouse1_inverter_controller_alpha_beta_to_dq1__k2 = sin(_solarhouse1_inverter_controller_c_function4__out);
    
	_solarhouse1_inverter_controller_alpha_beta_to_dq1__d = _solarhouse1_inverter_controller_alpha_beta_to_dq1__k2*_solarhouse1_inverter_e_va1__out - _solarhouse1_inverter_controller_alpha_beta_to_dq1__k1*_solarhouse1_inverter_controller_hilbert_transform__out;
	_solarhouse1_inverter_controller_alpha_beta_to_dq1__q = _solarhouse1_inverter_controller_alpha_beta_to_dq1__k1*_solarhouse1_inverter_e_va1__out + _solarhouse1_inverter_controller_alpha_beta_to_dq1__k2*_solarhouse1_inverter_controller_hilbert_transform__out;

             // Generated from the component: SolarHouse1.Inverter.Controller.alpha beta to dq2
                _solarhouse1_inverter_controller_alpha_beta_to_dq2__k1 = cos(_solarhouse1_inverter_controller_c_function4__out);
        _solarhouse1_inverter_controller_alpha_beta_to_dq2__k2 = sin(_solarhouse1_inverter_controller_c_function4__out);
    
	_solarhouse1_inverter_controller_alpha_beta_to_dq2__d = _solarhouse1_inverter_controller_alpha_beta_to_dq2__k2*_solarhouse1_inverter_i_ia1__out - _solarhouse1_inverter_controller_alpha_beta_to_dq2__k1*_solarhouse1_inverter_controller_hilbert_transform1__out;
	_solarhouse1_inverter_controller_alpha_beta_to_dq2__q = _solarhouse1_inverter_controller_alpha_beta_to_dq2__k1*_solarhouse1_inverter_i_ia1__out + _solarhouse1_inverter_controller_alpha_beta_to_dq2__k2*_solarhouse1_inverter_controller_hilbert_transform1__out;

             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Sum7
                                              _solarhouse1_inverter_controller_single_phase_pll1_sum7__out = _solarhouse1_inverter_controller_single_phase_pll1_gain3__out-_solarhouse1_inverter_controller_single_phase_pll1_integrator3__out;    
  
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Sum6
                                              _solarhouse1_inverter_controller_single_phase_pll1_sum6__out = _solarhouse1_inverter_controller_single_phase_pll1_math_f1__out+_solarhouse1_inverter_controller_single_phase_pll1_math_f2__out;    
  
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Gain9
                                _solarhouse1_inverter_controller_single_phase_pll1_gain9__out = 62.83185307179586 * _solarhouse1_inverter_controller_single_phase_pll1_sum12__out;
        
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Sum2
                                              _solarhouse1_inverter_controller_single_phase_pll1_sum2__out = _solarhouse1_inverter_controller_single_phase_pll1_gain2__out-_solarhouse1_inverter_controller_single_phase_pll1_integrator2__out;    
  
             // Generated from the component: SolarHouse2.Inverter.Controller.alpha beta to dq1
                _solarhouse2_inverter_controller_alpha_beta_to_dq1__k1 = cos(_solarhouse2_inverter_controller_c_function4__out);
        _solarhouse2_inverter_controller_alpha_beta_to_dq1__k2 = sin(_solarhouse2_inverter_controller_c_function4__out);
    
	_solarhouse2_inverter_controller_alpha_beta_to_dq1__d = _solarhouse2_inverter_controller_alpha_beta_to_dq1__k2*_solarhouse2_inverter_e_va1__out - _solarhouse2_inverter_controller_alpha_beta_to_dq1__k1*_solarhouse2_inverter_controller_hilbert_transform__out;
	_solarhouse2_inverter_controller_alpha_beta_to_dq1__q = _solarhouse2_inverter_controller_alpha_beta_to_dq1__k1*_solarhouse2_inverter_e_va1__out + _solarhouse2_inverter_controller_alpha_beta_to_dq1__k2*_solarhouse2_inverter_controller_hilbert_transform__out;

             // Generated from the component: SolarHouse2.Inverter.Controller.alpha beta to dq2
                _solarhouse2_inverter_controller_alpha_beta_to_dq2__k1 = cos(_solarhouse2_inverter_controller_c_function4__out);
        _solarhouse2_inverter_controller_alpha_beta_to_dq2__k2 = sin(_solarhouse2_inverter_controller_c_function4__out);
    
	_solarhouse2_inverter_controller_alpha_beta_to_dq2__d = _solarhouse2_inverter_controller_alpha_beta_to_dq2__k2*_solarhouse2_inverter_i_ia1__out - _solarhouse2_inverter_controller_alpha_beta_to_dq2__k1*_solarhouse2_inverter_controller_hilbert_transform1__out;
	_solarhouse2_inverter_controller_alpha_beta_to_dq2__q = _solarhouse2_inverter_controller_alpha_beta_to_dq2__k1*_solarhouse2_inverter_i_ia1__out + _solarhouse2_inverter_controller_alpha_beta_to_dq2__k2*_solarhouse2_inverter_controller_hilbert_transform1__out;

             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Sum7
                                              _solarhouse2_inverter_controller_single_phase_pll1_sum7__out = _solarhouse2_inverter_controller_single_phase_pll1_gain3__out-_solarhouse2_inverter_controller_single_phase_pll1_integrator3__out;    
  
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Sum6
                                              _solarhouse2_inverter_controller_single_phase_pll1_sum6__out = _solarhouse2_inverter_controller_single_phase_pll1_math_f1__out+_solarhouse2_inverter_controller_single_phase_pll1_math_f2__out;    
  
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Gain9
                                _solarhouse2_inverter_controller_single_phase_pll1_gain9__out = 62.83185307179586 * _solarhouse2_inverter_controller_single_phase_pll1_sum12__out;
        
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Sum2
                                              _solarhouse2_inverter_controller_single_phase_pll1_sum2__out = _solarhouse2_inverter_controller_single_phase_pll1_gain2__out-_solarhouse2_inverter_controller_single_phase_pll1_integrator2__out;    
  
             // Generated from the component: SolarHouse3.Inverter.Controller.alpha beta to dq1
                _solarhouse3_inverter_controller_alpha_beta_to_dq1__k1 = cos(_solarhouse3_inverter_controller_c_function4__out);
        _solarhouse3_inverter_controller_alpha_beta_to_dq1__k2 = sin(_solarhouse3_inverter_controller_c_function4__out);
    
	_solarhouse3_inverter_controller_alpha_beta_to_dq1__d = _solarhouse3_inverter_controller_alpha_beta_to_dq1__k2*_solarhouse3_inverter_e_va1__out - _solarhouse3_inverter_controller_alpha_beta_to_dq1__k1*_solarhouse3_inverter_controller_hilbert_transform__out;
	_solarhouse3_inverter_controller_alpha_beta_to_dq1__q = _solarhouse3_inverter_controller_alpha_beta_to_dq1__k1*_solarhouse3_inverter_e_va1__out + _solarhouse3_inverter_controller_alpha_beta_to_dq1__k2*_solarhouse3_inverter_controller_hilbert_transform__out;

             // Generated from the component: SolarHouse3.Inverter.Controller.alpha beta to dq2
                _solarhouse3_inverter_controller_alpha_beta_to_dq2__k1 = cos(_solarhouse3_inverter_controller_c_function4__out);
        _solarhouse3_inverter_controller_alpha_beta_to_dq2__k2 = sin(_solarhouse3_inverter_controller_c_function4__out);
    
	_solarhouse3_inverter_controller_alpha_beta_to_dq2__d = _solarhouse3_inverter_controller_alpha_beta_to_dq2__k2*_solarhouse3_inverter_i_ia1__out - _solarhouse3_inverter_controller_alpha_beta_to_dq2__k1*_solarhouse3_inverter_controller_hilbert_transform1__out;
	_solarhouse3_inverter_controller_alpha_beta_to_dq2__q = _solarhouse3_inverter_controller_alpha_beta_to_dq2__k1*_solarhouse3_inverter_i_ia1__out + _solarhouse3_inverter_controller_alpha_beta_to_dq2__k2*_solarhouse3_inverter_controller_hilbert_transform1__out;

             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Sum7
                                              _solarhouse3_inverter_controller_single_phase_pll1_sum7__out = _solarhouse3_inverter_controller_single_phase_pll1_gain3__out-_solarhouse3_inverter_controller_single_phase_pll1_integrator3__out;    
  
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Sum6
                                              _solarhouse3_inverter_controller_single_phase_pll1_sum6__out = _solarhouse3_inverter_controller_single_phase_pll1_math_f1__out+_solarhouse3_inverter_controller_single_phase_pll1_math_f2__out;    
  
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Gain9
                                _solarhouse3_inverter_controller_single_phase_pll1_gain9__out = 62.83185307179586 * _solarhouse3_inverter_controller_single_phase_pll1_sum12__out;
        
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Sum2
                                              _solarhouse3_inverter_controller_single_phase_pll1_sum2__out = _solarhouse3_inverter_controller_single_phase_pll1_gain2__out-_solarhouse3_inverter_controller_single_phase_pll1_integrator2__out;    
  
             // Generated from the component: SolarHouse4.Inverter.Controller.alpha beta to dq1
                _solarhouse4_inverter_controller_alpha_beta_to_dq1__k1 = cos(_solarhouse4_inverter_controller_c_function4__out);
        _solarhouse4_inverter_controller_alpha_beta_to_dq1__k2 = sin(_solarhouse4_inverter_controller_c_function4__out);
    
	_solarhouse4_inverter_controller_alpha_beta_to_dq1__d = _solarhouse4_inverter_controller_alpha_beta_to_dq1__k2*_solarhouse4_inverter_e_va1__out - _solarhouse4_inverter_controller_alpha_beta_to_dq1__k1*_solarhouse4_inverter_controller_hilbert_transform__out;
	_solarhouse4_inverter_controller_alpha_beta_to_dq1__q = _solarhouse4_inverter_controller_alpha_beta_to_dq1__k1*_solarhouse4_inverter_e_va1__out + _solarhouse4_inverter_controller_alpha_beta_to_dq1__k2*_solarhouse4_inverter_controller_hilbert_transform__out;

             // Generated from the component: SolarHouse4.Inverter.Controller.alpha beta to dq2
                _solarhouse4_inverter_controller_alpha_beta_to_dq2__k1 = cos(_solarhouse4_inverter_controller_c_function4__out);
        _solarhouse4_inverter_controller_alpha_beta_to_dq2__k2 = sin(_solarhouse4_inverter_controller_c_function4__out);
    
	_solarhouse4_inverter_controller_alpha_beta_to_dq2__d = _solarhouse4_inverter_controller_alpha_beta_to_dq2__k2*_solarhouse4_inverter_i_ia1__out - _solarhouse4_inverter_controller_alpha_beta_to_dq2__k1*_solarhouse4_inverter_controller_hilbert_transform1__out;
	_solarhouse4_inverter_controller_alpha_beta_to_dq2__q = _solarhouse4_inverter_controller_alpha_beta_to_dq2__k1*_solarhouse4_inverter_i_ia1__out + _solarhouse4_inverter_controller_alpha_beta_to_dq2__k2*_solarhouse4_inverter_controller_hilbert_transform1__out;

             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Sum7
                                              _solarhouse4_inverter_controller_single_phase_pll1_sum7__out = _solarhouse4_inverter_controller_single_phase_pll1_gain3__out-_solarhouse4_inverter_controller_single_phase_pll1_integrator3__out;    
  
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Sum6
                                              _solarhouse4_inverter_controller_single_phase_pll1_sum6__out = _solarhouse4_inverter_controller_single_phase_pll1_math_f1__out+_solarhouse4_inverter_controller_single_phase_pll1_math_f2__out;    
  
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Gain9
                                _solarhouse4_inverter_controller_single_phase_pll1_gain9__out = 62.83185307179586 * _solarhouse4_inverter_controller_single_phase_pll1_sum12__out;
        
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Sum2
                                              _solarhouse4_inverter_controller_single_phase_pll1_sum2__out = _solarhouse4_inverter_controller_single_phase_pll1_gain2__out-_solarhouse4_inverter_controller_single_phase_pll1_integrator2__out;    
  
             // Generated from the component: ESS.Inverter.Controller.Gain28
                                _ess_inverter_controller_gain28__out = 0.002946278254943948 * _ess_inverter_controller_alpha_beta_to_dq1__d;
        
             // Generated from the component: ESS.Inverter.Controller.Gain29
                                _ess_inverter_controller_gain29__out = 0.002946278254943948 * _ess_inverter_controller_alpha_beta_to_dq1__q;
        
             // Generated from the component: ESS.Inverter.Controller.Gain30
                                _ess_inverter_controller_gain30__out = 0.003394112549695428 * _ess_inverter_controller_alpha_beta_to_dq2__d;
        
             // Generated from the component: ESS.Inverter.Controller.Gain31
                                _ess_inverter_controller_gain31__out = 0.003394112549695428 * _ess_inverter_controller_alpha_beta_to_dq2__q;
        
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Gain4
                                _ess_inverter_controller_single_phase_pll1_gain4__out = 125.66370614359172 * _ess_inverter_controller_single_phase_pll1_sum7__out;
        
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Math1
            _ess_inverter_controller_single_phase_pll1_math1__out = sqrt(_ess_inverter_controller_single_phase_pll1_sum6__out);  

             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Product1
    _ess_inverter_controller_single_phase_pll1_product1__out = (_ess_inverter_controller_single_phase_pll1_sum2__out * _ess_inverter_controller_single_phase_pll1_integrator5__out);

             // Generated from the component: SolarHouse1.Inverter.Controller.Gain28
                                _solarhouse1_inverter_controller_gain28__out = 0.002946278254943948 * _solarhouse1_inverter_controller_alpha_beta_to_dq1__d;
        
             // Generated from the component: SolarHouse1.Inverter.Controller.Gain29
                                _solarhouse1_inverter_controller_gain29__out = 0.002946278254943948 * _solarhouse1_inverter_controller_alpha_beta_to_dq1__q;
        
             // Generated from the component: SolarHouse1.Inverter.Controller.Gain30
                                _solarhouse1_inverter_controller_gain30__out = 0.003394112549695428 * _solarhouse1_inverter_controller_alpha_beta_to_dq2__d;
        
             // Generated from the component: SolarHouse1.Inverter.Controller.Gain31
                                _solarhouse1_inverter_controller_gain31__out = 0.003394112549695428 * _solarhouse1_inverter_controller_alpha_beta_to_dq2__q;
        
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Gain4
                                _solarhouse1_inverter_controller_single_phase_pll1_gain4__out = 125.66370614359172 * _solarhouse1_inverter_controller_single_phase_pll1_sum7__out;
        
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Math1
            _solarhouse1_inverter_controller_single_phase_pll1_math1__out = sqrt(_solarhouse1_inverter_controller_single_phase_pll1_sum6__out);  

             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Product1
    _solarhouse1_inverter_controller_single_phase_pll1_product1__out = (_solarhouse1_inverter_controller_single_phase_pll1_sum2__out * _solarhouse1_inverter_controller_single_phase_pll1_integrator5__out);

             // Generated from the component: SolarHouse2.Inverter.Controller.Gain28
                                _solarhouse2_inverter_controller_gain28__out = 0.002946278254943948 * _solarhouse2_inverter_controller_alpha_beta_to_dq1__d;
        
             // Generated from the component: SolarHouse2.Inverter.Controller.Gain29
                                _solarhouse2_inverter_controller_gain29__out = 0.002946278254943948 * _solarhouse2_inverter_controller_alpha_beta_to_dq1__q;
        
             // Generated from the component: SolarHouse2.Inverter.Controller.Gain30
                                _solarhouse2_inverter_controller_gain30__out = 0.003394112549695428 * _solarhouse2_inverter_controller_alpha_beta_to_dq2__d;
        
             // Generated from the component: SolarHouse2.Inverter.Controller.Gain31
                                _solarhouse2_inverter_controller_gain31__out = 0.003394112549695428 * _solarhouse2_inverter_controller_alpha_beta_to_dq2__q;
        
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Gain4
                                _solarhouse2_inverter_controller_single_phase_pll1_gain4__out = 125.66370614359172 * _solarhouse2_inverter_controller_single_phase_pll1_sum7__out;
        
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Math1
            _solarhouse2_inverter_controller_single_phase_pll1_math1__out = sqrt(_solarhouse2_inverter_controller_single_phase_pll1_sum6__out);  

             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Product1
    _solarhouse2_inverter_controller_single_phase_pll1_product1__out = (_solarhouse2_inverter_controller_single_phase_pll1_sum2__out * _solarhouse2_inverter_controller_single_phase_pll1_integrator5__out);

             // Generated from the component: SolarHouse3.Inverter.Controller.Gain28
                                _solarhouse3_inverter_controller_gain28__out = 0.002946278254943948 * _solarhouse3_inverter_controller_alpha_beta_to_dq1__d;
        
             // Generated from the component: SolarHouse3.Inverter.Controller.Gain29
                                _solarhouse3_inverter_controller_gain29__out = 0.002946278254943948 * _solarhouse3_inverter_controller_alpha_beta_to_dq1__q;
        
             // Generated from the component: SolarHouse3.Inverter.Controller.Gain30
                                _solarhouse3_inverter_controller_gain30__out = 0.003394112549695428 * _solarhouse3_inverter_controller_alpha_beta_to_dq2__d;
        
             // Generated from the component: SolarHouse3.Inverter.Controller.Gain31
                                _solarhouse3_inverter_controller_gain31__out = 0.003394112549695428 * _solarhouse3_inverter_controller_alpha_beta_to_dq2__q;
        
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Gain4
                                _solarhouse3_inverter_controller_single_phase_pll1_gain4__out = 125.66370614359172 * _solarhouse3_inverter_controller_single_phase_pll1_sum7__out;
        
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Math1
            _solarhouse3_inverter_controller_single_phase_pll1_math1__out = sqrt(_solarhouse3_inverter_controller_single_phase_pll1_sum6__out);  

             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Product1
    _solarhouse3_inverter_controller_single_phase_pll1_product1__out = (_solarhouse3_inverter_controller_single_phase_pll1_sum2__out * _solarhouse3_inverter_controller_single_phase_pll1_integrator5__out);

             // Generated from the component: SolarHouse4.Inverter.Controller.Gain28
                                _solarhouse4_inverter_controller_gain28__out = 0.002946278254943948 * _solarhouse4_inverter_controller_alpha_beta_to_dq1__d;
        
             // Generated from the component: SolarHouse4.Inverter.Controller.Gain29
                                _solarhouse4_inverter_controller_gain29__out = 0.002946278254943948 * _solarhouse4_inverter_controller_alpha_beta_to_dq1__q;
        
             // Generated from the component: SolarHouse4.Inverter.Controller.Gain30
                                _solarhouse4_inverter_controller_gain30__out = 0.003394112549695428 * _solarhouse4_inverter_controller_alpha_beta_to_dq2__d;
        
             // Generated from the component: SolarHouse4.Inverter.Controller.Gain31
                                _solarhouse4_inverter_controller_gain31__out = 0.003394112549695428 * _solarhouse4_inverter_controller_alpha_beta_to_dq2__q;
        
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Gain4
                                _solarhouse4_inverter_controller_single_phase_pll1_gain4__out = 125.66370614359172 * _solarhouse4_inverter_controller_single_phase_pll1_sum7__out;
        
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Math1
            _solarhouse4_inverter_controller_single_phase_pll1_math1__out = sqrt(_solarhouse4_inverter_controller_single_phase_pll1_sum6__out);  

             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Product1
    _solarhouse4_inverter_controller_single_phase_pll1_product1__out = (_solarhouse4_inverter_controller_single_phase_pll1_sum2__out * _solarhouse4_inverter_controller_single_phase_pll1_integrator5__out);

             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.LPF_dc2
                            X_UnInt32 _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i;    
                                                                                          

                _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__a_sum = 0.0f;
        _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__b_sum = 0.0f;
        _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__delay_line_in = 0.0f;
                    for (_ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i = 0; _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i < 1; _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i++){
                                     _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__b_sum += _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__b_coeff[_ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i+1] * _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__states[_ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i];
                            }
                                    _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__a_sum += _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__states[0] * _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__a_coeff[1];
                            _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__delay_line_in = _ess_inverter_controller_gain28__out - _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__a_sum;
                            _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__b_sum += _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__b_coeff[0] * _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__delay_line_in;
                _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__out = _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__b_sum;

    
             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Product4
    _ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product4__out = (_ess_inverter_controller_gain28__out * _ess_inverter_controller_constant5__out);

             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Product5
    _ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product5__out = (_ess_inverter_controller_gain22__out * _ess_inverter_controller_gain28__out);

             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.squared_Vt2.Product1
    _ess_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_product1__out = (_ess_inverter_controller_gain28__out * _ess_inverter_controller_gain28__out);

             // Generated from the component: ESS.Inverter.Controller.Vd
          HIL_OutAO(0x4017, (float)_ess_inverter_controller_gain28__out);
  
             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.LPF_dc1
                            X_UnInt32 _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i;    
                                                                                          

                _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__a_sum = 0.0f;
        _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__b_sum = 0.0f;
        _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__delay_line_in = 0.0f;
                    for (_ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i = 0; _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i < 1; _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i++){
                                     _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__b_sum += _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__b_coeff[_ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i+1] * _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__states[_ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i];
                            }
                                    _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__a_sum += _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__states[0] * _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__a_coeff[1];
                            _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__delay_line_in = _ess_inverter_controller_gain29__out - _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__a_sum;
                            _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__b_sum += _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__b_coeff[0] * _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__delay_line_in;
                _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__out = _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__b_sum;

    
             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Product3
    _ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product3__out = (_ess_inverter_controller_gain29__out * _ess_inverter_controller_gain22__out);

             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Product6
    _ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product6__out = (_ess_inverter_controller_constant5__out * _ess_inverter_controller_gain29__out);

             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.squared_Vt2.Product2
    _ess_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_product2__out = (_ess_inverter_controller_gain29__out * _ess_inverter_controller_gain29__out);

             // Generated from the component: ESS.Inverter.Controller.Vq
          HIL_OutAO(0x4018, (float)_ess_inverter_controller_gain29__out);
  
             // Generated from the component: ESS.Inverter.Controller.Id
          HIL_OutAO(0x400a, (float)_ess_inverter_controller_gain30__out);
  
             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Gain7
                                _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain7__out = 0.005772569444444445 * _ess_inverter_controller_gain30__out;
        
             // Generated from the component: ESS.Inverter.Power_Meas.Power_Meas_DQpu.Product1
    _ess_inverter_power_meas_power_meas_dqpu_product1__out = (_ess_inverter_controller_gain28__out * _ess_inverter_controller_gain30__out);

             // Generated from the component: ESS.Inverter.Power_Meas.Power_Meas_DQpu.Product4
    _ess_inverter_power_meas_power_meas_dqpu_product4__out = (_ess_inverter_controller_gain29__out * _ess_inverter_controller_gain30__out);

             // Generated from the component: ESS.Inverter.Controller.Iq
          HIL_OutAO(0x400b, (float)_ess_inverter_controller_gain31__out);
  
             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Gain6
                                _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain6__out = 0.005772569444444445 * _ess_inverter_controller_gain31__out;
        
             // Generated from the component: ESS.Inverter.Power_Meas.Power_Meas_DQpu.Product2
    _ess_inverter_power_meas_power_meas_dqpu_product2__out = (_ess_inverter_controller_gain29__out * _ess_inverter_controller_gain31__out);

             // Generated from the component: ESS.Inverter.Power_Meas.Power_Meas_DQpu.Product3
    _ess_inverter_power_meas_power_meas_dqpu_product3__out = (_ess_inverter_controller_gain28__out * _ess_inverter_controller_gain31__out);

             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Limit1
      _ess_inverter_controller_single_phase_pll1_limit1__out = MAX(_ess_inverter_controller_single_phase_pll1_math1__out, 1e-05);  
             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.LPF_dc2
                            X_UnInt32 _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i;    
                                                                                          

                _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__a_sum = 0.0f;
        _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__b_sum = 0.0f;
        _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__delay_line_in = 0.0f;
                    for (_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i = 0; _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i < 1; _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i++){
                                     _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__b_sum += _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__b_coeff[_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i+1] * _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__states[_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i];
                            }
                                    _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__a_sum += _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__states[0] * _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__a_coeff[1];
                            _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__delay_line_in = _solarhouse1_inverter_controller_gain28__out - _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__a_sum;
                            _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__b_sum += _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__b_coeff[0] * _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__delay_line_in;
                _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__out = _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__b_sum;

    
             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Product4
    _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product4__out = (_solarhouse1_inverter_controller_gain28__out * _solarhouse1_inverter_controller_constant5__out);

             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Product5
    _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product5__out = (_solarhouse1_inverter_controller_gain22__out * _solarhouse1_inverter_controller_gain28__out);

             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.squared_Vt2.Product1
    _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_product1__out = (_solarhouse1_inverter_controller_gain28__out * _solarhouse1_inverter_controller_gain28__out);

             // Generated from the component: SolarHouse1.Inverter.Controller.Vd
          HIL_OutAO(0x4032, (float)_solarhouse1_inverter_controller_gain28__out);
  
             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.LPF_dc1
                            X_UnInt32 _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i;    
                                                                                          

                _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__a_sum = 0.0f;
        _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__b_sum = 0.0f;
        _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__delay_line_in = 0.0f;
                    for (_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i = 0; _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i < 1; _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i++){
                                     _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__b_sum += _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__b_coeff[_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i+1] * _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__states[_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i];
                            }
                                    _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__a_sum += _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__states[0] * _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__a_coeff[1];
                            _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__delay_line_in = _solarhouse1_inverter_controller_gain29__out - _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__a_sum;
                            _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__b_sum += _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__b_coeff[0] * _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__delay_line_in;
                _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__out = _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__b_sum;

    
             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Product3
    _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product3__out = (_solarhouse1_inverter_controller_gain29__out * _solarhouse1_inverter_controller_gain22__out);

             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Product6
    _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product6__out = (_solarhouse1_inverter_controller_constant5__out * _solarhouse1_inverter_controller_gain29__out);

             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.squared_Vt2.Product2
    _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_product2__out = (_solarhouse1_inverter_controller_gain29__out * _solarhouse1_inverter_controller_gain29__out);

             // Generated from the component: SolarHouse1.Inverter.Controller.Vq
          HIL_OutAO(0x4033, (float)_solarhouse1_inverter_controller_gain29__out);
  
             // Generated from the component: SolarHouse1.Inverter.Controller.Id
          HIL_OutAO(0x4025, (float)_solarhouse1_inverter_controller_gain30__out);
  
             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Gain7
                                _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain7__out = 0.005772569444444445 * _solarhouse1_inverter_controller_gain30__out;
        
             // Generated from the component: SolarHouse1.Inverter.Power_Meas.Power_Meas_DQpu.Product1
    _solarhouse1_inverter_power_meas_power_meas_dqpu_product1__out = (_solarhouse1_inverter_controller_gain28__out * _solarhouse1_inverter_controller_gain30__out);

             // Generated from the component: SolarHouse1.Inverter.Power_Meas.Power_Meas_DQpu.Product4
    _solarhouse1_inverter_power_meas_power_meas_dqpu_product4__out = (_solarhouse1_inverter_controller_gain29__out * _solarhouse1_inverter_controller_gain30__out);

             // Generated from the component: SolarHouse1.Inverter.Controller.Iq
          HIL_OutAO(0x4026, (float)_solarhouse1_inverter_controller_gain31__out);
  
             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Gain6
                                _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain6__out = 0.005772569444444445 * _solarhouse1_inverter_controller_gain31__out;
        
             // Generated from the component: SolarHouse1.Inverter.Power_Meas.Power_Meas_DQpu.Product2
    _solarhouse1_inverter_power_meas_power_meas_dqpu_product2__out = (_solarhouse1_inverter_controller_gain29__out * _solarhouse1_inverter_controller_gain31__out);

             // Generated from the component: SolarHouse1.Inverter.Power_Meas.Power_Meas_DQpu.Product3
    _solarhouse1_inverter_power_meas_power_meas_dqpu_product3__out = (_solarhouse1_inverter_controller_gain28__out * _solarhouse1_inverter_controller_gain31__out);

             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Limit1
      _solarhouse1_inverter_controller_single_phase_pll1_limit1__out = MAX(_solarhouse1_inverter_controller_single_phase_pll1_math1__out, 1e-05);  
             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.LPF_dc2
                            X_UnInt32 _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i;    
                                                                                          

                _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__a_sum = 0.0f;
        _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__b_sum = 0.0f;
        _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__delay_line_in = 0.0f;
                    for (_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i = 0; _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i < 1; _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i++){
                                     _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__b_sum += _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__b_coeff[_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i+1] * _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__states[_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i];
                            }
                                    _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__a_sum += _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__states[0] * _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__a_coeff[1];
                            _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__delay_line_in = _solarhouse2_inverter_controller_gain28__out - _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__a_sum;
                            _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__b_sum += _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__b_coeff[0] * _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__delay_line_in;
                _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__out = _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__b_sum;

    
             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Product4
    _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product4__out = (_solarhouse2_inverter_controller_gain28__out * _solarhouse2_inverter_controller_constant5__out);

             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Product5
    _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product5__out = (_solarhouse2_inverter_controller_gain22__out * _solarhouse2_inverter_controller_gain28__out);

             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.squared_Vt2.Product1
    _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_product1__out = (_solarhouse2_inverter_controller_gain28__out * _solarhouse2_inverter_controller_gain28__out);

             // Generated from the component: SolarHouse2.Inverter.Controller.Vd
          HIL_OutAO(0x404c, (float)_solarhouse2_inverter_controller_gain28__out);
  
             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.LPF_dc1
                            X_UnInt32 _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i;    
                                                                                          

                _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__a_sum = 0.0f;
        _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__b_sum = 0.0f;
        _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__delay_line_in = 0.0f;
                    for (_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i = 0; _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i < 1; _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i++){
                                     _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__b_sum += _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__b_coeff[_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i+1] * _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__states[_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i];
                            }
                                    _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__a_sum += _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__states[0] * _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__a_coeff[1];
                            _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__delay_line_in = _solarhouse2_inverter_controller_gain29__out - _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__a_sum;
                            _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__b_sum += _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__b_coeff[0] * _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__delay_line_in;
                _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__out = _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__b_sum;

    
             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Product3
    _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product3__out = (_solarhouse2_inverter_controller_gain29__out * _solarhouse2_inverter_controller_gain22__out);

             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Product6
    _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product6__out = (_solarhouse2_inverter_controller_constant5__out * _solarhouse2_inverter_controller_gain29__out);

             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.squared_Vt2.Product2
    _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_product2__out = (_solarhouse2_inverter_controller_gain29__out * _solarhouse2_inverter_controller_gain29__out);

             // Generated from the component: SolarHouse2.Inverter.Controller.Vq
          HIL_OutAO(0x404d, (float)_solarhouse2_inverter_controller_gain29__out);
  
             // Generated from the component: SolarHouse2.Inverter.Controller.Id
          HIL_OutAO(0x403f, (float)_solarhouse2_inverter_controller_gain30__out);
  
             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Gain7
                                _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain7__out = 0.005772569444444445 * _solarhouse2_inverter_controller_gain30__out;
        
             // Generated from the component: SolarHouse2.Inverter.Power_Meas.Power_Meas_DQpu.Product1
    _solarhouse2_inverter_power_meas_power_meas_dqpu_product1__out = (_solarhouse2_inverter_controller_gain28__out * _solarhouse2_inverter_controller_gain30__out);

             // Generated from the component: SolarHouse2.Inverter.Power_Meas.Power_Meas_DQpu.Product4
    _solarhouse2_inverter_power_meas_power_meas_dqpu_product4__out = (_solarhouse2_inverter_controller_gain29__out * _solarhouse2_inverter_controller_gain30__out);

             // Generated from the component: SolarHouse2.Inverter.Controller.Iq
          HIL_OutAO(0x4040, (float)_solarhouse2_inverter_controller_gain31__out);
  
             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Gain6
                                _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain6__out = 0.005772569444444445 * _solarhouse2_inverter_controller_gain31__out;
        
             // Generated from the component: SolarHouse2.Inverter.Power_Meas.Power_Meas_DQpu.Product2
    _solarhouse2_inverter_power_meas_power_meas_dqpu_product2__out = (_solarhouse2_inverter_controller_gain29__out * _solarhouse2_inverter_controller_gain31__out);

             // Generated from the component: SolarHouse2.Inverter.Power_Meas.Power_Meas_DQpu.Product3
    _solarhouse2_inverter_power_meas_power_meas_dqpu_product3__out = (_solarhouse2_inverter_controller_gain28__out * _solarhouse2_inverter_controller_gain31__out);

             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Limit1
      _solarhouse2_inverter_controller_single_phase_pll1_limit1__out = MAX(_solarhouse2_inverter_controller_single_phase_pll1_math1__out, 1e-05);  
             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.LPF_dc2
                            X_UnInt32 _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i;    
                                                                                          

                _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__a_sum = 0.0f;
        _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__b_sum = 0.0f;
        _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__delay_line_in = 0.0f;
                    for (_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i = 0; _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i < 1; _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i++){
                                     _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__b_sum += _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__b_coeff[_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i+1] * _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__states[_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i];
                            }
                                    _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__a_sum += _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__states[0] * _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__a_coeff[1];
                            _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__delay_line_in = _solarhouse3_inverter_controller_gain28__out - _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__a_sum;
                            _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__b_sum += _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__b_coeff[0] * _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__delay_line_in;
                _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__out = _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__b_sum;

    
             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Product4
    _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product4__out = (_solarhouse3_inverter_controller_gain28__out * _solarhouse3_inverter_controller_constant5__out);

             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Product5
    _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product5__out = (_solarhouse3_inverter_controller_gain22__out * _solarhouse3_inverter_controller_gain28__out);

             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.squared_Vt2.Product1
    _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_product1__out = (_solarhouse3_inverter_controller_gain28__out * _solarhouse3_inverter_controller_gain28__out);

             // Generated from the component: SolarHouse3.Inverter.Controller.Vd
          HIL_OutAO(0x4066, (float)_solarhouse3_inverter_controller_gain28__out);
  
             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.LPF_dc1
                            X_UnInt32 _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i;    
                                                                                          

                _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__a_sum = 0.0f;
        _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__b_sum = 0.0f;
        _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__delay_line_in = 0.0f;
                    for (_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i = 0; _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i < 1; _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i++){
                                     _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__b_sum += _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__b_coeff[_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i+1] * _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__states[_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i];
                            }
                                    _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__a_sum += _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__states[0] * _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__a_coeff[1];
                            _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__delay_line_in = _solarhouse3_inverter_controller_gain29__out - _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__a_sum;
                            _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__b_sum += _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__b_coeff[0] * _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__delay_line_in;
                _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__out = _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__b_sum;

    
             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Product3
    _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product3__out = (_solarhouse3_inverter_controller_gain29__out * _solarhouse3_inverter_controller_gain22__out);

             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Product6
    _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product6__out = (_solarhouse3_inverter_controller_constant5__out * _solarhouse3_inverter_controller_gain29__out);

             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.squared_Vt2.Product2
    _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_product2__out = (_solarhouse3_inverter_controller_gain29__out * _solarhouse3_inverter_controller_gain29__out);

             // Generated from the component: SolarHouse3.Inverter.Controller.Vq
          HIL_OutAO(0x4067, (float)_solarhouse3_inverter_controller_gain29__out);
  
             // Generated from the component: SolarHouse3.Inverter.Controller.Id
          HIL_OutAO(0x4059, (float)_solarhouse3_inverter_controller_gain30__out);
  
             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Gain7
                                _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain7__out = 0.005772569444444445 * _solarhouse3_inverter_controller_gain30__out;
        
             // Generated from the component: SolarHouse3.Inverter.Power_Meas.Power_Meas_DQpu.Product1
    _solarhouse3_inverter_power_meas_power_meas_dqpu_product1__out = (_solarhouse3_inverter_controller_gain28__out * _solarhouse3_inverter_controller_gain30__out);

             // Generated from the component: SolarHouse3.Inverter.Power_Meas.Power_Meas_DQpu.Product4
    _solarhouse3_inverter_power_meas_power_meas_dqpu_product4__out = (_solarhouse3_inverter_controller_gain29__out * _solarhouse3_inverter_controller_gain30__out);

             // Generated from the component: SolarHouse3.Inverter.Controller.Iq
          HIL_OutAO(0x405a, (float)_solarhouse3_inverter_controller_gain31__out);
  
             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Gain6
                                _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain6__out = 0.005772569444444445 * _solarhouse3_inverter_controller_gain31__out;
        
             // Generated from the component: SolarHouse3.Inverter.Power_Meas.Power_Meas_DQpu.Product2
    _solarhouse3_inverter_power_meas_power_meas_dqpu_product2__out = (_solarhouse3_inverter_controller_gain29__out * _solarhouse3_inverter_controller_gain31__out);

             // Generated from the component: SolarHouse3.Inverter.Power_Meas.Power_Meas_DQpu.Product3
    _solarhouse3_inverter_power_meas_power_meas_dqpu_product3__out = (_solarhouse3_inverter_controller_gain28__out * _solarhouse3_inverter_controller_gain31__out);

             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Limit1
      _solarhouse3_inverter_controller_single_phase_pll1_limit1__out = MAX(_solarhouse3_inverter_controller_single_phase_pll1_math1__out, 1e-05);  
             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.LPF_dc2
                            X_UnInt32 _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i;    
                                                                                          

                _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__a_sum = 0.0f;
        _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__b_sum = 0.0f;
        _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__delay_line_in = 0.0f;
                    for (_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i = 0; _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i < 1; _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i++){
                                     _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__b_sum += _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__b_coeff[_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i+1] * _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__states[_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__i];
                            }
                                    _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__a_sum += _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__states[0] * _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__a_coeff[1];
                            _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__delay_line_in = _solarhouse4_inverter_controller_gain28__out - _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__a_sum;
                            _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__b_sum += _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__b_coeff[0] * _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__delay_line_in;
                _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__out = _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__b_sum;

    
             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Product4
    _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product4__out = (_solarhouse4_inverter_controller_gain28__out * _solarhouse4_inverter_controller_constant5__out);

             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Product5
    _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product5__out = (_solarhouse4_inverter_controller_gain22__out * _solarhouse4_inverter_controller_gain28__out);

             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.squared_Vt2.Product1
    _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_product1__out = (_solarhouse4_inverter_controller_gain28__out * _solarhouse4_inverter_controller_gain28__out);

             // Generated from the component: SolarHouse4.Inverter.Controller.Vd
          HIL_OutAO(0x4080, (float)_solarhouse4_inverter_controller_gain28__out);
  
             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.LPF_dc1
                            X_UnInt32 _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i;    
                                                                                          

                _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__a_sum = 0.0f;
        _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__b_sum = 0.0f;
        _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__delay_line_in = 0.0f;
                    for (_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i = 0; _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i < 1; _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i++){
                                     _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__b_sum += _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__b_coeff[_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i+1] * _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__states[_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__i];
                            }
                                    _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__a_sum += _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__states[0] * _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__a_coeff[1];
                            _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__delay_line_in = _solarhouse4_inverter_controller_gain29__out - _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__a_sum;
                            _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__b_sum += _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__b_coeff[0] * _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__delay_line_in;
                _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__out = _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__b_sum;

    
             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Product3
    _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product3__out = (_solarhouse4_inverter_controller_gain29__out * _solarhouse4_inverter_controller_gain22__out);

             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Product6
    _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product6__out = (_solarhouse4_inverter_controller_constant5__out * _solarhouse4_inverter_controller_gain29__out);

             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.squared_Vt2.Product2
    _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_product2__out = (_solarhouse4_inverter_controller_gain29__out * _solarhouse4_inverter_controller_gain29__out);

             // Generated from the component: SolarHouse4.Inverter.Controller.Vq
          HIL_OutAO(0x4081, (float)_solarhouse4_inverter_controller_gain29__out);
  
             // Generated from the component: SolarHouse4.Inverter.Controller.Id
          HIL_OutAO(0x4073, (float)_solarhouse4_inverter_controller_gain30__out);
  
             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Gain7
                                _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain7__out = 0.005772569444444445 * _solarhouse4_inverter_controller_gain30__out;
        
             // Generated from the component: SolarHouse4.Inverter.Power_Meas.Power_Meas_DQpu.Product1
    _solarhouse4_inverter_power_meas_power_meas_dqpu_product1__out = (_solarhouse4_inverter_controller_gain28__out * _solarhouse4_inverter_controller_gain30__out);

             // Generated from the component: SolarHouse4.Inverter.Power_Meas.Power_Meas_DQpu.Product4
    _solarhouse4_inverter_power_meas_power_meas_dqpu_product4__out = (_solarhouse4_inverter_controller_gain29__out * _solarhouse4_inverter_controller_gain30__out);

             // Generated from the component: SolarHouse4.Inverter.Controller.Iq
          HIL_OutAO(0x4074, (float)_solarhouse4_inverter_controller_gain31__out);
  
             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Gain6
                                _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain6__out = 0.005772569444444445 * _solarhouse4_inverter_controller_gain31__out;
        
             // Generated from the component: SolarHouse4.Inverter.Power_Meas.Power_Meas_DQpu.Product2
    _solarhouse4_inverter_power_meas_power_meas_dqpu_product2__out = (_solarhouse4_inverter_controller_gain29__out * _solarhouse4_inverter_controller_gain31__out);

             // Generated from the component: SolarHouse4.Inverter.Power_Meas.Power_Meas_DQpu.Product3
    _solarhouse4_inverter_power_meas_power_meas_dqpu_product3__out = (_solarhouse4_inverter_controller_gain28__out * _solarhouse4_inverter_controller_gain31__out);

             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Limit1
      _solarhouse4_inverter_controller_single_phase_pll1_limit1__out = MAX(_solarhouse4_inverter_controller_single_phase_pll1_math1__out, 1e-05);  
             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Sum3
                                              _ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_sum3__out = _ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product3__out-_ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product4__out;    
  
             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Sum4
                                              _ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_sum4__out = _ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product5__out+_ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product6__out;    
  
             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.squared_Vt2.Sum3
                                              _ess_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_sum3__out = _ess_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_product1__out+_ess_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_product2__out;    
  
             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Product2
    _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product2__out = (_ess_inverter_controller_gain25__out * _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain7__out);

             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Product1
    _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product1__out = (_ess_inverter_controller_gain25__out * _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain6__out);

             // Generated from the component: ESS.Inverter.Power_Meas.Power_Meas_DQpu.Sum1
                                              _ess_inverter_power_meas_power_meas_dqpu_sum1__out = _ess_inverter_power_meas_power_meas_dqpu_product1__out+_ess_inverter_power_meas_power_meas_dqpu_product2__out;    
  
             // Generated from the component: ESS.Inverter.Power_Meas.Power_Meas_DQpu.Sum2
                                              _ess_inverter_power_meas_power_meas_dqpu_sum2__out = _ess_inverter_power_meas_power_meas_dqpu_product4__out-_ess_inverter_power_meas_power_meas_dqpu_product3__out;    
  
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Product8
    _ess_inverter_controller_single_phase_pll1_product8__out = (_ess_inverter_controller_single_phase_pll1_c_function1__vq)*1.0/(_ess_inverter_controller_single_phase_pll1_limit1__out);

             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Sum3
                                              _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_sum3__out = _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product3__out-_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product4__out;    
  
             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Sum4
                                              _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_sum4__out = _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product5__out+_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product6__out;    
  
             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.squared_Vt2.Sum3
                                              _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_sum3__out = _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_product1__out+_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_product2__out;    
  
             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Product2
    _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product2__out = (_solarhouse1_inverter_controller_gain25__out * _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain7__out);

             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Product1
    _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product1__out = (_solarhouse1_inverter_controller_gain25__out * _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain6__out);

             // Generated from the component: SolarHouse1.Inverter.Power_Meas.Power_Meas_DQpu.Sum1
                                              _solarhouse1_inverter_power_meas_power_meas_dqpu_sum1__out = _solarhouse1_inverter_power_meas_power_meas_dqpu_product1__out+_solarhouse1_inverter_power_meas_power_meas_dqpu_product2__out;    
  
             // Generated from the component: SolarHouse1.Inverter.Power_Meas.Power_Meas_DQpu.Sum2
                                              _solarhouse1_inverter_power_meas_power_meas_dqpu_sum2__out = _solarhouse1_inverter_power_meas_power_meas_dqpu_product4__out-_solarhouse1_inverter_power_meas_power_meas_dqpu_product3__out;    
  
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Product8
    _solarhouse1_inverter_controller_single_phase_pll1_product8__out = (_solarhouse1_inverter_controller_single_phase_pll1_c_function1__vq)*1.0/(_solarhouse1_inverter_controller_single_phase_pll1_limit1__out);

             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Sum3
                                              _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_sum3__out = _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product3__out-_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product4__out;    
  
             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Sum4
                                              _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_sum4__out = _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product5__out+_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product6__out;    
  
             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.squared_Vt2.Sum3
                                              _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_sum3__out = _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_product1__out+_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_product2__out;    
  
             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Product2
    _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product2__out = (_solarhouse2_inverter_controller_gain25__out * _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain7__out);

             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Product1
    _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product1__out = (_solarhouse2_inverter_controller_gain25__out * _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain6__out);

             // Generated from the component: SolarHouse2.Inverter.Power_Meas.Power_Meas_DQpu.Sum1
                                              _solarhouse2_inverter_power_meas_power_meas_dqpu_sum1__out = _solarhouse2_inverter_power_meas_power_meas_dqpu_product1__out+_solarhouse2_inverter_power_meas_power_meas_dqpu_product2__out;    
  
             // Generated from the component: SolarHouse2.Inverter.Power_Meas.Power_Meas_DQpu.Sum2
                                              _solarhouse2_inverter_power_meas_power_meas_dqpu_sum2__out = _solarhouse2_inverter_power_meas_power_meas_dqpu_product4__out-_solarhouse2_inverter_power_meas_power_meas_dqpu_product3__out;    
  
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Product8
    _solarhouse2_inverter_controller_single_phase_pll1_product8__out = (_solarhouse2_inverter_controller_single_phase_pll1_c_function1__vq)*1.0/(_solarhouse2_inverter_controller_single_phase_pll1_limit1__out);

             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Sum3
                                              _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_sum3__out = _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product3__out-_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product4__out;    
  
             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Sum4
                                              _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_sum4__out = _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product5__out+_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product6__out;    
  
             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.squared_Vt2.Sum3
                                              _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_sum3__out = _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_product1__out+_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_product2__out;    
  
             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Product2
    _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product2__out = (_solarhouse3_inverter_controller_gain25__out * _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain7__out);

             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Product1
    _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product1__out = (_solarhouse3_inverter_controller_gain25__out * _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain6__out);

             // Generated from the component: SolarHouse3.Inverter.Power_Meas.Power_Meas_DQpu.Sum1
                                              _solarhouse3_inverter_power_meas_power_meas_dqpu_sum1__out = _solarhouse3_inverter_power_meas_power_meas_dqpu_product1__out+_solarhouse3_inverter_power_meas_power_meas_dqpu_product2__out;    
  
             // Generated from the component: SolarHouse3.Inverter.Power_Meas.Power_Meas_DQpu.Sum2
                                              _solarhouse3_inverter_power_meas_power_meas_dqpu_sum2__out = _solarhouse3_inverter_power_meas_power_meas_dqpu_product4__out-_solarhouse3_inverter_power_meas_power_meas_dqpu_product3__out;    
  
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Product8
    _solarhouse3_inverter_controller_single_phase_pll1_product8__out = (_solarhouse3_inverter_controller_single_phase_pll1_c_function1__vq)*1.0/(_solarhouse3_inverter_controller_single_phase_pll1_limit1__out);

             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Sum3
                                              _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_sum3__out = _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product3__out-_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product4__out;    
  
             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Sum4
                                              _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_sum4__out = _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product5__out+_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product6__out;    
  
             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.squared_Vt2.Sum3
                                              _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_sum3__out = _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_product1__out+_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_product2__out;    
  
             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Product2
    _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product2__out = (_solarhouse4_inverter_controller_gain25__out * _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain7__out);

             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Product1
    _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product1__out = (_solarhouse4_inverter_controller_gain25__out * _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain6__out);

             // Generated from the component: SolarHouse4.Inverter.Power_Meas.Power_Meas_DQpu.Sum1
                                              _solarhouse4_inverter_power_meas_power_meas_dqpu_sum1__out = _solarhouse4_inverter_power_meas_power_meas_dqpu_product1__out+_solarhouse4_inverter_power_meas_power_meas_dqpu_product2__out;    
  
             // Generated from the component: SolarHouse4.Inverter.Power_Meas.Power_Meas_DQpu.Sum2
                                              _solarhouse4_inverter_power_meas_power_meas_dqpu_sum2__out = _solarhouse4_inverter_power_meas_power_meas_dqpu_product4__out-_solarhouse4_inverter_power_meas_power_meas_dqpu_product3__out;    
  
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Product8
    _solarhouse4_inverter_controller_single_phase_pll1_product8__out = (_solarhouse4_inverter_controller_single_phase_pll1_c_function1__vq)*1.0/(_solarhouse4_inverter_controller_single_phase_pll1_limit1__out);

             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.Edq_sq
          HIL_OutAO(0x400c, (float)_ess_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_sum3__out);
  
             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Comparator1
            if (_ess_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_sum3__out < _ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_limit_zero__out) {
            _ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__out = 0;
        } else if (_ess_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_sum3__out > _ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_limit_zero__out) {
            _ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__out = 1;
        } else {
            _ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__out = _ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__state;
        }

             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Sum6
                                              _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum6__out = _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__out+_ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product2__out;    
  
             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Sum5
                                              _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum5__out = _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__out-_ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product1__out;    
  
             // Generated from the component: ESS.Inverter.Power_Meas.Power_Meas_DQpu.LPF_P
                            X_UnInt32 _ess_inverter_power_meas_power_meas_dqpu_lpf_p__i;    
                                                                                          

                _ess_inverter_power_meas_power_meas_dqpu_lpf_p__a_sum = 0.0f;
        _ess_inverter_power_meas_power_meas_dqpu_lpf_p__b_sum = 0.0f;
        _ess_inverter_power_meas_power_meas_dqpu_lpf_p__delay_line_in = 0.0f;
                    for (_ess_inverter_power_meas_power_meas_dqpu_lpf_p__i = 0; _ess_inverter_power_meas_power_meas_dqpu_lpf_p__i < 1; _ess_inverter_power_meas_power_meas_dqpu_lpf_p__i++){
                                     _ess_inverter_power_meas_power_meas_dqpu_lpf_p__b_sum += _ess_inverter_power_meas_power_meas_dqpu_lpf_p__b_coeff[_ess_inverter_power_meas_power_meas_dqpu_lpf_p__i+1] * _ess_inverter_power_meas_power_meas_dqpu_lpf_p__states[_ess_inverter_power_meas_power_meas_dqpu_lpf_p__i];
                            }
                                    _ess_inverter_power_meas_power_meas_dqpu_lpf_p__a_sum += _ess_inverter_power_meas_power_meas_dqpu_lpf_p__states[0] * _ess_inverter_power_meas_power_meas_dqpu_lpf_p__a_coeff[1];
                            _ess_inverter_power_meas_power_meas_dqpu_lpf_p__delay_line_in = _ess_inverter_power_meas_power_meas_dqpu_sum1__out - _ess_inverter_power_meas_power_meas_dqpu_lpf_p__a_sum;
                            _ess_inverter_power_meas_power_meas_dqpu_lpf_p__b_sum += _ess_inverter_power_meas_power_meas_dqpu_lpf_p__b_coeff[0] * _ess_inverter_power_meas_power_meas_dqpu_lpf_p__delay_line_in;
                _ess_inverter_power_meas_power_meas_dqpu_lpf_p__out = _ess_inverter_power_meas_power_meas_dqpu_lpf_p__b_sum;

    
             // Generated from the component: ESS.Inverter.Power_Meas.Power_Meas_DQpu.LPF_Q
                            X_UnInt32 _ess_inverter_power_meas_power_meas_dqpu_lpf_q__i;    
                                                                                          

                _ess_inverter_power_meas_power_meas_dqpu_lpf_q__a_sum = 0.0f;
        _ess_inverter_power_meas_power_meas_dqpu_lpf_q__b_sum = 0.0f;
        _ess_inverter_power_meas_power_meas_dqpu_lpf_q__delay_line_in = 0.0f;
                    for (_ess_inverter_power_meas_power_meas_dqpu_lpf_q__i = 0; _ess_inverter_power_meas_power_meas_dqpu_lpf_q__i < 1; _ess_inverter_power_meas_power_meas_dqpu_lpf_q__i++){
                                     _ess_inverter_power_meas_power_meas_dqpu_lpf_q__b_sum += _ess_inverter_power_meas_power_meas_dqpu_lpf_q__b_coeff[_ess_inverter_power_meas_power_meas_dqpu_lpf_q__i+1] * _ess_inverter_power_meas_power_meas_dqpu_lpf_q__states[_ess_inverter_power_meas_power_meas_dqpu_lpf_q__i];
                            }
                                    _ess_inverter_power_meas_power_meas_dqpu_lpf_q__a_sum += _ess_inverter_power_meas_power_meas_dqpu_lpf_q__states[0] * _ess_inverter_power_meas_power_meas_dqpu_lpf_q__a_coeff[1];
                            _ess_inverter_power_meas_power_meas_dqpu_lpf_q__delay_line_in = _ess_inverter_power_meas_power_meas_dqpu_sum2__out - _ess_inverter_power_meas_power_meas_dqpu_lpf_q__a_sum;
                            _ess_inverter_power_meas_power_meas_dqpu_lpf_q__b_sum += _ess_inverter_power_meas_power_meas_dqpu_lpf_q__b_coeff[0] * _ess_inverter_power_meas_power_meas_dqpu_lpf_q__delay_line_in;
                _ess_inverter_power_meas_power_meas_dqpu_lpf_q__out = _ess_inverter_power_meas_power_meas_dqpu_lpf_q__b_sum;

    
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Abs1
          _ess_inverter_controller_single_phase_pll1_abs1__out = fabs(_ess_inverter_controller_single_phase_pll1_product8__out);
  
             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.Edq_sq
          HIL_OutAO(0x4027, (float)_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_sum3__out);
  
             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Comparator1
            if (_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_sum3__out < _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_limit_zero__out) {
            _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__out = 0;
        } else if (_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_sum3__out > _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_limit_zero__out) {
            _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__out = 1;
        } else {
            _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__out = _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__state;
        }

             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Sum6
                                              _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum6__out = _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__out+_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product2__out;    
  
             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Sum5
                                              _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum5__out = _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__out-_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product1__out;    
  
             // Generated from the component: SolarHouse1.Inverter.Power_Meas.Power_Meas_DQpu.LPF_P
                            X_UnInt32 _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_p__i;    
                                                                                          

                _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_p__a_sum = 0.0f;
        _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_p__b_sum = 0.0f;
        _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_p__delay_line_in = 0.0f;
                    for (_solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_p__i = 0; _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_p__i < 1; _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_p__i++){
                                     _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_p__b_sum += _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_p__b_coeff[_solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_p__i+1] * _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_p__states[_solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_p__i];
                            }
                                    _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_p__a_sum += _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_p__states[0] * _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_p__a_coeff[1];
                            _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_p__delay_line_in = _solarhouse1_inverter_power_meas_power_meas_dqpu_sum1__out - _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_p__a_sum;
                            _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_p__b_sum += _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_p__b_coeff[0] * _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_p__delay_line_in;
                _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_p__out = _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_p__b_sum;

    
             // Generated from the component: SolarHouse1.Inverter.Power_Meas.Power_Meas_DQpu.LPF_Q
                            X_UnInt32 _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_q__i;    
                                                                                          

                _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_q__a_sum = 0.0f;
        _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_q__b_sum = 0.0f;
        _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_q__delay_line_in = 0.0f;
                    for (_solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_q__i = 0; _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_q__i < 1; _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_q__i++){
                                     _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_q__b_sum += _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_q__b_coeff[_solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_q__i+1] * _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_q__states[_solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_q__i];
                            }
                                    _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_q__a_sum += _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_q__states[0] * _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_q__a_coeff[1];
                            _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_q__delay_line_in = _solarhouse1_inverter_power_meas_power_meas_dqpu_sum2__out - _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_q__a_sum;
                            _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_q__b_sum += _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_q__b_coeff[0] * _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_q__delay_line_in;
                _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_q__out = _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_q__b_sum;

    
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Abs1
          _solarhouse1_inverter_controller_single_phase_pll1_abs1__out = fabs(_solarhouse1_inverter_controller_single_phase_pll1_product8__out);
  
             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.Edq_sq
          HIL_OutAO(0x4041, (float)_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_sum3__out);
  
             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Comparator1
            if (_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_sum3__out < _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_limit_zero__out) {
            _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__out = 0;
        } else if (_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_sum3__out > _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_limit_zero__out) {
            _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__out = 1;
        } else {
            _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__out = _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__state;
        }

             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Sum6
                                              _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum6__out = _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__out+_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product2__out;    
  
             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Sum5
                                              _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum5__out = _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__out-_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product1__out;    
  
             // Generated from the component: SolarHouse2.Inverter.Power_Meas.Power_Meas_DQpu.LPF_P
                            X_UnInt32 _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_p__i;    
                                                                                          

                _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_p__a_sum = 0.0f;
        _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_p__b_sum = 0.0f;
        _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_p__delay_line_in = 0.0f;
                    for (_solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_p__i = 0; _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_p__i < 1; _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_p__i++){
                                     _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_p__b_sum += _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_p__b_coeff[_solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_p__i+1] * _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_p__states[_solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_p__i];
                            }
                                    _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_p__a_sum += _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_p__states[0] * _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_p__a_coeff[1];
                            _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_p__delay_line_in = _solarhouse2_inverter_power_meas_power_meas_dqpu_sum1__out - _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_p__a_sum;
                            _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_p__b_sum += _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_p__b_coeff[0] * _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_p__delay_line_in;
                _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_p__out = _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_p__b_sum;

    
             // Generated from the component: SolarHouse2.Inverter.Power_Meas.Power_Meas_DQpu.LPF_Q
                            X_UnInt32 _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_q__i;    
                                                                                          

                _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_q__a_sum = 0.0f;
        _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_q__b_sum = 0.0f;
        _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_q__delay_line_in = 0.0f;
                    for (_solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_q__i = 0; _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_q__i < 1; _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_q__i++){
                                     _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_q__b_sum += _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_q__b_coeff[_solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_q__i+1] * _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_q__states[_solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_q__i];
                            }
                                    _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_q__a_sum += _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_q__states[0] * _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_q__a_coeff[1];
                            _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_q__delay_line_in = _solarhouse2_inverter_power_meas_power_meas_dqpu_sum2__out - _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_q__a_sum;
                            _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_q__b_sum += _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_q__b_coeff[0] * _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_q__delay_line_in;
                _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_q__out = _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_q__b_sum;

    
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Abs1
          _solarhouse2_inverter_controller_single_phase_pll1_abs1__out = fabs(_solarhouse2_inverter_controller_single_phase_pll1_product8__out);
  
             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.Edq_sq
          HIL_OutAO(0x405b, (float)_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_sum3__out);
  
             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Comparator1
            if (_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_sum3__out < _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_limit_zero__out) {
            _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__out = 0;
        } else if (_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_sum3__out > _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_limit_zero__out) {
            _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__out = 1;
        } else {
            _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__out = _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__state;
        }

             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Sum6
                                              _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum6__out = _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__out+_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product2__out;    
  
             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Sum5
                                              _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum5__out = _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__out-_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product1__out;    
  
             // Generated from the component: SolarHouse3.Inverter.Power_Meas.Power_Meas_DQpu.LPF_P
                            X_UnInt32 _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_p__i;    
                                                                                          

                _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_p__a_sum = 0.0f;
        _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_p__b_sum = 0.0f;
        _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_p__delay_line_in = 0.0f;
                    for (_solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_p__i = 0; _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_p__i < 1; _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_p__i++){
                                     _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_p__b_sum += _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_p__b_coeff[_solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_p__i+1] * _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_p__states[_solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_p__i];
                            }
                                    _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_p__a_sum += _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_p__states[0] * _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_p__a_coeff[1];
                            _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_p__delay_line_in = _solarhouse3_inverter_power_meas_power_meas_dqpu_sum1__out - _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_p__a_sum;
                            _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_p__b_sum += _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_p__b_coeff[0] * _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_p__delay_line_in;
                _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_p__out = _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_p__b_sum;

    
             // Generated from the component: SolarHouse3.Inverter.Power_Meas.Power_Meas_DQpu.LPF_Q
                            X_UnInt32 _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_q__i;    
                                                                                          

                _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_q__a_sum = 0.0f;
        _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_q__b_sum = 0.0f;
        _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_q__delay_line_in = 0.0f;
                    for (_solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_q__i = 0; _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_q__i < 1; _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_q__i++){
                                     _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_q__b_sum += _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_q__b_coeff[_solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_q__i+1] * _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_q__states[_solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_q__i];
                            }
                                    _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_q__a_sum += _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_q__states[0] * _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_q__a_coeff[1];
                            _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_q__delay_line_in = _solarhouse3_inverter_power_meas_power_meas_dqpu_sum2__out - _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_q__a_sum;
                            _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_q__b_sum += _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_q__b_coeff[0] * _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_q__delay_line_in;
                _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_q__out = _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_q__b_sum;

    
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Abs1
          _solarhouse3_inverter_controller_single_phase_pll1_abs1__out = fabs(_solarhouse3_inverter_controller_single_phase_pll1_product8__out);
  
             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.Edq_sq
          HIL_OutAO(0x4075, (float)_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_sum3__out);
  
             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Comparator1
            if (_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_sum3__out < _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_limit_zero__out) {
            _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__out = 0;
        } else if (_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_sum3__out > _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_limit_zero__out) {
            _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__out = 1;
        } else {
            _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__out = _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__state;
        }

             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Sum6
                                              _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum6__out = _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__out+_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product2__out;    
  
             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Sum5
                                              _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum5__out = _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__out-_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product1__out;    
  
             // Generated from the component: SolarHouse4.Inverter.Power_Meas.Power_Meas_DQpu.LPF_P
                            X_UnInt32 _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_p__i;    
                                                                                          

                _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_p__a_sum = 0.0f;
        _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_p__b_sum = 0.0f;
        _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_p__delay_line_in = 0.0f;
                    for (_solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_p__i = 0; _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_p__i < 1; _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_p__i++){
                                     _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_p__b_sum += _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_p__b_coeff[_solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_p__i+1] * _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_p__states[_solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_p__i];
                            }
                                    _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_p__a_sum += _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_p__states[0] * _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_p__a_coeff[1];
                            _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_p__delay_line_in = _solarhouse4_inverter_power_meas_power_meas_dqpu_sum1__out - _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_p__a_sum;
                            _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_p__b_sum += _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_p__b_coeff[0] * _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_p__delay_line_in;
                _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_p__out = _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_p__b_sum;

    
             // Generated from the component: SolarHouse4.Inverter.Power_Meas.Power_Meas_DQpu.LPF_Q
                            X_UnInt32 _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_q__i;    
                                                                                          

                _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_q__a_sum = 0.0f;
        _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_q__b_sum = 0.0f;
        _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_q__delay_line_in = 0.0f;
                    for (_solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_q__i = 0; _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_q__i < 1; _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_q__i++){
                                     _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_q__b_sum += _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_q__b_coeff[_solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_q__i+1] * _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_q__states[_solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_q__i];
                            }
                                    _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_q__a_sum += _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_q__states[0] * _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_q__a_coeff[1];
                            _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_q__delay_line_in = _solarhouse4_inverter_power_meas_power_meas_dqpu_sum2__out - _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_q__a_sum;
                            _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_q__b_sum += _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_q__b_coeff[0] * _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_q__delay_line_in;
                _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_q__out = _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_q__b_sum;

    
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Abs1
          _solarhouse4_inverter_controller_single_phase_pll1_abs1__out = fabs(_solarhouse4_inverter_controller_single_phase_pll1_product8__out);
  
             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Signal switch1
                                                             _ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_signal_switch1__out = (_ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__out < 0.5f) ? _ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_one__out : _ess_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_sum3__out;
            
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Kd_LUT
    
    
        if(_ess_inverter_controller_single_phase_pll1_abs1__out <= _ess_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[0]) {
                            _ess_inverter_controller_single_phase_pll1_kd_lut__fraction = (_ess_inverter_controller_single_phase_pll1_abs1__out - _ess_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[0])
                    / (_ess_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[1] - _ess_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[0]);
                        _ess_inverter_controller_single_phase_pll1_kd_lut__leftIndex = 0;
        }
        else if(_ess_inverter_controller_single_phase_pll1_abs1__out < _ess_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[99]) {
            _ess_inverter_controller_single_phase_pll1_kd_lut__curAddr = 99 >> 1;
            _ess_inverter_controller_single_phase_pll1_kd_lut__leftIndex = 0;
            _ess_inverter_controller_single_phase_pll1_kd_lut__rightIndex = 99;
            while (1 < _ess_inverter_controller_single_phase_pll1_kd_lut__rightIndex - _ess_inverter_controller_single_phase_pll1_kd_lut__leftIndex) {
                if (_ess_inverter_controller_single_phase_pll1_abs1__out < _ess_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[_ess_inverter_controller_single_phase_pll1_kd_lut__curAddr]) {
                    _ess_inverter_controller_single_phase_pll1_kd_lut__rightIndex = _ess_inverter_controller_single_phase_pll1_kd_lut__curAddr;
                }
                else {
                    _ess_inverter_controller_single_phase_pll1_kd_lut__leftIndex = _ess_inverter_controller_single_phase_pll1_kd_lut__curAddr;
                }
                _ess_inverter_controller_single_phase_pll1_kd_lut__curAddr = (_ess_inverter_controller_single_phase_pll1_kd_lut__leftIndex + _ess_inverter_controller_single_phase_pll1_kd_lut__rightIndex) >> 1;
            }
            _ess_inverter_controller_single_phase_pll1_kd_lut__fraction = (_ess_inverter_controller_single_phase_pll1_abs1__out - _ess_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[_ess_inverter_controller_single_phase_pll1_kd_lut__leftIndex])
                / (_ess_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[_ess_inverter_controller_single_phase_pll1_kd_lut__leftIndex + 1] - _ess_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[_ess_inverter_controller_single_phase_pll1_kd_lut__leftIndex]);
        }
        else {
                            _ess_inverter_controller_single_phase_pll1_kd_lut__fraction = (_ess_inverter_controller_single_phase_pll1_abs1__out - _ess_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[98])
                    / (_ess_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[99] - _ess_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[98]);
                        _ess_inverter_controller_single_phase_pll1_kd_lut__leftIndex = 98;
        }

        _ess_inverter_controller_single_phase_pll1_kd_lut__value = (_ess_inverter_controller_single_phase_pll1_kd_lut__lut_table[_ess_inverter_controller_single_phase_pll1_kd_lut__leftIndex + 1] - _ess_inverter_controller_single_phase_pll1_kd_lut__lut_table[_ess_inverter_controller_single_phase_pll1_kd_lut__leftIndex])
            * _ess_inverter_controller_single_phase_pll1_kd_lut__fraction + _ess_inverter_controller_single_phase_pll1_kd_lut__lut_table[_ess_inverter_controller_single_phase_pll1_kd_lut__leftIndex];

    

             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Ki_LUT
    
    
        if(_ess_inverter_controller_single_phase_pll1_abs1__out <= _ess_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[0]) {
                            _ess_inverter_controller_single_phase_pll1_ki_lut__fraction = (_ess_inverter_controller_single_phase_pll1_abs1__out - _ess_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[0])
                    / (_ess_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[1] - _ess_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[0]);
                        _ess_inverter_controller_single_phase_pll1_ki_lut__leftIndex = 0;
        }
        else if(_ess_inverter_controller_single_phase_pll1_abs1__out < _ess_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[99]) {
            _ess_inverter_controller_single_phase_pll1_ki_lut__curAddr = 99 >> 1;
            _ess_inverter_controller_single_phase_pll1_ki_lut__leftIndex = 0;
            _ess_inverter_controller_single_phase_pll1_ki_lut__rightIndex = 99;
            while (1 < _ess_inverter_controller_single_phase_pll1_ki_lut__rightIndex - _ess_inverter_controller_single_phase_pll1_ki_lut__leftIndex) {
                if (_ess_inverter_controller_single_phase_pll1_abs1__out < _ess_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[_ess_inverter_controller_single_phase_pll1_ki_lut__curAddr]) {
                    _ess_inverter_controller_single_phase_pll1_ki_lut__rightIndex = _ess_inverter_controller_single_phase_pll1_ki_lut__curAddr;
                }
                else {
                    _ess_inverter_controller_single_phase_pll1_ki_lut__leftIndex = _ess_inverter_controller_single_phase_pll1_ki_lut__curAddr;
                }
                _ess_inverter_controller_single_phase_pll1_ki_lut__curAddr = (_ess_inverter_controller_single_phase_pll1_ki_lut__leftIndex + _ess_inverter_controller_single_phase_pll1_ki_lut__rightIndex) >> 1;
            }
            _ess_inverter_controller_single_phase_pll1_ki_lut__fraction = (_ess_inverter_controller_single_phase_pll1_abs1__out - _ess_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[_ess_inverter_controller_single_phase_pll1_ki_lut__leftIndex])
                / (_ess_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[_ess_inverter_controller_single_phase_pll1_ki_lut__leftIndex + 1] - _ess_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[_ess_inverter_controller_single_phase_pll1_ki_lut__leftIndex]);
        }
        else {
                            _ess_inverter_controller_single_phase_pll1_ki_lut__fraction = (_ess_inverter_controller_single_phase_pll1_abs1__out - _ess_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[98])
                    / (_ess_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[99] - _ess_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[98]);
                        _ess_inverter_controller_single_phase_pll1_ki_lut__leftIndex = 98;
        }

        _ess_inverter_controller_single_phase_pll1_ki_lut__value = (_ess_inverter_controller_single_phase_pll1_ki_lut__lut_table[_ess_inverter_controller_single_phase_pll1_ki_lut__leftIndex + 1] - _ess_inverter_controller_single_phase_pll1_ki_lut__lut_table[_ess_inverter_controller_single_phase_pll1_ki_lut__leftIndex])
            * _ess_inverter_controller_single_phase_pll1_ki_lut__fraction + _ess_inverter_controller_single_phase_pll1_ki_lut__lut_table[_ess_inverter_controller_single_phase_pll1_ki_lut__leftIndex];

    

             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Kp_LUT
    
    
        if(_ess_inverter_controller_single_phase_pll1_abs1__out <= _ess_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[0]) {
                            _ess_inverter_controller_single_phase_pll1_kp_lut__fraction = (_ess_inverter_controller_single_phase_pll1_abs1__out - _ess_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[0])
                    / (_ess_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[1] - _ess_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[0]);
                        _ess_inverter_controller_single_phase_pll1_kp_lut__leftIndex = 0;
        }
        else if(_ess_inverter_controller_single_phase_pll1_abs1__out < _ess_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[99]) {
            _ess_inverter_controller_single_phase_pll1_kp_lut__curAddr = 99 >> 1;
            _ess_inverter_controller_single_phase_pll1_kp_lut__leftIndex = 0;
            _ess_inverter_controller_single_phase_pll1_kp_lut__rightIndex = 99;
            while (1 < _ess_inverter_controller_single_phase_pll1_kp_lut__rightIndex - _ess_inverter_controller_single_phase_pll1_kp_lut__leftIndex) {
                if (_ess_inverter_controller_single_phase_pll1_abs1__out < _ess_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[_ess_inverter_controller_single_phase_pll1_kp_lut__curAddr]) {
                    _ess_inverter_controller_single_phase_pll1_kp_lut__rightIndex = _ess_inverter_controller_single_phase_pll1_kp_lut__curAddr;
                }
                else {
                    _ess_inverter_controller_single_phase_pll1_kp_lut__leftIndex = _ess_inverter_controller_single_phase_pll1_kp_lut__curAddr;
                }
                _ess_inverter_controller_single_phase_pll1_kp_lut__curAddr = (_ess_inverter_controller_single_phase_pll1_kp_lut__leftIndex + _ess_inverter_controller_single_phase_pll1_kp_lut__rightIndex) >> 1;
            }
            _ess_inverter_controller_single_phase_pll1_kp_lut__fraction = (_ess_inverter_controller_single_phase_pll1_abs1__out - _ess_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[_ess_inverter_controller_single_phase_pll1_kp_lut__leftIndex])
                / (_ess_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[_ess_inverter_controller_single_phase_pll1_kp_lut__leftIndex + 1] - _ess_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[_ess_inverter_controller_single_phase_pll1_kp_lut__leftIndex]);
        }
        else {
                            _ess_inverter_controller_single_phase_pll1_kp_lut__fraction = (_ess_inverter_controller_single_phase_pll1_abs1__out - _ess_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[98])
                    / (_ess_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[99] - _ess_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[98]);
                        _ess_inverter_controller_single_phase_pll1_kp_lut__leftIndex = 98;
        }

        _ess_inverter_controller_single_phase_pll1_kp_lut__value = (_ess_inverter_controller_single_phase_pll1_kp_lut__lut_table[_ess_inverter_controller_single_phase_pll1_kp_lut__leftIndex + 1] - _ess_inverter_controller_single_phase_pll1_kp_lut__lut_table[_ess_inverter_controller_single_phase_pll1_kp_lut__leftIndex])
            * _ess_inverter_controller_single_phase_pll1_kp_lut__fraction + _ess_inverter_controller_single_phase_pll1_kp_lut__lut_table[_ess_inverter_controller_single_phase_pll1_kp_lut__leftIndex];

    

             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Signal switch1
                                                             _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_signal_switch1__out = (_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__out < 0.5f) ? _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_one__out : _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_sum3__out;
            
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Kd_LUT
    
    
        if(_solarhouse1_inverter_controller_single_phase_pll1_abs1__out <= _solarhouse1_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[0]) {
                            _solarhouse1_inverter_controller_single_phase_pll1_kd_lut__fraction = (_solarhouse1_inverter_controller_single_phase_pll1_abs1__out - _solarhouse1_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[0])
                    / (_solarhouse1_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[1] - _solarhouse1_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[0]);
                        _solarhouse1_inverter_controller_single_phase_pll1_kd_lut__leftIndex = 0;
        }
        else if(_solarhouse1_inverter_controller_single_phase_pll1_abs1__out < _solarhouse1_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[99]) {
            _solarhouse1_inverter_controller_single_phase_pll1_kd_lut__curAddr = 99 >> 1;
            _solarhouse1_inverter_controller_single_phase_pll1_kd_lut__leftIndex = 0;
            _solarhouse1_inverter_controller_single_phase_pll1_kd_lut__rightIndex = 99;
            while (1 < _solarhouse1_inverter_controller_single_phase_pll1_kd_lut__rightIndex - _solarhouse1_inverter_controller_single_phase_pll1_kd_lut__leftIndex) {
                if (_solarhouse1_inverter_controller_single_phase_pll1_abs1__out < _solarhouse1_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[_solarhouse1_inverter_controller_single_phase_pll1_kd_lut__curAddr]) {
                    _solarhouse1_inverter_controller_single_phase_pll1_kd_lut__rightIndex = _solarhouse1_inverter_controller_single_phase_pll1_kd_lut__curAddr;
                }
                else {
                    _solarhouse1_inverter_controller_single_phase_pll1_kd_lut__leftIndex = _solarhouse1_inverter_controller_single_phase_pll1_kd_lut__curAddr;
                }
                _solarhouse1_inverter_controller_single_phase_pll1_kd_lut__curAddr = (_solarhouse1_inverter_controller_single_phase_pll1_kd_lut__leftIndex + _solarhouse1_inverter_controller_single_phase_pll1_kd_lut__rightIndex) >> 1;
            }
            _solarhouse1_inverter_controller_single_phase_pll1_kd_lut__fraction = (_solarhouse1_inverter_controller_single_phase_pll1_abs1__out - _solarhouse1_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[_solarhouse1_inverter_controller_single_phase_pll1_kd_lut__leftIndex])
                / (_solarhouse1_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[_solarhouse1_inverter_controller_single_phase_pll1_kd_lut__leftIndex + 1] - _solarhouse1_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[_solarhouse1_inverter_controller_single_phase_pll1_kd_lut__leftIndex]);
        }
        else {
                            _solarhouse1_inverter_controller_single_phase_pll1_kd_lut__fraction = (_solarhouse1_inverter_controller_single_phase_pll1_abs1__out - _solarhouse1_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[98])
                    / (_solarhouse1_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[99] - _solarhouse1_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[98]);
                        _solarhouse1_inverter_controller_single_phase_pll1_kd_lut__leftIndex = 98;
        }

        _solarhouse1_inverter_controller_single_phase_pll1_kd_lut__value = (_solarhouse1_inverter_controller_single_phase_pll1_kd_lut__lut_table[_solarhouse1_inverter_controller_single_phase_pll1_kd_lut__leftIndex + 1] - _solarhouse1_inverter_controller_single_phase_pll1_kd_lut__lut_table[_solarhouse1_inverter_controller_single_phase_pll1_kd_lut__leftIndex])
            * _solarhouse1_inverter_controller_single_phase_pll1_kd_lut__fraction + _solarhouse1_inverter_controller_single_phase_pll1_kd_lut__lut_table[_solarhouse1_inverter_controller_single_phase_pll1_kd_lut__leftIndex];

    

             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Ki_LUT
    
    
        if(_solarhouse1_inverter_controller_single_phase_pll1_abs1__out <= _solarhouse1_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[0]) {
                            _solarhouse1_inverter_controller_single_phase_pll1_ki_lut__fraction = (_solarhouse1_inverter_controller_single_phase_pll1_abs1__out - _solarhouse1_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[0])
                    / (_solarhouse1_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[1] - _solarhouse1_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[0]);
                        _solarhouse1_inverter_controller_single_phase_pll1_ki_lut__leftIndex = 0;
        }
        else if(_solarhouse1_inverter_controller_single_phase_pll1_abs1__out < _solarhouse1_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[99]) {
            _solarhouse1_inverter_controller_single_phase_pll1_ki_lut__curAddr = 99 >> 1;
            _solarhouse1_inverter_controller_single_phase_pll1_ki_lut__leftIndex = 0;
            _solarhouse1_inverter_controller_single_phase_pll1_ki_lut__rightIndex = 99;
            while (1 < _solarhouse1_inverter_controller_single_phase_pll1_ki_lut__rightIndex - _solarhouse1_inverter_controller_single_phase_pll1_ki_lut__leftIndex) {
                if (_solarhouse1_inverter_controller_single_phase_pll1_abs1__out < _solarhouse1_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[_solarhouse1_inverter_controller_single_phase_pll1_ki_lut__curAddr]) {
                    _solarhouse1_inverter_controller_single_phase_pll1_ki_lut__rightIndex = _solarhouse1_inverter_controller_single_phase_pll1_ki_lut__curAddr;
                }
                else {
                    _solarhouse1_inverter_controller_single_phase_pll1_ki_lut__leftIndex = _solarhouse1_inverter_controller_single_phase_pll1_ki_lut__curAddr;
                }
                _solarhouse1_inverter_controller_single_phase_pll1_ki_lut__curAddr = (_solarhouse1_inverter_controller_single_phase_pll1_ki_lut__leftIndex + _solarhouse1_inverter_controller_single_phase_pll1_ki_lut__rightIndex) >> 1;
            }
            _solarhouse1_inverter_controller_single_phase_pll1_ki_lut__fraction = (_solarhouse1_inverter_controller_single_phase_pll1_abs1__out - _solarhouse1_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[_solarhouse1_inverter_controller_single_phase_pll1_ki_lut__leftIndex])
                / (_solarhouse1_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[_solarhouse1_inverter_controller_single_phase_pll1_ki_lut__leftIndex + 1] - _solarhouse1_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[_solarhouse1_inverter_controller_single_phase_pll1_ki_lut__leftIndex]);
        }
        else {
                            _solarhouse1_inverter_controller_single_phase_pll1_ki_lut__fraction = (_solarhouse1_inverter_controller_single_phase_pll1_abs1__out - _solarhouse1_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[98])
                    / (_solarhouse1_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[99] - _solarhouse1_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[98]);
                        _solarhouse1_inverter_controller_single_phase_pll1_ki_lut__leftIndex = 98;
        }

        _solarhouse1_inverter_controller_single_phase_pll1_ki_lut__value = (_solarhouse1_inverter_controller_single_phase_pll1_ki_lut__lut_table[_solarhouse1_inverter_controller_single_phase_pll1_ki_lut__leftIndex + 1] - _solarhouse1_inverter_controller_single_phase_pll1_ki_lut__lut_table[_solarhouse1_inverter_controller_single_phase_pll1_ki_lut__leftIndex])
            * _solarhouse1_inverter_controller_single_phase_pll1_ki_lut__fraction + _solarhouse1_inverter_controller_single_phase_pll1_ki_lut__lut_table[_solarhouse1_inverter_controller_single_phase_pll1_ki_lut__leftIndex];

    

             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Kp_LUT
    
    
        if(_solarhouse1_inverter_controller_single_phase_pll1_abs1__out <= _solarhouse1_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[0]) {
                            _solarhouse1_inverter_controller_single_phase_pll1_kp_lut__fraction = (_solarhouse1_inverter_controller_single_phase_pll1_abs1__out - _solarhouse1_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[0])
                    / (_solarhouse1_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[1] - _solarhouse1_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[0]);
                        _solarhouse1_inverter_controller_single_phase_pll1_kp_lut__leftIndex = 0;
        }
        else if(_solarhouse1_inverter_controller_single_phase_pll1_abs1__out < _solarhouse1_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[99]) {
            _solarhouse1_inverter_controller_single_phase_pll1_kp_lut__curAddr = 99 >> 1;
            _solarhouse1_inverter_controller_single_phase_pll1_kp_lut__leftIndex = 0;
            _solarhouse1_inverter_controller_single_phase_pll1_kp_lut__rightIndex = 99;
            while (1 < _solarhouse1_inverter_controller_single_phase_pll1_kp_lut__rightIndex - _solarhouse1_inverter_controller_single_phase_pll1_kp_lut__leftIndex) {
                if (_solarhouse1_inverter_controller_single_phase_pll1_abs1__out < _solarhouse1_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[_solarhouse1_inverter_controller_single_phase_pll1_kp_lut__curAddr]) {
                    _solarhouse1_inverter_controller_single_phase_pll1_kp_lut__rightIndex = _solarhouse1_inverter_controller_single_phase_pll1_kp_lut__curAddr;
                }
                else {
                    _solarhouse1_inverter_controller_single_phase_pll1_kp_lut__leftIndex = _solarhouse1_inverter_controller_single_phase_pll1_kp_lut__curAddr;
                }
                _solarhouse1_inverter_controller_single_phase_pll1_kp_lut__curAddr = (_solarhouse1_inverter_controller_single_phase_pll1_kp_lut__leftIndex + _solarhouse1_inverter_controller_single_phase_pll1_kp_lut__rightIndex) >> 1;
            }
            _solarhouse1_inverter_controller_single_phase_pll1_kp_lut__fraction = (_solarhouse1_inverter_controller_single_phase_pll1_abs1__out - _solarhouse1_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[_solarhouse1_inverter_controller_single_phase_pll1_kp_lut__leftIndex])
                / (_solarhouse1_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[_solarhouse1_inverter_controller_single_phase_pll1_kp_lut__leftIndex + 1] - _solarhouse1_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[_solarhouse1_inverter_controller_single_phase_pll1_kp_lut__leftIndex]);
        }
        else {
                            _solarhouse1_inverter_controller_single_phase_pll1_kp_lut__fraction = (_solarhouse1_inverter_controller_single_phase_pll1_abs1__out - _solarhouse1_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[98])
                    / (_solarhouse1_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[99] - _solarhouse1_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[98]);
                        _solarhouse1_inverter_controller_single_phase_pll1_kp_lut__leftIndex = 98;
        }

        _solarhouse1_inverter_controller_single_phase_pll1_kp_lut__value = (_solarhouse1_inverter_controller_single_phase_pll1_kp_lut__lut_table[_solarhouse1_inverter_controller_single_phase_pll1_kp_lut__leftIndex + 1] - _solarhouse1_inverter_controller_single_phase_pll1_kp_lut__lut_table[_solarhouse1_inverter_controller_single_phase_pll1_kp_lut__leftIndex])
            * _solarhouse1_inverter_controller_single_phase_pll1_kp_lut__fraction + _solarhouse1_inverter_controller_single_phase_pll1_kp_lut__lut_table[_solarhouse1_inverter_controller_single_phase_pll1_kp_lut__leftIndex];

    

             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Signal switch1
                                                             _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_signal_switch1__out = (_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__out < 0.5f) ? _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_one__out : _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_sum3__out;
            
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Kd_LUT
    
    
        if(_solarhouse2_inverter_controller_single_phase_pll1_abs1__out <= _solarhouse2_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[0]) {
                            _solarhouse2_inverter_controller_single_phase_pll1_kd_lut__fraction = (_solarhouse2_inverter_controller_single_phase_pll1_abs1__out - _solarhouse2_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[0])
                    / (_solarhouse2_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[1] - _solarhouse2_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[0]);
                        _solarhouse2_inverter_controller_single_phase_pll1_kd_lut__leftIndex = 0;
        }
        else if(_solarhouse2_inverter_controller_single_phase_pll1_abs1__out < _solarhouse2_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[99]) {
            _solarhouse2_inverter_controller_single_phase_pll1_kd_lut__curAddr = 99 >> 1;
            _solarhouse2_inverter_controller_single_phase_pll1_kd_lut__leftIndex = 0;
            _solarhouse2_inverter_controller_single_phase_pll1_kd_lut__rightIndex = 99;
            while (1 < _solarhouse2_inverter_controller_single_phase_pll1_kd_lut__rightIndex - _solarhouse2_inverter_controller_single_phase_pll1_kd_lut__leftIndex) {
                if (_solarhouse2_inverter_controller_single_phase_pll1_abs1__out < _solarhouse2_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[_solarhouse2_inverter_controller_single_phase_pll1_kd_lut__curAddr]) {
                    _solarhouse2_inverter_controller_single_phase_pll1_kd_lut__rightIndex = _solarhouse2_inverter_controller_single_phase_pll1_kd_lut__curAddr;
                }
                else {
                    _solarhouse2_inverter_controller_single_phase_pll1_kd_lut__leftIndex = _solarhouse2_inverter_controller_single_phase_pll1_kd_lut__curAddr;
                }
                _solarhouse2_inverter_controller_single_phase_pll1_kd_lut__curAddr = (_solarhouse2_inverter_controller_single_phase_pll1_kd_lut__leftIndex + _solarhouse2_inverter_controller_single_phase_pll1_kd_lut__rightIndex) >> 1;
            }
            _solarhouse2_inverter_controller_single_phase_pll1_kd_lut__fraction = (_solarhouse2_inverter_controller_single_phase_pll1_abs1__out - _solarhouse2_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[_solarhouse2_inverter_controller_single_phase_pll1_kd_lut__leftIndex])
                / (_solarhouse2_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[_solarhouse2_inverter_controller_single_phase_pll1_kd_lut__leftIndex + 1] - _solarhouse2_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[_solarhouse2_inverter_controller_single_phase_pll1_kd_lut__leftIndex]);
        }
        else {
                            _solarhouse2_inverter_controller_single_phase_pll1_kd_lut__fraction = (_solarhouse2_inverter_controller_single_phase_pll1_abs1__out - _solarhouse2_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[98])
                    / (_solarhouse2_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[99] - _solarhouse2_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[98]);
                        _solarhouse2_inverter_controller_single_phase_pll1_kd_lut__leftIndex = 98;
        }

        _solarhouse2_inverter_controller_single_phase_pll1_kd_lut__value = (_solarhouse2_inverter_controller_single_phase_pll1_kd_lut__lut_table[_solarhouse2_inverter_controller_single_phase_pll1_kd_lut__leftIndex + 1] - _solarhouse2_inverter_controller_single_phase_pll1_kd_lut__lut_table[_solarhouse2_inverter_controller_single_phase_pll1_kd_lut__leftIndex])
            * _solarhouse2_inverter_controller_single_phase_pll1_kd_lut__fraction + _solarhouse2_inverter_controller_single_phase_pll1_kd_lut__lut_table[_solarhouse2_inverter_controller_single_phase_pll1_kd_lut__leftIndex];

    

             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Ki_LUT
    
    
        if(_solarhouse2_inverter_controller_single_phase_pll1_abs1__out <= _solarhouse2_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[0]) {
                            _solarhouse2_inverter_controller_single_phase_pll1_ki_lut__fraction = (_solarhouse2_inverter_controller_single_phase_pll1_abs1__out - _solarhouse2_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[0])
                    / (_solarhouse2_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[1] - _solarhouse2_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[0]);
                        _solarhouse2_inverter_controller_single_phase_pll1_ki_lut__leftIndex = 0;
        }
        else if(_solarhouse2_inverter_controller_single_phase_pll1_abs1__out < _solarhouse2_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[99]) {
            _solarhouse2_inverter_controller_single_phase_pll1_ki_lut__curAddr = 99 >> 1;
            _solarhouse2_inverter_controller_single_phase_pll1_ki_lut__leftIndex = 0;
            _solarhouse2_inverter_controller_single_phase_pll1_ki_lut__rightIndex = 99;
            while (1 < _solarhouse2_inverter_controller_single_phase_pll1_ki_lut__rightIndex - _solarhouse2_inverter_controller_single_phase_pll1_ki_lut__leftIndex) {
                if (_solarhouse2_inverter_controller_single_phase_pll1_abs1__out < _solarhouse2_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[_solarhouse2_inverter_controller_single_phase_pll1_ki_lut__curAddr]) {
                    _solarhouse2_inverter_controller_single_phase_pll1_ki_lut__rightIndex = _solarhouse2_inverter_controller_single_phase_pll1_ki_lut__curAddr;
                }
                else {
                    _solarhouse2_inverter_controller_single_phase_pll1_ki_lut__leftIndex = _solarhouse2_inverter_controller_single_phase_pll1_ki_lut__curAddr;
                }
                _solarhouse2_inverter_controller_single_phase_pll1_ki_lut__curAddr = (_solarhouse2_inverter_controller_single_phase_pll1_ki_lut__leftIndex + _solarhouse2_inverter_controller_single_phase_pll1_ki_lut__rightIndex) >> 1;
            }
            _solarhouse2_inverter_controller_single_phase_pll1_ki_lut__fraction = (_solarhouse2_inverter_controller_single_phase_pll1_abs1__out - _solarhouse2_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[_solarhouse2_inverter_controller_single_phase_pll1_ki_lut__leftIndex])
                / (_solarhouse2_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[_solarhouse2_inverter_controller_single_phase_pll1_ki_lut__leftIndex + 1] - _solarhouse2_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[_solarhouse2_inverter_controller_single_phase_pll1_ki_lut__leftIndex]);
        }
        else {
                            _solarhouse2_inverter_controller_single_phase_pll1_ki_lut__fraction = (_solarhouse2_inverter_controller_single_phase_pll1_abs1__out - _solarhouse2_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[98])
                    / (_solarhouse2_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[99] - _solarhouse2_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[98]);
                        _solarhouse2_inverter_controller_single_phase_pll1_ki_lut__leftIndex = 98;
        }

        _solarhouse2_inverter_controller_single_phase_pll1_ki_lut__value = (_solarhouse2_inverter_controller_single_phase_pll1_ki_lut__lut_table[_solarhouse2_inverter_controller_single_phase_pll1_ki_lut__leftIndex + 1] - _solarhouse2_inverter_controller_single_phase_pll1_ki_lut__lut_table[_solarhouse2_inverter_controller_single_phase_pll1_ki_lut__leftIndex])
            * _solarhouse2_inverter_controller_single_phase_pll1_ki_lut__fraction + _solarhouse2_inverter_controller_single_phase_pll1_ki_lut__lut_table[_solarhouse2_inverter_controller_single_phase_pll1_ki_lut__leftIndex];

    

             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Kp_LUT
    
    
        if(_solarhouse2_inverter_controller_single_phase_pll1_abs1__out <= _solarhouse2_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[0]) {
                            _solarhouse2_inverter_controller_single_phase_pll1_kp_lut__fraction = (_solarhouse2_inverter_controller_single_phase_pll1_abs1__out - _solarhouse2_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[0])
                    / (_solarhouse2_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[1] - _solarhouse2_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[0]);
                        _solarhouse2_inverter_controller_single_phase_pll1_kp_lut__leftIndex = 0;
        }
        else if(_solarhouse2_inverter_controller_single_phase_pll1_abs1__out < _solarhouse2_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[99]) {
            _solarhouse2_inverter_controller_single_phase_pll1_kp_lut__curAddr = 99 >> 1;
            _solarhouse2_inverter_controller_single_phase_pll1_kp_lut__leftIndex = 0;
            _solarhouse2_inverter_controller_single_phase_pll1_kp_lut__rightIndex = 99;
            while (1 < _solarhouse2_inverter_controller_single_phase_pll1_kp_lut__rightIndex - _solarhouse2_inverter_controller_single_phase_pll1_kp_lut__leftIndex) {
                if (_solarhouse2_inverter_controller_single_phase_pll1_abs1__out < _solarhouse2_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[_solarhouse2_inverter_controller_single_phase_pll1_kp_lut__curAddr]) {
                    _solarhouse2_inverter_controller_single_phase_pll1_kp_lut__rightIndex = _solarhouse2_inverter_controller_single_phase_pll1_kp_lut__curAddr;
                }
                else {
                    _solarhouse2_inverter_controller_single_phase_pll1_kp_lut__leftIndex = _solarhouse2_inverter_controller_single_phase_pll1_kp_lut__curAddr;
                }
                _solarhouse2_inverter_controller_single_phase_pll1_kp_lut__curAddr = (_solarhouse2_inverter_controller_single_phase_pll1_kp_lut__leftIndex + _solarhouse2_inverter_controller_single_phase_pll1_kp_lut__rightIndex) >> 1;
            }
            _solarhouse2_inverter_controller_single_phase_pll1_kp_lut__fraction = (_solarhouse2_inverter_controller_single_phase_pll1_abs1__out - _solarhouse2_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[_solarhouse2_inverter_controller_single_phase_pll1_kp_lut__leftIndex])
                / (_solarhouse2_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[_solarhouse2_inverter_controller_single_phase_pll1_kp_lut__leftIndex + 1] - _solarhouse2_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[_solarhouse2_inverter_controller_single_phase_pll1_kp_lut__leftIndex]);
        }
        else {
                            _solarhouse2_inverter_controller_single_phase_pll1_kp_lut__fraction = (_solarhouse2_inverter_controller_single_phase_pll1_abs1__out - _solarhouse2_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[98])
                    / (_solarhouse2_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[99] - _solarhouse2_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[98]);
                        _solarhouse2_inverter_controller_single_phase_pll1_kp_lut__leftIndex = 98;
        }

        _solarhouse2_inverter_controller_single_phase_pll1_kp_lut__value = (_solarhouse2_inverter_controller_single_phase_pll1_kp_lut__lut_table[_solarhouse2_inverter_controller_single_phase_pll1_kp_lut__leftIndex + 1] - _solarhouse2_inverter_controller_single_phase_pll1_kp_lut__lut_table[_solarhouse2_inverter_controller_single_phase_pll1_kp_lut__leftIndex])
            * _solarhouse2_inverter_controller_single_phase_pll1_kp_lut__fraction + _solarhouse2_inverter_controller_single_phase_pll1_kp_lut__lut_table[_solarhouse2_inverter_controller_single_phase_pll1_kp_lut__leftIndex];

    

             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Signal switch1
                                                             _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_signal_switch1__out = (_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__out < 0.5f) ? _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_one__out : _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_sum3__out;
            
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Kd_LUT
    
    
        if(_solarhouse3_inverter_controller_single_phase_pll1_abs1__out <= _solarhouse3_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[0]) {
                            _solarhouse3_inverter_controller_single_phase_pll1_kd_lut__fraction = (_solarhouse3_inverter_controller_single_phase_pll1_abs1__out - _solarhouse3_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[0])
                    / (_solarhouse3_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[1] - _solarhouse3_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[0]);
                        _solarhouse3_inverter_controller_single_phase_pll1_kd_lut__leftIndex = 0;
        }
        else if(_solarhouse3_inverter_controller_single_phase_pll1_abs1__out < _solarhouse3_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[99]) {
            _solarhouse3_inverter_controller_single_phase_pll1_kd_lut__curAddr = 99 >> 1;
            _solarhouse3_inverter_controller_single_phase_pll1_kd_lut__leftIndex = 0;
            _solarhouse3_inverter_controller_single_phase_pll1_kd_lut__rightIndex = 99;
            while (1 < _solarhouse3_inverter_controller_single_phase_pll1_kd_lut__rightIndex - _solarhouse3_inverter_controller_single_phase_pll1_kd_lut__leftIndex) {
                if (_solarhouse3_inverter_controller_single_phase_pll1_abs1__out < _solarhouse3_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[_solarhouse3_inverter_controller_single_phase_pll1_kd_lut__curAddr]) {
                    _solarhouse3_inverter_controller_single_phase_pll1_kd_lut__rightIndex = _solarhouse3_inverter_controller_single_phase_pll1_kd_lut__curAddr;
                }
                else {
                    _solarhouse3_inverter_controller_single_phase_pll1_kd_lut__leftIndex = _solarhouse3_inverter_controller_single_phase_pll1_kd_lut__curAddr;
                }
                _solarhouse3_inverter_controller_single_phase_pll1_kd_lut__curAddr = (_solarhouse3_inverter_controller_single_phase_pll1_kd_lut__leftIndex + _solarhouse3_inverter_controller_single_phase_pll1_kd_lut__rightIndex) >> 1;
            }
            _solarhouse3_inverter_controller_single_phase_pll1_kd_lut__fraction = (_solarhouse3_inverter_controller_single_phase_pll1_abs1__out - _solarhouse3_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[_solarhouse3_inverter_controller_single_phase_pll1_kd_lut__leftIndex])
                / (_solarhouse3_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[_solarhouse3_inverter_controller_single_phase_pll1_kd_lut__leftIndex + 1] - _solarhouse3_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[_solarhouse3_inverter_controller_single_phase_pll1_kd_lut__leftIndex]);
        }
        else {
                            _solarhouse3_inverter_controller_single_phase_pll1_kd_lut__fraction = (_solarhouse3_inverter_controller_single_phase_pll1_abs1__out - _solarhouse3_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[98])
                    / (_solarhouse3_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[99] - _solarhouse3_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[98]);
                        _solarhouse3_inverter_controller_single_phase_pll1_kd_lut__leftIndex = 98;
        }

        _solarhouse3_inverter_controller_single_phase_pll1_kd_lut__value = (_solarhouse3_inverter_controller_single_phase_pll1_kd_lut__lut_table[_solarhouse3_inverter_controller_single_phase_pll1_kd_lut__leftIndex + 1] - _solarhouse3_inverter_controller_single_phase_pll1_kd_lut__lut_table[_solarhouse3_inverter_controller_single_phase_pll1_kd_lut__leftIndex])
            * _solarhouse3_inverter_controller_single_phase_pll1_kd_lut__fraction + _solarhouse3_inverter_controller_single_phase_pll1_kd_lut__lut_table[_solarhouse3_inverter_controller_single_phase_pll1_kd_lut__leftIndex];

    

             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Ki_LUT
    
    
        if(_solarhouse3_inverter_controller_single_phase_pll1_abs1__out <= _solarhouse3_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[0]) {
                            _solarhouse3_inverter_controller_single_phase_pll1_ki_lut__fraction = (_solarhouse3_inverter_controller_single_phase_pll1_abs1__out - _solarhouse3_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[0])
                    / (_solarhouse3_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[1] - _solarhouse3_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[0]);
                        _solarhouse3_inverter_controller_single_phase_pll1_ki_lut__leftIndex = 0;
        }
        else if(_solarhouse3_inverter_controller_single_phase_pll1_abs1__out < _solarhouse3_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[99]) {
            _solarhouse3_inverter_controller_single_phase_pll1_ki_lut__curAddr = 99 >> 1;
            _solarhouse3_inverter_controller_single_phase_pll1_ki_lut__leftIndex = 0;
            _solarhouse3_inverter_controller_single_phase_pll1_ki_lut__rightIndex = 99;
            while (1 < _solarhouse3_inverter_controller_single_phase_pll1_ki_lut__rightIndex - _solarhouse3_inverter_controller_single_phase_pll1_ki_lut__leftIndex) {
                if (_solarhouse3_inverter_controller_single_phase_pll1_abs1__out < _solarhouse3_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[_solarhouse3_inverter_controller_single_phase_pll1_ki_lut__curAddr]) {
                    _solarhouse3_inverter_controller_single_phase_pll1_ki_lut__rightIndex = _solarhouse3_inverter_controller_single_phase_pll1_ki_lut__curAddr;
                }
                else {
                    _solarhouse3_inverter_controller_single_phase_pll1_ki_lut__leftIndex = _solarhouse3_inverter_controller_single_phase_pll1_ki_lut__curAddr;
                }
                _solarhouse3_inverter_controller_single_phase_pll1_ki_lut__curAddr = (_solarhouse3_inverter_controller_single_phase_pll1_ki_lut__leftIndex + _solarhouse3_inverter_controller_single_phase_pll1_ki_lut__rightIndex) >> 1;
            }
            _solarhouse3_inverter_controller_single_phase_pll1_ki_lut__fraction = (_solarhouse3_inverter_controller_single_phase_pll1_abs1__out - _solarhouse3_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[_solarhouse3_inverter_controller_single_phase_pll1_ki_lut__leftIndex])
                / (_solarhouse3_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[_solarhouse3_inverter_controller_single_phase_pll1_ki_lut__leftIndex + 1] - _solarhouse3_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[_solarhouse3_inverter_controller_single_phase_pll1_ki_lut__leftIndex]);
        }
        else {
                            _solarhouse3_inverter_controller_single_phase_pll1_ki_lut__fraction = (_solarhouse3_inverter_controller_single_phase_pll1_abs1__out - _solarhouse3_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[98])
                    / (_solarhouse3_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[99] - _solarhouse3_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[98]);
                        _solarhouse3_inverter_controller_single_phase_pll1_ki_lut__leftIndex = 98;
        }

        _solarhouse3_inverter_controller_single_phase_pll1_ki_lut__value = (_solarhouse3_inverter_controller_single_phase_pll1_ki_lut__lut_table[_solarhouse3_inverter_controller_single_phase_pll1_ki_lut__leftIndex + 1] - _solarhouse3_inverter_controller_single_phase_pll1_ki_lut__lut_table[_solarhouse3_inverter_controller_single_phase_pll1_ki_lut__leftIndex])
            * _solarhouse3_inverter_controller_single_phase_pll1_ki_lut__fraction + _solarhouse3_inverter_controller_single_phase_pll1_ki_lut__lut_table[_solarhouse3_inverter_controller_single_phase_pll1_ki_lut__leftIndex];

    

             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Kp_LUT
    
    
        if(_solarhouse3_inverter_controller_single_phase_pll1_abs1__out <= _solarhouse3_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[0]) {
                            _solarhouse3_inverter_controller_single_phase_pll1_kp_lut__fraction = (_solarhouse3_inverter_controller_single_phase_pll1_abs1__out - _solarhouse3_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[0])
                    / (_solarhouse3_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[1] - _solarhouse3_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[0]);
                        _solarhouse3_inverter_controller_single_phase_pll1_kp_lut__leftIndex = 0;
        }
        else if(_solarhouse3_inverter_controller_single_phase_pll1_abs1__out < _solarhouse3_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[99]) {
            _solarhouse3_inverter_controller_single_phase_pll1_kp_lut__curAddr = 99 >> 1;
            _solarhouse3_inverter_controller_single_phase_pll1_kp_lut__leftIndex = 0;
            _solarhouse3_inverter_controller_single_phase_pll1_kp_lut__rightIndex = 99;
            while (1 < _solarhouse3_inverter_controller_single_phase_pll1_kp_lut__rightIndex - _solarhouse3_inverter_controller_single_phase_pll1_kp_lut__leftIndex) {
                if (_solarhouse3_inverter_controller_single_phase_pll1_abs1__out < _solarhouse3_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[_solarhouse3_inverter_controller_single_phase_pll1_kp_lut__curAddr]) {
                    _solarhouse3_inverter_controller_single_phase_pll1_kp_lut__rightIndex = _solarhouse3_inverter_controller_single_phase_pll1_kp_lut__curAddr;
                }
                else {
                    _solarhouse3_inverter_controller_single_phase_pll1_kp_lut__leftIndex = _solarhouse3_inverter_controller_single_phase_pll1_kp_lut__curAddr;
                }
                _solarhouse3_inverter_controller_single_phase_pll1_kp_lut__curAddr = (_solarhouse3_inverter_controller_single_phase_pll1_kp_lut__leftIndex + _solarhouse3_inverter_controller_single_phase_pll1_kp_lut__rightIndex) >> 1;
            }
            _solarhouse3_inverter_controller_single_phase_pll1_kp_lut__fraction = (_solarhouse3_inverter_controller_single_phase_pll1_abs1__out - _solarhouse3_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[_solarhouse3_inverter_controller_single_phase_pll1_kp_lut__leftIndex])
                / (_solarhouse3_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[_solarhouse3_inverter_controller_single_phase_pll1_kp_lut__leftIndex + 1] - _solarhouse3_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[_solarhouse3_inverter_controller_single_phase_pll1_kp_lut__leftIndex]);
        }
        else {
                            _solarhouse3_inverter_controller_single_phase_pll1_kp_lut__fraction = (_solarhouse3_inverter_controller_single_phase_pll1_abs1__out - _solarhouse3_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[98])
                    / (_solarhouse3_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[99] - _solarhouse3_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[98]);
                        _solarhouse3_inverter_controller_single_phase_pll1_kp_lut__leftIndex = 98;
        }

        _solarhouse3_inverter_controller_single_phase_pll1_kp_lut__value = (_solarhouse3_inverter_controller_single_phase_pll1_kp_lut__lut_table[_solarhouse3_inverter_controller_single_phase_pll1_kp_lut__leftIndex + 1] - _solarhouse3_inverter_controller_single_phase_pll1_kp_lut__lut_table[_solarhouse3_inverter_controller_single_phase_pll1_kp_lut__leftIndex])
            * _solarhouse3_inverter_controller_single_phase_pll1_kp_lut__fraction + _solarhouse3_inverter_controller_single_phase_pll1_kp_lut__lut_table[_solarhouse3_inverter_controller_single_phase_pll1_kp_lut__leftIndex];

    

             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Signal switch1
                                                             _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_signal_switch1__out = (_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__out < 0.5f) ? _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_one__out : _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_sum3__out;
            
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Kd_LUT
    
    
        if(_solarhouse4_inverter_controller_single_phase_pll1_abs1__out <= _solarhouse4_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[0]) {
                            _solarhouse4_inverter_controller_single_phase_pll1_kd_lut__fraction = (_solarhouse4_inverter_controller_single_phase_pll1_abs1__out - _solarhouse4_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[0])
                    / (_solarhouse4_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[1] - _solarhouse4_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[0]);
                        _solarhouse4_inverter_controller_single_phase_pll1_kd_lut__leftIndex = 0;
        }
        else if(_solarhouse4_inverter_controller_single_phase_pll1_abs1__out < _solarhouse4_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[99]) {
            _solarhouse4_inverter_controller_single_phase_pll1_kd_lut__curAddr = 99 >> 1;
            _solarhouse4_inverter_controller_single_phase_pll1_kd_lut__leftIndex = 0;
            _solarhouse4_inverter_controller_single_phase_pll1_kd_lut__rightIndex = 99;
            while (1 < _solarhouse4_inverter_controller_single_phase_pll1_kd_lut__rightIndex - _solarhouse4_inverter_controller_single_phase_pll1_kd_lut__leftIndex) {
                if (_solarhouse4_inverter_controller_single_phase_pll1_abs1__out < _solarhouse4_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[_solarhouse4_inverter_controller_single_phase_pll1_kd_lut__curAddr]) {
                    _solarhouse4_inverter_controller_single_phase_pll1_kd_lut__rightIndex = _solarhouse4_inverter_controller_single_phase_pll1_kd_lut__curAddr;
                }
                else {
                    _solarhouse4_inverter_controller_single_phase_pll1_kd_lut__leftIndex = _solarhouse4_inverter_controller_single_phase_pll1_kd_lut__curAddr;
                }
                _solarhouse4_inverter_controller_single_phase_pll1_kd_lut__curAddr = (_solarhouse4_inverter_controller_single_phase_pll1_kd_lut__leftIndex + _solarhouse4_inverter_controller_single_phase_pll1_kd_lut__rightIndex) >> 1;
            }
            _solarhouse4_inverter_controller_single_phase_pll1_kd_lut__fraction = (_solarhouse4_inverter_controller_single_phase_pll1_abs1__out - _solarhouse4_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[_solarhouse4_inverter_controller_single_phase_pll1_kd_lut__leftIndex])
                / (_solarhouse4_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[_solarhouse4_inverter_controller_single_phase_pll1_kd_lut__leftIndex + 1] - _solarhouse4_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[_solarhouse4_inverter_controller_single_phase_pll1_kd_lut__leftIndex]);
        }
        else {
                            _solarhouse4_inverter_controller_single_phase_pll1_kd_lut__fraction = (_solarhouse4_inverter_controller_single_phase_pll1_abs1__out - _solarhouse4_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[98])
                    / (_solarhouse4_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[99] - _solarhouse4_inverter_controller_single_phase_pll1_kd_lut__lut_addrs[98]);
                        _solarhouse4_inverter_controller_single_phase_pll1_kd_lut__leftIndex = 98;
        }

        _solarhouse4_inverter_controller_single_phase_pll1_kd_lut__value = (_solarhouse4_inverter_controller_single_phase_pll1_kd_lut__lut_table[_solarhouse4_inverter_controller_single_phase_pll1_kd_lut__leftIndex + 1] - _solarhouse4_inverter_controller_single_phase_pll1_kd_lut__lut_table[_solarhouse4_inverter_controller_single_phase_pll1_kd_lut__leftIndex])
            * _solarhouse4_inverter_controller_single_phase_pll1_kd_lut__fraction + _solarhouse4_inverter_controller_single_phase_pll1_kd_lut__lut_table[_solarhouse4_inverter_controller_single_phase_pll1_kd_lut__leftIndex];

    

             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Ki_LUT
    
    
        if(_solarhouse4_inverter_controller_single_phase_pll1_abs1__out <= _solarhouse4_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[0]) {
                            _solarhouse4_inverter_controller_single_phase_pll1_ki_lut__fraction = (_solarhouse4_inverter_controller_single_phase_pll1_abs1__out - _solarhouse4_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[0])
                    / (_solarhouse4_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[1] - _solarhouse4_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[0]);
                        _solarhouse4_inverter_controller_single_phase_pll1_ki_lut__leftIndex = 0;
        }
        else if(_solarhouse4_inverter_controller_single_phase_pll1_abs1__out < _solarhouse4_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[99]) {
            _solarhouse4_inverter_controller_single_phase_pll1_ki_lut__curAddr = 99 >> 1;
            _solarhouse4_inverter_controller_single_phase_pll1_ki_lut__leftIndex = 0;
            _solarhouse4_inverter_controller_single_phase_pll1_ki_lut__rightIndex = 99;
            while (1 < _solarhouse4_inverter_controller_single_phase_pll1_ki_lut__rightIndex - _solarhouse4_inverter_controller_single_phase_pll1_ki_lut__leftIndex) {
                if (_solarhouse4_inverter_controller_single_phase_pll1_abs1__out < _solarhouse4_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[_solarhouse4_inverter_controller_single_phase_pll1_ki_lut__curAddr]) {
                    _solarhouse4_inverter_controller_single_phase_pll1_ki_lut__rightIndex = _solarhouse4_inverter_controller_single_phase_pll1_ki_lut__curAddr;
                }
                else {
                    _solarhouse4_inverter_controller_single_phase_pll1_ki_lut__leftIndex = _solarhouse4_inverter_controller_single_phase_pll1_ki_lut__curAddr;
                }
                _solarhouse4_inverter_controller_single_phase_pll1_ki_lut__curAddr = (_solarhouse4_inverter_controller_single_phase_pll1_ki_lut__leftIndex + _solarhouse4_inverter_controller_single_phase_pll1_ki_lut__rightIndex) >> 1;
            }
            _solarhouse4_inverter_controller_single_phase_pll1_ki_lut__fraction = (_solarhouse4_inverter_controller_single_phase_pll1_abs1__out - _solarhouse4_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[_solarhouse4_inverter_controller_single_phase_pll1_ki_lut__leftIndex])
                / (_solarhouse4_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[_solarhouse4_inverter_controller_single_phase_pll1_ki_lut__leftIndex + 1] - _solarhouse4_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[_solarhouse4_inverter_controller_single_phase_pll1_ki_lut__leftIndex]);
        }
        else {
                            _solarhouse4_inverter_controller_single_phase_pll1_ki_lut__fraction = (_solarhouse4_inverter_controller_single_phase_pll1_abs1__out - _solarhouse4_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[98])
                    / (_solarhouse4_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[99] - _solarhouse4_inverter_controller_single_phase_pll1_ki_lut__lut_addrs[98]);
                        _solarhouse4_inverter_controller_single_phase_pll1_ki_lut__leftIndex = 98;
        }

        _solarhouse4_inverter_controller_single_phase_pll1_ki_lut__value = (_solarhouse4_inverter_controller_single_phase_pll1_ki_lut__lut_table[_solarhouse4_inverter_controller_single_phase_pll1_ki_lut__leftIndex + 1] - _solarhouse4_inverter_controller_single_phase_pll1_ki_lut__lut_table[_solarhouse4_inverter_controller_single_phase_pll1_ki_lut__leftIndex])
            * _solarhouse4_inverter_controller_single_phase_pll1_ki_lut__fraction + _solarhouse4_inverter_controller_single_phase_pll1_ki_lut__lut_table[_solarhouse4_inverter_controller_single_phase_pll1_ki_lut__leftIndex];

    

             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Kp_LUT
    
    
        if(_solarhouse4_inverter_controller_single_phase_pll1_abs1__out <= _solarhouse4_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[0]) {
                            _solarhouse4_inverter_controller_single_phase_pll1_kp_lut__fraction = (_solarhouse4_inverter_controller_single_phase_pll1_abs1__out - _solarhouse4_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[0])
                    / (_solarhouse4_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[1] - _solarhouse4_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[0]);
                        _solarhouse4_inverter_controller_single_phase_pll1_kp_lut__leftIndex = 0;
        }
        else if(_solarhouse4_inverter_controller_single_phase_pll1_abs1__out < _solarhouse4_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[99]) {
            _solarhouse4_inverter_controller_single_phase_pll1_kp_lut__curAddr = 99 >> 1;
            _solarhouse4_inverter_controller_single_phase_pll1_kp_lut__leftIndex = 0;
            _solarhouse4_inverter_controller_single_phase_pll1_kp_lut__rightIndex = 99;
            while (1 < _solarhouse4_inverter_controller_single_phase_pll1_kp_lut__rightIndex - _solarhouse4_inverter_controller_single_phase_pll1_kp_lut__leftIndex) {
                if (_solarhouse4_inverter_controller_single_phase_pll1_abs1__out < _solarhouse4_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[_solarhouse4_inverter_controller_single_phase_pll1_kp_lut__curAddr]) {
                    _solarhouse4_inverter_controller_single_phase_pll1_kp_lut__rightIndex = _solarhouse4_inverter_controller_single_phase_pll1_kp_lut__curAddr;
                }
                else {
                    _solarhouse4_inverter_controller_single_phase_pll1_kp_lut__leftIndex = _solarhouse4_inverter_controller_single_phase_pll1_kp_lut__curAddr;
                }
                _solarhouse4_inverter_controller_single_phase_pll1_kp_lut__curAddr = (_solarhouse4_inverter_controller_single_phase_pll1_kp_lut__leftIndex + _solarhouse4_inverter_controller_single_phase_pll1_kp_lut__rightIndex) >> 1;
            }
            _solarhouse4_inverter_controller_single_phase_pll1_kp_lut__fraction = (_solarhouse4_inverter_controller_single_phase_pll1_abs1__out - _solarhouse4_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[_solarhouse4_inverter_controller_single_phase_pll1_kp_lut__leftIndex])
                / (_solarhouse4_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[_solarhouse4_inverter_controller_single_phase_pll1_kp_lut__leftIndex + 1] - _solarhouse4_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[_solarhouse4_inverter_controller_single_phase_pll1_kp_lut__leftIndex]);
        }
        else {
                            _solarhouse4_inverter_controller_single_phase_pll1_kp_lut__fraction = (_solarhouse4_inverter_controller_single_phase_pll1_abs1__out - _solarhouse4_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[98])
                    / (_solarhouse4_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[99] - _solarhouse4_inverter_controller_single_phase_pll1_kp_lut__lut_addrs[98]);
                        _solarhouse4_inverter_controller_single_phase_pll1_kp_lut__leftIndex = 98;
        }

        _solarhouse4_inverter_controller_single_phase_pll1_kp_lut__value = (_solarhouse4_inverter_controller_single_phase_pll1_kp_lut__lut_table[_solarhouse4_inverter_controller_single_phase_pll1_kp_lut__leftIndex + 1] - _solarhouse4_inverter_controller_single_phase_pll1_kp_lut__lut_table[_solarhouse4_inverter_controller_single_phase_pll1_kp_lut__leftIndex])
            * _solarhouse4_inverter_controller_single_phase_pll1_kp_lut__fraction + _solarhouse4_inverter_controller_single_phase_pll1_kp_lut__lut_table[_solarhouse4_inverter_controller_single_phase_pll1_kp_lut__leftIndex];

    

             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Et_sqr_res
          HIL_OutAO(0x4013, (float)_ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_signal_switch1__out);
  
             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Product1
    _ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product1__out = (_ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_sum3__out)*1.0/(_ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_signal_switch1__out);

             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Product2
    _ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product2__out = (_ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_sum4__out)*1.0/(_ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_signal_switch1__out);

             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Product6
    _ess_inverter_controller_single_phase_pll1_product6__out = (_ess_inverter_controller_single_phase_pll1_kd_lut__value * _ess_inverter_controller_single_phase_pll1_product8__out);

             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Product5
    _ess_inverter_controller_single_phase_pll1_product5__out = (_ess_inverter_controller_single_phase_pll1_ki_lut__value * _ess_inverter_controller_single_phase_pll1_product8__out);

             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Product7
    _ess_inverter_controller_single_phase_pll1_product7__out = (_ess_inverter_controller_single_phase_pll1_kp_lut__value * _ess_inverter_controller_single_phase_pll1_product8__out);

             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Et_sqr_res
          HIL_OutAO(0x402e, (float)_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_signal_switch1__out);
  
             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Product1
    _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product1__out = (_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_sum3__out)*1.0/(_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_signal_switch1__out);

             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Product2
    _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product2__out = (_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_sum4__out)*1.0/(_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_signal_switch1__out);

             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Product6
    _solarhouse1_inverter_controller_single_phase_pll1_product6__out = (_solarhouse1_inverter_controller_single_phase_pll1_kd_lut__value * _solarhouse1_inverter_controller_single_phase_pll1_product8__out);

             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Product5
    _solarhouse1_inverter_controller_single_phase_pll1_product5__out = (_solarhouse1_inverter_controller_single_phase_pll1_ki_lut__value * _solarhouse1_inverter_controller_single_phase_pll1_product8__out);

             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Product7
    _solarhouse1_inverter_controller_single_phase_pll1_product7__out = (_solarhouse1_inverter_controller_single_phase_pll1_kp_lut__value * _solarhouse1_inverter_controller_single_phase_pll1_product8__out);

             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Et_sqr_res
          HIL_OutAO(0x4048, (float)_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_signal_switch1__out);
  
             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Product1
    _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product1__out = (_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_sum3__out)*1.0/(_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_signal_switch1__out);

             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Product2
    _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product2__out = (_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_sum4__out)*1.0/(_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_signal_switch1__out);

             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Product6
    _solarhouse2_inverter_controller_single_phase_pll1_product6__out = (_solarhouse2_inverter_controller_single_phase_pll1_kd_lut__value * _solarhouse2_inverter_controller_single_phase_pll1_product8__out);

             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Product5
    _solarhouse2_inverter_controller_single_phase_pll1_product5__out = (_solarhouse2_inverter_controller_single_phase_pll1_ki_lut__value * _solarhouse2_inverter_controller_single_phase_pll1_product8__out);

             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Product7
    _solarhouse2_inverter_controller_single_phase_pll1_product7__out = (_solarhouse2_inverter_controller_single_phase_pll1_kp_lut__value * _solarhouse2_inverter_controller_single_phase_pll1_product8__out);

             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Et_sqr_res
          HIL_OutAO(0x4062, (float)_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_signal_switch1__out);
  
             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Product1
    _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product1__out = (_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_sum3__out)*1.0/(_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_signal_switch1__out);

             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Product2
    _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product2__out = (_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_sum4__out)*1.0/(_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_signal_switch1__out);

             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Product6
    _solarhouse3_inverter_controller_single_phase_pll1_product6__out = (_solarhouse3_inverter_controller_single_phase_pll1_kd_lut__value * _solarhouse3_inverter_controller_single_phase_pll1_product8__out);

             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Product5
    _solarhouse3_inverter_controller_single_phase_pll1_product5__out = (_solarhouse3_inverter_controller_single_phase_pll1_ki_lut__value * _solarhouse3_inverter_controller_single_phase_pll1_product8__out);

             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Product7
    _solarhouse3_inverter_controller_single_phase_pll1_product7__out = (_solarhouse3_inverter_controller_single_phase_pll1_kp_lut__value * _solarhouse3_inverter_controller_single_phase_pll1_product8__out);

             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Et_sqr_res
          HIL_OutAO(0x407c, (float)_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_signal_switch1__out);
  
             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Product1
    _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product1__out = (_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_sum3__out)*1.0/(_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_signal_switch1__out);

             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Product2
    _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product2__out = (_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_sum4__out)*1.0/(_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_signal_switch1__out);

             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Product6
    _solarhouse4_inverter_controller_single_phase_pll1_product6__out = (_solarhouse4_inverter_controller_single_phase_pll1_kd_lut__value * _solarhouse4_inverter_controller_single_phase_pll1_product8__out);

             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Product5
    _solarhouse4_inverter_controller_single_phase_pll1_product5__out = (_solarhouse4_inverter_controller_single_phase_pll1_ki_lut__value * _solarhouse4_inverter_controller_single_phase_pll1_product8__out);

             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Product7
    _solarhouse4_inverter_controller_single_phase_pll1_product7__out = (_solarhouse4_inverter_controller_single_phase_pll1_kp_lut__value * _solarhouse4_inverter_controller_single_phase_pll1_product8__out);

             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.Iq_ref
          HIL_OutAO(0x400e, (float)_ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product1__out);
  
             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Sum9
                                              _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum9__out = _ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product1__out-_ess_inverter_controller_gain31__out;    
  
             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.Id_ref
          HIL_OutAO(0x400d, (float)_ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product2__out);
  
             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Sum8
                                              _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum8__out = _ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product2__out-_ess_inverter_controller_gain30__out;    
  
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Discrete Transfer Function1
                            X_UnInt32 _ess_inverter_controller_single_phase_pll1_discrete_transfer_function1__i;    
                                                                                          

                _ess_inverter_controller_single_phase_pll1_discrete_transfer_function1__a_sum = 0.0f;
        _ess_inverter_controller_single_phase_pll1_discrete_transfer_function1__b_sum = 0.0f;
        _ess_inverter_controller_single_phase_pll1_discrete_transfer_function1__delay_line_in = 0.0f;
                    for (_ess_inverter_controller_single_phase_pll1_discrete_transfer_function1__i = 0; _ess_inverter_controller_single_phase_pll1_discrete_transfer_function1__i < 1; _ess_inverter_controller_single_phase_pll1_discrete_transfer_function1__i++){
                                     _ess_inverter_controller_single_phase_pll1_discrete_transfer_function1__b_sum += _ess_inverter_controller_single_phase_pll1_discrete_transfer_function1__b_coeff[_ess_inverter_controller_single_phase_pll1_discrete_transfer_function1__i+1] * _ess_inverter_controller_single_phase_pll1_discrete_transfer_function1__states[_ess_inverter_controller_single_phase_pll1_discrete_transfer_function1__i];
                            }
                                    _ess_inverter_controller_single_phase_pll1_discrete_transfer_function1__a_sum += _ess_inverter_controller_single_phase_pll1_discrete_transfer_function1__states[0] * _ess_inverter_controller_single_phase_pll1_discrete_transfer_function1__a_coeff[1];
                            _ess_inverter_controller_single_phase_pll1_discrete_transfer_function1__delay_line_in = _ess_inverter_controller_single_phase_pll1_product6__out - _ess_inverter_controller_single_phase_pll1_discrete_transfer_function1__a_sum;
                            _ess_inverter_controller_single_phase_pll1_discrete_transfer_function1__b_sum += _ess_inverter_controller_single_phase_pll1_discrete_transfer_function1__b_coeff[0] * _ess_inverter_controller_single_phase_pll1_discrete_transfer_function1__delay_line_in;
                _ess_inverter_controller_single_phase_pll1_discrete_transfer_function1__out = _ess_inverter_controller_single_phase_pll1_discrete_transfer_function1__b_sum;

    
             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.Iq_ref
          HIL_OutAO(0x4029, (float)_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product1__out);
  
             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Sum9
                                              _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum9__out = _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product1__out-_solarhouse1_inverter_controller_gain31__out;    
  
             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.Id_ref
          HIL_OutAO(0x4028, (float)_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product2__out);
  
             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Sum8
                                              _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum8__out = _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product2__out-_solarhouse1_inverter_controller_gain30__out;    
  
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Discrete Transfer Function1
                            X_UnInt32 _solarhouse1_inverter_controller_single_phase_pll1_discrete_transfer_function1__i;    
                                                                                          

                _solarhouse1_inverter_controller_single_phase_pll1_discrete_transfer_function1__a_sum = 0.0f;
        _solarhouse1_inverter_controller_single_phase_pll1_discrete_transfer_function1__b_sum = 0.0f;
        _solarhouse1_inverter_controller_single_phase_pll1_discrete_transfer_function1__delay_line_in = 0.0f;
                    for (_solarhouse1_inverter_controller_single_phase_pll1_discrete_transfer_function1__i = 0; _solarhouse1_inverter_controller_single_phase_pll1_discrete_transfer_function1__i < 1; _solarhouse1_inverter_controller_single_phase_pll1_discrete_transfer_function1__i++){
                                     _solarhouse1_inverter_controller_single_phase_pll1_discrete_transfer_function1__b_sum += _solarhouse1_inverter_controller_single_phase_pll1_discrete_transfer_function1__b_coeff[_solarhouse1_inverter_controller_single_phase_pll1_discrete_transfer_function1__i+1] * _solarhouse1_inverter_controller_single_phase_pll1_discrete_transfer_function1__states[_solarhouse1_inverter_controller_single_phase_pll1_discrete_transfer_function1__i];
                            }
                                    _solarhouse1_inverter_controller_single_phase_pll1_discrete_transfer_function1__a_sum += _solarhouse1_inverter_controller_single_phase_pll1_discrete_transfer_function1__states[0] * _solarhouse1_inverter_controller_single_phase_pll1_discrete_transfer_function1__a_coeff[1];
                            _solarhouse1_inverter_controller_single_phase_pll1_discrete_transfer_function1__delay_line_in = _solarhouse1_inverter_controller_single_phase_pll1_product6__out - _solarhouse1_inverter_controller_single_phase_pll1_discrete_transfer_function1__a_sum;
                            _solarhouse1_inverter_controller_single_phase_pll1_discrete_transfer_function1__b_sum += _solarhouse1_inverter_controller_single_phase_pll1_discrete_transfer_function1__b_coeff[0] * _solarhouse1_inverter_controller_single_phase_pll1_discrete_transfer_function1__delay_line_in;
                _solarhouse1_inverter_controller_single_phase_pll1_discrete_transfer_function1__out = _solarhouse1_inverter_controller_single_phase_pll1_discrete_transfer_function1__b_sum;

    
             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.Iq_ref
          HIL_OutAO(0x4043, (float)_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product1__out);
  
             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Sum9
                                              _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum9__out = _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product1__out-_solarhouse2_inverter_controller_gain31__out;    
  
             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.Id_ref
          HIL_OutAO(0x4042, (float)_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product2__out);
  
             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Sum8
                                              _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum8__out = _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product2__out-_solarhouse2_inverter_controller_gain30__out;    
  
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Discrete Transfer Function1
                            X_UnInt32 _solarhouse2_inverter_controller_single_phase_pll1_discrete_transfer_function1__i;    
                                                                                          

                _solarhouse2_inverter_controller_single_phase_pll1_discrete_transfer_function1__a_sum = 0.0f;
        _solarhouse2_inverter_controller_single_phase_pll1_discrete_transfer_function1__b_sum = 0.0f;
        _solarhouse2_inverter_controller_single_phase_pll1_discrete_transfer_function1__delay_line_in = 0.0f;
                    for (_solarhouse2_inverter_controller_single_phase_pll1_discrete_transfer_function1__i = 0; _solarhouse2_inverter_controller_single_phase_pll1_discrete_transfer_function1__i < 1; _solarhouse2_inverter_controller_single_phase_pll1_discrete_transfer_function1__i++){
                                     _solarhouse2_inverter_controller_single_phase_pll1_discrete_transfer_function1__b_sum += _solarhouse2_inverter_controller_single_phase_pll1_discrete_transfer_function1__b_coeff[_solarhouse2_inverter_controller_single_phase_pll1_discrete_transfer_function1__i+1] * _solarhouse2_inverter_controller_single_phase_pll1_discrete_transfer_function1__states[_solarhouse2_inverter_controller_single_phase_pll1_discrete_transfer_function1__i];
                            }
                                    _solarhouse2_inverter_controller_single_phase_pll1_discrete_transfer_function1__a_sum += _solarhouse2_inverter_controller_single_phase_pll1_discrete_transfer_function1__states[0] * _solarhouse2_inverter_controller_single_phase_pll1_discrete_transfer_function1__a_coeff[1];
                            _solarhouse2_inverter_controller_single_phase_pll1_discrete_transfer_function1__delay_line_in = _solarhouse2_inverter_controller_single_phase_pll1_product6__out - _solarhouse2_inverter_controller_single_phase_pll1_discrete_transfer_function1__a_sum;
                            _solarhouse2_inverter_controller_single_phase_pll1_discrete_transfer_function1__b_sum += _solarhouse2_inverter_controller_single_phase_pll1_discrete_transfer_function1__b_coeff[0] * _solarhouse2_inverter_controller_single_phase_pll1_discrete_transfer_function1__delay_line_in;
                _solarhouse2_inverter_controller_single_phase_pll1_discrete_transfer_function1__out = _solarhouse2_inverter_controller_single_phase_pll1_discrete_transfer_function1__b_sum;

    
             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.Iq_ref
          HIL_OutAO(0x405d, (float)_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product1__out);
  
             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Sum9
                                              _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum9__out = _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product1__out-_solarhouse3_inverter_controller_gain31__out;    
  
             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.Id_ref
          HIL_OutAO(0x405c, (float)_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product2__out);
  
             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Sum8
                                              _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum8__out = _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product2__out-_solarhouse3_inverter_controller_gain30__out;    
  
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Discrete Transfer Function1
                            X_UnInt32 _solarhouse3_inverter_controller_single_phase_pll1_discrete_transfer_function1__i;    
                                                                                          

                _solarhouse3_inverter_controller_single_phase_pll1_discrete_transfer_function1__a_sum = 0.0f;
        _solarhouse3_inverter_controller_single_phase_pll1_discrete_transfer_function1__b_sum = 0.0f;
        _solarhouse3_inverter_controller_single_phase_pll1_discrete_transfer_function1__delay_line_in = 0.0f;
                    for (_solarhouse3_inverter_controller_single_phase_pll1_discrete_transfer_function1__i = 0; _solarhouse3_inverter_controller_single_phase_pll1_discrete_transfer_function1__i < 1; _solarhouse3_inverter_controller_single_phase_pll1_discrete_transfer_function1__i++){
                                     _solarhouse3_inverter_controller_single_phase_pll1_discrete_transfer_function1__b_sum += _solarhouse3_inverter_controller_single_phase_pll1_discrete_transfer_function1__b_coeff[_solarhouse3_inverter_controller_single_phase_pll1_discrete_transfer_function1__i+1] * _solarhouse3_inverter_controller_single_phase_pll1_discrete_transfer_function1__states[_solarhouse3_inverter_controller_single_phase_pll1_discrete_transfer_function1__i];
                            }
                                    _solarhouse3_inverter_controller_single_phase_pll1_discrete_transfer_function1__a_sum += _solarhouse3_inverter_controller_single_phase_pll1_discrete_transfer_function1__states[0] * _solarhouse3_inverter_controller_single_phase_pll1_discrete_transfer_function1__a_coeff[1];
                            _solarhouse3_inverter_controller_single_phase_pll1_discrete_transfer_function1__delay_line_in = _solarhouse3_inverter_controller_single_phase_pll1_product6__out - _solarhouse3_inverter_controller_single_phase_pll1_discrete_transfer_function1__a_sum;
                            _solarhouse3_inverter_controller_single_phase_pll1_discrete_transfer_function1__b_sum += _solarhouse3_inverter_controller_single_phase_pll1_discrete_transfer_function1__b_coeff[0] * _solarhouse3_inverter_controller_single_phase_pll1_discrete_transfer_function1__delay_line_in;
                _solarhouse3_inverter_controller_single_phase_pll1_discrete_transfer_function1__out = _solarhouse3_inverter_controller_single_phase_pll1_discrete_transfer_function1__b_sum;

    
             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.Iq_ref
          HIL_OutAO(0x4077, (float)_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product1__out);
  
             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Sum9
                                              _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum9__out = _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product1__out-_solarhouse4_inverter_controller_gain31__out;    
  
             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.Id_ref
          HIL_OutAO(0x4076, (float)_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product2__out);
  
             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Sum8
                                              _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum8__out = _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_product2__out-_solarhouse4_inverter_controller_gain30__out;    
  
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Discrete Transfer Function1
                            X_UnInt32 _solarhouse4_inverter_controller_single_phase_pll1_discrete_transfer_function1__i;    
                                                                                          

                _solarhouse4_inverter_controller_single_phase_pll1_discrete_transfer_function1__a_sum = 0.0f;
        _solarhouse4_inverter_controller_single_phase_pll1_discrete_transfer_function1__b_sum = 0.0f;
        _solarhouse4_inverter_controller_single_phase_pll1_discrete_transfer_function1__delay_line_in = 0.0f;
                    for (_solarhouse4_inverter_controller_single_phase_pll1_discrete_transfer_function1__i = 0; _solarhouse4_inverter_controller_single_phase_pll1_discrete_transfer_function1__i < 1; _solarhouse4_inverter_controller_single_phase_pll1_discrete_transfer_function1__i++){
                                     _solarhouse4_inverter_controller_single_phase_pll1_discrete_transfer_function1__b_sum += _solarhouse4_inverter_controller_single_phase_pll1_discrete_transfer_function1__b_coeff[_solarhouse4_inverter_controller_single_phase_pll1_discrete_transfer_function1__i+1] * _solarhouse4_inverter_controller_single_phase_pll1_discrete_transfer_function1__states[_solarhouse4_inverter_controller_single_phase_pll1_discrete_transfer_function1__i];
                            }
                                    _solarhouse4_inverter_controller_single_phase_pll1_discrete_transfer_function1__a_sum += _solarhouse4_inverter_controller_single_phase_pll1_discrete_transfer_function1__states[0] * _solarhouse4_inverter_controller_single_phase_pll1_discrete_transfer_function1__a_coeff[1];
                            _solarhouse4_inverter_controller_single_phase_pll1_discrete_transfer_function1__delay_line_in = _solarhouse4_inverter_controller_single_phase_pll1_product6__out - _solarhouse4_inverter_controller_single_phase_pll1_discrete_transfer_function1__a_sum;
                            _solarhouse4_inverter_controller_single_phase_pll1_discrete_transfer_function1__b_sum += _solarhouse4_inverter_controller_single_phase_pll1_discrete_transfer_function1__b_coeff[0] * _solarhouse4_inverter_controller_single_phase_pll1_discrete_transfer_function1__delay_line_in;
                _solarhouse4_inverter_controller_single_phase_pll1_discrete_transfer_function1__out = _solarhouse4_inverter_controller_single_phase_pll1_discrete_transfer_function1__b_sum;

    
             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.PID controller2
                                _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__pi_reg_out_int = _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__integrator_state + 1.3194444444444446 * _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum9__out;
    

            if (_ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__pi_reg_out_int < -1.0)
            _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__av_active = 1;
        else if (_ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__pi_reg_out_int > 1.0)
            _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__av_active = 1;
        else
            _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__av_active = 0;

        _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__out = MIN(MAX(_ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__pi_reg_out_int, -1.0), 1.0);
    
             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.iq_err
          HIL_OutAO(0x4012, (float)_ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum9__out);
  
             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.PID controller1
                                _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__pi_reg_out_int = _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__integrator_state + 1.3194444444444446 * _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum8__out;
    

            if (_ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__pi_reg_out_int < -1.0)
            _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__av_active = 1;
        else if (_ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__pi_reg_out_int > 1.0)
            _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__av_active = 1;
        else
            _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__av_active = 0;

        _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__out = MIN(MAX(_ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__pi_reg_out_int, -1.0), 1.0);
    
             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.id_err
          HIL_OutAO(0x4011, (float)_ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum8__out);
  
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Sum8
                                                        _ess_inverter_controller_single_phase_pll1_sum8__out = _ess_inverter_controller_single_phase_pll1_product7__out+_ess_inverter_controller_single_phase_pll1_i__out+_ess_inverter_controller_single_phase_pll1_discrete_transfer_function1__out;    
  
             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.PID controller2
                                _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__pi_reg_out_int = _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__integrator_state + 1.3194444444444446 * _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum9__out;
    

            if (_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__pi_reg_out_int < -1.0)
            _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__av_active = 1;
        else if (_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__pi_reg_out_int > 1.0)
            _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__av_active = 1;
        else
            _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__av_active = 0;

        _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__out = MIN(MAX(_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__pi_reg_out_int, -1.0), 1.0);
    
             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.iq_err
          HIL_OutAO(0x402d, (float)_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum9__out);
  
             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.PID controller1
                                _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__pi_reg_out_int = _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__integrator_state + 1.3194444444444446 * _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum8__out;
    

            if (_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__pi_reg_out_int < -1.0)
            _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__av_active = 1;
        else if (_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__pi_reg_out_int > 1.0)
            _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__av_active = 1;
        else
            _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__av_active = 0;

        _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__out = MIN(MAX(_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__pi_reg_out_int, -1.0), 1.0);
    
             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.id_err
          HIL_OutAO(0x402c, (float)_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum8__out);
  
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Sum8
                                                        _solarhouse1_inverter_controller_single_phase_pll1_sum8__out = _solarhouse1_inverter_controller_single_phase_pll1_product7__out+_solarhouse1_inverter_controller_single_phase_pll1_i__out+_solarhouse1_inverter_controller_single_phase_pll1_discrete_transfer_function1__out;    
  
             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.PID controller2
                                _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__pi_reg_out_int = _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__integrator_state + 1.3194444444444446 * _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum9__out;
    

            if (_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__pi_reg_out_int < -1.0)
            _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__av_active = 1;
        else if (_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__pi_reg_out_int > 1.0)
            _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__av_active = 1;
        else
            _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__av_active = 0;

        _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__out = MIN(MAX(_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__pi_reg_out_int, -1.0), 1.0);
    
             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.iq_err
          HIL_OutAO(0x4047, (float)_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum9__out);
  
             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.PID controller1
                                _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__pi_reg_out_int = _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__integrator_state + 1.3194444444444446 * _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum8__out;
    

            if (_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__pi_reg_out_int < -1.0)
            _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__av_active = 1;
        else if (_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__pi_reg_out_int > 1.0)
            _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__av_active = 1;
        else
            _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__av_active = 0;

        _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__out = MIN(MAX(_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__pi_reg_out_int, -1.0), 1.0);
    
             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.id_err
          HIL_OutAO(0x4046, (float)_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum8__out);
  
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Sum8
                                                        _solarhouse2_inverter_controller_single_phase_pll1_sum8__out = _solarhouse2_inverter_controller_single_phase_pll1_product7__out+_solarhouse2_inverter_controller_single_phase_pll1_i__out+_solarhouse2_inverter_controller_single_phase_pll1_discrete_transfer_function1__out;    
  
             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.PID controller2
                                _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__pi_reg_out_int = _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__integrator_state + 1.3194444444444446 * _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum9__out;
    

            if (_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__pi_reg_out_int < -1.0)
            _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__av_active = 1;
        else if (_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__pi_reg_out_int > 1.0)
            _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__av_active = 1;
        else
            _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__av_active = 0;

        _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__out = MIN(MAX(_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__pi_reg_out_int, -1.0), 1.0);
    
             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.iq_err
          HIL_OutAO(0x4061, (float)_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum9__out);
  
             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.PID controller1
                                _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__pi_reg_out_int = _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__integrator_state + 1.3194444444444446 * _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum8__out;
    

            if (_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__pi_reg_out_int < -1.0)
            _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__av_active = 1;
        else if (_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__pi_reg_out_int > 1.0)
            _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__av_active = 1;
        else
            _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__av_active = 0;

        _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__out = MIN(MAX(_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__pi_reg_out_int, -1.0), 1.0);
    
             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.id_err
          HIL_OutAO(0x4060, (float)_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum8__out);
  
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Sum8
                                                        _solarhouse3_inverter_controller_single_phase_pll1_sum8__out = _solarhouse3_inverter_controller_single_phase_pll1_product7__out+_solarhouse3_inverter_controller_single_phase_pll1_i__out+_solarhouse3_inverter_controller_single_phase_pll1_discrete_transfer_function1__out;    
  
             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.PID controller2
                                _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__pi_reg_out_int = _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__integrator_state + 1.3194444444444446 * _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum9__out;
    

            if (_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__pi_reg_out_int < -1.0)
            _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__av_active = 1;
        else if (_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__pi_reg_out_int > 1.0)
            _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__av_active = 1;
        else
            _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__av_active = 0;

        _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__out = MIN(MAX(_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__pi_reg_out_int, -1.0), 1.0);
    
             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.iq_err
          HIL_OutAO(0x407b, (float)_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum9__out);
  
             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.PID controller1
                                _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__pi_reg_out_int = _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__integrator_state + 1.3194444444444446 * _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum8__out;
    

            if (_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__pi_reg_out_int < -1.0)
            _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__av_active = 1;
        else if (_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__pi_reg_out_int > 1.0)
            _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__av_active = 1;
        else
            _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__av_active = 0;

        _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__out = MIN(MAX(_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__pi_reg_out_int, -1.0), 1.0);
    
             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.id_err
          HIL_OutAO(0x407a, (float)_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum8__out);
  
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Sum8
                                                        _solarhouse4_inverter_controller_single_phase_pll1_sum8__out = _solarhouse4_inverter_controller_single_phase_pll1_product7__out+_solarhouse4_inverter_controller_single_phase_pll1_i__out+_solarhouse4_inverter_controller_single_phase_pll1_discrete_transfer_function1__out;    
  
             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Sum7
                                              _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum7__out = _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__out+_ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum6__out;    
  
             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Sum3
                                              _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum3__out = _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__out+_ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum5__out;    
  
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Limit2
            _ess_inverter_controller_single_phase_pll1_limit2__out = MIN(MAX(_ess_inverter_controller_single_phase_pll1_sum8__out, -62.83185307179586), 62.83185307179586);
      
             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Sum7
                                              _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum7__out = _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__out+_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum6__out;    
  
             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Sum3
                                              _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum3__out = _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__out+_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum5__out;    
  
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Limit2
            _solarhouse1_inverter_controller_single_phase_pll1_limit2__out = MIN(MAX(_solarhouse1_inverter_controller_single_phase_pll1_sum8__out, -62.83185307179586), 62.83185307179586);
      
             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Sum7
                                              _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum7__out = _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__out+_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum6__out;    
  
             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Sum3
                                              _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum3__out = _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__out+_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum5__out;    
  
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Limit2
            _solarhouse2_inverter_controller_single_phase_pll1_limit2__out = MIN(MAX(_solarhouse2_inverter_controller_single_phase_pll1_sum8__out, -62.83185307179586), 62.83185307179586);
      
             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Sum7
                                              _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum7__out = _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__out+_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum6__out;    
  
             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Sum3
                                              _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum3__out = _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__out+_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum5__out;    
  
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Limit2
            _solarhouse3_inverter_controller_single_phase_pll1_limit2__out = MIN(MAX(_solarhouse3_inverter_controller_single_phase_pll1_sum8__out, -62.83185307179586), 62.83185307179586);
      
             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Sum7
                                              _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum7__out = _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__out+_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum6__out;    
  
             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Sum3
                                              _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum3__out = _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__out+_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum5__out;    
  
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Limit2
            _solarhouse4_inverter_controller_single_phase_pll1_limit2__out = MIN(MAX(_solarhouse4_inverter_controller_single_phase_pll1_sum8__out, -62.83185307179586), 62.83185307179586);
      
             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Product6
    _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product6__out = (_ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum7__out)*1.0/(_ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain5__out);

             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Product5
    _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product5__out = (_ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum3__out)*1.0/(_ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain5__out);

             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Sum5
                                              _ess_inverter_controller_single_phase_pll1_sum5__out = _ess_inverter_controller_single_phase_pll1_limit2__out+_ess_inverter_controller_single_phase_pll1_const__out;    
  
             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Product6
    _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product6__out = (_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum7__out)*1.0/(_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain5__out);

             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Product5
    _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product5__out = (_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum3__out)*1.0/(_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain5__out);

             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Sum5
                                              _solarhouse1_inverter_controller_single_phase_pll1_sum5__out = _solarhouse1_inverter_controller_single_phase_pll1_limit2__out+_solarhouse1_inverter_controller_single_phase_pll1_const__out;    
  
             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Product6
    _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product6__out = (_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum7__out)*1.0/(_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain5__out);

             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Product5
    _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product5__out = (_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum3__out)*1.0/(_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain5__out);

             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Sum5
                                              _solarhouse2_inverter_controller_single_phase_pll1_sum5__out = _solarhouse2_inverter_controller_single_phase_pll1_limit2__out+_solarhouse2_inverter_controller_single_phase_pll1_const__out;    
  
             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Product6
    _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product6__out = (_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum7__out)*1.0/(_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain5__out);

             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Product5
    _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product5__out = (_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum3__out)*1.0/(_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain5__out);

             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Sum5
                                              _solarhouse3_inverter_controller_single_phase_pll1_sum5__out = _solarhouse3_inverter_controller_single_phase_pll1_limit2__out+_solarhouse3_inverter_controller_single_phase_pll1_const__out;    
  
             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Product6
    _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product6__out = (_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum7__out)*1.0/(_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain5__out);

             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Product5
    _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product5__out = (_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum3__out)*1.0/(_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_gain5__out);

             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Sum5
                                              _solarhouse4_inverter_controller_single_phase_pll1_sum5__out = _solarhouse4_inverter_controller_single_phase_pll1_limit2__out+_solarhouse4_inverter_controller_single_phase_pll1_const__out;    
  
             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Limit2
            _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit2__out = MIN(MAX(_ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product6__out, -1.0), 1.0);
      
             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Limit1
            _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit1__out = MIN(MAX(_ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product5__out, -1.0), 1.0);
      
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Sum10
                                              _ess_inverter_controller_single_phase_pll1_sum10__out = _ess_inverter_controller_single_phase_pll1_sum5__out-_ess_inverter_controller_single_phase_pll1_integrator6__out;    
  
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.integrator_with_reset
                _ess_inverter_controller_single_phase_pll1_integrator_with_reset__in = _ess_inverter_controller_single_phase_pll1_sum5__out;
        
    _ess_inverter_controller_single_phase_pll1_integrator_with_reset__out=_ess_inverter_controller_single_phase_pll1_integrator_with_reset__out_calc;

             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Limit2
            _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit2__out = MIN(MAX(_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product6__out, -1.0), 1.0);
      
             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Limit1
            _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit1__out = MIN(MAX(_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product5__out, -1.0), 1.0);
      
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Sum10
                                              _solarhouse1_inverter_controller_single_phase_pll1_sum10__out = _solarhouse1_inverter_controller_single_phase_pll1_sum5__out-_solarhouse1_inverter_controller_single_phase_pll1_integrator6__out;    
  
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.integrator_with_reset
                _solarhouse1_inverter_controller_single_phase_pll1_integrator_with_reset__in = _solarhouse1_inverter_controller_single_phase_pll1_sum5__out;
        
    _solarhouse1_inverter_controller_single_phase_pll1_integrator_with_reset__out=_solarhouse1_inverter_controller_single_phase_pll1_integrator_with_reset__out_calc;

             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Limit2
            _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit2__out = MIN(MAX(_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product6__out, -1.0), 1.0);
      
             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Limit1
            _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit1__out = MIN(MAX(_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product5__out, -1.0), 1.0);
      
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Sum10
                                              _solarhouse2_inverter_controller_single_phase_pll1_sum10__out = _solarhouse2_inverter_controller_single_phase_pll1_sum5__out-_solarhouse2_inverter_controller_single_phase_pll1_integrator6__out;    
  
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.integrator_with_reset
                _solarhouse2_inverter_controller_single_phase_pll1_integrator_with_reset__in = _solarhouse2_inverter_controller_single_phase_pll1_sum5__out;
        
    _solarhouse2_inverter_controller_single_phase_pll1_integrator_with_reset__out=_solarhouse2_inverter_controller_single_phase_pll1_integrator_with_reset__out_calc;

             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Limit2
            _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit2__out = MIN(MAX(_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product6__out, -1.0), 1.0);
      
             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Limit1
            _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit1__out = MIN(MAX(_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product5__out, -1.0), 1.0);
      
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Sum10
                                              _solarhouse3_inverter_controller_single_phase_pll1_sum10__out = _solarhouse3_inverter_controller_single_phase_pll1_sum5__out-_solarhouse3_inverter_controller_single_phase_pll1_integrator6__out;    
  
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.integrator_with_reset
                _solarhouse3_inverter_controller_single_phase_pll1_integrator_with_reset__in = _solarhouse3_inverter_controller_single_phase_pll1_sum5__out;
        
    _solarhouse3_inverter_controller_single_phase_pll1_integrator_with_reset__out=_solarhouse3_inverter_controller_single_phase_pll1_integrator_with_reset__out_calc;

             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Limit2
            _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit2__out = MIN(MAX(_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product6__out, -1.0), 1.0);
      
             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.Limit1
            _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit1__out = MIN(MAX(_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_product5__out, -1.0), 1.0);
      
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Sum10
                                              _solarhouse4_inverter_controller_single_phase_pll1_sum10__out = _solarhouse4_inverter_controller_single_phase_pll1_sum5__out-_solarhouse4_inverter_controller_single_phase_pll1_integrator6__out;    
  
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.integrator_with_reset
                _solarhouse4_inverter_controller_single_phase_pll1_integrator_with_reset__in = _solarhouse4_inverter_controller_single_phase_pll1_sum5__out;
        
    _solarhouse4_inverter_controller_single_phase_pll1_integrator_with_reset__out=_solarhouse4_inverter_controller_single_phase_pll1_integrator_with_reset__out_calc;

             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.Gain6
                                _ess_inverter_controller_outer_voltage_loop___inner_current_loop_gain6__out = 339.4112549695428 * _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit2__out;
        
             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.uq
          HIL_OutAO(0x4015, (float)_ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit2__out);
  
             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.Gain5
                                _ess_inverter_controller_outer_voltage_loop___inner_current_loop_gain5__out = 339.4112549695428 * _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit1__out;
        
             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.ud
          HIL_OutAO(0x4014, (float)_ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit1__out);
  
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Gain6
                                _ess_inverter_controller_single_phase_pll1_gain6__out = 628.3185307179587 * _ess_inverter_controller_single_phase_pll1_sum10__out;
        
             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.Gain6
                                _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_gain6__out = 339.4112549695428 * _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit2__out;
        
             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.uq
          HIL_OutAO(0x4030, (float)_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit2__out);
  
             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.Gain5
                                _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_gain5__out = 339.4112549695428 * _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit1__out;
        
             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.ud
          HIL_OutAO(0x402f, (float)_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit1__out);
  
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Gain6
                                _solarhouse1_inverter_controller_single_phase_pll1_gain6__out = 628.3185307179587 * _solarhouse1_inverter_controller_single_phase_pll1_sum10__out;
        
             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.Gain6
                                _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_gain6__out = 339.4112549695428 * _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit2__out;
        
             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.uq
          HIL_OutAO(0x404a, (float)_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit2__out);
  
             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.Gain5
                                _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_gain5__out = 339.4112549695428 * _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit1__out;
        
             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.ud
          HIL_OutAO(0x4049, (float)_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit1__out);
  
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Gain6
                                _solarhouse2_inverter_controller_single_phase_pll1_gain6__out = 628.3185307179587 * _solarhouse2_inverter_controller_single_phase_pll1_sum10__out;
        
             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.Gain6
                                _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_gain6__out = 339.4112549695428 * _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit2__out;
        
             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.uq
          HIL_OutAO(0x4064, (float)_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit2__out);
  
             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.Gain5
                                _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_gain5__out = 339.4112549695428 * _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit1__out;
        
             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.ud
          HIL_OutAO(0x4063, (float)_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit1__out);
  
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Gain6
                                _solarhouse3_inverter_controller_single_phase_pll1_gain6__out = 628.3185307179587 * _solarhouse3_inverter_controller_single_phase_pll1_sum10__out;
        
             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.Gain6
                                _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_gain6__out = 339.4112549695428 * _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit2__out;
        
             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.uq
          HIL_OutAO(0x407e, (float)_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit2__out);
  
             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.Gain5
                                _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_gain5__out = 339.4112549695428 * _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit1__out;
        
             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.ud
          HIL_OutAO(0x407d, (float)_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_limit1__out);
  
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Gain6
                                _solarhouse4_inverter_controller_single_phase_pll1_gain6__out = 628.3185307179587 * _solarhouse4_inverter_controller_single_phase_pll1_sum10__out;
        
             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.Uq
          HIL_OutAO(0x4010, (float)_ess_inverter_controller_outer_voltage_loop___inner_current_loop_gain6__out);
  
             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.Ud
          HIL_OutAO(0x400f, (float)_ess_inverter_controller_outer_voltage_loop___inner_current_loop_gain5__out);
  
             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.dq to alpha beta
                _ess_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__k1 = cos(_ess_inverter_controller_c_function4__out);
        _ess_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__k2 = sin(_ess_inverter_controller_c_function4__out);
    
	_ess_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__alpha = _ess_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__k2*_ess_inverter_controller_outer_voltage_loop___inner_current_loop_gain5__out + _ess_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__k1*_ess_inverter_controller_outer_voltage_loop___inner_current_loop_gain6__out;
	_ess_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__beta = _ess_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__k2*_ess_inverter_controller_outer_voltage_loop___inner_current_loop_gain6__out - _ess_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__k1*_ess_inverter_controller_outer_voltage_loop___inner_current_loop_gain5__out;

             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.Uq
          HIL_OutAO(0x402b, (float)_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_gain6__out);
  
             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.Ud
          HIL_OutAO(0x402a, (float)_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_gain5__out);
  
             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.dq to alpha beta
                _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__k1 = cos(_solarhouse1_inverter_controller_c_function4__out);
        _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__k2 = sin(_solarhouse1_inverter_controller_c_function4__out);
    
	_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__alpha = _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__k2*_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_gain5__out + _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__k1*_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_gain6__out;
	_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__beta = _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__k2*_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_gain6__out - _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__k1*_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_gain5__out;

             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.Uq
          HIL_OutAO(0x4045, (float)_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_gain6__out);
  
             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.Ud
          HIL_OutAO(0x4044, (float)_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_gain5__out);
  
             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.dq to alpha beta
                _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__k1 = cos(_solarhouse2_inverter_controller_c_function4__out);
        _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__k2 = sin(_solarhouse2_inverter_controller_c_function4__out);
    
	_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__alpha = _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__k2*_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_gain5__out + _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__k1*_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_gain6__out;
	_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__beta = _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__k2*_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_gain6__out - _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__k1*_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_gain5__out;

             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.Uq
          HIL_OutAO(0x405f, (float)_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_gain6__out);
  
             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.Ud
          HIL_OutAO(0x405e, (float)_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_gain5__out);
  
             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.dq to alpha beta
                _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__k1 = cos(_solarhouse3_inverter_controller_c_function4__out);
        _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__k2 = sin(_solarhouse3_inverter_controller_c_function4__out);
    
	_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__alpha = _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__k2*_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_gain5__out + _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__k1*_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_gain6__out;
	_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__beta = _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__k2*_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_gain6__out - _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__k1*_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_gain5__out;

             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.Uq
          HIL_OutAO(0x4079, (float)_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_gain6__out);
  
             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.Ud
          HIL_OutAO(0x4078, (float)_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_gain5__out);
  
             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.dq to alpha beta
                _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__k1 = cos(_solarhouse4_inverter_controller_c_function4__out);
        _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__k2 = sin(_solarhouse4_inverter_controller_c_function4__out);
    
	_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__alpha = _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__k2*_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_gain5__out + _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__k1*_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_gain6__out;
	_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__beta = _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__k2*_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_gain6__out - _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__k1*_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_gain5__out;

             // Generated from the component: ESS.Inverter.Controller.Bus Join1
            	
    	    	        				        	_ess_inverter_controller_bus_join1__out[0] = _ess_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__alpha;
								 										    	        	            	        				        	_ess_inverter_controller_bus_join1__out[1] = _ess_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__beta;
								 										        
             // Generated from the component: SolarHouse1.Inverter.Controller.Bus Join1
            	
    	    	        				        	_solarhouse1_inverter_controller_bus_join1__out[0] = _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__alpha;
								 										    	        	            	        				        	_solarhouse1_inverter_controller_bus_join1__out[1] = _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__beta;
								 										        
             // Generated from the component: SolarHouse2.Inverter.Controller.Bus Join1
            	
    	    	        				        	_solarhouse2_inverter_controller_bus_join1__out[0] = _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__alpha;
								 										    	        	            	        				        	_solarhouse2_inverter_controller_bus_join1__out[1] = _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__beta;
								 										        
             // Generated from the component: SolarHouse3.Inverter.Controller.Bus Join1
            	
    	    	        				        	_solarhouse3_inverter_controller_bus_join1__out[0] = _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__alpha;
								 										    	        	            	        				        	_solarhouse3_inverter_controller_bus_join1__out[1] = _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__beta;
								 										        
             // Generated from the component: SolarHouse4.Inverter.Controller.Bus Join1
            	
    	    	        				        	_solarhouse4_inverter_controller_bus_join1__out[0] = _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__alpha;
								 										    	        	            	        				        	_solarhouse4_inverter_controller_bus_join1__out[1] = _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_dq_to_alpha_beta__beta;
								 										        
             // Generated from the component: ESS.Inverter.Controller.Bus Split1
                                     _ess_inverter_controller_bus_split1__out=_ess_inverter_controller_bus_join1__out[0];
                 
                                _ess_inverter_controller_bus_split1__out1=_ess_inverter_controller_bus_join1__out[1];
                 
    
             // Generated from the component: SolarHouse1.Inverter.Controller.Bus Split1
                                     _solarhouse1_inverter_controller_bus_split1__out=_solarhouse1_inverter_controller_bus_join1__out[0];
                 
                                _solarhouse1_inverter_controller_bus_split1__out1=_solarhouse1_inverter_controller_bus_join1__out[1];
                 
    
             // Generated from the component: SolarHouse2.Inverter.Controller.Bus Split1
                                     _solarhouse2_inverter_controller_bus_split1__out=_solarhouse2_inverter_controller_bus_join1__out[0];
                 
                                _solarhouse2_inverter_controller_bus_split1__out1=_solarhouse2_inverter_controller_bus_join1__out[1];
                 
    
             // Generated from the component: SolarHouse3.Inverter.Controller.Bus Split1
                                     _solarhouse3_inverter_controller_bus_split1__out=_solarhouse3_inverter_controller_bus_join1__out[0];
                 
                                _solarhouse3_inverter_controller_bus_split1__out1=_solarhouse3_inverter_controller_bus_join1__out[1];
                 
    
             // Generated from the component: SolarHouse4.Inverter.Controller.Bus Split1
                                     _solarhouse4_inverter_controller_bus_split1__out=_solarhouse4_inverter_controller_bus_join1__out[0];
                 
                                _solarhouse4_inverter_controller_bus_split1__out1=_solarhouse4_inverter_controller_bus_join1__out[1];
                 
    
             // Generated from the component: ESS.Inverter.Controller.Gain20
                                _ess_inverter_controller_gain20__out = -1.0 * _ess_inverter_controller_bus_split1__out;
        
             // Generated from the component: SolarHouse1.Inverter.Controller.Gain20
                                _solarhouse1_inverter_controller_gain20__out = -1.0 * _solarhouse1_inverter_controller_bus_split1__out;
        
             // Generated from the component: SolarHouse2.Inverter.Controller.Gain20
                                _solarhouse2_inverter_controller_gain20__out = -1.0 * _solarhouse2_inverter_controller_bus_split1__out;
        
             // Generated from the component: SolarHouse3.Inverter.Controller.Gain20
                                _solarhouse3_inverter_controller_gain20__out = -1.0 * _solarhouse3_inverter_controller_bus_split1__out;
        
             // Generated from the component: SolarHouse4.Inverter.Controller.Gain20
                                _solarhouse4_inverter_controller_gain20__out = -1.0 * _solarhouse4_inverter_controller_bus_split1__out;
        
             // Generated from the component: ESS.Inverter.Single Phase Inverter1.PWM_Modulator
                                _ess_inverter_single_phase_inverter1_pwm_modulator__limited_in[0] = MIN(MAX(_ess_inverter_controller_bus_split1__out, -1.0), 1.0);

                HIL_OutInt32(0x2000040 + _ess_inverter_single_phase_inverter1_pwm_modulator__channels[0], ((unsigned)((_ess_inverter_single_phase_inverter1_pwm_modulator__limited_in[0]-(-1.0))*1250.0)));
                                                                _ess_inverter_single_phase_inverter1_pwm_modulator__limited_in[1] = MIN(MAX(_ess_inverter_controller_gain20__out, -1.0), 1.0);

                HIL_OutInt32(0x2000040 + _ess_inverter_single_phase_inverter1_pwm_modulator__channels[1], ((unsigned)((_ess_inverter_single_phase_inverter1_pwm_modulator__limited_in[1]-(-1.0))*1250.0)));
                                            if (_ess_inverter_controller_constant2__out == 0x0) {
        // pwm_modulator_en
                    HIL_OutInt32(0x2000000 + _ess_inverter_single_phase_inverter1_pwm_modulator__channels[0], 0x0);
                    HIL_OutInt32(0x2000000 + _ess_inverter_single_phase_inverter1_pwm_modulator__channels[1], 0x0);
            }
    else {
        // pwm_modulator_en
                    HIL_OutInt32(0x2000000 + _ess_inverter_single_phase_inverter1_pwm_modulator__channels[0], 0x1);
                    HIL_OutInt32(0x2000000 + _ess_inverter_single_phase_inverter1_pwm_modulator__channels[1], 0x1);
            }
    HIL_OutInt32(0x2000140, _ess_inverter_single_phase_inverter1_pwm_modulator__update_mask);

             // Generated from the component: SolarHouse1.Inverter.Single Phase Inverter1.PWM_Modulator
                                _solarhouse1_inverter_single_phase_inverter1_pwm_modulator__limited_in[0] = MIN(MAX(_solarhouse1_inverter_controller_bus_split1__out, -1.0), 1.0);

                HIL_OutInt32(0x2000040 + _solarhouse1_inverter_single_phase_inverter1_pwm_modulator__channels[0], ((unsigned)((_solarhouse1_inverter_single_phase_inverter1_pwm_modulator__limited_in[0]-(-1.0))*1250.0)));
                                                                _solarhouse1_inverter_single_phase_inverter1_pwm_modulator__limited_in[1] = MIN(MAX(_solarhouse1_inverter_controller_gain20__out, -1.0), 1.0);

                HIL_OutInt32(0x2000040 + _solarhouse1_inverter_single_phase_inverter1_pwm_modulator__channels[1], ((unsigned)((_solarhouse1_inverter_single_phase_inverter1_pwm_modulator__limited_in[1]-(-1.0))*1250.0)));
                                            if (_solarhouse1_inverter_controller_constant2__out == 0x0) {
        // pwm_modulator_en
                    HIL_OutInt32(0x2000000 + _solarhouse1_inverter_single_phase_inverter1_pwm_modulator__channels[0], 0x0);
                    HIL_OutInt32(0x2000000 + _solarhouse1_inverter_single_phase_inverter1_pwm_modulator__channels[1], 0x0);
            }
    else {
        // pwm_modulator_en
                    HIL_OutInt32(0x2000000 + _solarhouse1_inverter_single_phase_inverter1_pwm_modulator__channels[0], 0x1);
                    HIL_OutInt32(0x2000000 + _solarhouse1_inverter_single_phase_inverter1_pwm_modulator__channels[1], 0x1);
            }
    HIL_OutInt32(0x2000140, _solarhouse1_inverter_single_phase_inverter1_pwm_modulator__update_mask);

             // Generated from the component: SolarHouse2.Inverter.Single Phase Inverter1.PWM_Modulator
                                _solarhouse2_inverter_single_phase_inverter1_pwm_modulator__limited_in[0] = MIN(MAX(_solarhouse2_inverter_controller_bus_split1__out, -1.0), 1.0);

                HIL_OutInt32(0x2000040 + _solarhouse2_inverter_single_phase_inverter1_pwm_modulator__channels[0], ((unsigned)((_solarhouse2_inverter_single_phase_inverter1_pwm_modulator__limited_in[0]-(-1.0))*1250.0)));
                                                                _solarhouse2_inverter_single_phase_inverter1_pwm_modulator__limited_in[1] = MIN(MAX(_solarhouse2_inverter_controller_gain20__out, -1.0), 1.0);

                HIL_OutInt32(0x2000040 + _solarhouse2_inverter_single_phase_inverter1_pwm_modulator__channels[1], ((unsigned)((_solarhouse2_inverter_single_phase_inverter1_pwm_modulator__limited_in[1]-(-1.0))*1250.0)));
                                            if (_solarhouse2_inverter_controller_constant2__out == 0x0) {
        // pwm_modulator_en
                    HIL_OutInt32(0x2000000 + _solarhouse2_inverter_single_phase_inverter1_pwm_modulator__channels[0], 0x0);
                    HIL_OutInt32(0x2000000 + _solarhouse2_inverter_single_phase_inverter1_pwm_modulator__channels[1], 0x0);
            }
    else {
        // pwm_modulator_en
                    HIL_OutInt32(0x2000000 + _solarhouse2_inverter_single_phase_inverter1_pwm_modulator__channels[0], 0x1);
                    HIL_OutInt32(0x2000000 + _solarhouse2_inverter_single_phase_inverter1_pwm_modulator__channels[1], 0x1);
            }
    HIL_OutInt32(0x2000140, _solarhouse2_inverter_single_phase_inverter1_pwm_modulator__update_mask);

             // Generated from the component: SolarHouse3.Inverter.Single Phase Inverter1.PWM_Modulator
                                _solarhouse3_inverter_single_phase_inverter1_pwm_modulator__limited_in[0] = MIN(MAX(_solarhouse3_inverter_controller_bus_split1__out, -1.0), 1.0);

                HIL_OutInt32(0x2000040 + _solarhouse3_inverter_single_phase_inverter1_pwm_modulator__channels[0], ((unsigned)((_solarhouse3_inverter_single_phase_inverter1_pwm_modulator__limited_in[0]-(-1.0))*1250.0)));
                                                                _solarhouse3_inverter_single_phase_inverter1_pwm_modulator__limited_in[1] = MIN(MAX(_solarhouse3_inverter_controller_gain20__out, -1.0), 1.0);

                HIL_OutInt32(0x2000040 + _solarhouse3_inverter_single_phase_inverter1_pwm_modulator__channels[1], ((unsigned)((_solarhouse3_inverter_single_phase_inverter1_pwm_modulator__limited_in[1]-(-1.0))*1250.0)));
                                            if (_solarhouse3_inverter_controller_constant2__out == 0x0) {
        // pwm_modulator_en
                    HIL_OutInt32(0x2000000 + _solarhouse3_inverter_single_phase_inverter1_pwm_modulator__channels[0], 0x0);
                    HIL_OutInt32(0x2000000 + _solarhouse3_inverter_single_phase_inverter1_pwm_modulator__channels[1], 0x0);
            }
    else {
        // pwm_modulator_en
                    HIL_OutInt32(0x2000000 + _solarhouse3_inverter_single_phase_inverter1_pwm_modulator__channels[0], 0x1);
                    HIL_OutInt32(0x2000000 + _solarhouse3_inverter_single_phase_inverter1_pwm_modulator__channels[1], 0x1);
            }
    HIL_OutInt32(0x2000140, _solarhouse3_inverter_single_phase_inverter1_pwm_modulator__update_mask);

             // Generated from the component: SolarHouse4.Inverter.Single Phase Inverter1.PWM_Modulator
                                _solarhouse4_inverter_single_phase_inverter1_pwm_modulator__limited_in[0] = MIN(MAX(_solarhouse4_inverter_controller_bus_split1__out, -1.0), 1.0);

                HIL_OutInt32(0x2000040 + _solarhouse4_inverter_single_phase_inverter1_pwm_modulator__channels[0], ((unsigned)((_solarhouse4_inverter_single_phase_inverter1_pwm_modulator__limited_in[0]-(-1.0))*1250.0)));
                                                                _solarhouse4_inverter_single_phase_inverter1_pwm_modulator__limited_in[1] = MIN(MAX(_solarhouse4_inverter_controller_gain20__out, -1.0), 1.0);

                HIL_OutInt32(0x2000040 + _solarhouse4_inverter_single_phase_inverter1_pwm_modulator__channels[1], ((unsigned)((_solarhouse4_inverter_single_phase_inverter1_pwm_modulator__limited_in[1]-(-1.0))*1250.0)));
                                            if (_solarhouse4_inverter_controller_constant2__out == 0x0) {
        // pwm_modulator_en
                    HIL_OutInt32(0x2000000 + _solarhouse4_inverter_single_phase_inverter1_pwm_modulator__channels[0], 0x0);
                    HIL_OutInt32(0x2000000 + _solarhouse4_inverter_single_phase_inverter1_pwm_modulator__channels[1], 0x0);
            }
    else {
        // pwm_modulator_en
                    HIL_OutInt32(0x2000000 + _solarhouse4_inverter_single_phase_inverter1_pwm_modulator__channels[0], 0x1);
                    HIL_OutInt32(0x2000000 + _solarhouse4_inverter_single_phase_inverter1_pwm_modulator__channels[1], 0x1);
            }
    HIL_OutInt32(0x2000140, _solarhouse4_inverter_single_phase_inverter1_pwm_modulator__update_mask);

    //@cmp.out.block.end


    //////////////////////////////////////////////////////////////////////////
    // Update block
    //////////////////////////////////////////////////////////////////////////
    //@cmp.update.block.start
                         // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.LPF_dc
                                                                                              

                                _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__states[0] = _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__delay_line_in;
        
    
                                     // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.I
                                        if (!_ess_inverter_controller_single_phase_pll1_i__av_active) {
                    _ess_inverter_controller_single_phase_pll1_i__integrator_state += 1.0 * _ess_inverter_controller_single_phase_pll1_product5__out * 0.0002;
                }
                                    else {
                        _ess_inverter_controller_single_phase_pll1_i__integrator_state = _ess_inverter_controller_single_phase_pll1_i__out;
                    }
                                            
    
        
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Integrator1
                                                                                _ess_inverter_controller_single_phase_pll1_integrator1__state += _ess_inverter_controller_single_phase_pll1_product1__out * 0.0002;
            
    
        
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Integrator10
                                                                                _ess_inverter_controller_single_phase_pll1_integrator10__state += _ess_inverter_controller_single_phase_pll1_gain11__out * 0.0002;
            
    
        
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Integrator2
                                                                                _ess_inverter_controller_single_phase_pll1_integrator2__state += _ess_inverter_controller_single_phase_pll1_product2__out * 0.0002;
            
    
        
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Integrator3
                                                                                _ess_inverter_controller_single_phase_pll1_integrator3__state += _ess_inverter_controller_single_phase_pll1_gain4__out * 0.0002;
            
    
        
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Integrator4
                                                                                _ess_inverter_controller_single_phase_pll1_integrator4__state += _ess_inverter_controller_single_phase_pll1_gain5__out * 0.0002;
            
    
        
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Integrator5
                                                                                _ess_inverter_controller_single_phase_pll1_integrator5__state += _ess_inverter_controller_single_phase_pll1_gain7__out * 0.0002;
            
    
        
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Integrator6
                                                                                _ess_inverter_controller_single_phase_pll1_integrator6__state += _ess_inverter_controller_single_phase_pll1_gain6__out * 0.0002;
            
    
        
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Integrator7
                                                                                _ess_inverter_controller_single_phase_pll1_integrator7__state += _ess_inverter_controller_single_phase_pll1_gain9__out * 0.0002;
            
    
        
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Integrator8
                                                                                _ess_inverter_controller_single_phase_pll1_integrator8__state += _ess_inverter_controller_single_phase_pll1_gain8__out * 0.0002;
            
    
        
             // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Integrator9
                                                                                _ess_inverter_controller_single_phase_pll1_integrator9__state += _ess_inverter_controller_single_phase_pll1_gain10__out * 0.0002;
            
    
        
                                             // Generated from the component: ESS.Inverter.Power_Meas.Power_Meas_DQpu.S_and_pf
    

                                 // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.LPF_dc
                                                                                              

                                _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__states[0] = _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__delay_line_in;
        
    
                                     // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.I
                                        if (!_solarhouse1_inverter_controller_single_phase_pll1_i__av_active) {
                    _solarhouse1_inverter_controller_single_phase_pll1_i__integrator_state += 1.0 * _solarhouse1_inverter_controller_single_phase_pll1_product5__out * 0.0002;
                }
                                    else {
                        _solarhouse1_inverter_controller_single_phase_pll1_i__integrator_state = _solarhouse1_inverter_controller_single_phase_pll1_i__out;
                    }
                                            
    
        
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Integrator1
                                                                                _solarhouse1_inverter_controller_single_phase_pll1_integrator1__state += _solarhouse1_inverter_controller_single_phase_pll1_product1__out * 0.0002;
            
    
        
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Integrator10
                                                                                _solarhouse1_inverter_controller_single_phase_pll1_integrator10__state += _solarhouse1_inverter_controller_single_phase_pll1_gain11__out * 0.0002;
            
    
        
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Integrator2
                                                                                _solarhouse1_inverter_controller_single_phase_pll1_integrator2__state += _solarhouse1_inverter_controller_single_phase_pll1_product2__out * 0.0002;
            
    
        
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Integrator3
                                                                                _solarhouse1_inverter_controller_single_phase_pll1_integrator3__state += _solarhouse1_inverter_controller_single_phase_pll1_gain4__out * 0.0002;
            
    
        
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Integrator4
                                                                                _solarhouse1_inverter_controller_single_phase_pll1_integrator4__state += _solarhouse1_inverter_controller_single_phase_pll1_gain5__out * 0.0002;
            
    
        
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Integrator5
                                                                                _solarhouse1_inverter_controller_single_phase_pll1_integrator5__state += _solarhouse1_inverter_controller_single_phase_pll1_gain7__out * 0.0002;
            
    
        
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Integrator6
                                                                                _solarhouse1_inverter_controller_single_phase_pll1_integrator6__state += _solarhouse1_inverter_controller_single_phase_pll1_gain6__out * 0.0002;
            
    
        
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Integrator7
                                                                                _solarhouse1_inverter_controller_single_phase_pll1_integrator7__state += _solarhouse1_inverter_controller_single_phase_pll1_gain9__out * 0.0002;
            
    
        
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Integrator8
                                                                                _solarhouse1_inverter_controller_single_phase_pll1_integrator8__state += _solarhouse1_inverter_controller_single_phase_pll1_gain8__out * 0.0002;
            
    
        
             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Integrator9
                                                                                _solarhouse1_inverter_controller_single_phase_pll1_integrator9__state += _solarhouse1_inverter_controller_single_phase_pll1_gain10__out * 0.0002;
            
    
        
                                             // Generated from the component: SolarHouse1.Inverter.Power_Meas.Power_Meas_DQpu.S_and_pf
    

                                 // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.LPF_dc
                                                                                              

                                _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__states[0] = _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__delay_line_in;
        
    
                                     // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.I
                                        if (!_solarhouse2_inverter_controller_single_phase_pll1_i__av_active) {
                    _solarhouse2_inverter_controller_single_phase_pll1_i__integrator_state += 1.0 * _solarhouse2_inverter_controller_single_phase_pll1_product5__out * 0.0002;
                }
                                    else {
                        _solarhouse2_inverter_controller_single_phase_pll1_i__integrator_state = _solarhouse2_inverter_controller_single_phase_pll1_i__out;
                    }
                                            
    
        
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Integrator1
                                                                                _solarhouse2_inverter_controller_single_phase_pll1_integrator1__state += _solarhouse2_inverter_controller_single_phase_pll1_product1__out * 0.0002;
            
    
        
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Integrator10
                                                                                _solarhouse2_inverter_controller_single_phase_pll1_integrator10__state += _solarhouse2_inverter_controller_single_phase_pll1_gain11__out * 0.0002;
            
    
        
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Integrator2
                                                                                _solarhouse2_inverter_controller_single_phase_pll1_integrator2__state += _solarhouse2_inverter_controller_single_phase_pll1_product2__out * 0.0002;
            
    
        
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Integrator3
                                                                                _solarhouse2_inverter_controller_single_phase_pll1_integrator3__state += _solarhouse2_inverter_controller_single_phase_pll1_gain4__out * 0.0002;
            
    
        
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Integrator4
                                                                                _solarhouse2_inverter_controller_single_phase_pll1_integrator4__state += _solarhouse2_inverter_controller_single_phase_pll1_gain5__out * 0.0002;
            
    
        
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Integrator5
                                                                                _solarhouse2_inverter_controller_single_phase_pll1_integrator5__state += _solarhouse2_inverter_controller_single_phase_pll1_gain7__out * 0.0002;
            
    
        
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Integrator6
                                                                                _solarhouse2_inverter_controller_single_phase_pll1_integrator6__state += _solarhouse2_inverter_controller_single_phase_pll1_gain6__out * 0.0002;
            
    
        
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Integrator7
                                                                                _solarhouse2_inverter_controller_single_phase_pll1_integrator7__state += _solarhouse2_inverter_controller_single_phase_pll1_gain9__out * 0.0002;
            
    
        
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Integrator8
                                                                                _solarhouse2_inverter_controller_single_phase_pll1_integrator8__state += _solarhouse2_inverter_controller_single_phase_pll1_gain8__out * 0.0002;
            
    
        
             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Integrator9
                                                                                _solarhouse2_inverter_controller_single_phase_pll1_integrator9__state += _solarhouse2_inverter_controller_single_phase_pll1_gain10__out * 0.0002;
            
    
        
                                             // Generated from the component: SolarHouse2.Inverter.Power_Meas.Power_Meas_DQpu.S_and_pf
    

                                 // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.LPF_dc
                                                                                              

                                _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__states[0] = _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__delay_line_in;
        
    
                                     // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.I
                                        if (!_solarhouse3_inverter_controller_single_phase_pll1_i__av_active) {
                    _solarhouse3_inverter_controller_single_phase_pll1_i__integrator_state += 1.0 * _solarhouse3_inverter_controller_single_phase_pll1_product5__out * 0.0002;
                }
                                    else {
                        _solarhouse3_inverter_controller_single_phase_pll1_i__integrator_state = _solarhouse3_inverter_controller_single_phase_pll1_i__out;
                    }
                                            
    
        
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Integrator1
                                                                                _solarhouse3_inverter_controller_single_phase_pll1_integrator1__state += _solarhouse3_inverter_controller_single_phase_pll1_product1__out * 0.0002;
            
    
        
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Integrator10
                                                                                _solarhouse3_inverter_controller_single_phase_pll1_integrator10__state += _solarhouse3_inverter_controller_single_phase_pll1_gain11__out * 0.0002;
            
    
        
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Integrator2
                                                                                _solarhouse3_inverter_controller_single_phase_pll1_integrator2__state += _solarhouse3_inverter_controller_single_phase_pll1_product2__out * 0.0002;
            
    
        
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Integrator3
                                                                                _solarhouse3_inverter_controller_single_phase_pll1_integrator3__state += _solarhouse3_inverter_controller_single_phase_pll1_gain4__out * 0.0002;
            
    
        
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Integrator4
                                                                                _solarhouse3_inverter_controller_single_phase_pll1_integrator4__state += _solarhouse3_inverter_controller_single_phase_pll1_gain5__out * 0.0002;
            
    
        
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Integrator5
                                                                                _solarhouse3_inverter_controller_single_phase_pll1_integrator5__state += _solarhouse3_inverter_controller_single_phase_pll1_gain7__out * 0.0002;
            
    
        
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Integrator6
                                                                                _solarhouse3_inverter_controller_single_phase_pll1_integrator6__state += _solarhouse3_inverter_controller_single_phase_pll1_gain6__out * 0.0002;
            
    
        
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Integrator7
                                                                                _solarhouse3_inverter_controller_single_phase_pll1_integrator7__state += _solarhouse3_inverter_controller_single_phase_pll1_gain9__out * 0.0002;
            
    
        
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Integrator8
                                                                                _solarhouse3_inverter_controller_single_phase_pll1_integrator8__state += _solarhouse3_inverter_controller_single_phase_pll1_gain8__out * 0.0002;
            
    
        
             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Integrator9
                                                                                _solarhouse3_inverter_controller_single_phase_pll1_integrator9__state += _solarhouse3_inverter_controller_single_phase_pll1_gain10__out * 0.0002;
            
    
        
                                             // Generated from the component: SolarHouse3.Inverter.Power_Meas.Power_Meas_DQpu.S_and_pf
    

                                 // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.LPF_dc
                                                                                              

                                _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__states[0] = _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc__delay_line_in;
        
    
                                     // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.I
                                        if (!_solarhouse4_inverter_controller_single_phase_pll1_i__av_active) {
                    _solarhouse4_inverter_controller_single_phase_pll1_i__integrator_state += 1.0 * _solarhouse4_inverter_controller_single_phase_pll1_product5__out * 0.0002;
                }
                                    else {
                        _solarhouse4_inverter_controller_single_phase_pll1_i__integrator_state = _solarhouse4_inverter_controller_single_phase_pll1_i__out;
                    }
                                            
    
        
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Integrator1
                                                                                _solarhouse4_inverter_controller_single_phase_pll1_integrator1__state += _solarhouse4_inverter_controller_single_phase_pll1_product1__out * 0.0002;
            
    
        
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Integrator10
                                                                                _solarhouse4_inverter_controller_single_phase_pll1_integrator10__state += _solarhouse4_inverter_controller_single_phase_pll1_gain11__out * 0.0002;
            
    
        
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Integrator2
                                                                                _solarhouse4_inverter_controller_single_phase_pll1_integrator2__state += _solarhouse4_inverter_controller_single_phase_pll1_product2__out * 0.0002;
            
    
        
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Integrator3
                                                                                _solarhouse4_inverter_controller_single_phase_pll1_integrator3__state += _solarhouse4_inverter_controller_single_phase_pll1_gain4__out * 0.0002;
            
    
        
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Integrator4
                                                                                _solarhouse4_inverter_controller_single_phase_pll1_integrator4__state += _solarhouse4_inverter_controller_single_phase_pll1_gain5__out * 0.0002;
            
    
        
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Integrator5
                                                                                _solarhouse4_inverter_controller_single_phase_pll1_integrator5__state += _solarhouse4_inverter_controller_single_phase_pll1_gain7__out * 0.0002;
            
    
        
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Integrator6
                                                                                _solarhouse4_inverter_controller_single_phase_pll1_integrator6__state += _solarhouse4_inverter_controller_single_phase_pll1_gain6__out * 0.0002;
            
    
        
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Integrator7
                                                                                _solarhouse4_inverter_controller_single_phase_pll1_integrator7__state += _solarhouse4_inverter_controller_single_phase_pll1_gain9__out * 0.0002;
            
    
        
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Integrator8
                                                                                _solarhouse4_inverter_controller_single_phase_pll1_integrator8__state += _solarhouse4_inverter_controller_single_phase_pll1_gain8__out * 0.0002;
            
    
        
             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Integrator9
                                                                                _solarhouse4_inverter_controller_single_phase_pll1_integrator9__state += _solarhouse4_inverter_controller_single_phase_pll1_gain10__out * 0.0002;
            
    
        
                                             // Generated from the component: SolarHouse4.Inverter.Power_Meas.Power_Meas_DQpu.S_and_pf
    

                     // Generated from the component: ESS.Inverter.Controller.C function1
    

                 // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.C function1
    

                                             // Generated from the component: ESS.Inverter.Controller.Hilbert Transform
                                                                                              

                                _ess_inverter_controller_hilbert_transform__states[0] = _ess_inverter_controller_hilbert_transform__delay_line_in;
        
    
                     // Generated from the component: ESS.Inverter.Controller.Hilbert Transform1
                                                                                              

                                _ess_inverter_controller_hilbert_transform1__states[0] = _ess_inverter_controller_hilbert_transform1__delay_line_in;
        
    
                                 // Generated from the component: ESS.Inverter.LPF_dc
                                                                                              

                                _ess_inverter_lpf_dc__states[0] = _ess_inverter_lpf_dc__delay_line_in;
        
    
                 // Generated from the component: SolarHouse1.Inverter.Controller.C function1
    

                 // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.C function1
    

                                             // Generated from the component: SolarHouse1.Inverter.Controller.Hilbert Transform
                                                                                              

                                _solarhouse1_inverter_controller_hilbert_transform__states[0] = _solarhouse1_inverter_controller_hilbert_transform__delay_line_in;
        
    
                     // Generated from the component: SolarHouse1.Inverter.Controller.Hilbert Transform1
                                                                                              

                                _solarhouse1_inverter_controller_hilbert_transform1__states[0] = _solarhouse1_inverter_controller_hilbert_transform1__delay_line_in;
        
    
                                 // Generated from the component: SolarHouse1.Inverter.LPF_dc
                                                                                              

                                _solarhouse1_inverter_lpf_dc__states[0] = _solarhouse1_inverter_lpf_dc__delay_line_in;
        
    
                 // Generated from the component: SolarHouse2.Inverter.Controller.C function1
    

                 // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.C function1
    

                                             // Generated from the component: SolarHouse2.Inverter.Controller.Hilbert Transform
                                                                                              

                                _solarhouse2_inverter_controller_hilbert_transform__states[0] = _solarhouse2_inverter_controller_hilbert_transform__delay_line_in;
        
    
                     // Generated from the component: SolarHouse2.Inverter.Controller.Hilbert Transform1
                                                                                              

                                _solarhouse2_inverter_controller_hilbert_transform1__states[0] = _solarhouse2_inverter_controller_hilbert_transform1__delay_line_in;
        
    
                                 // Generated from the component: SolarHouse2.Inverter.LPF_dc
                                                                                              

                                _solarhouse2_inverter_lpf_dc__states[0] = _solarhouse2_inverter_lpf_dc__delay_line_in;
        
    
                 // Generated from the component: SolarHouse3.Inverter.Controller.C function1
    

                 // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.C function1
    

                                             // Generated from the component: SolarHouse3.Inverter.Controller.Hilbert Transform
                                                                                              

                                _solarhouse3_inverter_controller_hilbert_transform__states[0] = _solarhouse3_inverter_controller_hilbert_transform__delay_line_in;
        
    
                     // Generated from the component: SolarHouse3.Inverter.Controller.Hilbert Transform1
                                                                                              

                                _solarhouse3_inverter_controller_hilbert_transform1__states[0] = _solarhouse3_inverter_controller_hilbert_transform1__delay_line_in;
        
    
                                 // Generated from the component: SolarHouse3.Inverter.LPF_dc
                                                                                              

                                _solarhouse3_inverter_lpf_dc__states[0] = _solarhouse3_inverter_lpf_dc__delay_line_in;
        
    
                 // Generated from the component: SolarHouse4.Inverter.Controller.C function1
    

                 // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.C function1
    

                                             // Generated from the component: SolarHouse4.Inverter.Controller.Hilbert Transform
                                                                                              

                                _solarhouse4_inverter_controller_hilbert_transform__states[0] = _solarhouse4_inverter_controller_hilbert_transform__delay_line_in;
        
    
                     // Generated from the component: SolarHouse4.Inverter.Controller.Hilbert Transform1
                                                                                              

                                _solarhouse4_inverter_controller_hilbert_transform1__states[0] = _solarhouse4_inverter_controller_hilbert_transform1__delay_line_in;
        
    
                                 // Generated from the component: SolarHouse4.Inverter.LPF_dc
                                                                                              

                                _solarhouse4_inverter_lpf_dc__states[0] = _solarhouse4_inverter_lpf_dc__delay_line_in;
        
    
                     // Generated from the component: ESS.Inverter.Controller.C function4
    

                                                                     // Generated from the component: SolarHouse1.Inverter.Controller.C function4
    

                                                                     // Generated from the component: SolarHouse2.Inverter.Controller.C function4
    

                                                                     // Generated from the component: SolarHouse3.Inverter.Controller.C function4
    

                                                                     // Generated from the component: SolarHouse4.Inverter.Controller.C function4
    

                                                                                                                                                                                                                                                                                                                                 // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.LPF_dc2
                                                                                              

                                _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__states[0] = _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__delay_line_in;
        
    
                             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.LPF_dc1
                                                                                              

                                _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__states[0] = _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__delay_line_in;
        
    
                                                                 // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.LPF_dc2
                                                                                              

                                _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__states[0] = _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__delay_line_in;
        
    
                             // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.LPF_dc1
                                                                                              

                                _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__states[0] = _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__delay_line_in;
        
    
                                                                 // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.LPF_dc2
                                                                                              

                                _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__states[0] = _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__delay_line_in;
        
    
                             // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.LPF_dc1
                                                                                              

                                _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__states[0] = _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__delay_line_in;
        
    
                                                                 // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.LPF_dc2
                                                                                              

                                _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__states[0] = _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__delay_line_in;
        
    
                             // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.LPF_dc1
                                                                                              

                                _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__states[0] = _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__delay_line_in;
        
    
                                                                 // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.LPF_dc2
                                                                                              

                                _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__states[0] = _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc2__delay_line_in;
        
    
                             // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.LPF_dc1
                                                                                              

                                _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__states[0] = _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_lpf_dc1__delay_line_in;
        
    
                                                                                                                                                                                                                                     // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Comparator1
            if (_ess_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_sum3__out < _ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_limit_zero__out) {
            _ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__state = 0;
        } else if (_ess_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_sum3__out > _ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_limit_zero__out) {
            _ess_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__state = 1;
        }

                     // Generated from the component: ESS.Inverter.Power_Meas.Power_Meas_DQpu.LPF_P
                                                                                              

                                _ess_inverter_power_meas_power_meas_dqpu_lpf_p__states[0] = _ess_inverter_power_meas_power_meas_dqpu_lpf_p__delay_line_in;
        
    
             // Generated from the component: ESS.Inverter.Power_Meas.Power_Meas_DQpu.LPF_Q
                                                                                              

                                _ess_inverter_power_meas_power_meas_dqpu_lpf_q__states[0] = _ess_inverter_power_meas_power_meas_dqpu_lpf_q__delay_line_in;
        
    
                     // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Comparator1
            if (_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_sum3__out < _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_limit_zero__out) {
            _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__state = 0;
        } else if (_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_sum3__out > _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_limit_zero__out) {
            _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__state = 1;
        }

                     // Generated from the component: SolarHouse1.Inverter.Power_Meas.Power_Meas_DQpu.LPF_P
                                                                                              

                                _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_p__states[0] = _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_p__delay_line_in;
        
    
             // Generated from the component: SolarHouse1.Inverter.Power_Meas.Power_Meas_DQpu.LPF_Q
                                                                                              

                                _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_q__states[0] = _solarhouse1_inverter_power_meas_power_meas_dqpu_lpf_q__delay_line_in;
        
    
                     // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Comparator1
            if (_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_sum3__out < _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_limit_zero__out) {
            _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__state = 0;
        } else if (_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_sum3__out > _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_limit_zero__out) {
            _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__state = 1;
        }

                     // Generated from the component: SolarHouse2.Inverter.Power_Meas.Power_Meas_DQpu.LPF_P
                                                                                              

                                _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_p__states[0] = _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_p__delay_line_in;
        
    
             // Generated from the component: SolarHouse2.Inverter.Power_Meas.Power_Meas_DQpu.LPF_Q
                                                                                              

                                _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_q__states[0] = _solarhouse2_inverter_power_meas_power_meas_dqpu_lpf_q__delay_line_in;
        
    
                     // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Comparator1
            if (_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_sum3__out < _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_limit_zero__out) {
            _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__state = 0;
        } else if (_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_sum3__out > _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_limit_zero__out) {
            _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__state = 1;
        }

                     // Generated from the component: SolarHouse3.Inverter.Power_Meas.Power_Meas_DQpu.LPF_P
                                                                                              

                                _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_p__states[0] = _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_p__delay_line_in;
        
    
             // Generated from the component: SolarHouse3.Inverter.Power_Meas.Power_Meas_DQpu.LPF_Q
                                                                                              

                                _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_q__states[0] = _solarhouse3_inverter_power_meas_power_meas_dqpu_lpf_q__delay_line_in;
        
    
                     // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.outer power loop1.Comparator1
            if (_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_sum3__out < _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_limit_zero__out) {
            _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__state = 0;
        } else if (_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_squared_vt2_sum3__out > _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_limit_zero__out) {
            _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_outer_power_loop1_comparator1__state = 1;
        }

                     // Generated from the component: SolarHouse4.Inverter.Power_Meas.Power_Meas_DQpu.LPF_P
                                                                                              

                                _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_p__states[0] = _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_p__delay_line_in;
        
    
             // Generated from the component: SolarHouse4.Inverter.Power_Meas.Power_Meas_DQpu.LPF_Q
                                                                                              

                                _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_q__states[0] = _solarhouse4_inverter_power_meas_power_meas_dqpu_lpf_q__delay_line_in;
        
    
                                                                                                                                                                                                                                         // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.Discrete Transfer Function1
                                                                                              

                                _ess_inverter_controller_single_phase_pll1_discrete_transfer_function1__states[0] = _ess_inverter_controller_single_phase_pll1_discrete_transfer_function1__delay_line_in;
        
    
                             // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.Discrete Transfer Function1
                                                                                              

                                _solarhouse1_inverter_controller_single_phase_pll1_discrete_transfer_function1__states[0] = _solarhouse1_inverter_controller_single_phase_pll1_discrete_transfer_function1__delay_line_in;
        
    
                             // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.Discrete Transfer Function1
                                                                                              

                                _solarhouse2_inverter_controller_single_phase_pll1_discrete_transfer_function1__states[0] = _solarhouse2_inverter_controller_single_phase_pll1_discrete_transfer_function1__delay_line_in;
        
    
                             // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.Discrete Transfer Function1
                                                                                              

                                _solarhouse3_inverter_controller_single_phase_pll1_discrete_transfer_function1__states[0] = _solarhouse3_inverter_controller_single_phase_pll1_discrete_transfer_function1__delay_line_in;
        
    
                             // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.Discrete Transfer Function1
                                                                                              

                                _solarhouse4_inverter_controller_single_phase_pll1_discrete_transfer_function1__states[0] = _solarhouse4_inverter_controller_single_phase_pll1_discrete_transfer_function1__delay_line_in;
        
    
             // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.PID controller2
                                        if (!_ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__av_active) {
                    _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__integrator_state += 69.44444444444444 * _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum9__out * 0.0002;
                }
                                            
    
        
                 // Generated from the component: ESS.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.PID controller1
                                        if (!_ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__av_active) {
                    _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__integrator_state += 69.44444444444444 * _ess_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum8__out * 0.0002;
                }
                                            
    
        
                     // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.PID controller2
                                        if (!_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__av_active) {
                    _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__integrator_state += 69.44444444444444 * _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum9__out * 0.0002;
                }
                                            
    
        
                 // Generated from the component: SolarHouse1.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.PID controller1
                                        if (!_solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__av_active) {
                    _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__integrator_state += 69.44444444444444 * _solarhouse1_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum8__out * 0.0002;
                }
                                            
    
        
                     // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.PID controller2
                                        if (!_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__av_active) {
                    _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__integrator_state += 69.44444444444444 * _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum9__out * 0.0002;
                }
                                            
    
        
                 // Generated from the component: SolarHouse2.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.PID controller1
                                        if (!_solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__av_active) {
                    _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__integrator_state += 69.44444444444444 * _solarhouse2_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum8__out * 0.0002;
                }
                                            
    
        
                     // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.PID controller2
                                        if (!_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__av_active) {
                    _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__integrator_state += 69.44444444444444 * _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum9__out * 0.0002;
                }
                                            
    
        
                 // Generated from the component: SolarHouse3.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.PID controller1
                                        if (!_solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__av_active) {
                    _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__integrator_state += 69.44444444444444 * _solarhouse3_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum8__out * 0.0002;
                }
                                            
    
        
                     // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.PID controller2
                                        if (!_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__av_active) {
                    _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller2__integrator_state += 69.44444444444444 * _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum9__out * 0.0002;
                }
                                            
    
        
                 // Generated from the component: SolarHouse4.Inverter.Controller.Outer Voltage Loop + Inner Current Loop.inner current control loop.PID controller1
                                        if (!_solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__av_active) {
                    _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_pid_controller1__integrator_state += 69.44444444444444 * _solarhouse4_inverter_controller_outer_voltage_loop___inner_current_loop_inner_current_control_loop_sum8__out * 0.0002;
                }
                                            
    
        
                                                                                                                                                         // Generated from the component: ESS.Inverter.Controller.Single phase PLL1.integrator_with_reset
    _ess_inverter_controller_single_phase_pll1_integrator_with_reset__out_calc+=_ess_inverter_controller_single_phase_pll1_integrator_with_reset__in*0.0002;if (_ess_inverter_controller_single_phase_pll1_integrator_with_reset__out_calc>_ess_inverter_controller_single_phase_pll1_integrator_with_reset__reset_value)_ess_inverter_controller_single_phase_pll1_integrator_with_reset__out_calc-=_ess_inverter_controller_single_phase_pll1_integrator_with_reset__reset_value;

                         // Generated from the component: SolarHouse1.Inverter.Controller.Single phase PLL1.integrator_with_reset
    _solarhouse1_inverter_controller_single_phase_pll1_integrator_with_reset__out_calc+=_solarhouse1_inverter_controller_single_phase_pll1_integrator_with_reset__in*0.0002;if (_solarhouse1_inverter_controller_single_phase_pll1_integrator_with_reset__out_calc>_solarhouse1_inverter_controller_single_phase_pll1_integrator_with_reset__reset_value)_solarhouse1_inverter_controller_single_phase_pll1_integrator_with_reset__out_calc-=_solarhouse1_inverter_controller_single_phase_pll1_integrator_with_reset__reset_value;

                         // Generated from the component: SolarHouse2.Inverter.Controller.Single phase PLL1.integrator_with_reset
    _solarhouse2_inverter_controller_single_phase_pll1_integrator_with_reset__out_calc+=_solarhouse2_inverter_controller_single_phase_pll1_integrator_with_reset__in*0.0002;if (_solarhouse2_inverter_controller_single_phase_pll1_integrator_with_reset__out_calc>_solarhouse2_inverter_controller_single_phase_pll1_integrator_with_reset__reset_value)_solarhouse2_inverter_controller_single_phase_pll1_integrator_with_reset__out_calc-=_solarhouse2_inverter_controller_single_phase_pll1_integrator_with_reset__reset_value;

                         // Generated from the component: SolarHouse3.Inverter.Controller.Single phase PLL1.integrator_with_reset
    _solarhouse3_inverter_controller_single_phase_pll1_integrator_with_reset__out_calc+=_solarhouse3_inverter_controller_single_phase_pll1_integrator_with_reset__in*0.0002;if (_solarhouse3_inverter_controller_single_phase_pll1_integrator_with_reset__out_calc>_solarhouse3_inverter_controller_single_phase_pll1_integrator_with_reset__reset_value)_solarhouse3_inverter_controller_single_phase_pll1_integrator_with_reset__out_calc-=_solarhouse3_inverter_controller_single_phase_pll1_integrator_with_reset__reset_value;

                         // Generated from the component: SolarHouse4.Inverter.Controller.Single phase PLL1.integrator_with_reset
    _solarhouse4_inverter_controller_single_phase_pll1_integrator_with_reset__out_calc+=_solarhouse4_inverter_controller_single_phase_pll1_integrator_with_reset__in*0.0002;if (_solarhouse4_inverter_controller_single_phase_pll1_integrator_with_reset__out_calc>_solarhouse4_inverter_controller_single_phase_pll1_integrator_with_reset__reset_value)_solarhouse4_inverter_controller_single_phase_pll1_integrator_with_reset__out_calc-=_solarhouse4_inverter_controller_single_phase_pll1_integrator_with_reset__reset_value;

                                                                                                                                                                                                                                                        //@cmp.update.block.end
}
void TimerCounterHandler_2_user_sp_cpu0_dev0() {

#if DEBUG_MODE
    printf("\n\rTimerCounterHandler_2");
#endif

    //////////////////////////////////////////////////////////////////////////
    // Output block
    //////////////////////////////////////////////////////////////////////////
    //@cmp.out.block.start
         // Generated from the component: Measurement.Ia.Ia1
        _measurement_ia_ia1__out = (HIL_InFloat(0xc80000+0x7));

             // Generated from the component: Measurement.Single Phase Power Meter1.Radian
        
             // Generated from the component: Measurement.Va.Va1
        _measurement_va_va1__out = (HIL_InFloat(0xc80000+0x5));

             // Generated from the component: SolarHouse1.Measurement.Ia.Ia1
        _solarhouse1_measurement_ia_ia1__out = (HIL_InFloat(0xc80000+0x40b));

             // Generated from the component: SolarHouse1.Measurement.Single Phase Power Meter1.Radian
        
             // Generated from the component: SolarHouse1.Measurement.Va.Va1
        _solarhouse1_measurement_va_va1__out = (HIL_InFloat(0xc80000+0x407));

             // Generated from the component: SolarHouse2.Measurement.Ia.Ia1
        _solarhouse2_measurement_ia_ia1__out = (HIL_InFloat(0xc80000+0x60b));

             // Generated from the component: SolarHouse2.Measurement.Single Phase Power Meter1.Radian
        
             // Generated from the component: SolarHouse2.Measurement.Va.Va1
        _solarhouse2_measurement_va_va1__out = (HIL_InFloat(0xc80000+0x607));

             // Generated from the component: SolarHouse3.Measurement.Ia.Ia1
        _solarhouse3_measurement_ia_ia1__out = (HIL_InFloat(0xc80000+0x80b));

             // Generated from the component: SolarHouse3.Measurement.Single Phase Power Meter1.Radian
        
             // Generated from the component: SolarHouse3.Measurement.Va.Va1
        _solarhouse3_measurement_va_va1__out = (HIL_InFloat(0xc80000+0x807));

             // Generated from the component: SolarHouse4.Measurement.Ia.Ia1
        _solarhouse4_measurement_ia_ia1__out = (HIL_InFloat(0xc80000+0xa0b));

             // Generated from the component: SolarHouse4.Measurement.Single Phase Power Meter1.Radian
        
             // Generated from the component: SolarHouse4.Measurement.Va.Va1
        _solarhouse4_measurement_va_va1__out = (HIL_InFloat(0xc80000+0xa07));

             // Generated from the component: Measurement.Single Phase Power Meter1.Ia RMS
                                                                                                                                                  

                                    if (17 == _measurement_single_phase_power_meter1_ia_rms__sample_cnt){
                _measurement_single_phase_power_meter1_ia_rms__out = sqrt(_measurement_single_phase_power_meter1_ia_rms__square_sum / _measurement_single_phase_power_meter1_ia_rms__sample_cnt);
                _measurement_single_phase_power_meter1_ia_rms__square_sum = 0.0f;
            }
        
    
             // Generated from the component: Measurement.Single Phase Power Meter1.Va RMS
                                                                                                                                                  

                                    if (17 == _measurement_single_phase_power_meter1_va_rms__sample_cnt){
                _measurement_single_phase_power_meter1_va_rms__out = sqrt(_measurement_single_phase_power_meter1_va_rms__square_sum / _measurement_single_phase_power_meter1_va_rms__sample_cnt);
                _measurement_single_phase_power_meter1_va_rms__square_sum = 0.0f;
            }
        
    
             // Generated from the component: Measurement.Single Phase Power Meter1.phi
    
                                                                                                                                 

                        _measurement_single_phase_power_meter1_phi__phase_diff = _measurement_single_phase_power_meter1_phi__phase_state;
            

             // Generated from the component: SolarHouse1.Measurement.Single Phase Power Meter1.Ia RMS
                                                                                                                                                  

                                    if (17 == _solarhouse1_measurement_single_phase_power_meter1_ia_rms__sample_cnt){
                _solarhouse1_measurement_single_phase_power_meter1_ia_rms__out = sqrt(_solarhouse1_measurement_single_phase_power_meter1_ia_rms__square_sum / _solarhouse1_measurement_single_phase_power_meter1_ia_rms__sample_cnt);
                _solarhouse1_measurement_single_phase_power_meter1_ia_rms__square_sum = 0.0f;
            }
        
    
             // Generated from the component: SolarHouse1.Measurement.Single Phase Power Meter1.Va RMS
                                                                                                                                                  

                                    if (17 == _solarhouse1_measurement_single_phase_power_meter1_va_rms__sample_cnt){
                _solarhouse1_measurement_single_phase_power_meter1_va_rms__out = sqrt(_solarhouse1_measurement_single_phase_power_meter1_va_rms__square_sum / _solarhouse1_measurement_single_phase_power_meter1_va_rms__sample_cnt);
                _solarhouse1_measurement_single_phase_power_meter1_va_rms__square_sum = 0.0f;
            }
        
    
             // Generated from the component: SolarHouse1.Measurement.Single Phase Power Meter1.phi
    
                                                                                                                                 

                        _solarhouse1_measurement_single_phase_power_meter1_phi__phase_diff = _solarhouse1_measurement_single_phase_power_meter1_phi__phase_state;
            

             // Generated from the component: SolarHouse2.Measurement.Single Phase Power Meter1.Ia RMS
                                                                                                                                                  

                                    if (17 == _solarhouse2_measurement_single_phase_power_meter1_ia_rms__sample_cnt){
                _solarhouse2_measurement_single_phase_power_meter1_ia_rms__out = sqrt(_solarhouse2_measurement_single_phase_power_meter1_ia_rms__square_sum / _solarhouse2_measurement_single_phase_power_meter1_ia_rms__sample_cnt);
                _solarhouse2_measurement_single_phase_power_meter1_ia_rms__square_sum = 0.0f;
            }
        
    
             // Generated from the component: SolarHouse2.Measurement.Single Phase Power Meter1.Va RMS
                                                                                                                                                  

                                    if (17 == _solarhouse2_measurement_single_phase_power_meter1_va_rms__sample_cnt){
                _solarhouse2_measurement_single_phase_power_meter1_va_rms__out = sqrt(_solarhouse2_measurement_single_phase_power_meter1_va_rms__square_sum / _solarhouse2_measurement_single_phase_power_meter1_va_rms__sample_cnt);
                _solarhouse2_measurement_single_phase_power_meter1_va_rms__square_sum = 0.0f;
            }
        
    
             // Generated from the component: SolarHouse2.Measurement.Single Phase Power Meter1.phi
    
                                                                                                                                 

                        _solarhouse2_measurement_single_phase_power_meter1_phi__phase_diff = _solarhouse2_measurement_single_phase_power_meter1_phi__phase_state;
            

             // Generated from the component: SolarHouse3.Measurement.Single Phase Power Meter1.Ia RMS
                                                                                                                                                  

                                    if (17 == _solarhouse3_measurement_single_phase_power_meter1_ia_rms__sample_cnt){
                _solarhouse3_measurement_single_phase_power_meter1_ia_rms__out = sqrt(_solarhouse3_measurement_single_phase_power_meter1_ia_rms__square_sum / _solarhouse3_measurement_single_phase_power_meter1_ia_rms__sample_cnt);
                _solarhouse3_measurement_single_phase_power_meter1_ia_rms__square_sum = 0.0f;
            }
        
    
             // Generated from the component: SolarHouse3.Measurement.Single Phase Power Meter1.Va RMS
                                                                                                                                                  

                                    if (17 == _solarhouse3_measurement_single_phase_power_meter1_va_rms__sample_cnt){
                _solarhouse3_measurement_single_phase_power_meter1_va_rms__out = sqrt(_solarhouse3_measurement_single_phase_power_meter1_va_rms__square_sum / _solarhouse3_measurement_single_phase_power_meter1_va_rms__sample_cnt);
                _solarhouse3_measurement_single_phase_power_meter1_va_rms__square_sum = 0.0f;
            }
        
    
             // Generated from the component: SolarHouse3.Measurement.Single Phase Power Meter1.phi
    
                                                                                                                                 

                        _solarhouse3_measurement_single_phase_power_meter1_phi__phase_diff = _solarhouse3_measurement_single_phase_power_meter1_phi__phase_state;
            

             // Generated from the component: SolarHouse4.Measurement.Single Phase Power Meter1.Ia RMS
                                                                                                                                                  

                                    if (17 == _solarhouse4_measurement_single_phase_power_meter1_ia_rms__sample_cnt){
                _solarhouse4_measurement_single_phase_power_meter1_ia_rms__out = sqrt(_solarhouse4_measurement_single_phase_power_meter1_ia_rms__square_sum / _solarhouse4_measurement_single_phase_power_meter1_ia_rms__sample_cnt);
                _solarhouse4_measurement_single_phase_power_meter1_ia_rms__square_sum = 0.0f;
            }
        
    
             // Generated from the component: SolarHouse4.Measurement.Single Phase Power Meter1.Va RMS
                                                                                                                                                  

                                    if (17 == _solarhouse4_measurement_single_phase_power_meter1_va_rms__sample_cnt){
                _solarhouse4_measurement_single_phase_power_meter1_va_rms__out = sqrt(_solarhouse4_measurement_single_phase_power_meter1_va_rms__square_sum / _solarhouse4_measurement_single_phase_power_meter1_va_rms__sample_cnt);
                _solarhouse4_measurement_single_phase_power_meter1_va_rms__square_sum = 0.0f;
            }
        
    
             // Generated from the component: SolarHouse4.Measurement.Single Phase Power Meter1.phi
    
                                                                                                                                 

                        _solarhouse4_measurement_single_phase_power_meter1_phi__phase_diff = _solarhouse4_measurement_single_phase_power_meter1_phi__phase_state;
            

             // Generated from the component: Measurement.Single Phase Power Meter1.calc S
    _measurement_single_phase_power_meter1_calc_s__out = (_measurement_single_phase_power_meter1_va_rms__out * _measurement_single_phase_power_meter1_ia_rms__out);

             // Generated from the component: Measurement.Single Phase Power Meter1.Degree to radians
    _measurement_single_phase_power_meter1_degree_to_radians__out = (_measurement_single_phase_power_meter1_phi__phase_diff * _measurement_single_phase_power_meter1_radian__out);

             // Generated from the component: SolarHouse1.Measurement.Single Phase Power Meter1.calc S
    _solarhouse1_measurement_single_phase_power_meter1_calc_s__out = (_solarhouse1_measurement_single_phase_power_meter1_va_rms__out * _solarhouse1_measurement_single_phase_power_meter1_ia_rms__out);

             // Generated from the component: SolarHouse1.Measurement.Single Phase Power Meter1.Degree to radians
    _solarhouse1_measurement_single_phase_power_meter1_degree_to_radians__out = (_solarhouse1_measurement_single_phase_power_meter1_phi__phase_diff * _solarhouse1_measurement_single_phase_power_meter1_radian__out);

             // Generated from the component: SolarHouse2.Measurement.Single Phase Power Meter1.calc S
    _solarhouse2_measurement_single_phase_power_meter1_calc_s__out = (_solarhouse2_measurement_single_phase_power_meter1_va_rms__out * _solarhouse2_measurement_single_phase_power_meter1_ia_rms__out);

             // Generated from the component: SolarHouse2.Measurement.Single Phase Power Meter1.Degree to radians
    _solarhouse2_measurement_single_phase_power_meter1_degree_to_radians__out = (_solarhouse2_measurement_single_phase_power_meter1_phi__phase_diff * _solarhouse2_measurement_single_phase_power_meter1_radian__out);

             // Generated from the component: SolarHouse3.Measurement.Single Phase Power Meter1.calc S
    _solarhouse3_measurement_single_phase_power_meter1_calc_s__out = (_solarhouse3_measurement_single_phase_power_meter1_va_rms__out * _solarhouse3_measurement_single_phase_power_meter1_ia_rms__out);

             // Generated from the component: SolarHouse3.Measurement.Single Phase Power Meter1.Degree to radians
    _solarhouse3_measurement_single_phase_power_meter1_degree_to_radians__out = (_solarhouse3_measurement_single_phase_power_meter1_phi__phase_diff * _solarhouse3_measurement_single_phase_power_meter1_radian__out);

             // Generated from the component: SolarHouse4.Measurement.Single Phase Power Meter1.calc S
    _solarhouse4_measurement_single_phase_power_meter1_calc_s__out = (_solarhouse4_measurement_single_phase_power_meter1_va_rms__out * _solarhouse4_measurement_single_phase_power_meter1_ia_rms__out);

             // Generated from the component: SolarHouse4.Measurement.Single Phase Power Meter1.Degree to radians
    _solarhouse4_measurement_single_phase_power_meter1_degree_to_radians__out = (_solarhouse4_measurement_single_phase_power_meter1_phi__phase_diff * _solarhouse4_measurement_single_phase_power_meter1_radian__out);

             // Generated from the component: Measurement.Single Phase Power Meter1.cos
    
                      _measurement_single_phase_power_meter1_cos__out = cos(_measurement_single_phase_power_meter1_degree_to_radians__out);
        

             // Generated from the component: Measurement.Single Phase Power Meter1.sin
    
                      _measurement_single_phase_power_meter1_sin__out = sin(_measurement_single_phase_power_meter1_degree_to_radians__out);
        

             // Generated from the component: SolarHouse1.Measurement.Single Phase Power Meter1.cos
    
                      _solarhouse1_measurement_single_phase_power_meter1_cos__out = cos(_solarhouse1_measurement_single_phase_power_meter1_degree_to_radians__out);
        

             // Generated from the component: SolarHouse1.Measurement.Single Phase Power Meter1.sin
    
                      _solarhouse1_measurement_single_phase_power_meter1_sin__out = sin(_solarhouse1_measurement_single_phase_power_meter1_degree_to_radians__out);
        

             // Generated from the component: SolarHouse2.Measurement.Single Phase Power Meter1.cos
    
                      _solarhouse2_measurement_single_phase_power_meter1_cos__out = cos(_solarhouse2_measurement_single_phase_power_meter1_degree_to_radians__out);
        

             // Generated from the component: SolarHouse2.Measurement.Single Phase Power Meter1.sin
    
                      _solarhouse2_measurement_single_phase_power_meter1_sin__out = sin(_solarhouse2_measurement_single_phase_power_meter1_degree_to_radians__out);
        

             // Generated from the component: SolarHouse3.Measurement.Single Phase Power Meter1.cos
    
                      _solarhouse3_measurement_single_phase_power_meter1_cos__out = cos(_solarhouse3_measurement_single_phase_power_meter1_degree_to_radians__out);
        

             // Generated from the component: SolarHouse3.Measurement.Single Phase Power Meter1.sin
    
                      _solarhouse3_measurement_single_phase_power_meter1_sin__out = sin(_solarhouse3_measurement_single_phase_power_meter1_degree_to_radians__out);
        

             // Generated from the component: SolarHouse4.Measurement.Single Phase Power Meter1.cos
    
                      _solarhouse4_measurement_single_phase_power_meter1_cos__out = cos(_solarhouse4_measurement_single_phase_power_meter1_degree_to_radians__out);
        

             // Generated from the component: SolarHouse4.Measurement.Single Phase Power Meter1.sin
    
                      _solarhouse4_measurement_single_phase_power_meter1_sin__out = sin(_solarhouse4_measurement_single_phase_power_meter1_degree_to_radians__out);
        

             // Generated from the component: Measurement.Single Phase Power Meter1.Pmult
    _measurement_single_phase_power_meter1_pmult__out = (_measurement_single_phase_power_meter1_va_rms__out * _measurement_single_phase_power_meter1_ia_rms__out * _measurement_single_phase_power_meter1_cos__out);

             // Generated from the component: Measurement.Single Phase Power Meter1.conjugate
                                _measurement_single_phase_power_meter1_conjugate__out = -1.0 * _measurement_single_phase_power_meter1_sin__out;
        
             // Generated from the component: SolarHouse1.Measurement.Single Phase Power Meter1.Pmult
    _solarhouse1_measurement_single_phase_power_meter1_pmult__out = (_solarhouse1_measurement_single_phase_power_meter1_va_rms__out * _solarhouse1_measurement_single_phase_power_meter1_ia_rms__out * _solarhouse1_measurement_single_phase_power_meter1_cos__out);

             // Generated from the component: SolarHouse1.Measurement.Single Phase Power Meter1.conjugate
                                _solarhouse1_measurement_single_phase_power_meter1_conjugate__out = -1.0 * _solarhouse1_measurement_single_phase_power_meter1_sin__out;
        
             // Generated from the component: SolarHouse2.Measurement.Single Phase Power Meter1.Pmult
    _solarhouse2_measurement_single_phase_power_meter1_pmult__out = (_solarhouse2_measurement_single_phase_power_meter1_va_rms__out * _solarhouse2_measurement_single_phase_power_meter1_ia_rms__out * _solarhouse2_measurement_single_phase_power_meter1_cos__out);

             // Generated from the component: SolarHouse2.Measurement.Single Phase Power Meter1.conjugate
                                _solarhouse2_measurement_single_phase_power_meter1_conjugate__out = -1.0 * _solarhouse2_measurement_single_phase_power_meter1_sin__out;
        
             // Generated from the component: SolarHouse3.Measurement.Single Phase Power Meter1.Pmult
    _solarhouse3_measurement_single_phase_power_meter1_pmult__out = (_solarhouse3_measurement_single_phase_power_meter1_va_rms__out * _solarhouse3_measurement_single_phase_power_meter1_ia_rms__out * _solarhouse3_measurement_single_phase_power_meter1_cos__out);

             // Generated from the component: SolarHouse3.Measurement.Single Phase Power Meter1.conjugate
                                _solarhouse3_measurement_single_phase_power_meter1_conjugate__out = -1.0 * _solarhouse3_measurement_single_phase_power_meter1_sin__out;
        
             // Generated from the component: SolarHouse4.Measurement.Single Phase Power Meter1.Pmult
    _solarhouse4_measurement_single_phase_power_meter1_pmult__out = (_solarhouse4_measurement_single_phase_power_meter1_va_rms__out * _solarhouse4_measurement_single_phase_power_meter1_ia_rms__out * _solarhouse4_measurement_single_phase_power_meter1_cos__out);

             // Generated from the component: SolarHouse4.Measurement.Single Phase Power Meter1.conjugate
                                _solarhouse4_measurement_single_phase_power_meter1_conjugate__out = -1.0 * _solarhouse4_measurement_single_phase_power_meter1_sin__out;
        
             // Generated from the component: Measurement.P
          HIL_OutAO(0x4023, (float)_measurement_single_phase_power_meter1_pmult__out);
  
             // Generated from the component: Measurement.Single Phase Power Meter1.Qmult
    _measurement_single_phase_power_meter1_qmult__out = (_measurement_single_phase_power_meter1_va_rms__out * _measurement_single_phase_power_meter1_ia_rms__out * _measurement_single_phase_power_meter1_conjugate__out);

             // Generated from the component: SolarHouse1.Measurement.P
          HIL_OutAO(0x403a, (float)_solarhouse1_measurement_single_phase_power_meter1_pmult__out);
  
             // Generated from the component: SolarHouse1.Modbus.P_probe
          HIL_OutAO(0x403c, (float)_solarhouse1_measurement_single_phase_power_meter1_pmult__out);
  
             // Generated from the component: SolarHouse1.Modbus.Rate Transition1.Input
    _solarhouse1_modbus_rate_transition1_output__out = _solarhouse1_measurement_single_phase_power_meter1_pmult__out;
             // Generated from the component: SolarHouse1.Measurement.Single Phase Power Meter1.Qmult
    _solarhouse1_measurement_single_phase_power_meter1_qmult__out = (_solarhouse1_measurement_single_phase_power_meter1_va_rms__out * _solarhouse1_measurement_single_phase_power_meter1_ia_rms__out * _solarhouse1_measurement_single_phase_power_meter1_conjugate__out);

             // Generated from the component: SolarHouse2.Measurement.P
          HIL_OutAO(0x4054, (float)_solarhouse2_measurement_single_phase_power_meter1_pmult__out);
  
             // Generated from the component: SolarHouse2.Modbus.P_probe
          HIL_OutAO(0x4056, (float)_solarhouse2_measurement_single_phase_power_meter1_pmult__out);
  
             // Generated from the component: SolarHouse2.Modbus.Rate Transition1.Input
    _solarhouse2_modbus_rate_transition1_output__out = _solarhouse2_measurement_single_phase_power_meter1_pmult__out;
             // Generated from the component: SolarHouse2.Measurement.Single Phase Power Meter1.Qmult
    _solarhouse2_measurement_single_phase_power_meter1_qmult__out = (_solarhouse2_measurement_single_phase_power_meter1_va_rms__out * _solarhouse2_measurement_single_phase_power_meter1_ia_rms__out * _solarhouse2_measurement_single_phase_power_meter1_conjugate__out);

             // Generated from the component: SolarHouse3.Measurement.P
          HIL_OutAO(0x406e, (float)_solarhouse3_measurement_single_phase_power_meter1_pmult__out);
  
             // Generated from the component: SolarHouse3.Modbus.P_probe
          HIL_OutAO(0x4070, (float)_solarhouse3_measurement_single_phase_power_meter1_pmult__out);
  
             // Generated from the component: SolarHouse3.Modbus.Rate Transition1.Input
    _solarhouse3_modbus_rate_transition1_output__out = _solarhouse3_measurement_single_phase_power_meter1_pmult__out;
             // Generated from the component: SolarHouse3.Measurement.Single Phase Power Meter1.Qmult
    _solarhouse3_measurement_single_phase_power_meter1_qmult__out = (_solarhouse3_measurement_single_phase_power_meter1_va_rms__out * _solarhouse3_measurement_single_phase_power_meter1_ia_rms__out * _solarhouse3_measurement_single_phase_power_meter1_conjugate__out);

             // Generated from the component: SolarHouse4.Measurement.P
          HIL_OutAO(0x4088, (float)_solarhouse4_measurement_single_phase_power_meter1_pmult__out);
  
             // Generated from the component: SolarHouse4.Modbus.P_probe
          HIL_OutAO(0x408a, (float)_solarhouse4_measurement_single_phase_power_meter1_pmult__out);
  
             // Generated from the component: SolarHouse4.Modbus.Rate Transition1.Input
    _solarhouse4_modbus_rate_transition1_output__out = _solarhouse4_measurement_single_phase_power_meter1_pmult__out;
             // Generated from the component: SolarHouse4.Measurement.Single Phase Power Meter1.Qmult
    _solarhouse4_measurement_single_phase_power_meter1_qmult__out = (_solarhouse4_measurement_single_phase_power_meter1_va_rms__out * _solarhouse4_measurement_single_phase_power_meter1_ia_rms__out * _solarhouse4_measurement_single_phase_power_meter1_conjugate__out);

             // Generated from the component: Measurement.Q
          HIL_OutAO(0x4024, (float)_measurement_single_phase_power_meter1_qmult__out);
  
             // Generated from the component: SolarHouse1.Measurement.Q
          HIL_OutAO(0x403b, (float)_solarhouse1_measurement_single_phase_power_meter1_qmult__out);
  
             // Generated from the component: SolarHouse2.Measurement.Q
          HIL_OutAO(0x4055, (float)_solarhouse2_measurement_single_phase_power_meter1_qmult__out);
  
             // Generated from the component: SolarHouse3.Measurement.Q
          HIL_OutAO(0x406f, (float)_solarhouse3_measurement_single_phase_power_meter1_qmult__out);
  
             // Generated from the component: SolarHouse4.Measurement.Q
          HIL_OutAO(0x4089, (float)_solarhouse4_measurement_single_phase_power_meter1_qmult__out);
  
    //@cmp.out.block.end


    //////////////////////////////////////////////////////////////////////////
    // Update block
    //////////////////////////////////////////////////////////////////////////
    //@cmp.update.block.start
                                                                     // Generated from the component: Measurement.Single Phase Power Meter1.Ia RMS
                                                                                                                                                  

                        if (17 == _measurement_single_phase_power_meter1_ia_rms__sample_cnt){
                _measurement_single_phase_power_meter1_ia_rms__sample_cnt = 0;
            }
                _measurement_single_phase_power_meter1_ia_rms__square_sum += _measurement_ia_ia1__out * _measurement_ia_ia1__out;
        _measurement_single_phase_power_meter1_ia_rms__sample_cnt ++;
    
             // Generated from the component: Measurement.Single Phase Power Meter1.Va RMS
                                                                                                                                                  

                        if (17 == _measurement_single_phase_power_meter1_va_rms__sample_cnt){
                _measurement_single_phase_power_meter1_va_rms__sample_cnt = 0;
            }
                _measurement_single_phase_power_meter1_va_rms__square_sum += _measurement_va_va1__out * _measurement_va_va1__out;
        _measurement_single_phase_power_meter1_va_rms__sample_cnt ++;
    
             // Generated from the component: Measurement.Single Phase Power Meter1.phi
    
                                                                                                                                 

        _measurement_single_phase_power_meter1_phi__sample_cnt_ref += 1;

        _measurement_single_phase_power_meter1_phi__previous_filtered_ref = _measurement_single_phase_power_meter1_phi__filtered_ref;
    _measurement_single_phase_power_meter1_phi__filtered_ref = _measurement_single_phase_power_meter1_phi__previous_filtered_ref * 0.1715728752538097 + _measurement_va_va1__out * 0.8284271247461903;

        if( _measurement_single_phase_power_meter1_phi__sample_cnt_ref >= 500 ){
        _measurement_single_phase_power_meter1_phi__zc_flag_ref = 0;
        _measurement_single_phase_power_meter1_phi__sample_cnt_ref = 0;
        _measurement_single_phase_power_meter1_phi__previous_correction_ref = 0;

                            _measurement_single_phase_power_meter1_phi__phase_state = 0;
            }
        else if( (_measurement_single_phase_power_meter1_phi__filtered_ref >= 0) && (_measurement_single_phase_power_meter1_phi__previous_filtered_ref < 0) ){
        _measurement_single_phase_power_meter1_phi__zc_flag_ref = 1;
    }
    else{
        _measurement_single_phase_power_meter1_phi__zc_flag_ref = 0;
    }

    
                _measurement_single_phase_power_meter1_phi__sample_cnt_in += 1;

                _measurement_single_phase_power_meter1_phi__previous_filtered_in = _measurement_single_phase_power_meter1_phi__filtered_in;
        _measurement_single_phase_power_meter1_phi__filtered_in = _measurement_single_phase_power_meter1_phi__previous_filtered_in * 0.1715728752538097 + _measurement_ia_ia1__out * 0.8284271247461903;

                if( _measurement_single_phase_power_meter1_phi__sample_cnt_in >= 500 ){
            _measurement_single_phase_power_meter1_phi__zc_flag_in = 0;
            _measurement_single_phase_power_meter1_phi__no_zc_flag_in = 1;
            _measurement_single_phase_power_meter1_phi__sample_cnt_in = 0;
            _measurement_single_phase_power_meter1_phi__previous_correction_in = 0;

                        _measurement_single_phase_power_meter1_phi__phase_state = 0;
        }
                else if( (_measurement_single_phase_power_meter1_phi__filtered_in >= 0) && (_measurement_single_phase_power_meter1_phi__previous_filtered_in < 0) ){
            _measurement_single_phase_power_meter1_phi__zc_flag_in = 1;
            _measurement_single_phase_power_meter1_phi__no_zc_flag_in = 0;
        }
        else{
            _measurement_single_phase_power_meter1_phi__zc_flag_in = 0;
        }
    

        if( _measurement_single_phase_power_meter1_phi__zc_flag_ref ) {
                _measurement_single_phase_power_meter1_phi__correction_ref = - _measurement_single_phase_power_meter1_phi__previous_filtered_ref/( _measurement_single_phase_power_meter1_phi__filtered_ref - _measurement_single_phase_power_meter1_phi__previous_filtered_ref );

                _measurement_single_phase_power_meter1_phi__sample_cnt_ref += _measurement_single_phase_power_meter1_phi__correction_ref - _measurement_single_phase_power_meter1_phi__previous_correction_ref;

        
            if( (_measurement_single_phase_power_meter1_phi__sample_cnt_ref > 1e-6) || (_measurement_single_phase_power_meter1_phi__sample_cnt_ref < -1e-6) ){
                if( !_measurement_single_phase_power_meter1_phi__no_zc_flag_in ){
                    _measurement_single_phase_power_meter1_phi__phase_state = 360.0 * ( _measurement_single_phase_power_meter1_phi__sample_cnt_in + _measurement_single_phase_power_meter1_phi__correction_ref - _measurement_single_phase_power_meter1_phi__previous_correction_in ) / _measurement_single_phase_power_meter1_phi__sample_cnt_ref;
                }
            }

                        if( (_measurement_single_phase_power_meter1_phi__phase_state > 360.0) || (_measurement_single_phase_power_meter1_phi__phase_state < -360.0) ){
                _measurement_single_phase_power_meter1_phi__phase_state = fmod(_measurement_single_phase_power_meter1_phi__phase_state, 360.0);
            }

                        if (_measurement_single_phase_power_meter1_phi__phase_state < -180.0){
                _measurement_single_phase_power_meter1_phi__phase_state += 360.0;
            }
            else if (_measurement_single_phase_power_meter1_phi__phase_state > 180.0){
                _measurement_single_phase_power_meter1_phi__phase_state -= 360.0;
            }

        
                _measurement_single_phase_power_meter1_phi__sample_cnt_ref = 0;
        _measurement_single_phase_power_meter1_phi__previous_correction_ref = _measurement_single_phase_power_meter1_phi__correction_ref;
    }


    
        if( _measurement_single_phase_power_meter1_phi__zc_flag_in ) {
                        _measurement_single_phase_power_meter1_phi__correction_in = - _measurement_single_phase_power_meter1_phi__previous_filtered_in/( _measurement_single_phase_power_meter1_phi__filtered_in - _measurement_single_phase_power_meter1_phi__previous_filtered_in );

            _measurement_single_phase_power_meter1_phi__sample_cnt_in = 0;
            _measurement_single_phase_power_meter1_phi__previous_correction_in = _measurement_single_phase_power_meter1_phi__correction_in;
        }

    

             // Generated from the component: SolarHouse1.Measurement.Single Phase Power Meter1.Ia RMS
                                                                                                                                                  

                        if (17 == _solarhouse1_measurement_single_phase_power_meter1_ia_rms__sample_cnt){
                _solarhouse1_measurement_single_phase_power_meter1_ia_rms__sample_cnt = 0;
            }
                _solarhouse1_measurement_single_phase_power_meter1_ia_rms__square_sum += _solarhouse1_measurement_ia_ia1__out * _solarhouse1_measurement_ia_ia1__out;
        _solarhouse1_measurement_single_phase_power_meter1_ia_rms__sample_cnt ++;
    
             // Generated from the component: SolarHouse1.Measurement.Single Phase Power Meter1.Va RMS
                                                                                                                                                  

                        if (17 == _solarhouse1_measurement_single_phase_power_meter1_va_rms__sample_cnt){
                _solarhouse1_measurement_single_phase_power_meter1_va_rms__sample_cnt = 0;
            }
                _solarhouse1_measurement_single_phase_power_meter1_va_rms__square_sum += _solarhouse1_measurement_va_va1__out * _solarhouse1_measurement_va_va1__out;
        _solarhouse1_measurement_single_phase_power_meter1_va_rms__sample_cnt ++;
    
             // Generated from the component: SolarHouse1.Measurement.Single Phase Power Meter1.phi
    
                                                                                                                                 

        _solarhouse1_measurement_single_phase_power_meter1_phi__sample_cnt_ref += 1;

        _solarhouse1_measurement_single_phase_power_meter1_phi__previous_filtered_ref = _solarhouse1_measurement_single_phase_power_meter1_phi__filtered_ref;
    _solarhouse1_measurement_single_phase_power_meter1_phi__filtered_ref = _solarhouse1_measurement_single_phase_power_meter1_phi__previous_filtered_ref * 0.6806398855131678 + _solarhouse1_measurement_va_va1__out * 0.3193601144868322;

        if( _solarhouse1_measurement_single_phase_power_meter1_phi__sample_cnt_ref >= 500 ){
        _solarhouse1_measurement_single_phase_power_meter1_phi__zc_flag_ref = 0;
        _solarhouse1_measurement_single_phase_power_meter1_phi__sample_cnt_ref = 0;
        _solarhouse1_measurement_single_phase_power_meter1_phi__previous_correction_ref = 0;

                            _solarhouse1_measurement_single_phase_power_meter1_phi__phase_state = 0;
            }
        else if( (_solarhouse1_measurement_single_phase_power_meter1_phi__filtered_ref >= 0) && (_solarhouse1_measurement_single_phase_power_meter1_phi__previous_filtered_ref < 0) ){
        _solarhouse1_measurement_single_phase_power_meter1_phi__zc_flag_ref = 1;
    }
    else{
        _solarhouse1_measurement_single_phase_power_meter1_phi__zc_flag_ref = 0;
    }

    
                _solarhouse1_measurement_single_phase_power_meter1_phi__sample_cnt_in += 1;

                _solarhouse1_measurement_single_phase_power_meter1_phi__previous_filtered_in = _solarhouse1_measurement_single_phase_power_meter1_phi__filtered_in;
        _solarhouse1_measurement_single_phase_power_meter1_phi__filtered_in = _solarhouse1_measurement_single_phase_power_meter1_phi__previous_filtered_in * 0.6806398855131678 + _solarhouse1_measurement_ia_ia1__out * 0.3193601144868322;

                if( _solarhouse1_measurement_single_phase_power_meter1_phi__sample_cnt_in >= 500 ){
            _solarhouse1_measurement_single_phase_power_meter1_phi__zc_flag_in = 0;
            _solarhouse1_measurement_single_phase_power_meter1_phi__no_zc_flag_in = 1;
            _solarhouse1_measurement_single_phase_power_meter1_phi__sample_cnt_in = 0;
            _solarhouse1_measurement_single_phase_power_meter1_phi__previous_correction_in = 0;

                        _solarhouse1_measurement_single_phase_power_meter1_phi__phase_state = 0;
        }
                else if( (_solarhouse1_measurement_single_phase_power_meter1_phi__filtered_in >= 0) && (_solarhouse1_measurement_single_phase_power_meter1_phi__previous_filtered_in < 0) ){
            _solarhouse1_measurement_single_phase_power_meter1_phi__zc_flag_in = 1;
            _solarhouse1_measurement_single_phase_power_meter1_phi__no_zc_flag_in = 0;
        }
        else{
            _solarhouse1_measurement_single_phase_power_meter1_phi__zc_flag_in = 0;
        }
    

        if( _solarhouse1_measurement_single_phase_power_meter1_phi__zc_flag_ref ) {
                _solarhouse1_measurement_single_phase_power_meter1_phi__correction_ref = - _solarhouse1_measurement_single_phase_power_meter1_phi__previous_filtered_ref/( _solarhouse1_measurement_single_phase_power_meter1_phi__filtered_ref - _solarhouse1_measurement_single_phase_power_meter1_phi__previous_filtered_ref );

                _solarhouse1_measurement_single_phase_power_meter1_phi__sample_cnt_ref += _solarhouse1_measurement_single_phase_power_meter1_phi__correction_ref - _solarhouse1_measurement_single_phase_power_meter1_phi__previous_correction_ref;

        
            if( (_solarhouse1_measurement_single_phase_power_meter1_phi__sample_cnt_ref > 1e-6) || (_solarhouse1_measurement_single_phase_power_meter1_phi__sample_cnt_ref < -1e-6) ){
                if( !_solarhouse1_measurement_single_phase_power_meter1_phi__no_zc_flag_in ){
                    _solarhouse1_measurement_single_phase_power_meter1_phi__phase_state = 360.0 * ( _solarhouse1_measurement_single_phase_power_meter1_phi__sample_cnt_in + _solarhouse1_measurement_single_phase_power_meter1_phi__correction_ref - _solarhouse1_measurement_single_phase_power_meter1_phi__previous_correction_in ) / _solarhouse1_measurement_single_phase_power_meter1_phi__sample_cnt_ref;
                }
            }

                        if( (_solarhouse1_measurement_single_phase_power_meter1_phi__phase_state > 360.0) || (_solarhouse1_measurement_single_phase_power_meter1_phi__phase_state < -360.0) ){
                _solarhouse1_measurement_single_phase_power_meter1_phi__phase_state = fmod(_solarhouse1_measurement_single_phase_power_meter1_phi__phase_state, 360.0);
            }

                        if (_solarhouse1_measurement_single_phase_power_meter1_phi__phase_state < -180.0){
                _solarhouse1_measurement_single_phase_power_meter1_phi__phase_state += 360.0;
            }
            else if (_solarhouse1_measurement_single_phase_power_meter1_phi__phase_state > 180.0){
                _solarhouse1_measurement_single_phase_power_meter1_phi__phase_state -= 360.0;
            }

        
                _solarhouse1_measurement_single_phase_power_meter1_phi__sample_cnt_ref = 0;
        _solarhouse1_measurement_single_phase_power_meter1_phi__previous_correction_ref = _solarhouse1_measurement_single_phase_power_meter1_phi__correction_ref;
    }


    
        if( _solarhouse1_measurement_single_phase_power_meter1_phi__zc_flag_in ) {
                        _solarhouse1_measurement_single_phase_power_meter1_phi__correction_in = - _solarhouse1_measurement_single_phase_power_meter1_phi__previous_filtered_in/( _solarhouse1_measurement_single_phase_power_meter1_phi__filtered_in - _solarhouse1_measurement_single_phase_power_meter1_phi__previous_filtered_in );

            _solarhouse1_measurement_single_phase_power_meter1_phi__sample_cnt_in = 0;
            _solarhouse1_measurement_single_phase_power_meter1_phi__previous_correction_in = _solarhouse1_measurement_single_phase_power_meter1_phi__correction_in;
        }

    

             // Generated from the component: SolarHouse2.Measurement.Single Phase Power Meter1.Ia RMS
                                                                                                                                                  

                        if (17 == _solarhouse2_measurement_single_phase_power_meter1_ia_rms__sample_cnt){
                _solarhouse2_measurement_single_phase_power_meter1_ia_rms__sample_cnt = 0;
            }
                _solarhouse2_measurement_single_phase_power_meter1_ia_rms__square_sum += _solarhouse2_measurement_ia_ia1__out * _solarhouse2_measurement_ia_ia1__out;
        _solarhouse2_measurement_single_phase_power_meter1_ia_rms__sample_cnt ++;
    
             // Generated from the component: SolarHouse2.Measurement.Single Phase Power Meter1.Va RMS
                                                                                                                                                  

                        if (17 == _solarhouse2_measurement_single_phase_power_meter1_va_rms__sample_cnt){
                _solarhouse2_measurement_single_phase_power_meter1_va_rms__sample_cnt = 0;
            }
                _solarhouse2_measurement_single_phase_power_meter1_va_rms__square_sum += _solarhouse2_measurement_va_va1__out * _solarhouse2_measurement_va_va1__out;
        _solarhouse2_measurement_single_phase_power_meter1_va_rms__sample_cnt ++;
    
             // Generated from the component: SolarHouse2.Measurement.Single Phase Power Meter1.phi
    
                                                                                                                                 

        _solarhouse2_measurement_single_phase_power_meter1_phi__sample_cnt_ref += 1;

        _solarhouse2_measurement_single_phase_power_meter1_phi__previous_filtered_ref = _solarhouse2_measurement_single_phase_power_meter1_phi__filtered_ref;
    _solarhouse2_measurement_single_phase_power_meter1_phi__filtered_ref = _solarhouse2_measurement_single_phase_power_meter1_phi__previous_filtered_ref * 0.1715728752538097 + _solarhouse2_measurement_va_va1__out * 0.8284271247461903;

        if( _solarhouse2_measurement_single_phase_power_meter1_phi__sample_cnt_ref >= 500 ){
        _solarhouse2_measurement_single_phase_power_meter1_phi__zc_flag_ref = 0;
        _solarhouse2_measurement_single_phase_power_meter1_phi__sample_cnt_ref = 0;
        _solarhouse2_measurement_single_phase_power_meter1_phi__previous_correction_ref = 0;

                            _solarhouse2_measurement_single_phase_power_meter1_phi__phase_state = 0;
            }
        else if( (_solarhouse2_measurement_single_phase_power_meter1_phi__filtered_ref >= 0) && (_solarhouse2_measurement_single_phase_power_meter1_phi__previous_filtered_ref < 0) ){
        _solarhouse2_measurement_single_phase_power_meter1_phi__zc_flag_ref = 1;
    }
    else{
        _solarhouse2_measurement_single_phase_power_meter1_phi__zc_flag_ref = 0;
    }

    
                _solarhouse2_measurement_single_phase_power_meter1_phi__sample_cnt_in += 1;

                _solarhouse2_measurement_single_phase_power_meter1_phi__previous_filtered_in = _solarhouse2_measurement_single_phase_power_meter1_phi__filtered_in;
        _solarhouse2_measurement_single_phase_power_meter1_phi__filtered_in = _solarhouse2_measurement_single_phase_power_meter1_phi__previous_filtered_in * 0.1715728752538097 + _solarhouse2_measurement_ia_ia1__out * 0.8284271247461903;

                if( _solarhouse2_measurement_single_phase_power_meter1_phi__sample_cnt_in >= 500 ){
            _solarhouse2_measurement_single_phase_power_meter1_phi__zc_flag_in = 0;
            _solarhouse2_measurement_single_phase_power_meter1_phi__no_zc_flag_in = 1;
            _solarhouse2_measurement_single_phase_power_meter1_phi__sample_cnt_in = 0;
            _solarhouse2_measurement_single_phase_power_meter1_phi__previous_correction_in = 0;

                        _solarhouse2_measurement_single_phase_power_meter1_phi__phase_state = 0;
        }
                else if( (_solarhouse2_measurement_single_phase_power_meter1_phi__filtered_in >= 0) && (_solarhouse2_measurement_single_phase_power_meter1_phi__previous_filtered_in < 0) ){
            _solarhouse2_measurement_single_phase_power_meter1_phi__zc_flag_in = 1;
            _solarhouse2_measurement_single_phase_power_meter1_phi__no_zc_flag_in = 0;
        }
        else{
            _solarhouse2_measurement_single_phase_power_meter1_phi__zc_flag_in = 0;
        }
    

        if( _solarhouse2_measurement_single_phase_power_meter1_phi__zc_flag_ref ) {
                _solarhouse2_measurement_single_phase_power_meter1_phi__correction_ref = - _solarhouse2_measurement_single_phase_power_meter1_phi__previous_filtered_ref/( _solarhouse2_measurement_single_phase_power_meter1_phi__filtered_ref - _solarhouse2_measurement_single_phase_power_meter1_phi__previous_filtered_ref );

                _solarhouse2_measurement_single_phase_power_meter1_phi__sample_cnt_ref += _solarhouse2_measurement_single_phase_power_meter1_phi__correction_ref - _solarhouse2_measurement_single_phase_power_meter1_phi__previous_correction_ref;

        
            if( (_solarhouse2_measurement_single_phase_power_meter1_phi__sample_cnt_ref > 1e-6) || (_solarhouse2_measurement_single_phase_power_meter1_phi__sample_cnt_ref < -1e-6) ){
                if( !_solarhouse2_measurement_single_phase_power_meter1_phi__no_zc_flag_in ){
                    _solarhouse2_measurement_single_phase_power_meter1_phi__phase_state = 360.0 * ( _solarhouse2_measurement_single_phase_power_meter1_phi__sample_cnt_in + _solarhouse2_measurement_single_phase_power_meter1_phi__correction_ref - _solarhouse2_measurement_single_phase_power_meter1_phi__previous_correction_in ) / _solarhouse2_measurement_single_phase_power_meter1_phi__sample_cnt_ref;
                }
            }

                        if( (_solarhouse2_measurement_single_phase_power_meter1_phi__phase_state > 360.0) || (_solarhouse2_measurement_single_phase_power_meter1_phi__phase_state < -360.0) ){
                _solarhouse2_measurement_single_phase_power_meter1_phi__phase_state = fmod(_solarhouse2_measurement_single_phase_power_meter1_phi__phase_state, 360.0);
            }

                        if (_solarhouse2_measurement_single_phase_power_meter1_phi__phase_state < -180.0){
                _solarhouse2_measurement_single_phase_power_meter1_phi__phase_state += 360.0;
            }
            else if (_solarhouse2_measurement_single_phase_power_meter1_phi__phase_state > 180.0){
                _solarhouse2_measurement_single_phase_power_meter1_phi__phase_state -= 360.0;
            }

        
                _solarhouse2_measurement_single_phase_power_meter1_phi__sample_cnt_ref = 0;
        _solarhouse2_measurement_single_phase_power_meter1_phi__previous_correction_ref = _solarhouse2_measurement_single_phase_power_meter1_phi__correction_ref;
    }


    
        if( _solarhouse2_measurement_single_phase_power_meter1_phi__zc_flag_in ) {
                        _solarhouse2_measurement_single_phase_power_meter1_phi__correction_in = - _solarhouse2_measurement_single_phase_power_meter1_phi__previous_filtered_in/( _solarhouse2_measurement_single_phase_power_meter1_phi__filtered_in - _solarhouse2_measurement_single_phase_power_meter1_phi__previous_filtered_in );

            _solarhouse2_measurement_single_phase_power_meter1_phi__sample_cnt_in = 0;
            _solarhouse2_measurement_single_phase_power_meter1_phi__previous_correction_in = _solarhouse2_measurement_single_phase_power_meter1_phi__correction_in;
        }

    

             // Generated from the component: SolarHouse3.Measurement.Single Phase Power Meter1.Ia RMS
                                                                                                                                                  

                        if (17 == _solarhouse3_measurement_single_phase_power_meter1_ia_rms__sample_cnt){
                _solarhouse3_measurement_single_phase_power_meter1_ia_rms__sample_cnt = 0;
            }
                _solarhouse3_measurement_single_phase_power_meter1_ia_rms__square_sum += _solarhouse3_measurement_ia_ia1__out * _solarhouse3_measurement_ia_ia1__out;
        _solarhouse3_measurement_single_phase_power_meter1_ia_rms__sample_cnt ++;
    
             // Generated from the component: SolarHouse3.Measurement.Single Phase Power Meter1.Va RMS
                                                                                                                                                  

                        if (17 == _solarhouse3_measurement_single_phase_power_meter1_va_rms__sample_cnt){
                _solarhouse3_measurement_single_phase_power_meter1_va_rms__sample_cnt = 0;
            }
                _solarhouse3_measurement_single_phase_power_meter1_va_rms__square_sum += _solarhouse3_measurement_va_va1__out * _solarhouse3_measurement_va_va1__out;
        _solarhouse3_measurement_single_phase_power_meter1_va_rms__sample_cnt ++;
    
             // Generated from the component: SolarHouse3.Measurement.Single Phase Power Meter1.phi
    
                                                                                                                                 

        _solarhouse3_measurement_single_phase_power_meter1_phi__sample_cnt_ref += 1;

        _solarhouse3_measurement_single_phase_power_meter1_phi__previous_filtered_ref = _solarhouse3_measurement_single_phase_power_meter1_phi__filtered_ref;
    _solarhouse3_measurement_single_phase_power_meter1_phi__filtered_ref = _solarhouse3_measurement_single_phase_power_meter1_phi__previous_filtered_ref * 0.1715728752538097 + _solarhouse3_measurement_va_va1__out * 0.8284271247461903;

        if( _solarhouse3_measurement_single_phase_power_meter1_phi__sample_cnt_ref >= 500 ){
        _solarhouse3_measurement_single_phase_power_meter1_phi__zc_flag_ref = 0;
        _solarhouse3_measurement_single_phase_power_meter1_phi__sample_cnt_ref = 0;
        _solarhouse3_measurement_single_phase_power_meter1_phi__previous_correction_ref = 0;

                            _solarhouse3_measurement_single_phase_power_meter1_phi__phase_state = 0;
            }
        else if( (_solarhouse3_measurement_single_phase_power_meter1_phi__filtered_ref >= 0) && (_solarhouse3_measurement_single_phase_power_meter1_phi__previous_filtered_ref < 0) ){
        _solarhouse3_measurement_single_phase_power_meter1_phi__zc_flag_ref = 1;
    }
    else{
        _solarhouse3_measurement_single_phase_power_meter1_phi__zc_flag_ref = 0;
    }

    
                _solarhouse3_measurement_single_phase_power_meter1_phi__sample_cnt_in += 1;

                _solarhouse3_measurement_single_phase_power_meter1_phi__previous_filtered_in = _solarhouse3_measurement_single_phase_power_meter1_phi__filtered_in;
        _solarhouse3_measurement_single_phase_power_meter1_phi__filtered_in = _solarhouse3_measurement_single_phase_power_meter1_phi__previous_filtered_in * 0.1715728752538097 + _solarhouse3_measurement_ia_ia1__out * 0.8284271247461903;

                if( _solarhouse3_measurement_single_phase_power_meter1_phi__sample_cnt_in >= 500 ){
            _solarhouse3_measurement_single_phase_power_meter1_phi__zc_flag_in = 0;
            _solarhouse3_measurement_single_phase_power_meter1_phi__no_zc_flag_in = 1;
            _solarhouse3_measurement_single_phase_power_meter1_phi__sample_cnt_in = 0;
            _solarhouse3_measurement_single_phase_power_meter1_phi__previous_correction_in = 0;

                        _solarhouse3_measurement_single_phase_power_meter1_phi__phase_state = 0;
        }
                else if( (_solarhouse3_measurement_single_phase_power_meter1_phi__filtered_in >= 0) && (_solarhouse3_measurement_single_phase_power_meter1_phi__previous_filtered_in < 0) ){
            _solarhouse3_measurement_single_phase_power_meter1_phi__zc_flag_in = 1;
            _solarhouse3_measurement_single_phase_power_meter1_phi__no_zc_flag_in = 0;
        }
        else{
            _solarhouse3_measurement_single_phase_power_meter1_phi__zc_flag_in = 0;
        }
    

        if( _solarhouse3_measurement_single_phase_power_meter1_phi__zc_flag_ref ) {
                _solarhouse3_measurement_single_phase_power_meter1_phi__correction_ref = - _solarhouse3_measurement_single_phase_power_meter1_phi__previous_filtered_ref/( _solarhouse3_measurement_single_phase_power_meter1_phi__filtered_ref - _solarhouse3_measurement_single_phase_power_meter1_phi__previous_filtered_ref );

                _solarhouse3_measurement_single_phase_power_meter1_phi__sample_cnt_ref += _solarhouse3_measurement_single_phase_power_meter1_phi__correction_ref - _solarhouse3_measurement_single_phase_power_meter1_phi__previous_correction_ref;

        
            if( (_solarhouse3_measurement_single_phase_power_meter1_phi__sample_cnt_ref > 1e-6) || (_solarhouse3_measurement_single_phase_power_meter1_phi__sample_cnt_ref < -1e-6) ){
                if( !_solarhouse3_measurement_single_phase_power_meter1_phi__no_zc_flag_in ){
                    _solarhouse3_measurement_single_phase_power_meter1_phi__phase_state = 360.0 * ( _solarhouse3_measurement_single_phase_power_meter1_phi__sample_cnt_in + _solarhouse3_measurement_single_phase_power_meter1_phi__correction_ref - _solarhouse3_measurement_single_phase_power_meter1_phi__previous_correction_in ) / _solarhouse3_measurement_single_phase_power_meter1_phi__sample_cnt_ref;
                }
            }

                        if( (_solarhouse3_measurement_single_phase_power_meter1_phi__phase_state > 360.0) || (_solarhouse3_measurement_single_phase_power_meter1_phi__phase_state < -360.0) ){
                _solarhouse3_measurement_single_phase_power_meter1_phi__phase_state = fmod(_solarhouse3_measurement_single_phase_power_meter1_phi__phase_state, 360.0);
            }

                        if (_solarhouse3_measurement_single_phase_power_meter1_phi__phase_state < -180.0){
                _solarhouse3_measurement_single_phase_power_meter1_phi__phase_state += 360.0;
            }
            else if (_solarhouse3_measurement_single_phase_power_meter1_phi__phase_state > 180.0){
                _solarhouse3_measurement_single_phase_power_meter1_phi__phase_state -= 360.0;
            }

        
                _solarhouse3_measurement_single_phase_power_meter1_phi__sample_cnt_ref = 0;
        _solarhouse3_measurement_single_phase_power_meter1_phi__previous_correction_ref = _solarhouse3_measurement_single_phase_power_meter1_phi__correction_ref;
    }


    
        if( _solarhouse3_measurement_single_phase_power_meter1_phi__zc_flag_in ) {
                        _solarhouse3_measurement_single_phase_power_meter1_phi__correction_in = - _solarhouse3_measurement_single_phase_power_meter1_phi__previous_filtered_in/( _solarhouse3_measurement_single_phase_power_meter1_phi__filtered_in - _solarhouse3_measurement_single_phase_power_meter1_phi__previous_filtered_in );

            _solarhouse3_measurement_single_phase_power_meter1_phi__sample_cnt_in = 0;
            _solarhouse3_measurement_single_phase_power_meter1_phi__previous_correction_in = _solarhouse3_measurement_single_phase_power_meter1_phi__correction_in;
        }

    

             // Generated from the component: SolarHouse4.Measurement.Single Phase Power Meter1.Ia RMS
                                                                                                                                                  

                        if (17 == _solarhouse4_measurement_single_phase_power_meter1_ia_rms__sample_cnt){
                _solarhouse4_measurement_single_phase_power_meter1_ia_rms__sample_cnt = 0;
            }
                _solarhouse4_measurement_single_phase_power_meter1_ia_rms__square_sum += _solarhouse4_measurement_ia_ia1__out * _solarhouse4_measurement_ia_ia1__out;
        _solarhouse4_measurement_single_phase_power_meter1_ia_rms__sample_cnt ++;
    
             // Generated from the component: SolarHouse4.Measurement.Single Phase Power Meter1.Va RMS
                                                                                                                                                  

                        if (17 == _solarhouse4_measurement_single_phase_power_meter1_va_rms__sample_cnt){
                _solarhouse4_measurement_single_phase_power_meter1_va_rms__sample_cnt = 0;
            }
                _solarhouse4_measurement_single_phase_power_meter1_va_rms__square_sum += _solarhouse4_measurement_va_va1__out * _solarhouse4_measurement_va_va1__out;
        _solarhouse4_measurement_single_phase_power_meter1_va_rms__sample_cnt ++;
    
             // Generated from the component: SolarHouse4.Measurement.Single Phase Power Meter1.phi
    
                                                                                                                                 

        _solarhouse4_measurement_single_phase_power_meter1_phi__sample_cnt_ref += 1;

        _solarhouse4_measurement_single_phase_power_meter1_phi__previous_filtered_ref = _solarhouse4_measurement_single_phase_power_meter1_phi__filtered_ref;
    _solarhouse4_measurement_single_phase_power_meter1_phi__filtered_ref = _solarhouse4_measurement_single_phase_power_meter1_phi__previous_filtered_ref * 0.1715728752538097 + _solarhouse4_measurement_va_va1__out * 0.8284271247461903;

        if( _solarhouse4_measurement_single_phase_power_meter1_phi__sample_cnt_ref >= 500 ){
        _solarhouse4_measurement_single_phase_power_meter1_phi__zc_flag_ref = 0;
        _solarhouse4_measurement_single_phase_power_meter1_phi__sample_cnt_ref = 0;
        _solarhouse4_measurement_single_phase_power_meter1_phi__previous_correction_ref = 0;

                            _solarhouse4_measurement_single_phase_power_meter1_phi__phase_state = 0;
            }
        else if( (_solarhouse4_measurement_single_phase_power_meter1_phi__filtered_ref >= 0) && (_solarhouse4_measurement_single_phase_power_meter1_phi__previous_filtered_ref < 0) ){
        _solarhouse4_measurement_single_phase_power_meter1_phi__zc_flag_ref = 1;
    }
    else{
        _solarhouse4_measurement_single_phase_power_meter1_phi__zc_flag_ref = 0;
    }

    
                _solarhouse4_measurement_single_phase_power_meter1_phi__sample_cnt_in += 1;

                _solarhouse4_measurement_single_phase_power_meter1_phi__previous_filtered_in = _solarhouse4_measurement_single_phase_power_meter1_phi__filtered_in;
        _solarhouse4_measurement_single_phase_power_meter1_phi__filtered_in = _solarhouse4_measurement_single_phase_power_meter1_phi__previous_filtered_in * 0.1715728752538097 + _solarhouse4_measurement_ia_ia1__out * 0.8284271247461903;

                if( _solarhouse4_measurement_single_phase_power_meter1_phi__sample_cnt_in >= 500 ){
            _solarhouse4_measurement_single_phase_power_meter1_phi__zc_flag_in = 0;
            _solarhouse4_measurement_single_phase_power_meter1_phi__no_zc_flag_in = 1;
            _solarhouse4_measurement_single_phase_power_meter1_phi__sample_cnt_in = 0;
            _solarhouse4_measurement_single_phase_power_meter1_phi__previous_correction_in = 0;

                        _solarhouse4_measurement_single_phase_power_meter1_phi__phase_state = 0;
        }
                else if( (_solarhouse4_measurement_single_phase_power_meter1_phi__filtered_in >= 0) && (_solarhouse4_measurement_single_phase_power_meter1_phi__previous_filtered_in < 0) ){
            _solarhouse4_measurement_single_phase_power_meter1_phi__zc_flag_in = 1;
            _solarhouse4_measurement_single_phase_power_meter1_phi__no_zc_flag_in = 0;
        }
        else{
            _solarhouse4_measurement_single_phase_power_meter1_phi__zc_flag_in = 0;
        }
    

        if( _solarhouse4_measurement_single_phase_power_meter1_phi__zc_flag_ref ) {
                _solarhouse4_measurement_single_phase_power_meter1_phi__correction_ref = - _solarhouse4_measurement_single_phase_power_meter1_phi__previous_filtered_ref/( _solarhouse4_measurement_single_phase_power_meter1_phi__filtered_ref - _solarhouse4_measurement_single_phase_power_meter1_phi__previous_filtered_ref );

                _solarhouse4_measurement_single_phase_power_meter1_phi__sample_cnt_ref += _solarhouse4_measurement_single_phase_power_meter1_phi__correction_ref - _solarhouse4_measurement_single_phase_power_meter1_phi__previous_correction_ref;

        
            if( (_solarhouse4_measurement_single_phase_power_meter1_phi__sample_cnt_ref > 1e-6) || (_solarhouse4_measurement_single_phase_power_meter1_phi__sample_cnt_ref < -1e-6) ){
                if( !_solarhouse4_measurement_single_phase_power_meter1_phi__no_zc_flag_in ){
                    _solarhouse4_measurement_single_phase_power_meter1_phi__phase_state = 360.0 * ( _solarhouse4_measurement_single_phase_power_meter1_phi__sample_cnt_in + _solarhouse4_measurement_single_phase_power_meter1_phi__correction_ref - _solarhouse4_measurement_single_phase_power_meter1_phi__previous_correction_in ) / _solarhouse4_measurement_single_phase_power_meter1_phi__sample_cnt_ref;
                }
            }

                        if( (_solarhouse4_measurement_single_phase_power_meter1_phi__phase_state > 360.0) || (_solarhouse4_measurement_single_phase_power_meter1_phi__phase_state < -360.0) ){
                _solarhouse4_measurement_single_phase_power_meter1_phi__phase_state = fmod(_solarhouse4_measurement_single_phase_power_meter1_phi__phase_state, 360.0);
            }

                        if (_solarhouse4_measurement_single_phase_power_meter1_phi__phase_state < -180.0){
                _solarhouse4_measurement_single_phase_power_meter1_phi__phase_state += 360.0;
            }
            else if (_solarhouse4_measurement_single_phase_power_meter1_phi__phase_state > 180.0){
                _solarhouse4_measurement_single_phase_power_meter1_phi__phase_state -= 360.0;
            }

        
                _solarhouse4_measurement_single_phase_power_meter1_phi__sample_cnt_ref = 0;
        _solarhouse4_measurement_single_phase_power_meter1_phi__previous_correction_ref = _solarhouse4_measurement_single_phase_power_meter1_phi__correction_ref;
    }


    
        if( _solarhouse4_measurement_single_phase_power_meter1_phi__zc_flag_in ) {
                        _solarhouse4_measurement_single_phase_power_meter1_phi__correction_in = - _solarhouse4_measurement_single_phase_power_meter1_phi__previous_filtered_in/( _solarhouse4_measurement_single_phase_power_meter1_phi__filtered_in - _solarhouse4_measurement_single_phase_power_meter1_phi__previous_filtered_in );

            _solarhouse4_measurement_single_phase_power_meter1_phi__sample_cnt_in = 0;
            _solarhouse4_measurement_single_phase_power_meter1_phi__previous_correction_in = _solarhouse4_measurement_single_phase_power_meter1_phi__correction_in;
        }

    

                                                                                                                                                                                                                            //@cmp.update.block.end
}
void TimerCounterHandler_3_user_sp_cpu0_dev0() {

#if DEBUG_MODE
    printf("\n\rTimerCounterHandler_3");
#endif

    //////////////////////////////////////////////////////////////////////////
    // Output block
    //////////////////////////////////////////////////////////////////////////
    //@cmp.out.block.start
         // Generated from the component: ESS.C function3
    
    if (_ess_c_function3__t>3){_ess_c_function3__t=0;_ess_c_function3__k+=1;_ess_c_function3__time+=1;}if (_ess_c_function3__k>12)_ess_c_function3__k=0;if (_ess_c_function3__k==1){_ess_c_function3__RegD=1800;}else if (_ess_c_function3__k==2){_ess_c_function3__RegD=2400;}else if (_ess_c_function3__k==3){_ess_c_function3__RegD=2900;}else if (_ess_c_function3__k==4){_ess_c_function3__RegD=2450;}else if (_ess_c_function3__k==5){_ess_c_function3__RegD=1750;}else if (_ess_c_function3__k==6){_ess_c_function3__RegD=2100;}else if (_ess_c_function3__k==7){_ess_c_function3__RegD=2500;}else if (_ess_c_function3__k==8){_ess_c_function3__RegD=3000;}else if (_ess_c_function3__k==9){_ess_c_function3__RegD=2640;}else if (_ess_c_function3__k==10){_ess_c_function3__RegD=2240;}else if (_ess_c_function3__k==11){_ess_c_function3__RegD=1730;}else if (_ess_c_function3__k==12){_ess_c_function3__RegD=2200;}_ess_c_function3__t+=1;

             // Generated from the component: ESS.Inverter.Controller.C function3
    
    _ess_inverter_controller_c_function3__Pref=0.2;if (_ess_inverter_controller_c_function3__k>12)_ess_inverter_controller_c_function3__k=0;if (_ess_inverter_controller_c_function3__t>3)_ess_inverter_controller_c_function3__t=0;if (_ess_inverter_controller_c_function3__k==0){_ess_inverter_controller_c_function3__Pref=0.7;}else if (_ess_inverter_controller_c_function3__k==1){_ess_inverter_controller_c_function3__Pref=0.8;}else if (_ess_inverter_controller_c_function3__k==2){_ess_inverter_controller_c_function3__Pref=0.6;}else if (_ess_inverter_controller_c_function3__k==3){_ess_inverter_controller_c_function3__Pref=0.5;}else if (_ess_inverter_controller_c_function3__k==4){_ess_inverter_controller_c_function3__Pref=0.2;}else if (_ess_inverter_controller_c_function3__k==5){_ess_inverter_controller_c_function3__Pref=0.8;}else if (_ess_inverter_controller_c_function3__k==6){_ess_inverter_controller_c_function3__Pref=0.7;}else if (_ess_inverter_controller_c_function3__k==7){_ess_inverter_controller_c_function3__Pref=0.5;}else if (_ess_inverter_controller_c_function3__k==8){_ess_inverter_controller_c_function3__Pref=0.66;}else if (_ess_inverter_controller_c_function3__k==9){_ess_inverter_controller_c_function3__Pref=0.75;}else if (_ess_inverter_controller_c_function3__k==10){_ess_inverter_controller_c_function3__Pref=0.54;}else if (_ess_inverter_controller_c_function3__k==11){_ess_inverter_controller_c_function3__Pref=0.30;}else if (_ess_inverter_controller_c_function3__k==12){_ess_inverter_controller_c_function3__Pref=0.45;}if (_ess_inverter_controller_c_function3__t>=3)_ess_inverter_controller_c_function3__k+=1;_ess_inverter_controller_c_function3__t+=1;

             // Generated from the component: ESS.Inverter.Controller.Gain23
                                _ess_inverter_controller_gain23__out = 1000.0 * _ess_inverter_controller_c_function3__Pref;
        
             // Generated from the component: ESS.Inverter.Controller.Rate Transition9.Input
    _ess_inverter_controller_rate_transition9_output__out = _ess_inverter_controller_c_function3__Pref;
             // Generated from the component: ESS.Modbus.Rate Transition2.Input
    _ess_modbus_rate_transition2_output__out = _ess_c_function3__RegD;
             // Generated from the component: SolarHouse1.Inverter.Controller.C function3
    
    _solarhouse1_inverter_controller_c_function3__Pref=0.2;if (_solarhouse1_inverter_controller_c_function3__k>12)_solarhouse1_inverter_controller_c_function3__k=0;if (_solarhouse1_inverter_controller_c_function3__t>3)_solarhouse1_inverter_controller_c_function3__t=0;if (_solarhouse1_inverter_controller_c_function3__k==0){_solarhouse1_inverter_controller_c_function3__Pref=0.7;}else if (_solarhouse1_inverter_controller_c_function3__k==1){_solarhouse1_inverter_controller_c_function3__Pref=0.8;}else if (_solarhouse1_inverter_controller_c_function3__k==2){_solarhouse1_inverter_controller_c_function3__Pref=0.6;}else if (_solarhouse1_inverter_controller_c_function3__k==3){_solarhouse1_inverter_controller_c_function3__Pref=0.5;}else if (_solarhouse1_inverter_controller_c_function3__k==4){_solarhouse1_inverter_controller_c_function3__Pref=0.2;}else if (_solarhouse1_inverter_controller_c_function3__k==5){_solarhouse1_inverter_controller_c_function3__Pref=0.8;}else if (_solarhouse1_inverter_controller_c_function3__k==6){_solarhouse1_inverter_controller_c_function3__Pref=0.7;}else if (_solarhouse1_inverter_controller_c_function3__k==7){_solarhouse1_inverter_controller_c_function3__Pref=0.5;}else if (_solarhouse1_inverter_controller_c_function3__k==8){_solarhouse1_inverter_controller_c_function3__Pref=0.66;}else if (_solarhouse1_inverter_controller_c_function3__k==9){_solarhouse1_inverter_controller_c_function3__Pref=0.75;}else if (_solarhouse1_inverter_controller_c_function3__k==10){_solarhouse1_inverter_controller_c_function3__Pref=0.54;}else if (_solarhouse1_inverter_controller_c_function3__k==11){_solarhouse1_inverter_controller_c_function3__Pref=0.30;}else if (_solarhouse1_inverter_controller_c_function3__k==12){_solarhouse1_inverter_controller_c_function3__Pref=0.45;}if (_solarhouse1_inverter_controller_c_function3__t>=3)_solarhouse1_inverter_controller_c_function3__k+=1;_solarhouse1_inverter_controller_c_function3__t+=1;

             // Generated from the component: SolarHouse1.Inverter.Controller.Gain23
                                _solarhouse1_inverter_controller_gain23__out = 1000.0 * _solarhouse1_inverter_controller_c_function3__Pref;
        
             // Generated from the component: SolarHouse1.Inverter.Controller.Rate Transition9.Input
    _solarhouse1_inverter_controller_rate_transition9_output__out = _solarhouse1_inverter_controller_c_function3__Pref;
             // Generated from the component: SolarHouse2.Inverter.Controller.C function3
    
    _solarhouse2_inverter_controller_c_function3__Pref=0.2;if (_solarhouse2_inverter_controller_c_function3__k>12)_solarhouse2_inverter_controller_c_function3__k=0;if (_solarhouse2_inverter_controller_c_function3__t>3)_solarhouse2_inverter_controller_c_function3__t=0;if (_solarhouse2_inverter_controller_c_function3__k==0){_solarhouse2_inverter_controller_c_function3__Pref=0.7;}else if (_solarhouse2_inverter_controller_c_function3__k==1){_solarhouse2_inverter_controller_c_function3__Pref=0.8;}else if (_solarhouse2_inverter_controller_c_function3__k==2){_solarhouse2_inverter_controller_c_function3__Pref=0.6;}else if (_solarhouse2_inverter_controller_c_function3__k==3){_solarhouse2_inverter_controller_c_function3__Pref=0.5;}else if (_solarhouse2_inverter_controller_c_function3__k==4){_solarhouse2_inverter_controller_c_function3__Pref=0.2;}else if (_solarhouse2_inverter_controller_c_function3__k==5){_solarhouse2_inverter_controller_c_function3__Pref=0.8;}else if (_solarhouse2_inverter_controller_c_function3__k==6){_solarhouse2_inverter_controller_c_function3__Pref=0.7;}else if (_solarhouse2_inverter_controller_c_function3__k==7){_solarhouse2_inverter_controller_c_function3__Pref=0.5;}else if (_solarhouse2_inverter_controller_c_function3__k==8){_solarhouse2_inverter_controller_c_function3__Pref=0.66;}else if (_solarhouse2_inverter_controller_c_function3__k==9){_solarhouse2_inverter_controller_c_function3__Pref=0.75;}else if (_solarhouse2_inverter_controller_c_function3__k==10){_solarhouse2_inverter_controller_c_function3__Pref=0.54;}else if (_solarhouse2_inverter_controller_c_function3__k==11){_solarhouse2_inverter_controller_c_function3__Pref=0.30;}else if (_solarhouse2_inverter_controller_c_function3__k==12){_solarhouse2_inverter_controller_c_function3__Pref=0.45;}if (_solarhouse2_inverter_controller_c_function3__t>=3)_solarhouse2_inverter_controller_c_function3__k+=1;_solarhouse2_inverter_controller_c_function3__t+=1;

             // Generated from the component: SolarHouse2.Inverter.Controller.Gain23
                                _solarhouse2_inverter_controller_gain23__out = 1000.0 * _solarhouse2_inverter_controller_c_function3__Pref;
        
             // Generated from the component: SolarHouse2.Inverter.Controller.Rate Transition9.Input
    _solarhouse2_inverter_controller_rate_transition9_output__out = _solarhouse2_inverter_controller_c_function3__Pref;
             // Generated from the component: SolarHouse3.Inverter.Controller.C function3
    
    _solarhouse3_inverter_controller_c_function3__Pref=0.2;if (_solarhouse3_inverter_controller_c_function3__k>12)_solarhouse3_inverter_controller_c_function3__k=0;if (_solarhouse3_inverter_controller_c_function3__t>3)_solarhouse3_inverter_controller_c_function3__t=0;if (_solarhouse3_inverter_controller_c_function3__k==0){_solarhouse3_inverter_controller_c_function3__Pref=0.7;}else if (_solarhouse3_inverter_controller_c_function3__k==1){_solarhouse3_inverter_controller_c_function3__Pref=0.8;}else if (_solarhouse3_inverter_controller_c_function3__k==2){_solarhouse3_inverter_controller_c_function3__Pref=0.6;}else if (_solarhouse3_inverter_controller_c_function3__k==3){_solarhouse3_inverter_controller_c_function3__Pref=0.5;}else if (_solarhouse3_inverter_controller_c_function3__k==4){_solarhouse3_inverter_controller_c_function3__Pref=0.2;}else if (_solarhouse3_inverter_controller_c_function3__k==5){_solarhouse3_inverter_controller_c_function3__Pref=0.8;}else if (_solarhouse3_inverter_controller_c_function3__k==6){_solarhouse3_inverter_controller_c_function3__Pref=0.7;}else if (_solarhouse3_inverter_controller_c_function3__k==7){_solarhouse3_inverter_controller_c_function3__Pref=0.5;}else if (_solarhouse3_inverter_controller_c_function3__k==8){_solarhouse3_inverter_controller_c_function3__Pref=0.66;}else if (_solarhouse3_inverter_controller_c_function3__k==9){_solarhouse3_inverter_controller_c_function3__Pref=0.75;}else if (_solarhouse3_inverter_controller_c_function3__k==10){_solarhouse3_inverter_controller_c_function3__Pref=0.54;}else if (_solarhouse3_inverter_controller_c_function3__k==11){_solarhouse3_inverter_controller_c_function3__Pref=0.30;}else if (_solarhouse3_inverter_controller_c_function3__k==12){_solarhouse3_inverter_controller_c_function3__Pref=0.45;}if (_solarhouse3_inverter_controller_c_function3__t>=3)_solarhouse3_inverter_controller_c_function3__k+=1;_solarhouse3_inverter_controller_c_function3__t+=1;

             // Generated from the component: SolarHouse3.Inverter.Controller.Gain23
                                _solarhouse3_inverter_controller_gain23__out = 1000.0 * _solarhouse3_inverter_controller_c_function3__Pref;
        
             // Generated from the component: SolarHouse3.Inverter.Controller.Rate Transition9.Input
    _solarhouse3_inverter_controller_rate_transition9_output__out = _solarhouse3_inverter_controller_c_function3__Pref;
             // Generated from the component: SolarHouse4.Inverter.Controller.C function3
    
    _solarhouse4_inverter_controller_c_function3__Pref=0.2;if (_solarhouse4_inverter_controller_c_function3__k>12)_solarhouse4_inverter_controller_c_function3__k=0;if (_solarhouse4_inverter_controller_c_function3__t>3)_solarhouse4_inverter_controller_c_function3__t=0;if (_solarhouse4_inverter_controller_c_function3__k==0){_solarhouse4_inverter_controller_c_function3__Pref=0.7;}else if (_solarhouse4_inverter_controller_c_function3__k==1){_solarhouse4_inverter_controller_c_function3__Pref=0.8;}else if (_solarhouse4_inverter_controller_c_function3__k==2){_solarhouse4_inverter_controller_c_function3__Pref=0.6;}else if (_solarhouse4_inverter_controller_c_function3__k==3){_solarhouse4_inverter_controller_c_function3__Pref=0.5;}else if (_solarhouse4_inverter_controller_c_function3__k==4){_solarhouse4_inverter_controller_c_function3__Pref=0.2;}else if (_solarhouse4_inverter_controller_c_function3__k==5){_solarhouse4_inverter_controller_c_function3__Pref=0.8;}else if (_solarhouse4_inverter_controller_c_function3__k==6){_solarhouse4_inverter_controller_c_function3__Pref=0.7;}else if (_solarhouse4_inverter_controller_c_function3__k==7){_solarhouse4_inverter_controller_c_function3__Pref=0.5;}else if (_solarhouse4_inverter_controller_c_function3__k==8){_solarhouse4_inverter_controller_c_function3__Pref=0.66;}else if (_solarhouse4_inverter_controller_c_function3__k==9){_solarhouse4_inverter_controller_c_function3__Pref=0.75;}else if (_solarhouse4_inverter_controller_c_function3__k==10){_solarhouse4_inverter_controller_c_function3__Pref=0.54;}else if (_solarhouse4_inverter_controller_c_function3__k==11){_solarhouse4_inverter_controller_c_function3__Pref=0.30;}else if (_solarhouse4_inverter_controller_c_function3__k==12){_solarhouse4_inverter_controller_c_function3__Pref=0.45;}if (_solarhouse4_inverter_controller_c_function3__t>=3)_solarhouse4_inverter_controller_c_function3__k+=1;_solarhouse4_inverter_controller_c_function3__t+=1;

             // Generated from the component: SolarHouse4.Inverter.Controller.Gain23
                                _solarhouse4_inverter_controller_gain23__out = 1000.0 * _solarhouse4_inverter_controller_c_function3__Pref;
        
             // Generated from the component: SolarHouse4.Inverter.Controller.Rate Transition9.Input
    _solarhouse4_inverter_controller_rate_transition9_output__out = _solarhouse4_inverter_controller_c_function3__Pref;
             // Generated from the component: ESS.Modbus.Rate Transition3.Input
    _ess_modbus_rate_transition3_output__out = _ess_c_function3__time;
             // Generated from the component: ESS.Inverter.Controller.Pref
          HIL_OutAO(0x4016, (float)_ess_inverter_controller_gain23__out);
  
             // Generated from the component: SolarHouse1.Inverter.Controller.Pref
          HIL_OutAO(0x4031, (float)_solarhouse1_inverter_controller_gain23__out);
  
             // Generated from the component: SolarHouse2.Inverter.Controller.Pref
          HIL_OutAO(0x404b, (float)_solarhouse2_inverter_controller_gain23__out);
  
             // Generated from the component: SolarHouse3.Inverter.Controller.Pref
          HIL_OutAO(0x4065, (float)_solarhouse3_inverter_controller_gain23__out);
  
             // Generated from the component: SolarHouse4.Inverter.Controller.Pref
          HIL_OutAO(0x407f, (float)_solarhouse4_inverter_controller_gain23__out);
  
    //@cmp.out.block.end


    //////////////////////////////////////////////////////////////////////////
    // Update block
    //////////////////////////////////////////////////////////////////////////
    //@cmp.update.block.start
         // Generated from the component: ESS.C function3
    

             // Generated from the component: ESS.Inverter.Controller.C function3
    

                         // Generated from the component: SolarHouse1.Inverter.Controller.C function3
    

                     // Generated from the component: SolarHouse2.Inverter.Controller.C function3
    

                     // Generated from the component: SolarHouse3.Inverter.Controller.C function3
    

                     // Generated from the component: SolarHouse4.Inverter.Controller.C function3
    

                                        //@cmp.update.block.end
}
// ----------------------------------------------------------------------------------------
  //-----------------------------------------------------------------------------------------